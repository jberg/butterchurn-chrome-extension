!function(e,n){"object"==typeof exports&&"object"==typeof module?module.exports=n():"function"==typeof define&&define.amd?define("allButterchurnPresets",[],n):"object"==typeof exports?exports.allButterchurnPresets=n():e.allButterchurnPresets=n()}(self,(function(){return(()=>{var e={9713:e=>{e.exports=function(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}},2744:(e,n,a)=>{"use strict";a.r(n),a.d(n,{default:()=>b});var t=a(9713),s=a.n(t),_=a(6042),r=a(4226),m=a(5443),i=a(8506),v=a(7083),l=a(786);function p(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function o(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?p(Object(a),!0).forEach((function(n){s()(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):p(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}const b=o(o(o(o(o(o({},_.default),r.default),m.default),i.default),v.default),l.default)},6042:(e,n,a)=>{"use strict";a.d(n,{default:()=>s});var t={};t["_Aderrasi - Wanderer in Curved Space - mash0000 - faclempt kibitzing meshuggana schmaltz (Geiss color mix)"]=a(9047),t["_Geiss - Artifact 01"]=a(6415),t["_Geiss - Desert Rose 2"]=a(2565),t["_Geiss - untitled"]=a(8759),t._Mig_049=a(8843),t._Mig_085=a(2813),t["_Rovastar + Geiss - Hurricane Nightmare (Posterize Mix)"]=a(7905),t["$$$ Royal - Mashup (197)"]=a(5005),t["$$$ Royal - Mashup (220)"]=a(4514),t["$$$ Royal - Mashup (431)"]=a(9122),t["AdamFx 2 Geiss, Zylot and Flexi - Reaction Diffusion 3 (Overload Mix 2) EATIT4 hypno"]=a(2218),t["Aderrasi - Potion of Spirits"]=a(1330),t["Aderrasi - Storm of the Eye (Thunder) - mash0000 - quasi pseudo meta concentrics"]=a(720),t["Aderrasi + Geiss - Airhandler (Kali Mix) - Canvas Mix"]=a(3442),t["An AdamFX n Martin Infusion 2 flexi - Why The Sky Looks Diffrent Today - AdamFx n Martin Infusion - Tack Tile Disfunction B"]=a(5539),t["Cope - The Neverending Explosion of Red Liquid Fire"]=a(6555),t["cope + flexi - colorful marble (ghost mix)"]=a(2225),t["cope + martin - mother-of-pearl"]=a(1733),t["Eo.S. - glowsticks v2 05 and proton lights (+Krash′s beat code) _Phat_remix02b"]=a(7287),t["Eo.S. + Zylot - skylight (Stained Glass Majesty mix)"]=a(2159),t["fiShbRaiN + Flexi - witchcraft 2.0"]=a(8775),t["Flexi - alien fish pond"]=a(7554),t["Flexi - area 51"]=a(4419),t["flexi - bouncing balls [double mindblob neon mix]"]=a(4900),t["Flexi - infused with the spiral"]=a(3309),t["Flexi - mindblob [shiny mix]"]=a(3612),t["Flexi - mindblob mix"]=a(1279),t["flexi - mom, why the sky looks different today"]=a(5684),t["flexi - patternton, district of media, capitol of the united abstractions of fractopia"]=a(5236),t["Flexi - predator-prey-spirals"]=a(730),t["Flexi - smashing fractals [acid etching mix]"]=a(8218),t["flexi - swing out on the spiral"]=a(7125),t["Flexi - truly soft piece of software - this is generic texturing (Jelly) "]=a(9623),t["flexi - what is the matrix"]=a(8269),t["flexi + amandio c - organic [random mashup]"]=a(8075),t["flexi + amandio c - organic12-3d-2"]=a(2205),t["Flexi + amandio c - piercing 05 - Kopie (2) - Kopie"]=a(7785),t["flexi + fishbrain - neon mindblob grafitti"]=a(3389),t["flexi + geiss - pogo cubes vs. tokamak vs. game of life [stahls jelly 4.5 finish]"]=a(7216),t["Flexi + Martin - astral projection"]=a(8752),t["Flexi + Martin - cascading decay swing"]=a(15),t["Flexi + stahlregen - jelly showoff parade"]=a(7266),t["Flexi, fishbrain, Geiss + Martin - tokamak witchery"]=a(3472),t["Flexi, martin + geiss - dedicated to the sherwin maxawow"]=a(4841),t["Fumbling_Foo + En D & Martin - Mandelverse"]=a(2354),t["Geiss - Cauldron - painterly 2 (saturation remix)"]=a(2956),t["Geiss - Reaction Diffusion 2"]=a(1939),t["Geiss - Spiral Artifact"]=a(9728),t["Geiss - Thumb Drum"]=a(6848),t["Geiss + Flexi + Martin - disconnected"]=a(1444),t["Geiss, Flexi + Stahlregen - Thumbdrum Tokamak [crossfiring aftermath jelly mashup]"]=a(1547),t["Goody - The Wild Vort"]=a(3246),t["gunthry is out back bloodying up the pine trees - adm atomising (v) the disintigrate (n)"]=a(9581),t["Halfbreak - Funny Madness"]=a(7485),t["Halfbreak - Light of Breakers"]=a(376),t["Hexcollie, Pieturp, Orb, Flexi, Geiss n Demon Lord - Premeditative Urination Clause"]=a(5133),t["high-altitude basket unraveling - singh grooves nitrogen argon nz+"]=a(8391),t["LuxXx - Play v3 (the war within all of us)"]=a(320),t["Martin - acid wiring"]=a(378),t["martin - angel flight"]=a(7215),t["martin - another kind of groove"]=a(7500),t["martin - bombyx mori"]=a(8999),t["martin - castle in the air"]=a(5883),t["martin - chain breaker"]=a(5916),t["Martin - charisma"]=a(8180),t["martin - disco mix 4"]=a(3756),t["martin - extreme heat"]=a(1289),t["martin - frosty caves 2"]=a(6401),t["martin - fruit machine"]=a(7769),t["martin - glass corridor"]=a(4470),t["Martin - liquid arrows"]=a(2905),t["martin - mandelbox explorer - high speed demo version"]=a(5929),t["martin - mucus cervix"]=a(8248),t["martin - reflections on black tiles"]=a(4324),t["martin - stormy sea (2010 update)"]=a(5164),t["martin - The Bridge of Khazad-Dum"]=a(139),t["martin - witchcraft reloaded"]=a(5595),t["martin [shadow harlequins shape code] - fata morgana"]=a(1075),t["martin + flexi - diamond cutter [prismaticvortex.com] - camille - i wish i wish i wish i was constrained"]=a(7814),t["martin, flexi, fishbrain + sto - enterstate [random mashup]"]=a(2867),t["Milk Artist At our Best - FED - SlowFast Ft AdamFX n Martin - HD CosmoFX"]=a(3815),t["MilkDrop2077.R002"]=a(5717),t["MilkDrop2077.R033"]=a(5549),t["ORB - Waaa"]=a(5790),t["Phat+fiShbRaiN+Eo.S_Mandala_Chasers_remix"]=a(3476),t["Rovastar - Oozing Resistance"]=a(4254),t["Rovastar + Loadus + Geiss - FractalDrop (Triple Mix)"]=a(1738),t["sawtooth grin roam"]=a(4006),t["ShadowHarlequin - LovelyShinySquares [ liquid starburst rmx ] - unchained + rovaster - luckless - martin - starfield sector"]=a(984),t["shifter - dark tides bdrv mix 2"]=a(7855),t["shifter - escape (sigur ros)"]=a(187),t["shifter - liquid circuitry - conjugoth"]=a(7022),t["suksma - ed geining hateops - squeakers"]=a(4069),t["suksma - heretical crosscut playpen"]=a(1067),t["suksma - Hexcollie - Julian Carnival - shimmy dumb grid"]=a(231),t["suksma - Rovastar - Sunflower Passion (Enlightment Mix)_Phat_edit + flexi und martin shaders - circumflex in character classes in regular expression"]=a(5977),t["suksma - uninitialized variabowl (hydroponic chronic)"]=a(2897),t["suksma - vector exp 1 - couldn′t not"]=a(1958),t["TonyMilkdrop - Leonardo Da Vinci's Balloon [Flexi - merry-go-round + techstyle]"]=a(8492),t["TonyMilkdrop - Magellan's Nebula [Flexi - you enter first + multiverse]"]=a(4415),t["Unchained - Rewop"]=a(2158),t["Unchained - Unified Drag 2"]=a(48),t["yin - 191 - Temporal singularities"]=a(5171),t["yin - 393 - Artificial Inspiration (music driven - outward)"]=a(279),t["Zylot - Paint Spill (Music Reactive Paint Mix)"]=a(7927),t["Zylot - Star Ornament"]=a(103),t["Zylot - True Visionary (Final Mix)"]=a(5816);const s=t},4226:(e,n,a)=>{"use strict";a.d(n,{default:()=>s});var t={};t["_Eo.S. - glowsticks v2 02 - Geiss HPF"]=a(4923),t["_Flexi, martin + geiss - painterly rogue wave strike (color emboss mix)"]=a(4395),t["_Geiss - Artifact 03"]=a(7303),t._geiss_experimental__wavefronts=a(2246),t["_Krash + Eo.S. - Photographic Sentinel"]=a(6339),t._Mig_004_version2=a(5703),t._Mig_028=a(8334),t._Mig_079=a(1774),t._Mig_COLORFUL9=a(6304),t._Mig_Oscilloscope008=a(3834),t["$$$ Royal - Mashup (177)"]=a(9920),t["$$$ Royal - Mashup (273)"]=a(6590),t["$$$ Royal - Mashup (307)"]=a(359),t["$$$ Royal - Mashup (326)"]=a(7984),t["$$$ Royal - Mashup (417)"]=a(899),t["$$$ Royal - Mashup (441)"]=a(6629),t["$$$ Royal - Mashup (489)"]=a(7499),t[269]=a(6620),t[27]=a(367),t[286]=a(4438),t["AdamFX Mashup 2 Martin - reflections on black tile + Raron N Flexi "]=a(1613),t["Aderrasi - Airhandler (Last Breath - Calm)"]=a(4001),t["Aderrasi - Mother Of Pearl - mash0000 - how to piss off your eyes"]=a(3900),t["Aderrasi - Songflower (Moss Posy)"]=a(4386),t["Aderrasi - Veil of Steel (Steel Storm) - mash0000 - bob ross finally loses it"]=a(4355),t["Aderrasi + Geiss - Airhandler (Kali Mix) - Painterly Tendrils Colorfast"]=a(8449),t["bdrv - ultramix2 #43"]=a(7584),t["beta106i - Burning Form (Seething Mass) - mash0000 - fire paint easter egg internals"]=a(4212),t["Cope - Passage (mandala mix)"]=a(157),t["cope - strange attractor [flexis let it grow mix] (Jelly 5.56 [volume noise zoom-in])"]=a(2940),t["cope - the drain to heaven"]=a(5148),t["cope + geiss + stahlregen - cartune (bending gelatine mix)"]=a(694),t["cope, martin + flexi - the slickery of alternative varnish"]=a(1523),t["DemonLD_-_Toxic_water_diffusion threx angela vs debi brown (nice)"]=a(3308),t["Eo.S. - glowsticks v2 03 music"]=a(9570),t["Eo.S. + flexi - glowsticks v2 05 and proton lights (+Krash′s beat code) _Phat_remix02b + illumination (Stahl′s Mix)"]=a(2414),t["EoS - particle storm B - couldn't not"]=a(6244),t["EoS_Phat Dark_heart_nobal_cause cpe ap4+"]=a(6918),t["EVET - RGB Singularity"]=a(7945),t["EVET + Flexi - Rainbox Splash Poolz"]=a(5400),t["fed + flexi - tech test 2-1 - humpgorge"]=a(765),t["fed + flexi + geiss - tokamak repellor tech twist mix [stabilized]"]=a(5546),t["fiShbRaiN - toffee cream and icing sugar"]=a(7455),t["fishbrain + flexi - stitchcraft"]=a(8434),t["fiShbRaiN + geiss - witchcraft (Grow Mix 3)"]=a(4877),t["fiShbRaiN, flexi + martin - grafitti tagging witchcraft must be overrated - demonlord shaders - lampshade hubrys2"]=a(2958),t["flexi - alien canvas [learning]"]=a(274),t["Flexi - alien fader"]=a(9086),t["Flexi - alien web bouncer [26]"]=a(6168),t["flexi - bouncing balls [double mindblob gastrointestinal mix]"]=a(3897),t["Flexi - crush ice 72"]=a(425),t["Flexi - dimensions, projection and abstraction"]=a(1360),t["flexi - hyperspaceflight (bn cn Jelly 4)"]=a(4017),t["flexi - infused with the spiral (jelly 4.x cn)"]=a(8037),t["flexi - inter state"]=a(9994),t["flexi - jelly fish mandala"]=a(3386),t["flexi - Mindblob"]=a(8012),t["Flexi - piercing"]=a(1681),t["Flexi - predator-prey-spirals [stahlregens gelatine finish]"]=a(10),t["Flexi - psychenapping"]=a(7431),t["Flexi - smashing fractals 2.0"]=a(4977),t["flexi + amandio c - organic"]=a(8786),t["flexi + bdrv - acid etching (jelly v5.5)"]=a(9070),t["Flexi + fiShbRaiN - operation fatcap II"]=a(6481),t["flexi + fishbrain - witchcraft [complex terraforming - fiddling twists in the fabric of space]"]=a(5810),t["Flexi + Geiss - pogo-cubes on tokamak matter (Jelly 5.55)"]=a(4366),t["Flexi + Geiss - Tokamak mindblob 2.0"]=a(4708),t["Flexi, fishbrain + Martin - witchery"]=a(4199),t["Flexi, Geiss and Rovastar - chaos layered tokamak"]=a(7706),t["Flexi, martin + geiss - painterly rogue wave strike"]=a(5653),t["flexi, stahlregen, geiss + tobias wolfboi - space gelatine burst - mash0000 - chromatidal pool mirror blasphemy"]=a(4541),t["Fumbling_Foo & Flexi, Martin, Orb, Unchained - Star Nova v7b"]=a(1182),t["Geiss - 3 layers (Tunnel Mix)"]=a(4782),t["Geiss - Bipolar 2 Enhanced"]=a(2308),t["Geiss - Brain Zoom 4"]=a(3374),t["Geiss - Cauldron - painterly (saturation remix)"]=a(5371),t["Geiss - Color Pox (Acid Impression Mix) (color saturation remix)"]=a(5828),t["Geiss - Desert Rose 4"]=a(1956),t["Geiss - Explosion Mod 2bd (wave)"]=a(3046),t["Geiss - Game of Life 3"]=a(9768),t["Geiss - Myriad Mosaics"]=a(8402),t["Geiss - Planet 1"]=a(7986),t["Geiss - Reaction Diffusion (Puddle Mix)s a aa aa"]=a(1708),t["Geiss - Reaction Diffusion 3 (Lichen Mix)"]=a(3095),t["Geiss - Reaction Diffusion 3"]=a(2730),t["Geiss - Skin Dots Multi-layer 3"]=a(6320),t["Geiss - Tokamak Plus 2"]=a(6389),t["Geiss - Two-Pointed Pulsagon - mash0000 - bubonic super-fluid centrifuge"]=a(7586),t["Goody - Ego Decontructor"]=a(7792),t["Goody + flexi - Data Crusher"]=a(1120),t["goody + martin - crystal palace - schizotoxin - the wild iris bloom - 16 iterations"]=a(1019),t["GreatWho - Lasershow"]=a(3498),t["Idiot - Star Of Annon"]=a(6095),t["Illusion & Rovastar - Dotty Mad Space (Jelly)"]=a(3345),t["Isosceles mashup07"]=a(2460),t["it is the night of the demon weed bowel"]=a(7731),t["Krash + Illusion - Spiral Movement"]=a(2155),t["martin - baby one more time"]=a(1687),t["martin - bombyx mori [flexi′s logarithmic edit]"]=a(1154),t["Martin - bombyx mori mix2"]=a(8031),t["martin - bring up the big guns"]=a(3807),t["martin - cherry brain wall mod"]=a(9890),t["martin - city of shadows"]=a(7110),t["martin - cope - laser dome"]=a(5577),t["martin - crystal palace"]=a(2686),t["Martin - Diabolo"]=a(1659),t["Martin - disco mix 3 -fast"]=a(1618),t["Martin - disco mix 6"]=a(6378),t["martin - elusive impressions mix2 - flacc mess proph nz+2"]=a(5832),t["martin - Flexis swarm in Martins pond [not yet a boid implementation] "]=a(7547),t["martin - gate to moria"]=a(2691),t["martin - ghost city"]=a(4990),t["martin - glassball dance"]=a(3555),t["martin - ice flames"]=a(4185),t["martin - infinity (2010 update)"]=a(4144),t["martin - into the fireworks"]=a(4468),t["Martin - journey into space"]=a(9556),t["martin - ludicrous speed"]=a(9851),t["martin - move this body"]=a(4926),t["martin - neon space ps2 (ati fix) - yaqui graph - flx food"]=a(7667),t["Martin - QBikal - Surface Turbulence IIb"]=a(7011),t["martin - resonant twister - steel spring"]=a(357),t["martin - rogue wave -ps3"]=a(8341),t["martin - satellite view"]=a(8851),t["martin - the bridge of khazad-dum [flexi's growth raised to the power of transcendence mix]"]=a(8517),t["martin - tunnel race"]=a(1942),t["martin + stahlregen - martin in da mash 12"]=a(1258),t["martin + stahlregen - martin in da mash 12a"]=a(294),t["martin + stahlregen - martin in da mash 14"]=a(7467),t["martin + stahlregen - martin in da mash 3"]=a(7095),t["martin, fishbrain + flexi - mandelbox explorer v1 Eo.S. optimize [bipolar witchcraft mix]"]=a(7830),t["MilkDrop2077.R012"]=a(7518),t["one-sided infinite-dimensional shape - helenisch"]=a(3656),t["ORB - Magma Pool"]=a(2471),t["ORB - Pastel Primer"]=a(3072),t["orb - toxic goo"]=a(2756),t["PieturP - triptrap_(ultimate-trip-mix)"]=a(6311),t["raron - a grayish blob - mash0000 - pungent gastric automata cloud fumes"]=a(5771),t["rce-ordinary + flexi - far away distance (custom beat detection + bipolar colour ghost mix)"]=a(6134),t["Redi Jedi - i dont think those were portabello mushrooms"]=a(2393),t["Rocke - Answer.42 (New Mix 1) - mash0000 - slash and char p. jungle"]=a(313),t["Rovastar - Explosive Minds"]=a(3687),t["Rovastar - Trippy Sperm (Jelly)"]=a(1456),t["Rovastar + Che - Asylum Animations"]=a(209),t["Rovastar + Flexi - Hurricane Nightmare (Moebius Mix)"]=a(6647),t["Rovastar + Geiss - Hurricane Nightmare (Relief Mix)"]=a(6982),t["Rovastar + Geiss - Hurricane Nightmare"]=a(3353),t["Rovastar + Geiss - Hyperkaleidoscope Glow 2 motion blur (Jelly)"]=a(2220),t["Rovastar + Geiss - Snapshot Of Space (LSB mix)"]=a(3444),t["Rovastar + Loadus + Geiss - Tone-mapped FractalDrop 7c"]=a(5744),t["Rovastar + Telek - Altars of Madness (Rolling Oceans Mix)"]=a(6577),t["Rovastar-altarsofmadness(forgottenrea"]=a(2768),t["sawtooth grin nz+ m10 w4"]=a(6569),t["shifter - dark tides bdrv mix"]=a(3693),t["shifter - escape the worm - Eo.S. + Phat - Before_It_Eats_Your_Brain_Mix_v2"]=a(8861),t["shifter - feathers (angel wings)_phat_remix relief 2"]=a(1979),t["shifter - fire and brimstone"]=a(5630),t["shifter + flexi - american oblivion pie"]=a(752),t["shut down all survival paradigms"]=a(2090),t["stahlregen - dots (layered) - suksma world humanvirus replication killphreqs mix"]=a(6984),t["Stahlregen & Boz - Machine Code (Reaction Diffusion)_1 - Isosceles Tweak 08"]=a(555),t["Stahlregen & Boz + Eo.S + Geiss + Phat + Rovastar + Zylot - Machine Code [Jelly]"]=a(5087),t["stahlregen & geiss + rovastar - fields of flowers (mashup 9 - space flower rmx) - mash0001 - pack em in, we got a long haul + flashlight"]=a(576),t["Stahlregen + martin + others - Psychedelic Metal Flower"]=a(5274),t["suksma - ed geining hateops - flx i want you, i'm sick with you"]=a(5732),t["suksma - feign shoulder concern when i should be executed - everything is eternally shrinking"]=a(9160),t["suksma - gaeomaentaec - log smell 2 - steaming wienies2"]=a(6149),t["suksma - grainery clock mortis"]=a(1232),t["suksma - nip tuck"]=a(1391),t["suksma - pus on my cat - j4+ - cubby"]=a(8083),t["suksma - water cooled red uranium vs dotes - freeenergynow.net"]=a(4481),t["The NG + Flexi + BDRV - Ultramix, Aderrasi + Flexi - Predator Prey Spirals, Flexi - Jellyfish Jam"]=a(9835),t["TonyMilkdrop - Magellan's Nebula [Flexi - fancy + $this shall not retain]"]=a(5127),t["Unchained - Making a Science of It 4"]=a(1888),t["Unchained & Rovastar - Wormhole Pillars (Hall of Shadows mix)"]=a(7849),t["undulate harque - shit broo"]=a(8313),t["va ultramix - 154 [chaos]"]=a(3186),t["Waltra - Cosmic Wind"]=a(1815),t["Waltra - Ice Plasma"]=a(13),t["Waltra - Square Orgy"]=a(2931),t["yin - 190 - Temporal fluctuations"]=a(2628),t["yin - 250 - Artificial poles of the continuum_Phat′s_Orbit_mix"]=a(7748),t["yin - 253 - Artificial poles of the continuum (remix #3)"]=a(7530),t["yin - 315 - Ocean of Light (yo im peakin yo Eo.S.-Phat)"]=a(8310),t["yin - 352 - Chromatron (warped)"]=a(7292),t["Zylot - In death there is life (Geiss Layered Mix)"]=a(4523);const s=t},5443:(e,n,a)=>{"use strict";a.d(n,{default:()=>s});var t={};t["_Geiss - Brain Zoom 3 (Color Emboss Mix)"]=a(9088),t["_Geiss - Explosion Mod 2b"]=a(7828),t._Mig_009=a(4716),t._Mig_014_version2=a(2585),t._Mig_039=a(7472),t._Mig_056=a(4654),t["_Vovan + Geiss - Bass With Flover (Feedback Mix) 2"]=a(7185),t["$$$ Royal - Mashup (157)"]=a(2417),t["$$$ Royal - Mashup (160)"]=a(2147),t["$$$ Royal - Mashup (253)"]=a(9051),t["$$$ Royal - Mashup (337)"]=a(9252),t[11]=a(4792),t[158]=a(4789),t[444]=a(712),t["A Tribute to Martin - bombyx mori - Ft Flexi - AdamFX - StahlRegen - Krash - Rovastar -  Hd in Milk T"]=a(5830),t["adam eatit fx 2 martin - disco mix, lodus, geiss, ludicrous speed,flexi, aderrasi n hexcollie"]=a(6246),t["Adam Eatit Mashup FX 2 martin - disco mix + Lodus + Geiss + Ludicrous speed + Aderrasi 2_1"]=a(9935),t["Adam Eatit Mashup FX 2 martin - disco mix + Lodus + Geiss + Ludicrous speed + Baked Ft another AdamFX Mashup 7_1"]=a(6545),t["Adam Eatit Mashup FX 2 martin - disco mix + Lodus + Geiss + Ludicrous speed + Eos Ft Flexi n Hexocollie + Baked + Santa Fucking Claus"]=a(7077),t["AdamFx 2 Aderrasi - Airhandler (Last Breath - Calm)Ilusional Discontent2"]=a(1007),t["AdamFx 2 Geiss -Somewhat Distort Me 3_1"]=a(4477),t["AdamFx 2 Geiss, Zylot and Flexi - Reaction Diffusion 3 (Overload Mix 2) EATIT4 (BCCNJ4)"]=a(5713),t["AdamFX Enterz Tha Mash With Martin + stahlregen - AdamFX - In Tha Mash Effectz E"]=a(9313),t["Aderrasi - Agitator"]=a(6075),t["Aderrasi - Airhandler (Principle of Sharing)"]=a(2998),t["Aderrasi - Contortion (Escher′s Tunnel Mix)"]=a(2339),t["Aderrasi - Curse of the Mirror Emu"]=a(7059),t["Aderrasi - Graft (First Rate Heart)"]=a(4301),t["Aderrasi + Geiss - Airhandler (Square Mix)"]=a(7050),t["afro-legionican"]=a(1886),t["amandio c - salty bits - 5 nz+ jealiousea"]=a(7469),t["baked - River of Illusion Dillusion [Bubble]"]=a(4338),t["beta106at shape - mash0000 - hulk spirit cum"]=a(82),t["beta106i - Brilliance (Space-Time Breaking) - mash0000 - it′s 2009 and you haven′t replaced your analog tv with digital"]=a(998),t["beta106i - Inhuman Emotion (Regret) - mash0000 - genetic mutant incubators in the hands of toddlers"]=a(5573),t["beta106i - Potion of Ink"]=a(1846),t["cope - alternative energy (antimatter mod_1)4z"]=a(5218),t["cope - digital sea"]=a(7652),t["cope - soar (v2.0)"]=a(2834),t["cope + flexi - mother-of-whirl [no fnords were hurt]"]=a(2279),t["ech0 - liquid firesticks I"]=a(92),t["Eo.S. - spark C_Phat_Jester_Mix_v2"]=a(3128),t["Eo.S. + Geiss - glowsticks v2 02 (Relief Mix)"]=a(4997),t["Eo.S. + Phat - cubetrace - v2"]=a(9645),t["Eo.S. + Phat - Emergent factors"]=a(4167),t["Eo.S. + Phat cubetrace (cybercity madness remix) - mash0000 - evaporating crystal pharma"]=a(3507),t["ethical rotterdamasm"]=a(7958),t["fed - glowing 5 - fingers rmx nz+ round squarishness"]=a(1490),t["fed - slowfast 1.1"]=a(5737),t["fiShbRaiN - breakfast cruiser"]=a(9024),t["fiShbRaiN - the adventures of prismo jenkins"]=a(6753),t["fiShbRaiN - witchcraft (necromancer remix)_phat_edit_v3"]=a(4542),t["fiShbRaiN + flexi - witchcraft 2.0 - mash0000 - no one cares about mi, the note (major third)"]=a(3863),t["Flexi - blame hexcollie twice"]=a(3057),t["flexi - borderline imagery"]=a(4143),t["flexi - bouncing balls [illumination mix]"]=a(2030),t["flexi - bouncing balls [mindblob terraforming] flx roams domikleasing undergraeduhate"]=a(6998),t["flexi - color strike"]=a(1229),t["flexi - grind my glitch up [190]"]=a(8685),t["flexi - meta4free"]=a(9450),t["Flexi - mindblob 2.0"]=a(4629),t["Flexi - reality tunnel"]=a(331),t["flexi - splatter effects 17 the wave, a google love story written in decay roam3-2 "]=a(7425),t["Flexi - the distant point between derivative"]=a(933),t["Flexi - wild at range"]=a(3397),t["flexi + fishbrain - warpcraft [random mashup]"]=a(7296),t["flexi + fishbrain - witchcraft [complex terraforming]"]=a(9146),t["flexi + geiss - infused with the spiral (Heavy Oil Mix) nz+ rapery"]=a(9867),t["flexi + geiss - pogo-cubes on tokamak matter (bccn Jelly V4)"]=a(4559),t["flexi + geiss - pogo-cubes on tokamak matter [mind over matter remix]2"]=a(1705),t["Flexi + Geiss + Demon Lord - unholy tokamak clot-plot"]=a(8766),t["Flexi + Martin - dive"]=a(6643),t["Flexi + Martin - tunnel of supraschismatika"]=a(4495),t["flexi + nitorami - beat explorer (cn bc jelly 4)"]=a(7027),t["Flexi + Rovastar - Fractopia [lovecraft]"]=a(6110),t["flexi + stahlregen - jelly strike"]=a(699),t["flexi, geiss and rovastar - chaos layered sinewsed tokamak 2"]=a(7687),t["Flexi, Martin, Phat, Zylot + Eo.S - one way trip trap proof of concept [epileptic zoom tunnel edit]"]=a(4636),t["Flexi, Rovastar + Geiss - Fractopia vs bas relief"]=a(3286),t["Geiss - Feedback 2"]=a(9864),t["Geiss - Reaction Diffusion (Relief Mix)"]=a(5212),t["Geiss - Skin Dots 9"]=a(4571),t["Hexcollie - Cell division"]=a(6028),t["Hexcollie - Nautalisk - mash0000 - but officer, my fingerprint always changes"]=a(6743),t["Ishan - Anuera"]=a(1723),t["Krash - War Machine (Shifting Complexity Mix)"]=a(9309),t["Krash & Rovastar - A Million Miles from Earth (Ripple Mix)"]=a(8465),t["Krash + Illusion + Geiss - Spiral Movement (Reaction Diffusion mix)"]=a(7602),t["LuxXx - Fuck Your Code ii"]=a(7653),t["LuxXx - GrindFace  225 mg dose  "]=a(6913),t["LuxXx - iWhat Happened Right After I Ate That Toxic Waste beta ii"]=a(1392),t["LuxXx - Subtle HipHopFlake"]=a(6104),t["martin - amandio c - a different view of the green machine"]=a(5768),t["martin - attack of the beast"]=a(9006),t["martin - basal ganglion"]=a(9442),t["martin - carpet weaver"]=a(2714),t["Martin - cool morning"]=a(75),t["martin - crystal alley"]=a(4431),t["martin - dark galaxy"]=a(7122),t["martin - glass corridor nz2 incline"]=a(159),t["martin - shifter - armorial bearings of robotopia"]=a(3324),t["martin - skywards"]=a(3496),t["martin - soma in pink"]=a(5584),t["martin - sparky caleidoscope"]=a(3785),t["martin - starfield sectors"]=a(340),t["martin - sunset over the river"]=a(9069),t["martin - the forge of Isengard"]=a(1656),t["martin - unholy amulet 2"]=a(5677),t["martin - violet flash"]=a(2571),t["Martin N AdamFX Infusion = Phat+Yin+Eo.S_Mandala Chaser Ft AdamFX n Martin - The Beast Mandala Chaser FX H"]=a(6790),t["MilkDrop2077.R037"]=a(8074),t["never suggest things roam glance at sun for galactic upgrade"]=a(1148),t["NeW Adam Master Mashup FX 2 Geiss - Reaction Diffusion 34 + Swelling Spiral  + Liquid Fire  + Geiss an46"]=a(4999),t["NeW Adam Master Mashup FX 2 Geiss and Zylot - Reaction Diffusion 3 (Overload Mix 2) AMAZING MASUP Various + Hurricane Nightmare"]=a(4839),t["orb - acid cycle [flexi shader mix] - yaqui graph"]=a(1128),t["ORB - Blue Emotion"]=a(3261),t["ORB - Depth Charge 2"]=a(3237),t["ORB - Fire and Fumes 2"]=a(5072),t["ORB - Lazer Ride"]=a(9880),t["ORB - Planetary Alignment Acid Burn"]=a(4381),t["ORB - Sandblade"]=a(707),t["ORB - Solar Radiation"]=a(3571),t["Phat + Zylot + Eo.S. - work with lines"]=a(262),t["Phat_Zylot_Eo.S. spiral_Movements_Beatle"]=a(5254),t["repressed americans - massive cheese lard nz+ redkneck treads"]=a(4931),t["Rovastar - A Million Miles From Earth (Wormhole Mix)"]=a(7294),t["Rovastar - Harlequin′s Fractal Encounter - cancer of saints"]=a(9190),t["Rovastar - Torrid Tales"]=a(358),t["Rovastar + Fvese - Mosaic Waves"]=a(2458),t["Rovastar + Geiss - Hurricane Nightmare (Gold Chrome Mix)"]=a(2119),t["Rovastar + Geiss - Hyperspace - kaleidoscope"]=a(554),t["Rozzor & Shreyas - Deeper Aesthetics"]=a(4467),t["shifter - fuzzball 3d (glasses) false auralary2 undre thee bottom qoaguluste"]=a(9111),t["Stahlregen - Dots (Pixels - Blocky) (Jelly V2)"]=a(609),t["stahlregen - old school, baby (spiral ornament)"]=a(8954),t["Stahlregen & flexi + Geiss + Rovastar + Shifter - Fractal Feedback (for Hexcollie)"]=a(2726),t["stahlregen + geiss + shifter - babylon"]=a(1049),t["suksma - barium titanate"]=a(9119),t["suksma - coal drapes - mrt fsh gordo dog crap in my bed cuz i sleep wid my shoes on"]=a(8051),t["suksma - diploautomatic autoimmunity vs passivematic aggpressive - troll"]=a(7614),t["suksma - youtube PQsWLhvuKk8 - waving goodbye to earth"]=a(6323),t["Telek - City Helix Lattice"]=a(7001),t["Telek - Sine Wave"]=a(5899),t["Unchained - All You Can Eat"]=a(772),t["Unchained - Fuzzy Sciences"]=a(6278),t["various artists - 1200774354134 - mash0000 - what the writer′s guild is doing with the extra money"]=a(4745),t["Waltra - Heaven Liquid"]=a(6457),t["xtramartin (849)"]=a(8805),t["Zylot - Crossing Over (Paint Spatter mix)"]=a(794),t["Zylot - In death there is life (Geiss Layered Mix) (Jelly)"]=a(7598),t["Zylot - True Visionary"]=a(629);const s=t},8506:(e,n,a)=>{"use strict";a.d(n,{default:()=>s});var t={};t["Aderrasi - Agitator"]=a(6075),t["Aderrasi - Airhandler (Last Breath - Calm)"]=a(4001),t["Aderrasi - Contortion (Escher′s Tunnel Mix)"]=a(2339),t["Aderrasi - Contortion (Wide Twist Mix)"]=a(275),t["Aderrasi - Curse of the Mirror Emu"]=a(7059),t["Aderrasi - Halls Of Centrifuge"]=a(6724),t["Aderrasi - Potion of Spirits"]=a(1330),t["Aderrasi - Songflower (Moss Posy)"]=a(4386),t["amandio c - feeling well 3"]=a(3540),t["amandio c - flashy thing"]=a(985),t["amandio c - salty beats - spiral"]=a(4543),t["baked - Chinese Fingerbang (cao ni ma =]) - PieturP colors - Bitcore speed tweak"]=a(1644),t["baked - mushroom rainbows[acid Storm]"]=a(6767),t["baked - River of Illusion Dillusion [Bubble]"]=a(4338),t["bdrv + al shifter - feathers (angel wings)_phat_remix4 bdrv et  AL  rmxmix bdrv et.AL5"]=a(1123),t["bdrv - ultramix2 #43"]=a(7584),t["beta106i - Potion of Ink"]=a(1846),t["Eo.S. + Phat - cubetrace - v2"]=a(9645),t["Eo.S. + Phat - Emergent factors"]=a(4167),t["Eo.S. + Zylot - skylight (Stained Glass Majesty mix)"]=a(2159),t["Eo.S. - glowsticks v2 03 music"]=a(9570),t["Eo.S. - glowsticks v2 05 and proton lights (+Krash′s beat code) _Phat_remix02b"]=a(7287),t["Eo.S. - glowsticks v2 05 and proton lights (+Krash′s beat code) _Phat_remix07 recursive demons"]=a(7804),t["Eo.S. - multisphere 01 B_Phat_Ra_mix"]=a(2821),t["Eo.S. - spark C_Phat_Jester_Mix_v2"]=a(3128),t["fiShbRaiN - a quiet death"]=a(5484),t["fiShbRaiN - breakfast cruiser"]=a(9024),t["fiShbRaiN - the adventures of prismo jenkins"]=a(6753),t["fiShbRaiN - toffee cream and icing sugar"]=a(7455),t["fiShbRaiN - witchcraft (necromancer remix)_phat_edit_v3"]=a(4542),t["Geiss + Rovastar - Notions Of Tonality 2"]=a(6411),t["Geiss - Eggs"]=a(4228),t["Geiss - El Cubismo"]=a(2655),t["Geiss - Feedback 2"]=a(9864),t["Geiss - Hurricane"]=a(3682),t["Geiss - Planet 1"]=a(7986),t["GreatWho - Lasershow"]=a(3498),t["Idiot - Marphets Surreal Dream (Hypnotic Spiral Mix)"]=a(8264),t["Idiot - Star Of Annon"]=a(6095),t["iMuS and  Rovastar - The Shroomery (psilobellum)"]=a(7834),t["Ishan - Anuera"]=a(1723),t["Krash & Rovastar - A Million Miles from Earth (Ripple Mix)"]=a(8465),t["Krash + Illusion - Spiral Movement"]=a(2155),t["Krash - War Machine (Shifting Complexity Mix)"]=a(9309),t["ORB - Blue Emotion"]=a(3261),t["ORB - Fire and Fumes 2"]=a(5072),t["ORB - Solar Radiation"]=a(3571),t["phat + Eo.S. - Bass_responce_Red_Movements_Disorienting nebula3"]=a(863),t["Phat + Zylot + Eo.S. - work with lines"]=a(262),t["Phat+fiShbRaiN+Eo.S_Mandala_Chasers_remix"]=a(3476),t["Phat_Zylot_Eo.S. spiral_Movements_Beatle"]=a(5254),t["Phat_Zylot_Eo.S. square_faces_v2_alt_colours"]=a(3167),t["PieturP - triptrap_(getting_concrete_visions_through_a_diafragma_version)"]=a(5618),t["PieturP - triptrap_(ultimate-trip-mix)"]=a(6311),t["Redi Jedi - i dont think those were portabello mushrooms"]=a(2393),t["Rovastar & Idiot24-7 - Balk Acid"]=a(3259),t["Rovastar & Loadus + Zylot - FractalDrop (Spark Machine v2.0)"]=a(284),t["Rovastar + Che - Asylum Animations"]=a(209),t["Rovastar + Fvese - Mosaic Waves"]=a(2458),t["Rovastar + Geiss - Hurricane Nightmare"]=a(3353),t["Rovastar + Telek - Altars of Madness (Rolling Oceans Mix)"]=a(6577),t["Rovastar - A Million Miles From Earth (Wormhole Mix)"]=a(7294),t["Rovastar - Explosive Minds"]=a(3687),t["Rovastar - Hyperspace"]=a(2423),t["Rovastar - Oozing Resistance"]=a(4254),t["Rovastar - Torrid Tales"]=a(358),t["Rovastar-altarsofmadness(forgottenrea"]=a(2768),t["Rozzor & Shreyas - Deeper Aesthetics"]=a(4467),t["shifter - escape the worm - Eo.S. + Phat - Before_It_Eats_Your_Brain_Mix_v2"]=a(8861),t["shifter - feathers (angel wings)"]=a(1668),t["shifter - fractal grinder"]=a(9693),t["stahlregen - old school, baby (spiral ornament)"]=a(8954),t["Studio Music and Unchained - Rapid Alteration"]=a(8729),t["TEcHNO & SandStorm - Psychodelic Highway"]=a(9523),t["Telek - City Helix Lattice"]=a(7001),t["Telek - Sine Wave"]=a(5899),t["Unchained & Rovastar - Wormhole Pillars (Hall of Shadows mix)"]=a(7849),t["Unchained - All You Can Eat"]=a(772),t["Unchained - Fuzzy Sciences"]=a(6278),t["Unchained - Making a Science of It 4"]=a(1888),t["Unchained - Making a Science of It 7"]=a(5014),t["Unchained - Rewop"]=a(2158),t["Unchained - Unified Drag 2"]=a(48),t["yin - 190 - Temporal fluctuations"]=a(2628),t["yin - 191 - Temporal singularities"]=a(5171),t["yin - 250 - Artificial poles of the continuum_Phat′s_Orbit_mix"]=a(7748),t["Zylot - Star Ornament"]=a(103);const s=t},7083:(e,n,a)=>{"use strict";a.d(n,{default:()=>s});var t={};t["_Aderrasi - Wanderer in Curved Space - mash0000 - faclempt kibitzing meshuggana schmaltz (Geiss color mix)"]=a(9047),t._Mig_085=a(2813),t["$$$ Royal - Mashup (197)"]=a(5005),t["$$$ Royal - Mashup (431)"]=a(9122),t["An AdamFX n Martin Infusion 2 flexi - Why The Sky Looks Diffrent Today - AdamFx n Martin Infusion - Tack Tile Disfunction B"]=a(5539),t["Flexi - alien fish pond"]=a(7554),t["flexi - bouncing balls [double mindblob neon mix]"]=a(4900),t["Flexi - mindblob [shiny mix]"]=a(3612),t["Flexi, fishbrain, Geiss + Martin - tokamak witchery"]=a(3472),t["Flexi, martin + geiss - dedicated to the sherwin maxawow"]=a(4841),t["Geiss - Cauldron - painterly 2 (saturation remix)"]=a(2956),t["Geiss - Reaction Diffusion 2"]=a(1939),t["Geiss - Thumb Drum"]=a(6848),t["Halfbreak - Funny Madness"]=a(7485),t["Martin - acid wiring"]=a(378),t["martin - chain breaker"]=a(5916),t["martin - extreme heat"]=a(1289),t["martin - mandelbox explorer - high speed demo version"]=a(5929),t["martin - reflections on black tiles"]=a(4324),t["martin - witchcraft reloaded"]=a(5595),t["martin [shadow harlequins shape code] - fata morgana"]=a(1075),t["Milk Artist At our Best - FED - SlowFast Ft AdamFX n Martin - HD CosmoFX"]=a(3815),t["MilkDrop2077.R002"]=a(5717),t["ShadowHarlequin - LovelyShinySquares [ liquid starburst rmx ] - unchained + rovaster - luckless - martin - starfield sector"]=a(984),t["shifter - liquid circuitry - conjugoth"]=a(7022),t["suksma - uninitialized variabowl (hydroponic chronic)"]=a(2897),t["Unchained - Rewop"]=a(2158),t["yin - 191 - Temporal singularities"]=a(5171),t["Zylot - Paint Spill (Music Reactive Paint Mix)"]=a(7927);const s=t},786:(e,n,a)=>{"use strict";a.d(n,{default:()=>s});var t={};t["_Geiss - Artifact 01"]=a(6415),t["_Geiss - Desert Rose 2"]=a(2565),t["_Geiss - untitled"]=a(8759),t._Mig_049=a(8843),t["_Rovastar + Geiss - Hurricane Nightmare (Posterize Mix)"]=a(7905),t["$$$ Royal - Mashup (220)"]=a(4514),t["AdamFx 2 Geiss, Zylot and Flexi - Reaction Diffusion 3 (Overload Mix 2) EATIT4 hypno"]=a(2218),t["Aderrasi - Potion of Spirits"]=a(1330),t["Aderrasi - Storm of the Eye (Thunder) - mash0000 - quasi pseudo meta concentrics"]=a(720),t["Aderrasi + Geiss - Airhandler (Kali Mix) - Canvas Mix"]=a(3442),t["Cope - The Neverending Explosion of Red Liquid Fire"]=a(6555),t["cope + flexi - colorful marble (ghost mix)"]=a(2225),t["cope + martin - mother-of-pearl"]=a(1733),t["Eo.S. - glowsticks v2 05 and proton lights (+Krash′s beat code) _Phat_remix02b"]=a(7287),t["Eo.S. + Zylot - skylight (Stained Glass Majesty mix)"]=a(2159),t["fiShbRaiN + Flexi - witchcraft 2.0"]=a(8775),t["Flexi - area 51"]=a(4419),t["Flexi - infused with the spiral"]=a(3309),t["Flexi - mindblob mix"]=a(1279),t["flexi - mom, why the sky looks different today"]=a(5684),t["flexi - patternton, district of media, capitol of the united abstractions of fractopia"]=a(5236),t["Flexi - predator-prey-spirals"]=a(730),t["Flexi - smashing fractals [acid etching mix]"]=a(8218),t["flexi - swing out on the spiral"]=a(7125),t["Flexi - truly soft piece of software - this is generic texturing (Jelly) "]=a(9623),t["flexi - what is the matrix"]=a(8269),t["flexi + amandio c - organic [random mashup]"]=a(8075),t["flexi + amandio c - organic12-3d-2"]=a(2205),t["Flexi + amandio c - piercing 05 - Kopie (2) - Kopie"]=a(7785),t["flexi + fishbrain - neon mindblob grafitti"]=a(3389),t["flexi + geiss - pogo cubes vs. tokamak vs. game of life [stahls jelly 4.5 finish]"]=a(7216),t["Flexi + Martin - astral projection"]=a(8752),t["Flexi + Martin - cascading decay swing"]=a(15),t["Flexi + stahlregen - jelly showoff parade"]=a(7266),t["Fumbling_Foo + En D & Martin - Mandelverse"]=a(2354),t["Geiss - Spiral Artifact"]=a(9728),t["Geiss + Flexi + Martin - disconnected"]=a(1444),t["Geiss, Flexi + Stahlregen - Thumbdrum Tokamak [crossfiring aftermath jelly mashup]"]=a(1547),t["Goody - The Wild Vort"]=a(3246),t["gunthry is out back bloodying up the pine trees - adm atomising (v) the disintigrate (n)"]=a(9581),t["Halfbreak - Light of Breakers"]=a(376),t["Hexcollie, Pieturp, Orb, Flexi, Geiss n Demon Lord - Premeditative Urination Clause"]=a(5133),t["high-altitude basket unraveling - singh grooves nitrogen argon nz+"]=a(8391),t["LuxXx - Play v3 (the war within all of us)"]=a(320),t["martin - angel flight"]=a(7215),t["martin - another kind of groove"]=a(7500),t["martin - bombyx mori"]=a(8999),t["martin - castle in the air"]=a(5883),t["Martin - charisma"]=a(8180),t["martin - disco mix 4"]=a(3756),t["martin - frosty caves 2"]=a(6401),t["martin - fruit machine"]=a(7769),t["martin - glass corridor"]=a(4470),t["Martin - liquid arrows"]=a(2905),t["martin - mucus cervix"]=a(8248),t["martin - stormy sea (2010 update)"]=a(5164),t["martin - The Bridge of Khazad-Dum"]=a(139),t["martin + flexi - diamond cutter [prismaticvortex.com] - camille - i wish i wish i wish i was constrained"]=a(7814),t["martin, flexi, fishbrain + sto - enterstate [random mashup]"]=a(2867),t["MilkDrop2077.R033"]=a(5549),t["ORB - Waaa"]=a(5790),t["Phat+fiShbRaiN+Eo.S_Mandala_Chasers_remix"]=a(3476),t["Rovastar - Oozing Resistance"]=a(4254),t["Rovastar + Loadus + Geiss - FractalDrop (Triple Mix)"]=a(1738),t["sawtooth grin roam"]=a(4006),t["shifter - dark tides bdrv mix 2"]=a(7855),t["shifter - escape (sigur ros)"]=a(187),t["suksma - ed geining hateops - squeakers"]=a(4069),t["suksma - heretical crosscut playpen"]=a(1067),t["suksma - Hexcollie - Julian Carnival - shimmy dumb grid"]=a(231),t["suksma - Rovastar - Sunflower Passion (Enlightment Mix)_Phat_edit + flexi und martin shaders - circumflex in character classes in regular expression"]=a(5977),t["suksma - vector exp 1 - couldn′t not"]=a(1958),t["TonyMilkdrop - Leonardo Da Vinci's Balloon [Flexi - merry-go-round + techstyle]"]=a(8492),t["TonyMilkdrop - Magellan's Nebula [Flexi - you enter first + multiverse]"]=a(4415),t["Unchained - Unified Drag 2"]=a(48),t["yin - 393 - Artificial Inspiration (music driven - outward)"]=a(279),t["Zylot - Star Ornament"]=a(103),t["Zylot - True Visionary (Final Mix)"]=a(5816);const s=t},2417:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1,"decay":1,"modwavealphabyvolume":1,"wave_a":0.207,"wave_scale":0.397,"wave_smoothing":0,"wave_mystery":0.24,"modwavealphaend":1.17,"warpscale":2.853,"zoomexp":0.99983,"zoom":0.99752,"warp":0.01565,"ob_size":0,"mv_x":64,"mv_y":48,"mv_l":0,"mv_r":0.35,"mv_g":0.35,"mv_b":0.35,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.400*( 0.60*sin(0.933*time) + 0.40*sin(1.045*time) );\\nwave_g = wave_g + 0.100*( 0.60*sin(0.900*time) + 0.40*sin(0.956*time) );\\nwave_b = wave_b + 0.100*( 0.60*sin(0.910*time) + 0.40*sin(0.920*time) );\\nmv_r = wave_r;\\nmv_b = wave_b;\\nmv_g = wave_g;\\nq1 = 0.05*(pow(1+1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6)/fps);\\n//q1 = 0.6*(bass+bass_att);\\nmv_a = if(above(bass-1.2,1),1,bass-1.2);\\nq2 = oldq2 + 0.05*(pow(1+1.2*treb+0.4*treb_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6)/fps);\\n\\n//q2 = oldq2 +q1;\\noldq2 = q2 ;\\nmonitor = q2;","pixel_eqs_eel":"zoom = zoom + rad*0.1*q1;","warp":" shader_body { \\n  vec3 ret_1;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv);\\n  ret_1 = (tmpvar_2.xyz + ((tmpvar_2.xyz - \\n    ((texture (sampler_blur2, uv).xyz * scale2) + bias2)\\n  ) * 0.3));\\n  ret_1 = (ret_1 * 0.9);\\n  ret_1 = (ret_1 + ((\\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 0.4)) + rand_frame.xy)).xyz - 0.5)\\n   / 256.0) * 112.0));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_1;\\n  ret = tmpvar_3.xyz;\\n }","comp":"vec2 xlat_mutabled;\\nvec2 xlat_mutabled_uv;\\n shader_body { \\n  vec3 ret_1;\\n  xlat_mutabled = (texsize.zw * 4.0);\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * xlat_mutabled))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * xlat_mutabled))\\n  ).xyz * scale1) + bias1)).x;\\n  tmpvar_2.y = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * xlat_mutabled))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * xlat_mutabled))\\n  ).xyz * scale1) + bias1)).x;\\n  xlat_mutabled_uv = (uv + (tmpvar_2 * 0.03));\\n  vec3 tmpvar_3;\\n  tmpvar_3 = mix (((texture (sampler_blur2, xlat_mutabled_uv).xyz * scale2) + bias2), texture (sampler_main, xlat_mutabled_uv).xyz, vec3(0.4, 0.4, 0.4));\\n  ret_1 = (((tmpvar_3.y - \\n    (tmpvar_3.x * 0.5)\\n  ) * mix (vec3(1.5, 0.6, 0.0), vec3(1.0, 1.0, 1.0), tmpvar_3.xxx)) * 1.4);\\n  vec3 tmpvar_4;\\n  tmpvar_4 = mix ((ret_1 * (vec3(1.0, 1.0, 1.0) - vec3(\\n    (((texture (sampler_blur1, (xlat_mutabled_uv - \\n      (texsize.zw * 32.0)\\n    )).xyz * scale1) + bias1).z * 0.6)\\n  ))), vec3(2.0, 2.0, 2.0), vec3((texture (sampler_main, uv).z * 0.36)));\\n  ret_1 = tmpvar_4;\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = tmpvar_4;\\n  ret = tmpvar_5.xyz;\\n }"}')},2147:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":3,"gammaadj":1,"decay":1,"modwavealphabyvolume":1,"wave_a":0.207,"wave_scale":0.397,"wave_smoothing":0,"wave_mystery":0.24,"modwavealphaend":1.17,"warpscale":2.853,"zoomexp":0.99983,"zoom":0.99752,"warp":0.01565,"ob_size":0,"mv_x":64,"mv_y":48,"mv_l":0,"mv_r":0.35,"mv_g":0.35,"mv_b":0.35,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.400*( 0.60*sin(0.933*time) + 0.40*sin(1.045*time) );\\nwave_g = wave_g + 0.100*( 0.60*sin(0.900*time) + 0.40*sin(0.956*time) );\\nwave_b = wave_b + 0.100*( 0.60*sin(0.910*time) + 0.40*sin(0.920*time) );\\nmv_r = wave_r;\\nmv_b = wave_b;\\nmv_g = wave_g;\\nq1 = 0.05*(pow(1+1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6)/fps);\\n//q1 = 0.6*(bass+bass_att);\\nmv_a = if(above(bass-1.2,1),1,bass-1.2);\\nq2 = oldq2 + 0.05*(pow(1+1.2*treb+0.4*treb_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6)/fps);\\n\\n//q2 = oldq2 +q1;\\noldq2 = q2 ;\\nmonitor = q2;","pixel_eqs_eel":"zoom = zoom + rad*0.1*q1;","warp":" shader_body { \\n  vec3 ret_1;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv);\\n  ret_1 = (tmpvar_2.xyz + ((tmpvar_2.xyz - \\n    ((texture (sampler_blur2, uv).xyz * scale2) + bias2)\\n  ) * 0.3));\\n  ret_1 = (ret_1 * 0.9);\\n  ret_1 = (ret_1 + ((\\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 0.4)) + rand_frame.xy)).xyz - 0.5)\\n   / 256.0) * 112.0));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_1;\\n  ret = tmpvar_3.xyz;\\n }","comp":" shader_body { \\n  float ang2_1;\\n  ang2_1 = ((ang * 0.1591549) + (time * 0.025));\\n  ang2_1 = (cos((50.26548 * ang2_1)) * 0.023);\\n  ang2_1 = (ang2_1 * 6.283185);\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = cos(ang2_1);\\n  tmpvar_2.y = sin(ang2_1);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = texture (sampler_main, (0.5 + ((\\n    (0.375 * (rad * sqrt(dot (texsize.xy, texsize.xy))))\\n   * tmpvar_2) * texsize.zw))).xyz;\\n  ret = tmpvar_3.xyz;\\n }"}')},9920:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":3,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"solarize":1,"wave_a":0.001,"warpanimspeed":0.037,"warpscale":0.015,"zoomexp":1.22019,"warp":0.033,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0,"ob_a":1,"ib_size":0.09,"ib_r":0,"ib_g":0,"ib_b":0,"mv_r":0.8,"mv_a":0},"shapes":[{"baseVals":{"textured":1,"x":0.75,"y":0.75,"rad":0.7417,"tex_zoom":0.22746,"g":1,"b":1,"r2":1,"b2":1,"a2":0.1,"border_r":0,"border_g":0,"border_a":0,"enabled":0},"init_eqs_eel":"tex_saw = 0.4;","frame_eqs_eel":"ang = q1*0.2;\\n\\ntex_capture = above(q3,1);\\ntex_zoom = 0.6;"},{"baseVals":{"enabled":1,"textured":1,"x":0.25,"y":0.75,"rad":4.44708,"tex_zoom":0.22746,"r":0,"a":0.1,"g2":0,"a2":0.2,"border_r":0,"border_g":0,"border_a":0},"init_eqs_eel":"tex_saw = 0.4;","frame_eqs_eel":"ang = q1*0.2;\\n//x = 0.5 + 0.2*sin(q2);\\n//y = 0.5 + (0.3*sin(q2));\\n\\ntex_capture = above(q3,1);\\ntex_zoom = 0.6;"},{"baseVals":{"textured":1,"rad":6.621,"tex_zoom":0.22746,"g":1,"b":1,"a":0.2,"r2":1,"b2":1,"border_r":0,"border_g":0,"border_a":0,"enabled":0},"init_eqs_eel":"tex_saw = 0.4;","frame_eqs_eel":"ang = q1*0.2;\\n//x = 0.5 + 0.2*sin(q2);\\n//y = 0.5 + (0.3*sin(q2));\\n\\ntex_capture = above(q3,2);\\ntex_zoom = 0.6;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"thick":1,"smoothing":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//q1 = state;\\n//q2 = basstime;\\n\\nq1 = 0;\\nspeed = bass_att*0.8;\\nv = sample*1000000 + value2*bass*0.1;\\n\\n//state 0 elipse\\nxs = xs + sin(v)*speed*atan(v*1.51);\\nys = ys + sin(v)*speed*atan((v*10));\\n\\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*0.2 + xs);\\ny = 0.5 + 0.5*sin(ys*0.12)*cos(time*0.1 + xs);\\n\\nx = x*0.8 + 0.1;\\ny = y*0.8 + 0.1;\\n\\nr = 0.5 + 0.5*sin(time*1.22) + 0.1;\\ng = 0.4 + 0.4*sin(time*1.307 + 2*y);\\nb = 0.4 + 0.4*sin(time*1.959 + x*2);\\n\\nxs = if(above(xs,1000),0 ,xs);\\nys = if(above(ys,1000),0 ,ys);"},{"baseVals":{"enabled":1,"thick":1,"smoothing":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//q1 = state;\\n//q2 = basstime;\\n\\nq1 = 0;\\nspeed = bass_att*0.8;\\nv = sample*1000000 + value2*bass*0.1;\\n\\n//state 0 elipse\\nxs = xs + sin(v)*speed*atan(v*1.51);\\nys = ys + sin(v)*speed*atan((v*10));\\n\\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*0.2 + xs);\\ny = 0.5 + 0.5*sin(ys*0.14)*cos(time*0.1 + xs);\\n\\nx = x*0.8 + 0.1;\\ny = y*0.8 + 0.1;\\nx = x*0.6 + 0.2;\\ny = y*0.6 + 0.2;\\n\\nr = 0.5 + 0.5*sin(time*1.322) + 0.1;\\ng = 0.4 + 0.4*sin(time*1.5407 + 2*y);\\nb = 0.4 + 0.4*sin(time*1.759 + x*2);\\n\\nxs = if(above(xs,1000),0 ,xs);\\nys = if(above(ys,1000),0 ,ys);"},{"baseVals":{"enabled":1,"thick":1,"smoothing":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//q1 = state;\\n//q2 = basstime;\\n\\nq1 = 0;\\nspeed = bass_att*0.8;\\nv = sample*1000000 + value2*bass*0.1;\\n\\n//state 0 elipse\\nxs = xs + sin(v)*speed*atan(v*1.51);\\nys = ys + sin(v)*speed*atan((v*10));\\n\\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*0.2 + xs);\\ny = 0.5 + 0.5*sin(ys*0.14)*cos(time*0.1 + xs);\\n\\nx = x*0.8 + 0.1;\\ny = y*0.8 + 0.1;\\nx = x*0.25 + 0.375;\\ny = y*0.25 + 0.375;\\n\\nr = 0.5 + 0.5*sin(time*1.622) + 0.1;\\ng = 0.4 + 0.4*sin(time*1.2407 + 2*y);\\nb = 0.4 + 0.4*sin(time*1.359 + x*2);\\n\\nxs = if(above(xs,1000),0 ,xs);\\nys = if(above(ys,1000),0 ,ys);"},{"baseVals":{"thick":1,"additive":1,"smoothing":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//q1 = state;\\n//q2 = basstime;\\n\\nq1 = 0;\\nspeed = bass_att*0.8;\\nv = sample*10000 + value2*bass*0.1;\\n\\n//state 0 elipse\\nxs = xs + (equal(0,q1))*sin(v*1)*speed*atan(v*1.51);\\nys = ys + (equal(0,q1))*sin(v*1)*speed;\\n\\n\\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + xs);\\ny = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs);\\n\\nx = -x*0.6 + 1;\\ny = y*0.9 + 0.05 + bass*0.08;\\ny = y*0.8;\\n\\nr = 0.5 + 0.5*sin(time*1.789) + 0.1;\\ng = 0.4 + 0.4*sin(time*1.478);\\nb = 0.4 + 0.4*sin(time*1.125);\\n\\nxs = if(above(xs,1000),0 ,xs);\\nys = if(above(ys,1000),0 ,ys);"}],"init_eqs_eel":"mv_x=64;mv_y=48;\\nnut=0;\\nstp=0;stq=0;\\nrtp=0;rtq=0;\\nwvr=0;\\ndecay=0;\\ndcsp=0","frame_eqs_eel":"decay=1;\\nzoom=0.95+.075*max(treb_att,bass_att);\\n\\nwarp = 0;\\n\\nvol=(bass_att+mid_att+treb_att)*0.25;\\nvol=vol*vol;\\nmtime=mtime+vol*0.1;\\n\\nq1=mtime*0.4-.05*time;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (vec2(1.0, 0.0) * texsize.z);\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (vec2(0.0, 1.0) * texsize.z);\\n  ret_1 = (((\\n    (texture (sampler_main, (uv + tmpvar_2)).xyz + texture (sampler_main, (uv + tmpvar_2)).xyz)\\n   * 0.5) + (\\n    (texture (sampler_main, (uv + tmpvar_3)).xyz + texture (sampler_main, (uv + tmpvar_3)).xyz)\\n   * 0.5)) - texture (sampler_main, ((\\n    (uv - 0.5)\\n   * 0.9) + 0.5)).xyz);\\n  ret_1 = (ret_1 - 0.4);\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = ret_1;\\n  ret = tmpvar_4.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 4.0);\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = tmpvar_3.y;\\n  tmpvar_5.y = tmpvar_4.y;\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = tmpvar_3.z;\\n  tmpvar_6.y = tmpvar_4.z;\\n  vec2 tmpvar_7;\\n  tmpvar_7 = ((uv - (tmpvar_5 * 0.1)) + (tmpvar_6 * 0.06));\\n  vec4 tmpvar_8;\\n  tmpvar_8 = texture (sampler_main, uv);\\n  ret_1 = (((\\n    ((texture (sampler_blur2, tmpvar_7).xyz * scale2) + bias2)\\n  .x * \\n    clamp ((1.0 - tmpvar_8.y), 0.0, 1.0)\\n  ) * pow (hue_shader.yxz, vec3(8.0, 8.0, 8.0))) * 3.0);\\n  ret_1 = (mix (ret_1, (\\n    pow (hue_shader.yzx, vec3(8.0, 8.0, 8.0))\\n   * 1.4), vec3((\\n    (texture (sampler_main, tmpvar_7).x * 0.8)\\n   + \\n    ((texture (sampler_blur1, tmpvar_7).xyz * scale1) + bias1)\\n  .x))) * clamp ((1.0 - \\n    (((texture (sampler_blur1, uv).xyz * scale1) + bias1).z * 4.0)\\n  ), 0.0, 1.0));\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = tmpvar_3.z;\\n  tmpvar_9.y = tmpvar_4.z;\\n  vec3 tmpvar_10;\\n  vec3 tmpvar_11;\\n  tmpvar_11 = pow (hue_shader, vec3(8.0, 8.0, 8.0));\\n  tmpvar_10 = mix (mix (ret_1, vec3(1.0, 1.0, 1.0), (\\n    (tmpvar_11 * texture (sampler_main, clamp ((uv - (tmpvar_9 * 2.0)), 0.0, 1.0)).y)\\n   * 1.2)), (tmpvar_11.zxy * 1.8), tmpvar_8.zzz);\\n  ret_1 = tmpvar_10;\\n  vec4 tmpvar_12;\\n  tmpvar_12.w = 1.0;\\n  tmpvar_12.xyz = tmpvar_10;\\n  ret = tmpvar_12.xyz;\\n }"}')},5005:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":3,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wrap":0,"darken_center":1,"solarize":1,"wave_a":0.001,"zoom":0.97,"rot":-6.27999,"warp":0.00052,"wave_r":0,"wave_g":0,"wave_b":0,"ob_r":1,"ob_g":1,"ob_b":1,"mv_r":0.8,"mv_a":0},"shapes":[{"baseVals":{"textured":1,"x":0.75,"y":0.75,"rad":0.7417,"tex_zoom":0.22746,"g":1,"b":1,"r2":1,"b2":1,"a2":0.1,"border_r":0,"border_g":0,"border_a":0,"enabled":0},"init_eqs_eel":"tex_saw = 0.4;","frame_eqs_eel":"ang = q1*0.2;\\n\\ntex_capture = above(q3,1);\\ntex_zoom = 0.6;"},{"baseVals":{"enabled":1,"textured":1,"x":0.25,"y":0.75,"rad":4.44708,"tex_zoom":0.22746,"r":0,"a":0.1,"g2":0,"a2":0.2,"border_r":0,"border_g":0,"border_a":0},"init_eqs_eel":"tex_saw = 0.4;","frame_eqs_eel":"ang = q1*0.2;\\n//x = 0.5 + 0.2*sin(q2);\\n//y = 0.5 + (0.3*sin(q2));\\n\\ntex_capture = above(q3,1);\\ntex_zoom = 0.6;"},{"baseVals":{"textured":1,"rad":6.621,"tex_zoom":0.22746,"g":1,"b":1,"a":0.2,"r2":1,"b2":1,"border_r":0,"border_g":0,"border_a":0,"enabled":0},"init_eqs_eel":"tex_saw = 0.4;","frame_eqs_eel":"ang = q1*0.2;\\n//x = 0.5 + 0.2*sin(q2);\\n//y = 0.5 + (0.3*sin(q2));\\n\\ntex_capture = above(q3,2);\\ntex_zoom = 0.6;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"thick":1,"smoothing":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//q1 = state;\\n//q2 = basstime;\\n\\nq1 = 0;\\nspeed = bass_att*0.8;\\nv = sample*1000000 + value2*bass*0.1;\\n\\n//state 0 elipse\\nxs = xs + sin(v)*speed*atan(v*1.51);\\nys = ys + sin(v)*speed*atan((v*10));\\n\\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*0.2 + xs);\\ny = 0.5 + 0.5*sin(ys*0.12)*cos(time*0.1 + xs);\\n\\nx = x*0.8 + 0.1;\\ny = y*0.8 + 0.1;\\n\\nr = 0.5 + 0.5*sin(time*1.22) + 0.1;\\ng = 0.4 + 0.4*sin(time*1.307 + 2*y);\\nb = 0.4 + 0.4*sin(time*1.959 + x*2);\\n\\nxs = if(above(xs,1000),0 ,xs);\\nys = if(above(ys,1000),0 ,ys);"},{"baseVals":{"enabled":1,"thick":1,"smoothing":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//q1 = state;\\n//q2 = basstime;\\n\\nq1 = 0;\\nspeed = bass_att*0.8;\\nv = sample*1000000 + value2*bass*0.1;\\n\\n//state 0 elipse\\nxs = xs + sin(v)*speed*atan(v*1.51);\\nys = ys + sin(v)*speed*atan((v*10));\\n\\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*0.2 + xs);\\ny = 0.5 + 0.5*sin(ys*0.14)*cos(time*0.1 + xs);\\n\\nx = x*0.8 + 0.1;\\ny = y*0.8 + 0.1;\\nx = x*0.6 + 0.2;\\ny = y*0.6 + 0.2;\\n\\nr = 0.5 + 0.5*sin(time*1.322) + 0.1;\\ng = 0.4 + 0.4*sin(time*1.5407 + 2*y);\\nb = 0.4 + 0.4*sin(time*1.759 + x*2);\\n\\nxs = if(above(xs,1000),0 ,xs);\\nys = if(above(ys,1000),0 ,ys);"},{"baseVals":{"enabled":1,"thick":1,"smoothing":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//q1 = state;\\n//q2 = basstime;\\n\\nq1 = 0;\\nspeed = bass_att*0.8;\\nv = sample*1000000 + value2*bass*0.1;\\n\\n//state 0 elipse\\nxs = xs + sin(v)*speed*atan(v*1.51);\\nys = ys + sin(v)*speed*atan((v*10));\\n\\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*0.2 + xs);\\ny = 0.5 + 0.5*sin(ys*0.14)*cos(time*0.1 + xs);\\n\\nx = x*0.8 + 0.1;\\ny = y*0.8 + 0.1;\\nx = x*0.25 + 0.375;\\ny = y*0.25 + 0.375;\\n\\nr = 0.5 + 0.5*sin(time*1.622) + 0.1;\\ng = 0.4 + 0.4*sin(time*1.2407 + 2*y);\\nb = 0.4 + 0.4*sin(time*1.359 + x*2);\\n\\nxs = if(above(xs,1000),0 ,xs);\\nys = if(above(ys,1000),0 ,ys);"},{"baseVals":{"thick":1,"additive":1,"smoothing":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//q1 = state;\\n//q2 = basstime;\\n\\nq1 = 0;\\nspeed = bass_att*0.8;\\nv = sample*10000 + value2*bass*0.1;\\n\\n//state 0 elipse\\nxs = xs + (equal(0,q1))*sin(v*1)*speed*atan(v*1.51);\\nys = ys + (equal(0,q1))*sin(v*1)*speed;\\n\\n\\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + xs);\\ny = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs);\\n\\nx = -x*0.6 + 1;\\ny = y*0.9 + 0.05 + bass*0.08;\\ny = y*0.8;\\n\\nr = 0.5 + 0.5*sin(time*1.789) + 0.1;\\ng = 0.4 + 0.4*sin(time*1.478);\\nb = 0.4 + 0.4*sin(time*1.125);\\n\\nxs = if(above(xs,1000),0 ,xs);\\nys = if(above(ys,1000),0 ,ys);"}],"init_eqs_eel":"","frame_eqs_eel":"basstime = basstime + bass*0.03;\\nq1 = basstime*4;\\n\\n//start in most active range\\nbasstime = if(below(basstime,1000),1000,basstime);\\n//basstime = if(above(basstime,495),450,basstime);\\n\\nbasstime = basstime + bass_att*0.03;\\nvol = pow(bass+mid+treb,2);\\nbasssum = vol;\\n\\nstickybit = time%2;\\n\\n//avg vol\\n//buffer 1\\nvolAvg = volAvg + vol*equal(stickybit,1);\\n//number of samples 1 or framerate\\nsample1 = sample1 + equal(stickybit,1);\\n//buffer 2\\nvolAvg2 = volAvg2 + vol*equal(stickybit,0);\\n//number of samples 2\\nsample2 = sample2 + equal(stickybit,0);\\n\\n//transision\\nedge = bnot(equal(bit2,stickybit));\\n\\nvolAvg = volAvg - volAvg*edge*stickybit;\\nvolAvg2 = volAvg2 - volAvg2*edge*equal(stickybit,0);\\n\\nsample1 = sample1  - sample1*edge*stickybit;\\nsample2 = sample2  - sample2*edge*equal(stickybit,0);\\n\\n//test vol against avg buffer lvl\\ndiff = if(equal(stickybit,1), (basssum/(volAvg2/sample2)) , 0);\\ndiff = if(equal(stickybit,0), (basssum/(volAvg/sample1)), diff);\\n\\nq3 = diff;\\n\\nbit2 = time%2;\\n\\ndifftime = difftime + diff*0.03;\\nq2 = difftime;\\n\\n//fix a strange error\\ndifftime = if(above(difftime,2000),0, difftime);\\n\\nmonitor = abs(cos(time))*3.14;\\n\\n\\nmv_a = above(diff,10);","pixel_eqs_eel":"zoom = 1 + 0.05*q3*rad;\\n\\ndecay_r = 0.2*rad*sin(q2*0.35) + 0.85 + 0.1*sin(q2);\\ndecay_g = 0.2*rad*sin(q2*0.5) + 0.85 + 0.1*sin(0.7*q2);\\ndecay_b = 0.2*rad*sin(q2*0.4) + 0.85 + 0.1*sin(0.8*q2);\\n\\nrot = 0;","warp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (vec2(1.0, 0.0) * texsize.z);\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (vec2(0.0, 1.0) * texsize.z);\\n  ret_1 = (((\\n    (texture (sampler_main, (uv + tmpvar_2)).xyz + texture (sampler_main, (uv + tmpvar_2)).xyz)\\n   * 0.5) + (\\n    (texture (sampler_main, (uv + tmpvar_3)).xyz + texture (sampler_main, (uv + tmpvar_3)).xyz)\\n   * 0.5)) - texture (sampler_main, ((\\n    (uv - 0.5)\\n   * 0.9) + 0.5)).xyz);\\n  ret_1 = (ret_1 - 0.4);\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = ret_1;\\n  ret = tmpvar_4.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = ((0.5 - uv) + 0.5);\\n  ret_1 = (mix (texture (sampler_main, uv).xyz, texture (sampler_main, tmpvar_2).xyz, vec3(0.5, 0.5, 0.5)) * 2.0);\\n  ret_1 = (((\\n    ((texture (sampler_blur3, uv).xyz * scale3) + bias3)\\n   * 2.0) + (\\n    ((texture (sampler_blur3, tmpvar_2).xyz * scale3) + bias3)\\n   * 2.0)) + ret_1);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_1;\\n  ret = tmpvar_3.xyz;\\n }"}')},4514:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":3,"gammaadj":1.07,"decay":0.95,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":1,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"brighten":1,"darken":1,"invert":1,"wave_a":4.1,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.99951,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"spectrum":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"sp = sample*6.28*8*8*4;\\nvol = (bass_att + mid_att + treb_att)*0.33;\\nvol = 0.2 + 0.5*(value1 + value2);\\nvol = .2;\\n\\nmod = if(below(mid_att,1.8),mid_att+.2,2);\\n\\nox = 0.5*sin(sp)*sin(sample*3.14)*vol;\\noy = (sample - 0)*mod;\\noz = 0.5*cos(sp)*sin(sample*3.14)*vol;\\n\\nxang = time*0.672;\\naxang = 0;\\nyang = time*-1.351;\\nayang = 0;\\nzang = time*-0.401;\\nazang = 0;\\nfov = 0.6 + 0.2*sin(time);\\nfov = .5;\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = - ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\noz = abs(oz) - 2;\\nx = ox*fov/oz + 0.5;\\nx = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;\\n\\nr = 1 + sin(sp);\\nb = 0.5 + 0.5*sin(sample*1.57);\\ng = 0.5 + 0.5*cos(sample*1.57);\\na = 0.5 + (oz + 2)*0.25;"},{"baseVals":{"enabled":1,"spectrum":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"sp = sample*6.28*8*8*4;\\nvol = (bass_att + mid_att + treb_att)*0.33;\\nvol = 0.2 + 0.5*(value1 + value2);\\nvol = .2;\\n\\nmod = if(below(bass_att,1.8),bass_att+.2,2);\\n\\nox = 0.5*sin(sp)*sin(sample*3.14)*vol;\\noy = (sample - 0)*mod;\\noz = 0.5*cos(sp)*sin(sample*3.14)*vol;\\n\\nxang = time*-0.321;\\naxang = 0;\\nyang = time*1.531;\\nayang = 0;\\nzang = time*-0.101;\\nazang = 0;\\nfov = 0.6 + 0.2*sin(time);\\nfov = .5;\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = - ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\noz = abs(oz) - 2;\\nx = ox*fov/oz + 0.5;\\nx = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;\\n\\ng = 1 + sin(sp);\\nr = 0.5 + 0.5*sin(sample*1.57);\\nb = 0.5 + 0.5*cos(sample*1.57);\\na = 0.5 + (oz + 2)*0.25;"},{"baseVals":{"enabled":1,"spectrum":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"sp = sample*6.28*8*8*4;\\nvol = (bass_att + mid_att + treb_att)*0.33;\\nvol = 0.2 + 0.5*(value1 + value2);\\nvol = .2;\\n\\nmod = if(below(treb_att,1.8),treb_att+.2,2);\\n\\nox = 0.5*sin(sp)*sin(sample*3.14)*vol;\\noy = (sample - 0)*mod;\\noz = 0.5*cos(sp)*sin(sample*3.14)*vol;\\n\\nxang = time*0.221;\\naxang = 0;\\nyang = time*-0.411;\\nayang = 0;\\nzang = time*1.201;\\nazang = 0;\\nfov = 0.6 + 0.2*sin(time);\\nfov = .5;\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = - ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\noz = abs(oz) - 2;\\nx = ox*fov/oz + 0.5;\\nx = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;\\n\\nb = 1+sin(sp);\\ng = 0.5 + 0.5*sin(sample*1.57);\\nr = 0.5 + 0.5*cos(sample*1.57);\\na = 0.5 + (oz + 2)*0.25;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_a = 0;","pixel_eqs_eel":"it = 0.3*sin(time*0.2);\\nradm = rad*0.5;\\nrot = 0.02*sin((radm+it)*20);\\nmod = sin(ang*5);\\nmod = mod*mod*mod*mod*mod;\\nzoom = 1 + abs(0.01*mod);\\n\\nzoom *= min(1.05,max(1,max(bass,treb)));","warp":" shader_body { \\n  vec3 xfer_1;\\n  vec3 ret_2;\\n  vec4 tmpvar_3;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (uv - 0.5);\\n  tmpvar_3 = texture (sampler_main, (tmpvar_4 + 0.5));\\n  ret_2 = (tmpvar_3.xyz / ((tmpvar_3.x + tmpvar_3.y) + tmpvar_3.z));\\n  ret_2 = texture (sampler_main, ((tmpvar_4 * dot (ret_2, vec3(1.0, 0.975, 0.95))) + 0.5)).xyz;\\n  vec3 tmpvar_5;\\n  tmpvar_5 = clamp (((ret_2 - 0.05) * 99.0), 0.0, 1.0);\\n  xfer_1.x = tmpvar_5.x;\\n  xfer_1.yz = (tmpvar_5.yz * clamp ((\\n    (0.1 - ret_2.xy)\\n   * 99.0), 0.0, 1.0));\\n  ret_2 = (ret_2 + (vec3(-0.014, 0.014, 0.0) * tmpvar_5.xxx));\\n  ret_2 = (ret_2 + (vec3(0.0, -0.08, 0.08) * xfer_1.yyy));\\n  ret_2 = (ret_2 + (vec3(0.0, 0.0, -0.02) * xfer_1.zzz));\\n  ret_2 = (ret_2 + (vec3(5.0, 15.0, 40.0) * (\\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5)\\n   / 256.0)));\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = ret_2;\\n  ret = tmpvar_6.xyz;\\n }","comp":""}')},9051:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":3,"gammaadj":1,"decay":1,"echo_zoom":0.952,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"brighten":1,"wave_a":4.1,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warp":0,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":3,"textured":1,"tex_zoom":1.00015,"border_a":0},"init_eqs_eel":"t1 = .7 + rand(101)*.01*.6;\\nt2 = .7 + rand(101)*.01*.6;","frame_eqs_eel":"x = .5 + q1*sin(q2*t1);\\ny = .5 + q1*cos(q3*t2);\\n\\nrad = q5;\\n\\nang = -time;\\nsides = q6;\\n\\nh = q4;\\nh = h - int(h);\\nl = .5;\\ns = 1;\\ntmpb = if(below(l,0.5),l*(1+s),(l+s)-(s*l));\\ntmpa = 2*l - tmpb;\\nhvr = h + .333333;\\nhvr = if(below(hvr,0),hvr+1,if(above(hvr,1),hvr-1,hvr));\\nhvg = h;\\nhvg = if(below(hvg,0),hvg+1,if(above(hvg,1),hvg-1,hvg));\\nhvb = h - .333333;\\nhvb = if(below(hvb,0),hvb+1,if(above(hvb,1),hvb-1,hvb));\\nr = if(below(6*hvr,1),tmpa+(tmpb-tmpa)*6*hvr, if(below(2*hvr,1),tmpb, if(below(hvr*3,2),tmpa+(tmpb-tmpa)*(.666666-hvr)*6,tmpa)));\\ng = if(below(6*hvg,1),tmpa+(tmpb-tmpa)*6*hvg, if(below(2*hvg,1),tmpb, if(below(hvg*3,2),tmpa+(tmpb-tmpa)*(.666666-hvg)*6,tmpa)));\\nb = if(below(6*hvb,1),tmpa+(tmpb-tmpa)*6*hvb, if(below(2*hvb,1),tmpb, if(below(hvb*3,2),tmpa+(tmpb-tmpa)*(.666666-hvb)*6,tmpa)));\\nr2=r;g2=g;b2=b;"},{"baseVals":{"enabled":1,"sides":3,"textured":1,"border_a":0},"init_eqs_eel":"t1 = .7 + rand(101)*.01*.6;\\nt2 = .7 + rand(101)*.01*.6;","frame_eqs_eel":"x = .5 + q1*sin(q2*t1);\\ny = .5 + q1*cos(q3*t2);\\n\\nrad = q5;\\n\\nang = -time;\\nsides = q6;\\n\\nh = q4 + .01;\\nh = h - int(h);\\nl = .5;\\ns = 1;\\ntmpb = if(below(l,0.5),l*(1+s),(l+s)-(s*l));\\ntmpa = 2*l - tmpb;\\nhvr = h + .333333;\\nhvr = if(below(hvr,0),hvr+1,if(above(hvr,1),hvr-1,hvr));\\nhvg = h;\\nhvg = if(below(hvg,0),hvg+1,if(above(hvg,1),hvg-1,hvg));\\nhvb = h - .333333;\\nhvb = if(below(hvb,0),hvb+1,if(above(hvb,1),hvb-1,hvb));\\nr = if(below(6*hvr,1),tmpa+(tmpb-tmpa)*6*hvr, if(below(2*hvr,1),tmpb, if(below(hvr*3,2),tmpa+(tmpb-tmpa)*(.666666-hvr)*6,tmpa)));\\ng = if(below(6*hvg,1),tmpa+(tmpb-tmpa)*6*hvg, if(below(2*hvg,1),tmpb, if(below(hvg*3,2),tmpa+(tmpb-tmpa)*(.666666-hvg)*6,tmpa)));\\nb = if(below(6*hvb,1),tmpa+(tmpb-tmpa)*6*hvb, if(below(2*hvb,1),tmpb, if(below(hvb*3,2),tmpa+(tmpb-tmpa)*(.666666-hvb)*6,tmpa)));\\nr2=r;g2=g;b2=b;"},{"baseVals":{"enabled":1,"sides":3,"textured":1,"border_a":0},"init_eqs_eel":"t1 = .7 + rand(101)*.01*.6;\\nt2 = .7 + rand(101)*.01*.6;","frame_eqs_eel":"x = .5 + q1*sin(q2*t1);\\ny = .5 + q1*cos(q3*t2);\\n\\nrad = q5;\\n\\nang = -time;\\nsides = q6;\\n\\nh = q4 + .02;\\nh = h - int(h);\\nl = .5;\\ns = 1;\\ntmpb = if(below(l,0.5),l*(1+s),(l+s)-(s*l));\\ntmpa = 2*l - tmpb;\\nhvr = h + .333333;\\nhvr = if(below(hvr,0),hvr+1,if(above(hvr,1),hvr-1,hvr));\\nhvg = h;\\nhvg = if(below(hvg,0),hvg+1,if(above(hvg,1),hvg-1,hvg));\\nhvb = h - .333333;\\nhvb = if(below(hvb,0),hvb+1,if(above(hvb,1),hvb-1,hvb));\\nr = if(below(6*hvr,1),tmpa+(tmpb-tmpa)*6*hvr, if(below(2*hvr,1),tmpb, if(below(hvr*3,2),tmpa+(tmpb-tmpa)*(.666666-hvr)*6,tmpa)));\\ng = if(below(6*hvg,1),tmpa+(tmpb-tmpa)*6*hvg, if(below(2*hvg,1),tmpb, if(below(hvg*3,2),tmpa+(tmpb-tmpa)*(.666666-hvg)*6,tmpa)));\\nb = if(below(6*hvb,1),tmpa+(tmpb-tmpa)*6*hvb, if(below(2*hvb,1),tmpb, if(below(hvb*3,2),tmpa+(tmpb-tmpa)*(.666666-hvb)*6,tmpa)));\\nr2=r;g2=g;b2=b;"},{"baseVals":{"enabled":1,"sides":3,"textured":1,"border_a":0},"init_eqs_eel":"t1 = .7 + rand(101)*.01*.6;\\nt2 = .7 + rand(101)*.01*.6;","frame_eqs_eel":"x = .5 + q1*sin(q2*t1);\\ny = .5 + q1*cos(q3*t2);\\n\\nrad = q5;\\n\\nang = -time;\\nsides = q6;\\n\\nh = q4 + .03;\\nh = h - int(h);\\nl = .5;\\ns = 1;\\ntmpb = if(below(l,0.5),l*(1+s),(l+s)-(s*l));\\ntmpa = 2*l - tmpb;\\nhvr = h + .333333;\\nhvr = if(below(hvr,0),hvr+1,if(above(hvr,1),hvr-1,hvr));\\nhvg = h;\\nhvg = if(below(hvg,0),hvg+1,if(above(hvg,1),hvg-1,hvg));\\nhvb = h - .333333;\\nhvb = if(below(hvb,0),hvb+1,if(above(hvb,1),hvb-1,hvb));\\nr = if(below(6*hvr,1),tmpa+(tmpb-tmpa)*6*hvr, if(below(2*hvr,1),tmpb, if(below(hvr*3,2),tmpa+(tmpb-tmpa)*(.666666-hvr)*6,tmpa)));\\ng = if(below(6*hvg,1),tmpa+(tmpb-tmpa)*6*hvg, if(below(2*hvg,1),tmpb, if(below(hvg*3,2),tmpa+(tmpb-tmpa)*(.666666-hvg)*6,tmpa)));\\nb = if(below(6*hvb,1),tmpa+(tmpb-tmpa)*6*hvb, if(below(2*hvb,1),tmpb, if(below(hvb*3,2),tmpa+(tmpb-tmpa)*(.666666-hvb)*6,tmpa)));\\nr2=r;g2=g;b2=b;"}],"waves":[{"baseVals":{"usedots":1,"thick":1,"enabled":0},"init_eqs_eel":"t1 = .7 + rand(100)*.01*.6;\\nt2 = .7 + rand(100)*.01*.6;\\nt3 = .7 + rand(100)*.01*.6;\\nt4 = .7 + rand(100)*.01*.6;\\nt5 = .7 + rand(100)*.01*.6;\\nt6 = .7 + rand(100)*.01*.6;\\nt7 = .7 + rand(100)*.01*.6;\\nt8 = .7 + rand(100)*.01*.6;","frame_eqs_eel":"","point_eqs_eel":"\\nit = (it+1)*above(sample,0);\\n\\nmod = equal(it,0)*t1 + equal(it,1)*t2 + equal(it,2)*t3 + equal(it,3)*t4 + equal(it,4)*t5 + equal(it,5)*t6 + equal(it,6)*t7;\\nmod = mod + equal(mod,0)*t8;\\n\\nx = .5 + q1*sin(q2*mod);\\ny = .5 + q1*cos(q3*mod);\\n\\nh = q4 + .1*sample;\\nh = h - int(h);\\nl = .25 + .5*rand(101)*.01;\\ns = rand(101)*.01;\\ntmpb = if(below(l,0.5),l*(1+s),(l+s)-(s*l));\\ntmpa = 2*l - tmpb;\\nhvr = h + .333333;\\nhvr = if(below(hvr,0),hvr+1,if(above(hvr,1),hvr-1,hvr));\\nhvg = h;\\nhvg = if(below(hvg,0),hvg+1,if(above(hvg,1),hvg-1,hvg));\\nhvb = h - .333333;\\nhvb = if(below(hvb,0),hvb+1,if(above(hvb,1),hvb-1,hvb));\\nr = if(below(6*hvr,1),tmpa+(tmpb-tmpa)*6*hvr, if(below(2*hvr,1),tmpb, if(below(hvr*3,2),tmpa+(tmpb-tmpa)*(.666666-hvr)*6,tmpa)));\\ng = if(below(6*hvg,1),tmpa+(tmpb-tmpa)*6*hvg, if(below(2*hvg,1),tmpb, if(below(hvg*3,2),tmpa+(tmpb-tmpa)*(.666666-hvg)*6,tmpa)));\\nb = if(below(6*hvb,1),tmpa+(tmpb-tmpa)*6*hvb, if(below(2*hvb,1),tmpb, if(below(hvb*3,2),tmpa+(tmpb-tmpa)*(.666666-hvb)*6,tmpa)));"},{"baseVals":{"usedots":1,"thick":1,"enabled":0},"init_eqs_eel":"t1 = .7 + rand(100)*.01*.6;\\nt2 = .7 + rand(100)*.01*.6;\\nt3 = .7 + rand(100)*.01*.6;\\nt4 = .7 + rand(100)*.01*.6;\\nt5 = .7 + rand(100)*.01*.6;\\nt6 = .7 + rand(100)*.01*.6;\\nt7 = .7 + rand(100)*.01*.6;\\nt8 = .7 + rand(100)*.01*.6;","frame_eqs_eel":"","point_eqs_eel":"\\nit = (it+1)*above(sample,0);\\n\\nmod = equal(it,0)*t1 + equal(it,1)*t2 + equal(it,2)*t3 + equal(it,3)*t4 + equal(it,4)*t5 + equal(it,5)*t6 + equal(it,6)*t7;\\nmod = mod + equal(mod,0)*t8;\\n\\nx = .5 + q1*sin(q2*mod);\\ny = .5 + q1*cos(q3*mod);\\n\\nh = q4 + .1*sample;\\nh = h - int(h);\\nl = .25 + .5*rand(101)*.01;\\ns = rand(101)*.01;\\ntmpb = if(below(l,0.5),l*(1+s),(l+s)-(s*l));\\ntmpa = 2*l - tmpb;\\nhvr = h + .333333;\\nhvr = if(below(hvr,0),hvr+1,if(above(hvr,1),hvr-1,hvr));\\nhvg = h;\\nhvg = if(below(hvg,0),hvg+1,if(above(hvg,1),hvg-1,hvg));\\nhvb = h - .333333;\\nhvb = if(below(hvb,0),hvb+1,if(above(hvb,1),hvb-1,hvb));\\nr = if(below(6*hvr,1),tmpa+(tmpb-tmpa)*6*hvr, if(below(2*hvr,1),tmpb, if(below(hvr*3,2),tmpa+(tmpb-tmpa)*(.666666-hvr)*6,tmpa)));\\ng = if(below(6*hvg,1),tmpa+(tmpb-tmpa)*6*hvg, if(below(2*hvg,1),tmpb, if(below(hvg*3,2),tmpa+(tmpb-tmpa)*(.666666-hvg)*6,tmpa)));\\nb = if(below(6*hvb,1),tmpa+(tmpb-tmpa)*6*hvb, if(below(2*hvb,1),tmpb, if(below(hvb*3,2),tmpa+(tmpb-tmpa)*(.666666-hvb)*6,tmpa)));"},{"baseVals":{"usedots":1,"thick":1,"enabled":0},"init_eqs_eel":"t1 = .7 + rand(100)*.01*.6;\\nt2 = .7 + rand(100)*.01*.6;\\nt3 = .7 + rand(100)*.01*.6;\\nt4 = .7 + rand(100)*.01*.6;\\nt5 = .7 + rand(100)*.01*.6;\\nt6 = .7 + rand(100)*.01*.6;\\nt7 = .7 + rand(100)*.01*.6;\\nt8 = .7 + rand(100)*.01*.6;","frame_eqs_eel":"","point_eqs_eel":"\\nit = (it+1)*above(sample,0);\\n\\nmod = equal(it,0)*t1 + equal(it,1)*t2 + equal(it,2)*t3 + equal(it,3)*t4 + equal(it,4)*t5 + equal(it,5)*t6 + equal(it,6)*t7;\\nmod = mod + equal(mod,0)*t8;\\n\\nx = .5 + q1*sin(q2*mod);\\ny = .5 + q1*cos(q3*mod);\\n\\nh = q4 + .1*sample;\\nh = h - int(h);\\nl = .25 + .5*rand(101)*.01;\\ns = rand(101)*.01;\\ntmpb = if(below(l,0.5),l*(1+s),(l+s)-(s*l));\\ntmpa = 2*l - tmpb;\\nhvr = h + .333333;\\nhvr = if(below(hvr,0),hvr+1,if(above(hvr,1),hvr-1,hvr));\\nhvg = h;\\nhvg = if(below(hvg,0),hvg+1,if(above(hvg,1),hvg-1,hvg));\\nhvb = h - .333333;\\nhvb = if(below(hvb,0),hvb+1,if(above(hvb,1),hvb-1,hvb));\\nr = if(below(6*hvr,1),tmpa+(tmpb-tmpa)*6*hvr, if(below(2*hvr,1),tmpb, if(below(hvr*3,2),tmpa+(tmpb-tmpa)*(.666666-hvr)*6,tmpa)));\\ng = if(below(6*hvg,1),tmpa+(tmpb-tmpa)*6*hvg, if(below(2*hvg,1),tmpb, if(below(hvg*3,2),tmpa+(tmpb-tmpa)*(.666666-hvg)*6,tmpa)));\\nb = if(below(6*hvb,1),tmpa+(tmpb-tmpa)*6*hvb, if(below(2*hvb,1),tmpb, if(below(hvb*3,2),tmpa+(tmpb-tmpa)*(.666666-hvb)*6,tmpa)));"},{"baseVals":{"usedots":1,"thick":1,"enabled":0},"init_eqs_eel":"t1 = .7 + rand(100)*.01*.6;\\nt2 = .7 + rand(100)*.01*.6;\\nt3 = .7 + rand(100)*.01*.6;\\nt4 = .7 + rand(100)*.01*.6;\\nt5 = .7 + rand(100)*.01*.6;\\nt6 = .7 + rand(100)*.01*.6;\\nt7 = .7 + rand(100)*.01*.6;\\nt8 = .7 + rand(100)*.01*.6;","frame_eqs_eel":"","point_eqs_eel":"\\nit = (it+1)*above(sample,0);\\n\\nmod = equal(it,0)*t1 + equal(it,1)*t2 + equal(it,2)*t3 + equal(it,3)*t4 + equal(it,4)*t5 + equal(it,5)*t6 + equal(it,6)*t7;\\nmod = mod + equal(mod,0)*t8;\\n\\nx = .5 + q1*sin(q2*mod);\\ny = .5 + q1*cos(q3*mod);\\n\\nh = q4 + .1*sample;\\nh = h - int(h);\\nl = .25 + .5*rand(101)*.01;\\ns = rand(101)*.01;\\ntmpb = if(below(l,0.5),l*(1+s),(l+s)-(s*l));\\ntmpa = 2*l - tmpb;\\nhvr = h + .333333;\\nhvr = if(below(hvr,0),hvr+1,if(above(hvr,1),hvr-1,hvr));\\nhvg = h;\\nhvg = if(below(hvg,0),hvg+1,if(above(hvg,1),hvg-1,hvg));\\nhvb = h - .333333;\\nhvb = if(below(hvb,0),hvb+1,if(above(hvb,1),hvb-1,hvb));\\nr = if(below(6*hvr,1),tmpa+(tmpb-tmpa)*6*hvr, if(below(2*hvr,1),tmpb, if(below(hvr*3,2),tmpa+(tmpb-tmpa)*(.666666-hvr)*6,tmpa)));\\ng = if(below(6*hvg,1),tmpa+(tmpb-tmpa)*6*hvg, if(below(2*hvg,1),tmpb, if(below(hvg*3,2),tmpa+(tmpb-tmpa)*(.666666-hvg)*6,tmpa)));\\nb = if(below(6*hvb,1),tmpa+(tmpb-tmpa)*6*hvb, if(below(2*hvb,1),tmpb, if(below(hvb*3,2),tmpa+(tmpb-tmpa)*(.666666-hvb)*6,tmpa)));"}],"init_eqs_eel":"","frame_eqs_eel":"chng=sin(time*.5);\\ncthr=.9999;\\nmq21=if(above(chng,cthr),rand(3),mq21);\\nmq22=if(above(chng,cthr),rand(3),mq22);\\nmq23=if(above(chng,cthr),rand(3),mq23);\\nmq24=if(above(chng,cthr),rand(2),mq24);\\nmq25=if(above(chng,cthr),rand(2),mq25);\\nmq26=if(above(chng,cthr),rand(2),mq26);\\nmq27=if(above(chng,cthr),rand(1),mq27);\\nmq28=if(above(chng,cthr),rand(1),mq28);\\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\\nmq31=if(above(chng,cthr),rand(1)*.3,mq31);\\nmonitor=chng;\\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\\nq27=mq27;q28=mq28;q29=mq29;q31=mq31;\\n\\nmonitor=mq1;\\nvol=bass+treb+mid;\\natime=atime+vol;\\nq11=.4+sin(atime*.006        )*.4;\\nq12=.4+cos(atime*.00613828348)*.4;\\nq13=.4+sin(atime*.00598593455)*.4;\\nmonitor=q13;\\nq4=sin(atime*.03);\\nq5=cos(atime*.030383824);\\nq6=tan(atime*.029384834);\\n\\nq6=aspecty;        t1=t1+1;\\nq1=bnot(t1%400);   decay=(t1>1);\\n\\nt=t+.001/fps;  \\ns1=500*sin(t);     s2=20+10*sin(.5*t);   \\ni=0;\\n\\nloop(1024,\\n\\np1=.5*p1+s2*sin(s1*i);     p2= p1-p2;\\n\\nx1=x1+cos(p2-p1);          y1=y1+sin(p2-p1);\\n\\ngmegabuf(2*i)=x1;   gmegabuf(2*i+1)=y1;\\n\\ni=i+1;);\\n\\n\\nzoom=1-(1-pow(2,(bass+treb+mid)*.0031));","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  ret_1 = (texture (sampler_main, uv).xyz + ((\\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5)\\n   / 256.0) * 7.0));\\n  vec3 tmpvar_2;\\n  tmpvar_2 = fract((ret_1 - (\\n    (clamp (((vol / vol_att) - 1.1), 0.0, 1.0) * 0.5)\\n   + 0.004)));\\n  ret_1 = tmpvar_2;\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = tmpvar_2;\\n  ret = tmpvar_3.xyz;\\n }","comp":" shader_body { \\n  vec3 crisp_1;\\n  vec2 uv3_2;\\n  vec2 uv2_3;\\n  vec3 ret_4;\\n  vec2 tmpvar_5;\\n  tmpvar_5 = ((uv - 0.5) * aspect.xy);\\n  float tmpvar_6;\\n  tmpvar_6 = (0.1 / (sqrt(\\n    dot (tmpvar_5, tmpvar_5)\\n  ) + 0.05));\\n  vec2 tmpvar_7;\\n  float tmpvar_8;\\n  tmpvar_8 = (ang / 3.14);\\n  tmpvar_7.x = tmpvar_8;\\n  tmpvar_7.y = (tmpvar_6 * 1.5);\\n  uv2_3.y = (tmpvar_7.y + (0.1 * time));\\n  uv2_3.x = (tmpvar_8 + (0.02 * time));\\n  uv3_2.y = (tmpvar_6 + q30);\\n  uv3_2.x = (tmpvar_8 + (time / 32.0));\\n  crisp_1 = ((texture (sampler_main, fract(uv2_3)).xyz + (2.0 * texture (sampler_main, \\n    fract(uv3_2)\\n  ).xyz)) + ((2.0 * \\n    ((texture (sampler_blur2, fract(uv2_3)).xyz * scale2) + bias2)\\n  ) + (2.0 * \\n    ((texture (sampler_blur2, fract(uv3_2)).xyz * scale2) + bias2)\\n  )));\\n  crisp_1 = ((3.0 * crisp_1) * rad);\\n  float tmpvar_9;\\n  tmpvar_9 = clamp ((1.0 - (4.0 * rad)), 0.0, 1.0);\\n  ret_4 = ((crisp_1 + (\\n    ((vec3(1.0, 0.0, 1.0) * uv.y) * pow ((1.0 - rad), 8.0))\\n   * tmpvar_9)) + (tmpvar_9 * texture (sampler_main, fract(uv)).xyz));\\n  vec4 tmpvar_10;\\n  tmpvar_10 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv3_2.xyy) * (\\n    (q28 * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q31)));\\n  if (((ret_4.x > (q26 * q13)) && (ret_4.x <= (q23 * q11)))) {\\n    ret_4.z = (ret_4.z - (tmpvar_10.x * 0.5));\\n  };\\n  if (((ret_4.y > (q25 * q11)) && (ret_4.y <= (q22 * q12)))) {\\n    ret_4.x = (ret_4.x - (tmpvar_10.y * 0.5));\\n  };\\n  if (((ret_4.z > (q24 * q12)) && (ret_4.z <= (q21 * q13)))) {\\n    ret_4.y = (ret_4.y - (tmpvar_10.z * 0.5));\\n  };\\n  ret_4 = (ret_4 * 0.8);\\n  ret_4 = (1.0 - ret_4);\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 1.0;\\n  tmpvar_11.xyz = ret_4;\\n  ret = tmpvar_11.xyz;\\n }"}')},6590:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":4,"gammaadj":1,"decay":0.94,"echo_zoom":1.868,"echo_alpha":0.45,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"brighten":1,"darken":1,"solarize":1,"wave_a":4.1,"wave_scale":100,"wave_smoothing":0,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1.681,"warpscale":2.953,"zoomexp":0.01,"zoom":0.9901,"warp":1.24699,"wave_r":0,"wave_g":0,"wave_x":0.489,"ob_size":0.005,"ob_a":1,"ib_size":0,"ib_r":1,"ib_g":0,"ib_b":0,"ib_a":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"q1 = aspectX;\\nq2 = aspectY;\\nw1 = asin(1)*0.7;\\nw2 = asin(1)*1.3;\\nq5 = sin(w1);\\nq6 = cos(w1);\\nq7 = sin(w2);\\nq8 = cos(w2);\\nw1 = asin(1)*0.7;\\nw2 = asin(1)*1.3;\\nq9 = sin(w1);\\nq10 = cos(w1);\\nq11 = sin(w2);\\nq12 = cos(w2);\\nzoom = 1;//0.999;\\n//warp = 0;\\n//wave_a = 0;\\nq13 = oldq13 + 0.1*(bass*bass*bass_att*bass_att);\\noldq13 = q13;","pixel_eqs_eel":"r = bass/4;\\ncx1 = 0.5+sin(time*0.618)*0.2;\\ncy1 = 0.5+cos(time*1.618)*0.2;\\nd = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));\\ndir = (bass)*(r*r-d*d)*0.3;\\nx1 = if( above(d,r),0,  sin(y-cy1)*dir);\\ny1 = if( above(d,r),0, -sin(x-cx1)*dir);\\n\\n\\ncx1 = 0.5+sin(time*2.618)*0.3;\\ncy1 = 0.5+cos(time*3.14)*0.3;\\nd = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));\\ndir = -(mid)*(r*r-d*d)*0.3;\\nx2 = if( above(d,r),0,  sin(y-cy1)*dir);\\ny2 = if( above(d,r),0, -sin(x-cx1)*dir);\\n\\ncx1 = 0.5+sin(-time*2.618)*0.4;\\ncy1 = 0.5+cos(-time*1.14)*0.4;\\nd = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));\\ndir = -(treb)*(r*r-d*d)*0.3;\\nx3 = if( above(d,r),0,  sin(y-cy1)*dir);\\ny3 = if( above(d,r),0, -sin(x-cx1)*dir);\\n\\n\\ndx = x1+x2+x3;\\ndy = y1+y2+y3;","warp":" shader_body { \\n  vec3 ret_1;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv);\\n  ret_1 = (tmpvar_2.xyz + ((tmpvar_2.xyz - \\n    ((texture (sampler_blur2, uv).xyz * scale2) + bias2)\\n  ) * 0.6));\\n  ret_1 = (ret_1 * 0.9);\\n  ret_1 = (ret_1 + ((\\n    ((texture (sampler_noise_lq, ((\\n      (uv_orig * texsize.xy)\\n     * \\n      (texsize_noise_lq.zw * 0.4)\\n    ) + rand_frame.xy)).xyz - 0.5) / 256.0)\\n   * 12.0) * clamp (\\n    (treb_att - 1.0)\\n  , 0.0, 1.0)));\\n  vec3 tmpvar_3;\\n  tmpvar_3 = mix (ret_1, vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))), vec3(0.08, 0.08, 0.08));\\n  ret_1 = tmpvar_3;\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = tmpvar_3;\\n  ret = tmpvar_4.xyz;\\n }","comp":"vec2 xlat_mutablers;\\n shader_body { \\n  vec2 uv1_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = ((uv - 0.5) * aspect.xy);\\n  xlat_mutablers.x = ((ang / 3.14) + q28);\\n  xlat_mutablers.y = ((0.1 / (0.05 + \\n    sqrt(dot (tmpvar_2, tmpvar_2))\\n  )) + (time * 0.5));\\n  vec2 tmpvar_3;\\n  tmpvar_3 = fract(xlat_mutablers);\\n  vec2 tmpvar_4;\\n  tmpvar_4.y = 0.0;\\n  tmpvar_4.x = texsize.z;\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = 0.0;\\n  tmpvar_5.y = texsize.w;\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = (texture (sampler_main, (tmpvar_3 - tmpvar_4)).xyz - texture (sampler_main, (tmpvar_3 + tmpvar_4)).xyz).x;\\n  tmpvar_6.y = (texture (sampler_main, (tmpvar_3 - tmpvar_5)).xyz - texture (sampler_main, (tmpvar_3 + tmpvar_5)).xyz).x;\\n  uv1_1 = ((0.3 * cos(\\n    (fract(xlat_mutablers) * 16.0)\\n  )) - (4.0 * tmpvar_6));\\n  vec4 tmpvar_7;\\n  tmpvar_7.w = 1.0;\\n  tmpvar_7.xyz = ((1.0 + bass_att) * ((3.2 * vec3(\\n    clamp ((0.04 / sqrt(dot (uv1_1, uv1_1))), 0.0, 1.0)\\n  )) * (0.6 - \\n    (texture (sampler_main, tmpvar_3).xyz + ((texture (sampler_blur1, tmpvar_3).xyz * scale1) + bias1))\\n  )));\\n  ret = tmpvar_7.xyz;\\n }"}')},359:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":2,"gammaadj":1.9,"echo_zoom":1.169,"wave_mode":2,"wave_a":0.027,"wave_scale":1.015,"wave_smoothing":0.522,"modwavealphastart":0.83,"modwavealphaend":1.31,"warpanimspeed":30.965,"warpscale":2.572,"zoom":1.00901,"warp":0.00054,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = 0.85 + 0.25*sin(0.437*time+1);\\nwave_g = 0.85 + 0.25*sin(0.544*time+2);\\nwave_b = 0.85 + 0.25*sin(0.751*time+3);\\nrot = rot + 0.010*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );\\ncx = cx + 0.210*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\ncy = cy + 0.210*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\\ndx = dx + 0.003*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );\\ndy = dy + 0.003*( 0.60*sin(0.284*time) + 0.40*sin(0.247*time) );\\ndecay = decay - 0.01*equal(frame%6,0);\\ndx = dx + dx_residual;\\ndy = dy + dy_residual;\\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.96+1.3);\\ndx_residual = equal(bass_thresh,2.13)*0.016*sin(time*7) + (1-equal(bass_thresh,2.13))*dx_residual;\\ndy_residual = equal(bass_thresh,2.13)*0.012*sin(time*9) + (1-equal(bass_thresh,2.13))*dy_residual;\\nwave_x = wave_x - dx_residual*7;\\nwave_y = wave_y - dy_residual*7;\\nwave_mystery = time*0.03;\\n\\n//zoom = zoom + 0.005*( 0.60*sin(0.1934*time+3) + 0.40*sin(0.307*time+9) );\\n//zoom = zoom + max(0,bass_att-1.1)*0.2;\\n//warp = warp + max(0,treb_att-1.1)*1.0;\\n\\n// this is a great way to respond to beats:\\n// once you get one, let it decay at a constant rate!!\\nrg = max(rg*0.77, 0.02 + 0.5*min(2,max(0,mid_att-1)*1.3));\\nq9 = rg;\\n\\nzoom = zoom + q9*0.1;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  ret_1 = (texture (sampler_main, uv).xyz + ((\\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5)\\n   / 256.0) * 3.0));\\n  vec3 tmpvar_2;\\n  tmpvar_2 = fract((ret_1 - 0.005));\\n  ret_1 = tmpvar_2;\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = tmpvar_2;\\n  ret = tmpvar_3.xyz;\\n }","comp":" shader_body { \\n  vec2 uv1_1;\\n  vec3 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv).xyz;\\n  vec2 tmpvar_3;\\n  tmpvar_3.y = 0.0;\\n  tmpvar_3.x = texsize.z;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = 0.0;\\n  tmpvar_4.y = texsize.w;\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = (texture (sampler_main, (uv - tmpvar_3)).xyz - texture (sampler_main, (uv + tmpvar_3)).xyz).x;\\n  tmpvar_5.y = (texture (sampler_main, (uv - tmpvar_4)).xyz - texture (sampler_main, (uv + tmpvar_4)).xyz).x;\\n  uv1_1 = ((0.3 * cos(\\n    (((uv - 0.5) * 2.0) + 1.7)\\n  )) - (2.0 * tmpvar_5));\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = ((-(tmpvar_2) / 4.0) + ((6.0 * vec3(\\n    clamp ((0.03 / sqrt(dot (uv1_1, uv1_1))), 0.0, 1.0)\\n  )) * (-0.08 + tmpvar_2)));\\n  ret = tmpvar_6.xyz;\\n }"}')},7984:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":2,"gammaadj":1,"decay":0.997,"echo_zoom":0.997,"echo_orient":1,"wave_thick":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.01,"wave_smoothing":0.27,"wave_mystery":-0.38,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.99951,"warp":0.01,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"ib_r":1,"ib_g":1,"ib_b":1,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"sides":3,"rad":0.34,"ang":0.53,"r":0.56,"g":0.36,"r2":0.9,"border_r":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ang = ang + time;"},{"baseVals":{"sides":3,"rad":0.41,"r":0,"g":0.8,"b":0.7,"g2":0.4,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ang = ang - time*.333;"},{"baseVals":{"sides":3,"rad":0.21,"r":0.84,"r2":1,"g2":0.58,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ang = ang + time*4;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x = .5 + (bass*.2)*sin(sample*2*(time*10*treb));\\ny = .5 + (bass*.2)*cos(sample*2*(time*10*treb));\\nr = 1 + .5*sin(sample*.10+(time*10*bass));\\ng = 1 + .5*sin(sample*2+(time*50*treb));\\nb = 1 + .5*sin(sample*5+(time*20*mid));\\na = r;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"tst = 10;","frame_eqs_eel":"warp = 0;\\nbassspin = if(above(bass*.09,bassspin),bassspin+.002,bassspin-.002);\\nbassspin = bassspin*above(bassspin,0);\\nbassc = bassc+bassspin;\\nq1 = bassc;\\nq2 = frame%int(36+12*sin(time*.1));\\ntst = if(equal(q2,1),10+int(rand(45)),tst);\\nq3 = tst;\\ndecay = .92;","pixel_eqs_eel":"zoom = zoom + (.03*(bass_att*bass_att))*rad;\\nrot = rot + rad*(-2.5&(cos(time)*5))*.01;\\nzoom = zoom+((treb_att*.01));","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (texture (sampler_fw_main, uv).xyz - 0.04);\\n  ret = tmpvar_1.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 8.0);\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1)).y;\\n  tmpvar_3.y = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1)).y;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (uv + (tmpvar_3 * 0.55));\\n  vec3 tmpvar_5;\\n  tmpvar_5 = mix (ret_1, (1.0 - ret_1), ((0.7 * \\n    ((texture (sampler_blur1, tmpvar_4).xyz * scale1) + bias1)\\n  ) + (0.2 * texture (sampler_main, uv).xyz)));\\n  vec3 tmpvar_6;\\n  tmpvar_6 = mix (tmpvar_5, ((\\n    (tmpvar_5 - (0.1 * ((texture (sampler_blur3, tmpvar_4).xyz * scale3) + bias3)))\\n   + \\n    (0.1 * ((texture (sampler_blur1, (\\n      (tmpvar_4 * 1.25)\\n     - 0.125)).xyz * scale1) + bias1))\\n  ) + (0.42 * texture (sampler_main, tmpvar_4).xyz)), vec3(0.25, 0.25, 0.25));\\n  vec3 x_7;\\n  x_7 = (tmpvar_6 - 0.5);\\n  ret_1 = (tmpvar_6 * clamp ((\\n    sqrt(dot (x_7, x_7))\\n   * 5.0), 0.0, 1.0));\\n  ret_1 = (vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))) + 1.25);\\n  ret_1 = (ret_1 * (ret_1 * 0.45));\\n  ret_1 = (ret_1 * mix ((0.9 * ret_1), (\\n    (1.2 * ret_1)\\n   * \\n    ((((texture (sampler_blur3, uv).xyz * scale3) + bias3) - ((texture (sampler_blur1, uv).xyz * scale1) + bias1)) - (0.25 * ((texture (sampler_blur2, tmpvar_4).xyz * scale2) + bias2)))\\n  ), pow (hue_shader.zxy, ret_1)));\\n  ret_1 = (ret_1 + 0.02);\\n  ret_1 = (ret_1 * ret_1);\\n  ret_1 = (ret_1 * hue_shader.zxy);\\n  ret_1 = (ret_1 * (2.0 + max (treb_att, mid_att)));\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = ret_1;\\n  ret = tmpvar_8.xyz;\\n }"}')},9252:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":4,"decay":0.99,"wave_dots":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"wave_a":100,"wave_scale":28.599,"wave_smoothing":0.5,"wave_mystery":-1,"modwavealphastart":0.4,"modwavealphaend":1,"warpanimspeed":100,"warpscale":4.142,"zoomexp":0.85437,"zoom":0.99951,"warp":0.01,"sx":1.01,"sy":1.01,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_l":1.5,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"rad":0.40031,"r":0.5,"g":0.5,"r2":0.5,"g2":0,"border_b":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"sounds=(bass+treb+mid)*.3;\\n\\nrad=rad*sounds*0.6;\\n\\nr=r+sin(bass)*g;\\ng=g+sin(mid)*g;\\n\\n\\nx=x+0.207*cos(time*bass*0.5)*2;\\ny=y+0.207*sin(time*bass*0.5)*2;\\n\\nr = bass_att;\\ng = mid;\\nb = treb;"},{"baseVals":{"enabled":1,"sides":100,"rad":0.13465,"r2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"\\ng2=g2+0.09*sin((treb+mid)*1.23);\\ng=g+0.09*cos((bass+mid)*1.37);\\n\\nsounds=(bass+mid+treb)/3;\\n\\nrad=rad*(treb+mid)/3;\\n\\nx=x+0.300*sin(time*bass);\\ny=y+0.317*cos(time*bass);\\n\\nr = treb;\\ng = mid;\\nb = bass_att;"},{"baseVals":{"sides":100,"rad":0.20047,"g":1,"b":1,"r2":0.5,"g2":0.5,"b2":1,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"sounds=(bass+treb+mid)/3;\\natt=(bass_att+treb_att+mid_att)/3;\\natt=(bass_att+treb_att+mid_att)/3;\\nr2=r2+(0.25*sin(time*6.28))-bass;\\ng2=g2+(0.25*sin(time*6.28))-bass;\\n\\nrad=rad;\\nx=x+0.217*cos(time*2.3)+sounds*0.1;\\ny=y+0.217*sin((time*3.5)+(sounds*0.3));"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"sep":256,"scaling":20.35074,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"r=r+0.5*sin(treb*1.13);\\ng=g+0.5*sin(bass*1.33);\\nb=b+0.5*sin(mid*1.23);","point_eqs_eel":""},{"baseVals":{"sep":256,"usedots":1,"scaling":100,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"warp=bass*.2;\\nwarp=warp+(above(bass,1)*bass*.2);\\n\\necho_alpha=(above(bass,1.25)*.9);\\n\\n//mv_a=(above(bass,1)*bass*.5);\\n\\n// Awesome beat code by martin!\\ndec_med = pow (0.9, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\n\\nFR = if(is_beat,if(above(FR,0),-1,1),FR);\\n\\nq2=q2+(above(bass,1.3)*sin(time)*.02);\\n\\nrot=(rot+q2)*FR;\\n\\nzoom=zoom+(above(bass,1.3)*bass*.03);\\n\\nsy=sy+(above(treb_att,1.2)*treb_att*.002*sin(time));\\nsx=sx+(above(treb_att,1.2)*treb_att*.002*sin(time));","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  vec3 tmpvar_2;\\n  tmpvar_2 = (texture (sampler_noise_lq, ((\\n    ((texsize.xy * texsize_noise_lq.zw).x * uv)\\n   / 2.0) + q23)) + 1.0).xyz;\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur1, uv).xyz * scale1) + bias1) - 0.3);\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = (0.3 * tmpvar_3.x);\\n  tmpvar_4.y = tmpvar_3.y;\\n  ret_1 = ((-0.4 * (\\n    ((texture (sampler_blur1, ((uv / 4.0) + (0.4 * tmpvar_4))).xyz * scale1) + bias1)\\n   - \\n    (tmpvar_2 * 0.1)\\n  )) + (texture (sampler_main, (uv + \\n    (tmpvar_3 * 0.01)\\n  .xy)).xyz + (tmpvar_2 * 0.1)));\\n  float tmpvar_5;\\n  tmpvar_5 = (1.0 - ((0.01 * q28) * (q28 * rad)));\\n  ret_1 = (ret_1 * (0.98 * (tmpvar_5 * tmpvar_5)));\\n  ret_1 = (ret_1 - 0.04);\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = ret_1;\\n  ret = tmpvar_6.xyz;\\n }","comp":" shader_body { \\n  vec2 uv1_1;\\n  vec3 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv).xyz;\\n  vec2 tmpvar_3;\\n  tmpvar_3.y = 0.0;\\n  tmpvar_3.x = texsize.z;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = 0.0;\\n  tmpvar_4.y = texsize.w;\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = (texture (sampler_main, (uv - tmpvar_3)).xyz - texture (sampler_main, (uv + tmpvar_3)).xyz).x;\\n  tmpvar_5.y = (texture (sampler_main, (uv - tmpvar_4)).xyz - texture (sampler_main, (uv + tmpvar_4)).xyz).x;\\n  uv1_1 = ((0.3 * cos(\\n    (((uv - 0.5) * 2.0) + 1.7)\\n  )) - (2.0 * tmpvar_5));\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = ((-(tmpvar_2) / 4.0) + ((6.0 * vec3(\\n    clamp ((0.03 / sqrt(dot (uv1_1, uv1_1))), 0.0, 1.0)\\n  )) * (-0.08 + tmpvar_2)));\\n  ret = tmpvar_6.xyz;\\n }"}')},899:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":0.16,"decay":0.96,"echo_zoom":0.997,"echo_alpha":0.5,"echo_orient":1,"wave_mode":2,"wave_dots":1,"wave_brighten":0,"wrap":0,"darken_center":1,"darken":1,"wave_a":0.001,"wave_scale":0.012,"wave_smoothing":0.9,"warpanimspeed":0.01,"warpscale":1.47,"zoomexp":4.77802,"zoom":0.99816,"warp":0.01,"sx":1.00183,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"ob_size":0.005,"ob_a":0.5,"ib_size":0.5,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":3,"mv_y":2,"mv_dx":0.02,"mv_dy":-0.02,"mv_l":0.15,"mv_r":0.49,"mv_g":0.48,"mv_b":0.3,"mv_a":0,"b1ed":0.3},"shapes":[{"baseVals":{"sides":100,"textured":1,"rad":1.86832,"tex_zoom":1.14605,"g":1,"b":1,"a":0.1,"r2":1,"b2":1,"a2":0.1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ang = .25*time;"},{"baseVals":{"enabled":1,"sides":5,"additive":1,"textured":1,"rad":1.75612,"ang":0.75398,"tex_zoom":0.7418,"g":1,"b":1,"a":0.02,"r2":1,"b2":1,"a2":0.02,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"a = .025;\\na2 = .025;\\n\\nang=sin(q1*0.15);\\nx=sin(q1*0.5) * 0.05 + 0.5;\\ny=cos(q1*0.63)* 0.05 + 0.5"},{"baseVals":{"enabled":1,"sides":5,"textured":1,"rad":1.06779,"ang":0.75398,"tex_zoom":0.77977,"g":1,"b":1,"r2":1,"b2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ang=sin(q1*0.15);\\nx=sin(q1*0.5) * 0.05 + 0.5;\\ny=cos(q1*0.63)* 0.05 + 0.5"},{"baseVals":{"sides":5,"textured":1,"rad":1.0677,"ang":0.75398,"tex_zoom":0.77977,"g":1,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ang=sin(q1*0.15);\\nx=sin(q1*0.5) * 0.05 + 0.5;\\ny=cos(q1*0.63)* 0.05 + 0.5"}],"waves":[{"baseVals":{"enabled":1,"thick":1,"r":0,"g":0.5,"b":0.1},"init_eqs_eel":"","frame_eqs_eel":"t1=bass_att*sin(time)*0.5+0.5;\\nt2=bass_att*sin(time+2.1)*0.5+0.5;\\nt3=treb_att*sin(time+4.2)*0.5+0.5;\\n\\nt4=treb_att*sin(-time+1.1)*0.5+0.5;\\nt5=mid_att*sin(-time+3.1)*0.5+0.5;\\nt6=mid_att*sin(-time+5.2)*0.5+0.5;","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=(flip+1)*below(flip,1);\\n\\nxp=0;\\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2)*0.5 +0.5;\\n\\nxq=xp;\\nsinang=sin(ang);cosang=cos(ang);\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3.1 + 0.5);\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2.3)*1.75 - 1.05;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp*sinang + zp*cosang;\\nyq=yp;\\nzq=xp*cosang - zp*sinang;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq;\\nyp=yq*cosang - zq*sinang;\\nzp=yq*sinang + zq*cosang;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\ndx = if(flip,x,dx-x);\\ndy = if(flip,y,dy-y);\\ndz = pow(dx*dx+dy*dy,.5);\\nang = abs(asin(dx/dz));\\ncang = if(flip,cang,if(below(dx,0),if(below(dy,0),-ang,3.141592654 + ang),if(below(dy,0),ang,3.141592654 - ang)));\\nr = .5 + .5*sin(cang);\\ng = .5 + .5*sin(cang + 1.047197);\\nb = .5 + .5*sin(cang + 2.094395);\\n\\na=(1-sample)*above(sample,0);\\n"},{"baseVals":{"enabled":1,"thick":1,"r":0.2,"b":0.6},"init_eqs_eel":"","frame_eqs_eel":"t1=mid_att*sin(time)*0.5+0.5;\\nt2=treb_att*sin(time+2.1)*0.5+0.5;\\nt3=mid_att*sin(time+4.2)*0.5+0.5;\\n\\nt4=bass_att*sin(-time+1.1)*0.5+0.5;\\nt5=bass_att*sin(-time+3.1)*0.5+0.5;\\nt6=treb_att*sin(-time+5.2)*0.5+0.5;","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2 +0.1;\\nyp=-yp;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2)*0.5 +0.5;\\n\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3.1 + 0.5);\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2.3)*1.75 - 1.05;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp*sinang + zp*cosang;\\nyq=yp;\\nzq=xp*cosang - zp*sinang;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq;\\nyp=yq*cosang - zq*sinang;\\nzp=yq*sinang + zq*cosang;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\ndx = if(flip,x,dx-x);\\ndy = if(flip,y,dy-y);\\ndz = pow(dx*dx+dy*dy,.5);\\nang = abs(asin(dx/dz));\\ncang = if(flip,cang,if(below(dx,0),if(below(dy,0),-ang,3.141592654 + ang),if(below(dy,0),ang,3.141592654 - ang)));\\nr = .5 + .5*sin(cang);\\ng = .5 + .5*sin(cang + 1.047197);\\nb = .5 + .5*sin(cang + 2.094395);\\n\\na=(1-sample)*above(sample,0);"},{"baseVals":{"thick":1,"additive":1,"g":0.6,"b":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\\ntm=q1;\\nphs=-sample*0.5;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2+phs - 2)*0.5 +0.5 + 2;\\n\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\n\\nang=cos(tm*2+phs - 2)*1.5 ;\\nxp=xq*sin(ang) + yq*cos(ang);\\nyp=xq*cos(ang) - yq*sin(ang);\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2+phs - 0.5)*1.5;\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3 + 0.5 +phs + 0.5);\\nxp=xq*sin(ang) + yq*cos(ang);\\nyp=xq*cos(ang) - yq*sin(ang);\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2+phs)*0.75 - 1.05;\\nxq=xp*sin(ang) + zp*cos(ang);\\nyq=yp;\\nzq=xp*cos(ang) - zp*sin(ang);\\n\\n//upper arm up down;\\nang=cos(tm+phs)*0.5 - 0.5;\\nxp=xq;\\nyp=yq*cos(ang) - zq*sin(ang);\\nzp=yq*sin(ang) + zq*cos(ang);\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=(1-sample)*0.05\\n"},{"baseVals":{"thick":1,"additive":1,"g":0.3,"b":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\\ntm=q1 ;\\nphs=-sample*0.5;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2+phs-2)*0.5 +0.5 + 2;\\n\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\n\\nang=cos(tm*2+phs-2)*1.5;\\nxp=xq*sin(ang) + yq*cos(ang);\\nyp=xq*cos(ang) - yq*sin(ang);\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2+phs-0.5)*1.5;\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3 + 0.5 +phs);\\nxp=xq*sin(ang) + yq*cos(ang);\\nyp=xq*cos(ang) - yq*sin(ang);\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2+phs)*0.75 - 1.05;\\nxq=xp*sin(ang) + zp*cos(ang);\\nyq=yp;\\nzq=xp*cos(ang) - zp*sin(ang);\\n\\n//upper arm up down;\\nang=cos(tm+phs)*0.5 - 0.5;\\nxp=xq;\\nyp=yq*cos(ang) - zq*sin(ang);\\nzp=yq*sin(ang) + zq*cos(ang);\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=-xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=(1-sample)*0.05;\\n"}],"init_eqs_eel":"","frame_eqs_eel":"decay=.999;\\nwrap=sin(time*10);\\nmv_dx=bass;\\nib_a=.005;\\n\\n\\nvol=(bass+mid+treb)*0.55;\\nvol=vol*vol;\\n\\nmtime=mtime+vol*0.01*(48/fps);\\n\\nq1=mtime*0.5;\\n\\n\\ndt=1/FPS;\\nmytime=mytime+dt;\\ncontvol=min( max(.5, (1-.5*dt)*contvol+.5*dt*(bass+mid+treb)*.133 ) ,2 ) ;\\nq2=contvol;\\nq3=mytime;\\necho_zoom=1+(vol*0.01);\\nsx=-.019-sin(time)*0.1+0.5;","pixel_eqs_eel":"zoom=1.005-(rad/100);\\nrot=rad/100;\\n//sy=-1.02;","warp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (vec2(1.0, 0.0) * texsize.z);\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (vec2(0.0, 1.0) * texsize.z);\\n  ret_1 = (((\\n    (texture (sampler_main, (uv + tmpvar_2)).xyz + texture (sampler_main, (uv + tmpvar_2)).xyz)\\n   * 0.5) + (\\n    (texture (sampler_main, (uv + tmpvar_3)).xyz + texture (sampler_main, (uv + tmpvar_3)).xyz)\\n   * 0.5)) - texture (sampler_main, ((\\n    (uv - 0.5)\\n   * 0.9) + 0.5)).xyz);\\n  ret_1 = (ret_1 - 0.4);\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = ret_1;\\n  ret = tmpvar_4.xyz;\\n }","comp":" shader_body { \\n  vec3 crisp_1;\\n  vec2 uv3_2;\\n  vec2 uv2_3;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = ((uv - 0.5) * aspect.xy);\\n  float tmpvar_5;\\n  tmpvar_5 = (0.1 / (sqrt(\\n    dot (tmpvar_4, tmpvar_4)\\n  ) + 0.1));\\n  vec2 tmpvar_6;\\n  float tmpvar_7;\\n  tmpvar_7 = (ang / 3.14);\\n  tmpvar_6.x = tmpvar_7;\\n  tmpvar_6.y = (tmpvar_5 * 2.5);\\n  uv2_3.y = (tmpvar_6.y + (0.25 * time));\\n  uv2_3.x = (tmpvar_7 + (time / 32.0));\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = tmpvar_7;\\n  tmpvar_8.y = (tmpvar_5 * 2.5);\\n  uv3_2.x = tmpvar_8.x;\\n  uv3_2.y = (tmpvar_8.y + (0.08 * time));\\n  crisp_1 = ((texture (sampler_main, uv2_3).xyz + texture (sampler_main, uv3_2).xyz) + ((2.0 * \\n    ((texture (sampler_blur2, fract(uv2_3)).xyz * scale2) + bias2)\\n  ) + (2.0 * \\n    ((texture (sampler_blur2, fract(uv3_2)).xyz * scale2) + bias2)\\n  )));\\n  crisp_1 = ((3.5 * crisp_1) * rad);\\n  float tmpvar_9;\\n  tmpvar_9 = clamp ((1.0 - (200.0 * rad)), 0.0, 1.0);\\n  vec4 tmpvar_10;\\n  tmpvar_10.w = 1.0;\\n  tmpvar_10.xyz = ((crisp_1 + (\\n    ((vec3(0.0, 0.0, 1.0) * uv.y) * pow ((1.0 - rad), 8.0))\\n   * tmpvar_9)) + (tmpvar_9 * texture (sampler_main, uv).xyz));\\n  ret = tmpvar_10.xyz;\\n }"}')},9122:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":2,"gammaadj":1,"wave_mode":7,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":0.001,"wave_scale":0.958,"wave_smoothing":0.45,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":30.965,"warpscale":2.572,"zoom":1.00901,"warp":0.00054,"wave_r":0,"wave_g":0,"wave_b":0,"mv_x":25.6,"mv_y":9.6,"mv_l":0,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"textured":1,"x":0.09,"y":0.9,"rad":0.22437,"tex_zoom":1.76002,"r2":1,"g2":0,"a2":0.6,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"additive":1,"x":0.26,"y":0.2,"rad":0.39317,"tex_zoom":6.19589,"r":0,"g":0.55,"b":0.5,"g2":0.4,"b2":0.4,"a2":0.07,"border_r":0.3,"border_g":0.7,"border_b":0.8,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":44,"additive":1,"x":0.503,"rad":0.03886,"tex_zoom":0.60986,"g":0.1,"a":0.9,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"rad":0.01,"tex_zoom":0.49981,"r":0,"g2":0,"border_r":0.2,"border_g":0.7,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"samples":282,"sep":20,"usedots":1,"thick":1,"additive":1,"scaling":3.91581,"smoothing":0.1,"r":0.2,"g":0.3,"a":0.6,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"usedots":1,"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"r":0,"g":0.2,"b":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = 0.85 + 0.25*sin(0.437*time+1);\\nwave_g = 0.85 + 0.25*sin(0.544*time+2);\\nwave_b = 0.85 + 0.25*sin(0.751*time+3);\\nrot = rot + 0.010*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );\\ncx = cx + 0.210*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\ncy = cy + 0.210*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\\ndx = dx + 0.003*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );\\ndy = dy + 0.003*( 0.60*sin(0.284*time) + 0.40*sin(0.247*time) );\\ndecay = decay - 0.01*equal(frame%6,0);\\ndx = dx + dx_residual;\\ndy = dy + dy_residual;\\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.96+1.3);\\ndx_residual = equal(bass_thresh,2.13)*0.016*sin(time*7) + (1-equal(bass_thresh,2.13))*dx_residual;\\ndy_residual = equal(bass_thresh,2.13)*0.012*sin(time*9) + (1-equal(bass_thresh,2.13))*dy_residual;\\nwave_x = wave_x - dx_residual*7;\\nwave_y = wave_y - dy_residual*7;\\nwave_mystery = time*0.03;\\n\\n//zoom = zoom + 0.005*( 0.60*sin(0.1934*time+3) + 0.40*sin(0.307*time+9) );\\n//zoom = zoom + max(0,bass_att-1.1)*0.2;\\n//warp = warp + max(0,treb_att-1.1)*1.0;\\n\\n// this is a great way to respond to beats:\\n// once you get one, let it decay at a constant rate!!\\nrg = max(rg*0.77, 0.02 + 0.5*min(2,max(0,mid_att-1)*1.3));\\nq9 = rg;\\n\\nzoom = zoom + q9*0.1;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  ret_1 = texture (sampler_main, uv).xyz;\\n  ret_1 = (ret_1 + ((ret_1 - \\n    ((((\\n      (texture (sampler_blur1, uv).xyz * scale1)\\n     + bias1) * 0.3) + ((\\n      (texture (sampler_blur2, uv).xyz * scale2)\\n     + bias2) * 0.4)) + (((texture (sampler_blur3, uv).xyz * scale3) + bias3) * 0.3))\\n  ) * 0.3));\\n  ret_1 = (ret_1 * 0.9);\\n  ret_1 = (ret_1 + ((\\n    ((texture (sampler_noise_lq, ((\\n      (uv_orig * texsize.xy)\\n     * \\n      (texsize_noise_lq.zw * 0.4)\\n    ) + rand_frame.xy)).xyz - 0.5) / 256.0)\\n   * 122.0) * (\\n    (clamp ((treb_att - 1.0), 0.0, 1.0) * 0.4)\\n   + 0.3)));\\n  ret_1 = mix (ret_1, vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))), vec3(0.2, 0.2, 0.2));\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ret_1;\\n  ret = tmpvar_2.xyz;\\n }","comp":"vec2 xlat_mutabledz;\\nvec3 xlat_mutableret1;\\nvec2 xlat_mutableuv3;\\n shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1.y = 0.0;\\n  tmpvar_1.x = texsize.z;\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = 0.0;\\n  tmpvar_2.y = texsize.w;\\n  vec2 uv_3;\\n  float inten_4;\\n  float dist_5;\\n  vec2 uv1_6;\\n  vec3 ret_7;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = ((uv - 0.5) * aspect.xy);\\n  float tmpvar_9;\\n  tmpvar_9 = (time / 18.0);\\n  dist_5 = (1.0 - fract((0.25 + tmpvar_9)));\\n  inten_4 = ((sqrt(dist_5) * (1.0 - dist_5)) * 4.0);\\n  uv_3 = (tmpvar_8 * aspect.yx);\\n  xlat_mutableuv3 = (vec2(0.51, 0.55) + (uv_3 * dist_5));\\n  xlat_mutabledz.x = (inten_4 * ((2.0 * \\n    dot (texture (sampler_main, (xlat_mutableuv3 + tmpvar_1)).xyz, vec3(0.32, 0.49, 0.29))\\n  ) - (2.0 * \\n    dot (texture (sampler_main, (xlat_mutableuv3 - tmpvar_1)).xyz, vec3(0.32, 0.49, 0.29))\\n  )));\\n  xlat_mutabledz.y = (inten_4 * ((2.0 * \\n    dot (texture (sampler_main, (xlat_mutableuv3 + tmpvar_2)).xyz, vec3(0.32, 0.49, 0.29))\\n  ) - (2.0 * \\n    dot (texture (sampler_main, (xlat_mutableuv3 - tmpvar_2)).xyz, vec3(0.32, 0.49, 0.29))\\n  )));\\n  xlat_mutableret1 = max (vec3(0.0, 0.0, 0.0), (texture (sampler_main, xlat_mutableuv3).xyz * inten_4));\\n  dist_5 = (1.0 - fract((0.5 + tmpvar_9)));\\n  inten_4 = ((sqrt(dist_5) * (1.0 - dist_5)) * 4.0);\\n  uv_3 = (tmpvar_8 * aspect.yx);\\n  xlat_mutableuv3 = (vec2(0.49, 0.55) + (uv_3 * dist_5));\\n  xlat_mutabledz.x = (xlat_mutabledz.x + (inten_4 * (\\n    (2.0 * dot (texture (sampler_main, (xlat_mutableuv3 + tmpvar_1)).xyz, vec3(0.32, 0.49, 0.29)))\\n   - \\n    (2.0 * dot (texture (sampler_main, (xlat_mutableuv3 - tmpvar_1)).xyz, vec3(0.32, 0.49, 0.29)))\\n  )));\\n  xlat_mutabledz.y = (xlat_mutabledz.y + (inten_4 * (\\n    (2.0 * dot (texture (sampler_main, (xlat_mutableuv3 + tmpvar_2)).xyz, vec3(0.32, 0.49, 0.29)))\\n   - \\n    (2.0 * dot (texture (sampler_main, (xlat_mutableuv3 - tmpvar_2)).xyz, vec3(0.32, 0.49, 0.29)))\\n  )));\\n  xlat_mutableret1 = max (xlat_mutableret1, (texture (sampler_main, xlat_mutableuv3).xyz * inten_4));\\n  dist_5 = (1.0 - fract((0.75 + tmpvar_9)));\\n  inten_4 = ((sqrt(dist_5) * (1.0 - dist_5)) * 4.0);\\n  uv_3 = (tmpvar_8 * aspect.yx);\\n  xlat_mutableuv3 = (vec2(0.51, 0.55) + (uv_3 * dist_5));\\n  xlat_mutabledz.x = (xlat_mutabledz.x + (inten_4 * (\\n    (2.0 * dot (texture (sampler_main, (xlat_mutableuv3 + tmpvar_1)).xyz, vec3(0.32, 0.49, 0.29)))\\n   - \\n    (2.0 * dot (texture (sampler_main, (xlat_mutableuv3 - tmpvar_1)).xyz, vec3(0.32, 0.49, 0.29)))\\n  )));\\n  xlat_mutabledz.y = (xlat_mutabledz.y + (inten_4 * (\\n    (2.0 * dot (texture (sampler_main, (xlat_mutableuv3 + tmpvar_2)).xyz, vec3(0.32, 0.49, 0.29)))\\n   - \\n    (2.0 * dot (texture (sampler_main, (xlat_mutableuv3 - tmpvar_2)).xyz, vec3(0.32, 0.49, 0.29)))\\n  )));\\n  xlat_mutableret1 = max (xlat_mutableret1, (texture (sampler_main, xlat_mutableuv3).xyz * inten_4));\\n  dist_5 = (1.0 - fract((1.0 + tmpvar_9)));\\n  inten_4 = ((sqrt(dist_5) * (1.0 - dist_5)) * 4.0);\\n  uv_3 = (tmpvar_8 * aspect.yx);\\n  xlat_mutableuv3 = (vec2(0.49, 0.55) + (uv_3 * dist_5));\\n  xlat_mutabledz.x = (xlat_mutabledz.x + (inten_4 * (\\n    (2.0 * dot (texture (sampler_main, (xlat_mutableuv3 + tmpvar_1)).xyz, vec3(0.32, 0.49, 0.29)))\\n   - \\n    (2.0 * dot (texture (sampler_main, (xlat_mutableuv3 - tmpvar_1)).xyz, vec3(0.32, 0.49, 0.29)))\\n  )));\\n  xlat_mutabledz.y = (xlat_mutabledz.y + (inten_4 * (\\n    (2.0 * dot (texture (sampler_main, (xlat_mutableuv3 + tmpvar_2)).xyz, vec3(0.32, 0.49, 0.29)))\\n   - \\n    (2.0 * dot (texture (sampler_main, (xlat_mutableuv3 - tmpvar_2)).xyz, vec3(0.32, 0.49, 0.29)))\\n  )));\\n  xlat_mutableret1 = max (xlat_mutableret1, (texture (sampler_main, xlat_mutableuv3).xyz * inten_4));\\n  xlat_mutabledz = (xlat_mutabledz * (0.5 + rand_preset.z));\\n  vec2 tmpvar_10;\\n  tmpvar_10 = (2.0 * (rand_preset.xy - 0.5));\\n  uv1_6 = (4.0 * tmpvar_8);\\n  vec2 tmpvar_11;\\n  tmpvar_11 = sin(((uv1_6 + xlat_mutabledz) + tmpvar_10));\\n  vec2 tmpvar_12;\\n  tmpvar_12 = sin(((uv1_6 + \\n    (xlat_mutabledz * 1.4)\\n  ) + tmpvar_10));\\n  vec2 tmpvar_13;\\n  tmpvar_13 = sin(((uv1_6 + \\n    (xlat_mutabledz * 1.8)\\n  ) + tmpvar_10));\\n  vec3 tmpvar_14;\\n  tmpvar_14.x = inversesqrt(dot (tmpvar_11, tmpvar_11));\\n  tmpvar_14.y = inversesqrt(dot (tmpvar_12, tmpvar_12));\\n  tmpvar_14.z = inversesqrt(dot (tmpvar_13, tmpvar_13));\\n  ret_7 = (((\\n    (tmpvar_14 * ((vec3(0.01, 0.01, 0.01) * (1.0 + \\n      (rand_preset.xyz / 2.0)\\n    )) * (0.5 + rand_preset.y)))\\n   * \\n    ((((rand_preset.x - 0.5) * 4.0) * xlat_mutableret1) + (8.0 * (1.0 + rand_preset)).xyz)\\n  ) - (xlat_mutableret1.x * 0.5)) + ((xlat_mutableret1.y + xlat_mutableret1.z) / 3.0));\\n  ret_7 = (ret_7 - ((slow_roam_sin.wzy * roam_cos.zxy) * 0.4));\\n  ret_7 = (ret_7 * (1.0 + ret_7));\\n  vec4 tmpvar_15;\\n  tmpvar_15.w = 1.0;\\n  tmpvar_15.xyz = ret_7;\\n  ret = tmpvar_15.xyz;\\n }"}')},6629:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":4,"decay":0.99,"wave_dots":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"wave_a":100,"wave_scale":28.599,"wave_smoothing":0.5,"wave_mystery":-1,"modwavealphastart":0.4,"modwavealphaend":1,"warpanimspeed":100,"warpscale":4.142,"zoomexp":0.85437,"zoom":0.99951,"warp":0.01,"sx":1.01,"sy":1.01,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_l":1.5,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"rad":0.40031,"r":0.5,"g":0.5,"r2":0.5,"g2":0,"border_b":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"sounds=(bass+treb+mid)*.3;\\n\\nrad=rad*sounds*0.6;\\n\\nr=r+sin(bass)*g;\\ng=g+sin(mid)*g;\\n\\n\\nx=x+0.207*cos(time*bass*0.5)*2;\\ny=y+0.207*sin(time*bass*0.5)*2;\\n\\nr = bass_att;\\ng = mid;\\nb = treb;"},{"baseVals":{"enabled":1,"sides":100,"rad":0.13465,"r2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"\\ng2=g2+0.09*sin((treb+mid)*1.23);\\ng=g+0.09*cos((bass+mid)*1.37);\\n\\nsounds=(bass+mid+treb)/3;\\n\\nrad=rad*(treb+mid)/3;\\n\\nx=x+0.300*sin(time*bass);\\ny=y+0.317*cos(time*bass);\\n\\nr = treb;\\ng = mid;\\nb = bass_att;"},{"baseVals":{"sides":100,"rad":0.20047,"g":1,"b":1,"r2":0.5,"g2":0.5,"b2":1,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"sounds=(bass+treb+mid)/3;\\natt=(bass_att+treb_att+mid_att)/3;\\natt=(bass_att+treb_att+mid_att)/3;\\nr2=r2+(0.25*sin(time*6.28))-bass;\\ng2=g2+(0.25*sin(time*6.28))-bass;\\n\\nrad=rad;\\nx=x+0.217*cos(time*2.3)+sounds*0.1;\\ny=y+0.217*sin((time*3.5)+(sounds*0.3));"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"sep":256,"scaling":20.35074,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"r=r+0.5*sin(treb*1.13);\\ng=g+0.5*sin(bass*1.33);\\nb=b+0.5*sin(mid*1.23);","point_eqs_eel":""},{"baseVals":{"sep":256,"usedots":1,"scaling":100,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"warp=bass*.2;\\nwarp=warp+(above(bass,1)*bass*.2);\\n\\necho_alpha=(above(bass,1.25)*.9);\\n\\n//mv_a=(above(bass,1)*bass*.5);\\n\\n// Awesome beat code by martin!\\ndec_med = pow (0.9, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\n\\nFR = if(is_beat,if(above(FR,0),-1,1),FR);\\n\\nq2=q2+(above(bass,1.3)*sin(time)*.02);\\n\\nrot=(rot+q2)*FR;\\n\\nzoom=zoom+(above(bass,1.3)*bass*.03);\\n\\nsy=sy+(above(treb_att,1.2)*treb_att*.002*sin(time));\\nsx=sx+(above(treb_att,1.2)*treb_att*.002*sin(time));","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 my_uv_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (0.02 * aspect.zw);\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur2, \\n    ((uv + (vec2(1.0, 0.0) * tmpvar_3)) - floor((uv + (vec2(1.0, 0.0) * tmpvar_3))))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    ((uv - (vec2(1.0, 0.0) * tmpvar_3)) - floor((uv - (vec2(1.0, 0.0) * tmpvar_3))))\\n  ).xyz * scale2) + bias2));\\n  vec3 tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_blur2, \\n    ((uv + (vec2(0.0, 1.0) * tmpvar_3)) - floor((uv + (vec2(0.0, 1.0) * tmpvar_3))))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    ((uv - (vec2(0.0, 1.0) * tmpvar_3)) - floor((uv - (vec2(0.0, 1.0) * tmpvar_3))))\\n  ).xyz * scale2) + bias2));\\n  vec3 tmpvar_6;\\n  tmpvar_6 = ((texture (sampler_blur1, uv).xyz * scale1) + bias1);\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = tmpvar_4.y;\\n  tmpvar_7.y = tmpvar_5.y;\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = tmpvar_5.x;\\n  tmpvar_8.y = -(tmpvar_4.x);\\n  vec2 tmpvar_9;\\n  tmpvar_9 = ((uv - (tmpvar_7 * vec2(0.01, 0.01))) - (tmpvar_8 * -0.02));\\n  ret_2.y = texture (sampler_fc_main, (tmpvar_9 - floor(tmpvar_9))).y;\\n  ret_2.y = (ret_2.y + ((\\n    (ret_2.y - tmpvar_6.y)\\n   * 0.02) + 0.005));\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = tmpvar_4.x;\\n  tmpvar_10.y = tmpvar_5.x;\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = tmpvar_5.z;\\n  tmpvar_11.y = -(tmpvar_4.z);\\n  my_uv_1 = ((uv - (tmpvar_10 * vec2(0.01, 0.01))) - (tmpvar_11 * -0.02));\\n  ret_2.x = texture (sampler_fc_main, (my_uv_1 - floor(my_uv_1))).x;\\n  ret_2.x = (ret_2.x + ((\\n    (ret_2.x - tmpvar_6.x)\\n   * 0.02) + 0.005));\\n  vec2 tmpvar_12;\\n  tmpvar_12.x = tmpvar_4.z;\\n  tmpvar_12.y = tmpvar_5.z;\\n  vec2 tmpvar_13;\\n  tmpvar_13.x = tmpvar_5.y;\\n  tmpvar_13.y = -(tmpvar_4.y);\\n  my_uv_1 = ((uv - (tmpvar_12 * vec2(0.01, 0.01))) - (tmpvar_13 * -0.02));\\n  ret_2.z = texture (sampler_fc_main, (my_uv_1 - floor(my_uv_1))).z;\\n  ret_2.z = (ret_2.z + ((\\n    (ret_2.z - tmpvar_6.z)\\n   * 0.02) + 0.005));\\n  vec4 tmpvar_14;\\n  tmpvar_14.w = 1.0;\\n  tmpvar_14.xyz = ret_2;\\n  ret = tmpvar_14.xyz;\\n }","comp":" shader_body { \\n  vec2 uv1_1;\\n  vec3 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv).xyz;\\n  vec2 tmpvar_3;\\n  tmpvar_3.y = 0.0;\\n  tmpvar_3.x = texsize.z;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = 0.0;\\n  tmpvar_4.y = texsize.w;\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = (texture (sampler_main, (uv - tmpvar_3)).xyz - texture (sampler_main, (uv + tmpvar_3)).xyz).x;\\n  tmpvar_5.y = (texture (sampler_main, (uv - tmpvar_4)).xyz - texture (sampler_main, (uv + tmpvar_4)).xyz).x;\\n  uv1_1 = ((0.3 * cos(\\n    (((uv - 0.5) * 2.0) + 1.7)\\n  )) - (2.0 * tmpvar_5));\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = ((-(tmpvar_2) / 4.0) + ((6.0 * vec3(\\n    clamp ((0.03 / sqrt(dot (uv1_1, uv1_1))), 0.0, 1.0)\\n  )) * (-0.08 + tmpvar_2)));\\n  ret = tmpvar_6.xyz;\\n }"}')},7499:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"additivewave":1,"wave_dots":1,"wave_thick":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.527,"wave_smoothing":0,"wave_mystery":0.6,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_g":0.49,"ob_a":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b2x":0.6,"b3x":0.4,"b1ed":0},"shapes":[{"baseVals":{"sides":8,"additive":1,"num_inst":256,"rad":0.03632,"tex_ang":1.00531,"tex_zoom":1.53117,"g":1,"b":1,"a":0,"g2":0,"border_r":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":5,"additive":1,"num_inst":256,"x":0.26,"y":0.2,"rad":0.39317,"tex_zoom":0.9355,"g2":0,"a2":0.2,"border_g":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"n = (instance);\\nFLen = reg00;\\nSLen = reg00/2;\\n\\nz0 = 10;\\ny0 = gmegabuf(2000+n+FLen)/z0;\\nx0 = gmegabuf(2000+n)/z0;\\n\\na0 = (gmegabuf(n+10000));\\n\\nk1 = instance/num_inst-.5;\\nx = .5 + x0 + sin(k1*8*sin(q12*.07)) * sin(q11*.13)*q3*.7; \\ny = .5 + q32*(y0 + sin(k1*8*sin(q14*.1)) * sin(q13*.2)*q3*.7); \\n\\narg = q2/8;\\nhigh = exp(-500*pow(arg+.5-instance/num_inst,2));\\nhigh += exp(-500*pow(-arg+.5-instance/num_inst,2));\\n\\nexc = sqrt((pow(x-.5,2)+pow(y-.5,2)));\\nrad0 = above(z0,0)*min (.1, a0/60)+.005;\\nrad0 = rad0 * (1+2*exc) * (1+high);\\n\\np1 = .5 + sin(q12)/2;\\np2 = .5 + sin(q13*1.4)/2;\\n//p1 = rand(1)-.5;\\n//p2 = rand(1)-.5;\\nexc = ((pow(x-p1,2)+pow(y-p2,2)));\\nrad = min(rad0 * (1 + .004*q3/abs(exc)),1) ;\\n\\na = min(a0*8+.4,1);\\n\\nk1 = instance/num_inst*5 + high;\\nw = 1-exp(-treb_att/2-.5);\\ng = w + (1-w)*sin(k1);\\nr = w + (1-w)*sin(k1-6.28/3);\\nb = w + (1-w)*sin(k1-6.28*2/3);\\n\\na2 = a/4;\\ng2 = g*0; b2 = b*0; r2 = r*0;"},{"baseVals":{"sides":13,"additive":1,"num_inst":5,"x":0.65,"y":0.38,"rad":0.57049,"tex_zoom":0.73678,"a":0.7,"g2":0,"border_r":0.5,"border_g":0.5,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"k1 = instance/num_inst;\\nx = .5 + .3*sin(instance*k1*413);\\ny = .5 + .3 * sin(instance*k1*113);\\n\\nrad = .1 + .4*sin(k1*333);\\n\\nr =  .5*sin(k1*234);\\nb =  .5*sin(k1*534);\\ng =  .5*sin(k1*34);"},{"baseVals":{"sides":14,"additive":1,"thickoutline":1,"textured":1,"x":0.6,"y":0.55,"rad":0.97237,"ang":1.25664,"tex_zoom":0.34933,"g":0.6,"g2":0,"b2":1,"border_r":0.2,"border_g":0.7,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"sep":120,"spectrum":1,"additive":1,"scaling":7.52386,"smoothing":0,"r":0,"a":0.7},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"FLen = reg00;\\n\\nn = int(sample*FLen);\\nvol = (value1+value2) * (1+ .1 / (sample+.03));\\n\\nchg = min(max(vol- gmegabuf(n),-1),1);\\ndec = if (chg>0, 1-chg*0.3, 1+chg*0.2);\\n\\nchg = q1 -q2;\\ndec = .94 - abs(chg) * if (chg> 0, .2,.1);\\n\\ndec = min(max(dec,0),1);\\ngmegabuf(n) = gmegabuf(n)*dec + vol*(1-dec);\\n\\ndec = q2/4;\\n//dec = .90;\\ndec = max(min(dec,1),.1);\\n\\ngmegabuf(n) = gmegabuf(n)*dec + gmegabuf(n+(q2<.8))*(1-dec);\\ngmegabuf(n+10000) = gmegabuf(n+10000)*.2 + .8* vol/3;\\na = .0;\\nx = sample;\\ny = .2 + gmegabuf(n+0)*.23;"},{"baseVals":{"samples":256,"usedots":1,"scaling":0.89152,"smoothing":0.82,"a":0.9,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"samples":32,"thick":1,"scaling":0.89152,"smoothing":0.82,"r":0,"g":0.2,"b":0.6,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"n = 0;\\nloop (50000,\\ngmegabuf(n) = 0;\\nmegabuf(n) = 0;\\nn = n+1;\\n);\\n\\nsw1 = rand(8);\\nsw2 = rand(8);\\nsw3 = rand(8);\\nsw4 = rand(8);","frame_eqs_eel":"flen = 512; //Wave Punkte\\nreg00 = FLen;\\nSLen = FLen/2;\\ndec_m = pow(.94, 30/fps);\\n\\n//Volume\\nn = 0; vol = 0;\\nloop (SLen,\\n  vol = vol + pow(gmegabuf(n),2)/FLen;  \\n  n = n+1;\\n);\\nvol = sqrt(vol)/2;\\nvol_ = vol_*dec_m + (1-dec_m)* (vol);\\n\\n//switches\\nlev1 = lev1 * dec_m + (1-dec_m) * gmegabuf(1);\\nlev2 = lev2 * dec_m + (1-dec_m) * gmegabuf(20);\\nlev3 = lev3 * dec_m + (1-dec_m) * gmegabuf(50);\\nlev4 = lev4 * dec_m + (1-dec_m) * gmegabuf(100);\\nsw1 = sw1 + (lev1-gmegabuf(1)>0)/fps;\\nsw2 = sw2 + (lev2-gmegabuf(20)>0)/fps;\\nsw3 = sw3 + (lev3-gmegabuf(50)>0)/fps;\\nsw4 = sw4 + (lev4-gmegabuf(100)>0)/fps;\\n\\ndif = (1+sin(sw3/4))*16+2;\\nofs = sin(sw2/3)*8;\\nn = 0; k1 = frame*0; \\nloop (SLen,\\n      m1 = (n)%SLen;\\n      m2 = (n+ofs)%SLen;\\n\\n      k = (m1+dif)%SLen;\\n      i = (SLen+m2-dif)%SLen;\\n\\n      in1 = (gmegabuf(m1)-gmegabuf(k))/pow(vol_+.03,.8)*1.2;\\n      in2 = (gmegabuf(m2)-gmegabuf(i))/pow(vol_+.03,.8)*1.2;\\n\\n      dec = if (pow(gmegabuf(2000+n),2) + pow(gmegabuf(2000+FLen+n),2)> in1*in1+in2*in2,.8,.94) ;\\n      dec = pow (dec, 30/fps); \\n\\n      gmegabuf(2000+n) =       gmegabuf(2000+n)*dec      +(1-dec)* in1;\\n      gmegabuf(2000+FLen+n) =  gmegabuf(2000+FLen+n)*dec +(1-dec)* in2;\\n      n=n+1;\\n);\\n\\nq1 = (bass+treb+mid)/3;\\nq2 = (bass_att+treb_att+mid_att)/3;\\nq3 = vol_;\\nq11 = sw1;\\nq12 = sw2;\\nq13 = sw3;\\nq14 = sw4;\\n\\nrot = 0; zoom = .98; warp = .3; rot = 0;\\n\\nq32 = aspecty;\\nmonitor = dif;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = ((texture (sampler_main, uv).xyz * clamp (\\n    (q1 - 0.8)\\n  , 0.0, 1.0)) * 0.92);\\n  ret = tmpvar_1.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  vec3 tmpvar_2;\\n  tmpvar_2.xy = uv;\\n  tmpvar_2.z = q2;\\n  vec2 tmpvar_3;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (uv - 0.5);\\n  tmpvar_3 = ((tmpvar_4 * vec2(-1.0, 1.0)) + 0.5);\\n  ret_1 = (((\\n    (mix (texture (sampler_main, ((tmpvar_4 * 0.98) + 0.5)).xyz, texture (sampler_main, ((\\n      (tmpvar_3 - 0.5)\\n     * 0.98) + 0.5)).xyz, vec3(0.5, 0.5, 0.5)) + ((texture (sampler_blur3, uv).xyz * scale3) + bias3))\\n   + \\n    ((texture (sampler_blur3, tmpvar_3).xyz * scale3) + bias3)\\n  ) + (\\n    (texture (sampler_blur1, uv).xyz * scale1)\\n   + bias1)) + ((texture (sampler_blur1, tmpvar_3).xyz * scale1) + bias1));\\n  ret_1 = (ret_1 * texture (sampler_noisevol_hq, (tmpvar_2 - (roam_sin.zyx * roam_cos.ywx))).xyz);\\n  ret_1 = (ret_1 * 2.0);\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = ret_1;\\n  ret = tmpvar_5.xyz;\\n }"}')},4792:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":2,"wave_dots":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken_center":1,"darken":1,"wave_a":0.001,"wave_scale":5.552,"wave_smoothing":0.504,"wave_mystery":-1,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_g":0,"wave_b":0,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"sides":100,"textured":1,"y":0.9,"rad":0.15493,"tex_zoom":0.77977,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":5,"textured":1,"rad":0.986,"tex_ang":3.14159,"tex_zoom":0.99979,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ang =sin(time/65) ;// ang + (bass*.2) + (time*.4);"},{"baseVals":{"enabled":1,"sides":5,"additive":1,"x":0.9,"rad":0.22613,"g":0.6,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.05 + rand(900)/1000;\\ny = 0.05 + rand(900)/1000;\\nang = rand(320)/100;\\n "},{"baseVals":{"sides":36,"additive":1,"rad":0.01,"r":0,"g":0.12,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"spectrum":1,"usedots":1,"additive":1,"scaling":0.5033,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"dec_med = pow (0.96, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %4;\\nindex2 = (index2 + is_beat*bnot(index))%8;\\nindex3 = (index3 + is_beat*bnot(index)*bnot(index2))%3;\\n\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass + mid + treb;\\n\\n//k1 =  is_beat*bnot(index)*bnot(index2);\\n\\nk1 =  is_beat*equal(index,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\np3 = dec_med * p3+ (1-dec_med)*p2;\\nrott = p3*3.1416/2;\\n\\nrot1 = rot1 + q26;\\nq25 = .01*rot1;\\n\\nq27 = 8-index;\\nq28 = index3;\\n\\ndx1 = dec_med*dx1 + (1-dec_med)*bnot(index2);\\nq29 = dx1;\\nmonitor = q29;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;","pixel_eqs_eel":"rot = 0;\\ndx = .02*q29;\\nzoom = 1;","warp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = (((uv - vec2(0.5, 0.5)) * texsize.xy) * 0.015);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = (((0.995 * texture (sampler_main, \\n    (uv + (((\\n      (clamp ((sin(tmpvar_1) / cos(tmpvar_1)), vec2(-12.0, -12.0), vec2(12.0, 12.0)) * cos(((4.0 * \\n        (q2 + 1.0)\\n      ) * tmpvar_1.yx)))\\n     * texsize.zw) * 4.0) * (2.0 + q1)))\\n  ).xyz) + vec3(0.01, 0.01, 0.01)) - 0.02);\\n  ret = tmpvar_2.xyz;\\n }","comp":" shader_body { \\n  vec3 crisp_1;\\n  vec2 uv3_2;\\n  vec2 uv2_3;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = ((uv - 0.5) * aspect.xy);\\n  float tmpvar_5;\\n  tmpvar_5 = (0.1 / (sqrt(\\n    dot (tmpvar_4, tmpvar_4)\\n  ) + 0.1));\\n  vec2 tmpvar_6;\\n  float tmpvar_7;\\n  tmpvar_7 = (ang / 3.14);\\n  tmpvar_6.x = tmpvar_7;\\n  tmpvar_6.y = tmpvar_5;\\n  uv2_3.y = (tmpvar_5 + (0.1 * time));\\n  uv2_3.x = tmpvar_6.x;\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = tmpvar_7;\\n  tmpvar_8.y = (tmpvar_5 * 1.5);\\n  uv3_2.y = (tmpvar_8.y + (0.08 * time));\\n  uv3_2.x = (tmpvar_7 + (time / 32.0));\\n  crisp_1 = (((2.0 * texture (sampler_main, uv2_3).xyz) + texture (sampler_main, uv3_2).xyz) + ((2.0 * \\n    ((texture (sampler_blur2, fract(uv2_3)).xyz * scale2) + bias2)\\n  ) + (2.0 * \\n    ((texture (sampler_blur2, fract(uv3_2)).xyz * scale2) + bias2)\\n  )));\\n  crisp_1 = ((3.0 * crisp_1) * rad);\\n  float tmpvar_9;\\n  tmpvar_9 = clamp ((1.0 - (4.0 * rad)), 0.0, 1.0);\\n  vec4 tmpvar_10;\\n  tmpvar_10.w = 1.0;\\n  tmpvar_10.xyz = ((crisp_1 + (\\n    ((vec3(0.0, 0.0, 1.0) * uv.y) * pow ((1.0 - rad), 8.0))\\n   * tmpvar_9)) + (tmpvar_9 * texture (sampler_main, uv).xyz));\\n  ret = tmpvar_10.xyz;\\n }"}')},4789:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":3,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":1,"wave_dots":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.012,"wave_smoothing":0.9,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1,"mv_r":0.39,"mv_g":0.44,"mv_b":0.9,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":15,"additive":1,"textured":1,"rad":0.13478,"tex_zoom":1.62835,"r":0.3,"g":0.8,"b":1,"a":0.08,"g2":0.5,"b2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":11,"additive":1,"textured":1,"rad":0.1016,"r":0.3,"g":0.6,"b":1,"a":0.38,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":10,"additive":1,"rad":0.94761,"r":0.5,"g":0.2,"b":0.8,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"a=mid_att*mid_att*mid*0.002"},{"baseVals":{"enabled":1,"sides":100,"additive":1,"textured":1,"rad":0.01,"tex_zoom":0.04027,"g":0.2,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ang=time*0.1;\\na=mid*mid_att;\\na=min(a,1);\\na=1-a*0.4 * above(treb,0.9)"}],"waves":[{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1,"r":0.3,"g":0.7},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nphase=sin(n*3)*sin(n*7.9)*sin(n*16.7)*sin(n*63.5)*6;\\n\\nxp=sin(n+phase);\\nyp=cos(n+phase);\\nzp=0;\\n\\n//rotate on y during draw\\nang=n*2+phase;\\nxq=xp*sin(ang) + zp*cos(ang);\\nyq=yp;\\nzq=xp*cos(ang) - zp*sin(ang);\\n\\nr1=0.1;g1=0.3;b1=1;\\nr2=0.7;g2=0.1;b2=1.0;\\nfade=xq*0.5 + 0.5;\\nr=r1*fade + r2*(1-fade);\\ng=g1*fade + g2*(1-fade);\\nb=b1*fade + b2*(1-fade);\\n\\n//rotation;\\nang=time*0.1;\\nxp=xq*sin(ang) + zq*cos(ang);\\nyp=yq;\\nzp=xq*cos(ang) - zq*sin(ang);\\n\\nang=time*0.17;\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\n\\n\\n//push into viewspace\\nzq=zq+3.1;\\n\\n\\n//project into screenspace\\nxs=xq/zq;\\nys=yq/zq;\\n\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\na=(1)*0.3 * (pow(sin(n*4+time)*0.5+0.5,2));\\n\\nspark=sin(phase*35);\\nr=if( above(spark,0.93) , 0.6 , r);\\ng=if( above(spark,0.93) , 0.8 , g);\\nb=if( above(spark,0.93) , 1.0 , b);\\n"},{"baseVals":{"enabled":1,"thick":1,"additive":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*0.03+time*0.01;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nphase=sin(n*3)*sin(n*7.9)*sin(n*16.7)*sin(n*63.5)*6;\\n\\nxp=sin(n+phase);\\nyp=cos(n+phase);\\nzp=0;\\n\\n//rotate on y during draw\\nang=n*2+phase;\\nxq=xp*sin(ang) + zp*cos(ang);\\nyq=yp;\\nzq=xp*cos(ang) - zp*sin(ang);\\n\\nr1=0.1;g1=0.3;b1=1;\\nr2=1.0;g2=0.1;b2=0.5;\\nfade=xq*0.5 + 0.5;\\nr=r1*fade + r2*(1-fade);\\ng=g1*fade + g2*(1-fade);\\nb=b1*fade + b2*(1-fade);\\n\\n//rotation;\\nang=time*0.1;\\nxp=xq*sin(ang) + zq*cos(ang);\\nyp=yq;\\nzp=xq*cos(ang) - zq*sin(ang);\\n\\nang=time*0.17;\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\n\\n\\n//push into viewspace\\nzq=zq+3.1;\\n\\n\\n//project into screenspace\\nxs=xq/zq;\\nys=yq/zq;\\n\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\nwave=sin(n*8000)*sin(n*690)*sin(n*17000)*0.5+0.5;\\n\\na=sample*wave*0.4;\\n\\n"},{"baseVals":{"enabled":1,"thick":1,"additive":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*0.03+time*0.01+2.1;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nphase=sin(n*3)*sin(n*7.9)*sin(n*16.7)*sin(n*63.5)*6;\\n\\nxp=sin(n+phase);\\nyp=cos(n+phase);\\nzp=0;\\n\\n//rotate on y during draw\\nang=n*2+phase;\\nxq=xp*sin(ang) + zp*cos(ang);\\nyq=yp;\\nzq=xp*cos(ang) - zp*sin(ang);\\n\\nr1=0.1;g1=0.3;b1=1;\\nr2=1.0;g2=0.1;b2=0.5;\\nfade=xq*0.5 + 0.5;\\nr=r1*fade + r2*(1-fade);\\ng=g1*fade + g2*(1-fade);\\nb=b1*fade + b2*(1-fade);\\n\\n//rotation;\\nang=time*0.1;\\nxp=xq*sin(ang) + zq*cos(ang);\\nyp=yq;\\nzp=xq*cos(ang) - zq*sin(ang);\\n\\nang=time*0.17;\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\n\\n\\n//push into viewspace\\nzq=zq+3.1;\\n\\n\\n//project into screenspace\\nxs=xq/zq;\\nys=yq/zq;\\n\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\nwave=sin(n*8000)*sin(n*690)*sin(n*17000)*0.5+0.5;\\n\\na=sample*wave*0.4;\\n\\n"},{"baseVals":{"enabled":1,"thick":1,"additive":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*0.03+time*0.01+4.2;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nphase=sin(n*3)*sin(n*7.9)*sin(n*16.7)*sin(n*63.5)*6;\\n\\nxp=sin(n+phase);\\nyp=cos(n+phase);\\nzp=0;\\n\\n//rotate on y during draw\\nang=n*2+phase;\\nxq=xp*sin(ang) + zp*cos(ang);\\nyq=yp;\\nzq=xp*cos(ang) - zp*sin(ang);\\n\\nr1=0.1;g1=0.3;b1=1;\\nr2=1.0;g2=0.1;b2=0.5;\\nfade=xq*0.5 + 0.5;\\nr=r1*fade + r2*(1-fade);\\ng=g1*fade + g2*(1-fade);\\nb=b1*fade + b2*(1-fade);\\n\\n//rotation;\\nang=time*0.1;\\nxp=xq*sin(ang) + zq*cos(ang);\\nyp=yq;\\nzp=xq*cos(ang) - zq*sin(ang);\\n\\nang=time*0.17;\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\n\\n\\n//push into viewspace\\nzq=zq+3.1;\\n\\n\\n//project into screenspace\\nxs=xq/zq;\\nys=yq/zq;\\n\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\nwave=sin(n*8000)*sin(n*690)*sin(n*17000)*0.5+0.5;\\n\\na=sample*wave*0.4;\\n\\n"}],"init_eqs_eel":"","frame_eqs_eel":"dec_med = pow (0.96, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %4;\\nindex2 = (index2 + is_beat*bnot(index))%8;\\nindex3 = (index3 + is_beat*bnot(index)*bnot(index2))%3;\\n\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass + mid + treb;\\n\\n//k1 =  is_beat*bnot(index)*bnot(index2);\\n\\nk1 =  is_beat*equal(index,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\np3 = dec_med * p3+ (1-dec_med)*p2;\\nrott = p3*3.1416/2;\\n\\nrot1 = rot1 + q26;\\nq25 = .01*rot1;\\n\\nq27 = 8-index;\\nq28 = index3;\\n\\ndx1 = dec_med*dx1 + (1-dec_med)*bnot(index2);\\nq29 = dx1;\\nmonitor = q29;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;","pixel_eqs_eel":"rot = 0;\\ndx = .02*q29;\\nzoom = 1;","warp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = (((uv - vec2(0.5, 0.5)) * texsize.xy) * 0.015);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = (((0.985 * texture (sampler_main, \\n    (uv + (((\\n      (clamp ((sin(tmpvar_1) / cos(tmpvar_1)), vec2(-12.0, -12.0), vec2(12.0, 12.0)) * cos(((4.0 * \\n        (q2 + 1.0)\\n      ) * tmpvar_1.yx)))\\n     * texsize.zw) * 4.0) * (2.0 + q1)))\\n  ).xyz) + vec3(0.01, 0.01, 0.01)) - 0.02);\\n  ret = tmpvar_2.xyz;\\n }","comp":" shader_body { \\n  vec3 crisp_1;\\n  vec2 uv3_2;\\n  vec2 uv2_3;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = ((uv - 0.5) * aspect.xy);\\n  float tmpvar_5;\\n  tmpvar_5 = (0.15 / (sqrt(\\n    dot (tmpvar_4, tmpvar_4)\\n  ) + 0.2));\\n  vec2 tmpvar_6;\\n  float tmpvar_7;\\n  tmpvar_7 = (ang / 3.14);\\n  tmpvar_6.x = tmpvar_7;\\n  tmpvar_6.y = tmpvar_5;\\n  float tmpvar_8;\\n  tmpvar_8 = (0.15 * time);\\n  uv2_3.y = (tmpvar_5 + tmpvar_8);\\n  uv2_3.x = tmpvar_6.x;\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = tmpvar_7;\\n  tmpvar_9.y = (tmpvar_5 * 1.5);\\n  uv3_2.y = (tmpvar_9.y + tmpvar_8);\\n  uv3_2.x = (tmpvar_7 + (time / 32.0));\\n  crisp_1 = (((2.0 * texture (sampler_main, uv2_3).xyz) + texture (sampler_main, uv3_2).xyz) + ((2.0 * \\n    ((texture (sampler_blur2, fract(uv2_3)).xyz * scale2) + bias2)\\n  ) + (2.0 * \\n    ((texture (sampler_blur2, fract(uv3_2)).xyz * scale2) + bias2)\\n  )));\\n  crisp_1 = ((3.5 * crisp_1) * rad);\\n  float tmpvar_10;\\n  tmpvar_10 = clamp ((1.0 - (200.0 * rad)), 0.0, 1.0);\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 1.0;\\n  tmpvar_11.xyz = ((crisp_1 + (\\n    ((vec3(0.0, 0.0, 1.0) * uv.y) * pow ((1.0 - rad), 8.0))\\n   * tmpvar_10)) + (tmpvar_10 * texture (sampler_main, uv).xyz));\\n  ret = tmpvar_11.xyz;\\n }"}')},6620:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":0.16,"decay":0.96,"echo_zoom":0.997,"echo_alpha":0.5,"echo_orient":1,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":0.037,"warpscale":0.015,"warp":0.033,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0,"ob_r":0.11,"ob_b":0.1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0,"b1ed":0.3},"shapes":[{"baseVals":{"textured":1,"rad":1.79142,"tex_ang":0.62832,"g":1,"b":1,"a":0,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));"},{"baseVals":{"enabled":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));"},{"baseVals":{"enabled":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));"},{"baseVals":{"enabled":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));"}],"init_eqs_eel":"mv_x=64;mv_y=48;\\nnut=0;\\nstp=0;stq=0;\\nrtp=0;rtq=0;\\nwvr=0;\\ndecay=0;\\ndcsp=0;\\nwarp=0","frame_eqs_eel":"//krash\'s beat detection code\\nvolume = 0.3*(bass+mid+att);\\nbeatrate = equal(beatrate,0) + (1-equal(beatrate,0))*(below(volume,0.01) + (1-below(volume,0.01))*beatrate);\\nlastbeat = lastbeat + equal(lastbeat,0)*time;\\nmeanbass_att = 0.1*(meanbass_att*9 + bass_att);\\npeakbass_att = max(bass_att,peakbass_att);\\nbeatrate = max(if(beat,if(below(time-lastbeat,2*beatrate),0.1*(beatrate*9 + time - lastbeat),beatrate),beatrate),0.1);\\npeakbass_att = beat*bass_att + (1-beat)*peakbass_att*(above(time - lastbeat, 2*beatrate)*0.95 + (1-above(time - lastbeat, 2*beatrate))*0.995);\\nlastbeat = beat*time + (1-beat)*lastbeat;\\npeakbass_att = max(peakbass_att,1.1*meanbass_att);\\nbeat = above(volume,0.8)*below(peakbass_att - bass_att, 0.05*peakbass_att)*above(time - lastbeat, 0.1 + 0.5*(beatrate - 0.1));\\nbeatcounter = beatcounter + beat;\\nmode = if(beat*equal(beatcounter%2,0),1-mode,mode);\\nflip = 2*mode-1;\\nmonitor=flip;\\nq8=flip;\\nq7=0;\\n\\ndecay=0.88;\\nzoom=1.002;\\n\\nvol=(bass_att+mid_att+treb_att)*0.25;\\nvol=vol*vol;\\nmtime=mtime+vol*0.1*flip;\\n\\nq1=mtime*0.4;\\n\\nwarp=0.3","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 uv_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = normalize((uv_orig - 0.5));\\n  float tmpvar_3;\\n  tmpvar_3 = (time * 7.0);\\n  uv_1 = (mix (uv_orig, uv, vec2((\\n    clamp ((((bass / bass_att) - 0.9) * 13.0), 0.0, 1.0)\\n   * 0.3))) + ((\\n    (tmpvar_2 * texsize.zw)\\n   * \\n    cos(((rad * 170.0) - tmpvar_3))\\n  ) * 2.0));\\n  uv_1 = (uv_1 + ((\\n    (vec2(5.0, -5.0) * texsize.zw)\\n   * \\n    cos(((ang * 30.0) - tmpvar_3))\\n  ) * tmpvar_2.yx));\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = ((texture (sampler_main, uv_1).xyz - 0.004) * 0.83);\\n  ret = tmpvar_4.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = (1.0 - uv.x);\\n  tmpvar_2.y = uv.y;\\n  vec3 tmpvar_3;\\n  tmpvar_3 = vec3((texture (sampler_main, uv).x + texture (sampler_main, tmpvar_2).x));\\n  vec2 tmpvar_4;\\n  vec4 tmpvar_5;\\n  tmpvar_5 = texture (sampler_blur1, uv);\\n  tmpvar_4 = (((uv - 0.5) * (1.0 - \\n    ((tmpvar_5.xyz * scale1) + bias1)\\n  .zzz).xy) + 0.5);\\n  vec3 tmpvar_6;\\n  tmpvar_6 = (tmpvar_3 + clamp ((\\n    pow (texture (sampler_main, tmpvar_4).zzz, vec3(0.5, 0.5, 0.5))\\n   * \\n    (1.0 - (tmpvar_3.x * 2.0))\\n  ), 0.0, 1.0));\\n  vec3 tmpvar_7;\\n  tmpvar_7 = (tmpvar_6 + clamp ((\\n    pow (((texture (sampler_blur1, tmpvar_4).xyz * scale1) + bias1).zzz, vec3(0.5, 0.5, 0.5))\\n   * \\n    (1.0 - (tmpvar_6.x * 2.0))\\n  ), 0.0, 1.0));\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 0.0;\\n  tmpvar_8.xyz = mix ((vec3((\\n    ((tmpvar_5.xyz * scale1) + bias1)\\n  .x + \\n    ((texture (sampler_blur3, uv).xyz * scale3) + bias3)\\n  .x)) + (\\n    ((texture (sampler_blur1, tmpvar_2).xyz * scale1) + bias1)\\n  .x + \\n    ((texture (sampler_blur3, tmpvar_2).xyz * scale3) + bias3)\\n  .x)), tmpvar_7, tmpvar_7);\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = uv.x;\\n  tmpvar_9.y = (1.0 - uv.y);\\n  ret_1 = (pow (tmpvar_8, (0.5 + \\n    (4.0 * roam_cos)\\n  )).xyz + pow ((texture (sampler_main, tmpvar_9).yyy + texture (sampler_main, \\n    (1.0 - uv)\\n  ).yyy), vec3(0.6, 0.95, 5.0)));\\n  ret_1 = (1.0 - exp((-2.0 * ret_1)));\\n  vec4 tmpvar_10;\\n  tmpvar_10.w = 1.0;\\n  tmpvar_10.xyz = ret_1;\\n  ret = tmpvar_10.xyz;\\n }"}')},367:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":0.16,"decay":0.96,"echo_zoom":0.997,"echo_alpha":0.5,"echo_orient":1,"wave_mode":2,"wave_dots":1,"wave_brighten":0,"wrap":0,"darken_center":1,"darken":1,"wave_a":0.001,"wave_scale":0.012,"wave_smoothing":0.9,"warpanimspeed":0.01,"warpscale":1.47,"zoomexp":4.77802,"zoom":0.99816,"warp":0.01,"sx":1.00183,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"ob_size":0.005,"ob_a":0.5,"ib_size":0.5,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":3,"mv_y":2,"mv_dx":0.02,"mv_dy":-0.02,"mv_l":0.15,"mv_r":0.49,"mv_g":0.48,"mv_b":0.3,"mv_a":0,"b1ed":0.3},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"usedots":1,"thick":1,"r":0.1,"b":0.7},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.05*sample + (sin(tm)*0.5 + 0.5)*0.2 + 0.05;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2)*0.5 +0.5;\\n\\nxq=xp;\\nsa=sin(ang);ca=cos(ang);\\nyq=yp*sa + zp*ca;\\nzq=yp*ca - zp*sa;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8;\\nsa=sin(ang);ca=cos(ang);\\nxp=xq*sa + yq*ca;\\nyp=xq*ca - yq*sa;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nxq=xp;\\nsa=sin(ang);ca=cos(ang);\\nyq=yp*sa + zp*ca;\\nzq=yp*ca - zp*sa;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3 + 0.5);\\nsa=sin(ang);ca=cos(ang);\\nxp=xq*sa + yq*ca;\\nyp=xq*ca - yq*sa;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2)*0.75 - 1.05;\\nsa=sin(ang);ca=cos(ang);\\nxq=xp*sa + zp*ca;\\nyq=yp;\\nzq=xp*ca - zp*sa;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nxp=xq;\\nsa=sin(ang);ca=cos(ang);\\nyp=yq*ca - zq*sa;\\nzp=yq*sa + zq*ca;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=(1-sample);\\n"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"r":0.2,"b":0.6},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.05*sample + (sin(tm)*0.5 + 0.5)*0.2 + 0.05;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2)*0.5 +0.5;\\n\\nxq=xp;\\nsa=sin(ang);ca=cos(ang);\\nyq=yp*sa + zp*ca;\\nzq=yp*ca - zp*sa;\\nyq=-yp;\\nzq=zp;\\n\\nang=tm*8;\\nsa=sin(ang);ca=cos(ang);\\nxp=xq*sa + yq*ca;\\nyp=xq*ca - yq*sa;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nxq=xp;\\nsa=sin(ang);ca=cos(ang);\\nyq=yp*sa + zp*ca;\\nzq=yp*ca - zp*sa;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3 + 0.5);\\nsa=sin(ang);ca=cos(ang);\\nxp=xq*sa + yq*ca;\\nyp=xq*ca - yq*sa;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2)*0.75 - 1.05;\\nsa=sin(ang);ca=cos(ang);\\nxq=xp*sa + zp*ca;\\nyq=yp;\\nzq=xp*ca - zp*sa;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nxp=xq;\\nsa=sin(ang);ca=cos(ang);\\nyp=yq*ca - zq*sa;\\nzp=yq*sa + zq*ca;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=(1-sample);\\n"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"g":0.72,"b":0.1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1*sample + (sin(tm)*0.5 + 0.5)*0.2 + 0.05;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*1.9)*0.5 +0.5;\\n\\nxq=xp;\\nsa=sin(ang);ca=cos(ang);\\nyq=yp*sa + zp*ca;\\nzq=yp*ca - zp*sa;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8;\\nsa=sin(ang);ca=cos(ang);\\nxp=xq*sa + yq*ca;\\nyp=xq*ca - yq*sa;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2.3 - 0.5)*1.5;\\nxq=xp;\\nsa=sin(ang);ca=cos(ang);\\nyq=yp*sa + zp*ca;\\nzq=yp*ca - zp*sa;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3 + 0.5);\\nsa=sin(ang);ca=cos(ang);\\nxp=xq*sa + yq*ca;\\nyp=xq*ca - yq*sa;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2)*0.75 - 1.05;\\nsa=sin(ang);ca=cos(ang);\\nxq=xp*sa + zp*ca;\\nyq=yp;\\nzq=xp*ca - zp*sa;\\n\\n//upper arm up down;\\nang=cos(tm*0.9)*0.5 - 0.5;\\nxp=xq;\\nsa=sin(ang);ca=cos(ang);\\nyp=yq*ca - zq*sa;\\nzp=yq*sa + zq*ca;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=-xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=(1-sample);\\n"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"g":0.7,"b":0.1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1*sample + (sin(tm)*0.5 + 0.5)*0.2 + 0.05;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*1.9)*0.5 +0.5;\\n\\nxq=xp;\\nsa=sin(ang);ca=cos(ang);\\nyq=yp*sa + zp*ca;\\nzq=yp*ca - zp*sa;\\nyq=-yp;\\nzq=zp;\\n\\nang=tm*8;\\nsa=sin(ang);ca=cos(ang);\\nxp=xq*sa + yq*ca;\\nyp=xq*ca - yq*sa;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2.3 - 0.5)*1.5;\\nxq=xp;\\nsa=sin(ang);ca=cos(ang);\\nyq=yp*sa + zp*ca;\\nzq=yp*ca - zp*sa;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3 + 0.5);\\nsa=sin(ang);ca=cos(ang);\\nxp=xq*sa + yq*ca;\\nyp=xq*ca - yq*sa;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2)*0.75 - 1.05;\\nsa=sin(ang);ca=cos(ang);\\nxq=xp*sa + zp*ca;\\nyq=yp;\\nzq=xp*ca - zp*sa;\\n\\n//upper arm up down;\\nang=cos(tm*0.9)*0.5 - 0.5;\\nxp=xq;\\nsa=sin(ang);ca=cos(ang);\\nyp=yq*ca - zq*sa;\\nzp=yq*sa + zq*ca;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=-xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=(1-sample);\\n"}],"init_eqs_eel":"","frame_eqs_eel":"decay=.999;\\nwrap=sin(time*10);\\nmv_dx=bass;\\nib_a=.005;\\n\\n\\nvol=(bass+mid+treb)*0.55;\\nvol=vol*vol;\\n\\nmtime=mtime+vol*0.01*(48/fps);\\n\\nq1=mtime*0.5;\\n\\n\\ndt=1/FPS;\\nmytime=mytime+dt;\\ncontvol=min( max(.5, (1-.5*dt)*contvol+.5*dt*(bass+mid+treb)*.133 ) ,2 ) ;\\nq2=contvol;\\nq3=mytime;\\necho_zoom=1+(vol*0.01);\\nsx=-.019-sin(time)*0.1+0.5;","pixel_eqs_eel":"zoom=1.005-(rad/100);\\nrot=rad/100;\\n//sy=-1.02;","warp":" shader_body { \\n  vec3 ret_1;\\n  ret_1 = (texture (sampler_main, uv).xyz * 0.85);\\n  ret_1 = (ret_1 - 0.002);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ret_1;\\n  ret = tmpvar_2.xyz;\\n }","comp":" shader_body { \\n  vec3 crisp_1;\\n  vec2 uv3_2;\\n  vec2 uv2_3;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = ((uv - 0.5) * aspect.xy);\\n  float tmpvar_5;\\n  tmpvar_5 = (0.1 / (sqrt(\\n    dot (tmpvar_4, tmpvar_4)\\n  ) + 0.1));\\n  vec2 tmpvar_6;\\n  float tmpvar_7;\\n  tmpvar_7 = (ang / 3.14);\\n  tmpvar_6.x = tmpvar_7;\\n  tmpvar_6.y = (tmpvar_5 * 2.5);\\n  uv2_3.y = (tmpvar_6.y + (0.25 * time));\\n  uv2_3.x = (tmpvar_7 + (time / 32.0));\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = tmpvar_7;\\n  tmpvar_8.y = (tmpvar_5 * 2.5);\\n  uv3_2.x = tmpvar_8.x;\\n  uv3_2.y = (tmpvar_8.y + (0.08 * time));\\n  crisp_1 = ((texture (sampler_main, uv2_3).xyz + texture (sampler_main, uv3_2).xyz) + ((2.0 * \\n    ((texture (sampler_blur2, fract(uv2_3)).xyz * scale2) + bias2)\\n  ) + (2.0 * \\n    ((texture (sampler_blur2, fract(uv3_2)).xyz * scale2) + bias2)\\n  )));\\n  crisp_1 = ((3.5 * crisp_1) * rad);\\n  float tmpvar_9;\\n  tmpvar_9 = clamp ((1.0 - (200.0 * rad)), 0.0, 1.0);\\n  vec4 tmpvar_10;\\n  tmpvar_10.w = 1.0;\\n  tmpvar_10.xyz = ((crisp_1 + (\\n    ((vec3(0.0, 0.0, 1.0) * uv.y) * pow ((1.0 - rad), 8.0))\\n   * tmpvar_9)) + (tmpvar_9 * texture (sampler_main, uv).xyz));\\n  ret = tmpvar_10.xyz;\\n }"}')},4438:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":0.16,"decay":0.96,"echo_zoom":0.997,"echo_alpha":0.5,"echo_orient":1,"wave_mode":2,"wave_dots":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":0.001,"wave_scale":0.012,"wave_smoothing":0.9,"warpanimspeed":0.037,"warpscale":0.015,"warp":0.033,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"ob_size":0,"ob_r":0.11,"ob_b":0.1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":3,"mv_y":2,"mv_dx":0.02,"mv_dy":-0.02,"mv_l":0.15,"mv_r":0.49,"mv_g":0.48,"mv_b":0.3,"mv_a":0,"b1ed":0.3},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"usedots":1,"thick":1,"r":0.1,"b":0.7},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.05*sample + (sin(tm)*0.5 + 0.5)*0.2 + 0.05;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2)*0.5 +0.5;\\n\\nxq=xp;\\nsa=sin(ang);ca=cos(ang);\\nyq=yp*sa + zp*ca;\\nzq=yp*ca - zp*sa;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8;\\nsa=sin(ang);ca=cos(ang);\\nxp=xq*sa + yq*ca;\\nyp=xq*ca - yq*sa;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nxq=xp;\\nsa=sin(ang);ca=cos(ang);\\nyq=yp*sa + zp*ca;\\nzq=yp*ca - zp*sa;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3 + 0.5);\\nsa=sin(ang);ca=cos(ang);\\nxp=xq*sa + yq*ca;\\nyp=xq*ca - yq*sa;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2)*0.75 - 1.05;\\nsa=sin(ang);ca=cos(ang);\\nxq=xp*sa + zp*ca;\\nyq=yp;\\nzq=xp*ca - zp*sa;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nxp=xq;\\nsa=sin(ang);ca=cos(ang);\\nyp=yq*ca - zq*sa;\\nzp=yq*sa + zq*ca;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=(1-sample);\\n"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"r":0.2,"b":0.6},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.05*sample + (sin(tm)*0.5 + 0.5)*0.2 + 0.05;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2)*0.5 +0.5;\\n\\nxq=xp;\\nsa=sin(ang);ca=cos(ang);\\nyq=yp*sa + zp*ca;\\nzq=yp*ca - zp*sa;\\nyq=-yp;\\nzq=zp;\\n\\nang=tm*8;\\nsa=sin(ang);ca=cos(ang);\\nxp=xq*sa + yq*ca;\\nyp=xq*ca - yq*sa;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nxq=xp;\\nsa=sin(ang);ca=cos(ang);\\nyq=yp*sa + zp*ca;\\nzq=yp*ca - zp*sa;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3 + 0.5);\\nsa=sin(ang);ca=cos(ang);\\nxp=xq*sa + yq*ca;\\nyp=xq*ca - yq*sa;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2)*0.75 - 1.05;\\nsa=sin(ang);ca=cos(ang);\\nxq=xp*sa + zp*ca;\\nyq=yp;\\nzq=xp*ca - zp*sa;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nxp=xq;\\nsa=sin(ang);ca=cos(ang);\\nyp=yq*ca - zq*sa;\\nzp=yq*sa + zq*ca;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=(1-sample);\\n"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"g":0.72,"b":0.1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1*sample + (sin(tm)*0.5 + 0.5)*0.2 + 0.05;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*1.9)*0.5 +0.5;\\n\\nxq=xp;\\nsa=sin(ang);ca=cos(ang);\\nyq=yp*sa + zp*ca;\\nzq=yp*ca - zp*sa;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8;\\nsa=sin(ang);ca=cos(ang);\\nxp=xq*sa + yq*ca;\\nyp=xq*ca - yq*sa;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2.3 - 0.5)*1.5;\\nxq=xp;\\nsa=sin(ang);ca=cos(ang);\\nyq=yp*sa + zp*ca;\\nzq=yp*ca - zp*sa;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3 + 0.5);\\nsa=sin(ang);ca=cos(ang);\\nxp=xq*sa + yq*ca;\\nyp=xq*ca - yq*sa;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2)*0.75 - 1.05;\\nsa=sin(ang);ca=cos(ang);\\nxq=xp*sa + zp*ca;\\nyq=yp;\\nzq=xp*ca - zp*sa;\\n\\n//upper arm up down;\\nang=cos(tm*0.9)*0.5 - 0.5;\\nxp=xq;\\nsa=sin(ang);ca=cos(ang);\\nyp=yq*ca - zq*sa;\\nzp=yq*sa + zq*ca;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=-xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=(1-sample);\\n"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"g":0.7,"b":0.1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1*sample + (sin(tm)*0.5 + 0.5)*0.2 + 0.05;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*1.9)*0.5 +0.5;\\n\\nxq=xp;\\nsa=sin(ang);ca=cos(ang);\\nyq=yp*sa + zp*ca;\\nzq=yp*ca - zp*sa;\\nyq=-yp;\\nzq=zp;\\n\\nang=tm*8;\\nsa=sin(ang);ca=cos(ang);\\nxp=xq*sa + yq*ca;\\nyp=xq*ca - yq*sa;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2.3 - 0.5)*1.5;\\nxq=xp;\\nsa=sin(ang);ca=cos(ang);\\nyq=yp*sa + zp*ca;\\nzq=yp*ca - zp*sa;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3 + 0.5);\\nsa=sin(ang);ca=cos(ang);\\nxp=xq*sa + yq*ca;\\nyp=xq*ca - yq*sa;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2)*0.75 - 1.05;\\nsa=sin(ang);ca=cos(ang);\\nxq=xp*sa + zp*ca;\\nyq=yp;\\nzq=xp*ca - zp*sa;\\n\\n//upper arm up down;\\nang=cos(tm*0.9)*0.5 - 0.5;\\nxp=xq;\\nsa=sin(ang);ca=cos(ang);\\nyp=yq*ca - zq*sa;\\nzp=yq*sa + zq*ca;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=-xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=(1-sample);\\n"}],"init_eqs_eel":"mv_x=64;mv_y=48;\\nnut=0;\\nstp=0;stq=0;\\nrtp=0;rtq=0;\\nwvr=0;\\ndecay=0;\\ndcsp=0","frame_eqs_eel":"decay=0.98;\\nzoom=1.002;\\n\\nvol=(bass_att+mid_att+treb_att)*0.25;\\nvol=vol*vol;\\nmtime=mtime+vol*0.1*(75/fps);\\n\\nq1=mtime*0.4;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 uv_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = normalize((uv_orig - 0.5));\\n  float tmpvar_3;\\n  tmpvar_3 = (time * 7.0);\\n  uv_1 = (mix (uv_orig, uv, vec2((\\n    clamp ((((bass / bass_att) - 0.9) * 13.0), 0.0, 1.0)\\n   * 0.3))) + ((\\n    (tmpvar_2 * texsize.zw)\\n   * \\n    cos(((rad * 170.0) - tmpvar_3))\\n  ) * 2.0));\\n  uv_1 = (uv_1 + ((\\n    (vec2(5.0, -5.0) * texsize.zw)\\n   * \\n    cos(((ang * 30.0) - tmpvar_3))\\n  ) * tmpvar_2.yx));\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = ((texture (sampler_main, uv_1).xyz - 0.004) * 0.83);\\n  ret = tmpvar_4.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  ret_1 = (texture (sampler_main, uv).xyz + ((\\n    (texture (sampler_blur1, uv).xyz * scale1)\\n   + bias1) * 3.0));\\n  ret_1 = (ret_1 + ((texture (sampler_blur2, \\n    (((uv - 0.5) * 0.333) + 0.5)\\n  ).xyz * scale2) + bias2));\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ret_1;\\n  ret = tmpvar_2.xyz;\\n }"}')},712:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":0.16,"decay":0.96,"echo_zoom":0.997,"echo_alpha":0.5,"echo_orient":1,"wave_mode":2,"wave_dots":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.012,"wave_smoothing":0.9,"warpscale":1.331,"zoom":0.9995,"rot":0.1,"cx":2,"cy":2,"warp":0.01105,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_x":0,"mv_y":43.2,"mv_l":1,"mv_g":0.91,"mv_b":0.71,"mv_a":0,"b1ed":0.3},"shapes":[{"baseVals":{"sides":5,"textured":1,"rad":1.06779,"ang":0.75398,"tex_zoom":0.77977,"g":1,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ang=sin(q1*0.15);\\nx=sin(q1*0.5) * 0.05 + 0.5;\\ny=cos(q1*0.63)* 0.05 + 0.5"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":5,"additive":1,"rad":0.03809,"g":1,"b":1,"g2":0.6,"b2":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"tm=q1;\\n\\nxp=0;\\nyp=0.1;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2 )*0.5 +0.5;\\n\\nxq=xp;\\nsinang=sin(ang);cosang=cos(ang);\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3.1 + 0.5);\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2.3)*1.75 - 1.05;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp*sinang + zp*cosang;\\nyq=yp;\\nzq=xp*cosang - zp*sinang;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq;\\nyp=yq*cosang - zq*sinang;\\nzp=yq*sinang + zq*cosang;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\n\\n"}],"waves":[{"baseVals":{"enabled":1,"r":0.1,"b":0.7},"init_eqs_eel":"t7=1;\\nflip=0;","frame_eqs_eel":"t1=sin(time)*0.5+0.5;\\nt2=sin(time+2.1)*0.5+0.5;\\nt3=sin(time+4.2)*0.5+0.5;\\n\\nt4=sin(time+1.1)*0.5+0.5;\\nt5=sin(time+3.1)*0.5+0.5;\\nt6=sin(time+5.2)*0.5+0.5;\\n\\n\\nt8= int( sin(time*2)*2 + 3);\\nt8=2;","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip + 0.5*t7;\\nt7=if( equal(flip,1) + equal(flip,0) , -t7 , t7 );\\n\\n\\ntm=if( equal(flip,0.5) , tm+0.02*q8 , tm);\\n\\nxp=0;\\nyp=0.05 + (sin(tm)*0.5 + 0.5)*0.2;\\nzp=(flip - 0.5) * 0.1;\\n\\n//wrist movement;\\nang=sin(tm*2)*0.5 +0.5;\\n\\nxq=xp;\\nsinang=sin(ang);cosang=cos(ang);\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8 + 1;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3.1 + 0.5);\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2.3)*1.75 - 1.05;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp*sinang + zp*cosang;\\nyq=yp;\\nzq=xp*cosang - zp*sinang;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq;\\nyp=yq*cosang - zq*sinang;\\nzp=yq*sinang + zq*cosang;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\na=if( equal(q8,1) , (1-sample) , sample);\\na=a* above( sin(tm*128*t8) , 0 );\\na=a* (1-abs(flip - 0.5));\\n\\n\\nmag=(1-abs(flip - 0.5)*2)+1; \\nr=min(t4*mag,1);\\ng=min(t5*mag,1);\\nb=min(t6*mag,1);\\n"},{"baseVals":{"enabled":1,"r":0.2,"b":0.6},"init_eqs_eel":"t7=1;\\nflip=0;","frame_eqs_eel":"t1=sin(time)*0.5+0.5;\\nt2=sin(time+2.1)*0.5+0.5;\\nt3=sin(time+4.2)*0.5+0.5;\\n\\nt4=sin(time+1.1)*0.5+0.5;\\nt5=sin(time+3.1)*0.5+0.5;\\nt6=sin(time+5.2)*0.5+0.5;\\n\\n\\nt8= int( sin(time*2)*2 + 3);\\nt8=2","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip + 0.5*t7;\\nt7=if( equal(flip,1) + equal(flip,0) , -t7 , t7 );\\n\\n\\ntm=if( equal(flip,0.5) , tm+0.02*q8 , tm);\\n\\n\\nxp=0;\\nyp=0.05 + (sin(tm)*0.5 + 0.5)*0.2 +0.1;\\nyp=-yp;\\nzp=(flip - 0.5) * 0.1;\\n\\n//wrist movement;\\nang=sin(tm*2)*0.5 +0.5;\\n\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8+1;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3.1 + 0.5);\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2.3)*1.75 - 1.05;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp*sinang + zp*cosang;\\nyq=yp;\\nzq=xp*cosang - zp*sinang;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq;\\nyp=yq*cosang - zq*sinang;\\nzp=yq*sinang + zq*cosang;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\na=if( equal(q8,1) , (1-sample) , sample);\\na=a* above( sin(tm*128*t8) , 0 );\\na=a* (1-abs(flip - 0.5));\\n\\n\\nmag=(1-abs(flip - 0.5)*2)+1; \\nr=min(t4*mag,1);\\ng=min(t5*mag,1);\\nb=min(t6*mag,1);"},{"baseVals":{"enabled":1,"g":0.6,"b":0.1},"init_eqs_eel":"t7=1;\\nflip=0;","frame_eqs_eel":"t1=sin(time)*0.5+0.5;\\nt2=sin(time+2.1)*0.5+0.5;\\nt3=sin(time+4.2)*0.5+0.5;\\n\\nt4=sin(time+1.1)*0.5+0.5;\\nt5=sin(time+3.1)*0.5+0.5;\\nt6=sin(time+5.2)*0.5+0.5;\\n\\n\\nt8= int( sin(time*2)*2 + 3);\\nt8=2;","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip + 0.5*t7;\\nt7=if( equal(flip,1) + equal(flip,0) , -t7 , t7 );\\n\\n\\ntm=if( equal(flip,0.5) , tm+0.02*q8 , tm);\\n\\nxp=0;\\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2)*0.5 +0.5;\\n\\nxq=xp;\\nsinang=sin(ang);cosang=cos(ang);\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8 + 1;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3.1 + 0.5);\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2.3)*1.75 - 1.05;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp*sinang + zp*cosang;\\nyq=yp;\\nzq=xp*cosang - zp*sinang;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq;\\nyp=yq*cosang - zq*sinang;\\nzp=yq*sinang + zq*cosang;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\na=if( equal(q8,1) , (1-sample) , sample);\\na=a* above( sin(tm*128*t8) , 0 );\\na=a* (1-abs(flip - 0.5));\\n\\n\\nmag=(1-abs(flip - 0.5)*2)+1; \\nr=min(t4*mag,1);\\ng=min(t5*mag,1);\\nb=min(t6*mag,1);\\n"},{"baseVals":{"enabled":1,"g":0.3,"b":0.1},"init_eqs_eel":"t7=1;","frame_eqs_eel":"t1=sin(time)*0.5+0.5;\\nt2=sin(time+2.1)*0.5+0.5;\\nt3=sin(time+4.2)*0.5+0.5;\\n\\nt4=sin(time+1.1)*0.5+0.5;\\nt5=sin(time+3.1)*0.5+0.5;\\nt6=sin(time+5.2)*0.5+0.5;\\n\\n\\nt8= int( sin(time*2)*2 + 3);\\nt8=2","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip + 0.5*t7;\\nt7=if( equal(flip,1) + equal(flip,0) , -t7 , t7 );\\n\\n\\ntm=if( equal(flip,0.5) , tm+0.02*q8 , tm);\\n\\nxp=0;\\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2 +0.1;\\nyp=-yp;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2)*0.5 +0.5;\\n\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8+1;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3.1 + 0.5);\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2.3)*1.75 - 1.05;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp*sinang + zp*cosang;\\nyq=yp;\\nzq=xp*cosang - zp*sinang;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq;\\nyp=yq*cosang - zq*sinang;\\nzp=yq*sinang + zq*cosang;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\na=if( equal(q8,1) , (1-sample) , sample);\\na=a* above( sin(tm*128*t8) , 0 );\\na=a* (1-abs(flip - 0.5));\\n\\n\\nmag=(1-abs(flip - 0.5)*2)+1; \\nr=min(t4*mag,1);\\ng=min(t5*mag,1);\\nb=min(t6*mag,1);"}],"init_eqs_eel":"","frame_eqs_eel":"warp = 0;\\n//zoom = 1;\\n\\ntic = min(time-tin,.1);\\ntin = time;\\n\\nvol = (bass_att + treb_att + mid_att)*.333333;\\n\\nra = 1/tic*.15;\\n\\ntreb_avg = tic*(treb_avg*(1/tic - ra) + ra*treb);\\nmid_avg = tic*(mid_avg*(1/tic - ra) + ra*mid);\\nbass_avg = tic*(bass_avg*(1/tic - ra) + ra*bass);\\nvav = tic*(vav*(1/tic - ra) + ra*(bass+treb+mid)*.33333);\\n\\ntt = tt + tic*treb;\\nmt = mt + tic*mid;\\nbt = bt + tic*bass;\\nvt = vt + tic*vav;\\n\\nq1 = tt*1.4;// wave morph speeds\\nq2 = mt*3;\\nq3 = bt*3;\\n\\nq4 = vt; // wave colour cycle\\n\\nrb = if(rb,rb,.2 + rand(1001)*.001*.6);\\nrc = if(rc,rc,.2 + rand(1001)*.001*.6);\\nrd = if(rd,rd,.2 + rand(1001)*.001*.6);\\nre = if(re,re,.2 + rand(1001)*.001*.6);\\n\\n\\nti = vt*2;\\ncx = .3 + .1*sin(ti*re) + .1*cos(ti*rc);\\ncy = .5 + .2*sin(ti*rb) + .1*cos(ti*rd);\\n\\n\\nq7 = 6;\\nq8 = 2.8;","pixel_eqs_eel":"xnum = q7;\\nynum = q8;\\npi = 1.141592654;\\n\\nxseg = int(x*xnum);\\nyseg = int(y*ynum);\\n\\nxsw = equal((xseg+equal(yseg%2,0))%2,0);\\nysw = equal((yseg+2)%2,0);\\n\\n\\nox = x - xseg*(1/xnum);\\nox = if(xsw,1/xnum - ox,ox);\\n\\noy = y - yseg*(1/ynum);\\noy = if(ysw,1/ynum - oy,oy);\\n\\ndx = above(xseg+yseg,0)*(x-ox);\\ndy = above(xseg+yseg,0)*(y-oy);\\n\\nrot = rot*(1-above(xseg+yseg,0));\\n\\n//dx = equal(seg,1)*(x - .5)*2;","warp":" shader_body { \\n  vec3 ret_1;\\n  ret_1 = (texture (sampler_main, uv).xyz * 0.85);\\n  ret_1 = (ret_1 - 0.022);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ret_1;\\n  ret = tmpvar_2.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  vec3 tmpvar_2;\\n  tmpvar_2.xy = uv;\\n  tmpvar_2.z = q2;\\n  vec2 tmpvar_3;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (uv - 0.5);\\n  tmpvar_3 = ((tmpvar_4 * vec2(-1.0, 1.0)) + 0.5);\\n  ret_1 = (((\\n    (mix (texture (sampler_main, ((tmpvar_4 * 0.98) + 0.5)).xyz, texture (sampler_main, ((\\n      (tmpvar_3 - 0.5)\\n     * 0.98) + 0.5)).xyz, vec3(0.2, 0.2, 0.2)) + ((texture (sampler_blur3, uv).xyz * scale3) + bias3))\\n   + \\n    ((texture (sampler_blur3, tmpvar_3).xyz * scale3) + bias3)\\n  ) + (\\n    (texture (sampler_blur1, uv).xyz * scale1)\\n   + bias1)) + ((texture (sampler_blur1, tmpvar_3).xyz * scale1) + bias1));\\n  ret_1 = (ret_1 * texture (sampler_noisevol_hq, tmpvar_2).xyz);\\n  ret_1 = (ret_1 * 2.0);\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = ret_1;\\n  ret = tmpvar_5.xyz;\\n }"}')},5830:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":3,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"additivewave":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.005,"ob_a":1,"ib_size":0.02,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":4.8,"mv_dx":0.4,"mv_l":1,"mv_r":0,"mv_g":0.5,"mv_a":0.1,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":3,"additive":1,"thickoutline":1,"textured":1,"x":1,"y":0.59,"rad":0.55923,"ang":3.39292,"tex_zoom":100,"r":0,"g":1,"b":1,"g2":0,"border_r":0,"border_g":0,"border_b":0,"border_a":1},"init_eqs_eel":"","frame_eqs_eel":"x=sin(time/10)*0.1+0.5+(treb_att*0.1);"},{"baseVals":{"sides":13,"additive":1,"x":0.9,"y":0.84,"rad":0.36457,"ang":3.07876,"tex_zoom":4.14146,"r":0.25,"g":0.05,"a":0.2,"g2":0,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"//additive=above(sin(time*50),.95);"},{"baseVals":{"enabled":1,"sides":6,"textured":1,"x":0.3,"y":0.7,"rad":1.08925,"ang":0.81681,"tex_ang":3.14159,"tex_zoom":0.50422,"g":1,"b":1,"r2":1,"b2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"//tex_ang=(sin(time/4)*0.5+0.5)*6.28;"},{"baseVals":{"enabled":1,"sides":3,"textured":1,"rad":0.28428,"ang":3.14159,"tex_ang":4.90089,"tex_zoom":2.98776,"g":1,"b":1,"r2":0.95,"b2":1,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":1},"init_eqs_eel":"","frame_eqs_eel":"ang=time/10;\\ntex_zoom=3.4+(bass*0.03);\\nvar=above(bass_att,0.7);\\na=var;\\na2=var;\\nborder_a=var;\\n\\n\\n//This preset fluctuates between 53.2 and 55.44 fps on my box.  Texture size_2048 Meshsize_36*24\\n//On a SuperScan Pro 800 Hitachi\\n//On a Radion_9600\\n//1280*1024_Screen_Resolution\\n//;) hello! I am ATHEN ANDANDA!"}],"waves":[{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1,"r":0,"a":0.06},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"xspout=.5;\\nyspout=-.01;\\n\\npphase=9999*sample*sample*.0001;\\npphase2=.1+((sample*3349*sample)%100)*.01;\\npheight=((sample*9893)%100)*.002;\\nyheight=((sample*1231*sample)%100)*.01;\\n\\nr=((sample*5454)%100)*.01*abs(sin(time*.25));\\ng=((sample*9954)%100)*.01;\\n\\nxoffset1=(cos((time*pphase2)+pphase)*pheight);\\nxoffset2=-1*(cos((time*pphase2)+pphase)*pheight);\\n\\nlrorient=if(below(cos((time*pphase2)+pphase),cos(((time-.1)*pphase2)+pphase)),0,1);\\n\\npx=if(equal(lrorient,0),xspout-pheight+xoffset1,xspout+pheight-xoffset2);\\n\\npy=yspout+(abs(sin((time*pphase2)+pphase))*yheight);\\n\\nx=px;\\ny=py;"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1,"r":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"pphase=(sample*5671*cos(time*.0001));\\npheight=((sample*7654)%100)*.005*sin(time*.2);\\n\\n//xspout=.5;\\nxspout=if(below(abs(sin(time*.2)),.005),.3+(int(rand(40))*.01),xspout);\\n//yspout=.5;\\nyspout=if(below(abs(sin(time*.2)),.005),.3+(int(rand(40))*.01),yspout);\\n\\npx=xspout+(cos(time+pphase)*pheight);\\npy=yspout+(sin(time+pphase)*pheight);\\n\\nx=px;\\ny=py;\\na=abs(sin(time*.2)*.3+(treb_att*.1));\\n\\nr=treb*2;"},{"baseVals":{"enabled":1,"thick":1,"additive":1,"b":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs*4;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=(flip*0.1-0.05)*(sample);\\nzp=0;\\n\\n//spin;\\nang=tm*20 + sin(tm*76 + time*4)*0.4;\\nsa=sin(ang);ca=cos(ang);\\nxr=xp*sa + yp*ca;\\nyr=xp*ca - yp*sa;\\nzr=zp;\\n\\nxp=xr;\\nyp=yr + 0.05 + (sin(tm)*0.5 + 0.5)*0.2 + 0.05;\\nzp=zr;\\n\\n//wrist movement;\\nang=sin(tm*2);\\n\\nxq=xp;\\nsa=sin(ang);ca=cos(ang);\\nyq=yp*sa + zp*ca;\\nzq=yp*ca - zp*sa;\\n\\n\\nang=tm*8;\\nsa=sin(ang);ca=cos(ang);\\nxp=xq*sa + yq*ca;\\nyp=xq*ca - yq*sa;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*2.5;\\nxq=xp;\\nsa=sin(ang);ca=cos(ang);\\nyq=yp*sa + zp*ca;\\nzq=yp*ca - zp*sa;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3 + 0.5);\\nxp=xq*sa + yq*ca;\\nyp=xq*ca - yq*sa;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*1)*1.75 - 1.05;\\nsa=sin(ang);ca=cos(ang);\\nxq=xp*sa + zp*ca;\\nyq=yp;\\nzq=xp*ca - zp*sa;\\n\\n//upper arm up down;\\nang=cos(tm);\\nxp=xq;\\nsa=sin(ang);ca=cos(ang);\\nyp=yq*ca - zq*sa;\\nzp=yq*sa + zq*ca;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+1.5;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=(1-sample);\\n"},{"baseVals":{"usedots":1,"thick":1,"smoothing":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1=q1;\\n\\nt7=.0;\\nt8=.45;\\n\\nddx=.25*cos(5.7119*t1)+2.5963*t1*sin(5.7119*t1);\\nddy=.3125*sin(5.7119*t1)-3.2453*t1*cos(5.7119*t1);\\nddtan=atan2(ddy,ddx);\\nt2=-ddtan;\\n\\nval1=((-.5*cos(5.7119*t1))*cos(t2)-(-.625*sin(5.7119*t1))*sin(t2));\\nval2=((-.5*cos(5.7119*t1))*sin(t2)+(-.625*sin(5.7119*t1))*cos(t2));\\n\\nt6=-sign(t1);\\nt7=t7-val1;\\nt8=t8-val2;\\n\\nt3=q2;","point_eqs_eel":"sample=pow(sample,.85);\\n\\nc1=6.2831*t1/(1.1-sample);\\nc=cos(c1);\\ns=sin(c1);\\nc2=sqrt(1-sample);\\n\\nox=t7-.5*c2*c;\\noy=t8-.625*c2*s;\\n\\nx=t7+((ox-t7)*cos(t2)-(oy-t8)*sin(t2));\\ny=t8+((ox-t7)*sin(t2)+(oy-t8)*cos(t2));\\n\\ninv=1/sqr(1.1-sample);\\nfdx=-.25*pow(1-sample,-.5)*c-c2*s*3.1415*t1*inv;\\nfdy=-.3125*c2*s+3.9268*c2*c*t1*inv;\\ninvMag=1/sqrt(sqr(fdx)+sqr(fdy));\\nfdx=fdx*invMag;\\nfdy=fdy*invMag;\\n\\nrdx=fdx*cos(1.5707+t2)-fdy*sin(1.5707+t2);\\nrdy=fdx*sin(1.5707+t2)+fdx*cos(1.5707+t2);\\ntt=int(rand(100))/100;\\nx=x+rdx*(.15*tt)*(1-sample);\\ny=y+rdy*(.15*tt)*(1-sample);\\n\\nx=x*.55;\\ny=(y-.5)*.55+.5;\\n\\nr=sample;\\ng=1-sample;\\nb=1;\\na=below(sample,.995);\\n\\n\\ny=y+t3;"}],"init_eqs_eel":"","frame_eqs_eel":"warp=0;\\n\\nframethird = frame%3;\\n\\nx1 = 0.5 + 0.15*sin(0.416*time) + 0.15*sin(0.832*time) + 0.1*sin(1.324*time);\\nx2 = 0.5 + 0.15*sin(0.341*time) + 0.15*sin(0.768*time) + 0.1*sin(1.523*time);\\nx3 = 0.5 + 0.15*sin(0.287*time) + 0.15*sin(0.913*time) + 0.1*sin(1.142*time);\\nr1 = 0.5 + 0.15*sin(0.512*time) + 0.15*sin(0.943*time) + 0.1*sin(1.024*time);\\nr2 = 0.5 + 0.15*sin(0.483*time) + 0.15*sin(0.879*time) + 0.1*sin(1.423*time);\\nr3 = 0.5 + 0.15*sin(0.531*time) + 0.15*sin(0.671*time) + 0.1*sin(1.442*time);\\ng1 = 0.5 + 0.15*sin(0.248*time) + 0.15*sin(0.829*time) + 0.1*sin(1.623*time);\\ng2 = 0.5 + 0.15*sin(0.461*time) + 0.15*sin(0.699*time) + 0.1*sin(1.254*time);\\ng3 = 0.5 + 0.15*sin(0.397*time) + 0.15*sin(0.768*time) + 0.1*sin(1.157*time);\\nb1 = 0.5 + 0.15*sin(0.211*time) + 0.15*sin(0.652*time) + 0.1*sin(1.865*time);\\nb2 = 0.5 + 0.15*sin(0.333*time) + 0.15*sin(0.978*time) + 0.1*sin(1.359*time);\\nb3 = 0.5 + 0.15*sin(0.475*time) + 0.15*sin(0.791*time) + 0.1*sin(1.011*time);\\nwave_x = if(equal(framethird,0),x1,if(equal(framethird,1),x2,x3));\\nwave_r = if(equal(framethird,0),r1,if(equal(framethird,1),r2,r3));\\nwave_g = if(equal(framethird,0),g1,if(equal(framethird,1),g2,g3));\\nwave_b = if(equal(framethird,0),b1,if(equal(framethird,1),b2,b3));\\n\\nvolume = 0.3*(bass+mid);\\nbeatrate = equal(beatrate,0) + (1-equal(beatrate,0))*(below(volume,0.01) + (1-below(volume,0.01))*beatrate);\\nlastbeat = lastbeat + equal(lastbeat,0)*time;\\nmeanbass_att = 0.1*(meanbass_att*9 + bass_att);\\npeakbass_att = max(bass_att,peakbass_att);\\nbeat = above(volume,0.8)*below(peakbass_att - bass_att, 0.05*peakbass_att)*above(time - lastbeat, 0.1 + 0.5*(beatrate - 0.1));\\nbeatrate = max(if(beat,if(below(time-lastbeat,2*beatrate),0.1*(beatrate*9 + time - lastbeat),beatrate),beatrate),0.1);\\npeakbass_att = beat*bass_att + (1-beat)*peakbass_att*(above(time - lastbeat, 2*beatrate)*0.99 + (1-above(time - lastbeat, 2*beatrate))*0.998);\\nlastbeat = beat*time + (1-beat)*lastbeat;\\npeakbass_att = max(peakbass_att,1.1*meanbass_att);\\ndx = if(beat,1-2*int(rand(2)),0);\\nob_a = if(beat,0,0.65);\\nmv_a = if(beat,1,0.05);","pixel_eqs_eel":"dy = 0.004 + 0.0005*sin(10*x+0.459*time) + 0.0005*sin(14*x+0.325*time) + 0.0005*sin(1.231*time);\\n//dx = dx + 0.0001*sin(9*y+0.612*time) + 0.0001*sin(13*y+0.429*time) + 0.0001*sin(1.027*time);","warp":" shader_body { \\n  vec2 uv6_1;\\n  vec2 uv1_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (uv - 0.5);\\n  float x_4;\\n  x_4 = (abs(tmpvar_3.x) - abs(tmpvar_3.y));\\n  float tmpvar_5;\\n  tmpvar_5 = (12.0 * sqrt((x_4 * x_4)));\\n  vec2 tmpvar_6;\\n  tmpvar_6 = normalize(tmpvar_3);\\n  uv1_2 = (tmpvar_3 + ((-0.01 * \\n    dot (((texture (sampler_blur1, uv).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29))\\n  ) * tmpvar_6));\\n  uv1_2 = (uv1_2 - (clamp (\\n    ((sin(tmpvar_5) / cos(tmpvar_5)) * tmpvar_6)\\n  , vec2(-2.0, -2.0), vec2(2.0, 2.0)) / 60.0));\\n  uv6_1 = (0.4 * cos((uv1_2 * 6.0)));\\n  vec4 tmpvar_7;\\n  tmpvar_7.w = 1.0;\\n  tmpvar_7.xyz = ((0.5 * (\\n    ((texture (sampler_main, ((uv1_2 * \\n      (0.8 + (0.2 * tmpvar_5))\\n    ) + 0.5)).xyz + (vec3((0.01 / \\n      (sqrt(dot (uv6_1, uv6_1)) - (0.001 * q27))\\n    )) * (0.3 * \\n      (1.0 + roam_cos)\\n    ).xyz)) * 0.96)\\n   - 0.025)) + (0.5 * texture (sampler_main, uv_orig).xyz));\\n  ret = tmpvar_7.xyz;\\n }","comp":" shader_body { \\n  vec3 crisp_1;\\n  vec2 uv3_2;\\n  vec2 uv2_3;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = ((uv - 0.5) * aspect.xy);\\n  float tmpvar_5;\\n  tmpvar_5 = (0.1 / (sqrt(\\n    dot (tmpvar_4, tmpvar_4)\\n  ) + 0.1));\\n  vec2 tmpvar_6;\\n  float tmpvar_7;\\n  tmpvar_7 = (ang / 3.14);\\n  tmpvar_6.x = tmpvar_7;\\n  tmpvar_6.y = tmpvar_5;\\n  uv2_3.y = (tmpvar_5 + (0.1 * time));\\n  uv2_3.x = tmpvar_6.x;\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = tmpvar_7;\\n  tmpvar_8.y = (tmpvar_5 * 1.5);\\n  uv3_2.y = (tmpvar_8.y + (0.08 * time));\\n  uv3_2.x = (tmpvar_7 + (time / 32.0));\\n  crisp_1 = (((2.0 * texture (sampler_main, uv2_3).xyz) + texture (sampler_main, uv3_2).xyz) + ((2.0 * \\n    ((texture (sampler_blur2, fract(uv2_3)).xyz * scale2) + bias2)\\n  ) + (2.0 * \\n    ((texture (sampler_blur2, fract(uv3_2)).xyz * scale2) + bias2)\\n  )));\\n  crisp_1 = ((3.0 * crisp_1) * rad);\\n  float tmpvar_9;\\n  tmpvar_9 = clamp ((1.0 - (4.0 * rad)), 0.0, 1.0);\\n  vec4 tmpvar_10;\\n  tmpvar_10.w = 1.0;\\n  tmpvar_10.xyz = ((crisp_1 + (\\n    ((vec3(0.0, 0.0, 1.0) * uv.y) * pow ((1.0 - rad), 8.0))\\n   * tmpvar_9)) + (tmpvar_9 * texture (sampler_main, uv).xyz));\\n  ret = tmpvar_10.xyz;\\n }"}')},9935:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":3,"gammaadj":1.78,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":6,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.312,"wave_scale":1.229,"wave_smoothing":0,"wave_mystery":0.2,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":2.853,"zoom":1.064,"warp":0,"wave_r":0,"wave_g":0,"wave_b":0,"mv_x":64,"mv_y":48,"mv_l":0,"mv_b":0.5,"mv_a":0,"b1x":0.7,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"textured":1,"rad":0.14392,"tex_zoom":4.57482,"g":1,"b":1,"a":0.9,"r2":0.84,"g2":0.93,"b2":1,"border_r":0.8,"border_g":0,"border_a":0.4},"init_eqs_eel":"","frame_eqs_eel":"textured = bnot(q24);\\nrad = .2*max(sin(time/9)-.6,0);\\nx = .5 + .01 * sin(time/2); //slightly off-center\\n\\nborder_r = .4 * (1.5+sin(time/18));\\nborder_g = .4 * (1.5+sin(time/38));\\nborder_b = .4 * (1.5+sin(time/28));"},{"baseVals":{"enabled":1,"sides":63,"additive":1,"rad":1.99863,"tex_zoom":0.49981,"g":1,"b":1,"a":0.1,"r2":1,"b2":1,"a2":0.6,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"\\ntrel = time/2+q20;\\n\\nx = .5+sin(trel);\\ny = .5+cos(trel*1.3 +q28/3);\\nrad = .03;\\na = q26/4+.2;  a2 = 0;\\na = 1;"},{"baseVals":{"sides":63,"textured":1,"x":0.123,"y":0,"rad":0.27319,"tex_zoom":0.49981,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":63,"textured":1,"y":1,"rad":0.54822,"tex_zoom":0.49981,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"scaling":0.89152,"smoothing":0.82,"a":0.6},"init_eqs_eel":"","frame_eqs_eel":"t1 = 1*cos(time/3);\\nt2 = 1*sin(time/7);\\n\\nvol = mid_att + treb_att;\\nvol_m = vol_m*0.999+vol*0.001;\\nexc = above (vol, vol_m*1.1);\\n\\npulse = 0.95*pulse + 0.05*exc;\\nwinkel = winkel + pulse/3;\\nt3 = winkel;\\n\\n\\n","point_eqs_eel":"  //Alle Funktionen muessen rel. zu t_rel sein\\n\\n\\nt_abs = sample;\\nt_rel = sample-time/6;\\nampl = sin(t_abs*3)-0.0;\\n\\nox = 3*sin (time) + ampl*(sin (t_rel*267)) ;\\noy = 3*cos (time) + ampl*(cos (t_rel*277)) ;\\noz = 0*cos (t_rel*time/23)+t_abs*4 ;\\n\\n\\nr = sqr(sin(t_rel*3.4));\\ng = sqr(sin(t_rel*2.3));\\nb = sqr (cos(t_rel*.9));\\n\\na= 0.2*(cos(t_abs*1 )) + q26/16 ;\\n\\nxang = t2+t3/3;\\nyang = t1*t2-t3/4;\\nzang = t3;\\nfov = 0.2;\\n\\nmonitor = t2;\\n\\n// Rotation um x,y,z\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\n\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = -ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz =  mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\noz = oz - 6;\\nx = ox*fov/oz +0.5;\\n//x = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;\\n"},{"baseVals":{"enabled":1,"samples":232,"usedots":1,"additive":1,"scaling":0.89152,"smoothing":0.82,"a":0.1},"init_eqs_eel":"","frame_eqs_eel":"t1 = 2*sin(time/15);\\nt2 = 2*sin(time/11);\\nmonitor = time;","point_eqs_eel":"\\nt_abs = sample;\\nt_rel = sample-time/5;\\nampl = time;\\n\\nox = ampl*10*sin (t_abs*68);\\noy = ampl*10*cos (t_abs*28);\\noz = ampl*10*cos (t_abs*128);\\n\\n\\nr = sin(t_abs*1335)+1;\\ng = sin(t_abs*1783)+1 ;\\nb = rand(5)/5 ;\\n\\na=0.5+0.25 * sin(t_rel*15);\\nxang = t1 ;\\nyang = t1;\\nzang = t1;\\nfov = 0.12;\\n\\n\\n// Rotation um x,y,z\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\n\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = -ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\noz = oz - 6;\\nx = ox*fov/oz +0.5;\\n//x = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;"},{"baseVals":{"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ampl = time - int(time);\\naml = ampl/2;\\nx = .5 + ampl * sin(sample*230);\\ny = .5 + ampl * cos(sample*230);\\na = .03;"},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.100*( 0.60*sin(0.933*time) + 0.40*sin(1.045*time) );\\nwave_g = wave_g + 0.100*( 0.60*sin(0.900*time) + 0.40*sin(0.956*time) );\\nwave_b = wave_b + 0.100*( 0.60*sin(0.910*time) + 0.40*sin(0.920*time) );\\nzoom = zoom + 0.013*( 0.60*sin(0.339*time) + 0.40*sin(0.276*time) );\\nrot = rot + 0.040*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );","pixel_eqs_eel":"rot=rot+0.05+0.04*sin(ang*3+time*1.6);","warp":" shader_body { \\n  vec2 uv_1;\\n  vec2 uv6_2;\\n  uv_1 = (uv + (vec2(0.0, 0.01) * dot (\\n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\\n  , vec3(0.32, 0.49, 0.29))));\\n  uv6_2 = (0.4 * sin((\\n    (uv_1 * 8.0)\\n   + \\n    (rand_frame * 6.0)\\n  .xy)));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = (((\\n    (texture (sampler_main, uv_1).xyz - (((texture (sampler_blur2, \\n      fract(uv_1)\\n    ).xyz * scale2) + bias2) * 0.03))\\n   + \\n    (0.1 * (vec3((0.1 / sqrt(\\n      dot (uv6_2, uv6_2)\\n    ))) * ((1.0 + roam_cos) / 2.0).xyz))\\n  ) * 0.99) - 0.02);\\n  ret = tmpvar_3.xyz;\\n }","comp":""}')},6545:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":4,"gammaadj":1.78,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":6,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.312,"wave_scale":1.229,"wave_smoothing":0,"wave_mystery":0.2,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":5.996,"warpscale":1.331,"zoomexp":1.01,"zoom":0.99853,"rot":0.002,"warp":0.01,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0,"ob_g":0.9,"ob_b":0.2,"ob_a":1,"ib_size":0,"ib_r":0.5,"ib_g":0.5,"ib_b":0.5,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_b":0.5,"mv_a":0,"b1x":0.7,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"textured":1,"rad":0.14392,"tex_zoom":4.57482,"g":1,"b":1,"a":0.9,"r2":0.84,"g2":0.93,"b2":1,"border_r":0.8,"border_g":0,"border_a":0.4},"init_eqs_eel":"","frame_eqs_eel":"textured = bnot(q24);\\nrad = .2*max(sin(time/9)-.6,0);\\nx = .5 + .01 * sin(time/2); //slightly off-center\\n\\nborder_r = .4 * (1.5+sin(time/18));\\nborder_g = .4 * (1.5+sin(time/38));\\nborder_b = .4 * (1.5+sin(time/28));"},{"baseVals":{"enabled":1,"sides":63,"additive":1,"rad":1.99863,"tex_zoom":0.49981,"g":1,"b":1,"a":0.1,"r2":1,"b2":1,"a2":0.6,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"\\ntrel = time/2+q20;\\n\\nx = .5+sin(trel);\\ny = .5+cos(trel*1.3 +q28/3);\\nrad = .03;\\na = q26/4+.2;  a2 = 0;\\na = 1;"},{"baseVals":{"sides":63,"textured":1,"x":0.123,"y":0,"rad":0.27319,"tex_zoom":0.49981,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":63,"textured":1,"y":1,"rad":0.54822,"tex_zoom":0.49981,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"scaling":0.89152,"smoothing":0.82,"a":0.6},"init_eqs_eel":"","frame_eqs_eel":"t1 = 1*cos(time/3);\\nt2 = 1*sin(time/7);\\n\\nvol = mid_att + treb_att;\\nvol_m = vol_m*0.999+vol*0.001;\\nexc = above (vol, vol_m*1.1);\\n\\npulse = 0.95*pulse + 0.05*exc;\\nwinkel = winkel + pulse/3;\\nt3 = winkel;\\n\\n\\n","point_eqs_eel":"  //Alle Funktionen muessen rel. zu t_rel sein\\n\\n\\nt_abs = sample;\\nt_rel = sample-time/6;\\nampl = sin(t_abs*3)-0.0;\\n\\nox = 3*sin (time) + ampl*(sin (t_rel*267)) ;\\noy = 3*cos (time) + ampl*(cos (t_rel*277)) ;\\noz = 0*cos (t_rel*time/23)+t_abs*4 ;\\n\\n\\nr = sqr(sin(t_rel*3.4));\\ng = sqr(sin(t_rel*2.3));\\nb = sqr (cos(t_rel*.9));\\n\\na= 0.2*(cos(t_abs*1 )) + q26/16 ;\\n\\nxang = t2+t3/3;\\nyang = t1*t2-t3/4;\\nzang = t3;\\nfov = 0.2;\\n\\nmonitor = t2;\\n\\n// Rotation um x,y,z\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\n\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = -ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz =  mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\noz = oz - 6;\\nx = ox*fov/oz +0.5;\\n//x = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;\\n"},{"baseVals":{"enabled":1,"samples":232,"usedots":1,"additive":1,"scaling":0.89152,"smoothing":0.82,"a":0.1},"init_eqs_eel":"","frame_eqs_eel":"t1 = 2*sin(time/15);\\nt2 = 2*sin(time/11);\\nmonitor = time;","point_eqs_eel":"\\nt_abs = sample;\\nt_rel = sample-time/5;\\nampl = time;\\n\\nox = ampl*10*sin (t_abs*68);\\noy = ampl*10*cos (t_abs*28);\\noz = ampl*10*cos (t_abs*128);\\n\\n\\nr = sin(t_abs*1335)+1;\\ng = sin(t_abs*1783)+1 ;\\nb = int(rand(5))/5 ;\\n\\na=0.5+0.25 * sin(t_rel*15);\\nxang = t1 ;\\nyang = t1;\\nzang = t1;\\nfov = 0.12;\\n\\n\\n// Rotation um x,y,z\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\n\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = -ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\noz = oz - 6;\\nx = ox*fov/oz +0.5;\\n//x = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;"},{"baseVals":{"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ampl = time - int(time);\\naml = ampl/2;\\nx = .5 + ampl * sin(sample*230);\\ny = .5 + ampl * cos(sample*230);\\na = .03;"},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"q8=0;","frame_eqs_eel":"","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 uv_1;\\n  vec2 uv6_2;\\n  uv_1 = (uv + (vec2(0.0, 0.01) * dot (\\n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\\n  , vec3(0.32, 0.49, 0.29))));\\n  uv6_2 = (0.4 * sin((\\n    (uv_1 * 8.0)\\n   + \\n    (rand_frame * 6.0)\\n  .xy)));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = (((\\n    (texture (sampler_main, uv_1).xyz - (((texture (sampler_blur2, \\n      fract(uv_1)\\n    ).xyz * scale2) + bias2) * 0.03))\\n   + \\n    (0.1 * (vec3((0.1 / sqrt(\\n      dot (uv6_2, uv6_2)\\n    ))) * ((1.0 + roam_cos) / 2.0).xyz))\\n  ) * 0.99) - 0.02);\\n  ret = tmpvar_3.xyz;\\n }","comp":""}')},7077:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":3,"gammaadj":1.78,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"additivewave":1,"wave_brighten":0,"darken":1,"wave_a":4.1,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":100,"warpscale":0.089,"zoomexp":0.59124,"zoom":1.00951,"warp":0.35949,"sy":1.00183,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_x":64,"mv_y":1.248,"mv_l":5,"mv_b":0,"mv_a":0,"b1x":0.7,"b1ed":0},"shapes":[{"baseVals":{"enabled":1},"init_eqs_eel":"","frame_eqs_eel":"sides = 3;\\nsx = bass - zoom * time/ang;\\n\\n\\nang = time* 3.7;\\nx = 0.5;\\n\\n\\nr = 0.6*time;\\nb = 0.6*time;\\ng = 0.5*time;\\nr2 = 0.98*time;\\nb2 = 0.5*time;\\ng2 = 0.7*time;"},{"baseVals":{"enabled":1,"rad":0.01},"init_eqs_eel":"","frame_eqs_eel":"y = sin(time*2)*0.4 + 0.5;\\nx = sin(time)*0.4 + 0.5;\\n\\nsides = 20;\\n\\nr = 3;\\nr2 = 3;\\nb = 0;\\nb2 = 0;\\ng=0;\\ng2=0;"},{"baseVals":{"enabled":1,"rad":0.01},"init_eqs_eel":"","frame_eqs_eel":"x = sin(time*2)*0.4 + 0.5;\\ny = sin(time)*0.4 + 0.5;\\n\\nsides = 20;\\n\\nr = 0;\\nr2 = 0;\\nb = 3;\\nb2 = 3;\\ng=3;\\ng2=3;"},{"baseVals":{"enabled":1,"rad":0.01},"init_eqs_eel":"","frame_eqs_eel":"x = sin(bass*0.05)*0.4 + 0.5;\\ny = sin(bass)*0.4 + 0.5;\\n\\nsides = 20;\\n\\nr = 0;\\nr2 = 0;\\nb = 0;\\nb2 = 0;\\ng=4;\\ng2=4;"}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"tad1 = q4-q2;\\ntad2 = cos(time);\\n\\n\\n\\nx = cos( (tad1-tad2)*3*ang )*0.4899 + 0.5;\\n\\nr=sin(0.6*time);\\ng=sin(0.9*time);\\nb=sin(0.8*time);"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r=bass*.5;\\nwave_b=bass*.5;\\nrot=rot+((int(rand(10))-5)*.02*treb);","pixel_eqs_eel":"zoom=zoom+(above(y,.5)*sin(time)*.1);\\nzoom=zoom+(below(y,.5)*cos(time)*.1);","warp":" shader_body { \\n  vec2 uv_1;\\n  vec2 uv6_2;\\n  uv_1 = (uv + (vec2(0.0, 0.01) * dot (\\n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\\n  , vec3(0.32, 0.49, 0.29))));\\n  uv6_2 = (0.4 * sin((\\n    (uv_1 * 8.0)\\n   + \\n    (rand_frame * 6.0)\\n  .xy)));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = (((\\n    (texture (sampler_main, uv_1).xyz - (((texture (sampler_blur2, \\n      fract(uv_1)\\n    ).xyz * scale2) + bias2) * 0.03))\\n   + \\n    (0.1 * (vec3((0.1 / sqrt(\\n      dot (uv6_2, uv6_2)\\n    ))) * ((1.0 + roam_cos) / 2.0).xyz))\\n  ) * 0.99) - 0.02);\\n  ret = tmpvar_3.xyz;\\n }","comp":""}')},9313:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":5,"wave_dots":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":1.169,"wave_smoothing":0,"wave_mystery":0.08,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":0.442,"warpscale":0.498,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0.99,"ob_size":0,"ob_r":1,"ob_g":1,"ob_b":1,"ob_a":0.05,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":53,"rad":0.0244,"tex_ang":1.00531,"tex_zoom":1.53117,"r":0.2,"g":0.7,"g2":0,"a2":0.2,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"a = min(q22/4,1); a2 = 1;\\n\\n\\nr0 = bnot(q24)*r0 + q24 * int(rand(10))/10;\\nb0 = bnot(q24)*b0 + q24 * int(rand(10))/10;\\ng0 = bnot(q24)*g0 + q24 * int(rand(10))/10;\\nrad = q22/40;\\nr = r0; b = b0; g = g0;\\nr2 = 0; b2 = 0; g2 = 0;"},{"baseVals":{"enabled":1,"sides":44,"textured":1,"x":0.7,"rad":0.2173,"tex_ang":0.62832,"tex_zoom":1.63319,"g":1,"b":1,"r2":0.99,"g2":0.99,"b2":1,"a2":1,"border_r":0.5,"border_g":0.5,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"textured = 1;\\nrot0 = rot0 + 1/fps * q1;\\n\\nposx = (1-q24)*posx + q24*(.3+int(rand(100))/200);\\nposy = (1-q24)*posy + q24*(.3+int(rand(100))/200);;\\n\\nrad0  = (1-q24)*rad0 + q24*(.05+int(rand(100))/300);\\nrad = rad0;\\n\\n\\nx =  posx;\\ny =  posy;\\nang = rot0;"},{"baseVals":{"enabled":1,"sides":63,"x":0.503,"rad":0.03886,"tex_zoom":2.2233,"g":0.1,"r2":1,"b2":1,"a2":0.7,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"textured = 1;\\nrot0 = rot0 + .1/fps * q2;\\n\\n\\nposx = (1-q24)*posx + q24*(.3+int(rand(100))/200);\\nposy = (1-q24)*posy + q24*(.3+int(rand(100))/200);;\\n\\nrad0  = (1-q24)*rad0 + q24*(.05+int(rand(100))/400);\\nrad = rad0;\\n\\n\\nx =  posx+q26;\\ny =  posy;\\nang = rot0;"},{"baseVals":{"sides":63,"textured":1,"y":1,"rad":0.54822,"tex_zoom":0.49981,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"sep":120,"usedots":1,"additive":1,"scaling":0.89152,"smoothing":0.82,"a":0.6,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t2 = t2 + bass_att;","point_eqs_eel":"k1 = (sample*100)%8;\\nk2 = bnot (k1);\\nxi = value1*k2 + xi*(1-k2);\\nyi = value2*(1-k2) + yi*k2;\\n\\ndx = dx*.99 + xi;\\ndy = dy*.99 + yi;\\n\\nx = .5 + xi/2;\\ny = .5 + yi/2;\\n\\na = q22/8; \\na = min(a,.4);"},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.02,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"r":0,"g":0.2,"b":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"dirx = 1;","frame_eqs_eel":"dec_med = pow (0.7, 30/fps);\\ndec_slow = pow (0.9, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, avg+peak) * above (time, t0+.1);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %16;\\nindex2 = (index2 + is_beat*bnot(index))%4;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass + mid + treb;\\nq29 = 2 * (index2%2-.5);\\nq25 = min(1,q22/2);\\n\\nk1 =  is_beat*equal(index%4,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.1416/4;\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\n\\nq27 = index;\\nq28 = index2;\\n\\nmov = mov*dec_med + (1-dec_med)*above(index%8,2);\\nmovez = movez + 1/fps*mov;\\nq30 = movez;\\n//**************************\\n\\nq8 = movex; q9 = movey;\\n\\ntrel1 = trel1 + (q1*q22*3)/fps;\\ntrel2 = trel2 + (q2*q22*2)/fps;\\ntrel3 = trel3 + 4*(1-mov)/fps;\\ntrel4 = trel4 + 1 * mov/fps;\\n\\nq11 = .3*sin(trel1); \\nq12 = .1*cos(trel2); \\nq13 = 8 + 6*sin(trel3);\\n\\nq14 = .3*sin(trel2); \\nq15 = .2*cos(trel3) ; \\nq16 = 6 + 3*sin(trel1);\\n\\nq17 = .3*sin(trel4); \\nq18 = .3*cos(trel2); \\nq19 = 3 + sin(trel3);\\n\\ntrot = trel1/2;\\ntrot = index2*6.28/4;\\nq5 = cos(trot);\\nq6 = sin(trot);\\nq7 = -q6;\\nq8 = q5;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 uv_1;\\n  vec2 uv6_2;\\n  uv_1 = (uv + (vec2(0.0, 0.01) * dot (\\n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\\n  , vec3(0.32, 0.49, 0.29))));\\n  uv6_2 = (0.4 * sin((\\n    (uv_1 * 8.0)\\n   + \\n    (rand_frame * 6.0)\\n  .xy)));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = (((\\n    (texture (sampler_main, uv_1).xyz - (((texture (sampler_blur2, \\n      fract(uv_1)\\n    ).xyz * scale2) + bias2) * 0.03))\\n   + \\n    (0.1 * (vec3((0.1 / sqrt(\\n      dot (uv6_2, uv6_2)\\n    ))) * ((1.0 + roam_cos) / 2.0).xyz))\\n  ) * 0.99) - 0.02);\\n  ret = tmpvar_3.xyz;\\n }","comp":"vec3 xlat_mutableret1;\\n shader_body { \\n  vec2 uv_1;\\n  vec2 uv2_2;\\n  uv_1 = (uv - 0.5);\\n  uv_1 = (uv_1 * aspect.xy);\\n  xlat_mutableret1 = max (vec3(0.0, 0.0, 0.0), texture (sampler_main, (uv_1 + 0.5)).xyz);\\n  uv2_2.x = ((uv_1.x * 0.5004596) - (uv_1.y * 0.8657598));\\n  uv2_2.y = ((uv_1.x * 0.8657598) + (uv_1.y * 0.5004596));\\n  xlat_mutableret1 = max (xlat_mutableret1, texture (sampler_main, (uv2_2 + 0.5)).xyz);\\n  uv2_2.x = ((uv_1.x * -0.4990803) - (uv_1.y * 0.8665558));\\n  uv2_2.y = ((uv_1.x * 0.8665558) + (uv_1.y * -0.4990803));\\n  xlat_mutableret1 = max (xlat_mutableret1, texture (sampler_main, (uv2_2 + 0.5)).xyz);\\n  uv2_2.x = ((uv_1.x * -0.9999987) - (uv_1.y * 0.001592548));\\n  uv2_2.y = ((uv_1.x * 0.001592548) + (uv_1.y * -0.9999987));\\n  xlat_mutableret1 = max (xlat_mutableret1, texture (sampler_main, (uv2_2 + 0.5)).xyz);\\n  uv2_2.x = ((uv_1.x * -0.5018377) - (uv_1.y * -0.8649619));\\n  uv2_2.y = ((uv_1.x * -0.8649619) + (uv_1.y * -0.5018377));\\n  xlat_mutableret1 = max (xlat_mutableret1, texture (sampler_main, (uv2_2 + 0.5)).xyz);\\n  uv2_2.x = ((uv_1.x * 0.4976997) - (uv_1.y * -0.8673494));\\n  uv2_2.y = ((uv_1.x * -0.8673494) + (uv_1.y * 0.4976997));\\n  xlat_mutableret1 = max (xlat_mutableret1, texture (sampler_main, (uv2_2 + 0.5)).xyz);\\n  uv2_2.x = ((uv_1.x * 0.9999949) - (uv_1.y * -0.003185092));\\n  uv2_2.y = ((uv_1.x * -0.003185092) + (uv_1.y * 0.9999949));\\n  xlat_mutableret1 = max (xlat_mutableret1, texture (sampler_main, (uv2_2 + 0.5)).xyz);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = (xlat_mutableret1 * 2.0);\\n  ret = tmpvar_3.xyz;\\n }"}')},1613:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":3,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":6,"modwavealphabyvolume":1,"darken":1,"wave_a":0.001,"wave_scale":1.741,"wave_smoothing":0.81,"modwavealphastart":0.37,"modwavealphaend":1.32,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.8,"wave_g":0.59,"wave_b":0.5,"ob_size":0,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"sides":94,"rad":0.26574,"ang":2.32478,"tex_ang":1.00531,"tex_zoom":1.53117,"r":0.5,"g":1,"b":0.9,"a":0.03,"r2":0.83,"g2":0.93,"b2":0.8,"a2":0.06,"border_b":0,"border_a":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"rad":1.26458,"tex_ang":1.4451,"tex_zoom":1.49331,"r":0.7,"g":0.4,"a":0.01,"r2":0.7,"g2":0.4,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":63,"x":0.503,"rad":0.15648,"tex_zoom":0.60986,"g":1,"b":1,"a":0.3,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":63,"textured":1,"y":1,"rad":0.54822,"tex_zoom":0.49981,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"additive":1,"scaling":0.89152,"smoothing":0.82,"a":0.6,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t2 = t2 + bass_att;","point_eqs_eel":"k1 = (sample*100)%2;\\n\\nxi = value1*k1 + xi*(1-k1);\\nyi = value2*(1-k1) + yi*k1;\\n\\nx = .5 + 5*xi;\\ny = .5 + 5*yi;\\n\\na = bass_att + mid_att + treb_att;"},{"baseVals":{"enabled":1,"sep":20,"spectrum":1,"usedots":1,"thick":1,"additive":1,"scaling":5.90461,"smoothing":0,"a":0.1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"\\nx = sample ;\\n\\nval = value1;\\ny = val * (.25-(sample-.5)*(sample-.5)) + .5;\\n\\nr = .6; g = 1; b = 1;\\na=1;"},{"baseVals":{"usedots":1,"thick":1,"additive":1,"scaling":0.09987,"smoothing":0.4,"r":0,"b":0,"a":0.32,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"\\nx = sample;\\nr = .0; b = .0; g = 1; a = .6;\\ny = .5 + value1;"},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ra = .8;\\nrb = .5;\\npib = 6.28318530718;\\n\\n\\ntic = min(time-tin,.1);\\ntin = if(equal(sample,0),time,tin);\\n\\nmod = 1.5 + .5*sin(time*.15);\\nmed = 1.5 + .5*sin(time*.134);\\nmed = 5;\\namod = 3;\\n\\nvr = int(rand(10001))*.0001;\\nrb = rb + int(rand(10001))*.0001*.1;\\n\\na = vr;\\n\\nsa = vr*pib*.5;\\nsp = sa*mod + q1*1.3;\\nsam = sa*med - q1*.219;\\n\\nox = ra*sin(sam*pib);\\noy = ra*cos(sam*pib);\\nox = ox + rb*-cos(sp)*sin(sam*pib);\\noz = rb*-sin(sp);\\noy = oy + rb*-cos(sp)*cos(sam*pib);\\n\\n\\nxang = time*.132;\\nxang = q2;\\nyang = time*.153;\\nyang = q3;\\nzang = time*.110;\\nzang = q4;\\nfov = 0.6 + 0.2*sin(time);\\nfov = .5;\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = -ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\noz = oz - 2;\\nx = ox*fov/oz + 0.5;\\nx = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;\\n"}],"init_eqs_eel":"fade = .5;","frame_eqs_eel":"dec_med = pow (0.9, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb);\\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %8;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass + mid + treb;\\n\\nk1 =  is_beat*equal(index,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.14159265358/2;\\nq27 = index + 1;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\nzoom = 1.0;\\nrot = -0.00 * index;\\n\\nfade = fade*dec_med + pow(0.996, 30/fps) * (1-dec_med);\\nq32 = fade;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 zz_1;\\n  mat2 tmpvar_2;\\n  tmpvar_2[uint(0)] = _qa.xy;\\n  tmpvar_2[1u] = _qa.zw;\\n  zz_1 = (((\\n    (uv - vec2(0.5, 0.5))\\n   * texsize.xy) * (0.015 * q27)) * tmpvar_2);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = (((q32 * texture (sampler_main, \\n    (uv + ((clamp (\\n      (sin(zz_1) / cos(zz_1))\\n    , vec2(-20.0, -20.0), vec2(20.0, 20.0)) * texsize.zw) * 8.0))\\n  ).xyz) + (\\n    (0.03 * texture (sampler_noise_lq, ((uv * 0.3) + (0.01 * rand_frame).xy)))\\n  .xyz * \\n    (1.0 - ((texture (sampler_blur1, uv).xyz * scale1) + bias1))\\n  )) - 0.02);\\n  ret = tmpvar_3.xyz;\\n }","comp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1 = texture (sampler_main, uv);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ((tmpvar_1.xyz + clamp (\\n    (3.0 * (((texture (sampler_blur1, \\n      (uv - (0.01 * tmpvar_1.xyz).xy)\\n    ).xyz * scale1) + bias1) - vec3(0.1, 0.1, 0.2)))\\n  , 0.0, 1.0)) * 1.3);\\n  ret = tmpvar_2.xyz;\\n }"}')},1007:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":3,"gammaadj":1.399,"decay":1,"echo_zoom":1.488,"echo_alpha":0.3,"wave_mode":7,"additivewave":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"fshader":1,"zoom":0.99951,"warp":0.0101,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.005,"ob_a":0.1,"ib_size":0,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":3,"textured":1,"rad":1.46815,"tex_zoom":0.63904,"g":1,"b":1,"a":0.5,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ang=time*.1;\\n\\nsides=int(abs(sin(time*.5)*7));"},{"baseVals":{"enabled":1,"sides":3,"additive":1,"thickoutline":1,"rad":0.02743,"a":0.05,"r2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ang=time*.1;\\n\\nr=.7+(sin(time)*.3);\\ng=.7+(cos(time)*.3);\\nb=.7+(sin(time+.12)*.3);\\n\\nrad=rad+(treb_att*bass_att*.5);\\nx=.5+(sin(time)*.5);"},{"baseVals":{"enabled":1,"sides":5,"additive":1,"rad":0.02508,"a":0.05,"r2":1,"b2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ang=time*.25;\\n\\ng=.7+(sin(time)*.3);\\nb=.7+(cos(time)*.3);\\nr=.7+(sin(time+.12)*.3);\\n\\nr2=.7+(sin(time)*.3);\\ng2=.7+(cos(time)*.3);\\nb2=.7+(sin(time+.12)*.3);\\n\\nrad=rad+(treb_att*bass_att*.5);\\ny=.5+(sin(time)*.25);"},{"baseVals":{"additive":1,"textured":1,"rad":2.66717,"tex_zoom":0.60804,"a":0.1,"a2":0.01,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"usedots":1,"additive":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"branch=int(rand(2));\\n\\n//base\\nwx=if(equal(sc,0),.5,wx);\\nwy=if(equal(sc,0),0,wy);\\n\\nwx=if(equal(sc,1),.5,wx);\\nwy=if(equal(sc,1),.1,wy);\\n\\n//calculate previous branch length\\nd=if(below(sc,2),.3,.7*d);\\n\\n//angle\\nwainc=if(equal(branch,1),.2+sin(time),-.2);\\n\\nwa=if(below(sc,2),3.1415927*.5,wa+wainc);\\n\\n//branches\\nwx=if(above(sc,2),wx+cos(wa)*d,wx);\\nwy=if(above(sc,2),wy+sin(wa)*d,wy);\\n\\n//sample count\\nsc=if(equal(sc,11),0,sc+1);\\n\\na=if(below(sc,2),0,.1);\\n\\nx=wx;\\ny=wy;"},{"baseVals":{"enabled":1,"usedots":1,"additive":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"branch=int(rand(2));\\n\\n//base\\nwx=if(equal(sc,0),.5,wx);\\nwy=if(equal(sc,0),1,wy);\\n\\nwx=if(equal(sc,1),.5,wx);\\nwy=if(equal(sc,1),.9,wy);\\n\\n//calculate previous branch length\\nd=if(below(sc,2),.3,.7*d);\\n\\n//angle\\nwainc=if(equal(branch,1),.2+sin(time),-.2);\\n\\nwa=if(below(sc,2),3.1415927*1.5,wa+wainc);\\n\\n//branches\\nwx=if(above(sc,2),wx+cos(wa)*d,wx);\\nwy=if(above(sc,2),wy+sin(wa)*d,wy);\\n\\n//sample count\\nsc=if(equal(sc,11),0,sc+1);\\n\\na=if(below(sc,2),0,.1);\\n\\nx=wx;\\ny=wy;"},{"baseVals":{"enabled":1,"usedots":1,"additive":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"branch=int(rand(2));\\n\\n//base\\nwx=if(equal(sc,0),0,wx);\\nwy=if(equal(sc,0),.5,wy);\\n\\nwx=if(equal(sc,1),.1,wx);\\nwy=if(equal(sc,1),.5,wy);\\n\\n//calculate previous branch length\\nd=if(below(sc,2),.3,.7*d);\\n\\n//angle\\nwainc=if(equal(branch,1),.25+cos(time),-.25);\\n\\nwa=if(below(sc,2),3.1415927*2,wa+wainc);\\n\\n//branches\\nwx=if(above(sc,2),wx+cos(wa)*d,wx);\\nwy=if(above(sc,2),wy+sin(wa)*d,wy);\\n\\n//sample count\\nsc=if(equal(sc,11),0,sc+1);\\n\\na=if(below(sc,2),0,.1);\\n\\nx=wx;\\ny=wy;"},{"baseVals":{"enabled":1,"usedots":1,"additive":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"branch=int(rand(2));\\n\\n//base\\nwx=if(equal(sc,0),1,wx);\\nwy=if(equal(sc,0),.5,wy);\\n\\nwx=if(equal(sc,1),.9,wx);\\nwy=if(equal(sc,1),.5,wy);\\n\\n//calculate previous branch length\\nd=if(below(sc,2),.3,.7*d);\\n\\n//angle\\nwainc=if(equal(branch,1),.25+cos(time),-.25);\\n\\nwa=if(below(sc,2),3.1415927*1,wa+wainc);\\n\\n//branches\\nwx=if(above(sc,2),wx+cos(wa)*d,wx);\\nwy=if(above(sc,2),wy+sin(wa)*d,wy);\\n\\n//sample count\\nsc=if(equal(sc,11),0,sc+1);\\n\\na=if(below(sc,2),0,.1);\\n\\nx=wx;\\ny=wy;"}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.5*sin(time*1.13);\\nwave_g = wave_g + 0.5*sin(time*1.23);\\nwave_b = wave_b + 0.5*sin(time*1.33);\\n\\nwave_x = wave_x + 0.2*sin(0.32*time);\\nwave_y = wave_y + 0.2*cos(0.32*time);\\n\\nob_r = wave_r;\\nob_g = wave_g;\\nob_b = wave_b;","pixel_eqs_eel":"thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\\ndx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;\\ndy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;\\nzoom = zoom + 0.0095*(sin(10*ang) + sin(sin(time*2*sin(time)*rad))*0.3 - cos(rad)*0.1);\\nrot = rot + 0.08*abs(0.746-rad)*sin(2.2*(0.5-rad)+5.7*sin(0.1*time));\\nsx = sx + 0.01*(0.99*1-rad)*sin(0.733*time)*below(sin(time),0);\\nsy = sy + 0.01*(0.99*1-rad)*cos(0.953*time)*above(sin(time),0);\\nzoom = zoom - 0.015*(0.5*abs(3)-rad)*below(rad,1.5);","warp":" shader_body { \\n  vec3 tmpvar_1;\\n  tmpvar_1 = max (texture (sampler_fc_main, uv).xyz, (texture (sampler_fc_main, mix (uv, uv_orig, vec2(0.33, 0.33))).xyz * 0.95));\\n  vec2 x_2;\\n  x_2 = (uv - uv_orig);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = (((\\n    mix (tmpvar_1, (floor((\\n      (tmpvar_1 * vec3(7.0, 6.0, 8.0))\\n     + 0.25)) / vec3(7.0, 6.0, 8.0)), vec3(0.1, 0.1, 0.1))\\n   * 0.99) - 0.0025) - ((1.0 - \\n    clamp ((sqrt(dot (x_2, x_2)) * 40.0), 0.0, 1.0)\\n  ) * 0.003));\\n  ret = tmpvar_3.xyz;\\n }","comp":""}')},4477:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":4,"gammaadj":1,"decay":1,"wave_mode":1,"modwavealphabyvolume":1,"wave_a":8.2,"wave_scale":1.013,"wave_smoothing":0.9,"wave_mystery":-0.28,"modwavealphastart":1.05,"modwavealphaend":1.65,"warpscale":2.853,"zoomexp":3.6,"zoom":1.025,"rot":-0.02,"warp":0.309,"wave_r":0.7,"wave_g":0.65,"wave_b":0.7,"ob_a":0.5,"ib_a":0.5,"mv_x":31.2,"mv_y":2.28,"mv_l":2.5,"mv_b":0.8,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.200*( 0.60*sin(0.933*time) + 0.40*sin(1.045*time) );\\nwave_g = wave_g + 0.200*( 0.60*sin(0.900*time) + 0.40*sin(0.956*time) );\\nwave_b = wave_b + 0.200*( 0.60*sin(0.910*time) + 0.40*sin(0.920*time) );\\nzoom = zoom + 0.023*( 0.60*sin(0.339*time) + 0.40*sin(0.276*time) );\\nrot = rot + 0.030*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );","pixel_eqs_eel":"zoom=zoom+0.03*sin((x*2-1)*4+time*1.63)+0.03*sin((y*2-1)*3+time*1.37)-0.1*sin(rad*0.1+time*1.6);","warp":" shader_body { \\n  vec3 ret_1;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv);\\n  ret_1 = (tmpvar_2.xyz + ((tmpvar_2.xyz - \\n    ((texture (sampler_blur2, uv).xyz * scale2) + bias2)\\n  ) * 0.3));\\n  ret_1 = (ret_1 * 0.9);\\n  ret_1 = (ret_1 + ((\\n    ((texture (sampler_noise_lq, ((\\n      (uv_orig * texsize.xy)\\n     * \\n      (texsize_noise_lq.zw * 0.4)\\n    ) + rand_frame.xy)).xyz - 0.5) / 256.0)\\n   * 122.0) * clamp (\\n    ((treb_att - 1.0) + 0.4)\\n  , 0.0, 1.0)));\\n  vec3 tmpvar_3;\\n  tmpvar_3 = mix (ret_1, vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))), vec3(0.2, 0.2, 0.2));\\n  ret_1 = tmpvar_3;\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = tmpvar_3;\\n  ret = tmpvar_4.xyz;\\n }","comp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = texture (sampler_main, uv).xyz;\\n  ret = tmpvar_1.xyz;\\n }"}')},5713:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.9,"echo_zoom":1.169,"wave_a":0.001,"warpanimspeed":30.965,"warpscale":2.572,"zoom":1.00901,"warp":0.00054,"wave_r":0,"wave_g":0,"wave_b":0,"mv_a":0},"shapes":[{"baseVals":{"textured":1,"x":0.75,"y":0.75,"rad":0.7418,"tex_zoom":0.22746,"g":1,"b":1,"r2":1,"b2":1,"border_r":0,"border_g":0,"border_a":0,"enabled":0},"init_eqs_eel":"tex_saw = 0.4;","frame_eqs_eel":"ang = q1*0.2;\\n\\ntex_capture = above(q3,2);\\ntex_zoom = 0.6;"},{"baseVals":{"enabled":1,"additive":1,"rad":0.0444,"tex_zoom":0.22746,"r":0,"g":0.3,"g2":0,"border_r":0,"border_g":0,"border_a":0},"init_eqs_eel":"tex_saw = 0.4;","frame_eqs_eel":""},{"baseVals":{"sides":100,"rad":0.22167,"border_a":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"border_r = 0.5 + 0.5*sin(q1*10);"},{"baseVals":{"sides":100,"g":1,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"a = above(q3,2);\\na2 = above(q3,2)*0.8;\\n\\nxx = if(above(q3,6),xx,rand(100)*0.01);\\nyy = if(above(q3,6),yy,rand(100)*0.01);\\nradi = if(above(q3,5),radi,rand(100)*0.01);\\n\\nrad = radi;\\n\\nx = xx;\\ny = yy;\\n\\n\\nr = 0.5 + 0.5*sin(q1*1.22) + 0.1;\\ng = 0.4 + 0.4*sin(q1*1.307);\\nb = 0.4 + 0.4*sin(q1*1.959);\\n\\n\\nr2 = 0.5 + 0.5*sin(q1*1.622) + 0.1;\\ng2 = 0.4 + 0.4*sin(q1*1.507);\\nb2 = 0.4 + 0.4*sin(q1*1.6559);"}],"waves":[{"baseVals":{"enabled":1,"a":0.5},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//init\\nzs = if(below(zs,1),9,zs);\\n\\nzs = if(above(zs, 1100),1, zs);\\n\\nspeed = bass*0.002;\\n\\n//sum\\nzs = zs + tan(q1*0.015)*speed;\\n\\nzd = zd + 2;\\n\\n\\n\\n//project\\nx = 0.5 + 0.1*cos(q1*zs);\\ny = 0.5 + 0.1*sin(q1*zs);\\n\\nr = 0.5 + 0.5*sin(q1*1.2 + x + x);\\ng = 0.5 + 0.5*sin(q1*1.5 + x + y);\\nb = 0.5 + 0.5*sin(q1*1.36 + y + y);"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"rot = rot + 0.010*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );\\ncx = cx + 0.210*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\ncy = cy + 0.210*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\\ndx = dx + 0.003*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );\\ndy = dy + 0.003*( 0.60*sin(0.284*time) + 0.40*sin(0.247*time) );\\ndecay = decay - 0.01*equal(frame%6,0);\\ndx = dx + dx_residual;\\ndy = dy + dy_residual;\\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.96+1.3);\\ndx_residual = equal(bass_thresh,2.13)*0.016*sin(time*7) + (1-equal(bass_thresh,2.13))*dx_residual;\\ndy_residual = equal(bass_thresh,2.13)*0.012*sin(time*9) + (1-equal(bass_thresh,2.13))*dy_residual;\\nwave_x = wave_x - dx_residual*7;\\nwave_y = wave_y - dy_residual*7;\\nwave_mystery = time*0.03;\\n\\n//zoom = zoom + 0.005*( 0.60*sin(0.1934*time+3) + 0.40*sin(0.307*time+9) );\\n//zoom = zoom + max(0,bass_att-1.1)*0.2;\\n//warp = warp + max(0,treb_att-1.1)*1.0;\\n\\n// this is a great way to respond to beats:\\n// once you get one, let it decay at a constant rate!!\\nrg = max(rg*0.77, 0.02 + 0.5*min(2,max(0,mid_att-1)*1.3));\\nq9 = rg;\\n\\nzoom = zoom + q9*0.1;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  ret_1 = texture (sampler_main, uv).xyz;\\n  ret_1.xz = (ret_1.xz + ((\\n    (ret_1.xz - mix (((texture (sampler_blur2, uv).xyz * scale2) + bias2), ((texture (sampler_blur1, uv).xyz * scale1) + bias1), uv_orig.xxx).xz)\\n   * 0.3) - (0.00666 * \\n    (((bass + treb) + mid) - 0.5)\\n  )));\\n  ret_1.xz = (ret_1.xz * 0.95);\\n  ret_1.xz = (ret_1.xz + ((\\n    ((texture (sampler_noise_lq, ((\\n      (uv_orig * texsize.xy)\\n     * \\n      (texsize_noise_lq.zw * 0.4)\\n    ) + rand_frame.xy)).xz - 0.5) / 256.0)\\n   * 122.0) * clamp (\\n    (treb_att - 1.0)\\n  , 0.0, 1.0)));\\n  ret_1.x = mix (ret_1.x, dot (ret_1.xxx, vec3(0.32, 0.49, 0.29)), 0.2);\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 12.0);\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur2, \\n    (uv_orig + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    (uv_orig - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale2) + bias2));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur2, \\n    (uv_orig + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    (uv_orig - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale2) + bias2));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = tmpvar_3.x;\\n  tmpvar_5.y = tmpvar_4.x;\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = tmpvar_3.y;\\n  tmpvar_6.y = tmpvar_4.y;\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = tmpvar_3.z;\\n  tmpvar_7.y = tmpvar_4.z;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (((uv_orig + \\n    (tmpvar_5 * 0.05)\\n  ) + (tmpvar_6 * 0.02)) - (tmpvar_7 * 0.05));\\n  ret_1.y = (texture (sampler_main, tmpvar_8).y - 0.04);\\n  ret_1.y = (ret_1.y + ((\\n    (ret_1.y - (((texture (sampler_blur1, tmpvar_8).xyz * scale1) + bias1).y * 1.2))\\n   + 0.2) * 0.2));\\n  vec4 tmpvar_9;\\n  tmpvar_9.w = 1.0;\\n  tmpvar_9.xyz = ret_1;\\n  ret = tmpvar_9.xyz;\\n }","comp":" shader_body { \\n  vec3 ret2_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (texsize.zw * 6.0);\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = dot (((\\n    (texture (sampler_blur1, (uv + (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (uv - (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  tmpvar_4.y = dot (((\\n    (texture (sampler_blur1, (uv + (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (uv - (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (uv - (0.25 * tmpvar_4));\\n  vec4 tmpvar_6;\\n  tmpvar_6 = texture (sampler_blur3, uv);\\n  ret_2 = (0.5 * ((tmpvar_6.xyz * scale3) + bias3));\\n  ret_2 = (ret_2 - ((\\n    (texture (sampler_blur2, uv).xyz * scale2)\\n   + bias2) - 0.01));\\n  vec4 tmpvar_7;\\n  tmpvar_7 = texture (sampler_blur1, uv);\\n  ret_2 = (ret_2 + ((texture (sampler_main, uv).xyz + \\n    (((tmpvar_7.xyz * scale1) + bias1) * 0.15)\\n  ) - 0.01));\\n  ret_2 = (ret_2 + 0.75);\\n  float tmpvar_8;\\n  tmpvar_8 = dot (ret_2, vec3(0.32, 0.49, 0.29));\\n  vec3 tmpvar_9;\\n  tmpvar_9 = mix (vec3(tmpvar_8), (vec3(tmpvar_8) * dot (\\n    (((texture (sampler_blur3, tmpvar_5).xyz * scale3) + bias3) - ((texture (sampler_blur1, tmpvar_5).xyz * scale1) + bias1))\\n  , vec3(0.32, 0.49, 0.29))), pow (hue_shader, vec3(tmpvar_8)));\\n  ret2_1 = ((-0.5 * (\\n    (texture (sampler_blur3, tmpvar_5).xyz * scale3)\\n   + bias3)) + ((texture (sampler_blur1, tmpvar_5).xyz * scale1) + bias1));\\n  ret2_1 = (ret2_1 - texture (sampler_main, tmpvar_5).xyz);\\n  ret2_1 = (ret2_1 - 0.75);\\n  float tmpvar_10;\\n  tmpvar_10 = dot (ret2_1, vec3(0.32, 0.49, 0.29));\\n  vec3 tmpvar_11;\\n  tmpvar_11 = mix (vec3(tmpvar_10), (vec3(tmpvar_10) * dot (\\n    (((tmpvar_6.xyz * scale3) + bias3) - ((tmpvar_7.xyz * scale1) + bias1))\\n  , vec3(0.32, 0.49, 0.29))), pow (hue_shader.zxy, tmpvar_9));\\n  ret2_1 = tmpvar_11;\\n  vec3 tmpvar_12;\\n  tmpvar_12 = abs((tmpvar_9 - (2.0 * tmpvar_11)));\\n  ret_2 = (tmpvar_12 - (0.25 * sqrt(tmpvar_12)));\\n  ret_2 = (ret_2 * ret_2);\\n  vec4 tmpvar_13;\\n  tmpvar_13.w = 1.0;\\n  tmpvar_13.xyz = ret_2;\\n  ret = tmpvar_13.xyz;\\n }"}')},2218:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1.9,"echo_zoom":1.169,"wave_a":0.001,"warpanimspeed":30.965,"warpscale":2.572,"zoomexp":1.94773,"zoom":1.00901,"warp":0.00054,"wave_r":0,"wave_g":0,"wave_b":0,"mv_a":0},"shapes":[{"baseVals":{"textured":1,"x":0.75,"y":0.75,"rad":0.7418,"tex_zoom":0.22746,"g":1,"b":1,"r2":1,"b2":1,"border_r":0,"border_g":0,"border_a":0,"enabled":0},"init_eqs_eel":"tex_saw = 0.4;","frame_eqs_eel":"ang = q1*0.2;\\n\\ntex_capture = above(q3,2);\\ntex_zoom = 0.6;"},{"baseVals":{"enabled":1,"additive":1,"rad":0.0444,"tex_zoom":0.22746,"r":0,"g":0.3,"g2":0,"border_r":0,"border_g":0,"border_a":0},"init_eqs_eel":"tex_saw = 0.4;","frame_eqs_eel":""},{"baseVals":{"sides":100,"rad":0.22167,"border_a":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"border_r = 0.5 + 0.5*sin(q1*10);"},{"baseVals":{"sides":100,"g":1,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"a = above(q3,2);\\na2 = above(q3,2)*0.8;\\n\\nxx = if(above(q3,6),xx,int(rand(100))*0.01);\\nyy = if(above(q3,6),yy,int(rand(100))*0.01);\\nradi = if(above(q3,5),radi,int(rand(100))*0.01);\\n\\nrad = radi;\\n\\nx = xx;\\ny = yy;\\n\\n\\nr = 0.5 + 0.5*sin(q1*1.22) + 0.1;\\ng = 0.4 + 0.4*sin(q1*1.307);\\nb = 0.4 + 0.4*sin(q1*1.959);\\n\\n\\nr2 = 0.5 + 0.5*sin(q1*1.622) + 0.1;\\ng2 = 0.4 + 0.4*sin(q1*1.507);\\nb2 = 0.4 + 0.4*sin(q1*1.6559);"}],"waves":[{"baseVals":{"enabled":1,"a":0.5},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//init\\nzs = if(below(zs,1),9,zs);\\n\\nzs = if(above(zs, 1100),1, zs);\\n\\nspeed = bass*0.002;\\n\\n//sum\\nzs = zs + tan(q1*0.015)*speed;\\n\\nzd = zd + 2;\\n\\n\\n\\n//project\\nx = 0.5 + 0.1*cos(q1*zs);\\ny = 0.5 + 0.1*sin(q1*zs);\\n\\nr = 0.5 + 0.5*sin(q1*1.2 + x + x);\\ng = 0.5 + 0.5*sin(q1*1.5 + x + y);\\nb = 0.5 + 0.5*sin(q1*1.36 + y + y);"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"rot = -0.001;\\n//rot = rot + 0.010*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );\\n\\nzoom =1.01;// + bass*0.05 - treb*0.015;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 uv_1;\\n  vec3 ret_2;\\n  uv_1 = (uv + (vec2(1.0, 0.0) * texsize.zw));\\n  ret_2 = texture (sampler_main, uv_1).xyz;\\n  ret_2.xz = (ret_2.xz + ((\\n    (ret_2.xz - mix (((texture (sampler_blur2, uv_1).xyz * scale2) + bias2), ((texture (sampler_blur1, uv_1).xyz * scale1) + bias1), uv_orig.xxx).xz)\\n   * 0.3) - (0.00666 * \\n    (((bass + treb) + mid) - 0.5)\\n  )));\\n  ret_2.xz = (ret_2.xz * 0.95);\\n  ret_2.xz = (ret_2.xz + ((\\n    ((texture (sampler_noise_lq, ((\\n      (uv_orig * texsize.xy)\\n     * \\n      (texsize_noise_lq.zw * 0.4)\\n    ) + rand_frame.xy)).xz - 0.5) / 256.0)\\n   * 122.0) * clamp (\\n    (treb_att - 1.0)\\n  , 0.0, 1.0)));\\n  ret_2.x = mix (ret_2.x, dot (ret_2.xxx, vec3(0.32, 0.49, 0.29)), 0.2);\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (texsize.zw * 12.0);\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur2, \\n    (uv_orig + (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    (uv_orig - (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale2) + bias2));\\n  vec3 tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_blur2, \\n    (uv_orig + (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    (uv_orig - (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale2) + bias2));\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = tmpvar_4.x;\\n  tmpvar_6.y = tmpvar_5.x;\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = tmpvar_4.y;\\n  tmpvar_7.y = tmpvar_5.y;\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = tmpvar_4.z;\\n  tmpvar_8.y = tmpvar_5.z;\\n  vec2 tmpvar_9;\\n  tmpvar_9 = (((uv_orig + \\n    (tmpvar_6 * 0.005)\\n  ) + (tmpvar_7 * 0.005)) - (tmpvar_8 * 0.005));\\n  ret_2.y = (texture (sampler_main, tmpvar_9).y - 0.04);\\n  ret_2.y = (ret_2.y + ((\\n    (ret_2.y - (((texture (sampler_blur1, tmpvar_9).xyz * scale1) + bias1).y * 1.5))\\n   + 0.4) * 0.1));\\n  vec4 tmpvar_10;\\n  tmpvar_10.w = 1.0;\\n  tmpvar_10.xyz = ret_2;\\n  ret = tmpvar_10.xyz;\\n }","comp":" shader_body { \\n  float ang2_1;\\n  vec2 uv2_2;\\n  ang2_1 = ((ang * 0.1591549) + (time * 0.025));\\n  ang2_1 = (fract((ang2_1 * 9.0)) / 9.0);\\n  ang2_1 = (abs((ang2_1 - 0.05555556)) * 6.283185);\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = cos(ang2_1);\\n  tmpvar_3.y = sin(ang2_1);\\n  uv2_2 = (0.5 + ((\\n    (0.4 * (rad * sqrt(dot (texsize.xy, texsize.xy))))\\n   * tmpvar_3) * texsize.zw));\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = (((texture (sampler_main, uv2_2).y * vec3(0.6, 0.2, 1.5)) + (texture (sampler_fw_main, uv2_2).x * vec3(1.0, 0.66, 0.0))) - (texture (sampler_main, uv2_2).z * vec3(-0.6, 1.0, 2.0)));\\n  ret = tmpvar_4.xyz;\\n }"}')},3442:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":2.001,"decay":0.95,"echo_zoom":0.9996,"wave_mode":1,"wrap":0,"wave_a":3.072644,"wave_scale":1.285746,"wave_smoothing":0,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.999513,"warp":0.0101,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.005,"ob_a":0.8,"ib_size":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.5*sin(time*1.13);\\nwave_g = wave_g + 0.5*sin(time*1.23);\\nwave_b = wave_b + 0.5*sin(time*1.33);","pixel_eqs_eel":"zoom = zoom + 0.05*(sin(6*ang) + sin(sin(time*2*sin(time)*rad))*0.3 - cos(rad)*0.1);\\nrot = rot + 0.5*sin(0.5-rad)*cos(0.02*(0.5-rad)+time);\\nsx = sx + 0.01*(0.99*1-rad)*sin(0.733*time)*below(sin(time),0);\\nsy = sy + 0.01*(0.99*1-rad)*cos(0.953*time)*above(sin(time),0);\\nzoom = zoom - 0.05*(1-rad)*below(rad,0.5);","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (texture (sampler_main, (uv + (\\n    (texture (sampler_main, (uv + texsize.zw)).xy - 0.37)\\n   * 0.03))).xyz - 0.004);\\n  ret = tmpvar_1.xyz;\\n }","comp":" shader_body { \\n  vec2 uv_1;\\n  vec3 ret_2;\\n  uv_1 = (0.03 + (0.94 * uv));\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (texsize.zw * 0.7);\\n  ret_2 = (texture (sampler_main, (uv_1 + (tmpvar_3 * vec2(3.5, 0.0)))).xyz * 3.0);\\n  ret_2 = (ret_2 + (texture (sampler_main, (uv_1 + \\n    (tmpvar_3 * vec2(0.0, 3.5))\\n  )).xyz * 3.0));\\n  ret_2 = (ret_2 + (texture (sampler_main, (uv_1 + \\n    (tmpvar_3 * vec2(0.0, -3.5))\\n  )).xyz * -2.0));\\n  ret_2 = (ret_2 + (texture (sampler_main, (uv_1 + \\n    (tmpvar_3 * vec2(-3.5, 0.0))\\n  )).xyz * -2.0));\\n  ret_2 = (ret_2 / 2.0);\\n  ret_2 = (ret_2 * (1.0 + (0.15 * \\n    ((texture (sampler_noise_lq, (rand_frame.xy + (\\n      (uv_1 * texsize.xy)\\n     * texsize_noise_lq.zw))).xxx * 2.0) - 1.0)\\n  )));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = pow (ret_2, vec3(0.5, 0.8, 1.0));\\n  ret_2 = tmpvar_4;\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = tmpvar_4;\\n  ret = tmpvar_5.xyz;\\n }"}')},8449:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":2.001,"decay":0.95,"echo_zoom":0.9996,"wave_mode":1,"wrap":0,"wave_a":3.072644,"wave_scale":1.285746,"wave_smoothing":0,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.999513,"warp":0.0101,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.005,"ob_a":0.8,"ib_size":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.5*sin(time*1.13);\\nwave_g = wave_g + 0.5*sin(time*1.23);\\nwave_b = wave_b + 0.5*sin(time*1.33);","pixel_eqs_eel":"zoom = zoom + 0.05*(sin(6*ang) + sin(sin(time*2*sin(time)*rad))*0.3 - cos(rad)*0.1);\\nrot = rot + 0.5*sin(0.5-rad)*cos(0.02*(0.5-rad)+time);\\nsx = sx + 0.01*(0.99*1-rad)*sin(0.733*time)*below(sin(time),0);\\nsy = sy + 0.01*(0.99*1-rad)*cos(0.953*time)*above(sin(time),0);\\nzoom = zoom - 0.05*(1-rad)*below(rad,0.5);","warp":" shader_body { \\n  vec3 tmpvar_1;\\n  tmpvar_1 = max (texture (sampler_fc_main, uv).xyz, (texture (sampler_fc_main, mix (uv, uv_orig, vec2(0.33, 0.33))).xyz * 0.95));\\n  vec2 x_2;\\n  x_2 = (uv - uv_orig);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = (((\\n    mix (tmpvar_1, (floor((\\n      (tmpvar_1 * vec3(7.0, 6.0, 8.0))\\n     + 0.25)) / vec3(7.0, 6.0, 8.0)), vec3(0.1, 0.1, 0.1))\\n   * 0.99) - 0.0025) - ((1.0 - \\n    clamp ((sqrt(dot (x_2, x_2)) * 40.0), 0.0, 1.0)\\n  ) * 0.003));\\n  ret = tmpvar_3.xyz;\\n }","comp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1.x = cos((13.5 * uv.y));\\n  tmpvar_1.y = sin((19.5 * uv.x));\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = max (texture (sampler_main, uv).xyz, texture (sampler_main, (uv + (0.06 * tmpvar_1))).xyz);\\n  ret = tmpvar_2.xyz;\\n }"}')},7050:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":2.001,"decay":0.99,"echo_zoom":0.9996,"wave_mode":1,"wave_a":3.072644,"wave_scale":1.285746,"wave_smoothing":0,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.999513,"warp":0.0101,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.005,"ob_a":0.8,"ib_size":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.5*sin(time*1.13);\\nwave_g = wave_g + 0.5*sin(time*1.23);\\nwave_b = wave_b + 0.5*sin(time*1.33);","pixel_eqs_eel":"zoom = zoom + 0.05*(sin(6*ang) + sin(sin(time*2*sin(time)*rad))*0.3 - cos(rad)*0.1);\\nrot = rot + 0.5*sin(0.5-rad)*cos(0.02*(0.5-rad)+time);\\nsx = sx + 0.01*(0.99*1-rad)*sin(0.733*time)*below(sin(time),0);\\nsy = sy + 0.01*(0.99*1-rad)*cos(0.953*time)*above(sin(time),0);\\nzoom = zoom - 0.05*(1-rad)*below(rad,0.5);","warp":"","comp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1.x = cos((uv.x * 37.0));\\n  tmpvar_1.y = sin((uv.y * 29.0));\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = max (texture (sampler_main, uv).xyz, texture (sampler_main, (uv + (0.045 * tmpvar_1))).xyz);\\n  ret = tmpvar_2.xyz;\\n }"}')},6075:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":5,"gammaadj":1.504,"decay":0.9,"echo_zoom":0.999592,"echo_alpha":0.5,"echo_orient":3,"wave_a":100,"wave_scale":0.311604,"wave_smoothing":0.45,"wave_mystery":-0.5,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":0.01,"warpscale":0.438651,"zoomexp":0.999994,"zoom":1.000156,"warp":0.01,"sx":0.990099,"sy":0.990099,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.1,"ob_g":0.6,"ob_b":0.5,"ob_a":0.1,"ib_size":0.05,"ib_r":0,"ib_g":1,"ib_b":1,"ib_a":0.1,"mv_x":12.799995,"mv_l":5,"mv_a":0},"shapes":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.5*sin(1.2*frame) + 0.3*sin(1.9*frame);\\nwave_g = wave_g + 0.7*sin(1.1*frame) + 0.4*cos(1.6*frame);\\nwave_b = wave_b + 0.2*sin(1.3*frame) + 0.4*sin(2*frame);","pixel_eqs_eel":"rot=rot + (0.5 + 0.1*sin(bass)-rad)*pow(bass,3)/50;\\nzoom= zoom + (0.5 + 0.3*tan(3*bass_att)-rad)*(cos(pow(rad,2.4))+(0.2*mid_att));\\nwarp = warp + if (above(bass,1.34), 0.5*(0.5+ 0.1*sin(bass)-rad)*(cos(pow(rad,2.4))+(5*bass_att)), 0);","warp":"","comp":""}')},4001:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":5,"gammaadj":1.399,"decay":1,"echo_zoom":1.488267,"echo_alpha":0.3,"wave_mode":5,"wrap":0,"darken":1,"wave_a":0.690724,"wave_scale":4.778029,"wave_smoothing":0,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"fshader":1,"zoom":0.999513,"warp":0.0101,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.005,"ob_a":0.1,"ib_size":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.5*sin(time*1.13);\\nwave_g = wave_g + 0.5*sin(time*1.23);\\nwave_b = wave_b + 0.5*sin(time*1.33);\\n\\nwave_x = wave_x + 0.2*sin(0.32*time);\\nwave_y = wave_y + 0.2*cos(0.32*time);\\n\\nob_r = wave_r;\\nob_g = wave_g;\\nob_b = wave_b;","pixel_eqs_eel":"thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\\ndx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;\\ndy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;\\nzoom = zoom + 0.0095*(sin(10*ang) + sin(sin(time*2*sin(time)*rad))*0.3 - cos(rad)*0.1);\\nrot = rot + 0.08*abs(0.746-rad)*sin(2.2*(0.5-rad)+5.7*sin(0.1*time));\\nsx = sx + 0.01*(0.99*1-rad)*sin(0.733*time)*below(sin(time),0);\\nsy = sy + 0.01*(0.99*1-rad)*cos(0.953*time)*above(sin(time),0);\\nzoom = zoom - 0.015*(0.5*abs(3)-rad)*below(rad,1.5);","warp":"","comp":""}')},2998:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":2,"gammaadj":1.35,"decay":1,"echo_zoom":0.999599,"echo_alpha":0.5,"echo_orient":1,"wave_mode":5,"wrap":0,"darken":1,"wave_a":0.690724,"wave_scale":4.778029,"wave_smoothing":0,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"fshader":1,"zoom":0.999513,"warp":0.0101,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.005,"ob_a":0.1,"ib_size":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.5*sin(time*1.13);\\nwave_g = wave_g + 0.5*sin(time*1.23);\\nwave_b = wave_b + 0.5*sin(time*1.33);\\n\\nwave_x = wave_x + 0.2*sin(0.32*time);\\nwave_y = wave_y + 0.2*cos(0.32*time);\\n\\nob_r = wave_r;\\nob_g = wave_g;\\nob_b = wave_b;","pixel_eqs_eel":"thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\\ndx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;\\ndy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;\\nzoom = zoom + 0.0095*(sin(24*ang) + sin(sin(time*2*sin(time)*rad))*0.3 - cos(rad)*0.5)\\n*above(sin(time),0);\\nzoom = zoom + 0.0095*(sin(6*ang) + sin(sin(time*2*sin(time)*rad))*0.3 - cos(rad)*0.1)\\n*below(sin(time),0);\\nrot = rot + 0.08*abs(0.746-rad)*sin(2.2*(0.5-rad)+5.7*sin(0.1*time));\\nsx = sx + 0.01*(0.99*1-rad)*sin(0.733*time)*below(sin(time),0);\\nsy = sy + 0.01*(0.99*1-rad)*cos(0.953*time)*above(sin(time),0);\\nzoom = zoom - 0.015*(0.5*abs(3)-rad)*below(rad,1.5);","warp":"","comp":""}')},2339:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":5,"gammaadj":1,"decay":0.99,"echo_zoom":0.741918,"additivewave":1,"wave_dots":1,"wave_brighten":0,"wave_a":100,"wave_scale":3.072694,"wave_smoothing":0,"wave_mystery":-0.5,"modwavealphastart":0.5,"modwavealphaend":1,"zoomexp":2.781671,"fshader":1,"dx":0.00001,"dy":0.00001,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_a":1,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":0,"mv_y":0,"mv_l":1,"mv_a":0},"shapes":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.25*sin(1.4*time) + 0.25*sin(2.25*time);\\nwave_g = wave_g + 0.25*sin(1.7*time) + 0.25*sin(2.11*time);\\nwave_b = wave_b + 0.25*sin(1.84*time) + 0.25*sin(2.3*time);\\nwarp = 0;\\nob_r = 0.3 + 0.3*sin(1.56*time);\\nob_g = 0.3 + 0.3*sin(2.15*time);\\nob_b = 0.3 + 0.3*cos(1.4*time);\\ning = 2*sin(0.25*time);\\nwave_x = wave_x + 0.0257*sin(time);\\nwave_y = wave_y + 0.0257*cos(time);","pixel_eqs_eel":"thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\\ndx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;\\ndy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;\\n\\nrot = rot + above(bass,1)*0.25*(1-rad)*(100*dx_r);\\nzoom = zoom + 0.2*(0.5-rad);\\ncx = cx + above(bass,1)*0.25*sin(time)*(100*dy_r);\\ncy = cy + above(mid,1)*0.25*cos(time)*(100*dy_r);\\ndy = dy - dy_r;\\ndx = dx - dx_r;","warp":"","comp":""}')},275:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":0.999996,"echo_orient":2,"wave_mode":1,"wave_dots":1,"wave_thick":1,"wave_a":100,"wave_scale":3.749269,"wave_smoothing":0,"wave_mystery":-0.4,"modwavealphastart":0.5,"modwavealphaend":1,"zoomexp":11.202057,"fshader":1,"dx":0.00001,"dy":0.00001,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_a":0.1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":0.2,"mv_x":0,"mv_y":0,"mv_l":1,"mv_a":0},"shapes":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.25*sin(1.4*time) + 0.25*sin(2.25*time);\\nwave_g = wave_g + 0.25*sin(1.7*time) + 0.25*sin(2.11*time);\\nwave_b = wave_b + 0.25*sin(1.84*time) + 0.25*sin(2.3*time);\\nwarp = 0;\\nob_r = 0.3 + 0.3*sin(1.56*time);\\nob_g = 0.3 + 0.3*sin(2.15*time);\\nob_b = 0.3 + 0.3*cos(1.4*time);\\nib_r = 0.3 + 0.3*cos(1.83*time);\\nib_g = 0.3 + 0.3*cos(1.02*time);\\nib_b = 0.3 + 0.3*sin(2*time);\\ning = 2*sin(0.25*time);\\nwave_x = wave_x + 0.7*sin(time);\\nwave_y = wave_y + 0.7*cos(time);","pixel_eqs_eel":"thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\\ndx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;\\ndy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;\\n\\nrot = rot + 0.15*(1-rad)*(5*sin(time));\\nzoom = zoom - 0.1*(0.9-rad);\\ncx = cx + 1*0.25*sin(time)*(0.75*sin(time));\\ncy = cy + 1*0.25*cos(time)*(0.75*cos(time));","warp":"","comp":""}')},7059:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":0,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":1,"wave_mode":5,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":100,"wave_scale":0.653092,"wave_smoothing":0.5,"modwavealphastart":0.5,"modwavealphaend":1,"dx":0.00001,"dy":0.00001,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.005,"ob_a":0.2,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":0,"mv_y":0,"mv_l":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = 0.5 + 0.5*sin(6*time);\\nwave_g = 0.5 + 0.5*sin(4.1*time);\\nwave_b = -1 + (1-wave_r + 1-wave_g);\\nwarp = 0;\\nwave_x = wave_x + 0.1*cos(1.2*time)*sin(1.1*time)+0.1*sin(0.61*time);\\nwave_y = wave_y + 0.1*sin(1.2*time)*cos(4.1*time)+0.11*cos(1.1*time);\\n\\nob_r = 1-abs(wave_r);\\nob_b = 1-abs(wave_b);\\nob_g = 1-abs(wave_g);\\n\\npfthresh = above(bass_att,pfthresh)*2+(1-above(bass_att,pfthresh))*((pfthresh-1.3)*0.96+1.3);\\npfdx_r = equal(pfthresh,2)*0.015*sin(5*time)+(1-equal(pfthresh,2))*pfdx_r;\\npfdy_r = equal(pfthresh,2)*0.015*sin(6*time)+(1-equal(pfthresh,2))*pfdy_r;\\nrg1 = abs(sin(time));\\nrg2 = 0*above(rg1,0.75) + 3*below(rg1,0.25) + 1*above(rg1,0.25)*below(rg1,0.5)+\\n2*above(rg1,0.5)*below(rg1,0.75);\\nrg3 = if(equal(pfthresh,2),rg2,rg3);\\n\\necho_orient = rg3;","pixel_eqs_eel":"thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\\ndx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;\\ndy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;\\n\\nxbar = above(sin(dx_r*2*time),0)*abs(4-x*tan(4*cos(y*time))) +\\nbelow(sin(dx_r*2*time),0)*sin(3*x*sin(3*cos(dx_r*y*time)));\\nybar = above(cos(dy_r*1.2*time),0)*abs(4-y*tan(4*cos(x*time))) +\\nbelow(cos(dy_r*1.2*time),0)*sin(3*y*sin(3*cos(dy_r*x*time)));\\n\\ndx = dx + dx_r*cos(1.6*xbar);\\ndy = dy + dy_r*cos(1.6*ybar);\\nzoom = zoom - 0.01*(3*(xbar/ybar));\\nrot = rot + 0.01*(2*(ybar+xbar))*cos(1.52*time);\\ncx = cx + xbar*2*dx_r;\\ncy = cy + ybar*2*dy_r;","warp":"","comp":""}')},4301:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":1,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_orient":1,"wave_mode":5,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":0.721422,"wave_smoothing":0.5,"modwavealphastart":0.5,"modwavealphaend":1,"dx":0.00001,"dy":0.00001,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.005,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":0,"mv_y":0,"mv_l":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"thickoutline":1,"textured":1,"rad":0.449737,"tex_zoom":1.07409,"g":1,"b":1,"r2":1,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"//r = q2;\\n//g = q1;\\n//b = q3;\\nr2 = q3;\\nb2 = 1-abs(q1);\\ng2 = 1-abs(q3);"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = 0.5 + 0.5*sin(6*time);\\nwave_g = 0.5 + 0.5*sin(4.1*time);\\nwave_b = -1 + (1-wave_r + 1-wave_g);\\nwarp = 0;\\n\\nob_r = 1-abs(wave_r);\\nob_g = 1-abs(wave_g);\\nob_b = 1-abs(wave_b);\\nq1 = wave_r;\\nq2 = wave_g;\\nq3 = wave_b;","pixel_eqs_eel":"thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\\ndx_r = equal(thresh,2)*0.15*sin(5*time)+(1-equal(thresh,2))*dx_r;\\ndy_r = equal(thresh,2)*0.15*sin(6*time)+(1-equal(thresh,2))*dy_r;\\n\\n\\ndy = dy - abs(dy_r*rad*sin(sin(12*rad))*sin(time)*cos(1.62*time));\\ndx = dx + abs(dx_r*rad*sin(sin(12*rad))*cos(1.21*time)*sin(1.02*time));\\ndy = dy + abs(dx_r*rad*sin(sin(12*rad))*cos(1.01*time)*sin(2.12*time));\\ndx = dx - abs(dy_r*rad*sin(sin(12*rad))*sin(1.52*time)*cos(0.62*time));","warp":"","comp":""}')},6724:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":0,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":1,"wave_brighten":0,"wrap":0,"darken_center":1,"wave_a":100,"wave_scale":1.48862,"wave_smoothing":0,"modwavealphastart":0.5,"modwavealphaend":1,"warpanimspeed":0.01,"warpscale":0.01,"fshader":1,"dx":0.00001,"dy":0.00001,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.2,"ob_r":0.9,"ob_g":0.9,"ob_b":0.9,"ob_a":0.5,"ib_size":0.05,"ib_r":0.9,"ib_g":0.9,"ib_b":0.9,"ib_a":0.5,"mv_x":1.28,"mv_y":9.599999,"mv_dx":0.4,"mv_dy":-0.2,"mv_l":5,"mv_a":0},"shapes":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.25*sin(1.4*time) + 0.25*sin(2.25*time);\\nwave_g = wave_g + 0.25*sin(1.7*time) + 0.25*sin(2.11*time);\\nwave_b = wave_b + 0.25*sin(1.84*time) + 0.25*sin(2.3*time);\\nwarp = 0.00;\\nib_r = wave_b;\\nib_g = wave_r;\\nib_b = wave_g;\\nob_r = wave_r * sin(wave_b);\\nob_g = wave_g *sin(wave_r);\\nob_b = wave_b * sin(wave_g);\\nzoom = zoom - 0.05;","pixel_eqs_eel":"thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\\ndx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;\\ndy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;\\nrot = rot + rad*(1.1*sin(time)-rad)*1.25;\\nrot = rot + above(rad,0.7 - 0.2*sin(bass))*0.1;\\nzoom = zoom - above(rad,0.5+ 0.1*sin(1-rad*cos(time)))*below((0.5*sin(time))-rad,0.5)*0.09*rad;\\nzoom = zoom + below(rad,0.75 + 0.5*sin(bass*time))*0.025;\\nzoom = zoom - 0.02*((sin(time)-rad)*1-rad);\\nzoom = zoom + 0.03*(0.10+(1+rad))*below(rad,0.1)*above(bass,1);","warp":"","comp":""}')},3900:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1,"decay":0.97,"echo_zoom":1.05,"echo_alpha":0.2,"wave_mode":1,"wave_brighten":0,"wave_a":100,"wave_scale":0.8,"wave_smoothing":0,"wave_mystery":-0.4,"modwavealphastart":0.5,"modwavealphaend":1,"warpscale":100,"zoomexp":0.0228,"dx":0.00001,"dy":0.00001,"warp":0.01,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0,"ob_a":1,"ib_size":0.25,"mv_x":0,"mv_y":0,"mv_l":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_b = wave_b + 0.7*sin(bass);\\nwave_r = wave_r - 0.8*sin(treb);\\nwave_g = wave_g +0.8*sin(mid);\\nzoom = zoom + 0.008;\\nob_size = ob_size + 0.00*sin(8900*time);\\nzoomexp = zoomexp + if (above(bass,1), 0.025, 0.099);\\nrot = rot + if (above(bass,1), +0.01, -0.01);\\nwarp = warp + if(above(treb,1), +0.5, -0.5);\\ndy = dy + if(above(mid,1.5), +0.01, -0.0025);","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = (((\\n    ((texture (sampler_blur2, (uv + vec2(0.01, 0.0))).xyz * scale2) + bias2)\\n   - \\n    ((texture (sampler_blur2, (uv - vec2(0.01, 0.0))).xyz * scale2) + bias2)\\n  ).y * 1280.0) * texsize.z);\\n  tmpvar_2.y = (((\\n    ((texture (sampler_blur2, (uv + vec2(0.0, 0.01))).xyz * scale2) + bias2)\\n   - \\n    ((texture (sampler_blur2, (uv - vec2(0.0, 0.01))).xyz * scale2) + bias2)\\n  ).y * 1024.0) * texsize.w);\\n  ret_1.y = texture (sampler_fw_main, (uv + (tmpvar_2 * 0.005))).y;\\n  ret_1 = (ret_1 + ((\\n    (ret_1 - ((texture (sampler_blur3, uv).xyz * scale3) + bias3))\\n   * 0.3) - 0.05));\\n  ret_1 = (ret_1 + ((texture (sampler_noise_lq, \\n    (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 0.25)) + rand_frame.xy)\\n  ).xyz - 0.5) * 0.1));\\n  ret_1 = mix (ret_1, vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))), vec3(0.2, 0.2, 0.2));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_1;\\n  ret = tmpvar_3.xyz;\\n }","comp":""}')},1330:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":5,"gammaadj":1.42,"decay":1,"echo_zoom":0.999823,"echo_alpha":0.5,"echo_orient":1,"wave_mode":5,"wave_thick":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":0.001185,"wave_scale":0.325446,"wave_smoothing":0.9,"modwavealphastart":0.5,"modwavealphaend":1,"warpanimspeed":2.630064,"warpscale":3.209168,"zoomexp":1.000158,"dx":0.00001,"dy":0.00001,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.005,"ob_a":0.5,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":0.1,"mv_x":6.4,"mv_y":4.8,"mv_l":5,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = 0.5 + 0.5*sin(1.6*time);\\nwave_g = 0.5 + 0.5*sin(4.1*time);\\nwave_b = -1 + (1-wave_r + 1-wave_g);\\nwarp = 2;\\n\\nob_r = ob_r+wave_b*above(sin(0.1*time),0);\\nob_b = ob_b+wave_g*above(sin(0.1*time),0);\\nob_g = ob_g+wave_r*above(sin(0.1*time),0);\\nob_r = ob_r+wave_g*below(sin(0.1*time),0);\\nob_b = ob_b+wave_r*below(sin(0.1*time),0);\\nob_g = ob_g+wave_b*below(sin(0.1*time),0);","pixel_eqs_eel":"thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\\ndx_r = equal(thresh,2)*0.05*sin(5*time)+(1-equal(thresh,2))*dx_r;\\ndy_r = equal(thresh,2)*0.056*sin(6*time)+(1-equal(thresh,2))*dy_r;\\ntg1 = abs(sin(time));\\ntg2 = 22*above(tg1,0.75) + 12*below(tg1,0.25) + 18*above(tg1,0.25)*below(tg1,0.5)+\\n12*above(tg1,0.5)*below(tg1,0.75);\\ntg3 = if(equal(thresh,2),tg2,tg3);\\n\\nsix = sin(x);\\n\\ndx = dx + dx_r*sin(abs(tg3*y))*sin(time);\\ndy = dy + dy_r*sin(abs(tg3*x))*cos(time);\\ndx = dx + dx_r*pow(rad,y*2)*sin(time);\\ndy = dy + dy_r*pow(rad,x*2)*sin(time);\\nzoom = zoom - 0.0825*pow(rad,x*6)*cos(ang*6);\\nrot = rot - 0.0525*(0.75*sin(1.25*time)*pow(rad,x)*sin(1.45*time))*sin(time);","warp":"","comp":""}')},4386:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":0,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_alpha":1,"echo_orient":1,"wave_mode":5,"wave_brighten":0,"wave_a":0.001,"wave_scale":1.447722,"wave_smoothing":0.5,"modwavealphastart":0.5,"modwavealphaend":1,"fshader":1,"dx":0.00001,"dy":0.00001,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.015,"ob_a":1,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":0,"mv_y":0,"mv_l":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"leafset = 3;","frame_eqs_eel":"wave_r = 0.5 + 0.5*sin(1.6*time);\\nwave_g = 0.5 + 0.5*sin(4.1*time);\\nwave_b = -1 + (1-wave_r + 1-wave_g);\\nwarp = 0;\\npfthresh = above(bass_att,pfthresh)*3+(1-above(bass_att,pfthresh))*((pfthresh-1.3)*0.96+1.3);\\npfdx_r = equal(pfthresh,3)*0.015*sin(5*time)+(1-equal(pfthresh,3))*pfdx_r;\\npfdy_r = equal(pfthresh,3)*0.015*sin(6*time)+(1-equal(pfthresh,3))*pfdy_r;\\nq1 = wave_r;\\nq2 = wave_g;\\nq3 = wave_b;\\n\\nob_r = 1-abs(q1)*0.75;\\nob_g = 1-abs(q2)*0.75;\\nob_b = 1-abs(q3)*0.75;\\necho_zoom = echo_zoom + min(max(0.75,50*pfdx_r),1);\\n\\necho_orient = echo_orient + 16*pfdy_r;\\n\\ndx = dx + 15.1*pfdx_r;\\ndy = dy + 15.1*pfdy_r;\\nob_size = ob_size + 0.005*bass_att;\\nib_a = ib_a - min(0.5,0.5-abs(dx+dy));","pixel_eqs_eel":"thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\\ndx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;\\ndy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;\\n\\nladder = abs(sin(1*time));\\nleaf = 5*below(ladder,0.2) + 8*above(ladder,0.2)*below(ladder,0.4) +\\n12*above(ladder,0.4)*below(ladder,0.6) + 18*above(ladder,0.6)*below(ladder,0.8) +\\n24*above(ladder,0.8);\\nleafset = if(equal(thresh,2), leaf, leafset);\\n\\nzoom = zoom + 0.05*(0.75-cos(leafset*rad))*(1-rad);\\nzoom = zoom - abs(0.05*(0.75-cos(4*rad)));","warp":"","comp":""}')},720:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1,"decay":0.97,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":2,"wave_brighten":0,"wrap":0,"wave_a":100,"wave_scale":0.797,"wave_smoothing":0.5,"modwavealphastart":0.5,"modwavealphaend":1,"dx":0.00001,"dy":0.00001,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.005,"ob_a":1,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":0.1,"mv_x":0,"mv_y":0,"mv_l":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"warp = 0;\\n\\nob_r = ob_r + 0.8*sin(1.1*time) + 1.1*cos(2*time);\\nob_b = ob_b + 0.9*sin(1.2*time) + cos(1.5*time);\\nob_g = ob_g + 0.7*sin(time) + sin(0.4*time);\\nwave_r = abs(ob_r+0.2);\\nwave_g = abs(ob_g+0.2);\\nwave_b = abs(ob_b+0.2);\\nib_b = ib_b + 0.44*cos(1.5*time) + 0.7*tan(time);\\nib_g = ib_g + 2*sin(time*bass_att);\\nib_r = ib_r + 0.8*sin(1.2*time) + 1.3*cos(1.8*time);","pixel_eqs_eel":"thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\\ndx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;\\ndy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;\\nzoom = zoom + 0.07*treb*(abs(sin(time*rad)))*(0.3-rad);\\ndy = dy + dy_r*below(rad,0.5 - (0.2*time));\\ndx = dx + dx_r*below(rad,0.5 - (0.2*time));\\nrot = rot + (0.7*bass_att*sin(abs(dx_r*(1-rad)*2*time+cos(rad*12))))*0.2;","warp":" shader_body { \\n  vec3 ret_1;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv);\\n  ret_1 = (tmpvar_2.xyz + ((tmpvar_2.xyz - \\n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\\n  ) * 0.3));\\n  ret_1 = (ret_1 * 0.9);\\n  ret_1 = (ret_1 + ((\\n    (texture (sampler_noise_lq, ((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 0.1))).xyz - 0.5)\\n   / 256.0) * 28.0));\\n  vec3 tmpvar_3;\\n  tmpvar_3 = mix (ret_1, vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))), vec3(0.04, 0.04, 0.04));\\n  ret_1 = tmpvar_3;\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = tmpvar_3;\\n  ret = tmpvar_4.xyz;\\n }","comp":""}')},4355:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.95,"echo_zoom":1,"echo_alpha":0.5,"wave_mode":5,"wave_brighten":0,"wave_a":100,"wave_scale":5.83,"wave_smoothing":0.5,"modwavealphastart":0.5,"modwavealphaend":1,"dx":0.00001,"dy":0.00001,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.005,"ob_a":1,"ib_size":0.005,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":0,"mv_y":0,"mv_l":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = 0.5 + 0.5*sin(6*time);\\nwave_g = 0.5 + 0.5*sin(4.1*time);\\nwave_b = -1 + (1-wave_r + 1-wave_g);\\nwarp = 0;\\n\\nob_r = 1-abs(wave_r);\\nob_g = 1-abs(wave_g);\\nob_b = 1-abs(wave_b);\\nib_g = 1-abs(wava_r);\\nib_b = 1-abs(wave_g);\\nib_r = 1-abs(wave_b);","pixel_eqs_eel":"thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\\ndx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;\\ndy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;\\n\\n\\ndx = dx + 12*dx_r*abs(0.1*tan((1.03*time)-rad))*(1-rad);\\ndy = dy + 12*dy_r*abs(0.1*tan((1.03*time)-rad))*(1-rad);\\n\\nzoom = zoom - 12*dx_r*abs(0.1*tan((1.12*time)-rad));\\nrot = rot +  12*dy_r*(0.1*tan((1.4*time)-rad));","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (texture (sampler_main, (uv + (\\n    (texture (sampler_main, (uv + texsize.zw)).xy - 0.37)\\n   * 0.03))).xyz - 0.004);\\n  ret = tmpvar_1.xyz;\\n }","comp":""}')},5539:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":4,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"additivewave":1,"modwavealphabyvolume":1,"wave_a":0.009,"wave_scale":2.713,"wave_smoothing":0,"modwavealphastart":1.2,"modwavealphaend":1.2,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.44,"wave_g":0.4,"ob_size":0.015,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":3,"additive":1,"num_inst":175,"rad":0.20065,"ang":0.75398,"tex_ang":3.14159,"tex_zoom":0.99979,"r":0,"g2":0,"border_r":0.01,"border_g":0,"border_a":1},"init_eqs_eel":"","frame_eqs_eel":"//lorenz-attractor calc\\nxx1 = if(equal(instance,0),q11,xx1);\\nyy1 = if(equal(instance,0),q12,yy1);\\nzz1 = if(equal(instance,0),q13,zz1);\\n\\ndx1 = q14*(yy1-xx1);\\ndy1 = xx1*(q15-zz1)-yy1;\\ndz1 = xx1*yy1-q16*zz1;\\ndd = sqrt(dx1*dx1+dy1*dy1+dz1*dz1);\\nxx1 = xx1 + q17*dx1/dd;\\nyy1 = yy1 + q17*dy1/dd;\\nzz1 = zz1 + q17*dz1/dd;\\n\\n\\n// 3D object model coordinates\\nmy_x = xx1*0.1;\\nmy_y = yy1*0.1;\\nmy_z = zz1*0.1 - 3;\\n\\n\\nd = 4.75; // camera distance\\nzoom = .55+0.25*sin(.5*q32);\\n\\n// solid angles\\nw1 = q3;\\nw2 = q4;\\nw3 = q5;\\n\\n// 3D rotation\\nx1 = cos(w1)*my_x + sin(w1)*my_y;\\ny1 = -sin(w1)*my_x + cos(w1)*my_y;\\nz1 = my_z;\\n\\nx2 = cos(w2)*x1 + sin(w2)*z1;\\nz2 = -sin(w2)*x1 + cos(w2)*z1;\\ny2 = y1;\\n\\ny3 = cos(w3)*y2 + sin(w3)*z2;\\nz3 = -sin(w3)*y2 + cos(w3)*z2;\\nx3 = x2;\\n\\n// perspective calculation\\n\\nl = sqrt(x3*x3 + y3*y3);\\nw = atan2(x3,y3);\\np = tan(asin(1) + atan2(d+z3,l));\\nd = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));\\n\\nmy_x = zoom*sin(w)*p;\\nmy_y = zoom*cos(w)*p;\\n\\nx = 0.5 + my_x;\\ny = 0.5 + my_y;\\n\\nrad = rad/d;\\nang = ang-instance/num_inst*asin(1)*8;"},{"baseVals":{"sides":12,"additive":1,"num_inst":512,"y":0.55,"rad":0.0986,"tex_zoom":0.7874,"r":0.2,"g":0.03,"b":0.55,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"started = 0;\\nt1 = 0.412; //seeds for pseudo random generator\\nt2 = 0.4563;\\nt3 = 0.6452;\\nt4 = 0.2565;","frame_eqs_eel":"rnd1 = if(equal(instance,0),t1,rnd1);\\nrnd2 = if(equal(instance,0),t2,rnd2);\\nrnd3 = if(equal(instance,0),t3,rnd3);\\nrnd4 = if(equal(instance,0),t4,rnd4);\\nrnd1 = 4*rnd1*(1-rnd1);\\nrnd2 = 4*rnd2*(1-rnd2);\\nrnd3 = 4*rnd3*(1-rnd3);\\nrnd4 = 4*rnd4*(1-rnd4);\\nt = .6;\\nt =  (rnd1+time*t) - int(rnd1+time*t);\\nt = t + rnd2*0.1;\\nwh = rnd4*asin(1)*4;\\nwv = 0.25 + rnd3*0.1;\\n\\nd = 6; // makes the perspective impact\\nzoom = 1;\\nl = 1;\\n\\n// Kardan angles\\n\\nw1 = q3; // first rotation: clockwise in the desktop pane\\nw2 = q4; // rotation around vertical axis\\nw3 = q5; // rotation around horizontal axis\\n\\n\\n// definition of the 3D shape\\n\\ni = instance;\\n\\nmy_x = t *(cos(wh)*sin(wv)*l)*2;\\nmy_z = -(-0.5 +(t-0.75)*(t-0.75))*cos(wv)*l*2;\\nmy_y = t*(sin(wh)*sin(wv)*l)*2;\\n\\n\\n\\n// 3D rotations\\n\\nx1 = cos(w1)*my_x + sin(w1)*my_y;\\ny1 = -sin(w1)*my_x + cos(w1)*my_y;\\nz1 = my_z;\\n\\nx2 = cos(w2)*x1 + sin(w2)*z1;\\nz2 = -sin(w2)*x1 + cos(w2)*z1;\\ny2 = y1;\\n\\ny3 = cos(w3)*y2 + sin(w3)*z2;\\nz3 = -sin(w3)*y2 + cos(w3)*z2;\\nx3 = x2;\\n\\n// perspective calculation\\n\\np = tan(asin(1) + atan2(d+z3,sqrt(x3*x3 + y3*y3)));\\nd = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));\\n\\nrad = rad/d;\\nmy_x = zoom*sin(atan2(x3,y3))*p;\\nmy_y = zoom*cos(atan2(x3,y3))*p;\\n\\nx = 0.5 + my_x;\\ny = 0.5 + my_y;\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;"},{"baseVals":{"sides":12,"additive":1,"num_inst":512,"y":0.55,"rad":0.2667,"tex_zoom":0.7874,"r":0,"g":0.1,"b":0.55,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"started = 0;\\nt1 = 0.412; //seeds for pseudo random generator\\nt2 = 0.4563;\\nt3 = 0.6452;\\nt4 = 0.2565;","frame_eqs_eel":"rnd1 = if(equal(instance,0),t1,rnd1);\\nrnd2 = if(equal(instance,0),t2,rnd2);\\nrnd3 = if(equal(instance,0),t3,rnd3);\\nrnd4 = if(equal(instance,0),t4,rnd4);\\nrnd1 = 4*rnd1*(1-rnd1);\\nrnd2 = 4*rnd2*(1-rnd2);\\nrnd3 = 4*rnd3*(1-rnd3);\\nrnd4 = 4*rnd4*(1-rnd4);\\nt = .6;\\nt =  (rnd1+time*t) - int(rnd1+time*t);\\nt = t + rnd2*0.1;\\nwh = rnd4*asin(1)*4;\\nwv = 0.25 + rnd3*0.1;\\n\\nd = 6; // makes the perspective impact\\nzoom = 1;\\nl = 1;\\n\\n// Kardan angles\\n\\nw1 = q3; // first rotation: clockwise in the desktop pane\\nw2 = q4; // rotation around vertical axis\\nw3 = q5; // rotation around horizontal axis\\n\\n\\n// definition of the 3D shape\\n\\ni = instance;\\n\\nmy_x = t *(cos(wh)*sin(wv)*l)*4;\\nmy_z = (-0.5 +(t-0.75)*(t-0.75))*cos(wv)*l*4;\\nmy_y = t*(sin(wh)*sin(wv)*l)*4;\\n\\n\\n// 3D rotations\\n\\nx1 = cos(w1)*my_x + sin(w1)*my_y;\\ny1 = -sin(w1)*my_x + cos(w1)*my_y;\\nz1 = my_z;\\n\\nx2 = cos(w2)*x1 + sin(w2)*z1;\\nz2 = -sin(w2)*x1 + cos(w2)*z1;\\ny2 = y1;\\n\\ny3 = cos(w3)*y2 + sin(w3)*z2;\\nz3 = -sin(w3)*y2 + cos(w3)*z2;\\nx3 = x2;\\n\\n// perspective calculation\\n\\np = tan(asin(1) + atan2(d+z3,sqrt(x3*x3 + y3*y3)));\\nd = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));\\n\\nrad = rad/d;\\nmy_x = zoom*sin(atan2(x3,y3))*p;\\nmy_y = zoom*cos(atan2(x3,y3))*p;\\n\\nx = 0.5 + my_x;\\ny = 0.5 + my_y;\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;"},{"baseVals":{"sides":12,"additive":1,"num_inst":512,"y":0.55,"rad":0.05012,"tex_zoom":0.7874,"r":0,"g":0.02,"b":0.11,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"started = 0;\\nt1 = 0.412; //seeds for pseudo random generator\\nt2 = 0.4563;\\nt3 = 0.6452;\\nt4 = 0.2565;","frame_eqs_eel":"rnd1 = if(equal(instance,0),t1,rnd1);\\nrnd2 = if(equal(instance,0),t2,rnd2);\\nrnd3 = if(equal(instance,0),t3,rnd3);\\nrnd4 = if(equal(instance,0),t4,rnd4);\\nrnd1 = 4*rnd1*(1-rnd1);\\nrnd2 = 4*rnd2*(1-rnd2);\\nrnd3 = 4*rnd3*(1-rnd3);\\nrnd4 = 4*rnd4*(1-rnd4);\\nt = .6;\\nt =  (rnd1+time*t) - int(rnd1+time*t);\\nt = t + rnd2*0.1;\\nwh = rnd4*asin(1)*4;\\nwv = 0.25 + rnd3*0.1;\\n\\nd = 1.4; // makes the perspective impact\\nzoom = 1;\\nl = 1;\\n\\n// Kardan angles\\n\\nw1 = q3; // first rotation: clockwise in the desktop pane\\nw2 = q4; // rotation around vertical axis\\nw3 = q5; // rotation around horizontal axis\\n\\n\\n// definition of the 3D shape\\n\\ni = instance;\\n\\nmy_x = t *(cos(wh)*sin(wv)*l);\\nmy_y = (-0.5 +(t-0.75)*(t-0.75))*cos(wv)*l;\\nmy_z = t*(sin(wh)*sin(wv)*l);\\n\\n\\n// 3D rotations\\n\\nx1 = cos(w1)*my_x + sin(w1)*my_y;\\ny1 = -sin(w1)*my_x + cos(w1)*my_y;\\nz1 = my_z;\\n\\nx2 = cos(w2)*x1 + sin(w2)*z1;\\nz2 = -sin(w2)*x1 + cos(w2)*z1;\\ny2 = y1;\\n\\ny3 = cos(w3)*y2 + sin(w3)*z2;\\nz3 = -sin(w3)*y2 + cos(w3)*z2;\\nx3 = x2;\\n\\n// perspective calculation\\n\\np = tan(asin(1) + atan2(d+z3,sqrt(x3*x3 + y3*y3)));\\nd = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));\\n\\nrad = rad/d;\\nmy_x = zoom*sin(atan2(x3,y3))*p;\\nmy_y = zoom*cos(atan2(x3,y3))*p;\\n\\nx = 0.5 + my_x;\\ny = 0.5 + my_y;\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;"}],"waves":[{"baseVals":{"samples":495,"sep":4,"spectrum":1,"thick":1,"additive":1,"scaling":100,"smoothing":1,"a":0.21,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\nab = 1;","frame_eqs_eel":"","point_eqs_eel":"// lorenz-attractor calc\\nxx1 = if(equal(sample,0),q11,xx1);\\nyy1 = if(equal(sample,0),q12,yy1);\\nzz1 = if(equal(sample,0),q13,zz1);\\ndx1 = q14*(yy1-xx1);\\ndy1 = xx1*(q15-zz1)-yy1;\\ndz1 = xx1*yy1-q16*zz1;\\nxx1 = xx1 + q17*dx1;\\nyy1 = yy1 + q17*dy1;\\nzz1 = zz1 + q17*dz1;\\n\\n// 3D model coordinates\\nmy_x = xx1*0.1;\\nmy_y = yy1*0.1;\\nmy_z = zz1*0.1 - 3;\\n\\n\\nd = 5; // distance of the camera (on the z-axis) to the origin\\nzoom = 0.4;\\n\\n// solid angles\\nw1 = q2;\\nw2 = q3;\\nw3 = q4;\\n\\n// rotations\\nx1 = cos(w1)*my_x + sin(w1)*my_y;\\ny1 = -sin(w1)*my_x + cos(w1)*my_y;\\nz1 = my_z;\\n\\nx2 = cos(w2)*x1 + sin(w2)*z1;\\nz2 = -sin(w2)*x1 + cos(w2)*z1;\\ny2 = y1;\\n\\ny3 = cos(w3)*y2 + sin(w3)*z2;\\nz3 = -sin(w3)*y2 + cos(w3)*z2;\\nx3 = x2;\\n\\n// perspective calculation\\n\\nl = sqrt(x3*x3 + y3*y3);\\nw = atan2(x3,y3);\\np = tan(asin(1) + atan2(d+z3,l));\\nd = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));\\n\\nmy_x = zoom*sin(w)*p;\\nmy_y = zoom*cos(w)*p;\\n\\nx = 0.5 + my_x;\\ny = 0.5 + my_y;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"xx1 = if(equal(sample,0),q11,xx1);\\nyy1 = if(equal(sample,0),q12,yy1);\\nzz1 = if(equal(sample,0),q13,zz1);\\n\\ndx1 = q14*(yy1-xx1);\\ndy1 = xx1*(q15-zz1)-yy1;\\ndz1 = xx1*yy1-q16*zz1;\\nxx1 = xx1 + q17*dx1;\\nyy1 = yy1 + q17*dy1;\\nzz1 = zz1 + q17*dz1;\\n\\nmy_x = xx1*0.02;\\nmy_y = yy1*0.02;\\nmy_z = zz1*0.02;\\n\\nx = 0.5 + my_x;\\ny = 0.5 + my_y;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"step = 0;","frame_eqs_eel":"dec_med = pow (0.9, 30/fps);\\ndec_slow = pow (0.96, 30/fps);\\ndec_fast = pow (0.6, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, 0+avg+peak) * above (time, t0+.1);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %16;\\nindex2 = (index2 + is_beat*bnot(index))%8;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq24 = is_beat;\\nvol = bass_att + mid_att + treb_att;\\nvol_ = dec_med * vol_ + (1-dec_med)* vol;\\nvol__ = dec_med * vol__ + (1-dec_med)* vol_;\\nq27 = index + 1;\\nq28 = index2 + 1;\\nq23 = q22 -0.1/q22;\\nq23 = max(q23,1);\\n\\nk1 =  is_beat*equal(index%8,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_fast * p2+ (1-dec_fast)*p1;\\nrott = p2 * 3.1416/4;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\ntrig = q24 * bnot(index%2);\\nvx = vx*bnot(trig) + trig* (int(rand(100))/100-.5);\\nvy = vy*bnot(trig) + trig* (int(rand(100))/100-.5);\\nq10 = 0.2+vy*vy*2;\\nq11 = sin(time/9)/2+.4;\\nmovz = movz-1/fps*(.3+vx);\\nq9 = movz;\\n\\nq12 = min(q22,6)*2;\\nq13 = min(2,1+abs(8*vy*vx));\\n//dir_ = dec_med*dir_ + (1-dec_med)*(index2%2-.5);\\ndir_ =  bass-1;\\n\\ntrig = bnot(index%4) * q24;\\ndir = bnot(trig)*dir + trig*(int(rand(10))-5);\\n\\ntrel = trel + .1/fps*dir;\\ntrel_ = dec_med*trel_ + (1-dec_med)*trel;\\n\\nq5 = cos(trel_);\\nq6 = sin(trel_+0*q27*(q28%2));\\nq7 = -q6;\\nq8 = q5;\\n\\nzoom = 1.02;\\nrot = .5*sin(bnot(q28%2)*q28) ;\\nrot = .0*sin(time/3);\\ndx = .0;\\n\\nmonitor = q11;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = ((uv * texsize.xy) * 0.08);\\n  vec3 tmpvar_2;\\n  tmpvar_2 = (texture (sampler_main, (uv - (\\n    ((sin(tmpvar_1) / cos(tmpvar_1)) * texsize.zw)\\n   * 3.0))).xyz + (vec3(dot (texture (sampler_noise_lq, \\n    ((((texsize.xy * texsize_noise_lq.zw).x * uv) * 0.02) + (0.1 * rand_frame).xy)\\n  ), vec4(0.32, 0.49, 0.29, 0.0))) / 30.0));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ((mix (tmpvar_2, \\n    (1.0 - tmpvar_2.zyx)\\n  , vec3(0.01, 0.01, 0.01)) - 0.03) - (0.2 * pow (\\n    (1.0 - rad)\\n  , 18.0)));\\n  ret = tmpvar_3.xyz;\\n }","comp":"vec3 xlat_mutableneu;\\nvec2 xlat_mutablers0;\\nvec2 xlat_mutablerss;\\nvec2 xlat_mutableuv2;\\n shader_body { \\n  vec2 uv_1;\\n  vec2 ofs_2;\\n  vec3 ret1_3;\\n  uv_1 = ((uv - 0.5) * aspect.xy);\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = q5;\\n  tmpvar_4.y = q6;\\n  uv_1 = (uv_1 + (tmpvar_4 / 4.0));\\n  mat2 tmpvar_5;\\n  tmpvar_5[uint(0)] = _qb.xy;\\n  tmpvar_5[1u] = _qb.zw;\\n  uv_1 = (uv_1 * tmpvar_5);\\n  float tmpvar_6;\\n  float tmpvar_7;\\n  tmpvar_7 = (min (abs(\\n    (uv_1.y / uv_1.x)\\n  ), 1.0) / max (abs(\\n    (uv_1.y / uv_1.x)\\n  ), 1.0));\\n  float tmpvar_8;\\n  tmpvar_8 = (tmpvar_7 * tmpvar_7);\\n  tmpvar_8 = (((\\n    ((((\\n      ((((-0.01213232 * tmpvar_8) + 0.05368138) * tmpvar_8) - 0.1173503)\\n     * tmpvar_8) + 0.1938925) * tmpvar_8) - 0.3326756)\\n   * tmpvar_8) + 0.9999793) * tmpvar_7);\\n  tmpvar_8 = (tmpvar_8 + (float(\\n    (abs((uv_1.y / uv_1.x)) > 1.0)\\n  ) * (\\n    (tmpvar_8 * -2.0)\\n   + 1.570796)));\\n  tmpvar_6 = (tmpvar_8 * sign((uv_1.y / uv_1.x)));\\n  if ((abs(uv_1.x) > (1e-08 * abs(uv_1.y)))) {\\n    if ((uv_1.x < 0.0)) {\\n      if ((uv_1.y >= 0.0)) {\\n        tmpvar_6 += 3.141593;\\n      } else {\\n        tmpvar_6 = (tmpvar_6 - 3.141593);\\n      };\\n    };\\n  } else {\\n    tmpvar_6 = (sign(uv_1.y) * 1.570796);\\n  };\\n  xlat_mutablers0.x = (((tmpvar_6 / 3.1416) * 6.0) * q28);\\n  xlat_mutablers0.y = inversesqrt(dot (uv_1, uv_1));\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = (xlat_mutablers0.x + (q9 * 8.0));\\n  tmpvar_9.y = (xlat_mutablers0.y + ((q9 * q28) * 4.0));\\n  xlat_mutablerss = (tmpvar_9 / 12.0);\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = q5;\\n  tmpvar_10.y = q6;\\n  ofs_2 = (0.1 * tmpvar_10.yx);\\n  float tmpvar_11;\\n  float tmpvar_12;\\n  tmpvar_12 = -(q9);\\n  tmpvar_11 = fract(tmpvar_12);\\n  mat2 tmpvar_13;\\n  tmpvar_13[uint(0)].x = 1.0;\\n  tmpvar_13[uint(0)].y = -0.0;\\n  tmpvar_13[1u].x = 0.0;\\n  tmpvar_13[1u].y = 1.0;\\n  xlat_mutableuv2 = ((uv_1 * (\\n    (q13 * tmpvar_11)\\n   * tmpvar_13)) * aspect.yx);\\n  vec2 tmpvar_14;\\n  tmpvar_14 = fract(((xlat_mutableuv2 + 0.5) + ofs_2));\\n  xlat_mutableneu = (texture (sampler_main, tmpvar_14).xyz + ((texture (sampler_blur1, tmpvar_14).xyz * scale1) + bias1));\\n  ret1_3 = max (vec3(0.0, 0.0, 0.0), ((xlat_mutableneu * \\n    (1.0 - (tmpvar_11 * tmpvar_11))\\n  ) * 2.0));\\n  float tmpvar_15;\\n  tmpvar_15 = fract((tmpvar_12 + 0.3333333));\\n  mat2 tmpvar_16;\\n  tmpvar_16[uint(0)].x = -0.4990803;\\n  tmpvar_16[uint(0)].y = -0.8665558;\\n  tmpvar_16[1u].x = 0.8665558;\\n  tmpvar_16[1u].y = -0.4990803;\\n  xlat_mutableuv2 = ((uv_1 * (\\n    (q13 * tmpvar_15)\\n   * tmpvar_16)) * aspect.yx);\\n  vec2 tmpvar_17;\\n  tmpvar_17 = fract(((xlat_mutableuv2 + 0.5) + ofs_2));\\n  xlat_mutableneu = (texture (sampler_main, tmpvar_17).xyz + ((texture (sampler_blur1, tmpvar_17).xyz * scale1) + bias1));\\n  ret1_3 = max (ret1_3, ((xlat_mutableneu * \\n    (1.0 - (tmpvar_15 * tmpvar_15))\\n  ) * 2.0));\\n  float tmpvar_18;\\n  tmpvar_18 = fract((tmpvar_12 + 0.6666667));\\n  mat2 tmpvar_19;\\n  tmpvar_19[uint(0)].x = -0.5018377;\\n  tmpvar_19[uint(0)].y = 0.8649619;\\n  tmpvar_19[1u].x = -0.8649619;\\n  tmpvar_19[1u].y = -0.5018377;\\n  xlat_mutableuv2 = ((uv_1 * (\\n    (q13 * tmpvar_18)\\n   * tmpvar_19)) * aspect.yx);\\n  vec2 tmpvar_20;\\n  tmpvar_20 = fract(((xlat_mutableuv2 + 0.5) + ofs_2));\\n  xlat_mutableneu = (texture (sampler_main, tmpvar_20).xyz + ((texture (sampler_blur1, tmpvar_20).xyz * scale1) + bias1));\\n  ret1_3 = max (ret1_3, ((xlat_mutableneu * \\n    (1.0 - (tmpvar_18 * tmpvar_18))\\n  ) * 2.0));\\n  float tmpvar_21;\\n  tmpvar_21 = fract((tmpvar_12 + 1.0));\\n  mat2 tmpvar_22;\\n  tmpvar_22[uint(0)].x = 0.9999949;\\n  tmpvar_22[uint(0)].y = 0.003185092;\\n  tmpvar_22[1u].x = -0.003185092;\\n  tmpvar_22[1u].y = 0.9999949;\\n  xlat_mutableuv2 = ((uv_1 * (\\n    (q13 * tmpvar_21)\\n   * tmpvar_22)) * aspect.yx);\\n  vec2 tmpvar_23;\\n  tmpvar_23 = fract(((xlat_mutableuv2 + 0.5) + ofs_2));\\n  xlat_mutableneu = (texture (sampler_main, tmpvar_23).xyz + ((texture (sampler_blur1, tmpvar_23).xyz * scale1) + bias1));\\n  ret1_3 = max (ret1_3, ((xlat_mutableneu * \\n    (1.0 - (tmpvar_21 * tmpvar_21))\\n  ) * 2.0));\\n  vec2 tmpvar_24;\\n  tmpvar_24.x = (ret1_3.x + ret1_3.z);\\n  tmpvar_24.y = (ret1_3.x - ret1_3.y);\\n  vec4 tmpvar_25;\\n  tmpvar_25.w = 1.0;\\n  tmpvar_25.xyz = ((ret1_3 + (\\n    ((bass_att * 0.004) / sqrt(dot (uv_1, uv_1)))\\n   * roam_sin).xyz) + ((2.0 * \\n    (bass_att * ((texture (sampler_blur1, fract(\\n      (xlat_mutablerss + (tmpvar_24 / 2.0))\\n    )).xyz * scale1) + bias1).zxy)\\n  ) * clamp (\\n    (1.0 - (ret1_3 * 4.0))\\n  , 0.0, 1.0)));\\n  ret = tmpvar_25.xyz;\\n }"}')},157:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.49,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken_center":1,"brighten":1,"darken":1,"wave_a":0.001,"wave_scale":0.319,"wave_smoothing":0.9,"wave_mystery":-0.2,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":2.669,"zoomexp":0.9995,"zoom":0.9998,"rot":-0.0001,"warp":0.01,"sy":1.0002,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0.05,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":54,"num_inst":25,"rad":0.01,"tex_zoom":7.0985,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.1,"border_g":0.1,"border_b":0.1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"\\nrad=q1*0.02;\\nx = x+(0.13*q3)*sin((instance*1.4));\\ny = y+(0.13*q4)*cos((instance*1.4));\\n\\nr=1-q6;\\ng=1-q7;\\nb=1-q8;\\nr2=r;\\ng2=g;\\nb2=b;"},{"baseVals":{"sides":54,"rad":0.01917,"tex_zoom":7.0985,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.1,"border_g":0.1,"border_b":0.1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"rad=0;\\nrad=q1*0.02;\\nx = x-(0.11*q3)*sin(-time);\\ny = y+(0.11*q4)*cos(time);\\nr=1-q6;\\ng=1-q7;\\nb=1-q8;\\nr2=r;\\ng2=g;\\nb2=b;\\n"},{"baseVals":{"enabled":1,"sides":54,"textured":1,"rad":0.46287,"tex_ang":1.88494,"tex_zoom":1.28197,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.1,"border_g":0.1,"border_b":0.1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"//rad=0;\\n//rad=q1*0.02;\\n//x = x-(0.11*q3)*sin(-time);\\n//y = y-(0.11*q4)*cos(-time);\\n\\n//tex_ang = tex_ang + 6.28*sin(q2*0.1);"},{"baseVals":{"sides":54,"rad":0.43866,"tex_ang":2.5132,"tex_zoom":1.5957,"r":0,"a":0.15,"g2":0,"a2":0.1,"border_r":0.1,"border_g":0.1,"border_b":0.1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"\\n//rad=rad+q1*0.02;\\n//x = x-(0.11*q3)*sin(-time);\\n//y = y+(0.11*q4)*cos(-time);\\n"}],"waves":[{"baseVals":{"usedots":1,"additive":1,"r":0.2,"g":0.7,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.6*(0.6*sin(time*1.3) + 0.4*sin(0.98*time));\\nwave_b = wave_b + 0.6*(0.6*sin(time*1.1) + 0.4*sin(0.78*time));\\nwave_g = wave_g + 0.5*(0.6*sin(time*1.2) + 0.4*sin(0.6*time));\\n\\nq8=wave_r;\\nq7=wave_b;\\nq6=wave_g;\\n\\nvol = 0.1*(vol*9 + (bass_att+mid_att+treb_att)*0.333333);\\nq1=vol;\\nmtime=mtime+vol*0.01;\\nq2=mtime*0.25;\\n\\nsy=sy+vol*0.02;\\nsx=sy;\\n\\nrot = rot + 0.01*sin(time*0.05);\\nmonitor=rot;\\nq3=aspectx;\\nq4=aspecty;\\nwarp=0;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv);\\n  ret_1 = (tmpvar_2.xyz + clamp ((\\n    (tmpvar_2.yzx - tmpvar_2.zxy)\\n   - \\n    (((texture (sampler_blur1, uv).xyz * scale1) + bias1) * 0.1)\\n  ), 0.0, 1.0));\\n  ret_1 = (ret_1 * 0.99);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_1;\\n  ret = tmpvar_3.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = -(uv.x);\\n  tmpvar_2.y = uv.y;\\n  ret_1 = (texture (sampler_main, uv).xyz + texture (sampler_main, tmpvar_2).xyz);\\n  vec3 tmpvar_3;\\n  tmpvar_3.x = q8;\\n  tmpvar_3.y = q7;\\n  tmpvar_3.z = q6;\\n  ret_1 = (1.0 - mix (ret_1, (ret_1 * tmpvar_3), vec3(rad)));\\n  ret_1 = (ret_1 * 1.49);\\n  ret_1 = (ret_1 * ret_1);\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = ret_1;\\n  ret = tmpvar_4.xyz;\\n }"}')},6555:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.14,"decay":1,"echo_zoom":1,"wave_mode":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":0.001,"wave_scale":0.179,"wave_smoothing":0,"wave_mystery":0.3,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoomexp":0.8195,"zoom":1.0697,"dy":0.006,"warp":0.01,"sx":0.9996,"wave_g":0,"wave_b":0,"ob_a":0.8,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":0,"mv_y":0,"mv_l":1,"mv_g":0.91,"mv_b":0.71,"mv_a":0},"shapes":[{"baseVals":{"sides":63,"rad":0.01,"ang":3.4054,"tex_ang":3.1415,"tex_zoom":1.6446,"r":0,"a":0.4,"g2":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"rad = rad + 0.1*q3;"},{"baseVals":{"sides":34,"textured":1,"rad":0.18167,"tex_ang":3.1415,"tex_zoom":5.42789,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":54,"x":0,"y":0.6,"rad":0.13478,"r":0.7,"g":0.6,"b":0.7,"r2":0.6,"g2":0.6,"b2":0.6,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"//r = r + 0.3*(0.6*sin(time*1.87) + 0.4*sin(1.98*time));\\n//b = b + 0.3*(0.6*sin(time*1.3434) + 0.4*sin(1.78*time));\\n//g = g + 0.3*(0.6*sin(time*1.9887) + 0.4*sin(1.6*time));\\nr=0;\\nb=0;\\ng=0;\\nr2=r;\\nb2=b;\\ng2=g;"},{"baseVals":{"x":0,"y":0.2,"rad":0.20068,"r":0,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"scaling":0.3696,"r":0,"g":0,"b":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"bass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.91+1.3);\\n\\nwave_r = 0.5 + 0.5*(0.6*sin(time*1.3) + 0.4*sin(0.98*time));\\nwave_b = 0.5 + 0.5*(0.6*sin(time*1.1) + 0.4*sin(0.78*time));\\nwave_g = 0.5 + 0.5*(0.6*sin(time*1.2) + 0.4*sin(0.6*time));\\n\\nq8=wave_r;\\nq7=wave_b;\\nq6=wave_g;\\n\\nwr = 0.5+0.4*(0.6*sin(time*0.2) + 0.4*sin(0.8*time));\\nwb = 0.5+0.4*(0.6*sin(time*0.377) + 0.4*sin(0.5*time));\\nwg = 0.5+0.4*(0.6*sin(time*0.7) + 0.4*sin(0.4*time));\\n\\nq10=wr;//*above(bass_thresh, 1.9)*1;\\nq11=wb;//*above(bass_thresh, 1.9)*1;\\nq12=wg;//*above(bass_thresh, 1.9)*1;\\n\\nq10=0.8;\\nq11=0.2;\\nq12=0.1;\\n\\n\\nq18 = 0.01*sin(mtime*0.1);\\nq17 = -0.01*sin(mtime*0.254);\\nq2=bass_thresh;\\n\\nvol=(bass+mid+treb)*0.25;\\nvol=vol*vol;\\nq3=vol;\\nq5=vol*0.5;\\nmtime=mtime+vol*0.01;\\nq2=mtime*0.25;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 noise2_1;\\n  vec3 ret_2;\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur1, uv).xyz * scale1) + bias1) + texture (sampler_main, uv).xyz);\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (0.5 + ((uv - 0.5) * (1.0 + \\n    (tmpvar_3.y * 0.05)\\n  )));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = (tmpvar_4.x + pow (tmpvar_3.x, q17));\\n  tmpvar_5.y = (tmpvar_4.y + pow (tmpvar_3.x, q18));\\n  vec4 tmpvar_6;\\n  tmpvar_6 = texture (sampler_fc_main, fract(tmpvar_5));\\n  vec3 tmpvar_7;\\n  tmpvar_7.x = q10;\\n  tmpvar_7.y = q11;\\n  tmpvar_7.z = q12;\\n  noise2_1 = (texture (sampler_noise_lq, ((\\n    (uv_orig * texsize.xy)\\n   * texsize_noise_lq.zw) + rand_frame.xy)).xyz + ((tmpvar_7 * vec3(rad)) * vol));\\n  vec3 a_8;\\n  a_8 = (1.0 - tmpvar_6.xyz);\\n  ret_2 = (tmpvar_6.xyz + (0.3 * clamp (\\n    ((a_8.yzx * noise2_1.zxy) - (a_8.zxy * noise2_1.yzx))\\n  , 0.0, 1.0)));\\n  ret_2 = (ret_2 * 0.97);\\n  vec4 tmpvar_9;\\n  tmpvar_9.w = 1.0;\\n  tmpvar_9.xyz = ret_2;\\n  ret = tmpvar_9.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  ret_1 = (texture (sampler_main, uv).xyz * vec3(0.9, 0.3, 0.5));\\n  ret_1 = (ret_1 * 1.34);\\n  ret_1 = (ret_1 * ret_1);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ret_1;\\n  ret = tmpvar_2.xyz;\\n }"}')},3308:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":2,"gammaadj":1.994,"decay":0.97,"wrap":0,"wave_a":100,"wave_scale":0.312,"wave_smoothing":0.45,"wave_mystery":-0.5,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":2.853,"zoom":1.064,"warp":0,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"mv_x":12.8,"mv_l":5,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":32,"additive":1,"thickoutline":1,"num_inst":33,"r":0,"g":0.5,"g2":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"trans = rand(int(q30))/15+instance-instance;\\ntrans2 = rand(int(q30))/15+instance-instance;\\ntrans3 = rand(int(q30))/15+instance-instance;\\na = trans;\\n\\nx = .5 + int(rand(15))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\\ny = .5 + int(rand(15))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\\nrad = .09 + rand(int(q30))/15+instance-instance;\\nr=rand(q30)*.1+instance-instance;\\ng=rand(q30)*.1+instance-instance;\\nb=rand(q30)*.1+instance-instance;\\nr2=rand(q30)*.1+instance-instance;\\ng2=rand(q30)*.1+instance-instance;\\nb2=rand(q30)*.1+instance-instance;\\nborder_r=rand(q30)*.1+instance-instance;\\nborder_g=rand(q30)*.1+instance-instance;\\nborder_b=rand(q30)*.1+instance-instance;"},{"baseVals":{"enabled":1,"sides":100,"textured":1,"num_inst":7,"rad":0.03333,"r":0,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = int(rand(100))*.01+instance-instance;\\ny = int(rand(100))*.01+instance-instance;\\n\\na =1;\\nvol=bass+mid+treb;\\nrad = int(rand(int(vol)))/7+instance-instance;"},{"baseVals":{"enabled":1,"sides":3,"thickoutline":1,"textured":1,"num_inst":311,"rad":0.01,"tex_ang":0.62832,"r":0,"g2":0,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*tan(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=1-mx;\\ny=1-my;\\n\\nang=(sin(time*.35)+1)*3;\\n//a=(above(bass+mid+treb,.8));\\npi23=4*asin(1)*.333333333;\\nt1=bass+mid+treb;"}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"chng=sin(time*.5);\\ncthr=.9999;\\nmq21=if(above(chng,cthr),rand(3),mq21);\\nmq22=if(above(chng,cthr),rand(3),mq22);\\nmq23=if(above(chng,cthr),rand(3),mq23);\\nmq24=if(above(chng,cthr),rand(2),mq24);\\nmq25=if(above(chng,cthr),rand(2),mq25);\\nmq26=if(above(chng,cthr),rand(2),mq26);\\nmq27=if(above(chng,cthr),rand(1),mq27);\\nmq28=if(above(chng,cthr),rand(1),mq28);\\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\\nmq31=if(above(chng,cthr),rand(1)*.3,mq31);\\nmonitor=chng;\\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\\nq27=mq27;q28=mq28;q29=mq29;q31=mq31;\\n\\nmonitor=mq1;\\nvol=bass+treb+mid;\\natime=atime+vol;\\nq11=.4+sin(atime*.006        )*.4;\\nq12=.4+cos(atime*.00613828348)*.4;\\nq13=.4+sin(atime*.00598593455)*.4;\\nmonitor=q13;\\n\\nwave_r = wave_r + 0.400*( 0.60*sin(0.933*time) + 0.40*sin(1.045*time) );\\nwave_g = wave_g + 0.400*( 0.60*sin(0.900*time) + 0.40*sin(0.956*time) );\\nwave_b = wave_b + 0.400*( 0.60*sin(0.910*time) + 0.40*sin(0.920*time) );\\nzoom = zoom + 0.013*( 0.60*sin(0.339*time) + 0.40*sin(0.276*time) );\\nrot = rot + 0.040*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );\\nq30=bass+treb+mid;","pixel_eqs_eel":"zoom = zoom + (x*2-1)*(0.08+0.15*sin(time*0.321)) + (y*2-1)*(0.08+0.15*cos(time*0.321));\\nsx=sx-(zoom-1)*0.1;\\nsy=sy-(zoom-1)*0.1;","warp":" shader_body { \\n  vec3 ret_1;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv);\\n  ret_1 = (tmpvar_2.xyz + ((tmpvar_2.xyz - \\n    ((texture (sampler_blur2, uv).xyz * scale2) + bias2)\\n  ) * 0.3));\\n  vec4 tmpvar_3;\\n  tmpvar_3 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv.xyy) * (\\n    (q27 * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\\n  if (((ret_1.x > (q21 * q13)) && (ret_1.x <= (q24 * q11)))) {\\n    ret_1.y = (ret_1.y + (tmpvar_3.x * 0.5));\\n  };\\n  if (((ret_1.y > (q22 * q11)) && (ret_1.y <= (q25 * q12)))) {\\n    ret_1.z = (ret_1.z + (tmpvar_3.y * 0.5));\\n  };\\n  if (((ret_1.z > (q23 * q12)) && (ret_1.z <= (q26 * q13)))) {\\n    ret_1.x = (ret_1.x + (tmpvar_3.z * 0.5));\\n  };\\n  ret_1 = (ret_1 * 0.9);\\n  ret_1 = (ret_1 + ((\\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 0.4)) + rand_frame.xy)).xyz - 0.5)\\n   / 956.0) * 112.0));\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = ret_1;\\n  ret = tmpvar_4.xyz;\\n }","comp":" shader_body { \\n  vec2 uv_1;\\n  vec2 uv2_2;\\n  float crisp_3;\\n  vec3 ret_4;\\n  vec4 tmpvar_5;\\n  tmpvar_5 = texture (sampler_main, uv);\\n  ret_4 = tmpvar_5.xyz;\\n  uv2_2 = (((uv - 0.5) * 0.4) + 0.5);\\n  uv_1 = (uv * 1.3);\\n  vec4 tmpvar_6;\\n  tmpvar_6 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv2_2.xyy) * (\\n    (q28 * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q31)));\\n  if (((tmpvar_5.x > (q26 * q13)) && (tmpvar_5.x <= (q23 * q11)))) {\\n    ret_4.z = (tmpvar_5.z - (tmpvar_6.x * 0.5));\\n  };\\n  if (((tmpvar_5.y > (q25 * q11)) && (tmpvar_5.y <= (q22 * q12)))) {\\n    ret_4.x = (tmpvar_5.x - (tmpvar_6.y * 0.5));\\n  };\\n  if (((ret_4.z > (q24 * q12)) && (ret_4.z <= (q21 * q13)))) {\\n    ret_4.y = (tmpvar_5.y - (tmpvar_6.z * 0.5));\\n  };\\n  crisp_3 = texture (sampler_main, uv2_2).y;\\n  ret_4 = (ret_4 * (1.0 - (\\n    ((texture (sampler_blur1, uv2_2).xyz * scale1) + bias1)\\n  .y * 1.15)));\\n  uv2_2 = uv_1;\\n  ret_4 = (0.7 - max (ret_4, vec3(crisp_3)));\\n  vec4 tmpvar_7;\\n  tmpvar_7.w = 1.0;\\n  tmpvar_7.xyz = ret_4;\\n  ret = tmpvar_7.xyz;\\n }"}')},5400:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"wave_thick":1,"wave_brighten":0,"wave_a":0.004,"wave_scale":0.01,"wave_smoothing":0,"wave_mystery":-0.44,"modwavealphastart":1,"modwavealphaend":1,"warpanimspeed":0.01,"warpscale":100,"zoomexp":0.24298,"zoom":0.9901,"warp":0.01,"wave_y":0.04,"ob_size":0,"ob_g":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":64,"mv_y":48,"mv_l":0,"mv_b":0,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"thickoutline":1,"rad":0.01,"tex_ang":0.12566,"tex_zoom":1.51878,"r":0.05,"a":0.1,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"thickoutline":1,"textured":1,"rad":0.80013,"ang":4.64954,"tex_zoom":1.24471,"g":1,"b":1,"r2":1,"b2":1,"a2":0.77,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"thickoutline":1,"x":1,"rad":3.0054,"tex_ang":0.12566,"tex_zoom":1.51878,"r":0,"g":1,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"thickoutline":1,"x":1,"rad":0.39872,"tex_ang":0.12566,"tex_zoom":1.51878,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"usedots":1,"scaling":2.44415,"smoothing":0,"a":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t1 = 0;\\nv = 0.01;\\nj = j + (bass)*0.01;\\nj2 = j2 + (mid_att)*0.01;\\nj3 = j3 + (treb_att)*0.01;\\nt2 = j;\\nt3 = j2;\\nt4 = j3;\\n//t5 = 0;\\nk = k*0.99 + 10*mid/fps;\\nt5 = -k;\\n\\ncl1 = cl1 + 0.002;\\ncl1 = if(above(cl1,1),0,cl1);\\ncl1 = if(below(cl1,0),1,cl1);\\nt8 = cl1;\\n\\ncl2 = cl2 -1*q1;\\ncl2 = if(above(cl2,1),0,cl2);\\ncl2 = if(below(cl2,0),1,cl2);\\nt7 = cl2;\\n\\ncl3 = cl3 +0.001;\\ncl3 = if(above(cl3,1),0,cl3);\\ncl3 = if(below(cl3,0),1,cl3);\\nt6 = cl3;","point_eqs_eel":"xx = ((sample*0983624912364)%10000000+100)/10000000;\\nyy = ((xx*1896575575)%10000000+100)/10000000;\\nzz = ((yy*58652340875)%10000000+100)/10000000;\\n\\n\\nd = sqrt(sqr(xx)+sqr(yy)+sqr(zz));\\n\\nzz = zz + t8 - if(above(zz+t8,1),1,0) - 0.5;\\nxx = xx + t7 - if(above(xx+t7,1),1,0) - 0.5;\\nyy = yy + t6 - if(above(yy+t6,1),1,0) - 0.5;\\n\\nv = 0.001;\\n\\nw = 1;// (sample*sin(time*0.3)*0.01-1);\\nbb = d*d*0.5;\\nn= 0.3;\\ns1 = sin(sin(t2*w+bb)*n);\\ns2 = sin(sin(t3*w+bb)*n);\\ns3 = sin(sin(t4*w+bb)*n);\\nc1 = cos(sin(t2*w+bb)*n);\\nc2 = cos(sin(t3*w+bb)*n);\\nc3 = cos(sin(t4*w+bb)*n);\\n\\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\\n\\nzoom = .5*(1/(z+0.5));\\nx = 0.5 + zoom*x1 + sin(time*0.1)*0.;;\\ny = 0.5 + zoom*y1 + cos(time*0.16801)*0.;\\n\\npi3 = 3.1415*2*0.3333;\\nt = z*2+t2*1;\\nc=3;\\n//r = sin(t)*c;\\n\\n//g = sin(t+pi3)*c;\\n\\n//b = sin(t-pi3)*c;\\n\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\n\\na = 0.4;"},{"baseVals":{"scaling":2.44415,"smoothing":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t8 = 1;","point_eqs_eel":"t8 = -t8;\\ny = sample;\\nx = 0.5 + t8*0.005;\\n\\npi3 = 3.1415*2*0.3333;\\nt = time + sample*2;\\nc=2;\\n\\nr = sin(t)*c;\\ng = sin(t+pi3)*c;\\n\\nb = sin(t-pi3)*c;\\n\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\n"},{"baseVals":{"thick":1,"additive":1,"scaling":100,"smoothing":0.6,"r":0,"g":0.4,"a":0.3,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt7 = q7;\\nt8 = q8;","point_eqs_eel":"sample = 1-sample;\\nxxx = xx;\\nyyy = yy;\\nxx = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2\\n+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;\\n\\nyy = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6\\n+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;\\nd = 1/sqrt(sqr(xx-xxx)+sqr(yy-yyy));\\nx = xx + sample*(1-sample)*(value1-value2)*(yy-yyy)*d;\\ny = yy - sample*(1-sample)*(value1-value2)*(xx-xxx)*d;"},{"baseVals":{"usedots":1,"scaling":2.44415,"smoothing":0,"r":0,"g":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t8 = 1;","point_eqs_eel":"t8 = -t8;\\ny = (1+t8)*0.01;\\nx = sample;"}],"init_eqs_eel":"x1 = 0.9;\\ny1 = 0.5;\\n\\nx2 = 0.5; y2 = 0.5;\\nx3 = 0.5; y3 = 0.5;\\nx4 = 0.5; y4 = 0.5;","frame_eqs_eel":"zoom =1;// 0.999;\\nwarp = 0;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 my_uv_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (0.02 * aspect.zw);\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur2, \\n    ((uv + (vec2(1.0, 0.0) * tmpvar_3)) - floor((uv + (vec2(1.0, 0.0) * tmpvar_3))))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    ((uv - (vec2(1.0, 0.0) * tmpvar_3)) - floor((uv - (vec2(1.0, 0.0) * tmpvar_3))))\\n  ).xyz * scale2) + bias2));\\n  vec3 tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_blur2, \\n    ((uv + (vec2(0.0, 1.0) * tmpvar_3)) - floor((uv + (vec2(0.0, 1.0) * tmpvar_3))))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    ((uv - (vec2(0.0, 1.0) * tmpvar_3)) - floor((uv - (vec2(0.0, 1.0) * tmpvar_3))))\\n  ).xyz * scale2) + bias2));\\n  vec3 tmpvar_6;\\n  tmpvar_6 = ((texture (sampler_blur1, uv).xyz * scale1) + bias1);\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = tmpvar_4.y;\\n  tmpvar_7.y = tmpvar_5.y;\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = tmpvar_5.x;\\n  tmpvar_8.y = -(tmpvar_4.x);\\n  vec2 tmpvar_9;\\n  tmpvar_9 = ((uv - (tmpvar_7 * vec2(0.01, 0.01))) - (tmpvar_8 * -0.01));\\n  ret_2.y = texture (sampler_pc_main, (tmpvar_9 - floor(tmpvar_9))).y;\\n  ret_2.y = (ret_2.y + ((\\n    (ret_2.y - tmpvar_6.y)\\n   * 0.02) + 0.005));\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = tmpvar_4.x;\\n  tmpvar_10.y = tmpvar_5.x;\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = tmpvar_5.z;\\n  tmpvar_11.y = -(tmpvar_4.z);\\n  my_uv_1 = ((uv - (tmpvar_10 * vec2(0.01, 0.01))) - (tmpvar_11 * -0.01));\\n  ret_2.x = texture (sampler_pc_main, (my_uv_1 - floor(my_uv_1))).x;\\n  ret_2.x = (ret_2.x + ((\\n    (ret_2.x - tmpvar_6.x)\\n   * 0.02) + 0.005));\\n  vec2 tmpvar_12;\\n  tmpvar_12.x = tmpvar_4.z;\\n  tmpvar_12.y = tmpvar_5.z;\\n  vec2 tmpvar_13;\\n  tmpvar_13.x = tmpvar_5.y;\\n  tmpvar_13.y = -(tmpvar_4.y);\\n  my_uv_1 = ((uv - (tmpvar_12 * vec2(0.01, 0.01))) - (tmpvar_13 * -0.01));\\n  ret_2.z = texture (sampler_pc_main, (my_uv_1 - floor(my_uv_1))).z;\\n  ret_2.z = (ret_2.z + ((\\n    (ret_2.z - tmpvar_6.z)\\n   * 0.02) + 0.005));\\n  vec4 tmpvar_14;\\n  tmpvar_14.w = 1.0;\\n  tmpvar_14.xyz = ret_2;\\n  ret = tmpvar_14.xyz;\\n }","comp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1 = texture (sampler_main, uv);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ((tmpvar_1.xyz * tmpvar_1.xyz) * tmpvar_1.xyz);\\n  ret = tmpvar_2.xyz;\\n }"}')},7945:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_orient":1,"wave_brighten":0,"brighten":1,"wave_a":0.001,"wave_scale":5.715,"wave_smoothing":0.9,"modwavealphastart":1,"modwavealphaend":1,"warpanimspeed":2.289,"warpscale":5.472,"zoomexp":0.01,"zoom":0.9901,"warp":1.8566,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0.005,"ob_a":1,"ib_size":0,"ib_r":1,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"sides":100,"thickoutline":1,"textured":1,"x":0.72,"y":0.7,"ang":3.58141,"tex_zoom":8.751,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"enabled":0},"init_eqs_eel":"vx = 0;\\nvy = 0;","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"usedots":1,"thick":1,"scaling":2.44415,"smoothing":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;","frame_eqs_eel":"t1 = 0;\\nv = 0.01;\\nj = j + (bass_att)*0.01;\\nj2 = j2 + (mid_att)*0.01;\\nj3 = j3 + (treb_att)*0.01;\\nt2 = j;\\nt3 = j2;\\nt4 = j3;\\n//t5 = 0;\\nk = k*0.95 + 5*(treb_att+mid_att+bass_att)/fps;\\nt5 = -k;\\n","point_eqs_eel":"sample=sample+0.5;\\ns8 = sample*512;\\ndir = s8*0.125*3.1415*0.5;\\nv = 0.0005;\\nt1 = 0;//t1*0.97 + value1*v;\\nd = 1;\\nxx = sin(dir+10*time)*(sample*d+t1);\\nyy = cos(dir+10*time)*(sample*d+t1);\\nzz = t1*(1-sample);\\nv = 0.001;\\n\\nw = (sample*sin(time*0.3)*0.02-1);\\ns1 = sin(sin(t2*w));\\ns2 = sin(sin(t3*w));\\ns3 = sin(sin(t4*w));\\nc1 = cos(sin(t2*w));\\nc2 = cos(sin(t3*w));\\nc3 = cos(sin(t4*w));\\n\\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\\n\\na = 1.35;\\nzoom = 0.35*(1/(z+a));\\nx = 0.5 + zoom*x1 + sin(value1*10000000)*0.001;\\ny = 0.5 + zoom*y1 + cos(value2*10000000)*0.001;\\n\\npi3 = 3.1415*2*0.3333;\\nt = t5+sample*10;\\nc = 2/(z+1);\\nr = sin(t)*c;\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\n\\ng = sin(t+pi3)*c;\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\n\\nb = sin(t-pi3)*c;\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\n"},{"baseVals":{"enabled":1,"scaling":2.44415,"smoothing":0,"a":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;","frame_eqs_eel":"t1 = 0;\\nv = 0.01;\\nj = j + (bass_att)*0.01;\\nj2 = j2 + (mid_att)*0.01;\\nj3 = j3 + (treb_att)*0.01;\\nt2 = j;\\nt3 = j2;\\nt4 = j3;\\n//t5 = 0;\\nk = k*0.95 + 5*(treb_att+mid_att+bass_att)/fps;\\nt5 = -k;\\n","point_eqs_eel":"s8 = sample*512;\\ndir = s8*0.125*3.1415*0.5;\\nv = 0.0005;\\nt1 = 0;//t1*0.97 + value1*v;\\nd = 1;\\nxx = sin(dir+10*time)*(sample*d+t1);\\nyy = cos(dir+10*time)*(sample*d+t1);\\nzz = t1*(1-sample);\\nv = 0.001;\\n\\nw = (sample*sin(time*0.3)*0.02-1);\\ns1 = sin(sin(t2*w));\\ns2 = sin(sin(t3*w));\\ns3 = sin(sin(t4*w));\\nc1 = cos(sin(t2*w));\\nc2 = cos(sin(t3*w));\\nc3 = cos(sin(t4*w));\\n\\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\\n\\na = 1.35;\\nzoom = 0.35*(1/(z+a));\\nx = 0.5 + zoom*x1;\\ny = 0.5 + zoom*y1;\\na=0.2;\\npi3 = 3.1415*2*0.3333;\\nt = t5+sample*10;\\nc = 2/(z+1);\\nr = sin(t)*c;\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\n\\ng = sin(t+pi3)*c;\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\n\\nb = sin(t-pi3)*c;\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\n"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_a = 0;\\nq1 =aspectx;\\nq2 = aspecty;\\n\\n\\nb = b + bass*bass*0.85;\\nm = m + mid*mid*0.85;\\nt = t + treb*treb*0.85;\\n\\nq3 = b*0.012;\\nq4 = m*0.012;\\nq5 = t*0.012;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  vec3 tmpvar_2;\\n  tmpvar_2 = (texture (sampler_noise_lq, ((\\n    (uv_orig * texsize.xy)\\n   * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5);\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (texsize.zw * 4.0);\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = tmpvar_4.y;\\n  tmpvar_6.y = tmpvar_5.y;\\n  vec2 tmpvar_7;\\n  tmpvar_7 = (uv - ((tmpvar_6 * texsize.zw) * 6.0));\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = tmpvar_4.z;\\n  tmpvar_8.y = tmpvar_5.z;\\n  vec2 tmpvar_9;\\n  tmpvar_9 = (uv - ((tmpvar_8 * texsize.zw) * 2.0));\\n  vec4 tmpvar_10;\\n  tmpvar_10 = texture (sampler_blur1, uv);\\n  vec4 tmpvar_11;\\n  tmpvar_11 = texture (sampler_main, uv_orig);\\n  ret_1.y = (((\\n    (texture (sampler_main, tmpvar_7).y - (((\\n      (tmpvar_10.xyz * scale1)\\n     + bias1).y - texture (sampler_main, tmpvar_7).y) * 0.024))\\n   - 0.01) + (\\n    (1.0 - tmpvar_11.x)\\n   * 0.014)) + (tmpvar_2 * 0.01)).x;\\n  ret_1.z = (((texture (sampler_main, tmpvar_9).z - \\n    ((((tmpvar_10.xyz * scale1) + bias1).z - texture (sampler_main, tmpvar_9).z) * 0.024)\\n  ) - 0.01) + (tmpvar_11.x * 0.014));\\n  ret_1.x = texture (sampler_fc_main, (uv + ((tmpvar_2.xy * texsize.zw) * 0.5))).x;\\n  ret_1.x = (ret_1.x + ((\\n    (ret_1.x - ((texture (sampler_blur3, uv).xyz * scale3) + bias3).x)\\n   * 0.4) + (tmpvar_2 * 0.004)).x);\\n  vec4 tmpvar_12;\\n  tmpvar_12.w = 1.0;\\n  tmpvar_12.xyz = ret_1;\\n  ret = tmpvar_12.xyz;\\n }","comp":""}')},4997:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.96,"echo_zoom":1.007,"echo_orient":1,"wave_mode":2,"wave_dots":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":0.001,"wave_scale":0.012,"wave_smoothing":0.9,"warpanimspeed":0.01,"warpscale":1.611,"rot":0.004,"warp":0.12532,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"ob_size":0,"ob_r":0.11,"ob_b":0.1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":3,"mv_y":2,"mv_dx":0.02,"mv_dy":-0.02,"mv_l":0.15,"mv_r":0.49,"mv_g":0.48,"mv_b":0.3,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":5,"textured":1,"rad":1.06779,"ang":0.75398,"tex_zoom":0.77977,"g":1,"b":1,"r2":1,"b2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"thick":1,"r":0.1,"b":0.7},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2)*0.5 +0.5;\\n\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8;\\nxp=xq*sin(ang) + yq*cos(ang);\\nyp=xq*cos(ang) - yq*sin(ang);\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3 + 0.5);\\nxp=xq*sin(ang) + yq*cos(ang);\\nyp=xq*cos(ang) - yq*sin(ang);\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2)*0.75 - 1.05;\\nxq=xp*sin(ang) + zp*cos(ang);\\nyq=yp;\\nzq=xp*cos(ang) - zp*sin(ang);\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nxp=xq;\\nyp=yq*cos(ang) - zq*sin(ang);\\nzp=yq*sin(ang) + zq*cos(ang);\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=(1-sample)*flip;\\n\\nb=b+pow(1-sample,2)*0.3"},{"baseVals":{"enabled":1,"thick":1,"r":0.2,"b":0.6},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2;\\nyp=-yp;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2)*0.5 +0.5;\\n\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8;\\nxp=xq*sin(ang) + yq*cos(ang);\\nyp=xq*cos(ang) - yq*sin(ang);\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3 + 0.5);\\nxp=xq*sin(ang) + yq*cos(ang);\\nyp=xq*cos(ang) - yq*sin(ang);\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2)*0.75 - 1.05;\\nxq=xp*sin(ang) + zp*cos(ang);\\nyq=yp;\\nzq=xp*cos(ang) - zp*sin(ang);\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nxp=xq;\\nyp=yq*cos(ang) - zq*sin(ang);\\nzp=yq*sin(ang) + zq*cos(ang);\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=(1-sample)*flip;\\n\\n\\nb=b+pow(1-sample,2)*0.3\\n"},{"baseVals":{"thick":1,"additive":1,"g":0.6,"b":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\\ntm=q1;\\nphs=-sample*0.5;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2+phs - 2)*0.5 +0.5 + 2;\\n\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\n\\nang=cos(tm*2+phs - 2)*1.5 ;\\nxp=xq*sin(ang) + yq*cos(ang);\\nyp=xq*cos(ang) - yq*sin(ang);\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2+phs - 0.5)*1.5;\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3 + 0.5 +phs + 0.5);\\nxp=xq*sin(ang) + yq*cos(ang);\\nyp=xq*cos(ang) - yq*sin(ang);\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2+phs)*0.75 - 1.05;\\nxq=xp*sin(ang) + zp*cos(ang);\\nyq=yp;\\nzq=xp*cos(ang) - zp*sin(ang);\\n\\n//upper arm up down;\\nang=cos(tm+phs)*0.5 - 0.5;\\nxp=xq;\\nyp=yq*cos(ang) - zq*sin(ang);\\nzp=yq*sin(ang) + zq*cos(ang);\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=(1-sample)*0.05\\n"},{"baseVals":{"thick":1,"additive":1,"g":0.3,"b":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\\ntm=q1 ;\\nphs=-sample*0.5;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2+phs-2)*0.5 +0.5 + 2;\\n\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\n\\nang=cos(tm*2+phs-2)*1.5;\\nxp=xq*sin(ang) + yq*cos(ang);\\nyp=xq*cos(ang) - yq*sin(ang);\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2+phs-0.5)*1.5;\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3 + 0.5 +phs);\\nxp=xq*sin(ang) + yq*cos(ang);\\nyp=xq*cos(ang) - yq*sin(ang);\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2+phs)*0.75 - 1.05;\\nxq=xp*sin(ang) + zp*cos(ang);\\nyq=yp;\\nzq=xp*cos(ang) - zp*sin(ang);\\n\\n//upper arm up down;\\nang=cos(tm+phs)*0.5 - 0.5;\\nxp=xq;\\nyp=yq*cos(ang) - zq*sin(ang);\\nzp=yq*sin(ang) + zq*cos(ang);\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=-xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=(1-sample)*0.05;\\n"}],"init_eqs_eel":"mv_x=64;mv_y=48;\\nnut=0;\\nstp=0;stq=0;\\nrtp=0;rtq=0;\\nwvr=0;\\ndecay=0;\\ndcsp=0","frame_eqs_eel":"decay=0.98;\\nzoom=1.002;\\n\\nq1=time*0.9;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = texture (sampler_fc_main, uv).xyz;\\n  ret = tmpvar_1.xyz;\\n }","comp":" shader_body { \\n  vec2 uv2_1;\\n  uv2_1 = (uv + (vec2(1.0, 0.0) * texsize.zw));\\n  float tmpvar_2;\\n  tmpvar_2 = ((texture (sampler_main, uv2_1).x + (\\n    ((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1)\\n  .x * 0.3)) + ((\\n    (texture (sampler_blur2, uv2_1).xyz * scale2)\\n   + bias2).x * 0.1));\\n  uv2_1 = (uv + (vec2(-1.0, 0.0) * texsize.zw));\\n  float tmpvar_3;\\n  tmpvar_3 = ((texture (sampler_main, uv2_1).x + (\\n    ((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1)\\n  .x * 0.3)) + ((\\n    (texture (sampler_blur2, uv2_1).xyz * scale2)\\n   + bias2).x * 0.1));\\n  uv2_1 = (uv + (vec2(0.0, 1.0) * texsize.zw));\\n  float tmpvar_4;\\n  tmpvar_4 = ((texture (sampler_main, uv2_1).x + (\\n    ((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1)\\n  .x * 0.3)) + ((\\n    (texture (sampler_blur2, uv2_1).xyz * scale2)\\n   + bias2).x * 0.1));\\n  uv2_1 = (uv + (vec2(0.0, -1.0) * texsize.zw));\\n  vec3 tmpvar_5;\\n  tmpvar_5.z = 0.08;\\n  tmpvar_5.x = (tmpvar_2 - tmpvar_3);\\n  tmpvar_5.y = (tmpvar_4 - ((texture (sampler_main, uv2_1).x + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1).x * 0.3)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n  .x * 0.1)));\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = (vec3(1.95, 1.35, 0.9) * clamp (dot (\\n    normalize(tmpvar_5)\\n  , vec3(0.9070111, -0.3930381, 0.1511685)), 0.0, 1.0));\\n  ret = tmpvar_6.xyz;\\n }"}')},4167:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":0,"gammaadj":1,"decay":0.94,"echo_zoom":0.999996,"echo_orient":1,"additivewave":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.01,"wave_smoothing":0.63,"wave_mystery":-1,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoomexp":0.999998,"zoom":13.290894,"dx":-0.28,"dy":-0.32,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0,"ob_a":1,"ib_size":0.015,"ib_r":0.01,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":35.200005,"mv_y":29.760006,"mv_l":0.5,"mv_g":0.91,"mv_b":0.71,"mv_a":0.5},"shapes":[{"baseVals":{"enabled":1,"sides":100,"rad":0.491382,"r":0,"g":1,"b":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x=.5+q4;y=.5+q5;"},{"baseVals":{"enabled":1,"sides":24,"additive":1,"rad":0.018423,"tex_zoom":0.819541,"g":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"tex_ang=0.01;\\nx=.5-q4;\\ny=.5-q5;"},{"baseVals":{"enabled":1,"additive":1,"x":1,"y":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"additive":1,"x":0,"y":1,"rad":0.662308},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"zoom=1;\\nxpos=0;\\nypos=0;","frame_eqs_eel":"decay=1;\\n\\nvol= (bass+mid+treb)*0.55;\\nvol=vol;\\n\\n\\nmv_r = 0.5 + 0.4*sin(time*1.324);\\nmv_g = 0.5 + 0.4*cos(time*1.371);\\n\\n\\n\\n\\nzoom=.9;\\n\\nmusictime=musictime+vol;\\nq4=0.5;\\nq5=0.5;\\n\\n//dx=sin(musictime*0.1)*0.07;\\n//dy=cos(musictime*0.069)*0.07;\\n\\n\\n\\n\\nmonitor=rot;","pixel_eqs_eel":"rd=sqrt( sqr( (x-0.5-q4)*1.7) + sqr( (y-0.5+q5)*1.2 ) );\\ncx=0.5+q4;\\ncy=0.5-q5;\\n\\nzoom=(rd/rd);\\nrot=(rd/rd)+sin(time/5);","warp":"","comp":""}')},9645:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":0,"gammaadj":1,"decay":0.96,"echo_zoom":0.99663,"echo_orient":1,"wave_mode":2,"wave_dots":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":0.001,"wave_scale":0.011726,"wave_smoothing":0.9,"warpanimspeed":0.010284,"warpscale":0.01,"warp":0.01,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"ob_size":0,"ob_r":0.11,"ob_b":0.1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":64,"mv_y":48,"mv_l":5,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":32,"additive":1,"rad":0.194774,"r":0,"b":1,"a":0.000001,"r2":0.63,"g2":0.7,"b2":1,"a2":0.07,"border_a":0},"init_eqs_eel":"flip=1","frame_eqs_eel":"\\nflip=-flip;\\nlens_scale = flip*0.5+0.5;\\nlens_scale = 1 + lens_scale*2.4;\\npos_scale = if( equal(flip,-1) , 0.5 , lens_scale );\\n\\nt1=q1*0.25;\\n\\nsample = 1;\\nn= sample*6.283;\\ncubesize=q2;\\nfix=1/cubesize *0.5;\\ntm=q1*4+sample*4;\\n\\nxp= sin(tm)*cos(tm*3)*0.5+0.5;\\nyp= sin(tm*1.1)*sin(tm*4.1)*0.5+0.5;\\nzp= sin(tm*2.9)*cos(tm*1.77)*0.5+0.5;\\n\\nxp= int(xp*cubesize)/cubesize -0.5+fix;\\nyp= int(yp*cubesize)/cubesize -0.5+fix;\\nzp= int(zp*cubesize)/cubesize -0.5+fix;\\n\\n\\n//rotate\\nang=t1;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp*sang + zp*cang;\\nyq=yp;\\nzq=xp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n//rotate\\nang=t1*0.75;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp;\\nyq=yp*sang + zp*cang;\\nzq=yp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n\\nzp= zp+2;\\nx= -xp/zp*pos_scale + 0.5;\\ny= -yp/zp*pos_scale * 1.333 + 0.5;\\n\\nrad = rad*(1+q8/3)*lens_scale"},{"baseVals":{"enabled":1,"sides":6,"rad":0.043785,"r":0.3,"g":0.6,"b":1,"g2":0,"b2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"\\nt1=q1*0.25;\\n\\nsample = 1;\\nn= sample*6.283;\\ncubesize=q2;\\nfix=1/cubesize *0.5;\\ntm=q1*4+sample*4;\\n\\nxp= sin(tm)*cos(tm*3)*0.5+0.5;\\nyp= sin(tm*1.1)*sin(tm*4.1)*0.5+0.5;\\nzp= sin(tm*2.9)*cos(tm*1.77)*0.5+0.5;\\n\\nxp= int(xp*cubesize)/cubesize -0.5+fix;\\nyp= int(yp*cubesize)/cubesize -0.5+fix;\\nzp= int(zp*cubesize)/cubesize -0.5+fix;\\n\\n\\n//rotate\\nang=t1;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp*sang + zp*cang;\\nyq=yp;\\nzq=xp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n//rotate\\nang=t1*0.75;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp;\\nyq=yp*sang + zp*cang;\\nzq=yp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n\\nzp= zp+2;\\nx= xp/zp + 0.5;\\ny= yp/zp * 1.333 + 0.5;\\n\\n\\na= min(a+q8/2,1);\\nr= min(r*(1+q8) , 1 );\\ng= min(g*(1+q8) , 1 );\\n\\nr2= min(q8/2,1);\\ng2= min(q8/4,1);\\n\\nrad= rad*(1+q8/7)"},{"baseVals":{"enabled":1,"sides":36,"rad":0.284278,"r":0,"a":0,"r2":0.23,"g2":0.54,"b2":1,"a2":0.05,"border_g":0.8,"border_b":0.4,"border_a":0.45},"init_eqs_eel":"","frame_eqs_eel":"\\nt1=q1*0.25;\\n\\nsample = 1;\\nn= sample*6.283;\\ncubesize=q2;\\nfix=1/cubesize *0.5;\\ntm=q1*4+sample*4;\\n\\nxp= sin(tm)*cos(tm*3)*0.5+0.5;\\nyp= sin(tm*1.1)*sin(tm*4.1)*0.5+0.5;\\nzp= sin(tm*2.9)*cos(tm*1.77)*0.5+0.5;\\n\\nxp= int(xp*cubesize)/cubesize -0.5+fix;\\nyp= int(yp*cubesize)/cubesize -0.5+fix;\\nzp= int(zp*cubesize)/cubesize -0.5+fix;\\n\\n\\n//rotate\\nang=t1;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp*sang + zp*cang;\\nyq=yp;\\nzq=xp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n//rotate\\nang=t1*0.75;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp;\\nyq=yp*sang + zp*cang;\\nzq=yp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n\\nzp= zp+2;\\nx= xp/zp + 0.5;\\ny= yp/zp * 1.333 + 0.5;\\n\\na2= min( a2*(1+q8/2) , 1 );\\nr2= min( r2*(1+q8/4) , 1 );\\ng2= min( g2*(1+q8/3) , 1 );\\n\\nborder_a = min( border_a * (1+q8) , 1 );"},{"baseVals":{"enabled":1,"sides":6,"additive":1,"rad":0.158045,"r":0.3,"g":0.6,"b":1,"a":0.140001,"r2":0.4,"g2":0.5,"b2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"\\nt1=q1*0.25;\\n\\nsample = 1;\\nn= sample*6.283;\\ncubesize=q2;\\nfix=1/cubesize *0.5;\\ntm=q1*4+sample*4;\\n\\nxp= sin(tm)*cos(tm*3)*0.5+0.5;\\nyp= sin(tm*1.1)*sin(tm*4.1)*0.5+0.5;\\nzp= sin(tm*2.9)*cos(tm*1.77)*0.5+0.5;\\n\\nxp= int(xp*cubesize)/cubesize -0.5+fix;\\nyp= int(yp*cubesize)/cubesize -0.5+fix;\\nzp= int(zp*cubesize)/cubesize -0.5+fix;\\n\\n\\n//rotate\\nang=t1;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp*sang + zp*cang;\\nyq=yp;\\nzq=xp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n//rotate\\nang=t1*0.75;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp;\\nyq=yp*sang + zp*cang;\\nzq=yp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n\\nzp= zp+2;\\nx= xp/zp + 0.5;\\ny= yp/zp * 1.333 + 0.5;\\n\\n\\na= min(a*q8,1);\\n\\nrad= rad*(1+q8)"}],"waves":[{"baseVals":{"enabled":1,"thick":1,"additive":1,"r":0.05,"g":0.09},"init_eqs_eel":"","frame_eqs_eel":"\\nt1=q1*0.25;","point_eqs_eel":"n= sample*6.283;\\ncubesize=q2;\\nfix=1/cubesize *0.5;\\ntm=q1*4+sample*4;\\n\\nxp= sin(tm)*cos(tm*3)*0.5+0.5;\\nyp= sin(tm*1.1)*sin(tm*4.1)*0.5+0.5;\\nzp= sin(tm*2.9)*cos(tm*1.77)*0.5+0.5;\\n\\nxp= int(xp*cubesize)/cubesize -0.5+fix;\\nyp= int(yp*cubesize)/cubesize -0.5+fix;\\nzp= int(zp*cubesize)/cubesize -0.5+fix;\\n\\n\\n//rotate\\nang=t1;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp*sang + zp*cang;\\nyq=yp;\\nzq=xp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n//rotate\\nang=t1*0.75;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp;\\nyq=yp*sang + zp*cang;\\nzq=yp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n\\nzp= zp+2;\\nx= xp/zp + 0.5;\\ny= yp/zp * 1.333 + 0.5;"},{"baseVals":{"thick":1,"r":0.5,"g":0.5,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1=q1*0.25;","point_eqs_eel":"n= sample*6.283;\\ncubesize=q2;\\nfix=1/cubesize *0.5;\\ntm=q1*4+sample*4;\\n\\nxp= sin(tm)*cos(tm*3)*0.5+0.5;\\nyp= sin(tm*1.1)*sin(tm*4.1)*0.5+0.5;\\nzp= sin(tm*2.9)*cos(tm*1.77)*0.5+0.5;\\n\\nxp= int(xp*cubesize)/cubesize -0.5+fix;\\nyp= int(yp*cubesize)/cubesize -0.5+fix;\\nzp= int(zp*cubesize)/cubesize -0.5+fix;\\n\\n\\n//rotate\\nang=t1;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp*sang + zp*cang;\\nyq=yp;\\nzq=xp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n//rotate\\nang=t1*0.75;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp;\\nyq=yp*sang + zp*cang;\\nzq=yp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n\\nzp= zp+3;\\nx= xp/zp + 0.5;\\ny= yp/zp * 1.333 + 0.5;"},{"baseVals":{"enabled":1,"usedots":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"t1=q1*0.25;","point_eqs_eel":"n= sample*6.283;\\ncubesize=q2;\\nfix=1/cubesize *0.5;\\n\\nxp= rand(cubesize)/cubesize-0.5+fix;\\nyp= rand(cubesize)/cubesize-0.5+fix;\\nzp= rand(cubesize)/cubesize-0.5+fix;\\n\\n\\n//rotate\\nang=t1;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp*sang + zp*cang;\\nyq=yp;\\nzq=xp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n//rotate\\nang=t1*0.75;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp;\\nyq=yp*sang + zp*cang;\\nzq=yp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n\\nzp= zp+2;\\nx= xp/zp + 0.5;\\ny= yp/zp * 1.333 + 0.5;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"mv_x=64;mv_y=48;\\nnut=0;\\nstp=0;stq=0;\\nrtp=0;rtq=0;\\nwvr=0;\\ndecay=0;\\ndcsp=0;\\n\\nsize =4;\\nbc=0;","frame_eqs_eel":"decay=0.95;\\nzoom=1.005;\\n\\n\\nvol= (bass+mid+treb)*0.25;\\nvol = vol*vol;\\n\\nq8=vol;\\nmtime=mtime+vol*0.01*(75/fps);\\n\\nq7 = mtime;\\n\\nmonitor=512/8;\\n\\nwarp=0;\\nq1=mtime*0.9;\\n\\nbeat = above(vol,1);\\nbc = max(bc,0);\\nbc = if( equal(bc,0) , bc+beat , bc-(1/fps)/4 );\\n\\ntrigger = equal(bc,1);\\n\\nmonitor=size;\\n\\nsize = size + trigger;\\nsize = if( above(size,10) , 4 , size );\\n\\n\\nq2=int(size); //cubesize","pixel_eqs_eel":"","warp":"","comp":""}')},3507:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1,"decay":0.96,"echo_zoom":0.997,"echo_orient":1,"wave_mode":2,"wave_dots":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":0.001,"wave_scale":0.012,"wave_smoothing":0.9,"warpanimspeed":0.01,"warpscale":0.01,"warp":0.01,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"ob_size":0,"ob_r":0.11,"ob_b":0.1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":64,"mv_y":48,"mv_l":5,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"sides":32,"additive":1,"rad":0.19477,"r":0,"b":1,"a":0,"r2":0.63,"g2":0.7,"b2":1,"a2":0.07,"border_a":0,"enabled":0},"init_eqs_eel":"flip=1","frame_eqs_eel":"\\nflip=-flip;\\nlens_scale = flip*0.5+0.5;\\nlens_scale = 1 + lens_scale*2.4;\\npos_scale = if( equal(flip,-1) , 0.5 , lens_scale );\\n\\nt1=q1*0.25;\\n\\nsample = 1;\\nn= sample*6.283;\\ncubesize=q2;\\nfix=1/cubesize *0.5;\\ntm=q1*4+sample*4;\\n\\nxp= sin(tm)*cos(tm*3)*0.5+0.5;\\nyp= sin(tm*1.1)*sin(tm*4.1)*0.5+0.5;\\nzp= sin(tm*2.9)*cos(tm*1.77)*0.5+0.5;\\n\\nxp= int(xp*cubesize)/cubesize -0.5+fix;\\nyp= int(yp*cubesize)/cubesize -0.5+fix;\\nzp= int(zp*cubesize)/cubesize -0.5+fix;\\n\\n\\n//rotate\\nang=t1;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp*sang + zp*cang;\\nyq=yp;\\nzq=xp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n//rotate\\nang=t1*0.75;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp;\\nyq=yp*sang + zp*cang;\\nzq=yp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n\\nzp= zp+2;\\nx= -xp/zp*pos_scale + 0.5;\\ny= -yp/zp*pos_scale * 1.333 + 0.5;\\n\\nrad = rad*(1+q8/3)*lens_scale"},{"baseVals":{"sides":6,"rad":0.04378,"r":0.3,"g":0.6,"b":1,"g2":0,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"\\nt1=q1*0.25;\\n\\nsample = 1;\\nn= sample*6.283;\\ncubesize=q2;\\nfix=1/cubesize *0.5;\\ntm=q1*4+sample*4;\\n\\nxp= sin(tm)*cos(tm*3)*0.5+0.5;\\nyp= sin(tm*1.1)*sin(tm*4.1)*0.5+0.5;\\nzp= sin(tm*2.9)*cos(tm*1.77)*0.5+0.5;\\n\\nxp= int(xp*cubesize)/cubesize -0.5+fix;\\nyp= int(yp*cubesize)/cubesize -0.5+fix;\\nzp= int(zp*cubesize)/cubesize -0.5+fix;\\n\\n\\n//rotate\\nang=t1;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp*sang + zp*cang;\\nyq=yp;\\nzq=xp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n//rotate\\nang=t1*0.75;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp;\\nyq=yp*sang + zp*cang;\\nzq=yp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n\\nzp= zp+2;\\nx= xp/zp + 0.5;\\ny= yp/zp * 1.333 + 0.5;\\n\\n\\na= min(a+q8/2,1);\\nr= min(r*(1+q8) , 1 );\\ng= min(g*(1+q8) , 1 );\\n\\nr2= min(q8/2,1);\\ng2= min(q8/4,1);\\n\\nrad= rad*(1+q8/7)"},{"baseVals":{"sides":36,"rad":0.28428,"r":0,"a":0,"r2":0.23,"g2":0.54,"b2":1,"a2":0.05,"border_g":0.8,"border_b":0.4,"border_a":0.45,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"\\nt1=q1*0.25;\\n\\nsample = 1;\\nn= sample*6.283;\\ncubesize=q2;\\nfix=1/cubesize *0.5;\\ntm=q1*4+sample*4;\\n\\nxp= sin(tm)*cos(tm*3)*0.5+0.5;\\nyp= sin(tm*1.1)*sin(tm*4.1)*0.5+0.5;\\nzp= sin(tm*2.9)*cos(tm*1.77)*0.5+0.5;\\n\\nxp= int(xp*cubesize)/cubesize -0.5+fix;\\nyp= int(yp*cubesize)/cubesize -0.5+fix;\\nzp= int(zp*cubesize)/cubesize -0.5+fix;\\n\\n\\n//rotate\\nang=t1;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp*sang + zp*cang;\\nyq=yp;\\nzq=xp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n//rotate\\nang=t1*0.75;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp;\\nyq=yp*sang + zp*cang;\\nzq=yp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n\\nzp= zp+2;\\nx= xp/zp + 0.5;\\ny= yp/zp * 1.333 + 0.5;\\n\\na2= min( a2*(1+q8/2) , 1 );\\nr2= min( r2*(1+q8/4) , 1 );\\ng2= min( g2*(1+q8/3) , 1 );\\n\\nborder_a = min( border_a * (1+q8) , 1 );"},{"baseVals":{"sides":6,"additive":1,"rad":0.15804,"r":0.3,"g":0.6,"b":1,"a":0.14,"r2":0.4,"g2":0.5,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"\\nt1=q1*0.25;\\n\\nsample = 1;\\nn= sample*6.283;\\ncubesize=q2;\\nfix=1/cubesize *0.5;\\ntm=q1*4+sample*4;\\n\\nxp= sin(tm)*cos(tm*3)*0.5+0.5;\\nyp= sin(tm*1.1)*sin(tm*4.1)*0.5+0.5;\\nzp= sin(tm*2.9)*cos(tm*1.77)*0.5+0.5;\\n\\nxp= int(xp*cubesize)/cubesize -0.5+fix;\\nyp= int(yp*cubesize)/cubesize -0.5+fix;\\nzp= int(zp*cubesize)/cubesize -0.5+fix;\\n\\n\\n//rotate\\nang=t1;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp*sang + zp*cang;\\nyq=yp;\\nzq=xp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n//rotate\\nang=t1*0.75;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp;\\nyq=yp*sang + zp*cang;\\nzq=yp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n\\nzp= zp+2;\\nx= xp/zp + 0.5;\\ny= yp/zp * 1.333 + 0.5;\\n\\n\\na= min(a*q8,1);\\n\\nrad= rad*(1+q8)"}],"waves":[{"baseVals":{"enabled":1,"thick":1,"additive":1,"scaling":0.55045,"smoothing":1,"r":0.19,"g":0.15,"b":0.11},"init_eqs_eel":"","frame_eqs_eel":"t1=q1*0.25;\\na=if(above((treb+mid)*.3,1),1,treb*.5);","point_eqs_eel":"n= sample*6.283;\\ncubesize=q2;\\nfix=1/cubesize *0.5;\\ntm=q1*4+sample*4;\\n\\ntaille=bass*.25+0.3;\\nxp= sin(tm)*cos(tm*3)*taille+0.5;\\nyp= sin(tm*1.1)*sin(tm*4.1)*taille+0.5;\\nzp= sin(tm*2.9)*cos(tm*1.77)*taille+0.5;\\n\\nxp= int(xp*cubesize)/cubesize -0.5+fix;\\nyp= int(yp*cubesize)/cubesize -0.5+fix;\\nzp= int(zp*cubesize)/cubesize -0.5+fix;\\n\\n\\n//rotate\\nang=t1;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp*sang + zp*cang;\\nyq=yp;\\nzq=xp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n//rotate\\nang=t1*.75;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp;\\nyq=yp*sang + zp*cang;\\nzq=yp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n\\nzp= zp+2;\\nx= xp/zp + 0.5;\\ny= yp/zp * 1.333 + 0.5;"},{"baseVals":{"thick":1,"r":0.5,"g":0.5,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1=q1*0.25;","point_eqs_eel":"n= sample*6.283;\\ncubesize=q2;\\nfix=1/cubesize *0.5;\\ntm=q1*4+sample*4;\\n\\nxp= sin(tm)*cos(tm*3)*0.5+0.5;\\nyp= sin(tm*1.1)*sin(tm*4.1)*0.5+0.5;\\nzp= sin(tm*2.9)*cos(tm*1.77)*0.5+0.5;\\n\\nxp= int(xp*cubesize)/cubesize -0.5+fix;\\nyp= int(yp*cubesize)/cubesize -0.5+fix;\\nzp= int(zp*cubesize)/cubesize -0.5+fix;\\n\\n\\n//rotate\\nang=t1;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp*sang + zp*cang;\\nyq=yp;\\nzq=xp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n//rotate\\nang=t1*0.75;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp;\\nyq=yp*sang + zp*cang;\\nzq=yp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n\\nzp= zp+3;\\nx= xp/zp + 0.5;\\ny= yp/zp * 1.333 + 0.5;"},{"baseVals":{"usedots":1,"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1=q1*0.25;","point_eqs_eel":"n= sample*6.283;\\ncubesize=q2;\\nfix=1/cubesize *0.5;\\n\\nxp= rand(cubesize)/cubesize-0.5+fix;\\nyp= rand(cubesize)/cubesize-0.5+fix;\\nzp= rand(cubesize)/cubesize-0.5+fix;\\n\\n\\n//rotate\\nang=t1;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp*sang + zp*cang;\\nyq=yp;\\nzq=xp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n//rotate\\nang=t1*0.75;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp;\\nyq=yp*sang + zp*cang;\\nzq=yp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n\\nzp= zp+2;\\nx= xp/zp + 0.5;\\ny= yp/zp * 1.333 + 0.5;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"mv_x=64;mv_y=48;\\nnut=0;\\nstp=0;stq=0;\\nrtp=0;rtq=0;\\nwvr=0;\\n\\ndcsp=0;\\n\\nsize =6;\\nbc=0;","frame_eqs_eel":"decay=0.985;\\nvol= (bass+mid+treb)*0.25;\\nvol = vol*vol;\\n\\nq8=vol;\\nmtime=mtime+vol*0.01*(75/fps);\\n\\nq7 = mtime;\\n\\nmonitor=512/8;\\n\\nwarp=0;\\nq1=mtime*0.9;\\n\\nbeat = above(vol,1.5);\\nbc = max(bc,0);\\nbc = if( equal(bc,0) , bc+beat , bc-(1/fps)/4 );\\n\\ntrigger = equal(bc,1);\\n\\nmonitor=bc;\\n\\nsize = size + trigger;\\nsize = if( above(size,9) ,6 , size );\\nmainangle=q1*0.255*0.75;\\nkick= if(equal(trigger,1),2,1);\\ndx=cos(mainangle)*.003*kick;\\ndy=sin(mainangle)*.003*kick;\\nzoom=1-(vol*.005)*abs(cos(mainangle));\\nq2=int(size); //cubesize","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 8.0);\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 1.2)) + rand_frame.xy);\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1)).x;\\n  tmpvar_4.y = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1)).x;\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (mix (uv_orig, uv, vec2(0.4, 0.4)) + ((tmpvar_4 * texsize.zw) * 2.0));\\n  ret_1.x = (((texture (sampler_main, tmpvar_5).x - \\n    ((texture (sampler_main, tmpvar_5).x - ((texture (sampler_blur3, tmpvar_5).xyz * scale3) + bias3).x) * 0.02)\\n  ) - 0.004) + ((texture (sampler_noise_lq, tmpvar_3).xyz - 0.5) * 0.12)).x;\\n  ret_1.y = (texture (sampler_main, (mix (uv_orig, uv, vec2(0.3, 0.3)) + (\\n    ((texture (sampler_noise_lq, tmpvar_3).xyz - 0.5).xy * texsize.zw)\\n   * 3.0))).y - 0.004);\\n  ret_1.z = texture (sampler_main, uv).z;\\n  ret_1.z = (ret_1.z + ((\\n    (ret_1.z - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).z)\\n   * 0.1) - 0.015));\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = ret_1;\\n  ret = tmpvar_6.xyz;\\n }","comp":""}')},2159:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":5,"decay":0.95,"echo_zoom":1.006596,"echo_orient":1,"wave_mode":2,"wave_dots":1,"wave_brighten":0,"wave_a":0.019788,"wave_scale":0.011726,"wave_smoothing":0.9,"warpanimspeed":0.010284,"warpscale":0.01,"fshader":1,"warp":0.01,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"ob_size":0,"ob_r":0.11,"ob_b":0.1,"ib_size":0.005,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":31.999994,"mv_y":24.000004,"mv_dx":0.02,"mv_dy":-0.02,"mv_l":1,"mv_r":0.49,"mv_g":0.48,"mv_b":0.300001,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"textured":1,"rad":1.670888,"tex_ang":0.942478,"tex_zoom":0.534261,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0.17},"init_eqs_eel":"","frame_eqs_eel":"flux=q5*9;\\nfluxs=max(flux,0);\\nfluxs=min(fluxs,1);\\nadvflux=(q3*fluxs) + (-q3 * (1-fluxs));\\nadv=adv+advflux;\\nadvs=adv/256;\\n\\n\\nang=advs;\\nrad=1.671 + q3/25"},{"baseVals":{"sides":3,"x":0.35,"g":1,"b":1,"g2":0,"b2":0.1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"y=0.1 + q2*0.4;\\nrad=q2/2;\\nang=-q2*2"},{"baseVals":{"enabled":1,"sides":3,"x":0.59,"rad":0.444842,"r":0,"r2":0.1,"g2":0.05,"border_a":0},"init_eqs_eel":"dir = 3;\\nmover = 0;\\nrotator = .255","frame_eqs_eel":"ang = rotator;\\nx = if(equal(dir,1),1 - mover,if(equal(dir,1.5),.15,if(equal(dir,2),0,if(equal(dir,2.5),0, if(equal(dir,3),0+mover,if(equal(dir,3.5),1,if(equal(dir,4),1,1)))))));\\ny = if(equal(dir,1),1,if(equal(dir,1.5),1,if(equal(dir,2),1 - mover,if(equal(dir,2.5),0, if(equal(dir,3),0,if(equal(dir,3.5),0,if(equal(dir,4),0+mover,1)))))));\\nmover = if(equal(dir,1),mover + .005,if(equal(dir,1.5),0,if(equal(dir,2),mover + .005,if(equal(dir,2.5),0, if(equal(dir,3),mover+.005,if(equal(dir,3.5),0,if(equal(dir,4),mover+.005,0)))))));\\ndir = if(equal(dir,1),if(above(mover,.995),1.5,dir),if(equal(dir,1.5),if(below(rotator,-1.29),2,dir), if(equal(dir,2),if(above(mover,.995),2.5,dir),if(equal(dir,2.5),if(below(rotator,-2.85),3,dir), if(equal(dir,3),if(above(mover,.995),3.5,dir),if(equal(dir,3.5),if(below(rotator,-4.44),4,dir), if(equal(dir,4),if(above(mover,.995),4.5,dir),if(equal(dir,4.5),if(below(rotator,-5.94),1,dir),dir))))))));\\nrotator = if(equal(dir,1.5),if(above(rotator,-1.31),rotator - .05,rotator),if(equal(dir,2),-1.3, if(equal(dir,2.5),if(above(rotator,-2.87),rotator-.05,rotator),if(equal(dir,3),-2.86, if(equal(dir,3.5),if(above(rotator,-4.46),rotator-.05,rotator),if(equal(dir,4),-4.45, if(equal(dir,4.5),if(above(rotator,-5.97),rotator-.05,rotator),if(equal(dir,4),-5.96,.26))))))));\\n\\n//Ok, enough with the crazy ifs, we got our tram moving, now for some reaction.\\n\\nb = above(mid,1.5);\\nr2 = above(mid,1.5);\\ng2 = above(mid,1.5);\\nb2 = above(mid,1.5);"},{"baseVals":{"enabled":1,"sides":3,"additive":1,"x":0.84,"r":0.98,"g":1,"b":0.98,"a":0.3,"g2":0.09,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x=sin(time/2)*0.4 + 0.5;\\ny=sin(time)*0.4+0.5;\\nrad=(q1*q1)/2;;\\nang=q1*4;\\n\\nr=0.70 + (sin(time/2))*0.50;\\ng=0.70 + (sin(time/2 + 2)) * 0.50;\\nb=0.70 + (sin(time/2 + 4)) * 0.5"}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"mv_x=64;mv_y=48;\\nnut=0;\\nstp=0;stq=0;\\nrtp=0;rtq=0;\\nwvr=0;\\ndecay=0;\\ndcsp=0;\\nq1=0;q2=0;q3=0","frame_eqs_eel":"decay=1;\\nzoom=1.000;\\nspeed=0.80;\\nspeedinv=1-speed;\\nq1=(qa*speed + bass*speedinv);\\nq2=(qb*speed + mid *speedinv);\\nq3=(qc*speed + treb*speedinv);\\nqa=q1;\\nqb=q2;\\nqc=q3;\\nflux=sin(time/2);\\nq4=flux * 0.5 + 0.5;\\nq5=flux","pixel_eqs_eel":"","warp":"","comp":""}')},2414:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1.21,"decay":0.96,"echo_zoom":0.997,"echo_orient":1,"wave_mode":2,"wave_dots":1,"wave_brighten":0,"brighten":1,"invert":1,"wave_a":0.001,"wave_scale":0.012,"wave_smoothing":0.9,"warpanimspeed":0.037,"warpscale":0.015,"zoomexp":1.64463,"warp":0.033,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"ob_size":0.035,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":0,"mv_y":43.2,"mv_l":1,"mv_g":0.91,"mv_b":0.71,"mv_a":0},"shapes":[{"baseVals":{"sides":5,"textured":1,"rad":1.06779,"ang":0.75398,"tex_zoom":0.77977,"g":1,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ang=sin(q1*0.15);\\nx=sin(q1*0.5) * 0.05 + 0.5;\\ny=cos(q1*0.63)* 0.05 + 0.5"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":5,"additive":1,"rad":0.03809,"g":1,"b":1,"g2":0.6,"b2":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"tm=q1;\\n\\nxp=0;\\nyp=0.1;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2 )*0.5 +0.5;\\n\\nxq=xp;\\nsinang=sin(ang);cosang=cos(ang);\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3.1 + 0.5);\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2.3)*1.75 - 1.05;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp*sinang + zp*cosang;\\nyq=yp;\\nzq=xp*cosang - zp*sinang;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq;\\nyp=yq*cosang - zq*sinang;\\nzp=yq*sinang + zq*cosang;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\n\\n"}],"waves":[{"baseVals":{"enabled":1,"r":0.1,"b":0.7},"init_eqs_eel":"","frame_eqs_eel":"t1=sin(time)*0.5+0.5;\\nt2=sin(time+2.1)*0.5+0.5;\\nt3=sin(time+4.2)*0.5+0.5;\\n\\nt4=sin(time+1.1)*0.5+0.5;\\nt5=sin(time+3.1)*0.5+0.5;\\nt6=sin(time+5.2)*0.5+0.5;","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2 )*0.5 +0.5;\\n\\nxq=xp;\\nsinang=sin(ang);cosang=cos(ang);\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3.1 + 0.5);\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2.3)*1.75 - 1.05;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp*sinang + zp*cosang;\\nyq=yp;\\nzq=xp*cosang - zp*sinang;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq;\\nyp=yq*cosang - zq*sinang;\\nzp=yq*sinang + zq*cosang;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=if( equal(q8,1) , (1-sample) , sample);\\na=a*a;\\n\\nb=b+pow(1-sample,2)*0.3;\\n\\n\\n\\nr1=t1;\\ng1=t2;\\nb1=t3;\\nr2=t4;\\ng2=t5;\\nb2=t6;\\n\\nr=r1*flip + r2*(1-flip);\\ng=g1*flip + g2*(1-flip);\\nb=b1*flip + b2*(1-flip);"},{"baseVals":{"enabled":1,"r":0.2,"b":0.6},"init_eqs_eel":"","frame_eqs_eel":"t1=sin(time)*0.5+0.5;\\nt2=sin(time+2.1)*0.5+0.5;\\nt3=sin(time+4.2)*0.5+0.5;\\n\\nt4=sin(time+1.1)*0.5+0.5;\\nt5=sin(time+3.1)*0.5+0.5;\\nt6=sin(time+5.2)*0.5+0.5;","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2 +0.1;\\nyp=-yp;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2)*0.5 +0.5;\\n\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3.1 + 0.5);\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2.3)*1.75 - 1.05;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp*sinang + zp*cosang;\\nyq=yp;\\nzq=xp*cosang - zp*sinang;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq;\\nyp=yq*cosang - zq*sinang;\\nzp=yq*sinang + zq*cosang;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=if( equal(q8,1) , (1-sample) , sample);\\na=a*a;\\n\\n\\nb=b+pow(1-sample,2)*0.3;\\n\\nr1=t1;\\ng1=t2;\\nb1=t3;\\nr2=t4;\\ng2=t5;\\nb2=t6;\\n\\nr=r1*flip + r2*(1-flip);\\ng=g1*flip + g2*(1-flip);\\nb=b1*flip + b2*(1-flip);"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1,"g":0.6,"b":0.1},"init_eqs_eel":"","frame_eqs_eel":"t1=sin(time)*0.5+0.5;\\nt2=sin(time+2.1)*0.5+0.5;\\nt3=sin(time+4.2)*0.5+0.5;\\n\\nt4=sin(time+1.1)*0.5+0.5;\\nt5=sin(time+3.1)*0.5+0.5;\\nt6=sin(time+5.2)*0.5+0.5;\\n\\n\\nt8= int( sin(time*2)*2 + 3);","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2)*0.5 +0.5;\\n\\nxq=xp;\\nsinang=sin(ang);cosang=cos(ang);\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8 + 1;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3.1 + 0.5);\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2.3)*1.75 - 1.05;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp*sinang + zp*cosang;\\nyq=yp;\\nzq=xp*cosang - zp*sinang;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq;\\nyp=yq*cosang - zq*sinang;\\nzp=yq*sinang + zq*cosang;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\na=if( equal(q8,1) , (1-sample) , sample);\\n\\n\\na=a* above( sin(tm*128*t8) , 0 );\\n\\n\\nr=t4;\\ng=t5;\\nb=t6;\\n"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1,"g":0.3,"b":0.1},"init_eqs_eel":"","frame_eqs_eel":"t1=sin(time)*0.5+0.5;\\nt2=sin(time+2.1)*0.5+0.5;\\nt3=sin(time+4.2)*0.5+0.5;\\n\\nt4=sin(time+1.1)*0.5+0.5;\\nt5=sin(time+3.1)*0.5+0.5;\\nt6=sin(time+5.2)*0.5+0.5;\\n\\n\\nt8= int( sin(time*2)*2 + 3);","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2 +0.1;\\nyp=-yp;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2)*0.5 +0.5;\\n\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8+1;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3.1 + 0.5);\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2.3)*1.75 - 1.05;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp*sinang + zp*cosang;\\nyq=yp;\\nzq=xp*cosang - zp*sinang;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq;\\nyp=yq*cosang - zq*sinang;\\nzp=yq*sinang + zq*cosang;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=if( equal(q8,1) , (1-sample) , sample);\\na=a*a;\\n\\na=a* above( sin(tm*128*t8) , 0 );\\n\\n\\nr=t4;\\ng=t5;\\nb=t6;"}],"init_eqs_eel":"mv_x=64;mv_y=48;\\nnut=0;\\nstp=0;stq=0;\\nrtp=0;rtq=0;\\nwvr=0;\\ndecay=0;\\ndcsp=0;\\nwarp=0","frame_eqs_eel":"//krash\'s beat detection code\\nvolume = 0.3*(bass+mid+att);\\nbeatrate = equal(beatrate,0) + (1-equal(beatrate,0))*(below(volume,0.01) + (1-below(volume,0.01))*beatrate);\\nlastbeat = lastbeat + equal(lastbeat,0)*time;\\nmeanbass_att = 0.1*(meanbass_att*9 + bass_att);\\npeakbass_att = max(bass_att,peakbass_att);\\nbeatrate = max(if(beat,if(below(time-lastbeat,2*beatrate),0.1*(beatrate*9 + time - lastbeat),beatrate),beatrate),0.1);\\npeakbass_att = beat*bass_att + (1-beat)*peakbass_att*(above(time - lastbeat, 2*beatrate)*0.95 + (1-above(time - lastbeat, 2*beatrate))*0.995);\\nlastbeat = beat*time + (1-beat)*lastbeat;\\npeakbass_att = max(peakbass_att,1.1*meanbass_att);\\nbeat = above(volume,0.8)*below(peakbass_att - bass_att, 0.05*peakbass_att)*above(time - lastbeat, 0.1 + 0.5*(beatrate - 0.1));\\nbeatcounter = beatcounter + beat;\\nmode = if(beat*equal(beatcounter%2,0),1-mode,mode);\\nflip = 2*mode-1;\\n//monitor=flip;\\nq8=flip;\\n\\n\\ndecay=1;\\nzoom=1.005;\\n\\nvol=(bass_att+mid_att+treb_att)*0.25;\\nvol=vol*vol;\\nmtime=mtime+vol*0.1;\\nmtime2= mtime2+vol*0.1*flip*(55/fps);\\n\\nq1=mtime2*0.4;\\nq2=mtime*.4;\\n\\n\\nwarp=0.0;\\n//volume = 0.3*(bass+mid+att);\\n\\nq31 = .5 + .5*sin(0.05*mtime);\\nq32 = .5 + .5*cos(0.05*mtime);\\nq30 = .8+.4*sin(0.033245*mtime);\\nq29 = .8+.4*sin(0.0227*mtime);\\nq28 = .8+.4*sin(0.0435*mtime);\\n\\nob_r = .33*q30;\\nob_g = .33*q29;\\nob_b = .33*q28;","pixel_eqs_eel":"//tm=time+(sin(time)*rad);\\nvar=tan(q2)*treb_att*treb_att;\\n//monitor = var;\\nzoom=1+(rad/40)+(var/40);\\nrot=((rad/100)*var)*sin(q2);","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (max (texture (sampler_main, uv).xyz, texture (sampler_main, (vec2(1.0, 1.0) - uv)).xyz) * 0.98);\\n  ret = tmpvar_1.xyz;\\n }","comp":" shader_body { \\n  vec3 plastic_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 8.0);\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = q31;\\n  tmpvar_5.y = q32;\\n  vec3 tmpvar_6;\\n  tmpvar_6.x = (4.0 * q30);\\n  tmpvar_6.y = (4.0 * q29);\\n  tmpvar_6.z = (4.0 * q28);\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = tmpvar_3.x;\\n  tmpvar_7.y = tmpvar_4.x;\\n  vec2 x_8;\\n  x_8 = ((uv - (tmpvar_7 * 4.0)) - tmpvar_5);\\n  plastic_1.x = (tmpvar_6.x / (1.0 + (16.0 * \\n    pow (sqrt(dot (x_8, x_8)), 0.5)\\n  )));\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = tmpvar_3.y;\\n  tmpvar_9.y = tmpvar_4.y;\\n  vec2 x_10;\\n  x_10 = ((uv - (tmpvar_9 * 4.0)) - tmpvar_5);\\n  plastic_1.y = (tmpvar_6.y / (1.0 + (16.0 * \\n    pow (sqrt(dot (x_10, x_10)), 0.5)\\n  )));\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = tmpvar_3.z;\\n  tmpvar_11.y = tmpvar_4.z;\\n  vec2 x_12;\\n  x_12 = ((uv - (tmpvar_11 * 4.0)) - tmpvar_5);\\n  plastic_1.z = (tmpvar_6.z / (1.0 + (16.0 * \\n    pow (sqrt(dot (x_12, x_12)), 0.5)\\n  )));\\n  vec4 tmpvar_13;\\n  tmpvar_13.w = 1.0;\\n  tmpvar_13.xyz = (plastic_1 * texture (sampler_main, uv).xyz);\\n  ret = tmpvar_13.xyz;\\n }"}')},9570:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":5,"gammaadj":1,"decay":0.96,"echo_zoom":1.006596,"echo_orient":1,"wave_mode":2,"wave_dots":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":0.001,"wave_scale":0.011726,"wave_smoothing":0.9,"warpanimspeed":0.037492,"warpscale":0.014889,"warp":0.033004,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"ob_size":0,"ob_r":0.11,"ob_b":0.1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":3,"mv_y":2,"mv_dx":0.02,"mv_dy":-0.02,"mv_l":0.15,"mv_r":0.49,"mv_g":0.48,"mv_b":0.300001,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":5,"textured":1,"rad":1.06779,"ang":0.753982,"tex_zoom":0.779769,"g":1,"b":1,"r2":1,"b2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ang=sin(q1*0.15);\\nx=sin(q1*0.5) * 0.05 + 0.5;\\ny=cos(q1*0.63)* 0.05 + 0.5"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"thick":1,"r":0.1,"b":0.7},"init_eqs_eel":"","frame_eqs_eel":"t1=sin(time)*0.5+0.5;\\nt2=sin(time+2.1)*0.5+0.5;\\nt3=sin(time+4.2)*0.5+0.5;\\n\\nt4=sin(-time+1.1)*0.5+0.5;\\nt5=sin(-time+3.1)*0.5+0.5;\\nt6=sin(-time+5.2)*0.5+0.5;","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2)*0.5 +0.5;\\n\\nxq=xp;\\nsinang=sin(ang);cosang=cos(ang);\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3.1 + 0.5);\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2.3)*1.75 - 1.05;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp*sinang + zp*cosang;\\nyq=yp;\\nzq=xp*cosang - zp*sinang;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq;\\nyp=yq*cosang - zq*sinang;\\nzp=yq*sinang + zq*cosang;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=(1-sample);\\n\\nb=b+pow(1-sample,2)*0.3;\\n\\n\\n\\nr1=t1;\\ng1=t2;\\nb1=t3;\\nr2=t4;\\ng2=t5;\\nb2=t6;\\n\\nr=r1*flip + r2*(1-flip);\\ng=g1*flip + g2*(1-flip);\\nb=b1*flip + b2*(1-flip);"},{"baseVals":{"enabled":1,"thick":1,"r":0.2,"b":0.6},"init_eqs_eel":"","frame_eqs_eel":"t1=sin(time)*0.5+0.5;\\nt2=sin(time+2.1)*0.5+0.5;\\nt3=sin(time+4.2)*0.5+0.5;\\n\\nt4=sin(-time+1.1)*0.5+0.5;\\nt5=sin(-time+3.1)*0.5+0.5;\\nt6=sin(-time+5.2)*0.5+0.5;","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2 +0.1;\\nyp=-yp;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2)*0.5 +0.5;\\n\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3.1 + 0.5);\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2.3)*1.75 - 1.05;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp*sinang + zp*cosang;\\nyq=yp;\\nzq=xp*cosang - zp*sinang;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq;\\nyp=yq*cosang - zq*sinang;\\nzp=yq*sinang + zq*cosang;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=(1-sample);\\n\\n\\nb=b+pow(1-sample,2)*0.3;\\n\\nr1=t1;\\ng1=t2;\\nb1=t3;\\nr2=t4;\\ng2=t5;\\nb2=t6;\\n\\nr=r1*flip + r2*(1-flip);\\ng=g1*flip + g2*(1-flip);\\nb=b1*flip + b2*(1-flip);"},{"baseVals":{"thick":1,"additive":1,"g":0.6,"b":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\\ntm=q1;\\nphs=-sample*0.5;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2+phs - 2)*0.5 +0.5 + 2;\\n\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\n\\nang=cos(tm*2+phs - 2)*1.5 ;\\nxp=xq*sin(ang) + yq*cos(ang);\\nyp=xq*cos(ang) - yq*sin(ang);\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2+phs - 0.5)*1.5;\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3 + 0.5 +phs + 0.5);\\nxp=xq*sin(ang) + yq*cos(ang);\\nyp=xq*cos(ang) - yq*sin(ang);\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2+phs)*0.75 - 1.05;\\nxq=xp*sin(ang) + zp*cos(ang);\\nyq=yp;\\nzq=xp*cos(ang) - zp*sin(ang);\\n\\n//upper arm up down;\\nang=cos(tm+phs)*0.5 - 0.5;\\nxp=xq;\\nyp=yq*cos(ang) - zq*sin(ang);\\nzp=yq*sin(ang) + zq*cos(ang);\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=(1-sample)*0.05\\n"},{"baseVals":{"thick":1,"additive":1,"g":0.3,"b":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\\ntm=q1 ;\\nphs=-sample*0.5;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2+phs-2)*0.5 +0.5 + 2;\\n\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\n\\nang=cos(tm*2+phs-2)*1.5;\\nxp=xq*sin(ang) + yq*cos(ang);\\nyp=xq*cos(ang) - yq*sin(ang);\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2+phs-0.5)*1.5;\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3 + 0.5 +phs);\\nxp=xq*sin(ang) + yq*cos(ang);\\nyp=xq*cos(ang) - yq*sin(ang);\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2+phs)*0.75 - 1.05;\\nxq=xp*sin(ang) + zp*cos(ang);\\nyq=yp;\\nzq=xp*cos(ang) - zp*sin(ang);\\n\\n//upper arm up down;\\nang=cos(tm+phs)*0.5 - 0.5;\\nxp=xq;\\nyp=yq*cos(ang) - zq*sin(ang);\\nzp=yq*sin(ang) + zq*cos(ang);\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=-xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=(1-sample)*0.05;\\n"}],"init_eqs_eel":"mv_x=64;mv_y=48;\\nnut=0;\\nstp=0;stq=0;\\nrtp=0;rtq=0;\\nwvr=0;\\ndecay=0;\\ndcsp=0","frame_eqs_eel":"decay=0.98;\\nzoom=1.002;\\n\\nvol=(bass_att+mid_att+treb_att)*0.25;\\nvol=vol*vol;\\nmtime=mtime+vol*0.1*(75/fps);\\n\\nq1=mtime*0.4;","pixel_eqs_eel":"","warp":"","comp":""}')},7287:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":0,"gammaadj":1.21,"decay":0.96,"echo_zoom":0.99663,"echo_orient":1,"wave_mode":2,"wave_dots":1,"wave_brighten":0,"brighten":1,"invert":1,"wave_a":0.001,"wave_scale":0.011726,"wave_smoothing":0.9,"warpanimspeed":0.037492,"warpscale":0.014889,"warp":0.033004,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"ob_size":0.055,"ob_r":1,"ob_g":1,"ob_b":1,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":0,"mv_y":43.199997,"mv_l":1,"mv_g":0.91,"mv_b":0.71,"mv_a":0},"shapes":[{"baseVals":{"sides":5,"textured":1,"rad":1.06779,"ang":0.753982,"tex_zoom":0.779769,"g":1,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ang=sin(q1*0.15);\\nx=sin(q1*0.5) * 0.05 + 0.5;\\ny=cos(q1*0.63)* 0.05 + 0.5"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":5,"additive":1,"rad":0.038091,"g":1,"b":1,"g2":0.6,"b2":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"tm=q1;\\n\\nxp=0;\\nyp=0.1;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2 )*0.5 +0.5;\\n\\nxq=xp;\\nsinang=sin(ang);cosang=cos(ang);\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3.1 + 0.5);\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2.3)*1.75 - 1.05;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp*sinang + zp*cosang;\\nyq=yp;\\nzq=xp*cosang - zp*sinang;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq;\\nyp=yq*cosang - zq*sinang;\\nzp=yq*sinang + zq*cosang;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\n\\n"}],"waves":[{"baseVals":{"enabled":1,"r":0.1,"b":0.7},"init_eqs_eel":"","frame_eqs_eel":"t1=sin(time)*0.5+0.5;\\nt2=sin(time+2.1)*0.5+0.5;\\nt3=sin(time+4.2)*0.5+0.5;\\n\\nt4=sin(time+1.1)*0.5+0.5;\\nt5=sin(time+3.1)*0.5+0.5;\\nt6=sin(time+5.2)*0.5+0.5;","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2 )*0.5 +0.5;\\n\\nxq=xp;\\nsinang=sin(ang);cosang=cos(ang);\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3.1 + 0.5);\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2.3)*1.75 - 1.05;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp*sinang + zp*cosang;\\nyq=yp;\\nzq=xp*cosang - zp*sinang;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq;\\nyp=yq*cosang - zq*sinang;\\nzp=yq*sinang + zq*cosang;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=if( equal(q8,1) , (1-sample) , sample);\\na=a*a;\\n\\nb=b+pow(1-sample,2)*0.3;\\n\\n\\n\\nr1=t1;\\ng1=t2;\\nb1=t3;\\nr2=t4;\\ng2=t5;\\nb2=t6;\\n\\nr=r1*flip + r2*(1-flip);\\ng=g1*flip + g2*(1-flip);\\nb=b1*flip + b2*(1-flip);"},{"baseVals":{"enabled":1,"r":0.2,"b":0.6},"init_eqs_eel":"","frame_eqs_eel":"t1=sin(time)*0.5+0.5;\\nt2=sin(time+2.1)*0.5+0.5;\\nt3=sin(time+4.2)*0.5+0.5;\\n\\nt4=sin(time+1.1)*0.5+0.5;\\nt5=sin(time+3.1)*0.5+0.5;\\nt6=sin(time+5.2)*0.5+0.5;","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2 +0.1;\\nyp=-yp;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2)*0.5 +0.5;\\n\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3.1 + 0.5);\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2.3)*1.75 - 1.05;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp*sinang + zp*cosang;\\nyq=yp;\\nzq=xp*cosang - zp*sinang;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq;\\nyp=yq*cosang - zq*sinang;\\nzp=yq*sinang + zq*cosang;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=if( equal(q8,1) , (1-sample) , sample);\\na=a*a;\\n\\n\\nb=b+pow(1-sample,2)*0.3;\\n\\nr1=t1;\\ng1=t2;\\nb1=t3;\\nr2=t4;\\ng2=t5;\\nb2=t6;\\n\\nr=r1*flip + r2*(1-flip);\\ng=g1*flip + g2*(1-flip);\\nb=b1*flip + b2*(1-flip);"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1,"g":0.6,"b":0.1},"init_eqs_eel":"","frame_eqs_eel":"t1=sin(time)*0.5+0.5;\\nt2=sin(time+2.1)*0.5+0.5;\\nt3=sin(time+4.2)*0.5+0.5;\\n\\nt4=sin(time+1.1)*0.5+0.5;\\nt5=sin(time+3.1)*0.5+0.5;\\nt6=sin(time+5.2)*0.5+0.5;\\n\\n\\nt8= int( sin(time*2)*2 + 3);","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2)*0.5 +0.5;\\n\\nxq=xp;\\nsinang=sin(ang);cosang=cos(ang);\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8 + 1;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3.1 + 0.5);\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2.3)*1.75 - 1.05;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp*sinang + zp*cosang;\\nyq=yp;\\nzq=xp*cosang - zp*sinang;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq;\\nyp=yq*cosang - zq*sinang;\\nzp=yq*sinang + zq*cosang;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\na=if( equal(q8,1) , (1-sample) , sample);\\n\\n\\na=a* above( sin(tm*128*t8) , 0 );\\n\\n\\nr=t4;\\ng=t5;\\nb=t6;\\n"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1,"g":0.3,"b":0.1},"init_eqs_eel":"","frame_eqs_eel":"t1=sin(time)*0.5+0.5;\\nt2=sin(time+2.1)*0.5+0.5;\\nt3=sin(time+4.2)*0.5+0.5;\\n\\nt4=sin(time+1.1)*0.5+0.5;\\nt5=sin(time+3.1)*0.5+0.5;\\nt6=sin(time+5.2)*0.5+0.5;\\n\\n\\nt8= int( sin(time*2)*2 + 3);","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2 +0.1;\\nyp=-yp;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2)*0.5 +0.5;\\n\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8+1;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3.1 + 0.5);\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2.3)*1.75 - 1.05;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp*sinang + zp*cosang;\\nyq=yp;\\nzq=xp*cosang - zp*sinang;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq;\\nyp=yq*cosang - zq*sinang;\\nzp=yq*sinang + zq*cosang;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=if( equal(q8,1) , (1-sample) , sample);\\na=a*a;\\n\\na=a* above( sin(tm*128*t8) , 0 );\\n\\n\\nr=t4;\\ng=t5;\\nb=t6;"}],"init_eqs_eel":"mv_x=64;mv_y=48;\\nnut=0;\\nstp=0;stq=0;\\nrtp=0;rtq=0;\\nwvr=0;\\ndecay=0;\\ndcsp=0;\\nwarp=0","frame_eqs_eel":"//krash\'s beat detection code\\nvolume = 0.3*(bass+mid+att);\\nbeatrate = equal(beatrate,0) + (1-equal(beatrate,0))*(below(volume,0.01) + (1-below(volume,0.01))*beatrate);\\nlastbeat = lastbeat + equal(lastbeat,0)*time;\\nmeanbass_att = 0.1*(meanbass_att*9 + bass_att);\\npeakbass_att = max(bass_att,peakbass_att);\\nbeatrate = max(if(beat,if(below(time-lastbeat,2*beatrate),0.1*(beatrate*9 + time - lastbeat),beatrate),beatrate),0.1);\\npeakbass_att = beat*bass_att + (1-beat)*peakbass_att*(above(time - lastbeat, 2*beatrate)*0.95 + (1-above(time - lastbeat, 2*beatrate))*0.995);\\nlastbeat = beat*time + (1-beat)*lastbeat;\\npeakbass_att = max(peakbass_att,1.1*meanbass_att);\\nbeat = above(volume,0.8)*below(peakbass_att - bass_att, 0.05*peakbass_att)*above(time - lastbeat, 0.1 + 0.5*(beatrate - 0.1));\\nbeatcounter = beatcounter + beat;\\nmode = if(beat*equal(beatcounter%2,0),1-mode,mode);\\nflip = 2*mode-1;\\nmonitor=flip;\\nq8=flip;\\n\\n\\ndecay=1;\\nzoom=1.002;\\n\\nvol=(bass_att+mid_att+treb_att)*0.25;\\nvol=vol*vol;\\nmtime=mtime+vol*0.1*flip*(55/fps);\\n\\nq1=mtime*0.4;\\n\\nwarp=0.0","pixel_eqs_eel":"//tm=time+(sin(time)*rad);\\nvar=tan(time)*treb*treb;\\n\\nzoom=1+(rad/40)+(var/40);\\n//rot=((rad/100)*var)*sin(time);","warp":"","comp":""}')},7804:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":5,"gammaadj":1.56,"decay":0.96,"echo_zoom":0.99663,"echo_alpha":0.5,"echo_orient":1,"wave_mode":2,"wave_dots":1,"wave_brighten":0,"brighten":1,"darken":1,"wave_a":0.001,"wave_scale":0.011726,"wave_smoothing":0.9,"warpanimspeed":0.037492,"warpscale":0.014889,"warp":0.033004,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"ob_size":0.005,"ib_size":0.005,"ib_r":0,"ib_g":1,"ib_b":0,"mv_x":0,"mv_y":43.199997,"mv_l":1,"mv_g":0.91,"mv_b":0.71,"mv_a":0},"shapes":[{"baseVals":{"sides":5,"textured":1,"rad":1.06779,"ang":0.753982,"tex_zoom":0.779769,"g":1,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ang=sin(q1*0.15);\\nx=sin(q1*0.5) * 0.05 + 0.5;\\ny=cos(q1*0.63)* 0.05 + 0.5"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":5,"additive":1,"rad":0.038091,"g":1,"b":1,"g2":0.6,"b2":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"tm=q1;\\n\\nxp=0;\\nyp=0.1;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2 )*0.5 +0.5;\\n\\nxq=xp;\\nsinang=sin(ang);cosang=cos(ang);\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3.1 + 0.5);\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2.3)*1.75 - 1.05;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp*sinang + zp*cosang;\\nyq=yp;\\nzq=xp*cosang - zp*sinang;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq;\\nyp=yq*cosang - zq*sinang;\\nzp=yq*sinang + zq*cosang;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\n\\n"}],"waves":[{"baseVals":{"enabled":1,"r":0.1,"b":0.7},"init_eqs_eel":"","frame_eqs_eel":"t1=sin(time)*0.5+0.5;\\nt2=sin(time+2.1)*0.5+0.5;\\nt3=sin(time+4.2)*0.5+0.5;\\n\\nt4=sin(time+1.1)*0.5+0.5;\\nt5=sin(time+3.1)*0.5+0.5;\\nt6=sin(time+5.2)*0.5+0.5;","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2 )*0.5 +0.5;\\n\\nxq=xp;\\nsinang=sin(ang);cosang=cos(ang);\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3.1 + 0.5);\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2.3)*1.75 - 1.05;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp*sinang + zp*cosang;\\nyq=yp;\\nzq=xp*cosang - zp*sinang;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq;\\nyp=yq*cosang - zq*sinang;\\nzp=yq*sinang + zq*cosang;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=if( equal(q8,1) , (1-sample) , sample);\\na=a*a;\\n\\nb=b+pow(1-sample,2)*0.3;\\n\\n\\n\\nr1=t1;\\ng1=t2;\\nb1=t3;\\nr2=t4;\\ng2=t5;\\nb2=t6;\\n\\nr=r1*flip + r2*(1-flip);\\ng=g1*flip + g2*(1-flip);\\nb=b1*flip + b2*(1-flip);"},{"baseVals":{"enabled":1,"r":0.2,"b":0.6},"init_eqs_eel":"","frame_eqs_eel":"t1=sin(time)*0.5+0.5;\\nt2=sin(time+2.1)*0.5+0.5;\\nt3=sin(time+4.2)*0.5+0.5;\\n\\nt4=sin(time+1.1)*0.5+0.5;\\nt5=sin(time+3.1)*0.5+0.5;\\nt6=sin(time+5.2)*0.5+0.5;","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2 +0.1;\\nyp=-yp;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2)*0.5 +0.5;\\n\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3.1 + 0.5);\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2.3)*1.75 - 1.05;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp*sinang + zp*cosang;\\nyq=yp;\\nzq=xp*cosang - zp*sinang;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq;\\nyp=yq*cosang - zq*sinang;\\nzp=yq*sinang + zq*cosang;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=if( equal(q8,1) , (1-sample) , sample);\\na=a*a;\\n\\n\\nb=b+pow(1-sample,2)*0.3;\\n\\nr1=t1;\\ng1=t2;\\nb1=t3;\\nr2=t4;\\ng2=t5;\\nb2=t6;\\n\\nr=r1*flip + r2*(1-flip);\\ng=g1*flip + g2*(1-flip);\\nb=b1*flip + b2*(1-flip);"},{"baseVals":{"r":0.1,"b":0.7,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1=sin(time)*0.5+0.5;\\nt2=sin(time+2.1)*0.5+0.5;\\nt3=sin(time+4.2)*0.5+0.5;\\n\\nt4=sin(time+1.1)*0.5+0.5;\\nt5=sin(time+3.1)*0.5+0.5;\\nt6=sin(time+5.2)*0.5+0.5;","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2 )*0.5 +0.5;\\n\\nxq=xp;\\nsinang=sin(ang);cosang=cos(ang);\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3.1 + 0.5);\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2.3)*1.75 - 1.05;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp*sinang + zp*cosang;\\nyq=yp;\\nzq=xp*cosang - zp*sinang;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq;\\nyp=yq*cosang - zq*sinang;\\nzp=yq*sinang + zq*cosang;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=-xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=if( equal(q8,1) , (1-sample) , sample);\\na=a*a;\\n\\nb=b+pow(1-sample,2)*0.3;\\n\\n\\n\\nr1=t1;\\ng1=t2;\\nb1=t3;\\nr2=t4;\\ng2=t5;\\nb2=t6;\\n\\nr=r1*flip + r2*(1-flip);\\ng=g1*flip + g2*(1-flip);\\nb=b1*flip + b2*(1-flip);"},{"baseVals":{"r":0.2,"b":0.6,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1=sin(time)*0.5+0.5;\\nt2=sin(time+2.1)*0.5+0.5;\\nt3=sin(time+4.2)*0.5+0.5;\\n\\nt4=sin(time+1.1)*0.5+0.5;\\nt5=sin(time+3.1)*0.5+0.5;\\nt6=sin(time+5.2)*0.5+0.5;","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2 +0.1;\\nyp=-yp;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2)*0.5 +0.5;\\n\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3.1 + 0.5);\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2.3)*1.75 - 1.05;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp*sinang + zp*cosang;\\nyq=yp;\\nzq=xp*cosang - zp*sinang;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq;\\nyp=yq*cosang - zq*sinang;\\nzp=yq*sinang + zq*cosang;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=-xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=if( equal(q8,1) , (1-sample) , sample);\\na=a*a;\\n\\n\\nb=b+pow(1-sample,2)*0.3;\\n\\nr1=t1;\\ng1=t2;\\nb1=t3;\\nr2=t4;\\ng2=t5;\\nb2=t6;\\n\\nr=r1*flip + r2*(1-flip);\\ng=g1*flip + g2*(1-flip);\\nb=b1*flip + b2*(1-flip);"}],"init_eqs_eel":"mv_x=64;mv_y=48;\\nnut=0;\\nstp=0;stq=0;\\nrtp=0;rtq=0;\\nwvr=0;\\ndecay=0;\\ndcsp=0;\\nwarp=0","frame_eqs_eel":"zoom=1;\\n//krash\'s beat detection code\\nvolume = 0.3*(bass+mid+att);\\nbeatrate = equal(beatrate,0) + (1-equal(beatrate,0))*(below(volume,0.01) + (1-below(volume,0.01))*beatrate);\\nlastbeat = lastbeat + equal(lastbeat,0)*time;\\nmeanbass_att = 0.1*(meanbass_att*9 + bass_att);\\npeakbass_att = max(bass_att,peakbass_att);\\nbeatrate = max(if(beat,if(below(time-lastbeat,2*beatrate),0.1*(beatrate*9 + time - lastbeat),beatrate),beatrate),0.1);\\npeakbass_att = beat*bass_att + (1-beat)*peakbass_att*(above(time - lastbeat, 2*beatrate)*0.95 + (1-above(time - lastbeat, 2*beatrate))*0.995);\\nlastbeat = beat*time + (1-beat)*lastbeat;\\npeakbass_att = max(peakbass_att,1.1*meanbass_att);\\nbeat = above(volume,0.8)*below(peakbass_att - bass_att, 0.05*peakbass_att)*above(time - lastbeat, 0.1 + 0.5*(beatrate - 0.1));\\nbeatcounter = beatcounter + beat;\\nmode = if(beat*equal(beatcounter%2,0),1-mode,mode);\\nflip = 2*mode-1;\\nmonitor=flip;\\nq8=flip;\\n\\nangadv=angadv+beat;\\nangadv=if( above(angadv,5) , 2 , angadv );\\nq7=angadv;\\n\\n\\ndecay=0.95;\\nzoom=1.002;\\n\\nvol=(bass_att+mid_att+treb_att)*0.25;\\nvol=vol*vol;\\nmtime=mtime+vol*0.1*flip*(37/fps);\\n\\nq1=mtime*0.4;\\n\\nwarp=0.0;\\n\\ncx=sin(mtime*0.2)*0.4 + 0.5;\\ncy=sin(mtime*0.33);\\ncys=sign(cy);\\ncy=cy*cy*cys;\\ncy=cy*0.4+0.5;\\n\\n//cx=sin(time)*0.5+0.5;\\n//cy=cos(time)*0.5+0.5;\\n//cx=0.5;\\n//cy=0.5;\\nrot=sin(time*0.25)*0.31","pixel_eqs_eel":"//tm=time+(sin(time)*rad);\\n//var=tan(time)*treb;\\ntbr=0.7+treb*0.3;\\nvar=-2*tbr*0.75;\\n\\nag=atan( (y-0.5-(cy-0.5))/(x-0.5-(cx-0.5)) )*1.75;\\nstar=sin(ang*q7)*tbr;\\n\\nrdd=max( abs(x-0.5) , abs(y-0.5) )*4 ;\\nzm=1+(rdd/40)+(var/40)+star*0.003 ;\\n\\n//sx=zm;\\n//sy=zm;\\n//sx=1+star*0.1;sy=1+star*0.1;\\nsx=0.8;sy=sx;\\n//rot=star*0.01*tbr","warp":"","comp":""}')},2821:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":0,"gammaadj":1.980001,"decay":0.96,"echo_zoom":0.996629,"echo_orient":1,"wave_mode":2,"wave_dots":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":0.001,"wave_scale":0.011726,"wave_smoothing":0.9,"warpanimspeed":0.010284,"warpscale":0.01,"fshader":1,"warp":0.01,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"ob_size":0.35,"ob_r":0.11,"ob_b":0.1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":64,"mv_y":48,"mv_l":5,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"textured":1,"rad":0.986086,"tex_zoom":1.030301,"g":1,"b":1,"r2":1,"b2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":24,"textured":1,"rad":0.986086,"tex_ang":1.884956,"tex_zoom":1.030296,"g":1,"b":1,"r2":1,"b2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"r":0,"g2":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"usedots":1,"additive":1,"r":0.2,"g":0.7,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\\nang=int(sample*12)/12 * 6.283;\\nps=time*0.1;\\n\\n//circle;\\nxp=sin(n*12+ps)*0.5;\\nyp=cos(n*12+ps)*0.5;\\nzp=2 + q1*0.03;\\n\\n//positions on y axis\\nxq=xp*sin(ang) + zp*cos(ang);\\nyq=yp;\\nzq=xp*cos(ang) - zp*sin(ang);\\n\\n//rotate on x;\\nxp=xq;\\nyp=yq*sin(q2) + zq*cos(q2);\\nzp=yq*cos(q2) - zq*sin(q2);\\n\\n//rotate on z;\\nxq=xp*sin(q2) + yp*cos(q2);\\nyq=xp*cos(q2) - yp*sin(q2);\\nzq=zp;\\n\\n\\nxp=xq;\\nyp=yq;\\nzp=zq;\\n\\nzp=zp+8;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1,"g":0.5,"b":0.2},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\\nang=int(sample*12)/12 * 6.283;\\nps=time*0.1;\\n\\n//circle;\\nxp=sin(n*12+ps)*0.5;\\nyp=cos(n*12+ps)*0.5;\\nzp=2 + q1*0.03;\\n\\n//positions on x axis\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\n\\n//rotate on x;\\nxp=xq;\\nyp=yq*sin(q2) + zq*cos(q2);\\nzp=yq*cos(q2) - zq*sin(q2);\\n\\n//rotate on z;\\nxq=xp*sin(q2) + yp*cos(q2);\\nyq=xp*cos(q2) - yp*sin(q2);\\nzq=zp;\\n\\n\\nxp=xq;\\nyp=yq;\\nzp=zq;\\n\\nzp=zp+8;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"additive":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nphase=sin(n*3)*sin(n*7.9)*sin(n*16.7)*sin(n*63.5)*6;\\n\\nxp=sin(n+phase)*flip;\\nyp=cos(n+phase)*flip;\\nzp=0;\\n\\n//rotate on y during draw\\nang=n*2+phase*0.2;\\nxq=xp*sin(ang) + zp*cos(ang);\\nyq=yp;\\nzq=xp*cos(ang) - zp*sin(ang);\\n\\nr1=0.1;g1=0.6;b1=1;\\nr2=1.0;g2=0.7;b2=0.1;\\nfade=xq*0.5 + 0.5;\\nr=r1*fade + r2*(1-fade);\\ng=g1*fade + g2*(1-fade);\\nb=b1*fade + b2*(1-fade);\\n\\n//rotation;\\nang=time*0.1;\\nxp=xq*sin(ang) + zq*cos(ang);\\nyp=yq;\\nzp=xq*cos(ang) - zq*sin(ang);\\n\\nang=time*0.17;\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\n\\n\\n//push into viewspace\\nzq=zq+3.1;\\n\\n\\n//project into screenspace\\nxs=xq/zq;\\nys=yq/zq;\\n\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\na=(1-flip)*0.03*q1;\\n\\n"}],"init_eqs_eel":"mv_x=64;mv_y=48;\\nnut=0;\\nstp=0;stq=0;\\nrtp=0;rtq=0;\\nwvr=0;\\ndecay=0;\\ndcsp=0","frame_eqs_eel":"decay=0.98;\\nzoom=-1.01;\\nvol=(bass+mid+treb)*0.25;\\nvol=vol*vol;\\nq1=vol;\\n\\nmtime=mtime+vol*0.01*(53/fps);\\nq2=mtime*0.25;","pixel_eqs_eel":"","warp":"","comp":""}')},3128:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":2,"gammaadj":1,"decay":0.96,"echo_zoom":1.006596,"echo_orient":1,"wave_mode":2,"wave_dots":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":0.001,"wave_scale":0.011726,"wave_smoothing":0.9,"warpanimspeed":0.010284,"warpscale":0.01,"warp":0.01,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"ob_size":0,"ob_r":0.11,"ob_b":0.1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":64,"mv_y":48,"mv_l":5,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"sides":6,"textured":1,"rad":0.323535,"ang":0.314159,"tex_zoom":4.722082,"g":1,"b":1,"r2":1,"g2":0.8,"b2":0.7,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"a=q8"},{"baseVals":{"enabled":1,"sides":36,"additive":1,"textured":1,"rad":0.919742,"tex_zoom":0.980296,"r":0,"a":0,"r2":1,"b2":0.94,"a2":0.06,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"tex_zoom=tex_zoom+ (sin(time*0.3)*0.2);\\n\\nang=sin(time*0.5)*0.01;"},{"baseVals":{"g":1,"b":1,"r2":0.6,"g2":0.7,"b2":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":24,"g":1,"b":1,"a":0,"r2":0.5,"g2":0.7,"b2":0.8,"border_a":0.4},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"thick":1,"additive":1,"r":0.06,"g":0.04,"b":0.11},"init_eqs_eel":"","frame_eqs_eel":"t1=time*0.5;\\nt2=time*0.33;\\nt3=time*0.23;\\nt8=-1","point_eqs_eel":"scale=1+q1;\\n\\nn=sample*6.283*4;\\nthird=6.283/3;\\ncycle=int(sample*4);\\npos=t8;\\npos=if( equal(pos,1) , -1 , pos+1 );\\npos=if( equal(sample*4-cycle,0) , 0 , pos);\\nt8=pos;\\npoints= equal(pos,0);\\na=equal(pos,0)*q2;\\n\\nxp=sin(n) * 0.05 *points *scale;\\nyp=pos;\\nzp=cos(n) * 0.05 *points *scale;\\n\\n//rot x\\nang=3.1415/2 - above(cycle,0.99) * third;\\n\\nsang=sin(ang);cang=cos(ang);\\nxq=xp*sang + yp*cang;\\nyq=xp*cang - yp*sang;\\nzq=zp;\\nxp=xq;yp=yq;zp=zq;\\n\\n//rot y\\nang=3.1415/2;\\nstep1=equal(cycle,2)*third;\\nstep2=equal(cycle,3)*third*2;\\nang=ang+step1+step2;\\nang=ang ;\\n\\nsang=sin(ang);cang=cos(ang);\\nxq=xp*sang + zp*cang;\\nyq=yp;\\nzq=xp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\nang=time*0.23;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp;;\\nyq=yp*sang + zp*cang;\\nzq=yp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\nang=time*0.6;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp*sang + zp*cang;\\nyq=yp;\\nzq=xp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n\\nzp=zp+4.1;\\nxs=xp/zp + 0.5;\\nys=yp/zp *1.333 + 0.5;\\n\\nx=xs;y=ys;\\n\\n\\n\\nblack=1 - equal(pos,0);\\nr=r*black;\\ng=g*black;\\nb=b*black;"},{"baseVals":{"enabled":1,"additive":1,"r":0.06,"g":0.04,"b":0.02},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"scale=1+q1;\\n\\nn=sample*6.283*4;\\nthird=6.283/3;\\ncycle=int(sample*4);\\npos=t8;\\npos=if( equal(pos,1) , -1 , pos+1 );\\npos=if( equal(sample*4-cycle,0) , 0 , pos);\\nt8=pos;\\npoints= equal(pos,0);\\na=equal(pos,0)*q2;\\n\\nxp=sin(n) * 0.05 *points *scale;\\nyp=pos;\\nzp=cos(n) * 0.05 *points *scale;\\n\\n//rot x\\nang=3.1415/2 - above(cycle,0.99) * third;\\n\\nsang=sin(ang);cang=cos(ang);\\nxq=xp*sang + yp*cang;\\nyq=xp*cang - yp*sang;\\nzq=zp;\\nxp=xq;yp=yq;zp=zq;\\n\\n//rot y\\nang=3.1415/2;\\nstep1=equal(cycle,2)*third;\\nstep2=equal(cycle,3)*third*2;\\nang=ang+step1+step2;\\nang=ang ;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp*sang + zp*cang;\\nyq=yp;\\nzq=xp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\nyp=-yp;\\nang=time*0.23;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp;;\\nyq=yp*sang + zp*cang;\\nzq=yp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\nang=time*0.6;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp*sang + zp*cang;\\nyq=yp;\\nzq=xp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n\\nzp=zp+4.1;\\nxs=xp/zp + 0.5;\\nys=yp/zp *1.333 + 0.5;\\n\\nx=xs;y=ys;\\n\\n\\na=a*(1-q8*0.5);"},{"baseVals":{"enabled":1,"additive":1,"r":0.21,"g":0.12,"b":0.05},"init_eqs_eel":"","frame_eqs_eel":"advance=advance+ 0.005;\\nadvance=if( above(advance,2) , 0, advance);\\nt1=advance","point_eqs_eel":"\\ns=sample*6.28;\\n\\n//plot random x position via function of sample pos;\\nxp=sin(s)+sin(s*0.34)+sin(s*24.3)+sin(s*13.8);\\nxp=xp*0.20;\\n\\n//plot random y position via function of sample pos;\\nyp=cos(s)+sin(s*0.24)+cos(s*17.4)+sin(s*37.7);\\nyp=yp*0.20;\\n\\n//plot random z position via function of sample pos;\\nzp=cos(s)+cos(s*5.24)+cos(s*47.4)+cos(s*27.7);\\nzp=zp*0.25;\\n\\n//pull stars toward screen\\nzp=zp + 1 - t1;\\n\\n//correct when below 0\\nzp=if( below(zp,0) , zp+2 , zp );\\n\\n//darken far stars\\na=(1 - zp*0.5);\\n\\nzp=zp*0.7;\\n\\nx_screen=xp/zp + 0.5;\\ny_screen=yp/zp*1.333 + 0.5;\\n\\nx=x_screen;\\ny=y_screen;\\n\\nag=atan( (y-0.5)/(x-0.5) );\\n"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1,"r":0.61,"g":0.72,"b":0.95},"init_eqs_eel":"","frame_eqs_eel":"advance=advance+ 0.008;\\nadvance=if( above(advance,2) , 0, advance);\\nt1=advance","point_eqs_eel":"sparkle=sin(sample*6.283*3+time*5)*0.5+0.5;\\n\\ns=sample*6.28;\\n\\n//plot random x position via function of sample pos;\\nxp=sin(s)+sin(s*0.34)+sin(s*24.3)+sin(s*13.8);\\nxp=xp*0.20;\\n\\n//plot random y position via function of sample pos;\\nyp=cos(s)+sin(s*0.24)+cos(s*17.4)+sin(s*37.7);\\nyp=yp*0.20;\\n\\n//plot random z position via function of sample pos;\\nzp=cos(s)+cos(s*5.24)+cos(s*47.4)+cos(s*27.7);\\nzp=zp*0.25;\\n\\n//pull stars toward screen\\nzp=zp + 1 - t1;\\n\\n//correct when below 0\\nzp=if( below(zp,0) , zp+2 , zp );\\n\\n//darken far stars\\na=(1 - zp*0.5);\\na=a*sparkle;\\n\\nzp=zp*0.7;\\n\\nx_screen=xp/zp + 0.5;\\ny_screen=yp/zp*1.333 + 0.5;\\n\\nx=x_screen;\\ny=y_screen;\\n\\nag=atan( (y-0.5)/(x-0.5) );\\n"}],"init_eqs_eel":"mv_x=64;mv_y=48;\\nnut=0;\\nstp=0;stq=0;\\nrtp=0;rtq=0;\\nwvr=0;\\ndecay=0;\\ndcsp=0","frame_eqs_eel":"decay=0.98;\\nzoom=1.000;\\nwarp=0;\\n\\n\\nq1=(mid_att+treb_att)*0.25;\\n\\nq2=1 - min(q1,2)*0.6;\\n\\n\\nmvol=(bass_att+mid_att+treb_att)*0.33;\\nmvolB=(mvolB-0.007) + mvol*0.007;\\nmvolB=max(mvolB,0);\\nmvolB=min(mvolB,1);\\nq8=mvolB;\\nmonitor=q8","pixel_eqs_eel":"zoom=.99 + (sin(ang*(2+(treb/3)) + time*3)*0.5 + 0.5)*0.04;\\nsx=-1;","warp":"","comp":""}')},6244:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"decay":0.96,"echo_zoom":1.007,"echo_orient":1,"wave_mode":2,"wave_dots":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":0.001,"wave_scale":0.012,"wave_smoothing":0.9,"warpanimspeed":0.01,"warpscale":0.01,"warp":0.01,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"ob_size":0,"ob_r":0.11,"ob_b":0.1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":31.2,"mv_y":2.28,"mv_l":2.5,"mv_b":0.8,"mv_a":0},"shapes":[{"baseVals":{"sides":5,"textured":1,"rad":1.08925,"tex_zoom":0.93272,"g":1,"b":1,"a":0.8,"r2":1,"b2":0.85,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ang=sin(time*0.3)*0.01"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"usedots":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"t1=0.5;\\nt2=0.5;\\nscalar=sin(time*0.3)*5;\\nt3=scalar","point_eqs_eel":"x=t1;\\ny=t2;\\nn=sample*6.283;\\ntimeA=time*0.3+t3;\\ntimeB=time*0.1+t3;\\n\\nxm=sin(n*3)*sin(n*5.7+timeB)*sin(n*11.5+timeB)*sin(n*31);\\nym=sin(n*3.5)*sin(n*1.1)*sin(n*23+timeB)*sin(n*13.3+timeB);\\n\\nx=x+ xm*0.1;\\ny=y+ ym*0.1;\\nt1=x;\\nt2=y;\\n\\nr=tan(n)*0.5+0.5;\\nr=min(r,1)*above(r,0);\\ng=tan(n+2.1)*0.5+0.5;\\ng=min(g,1)*above(g,0);\\nb=tan(n+4.2)*0.5+0.5;\\nb=min(b,1)*above(b,0);\\n\\na=q8"},{"baseVals":{"enabled":1,"usedots":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"t1=0.5;\\nt2=0.5;\\ndelay=1- abs(sin(time*0.3)) ;\\nscalar=sin(time*0.3)*5+ 0.10*delay;\\nt3=scalar","point_eqs_eel":"x=t1;\\ny=t2;\\nn=sample*6.283;\\ntimeA=time*0.3+t3 ;\\ntimeB=time*0.1+t3 ;\\n\\nxm=sin(n*3)*sin(n*5.7+timeB)*sin(n*11.5+timeB)*sin(n*31);\\nym=sin(n*3.5)*sin(n*1.1)*sin(n*23+timeB)*sin(n*13.3+timeB);\\n\\nx=x+ xm*0.1;\\ny=y+ ym*0.1;\\nt1=x;\\nt2=y;\\n\\nr=tan(n)*0.5+0.5;\\nr=min(r,1)*above(r,0);\\ng=tan(n+2.1)*0.5+0.5;\\ng=min(g,1)*above(g,0);\\nb=tan(n+4.2)*0.5+0.5;\\nb=min(b,1)*above(b,0);\\na=q8"},{"baseVals":{"enabled":1,"usedots":1},"init_eqs_eel":"","frame_eqs_eel":"t1=0.5;\\nt2=0.5;\\ndelay=1- abs(sin(time*0.3)) ;\\nscalar=sin(time*0.3)*5+ 0.20*delay;\\nt3=scalar","point_eqs_eel":"x=t1;\\ny=t2;\\nn=sample*6.283;\\ntimeA=time*0.3+t3 ;\\ntimeB=time*0.1+t3 ;\\n\\nxm=sin(n*3)*sin(n*5.7+timeB)*sin(n*11.5+timeB)*sin(n*31);\\nym=sin(n*3.5)*sin(n*1.1)*sin(n*23+timeB)*sin(n*13.3+timeB);\\n\\nx=x+ xm*0.1;\\ny=y+ ym*0.1;\\nt1=x;\\nt2=y;\\n\\nr=tan(n)*0.5+0.5;\\nr=min(r,1)*above(r,0);\\ng=tan(n+2.1)*0.5+0.5;\\ng=min(g,1)*above(g,0);\\nb=tan(n+4.2)*0.5+0.5;\\nb=min(b,1)*above(b,0);\\na=q8"},{"baseVals":{"enabled":1,"usedots":1},"init_eqs_eel":"","frame_eqs_eel":"t1=0.5;\\nt2=0.5;\\ndelay=1- abs(sin(time*0.3)) ;\\nscalar=sin(time*0.3)*5+ 0.30*delay;\\nt3=scalar","point_eqs_eel":"x=t1;\\ny=t2;\\nn=sample*6.283;\\ntimeA=time*0.3+t3 ;\\ntimeB=time*0.1+t3 ;\\n\\nxm=sin(n*3)*sin(n*5.7+timeB)*sin(n*11.5+timeB)*sin(n*31);\\nym=sin(n*3.5)*sin(n*1.1)*sin(n*23+timeB)*sin(n*13.3+timeB);\\n\\nx=x+ xm*0.1;\\ny=y+ ym*0.1;\\nt1=x;\\nt2=y;\\n\\nr=tan(n)*0.5+0.5;\\nr=min(r,1)*above(r,0);\\ng=tan(n+2.1)*0.5+0.5;\\ng=min(g,1)*above(g,0);\\nb=tan(n+4.2)*0.5+0.5;\\nb=min(b,1)*above(b,0);\\na=q8"}],"init_eqs_eel":"mv_x=64;mv_y=48;\\nnut=0;\\nstp=0;stq=0;\\nrtp=0;rtq=0;\\nwvr=0;\\ndecay=0;\\ndcsp=0","frame_eqs_eel":"decay=0.98;\\nzoom=1.001;\\nwarp=0.03;\\nvol=(bass+mid+treb)*0.3;\\nvol=vol*vol*0.6;\\nq8=vol","pixel_eqs_eel":"ring=sin(rad*3.14+0.3)*2 -1;\\nring=max(ring,0);\\nring=ring*ring;\\nzoom=1 + rad*4*0.001;\\n//sx=1+ring*0.3;\\n//sy=1-ring*0.3","warp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = mix (uv_orig, uv, vec2(0.3, 0.3));\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 3.0);\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = dot (((\\n    (texture (sampler_blur1, (tmpvar_1 + (vec2(1.0, 0.0) * tmpvar_2))).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (tmpvar_1 - (vec2(1.0, 0.0) * tmpvar_2))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  tmpvar_3.y = dot (((\\n    (texture (sampler_blur1, (tmpvar_1 + (vec2(0.0, 1.0) * tmpvar_2))).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (tmpvar_1 - (vec2(0.0, 1.0) * tmpvar_2))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = (texture (sampler_fc_main, (tmpvar_1 + (\\n    (tmpvar_3 * texsize.zw)\\n   * 9.0))) - 0.01).xyz;\\n  ret = tmpvar_4.xyz;\\n }","comp":" shader_body { \\n  vec2 uv_1;\\n  vec3 ret_2;\\n  uv_1 = (0.5 + ((uv - 0.5) * 0.98));\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (texsize.zw * 4.0);\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv_1 + (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv_1 - (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_blur1, \\n    (uv_1 + (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv_1 - (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_6;\\n  tmpvar_6.z = 0.0;\\n  tmpvar_6.x = dot (tmpvar_4, vec3(0.32, 0.49, 0.29));\\n  tmpvar_6.y = dot (tmpvar_5, vec3(0.32, 0.49, 0.29));\\n  vec4 tmpvar_7;\\n  tmpvar_7 = texture (sampler_noisevol_hq, ((vec3(0.05, 0.05, 0.0) * (\\n    ((uv_1.xyy + (tmpvar_6 * 0.5)) * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + (vec3(0.0, 0.0, 0.2) * time)));\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = dot (tmpvar_4, vec3(0.32, 0.49, 0.29));\\n  tmpvar_8.y = dot (tmpvar_5, vec3(0.32, 0.49, 0.29));\\n  uv_1 = (uv_1 - (tmpvar_8 * 0.04));\\n  ret_2 = (abs((\\n    ((texture (sampler_main, uv_1).xyz + ((texture (sampler_blur1, uv_1).xyz * scale1) + bias1)) - ((texture (sampler_blur2, uv_1).xyz * scale2) + bias2))\\n   - \\n    ((texture (sampler_blur3, uv_1).xyz * scale3) + bias3)\\n  )) * (dot (tmpvar_7, vec4(0.32, 0.49, 0.29, 0.0)) * 3.0));\\n  vec3 tmpvar_9;\\n  tmpvar_9 = pow (ret_2, vec3(0.5, 0.5, 0.5));\\n  ret_2 = tmpvar_9;\\n  vec4 tmpvar_10;\\n  tmpvar_10.w = 1.0;\\n  tmpvar_10.xyz = tmpvar_9;\\n  ret = tmpvar_10.xyz;\\n }"}')},6918:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1,"decay":1,"echo_zoom":0.997,"echo_alpha":0.5,"echo_orient":1,"wave_mode":2,"wave_dots":1,"wave_brighten":0,"wave_a":0.001,"wave_scale":0.012,"wave_smoothing":0.9,"warpanimspeed":0.01,"warpscale":0.12,"warp":0.08081,"sx":1.07213,"sy":1.07213,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"ob_size":0.015,"ob_b":0.2,"ob_a":1,"ib_size":0.005,"ib_r":1,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":24.16,"mv_y":48,"mv_l":0.05,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"q8=1.5","point_eqs_eel":"masterspeed=30;\\n\\ntm=time*masterspeed*0.1;\\nperspective=0.7;\\n\\n\\n//plot x,y shape at z=0\\nsmp=sample*6.283;\\n\\npinch=sin(smp*6 + 1.5)*0.3 + 0.7;\\n\\nxp=sin(smp )*0.65;\\nxp=xp*pinch;\\nyp=cos(smp )*0.65;\\nyp=yp*pinch;\\nzp=0;\\n\\n\\n//rotate on y axis;\\nangy=q1*10 + sample*0;\\nxq=xp*cos(angy) - zp*sin(angy);\\nzq=xp*sin(angy) + zp*cos(angy);\\nxp=xq;\\nzp=zq;\\n\\n//rotate on x axis\\naxs1 = sin(time*0.9) + 1.6;\\nyq= yp*cos(axs1) - zp*sin(axs1);\\nzq= yp*sin(axs1) + zp*cos(axs1);\\nyp=yq;\\nzp=zq;\\n\\n//rotate on y axis again\\naxs2 = sin(time*0.45)*3.3;\\nxq=xp*cos(axs2) - zp*sin(axs2);\\nzq=xp*sin(axs2) + zp*cos(axs2);\\nxp=xq;\\nzp=zq;\\n\\n//stretch y axis to compensate for aspect ratio\\nyp=yp*1.2;\\n\\n//push forward into viewpace\\nzp=zp+2.1;\\n\\n//project x,y,z into screenspace\\nxs=xp/zp;\\nys=yp/zp;\\n\\n//center 0,0 in middle of screen\\nx=xs+0.5;\\ny=ys+0.5;\\n\\ndark=1 - (cos(smp*6 + 1.5)*0.5 + 0.5);\\nr=1.00*dark;\\ng=0.32*dark;\\nb=0.26*dark;\\n"},{"baseVals":{"enabled":1,"thick":1,"additive":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"masterspeed=30;\\n\\ntm=time*masterspeed*0.1;// + t1*0.002*masterspeed;\\nperspective=0.7;\\n\\n//plot x,y,z to point on sphere\\nsmp=sample*6.283;\\n\\npinch=cos(smp*6 + 0)*0.3 + 0.7;\\n\\nxp=sin(smp )*0.65;\\nxp=xp*pinch;\\nyp=cos(smp )*0.65;\\nyp=yp*pinch;\\nzp=0;\\n\\n\\n\\n//rotate on y axis;\\nangy=time*33;\\nangy=q1*10 + sample*0;\\nangy=angy+1.5;\\nxq=xp*cos(angy) - zp*sin(angy);\\nzq=xp*sin(angy) + zp*cos(angy);\\nxp=xq;\\nzp=zq;\\n\\n//rotate on x axis\\naxs1 = sin(time*0.9) + 1.6;\\nyq= yp*cos(axs1) - zp*sin(axs1);\\nzq= yp*sin(axs1) + zp*cos(axs1);\\nyp=yq;\\nzp=zq;\\n\\n//rotate on y axis again\\naxs2 = sin(time*0.45)*3.3;\\nxq=xp*cos(axs2) - zp*sin(axs2);\\nzq=xp*sin(axs2) + zp*cos(axs2);\\nxp=xq;\\nzp=zq;\\n\\n//stretch y axis to compensate for aspect ratio\\nyp=yp*1.2;\\n\\n//push forward into viewpace\\nzp=zp+2.1;\\n\\n//project x,y,z into screenspace\\nxs=xp/zp;\\nys=yp/zp;\\n\\n//center 0,0 in middle of screen\\nx=xs+0.5;\\ny=ys+0.5;\\n\\ndark=1 - (cos(smp*6 + q8)*0.5 + 0.5);\\nr=1.00*dark;\\ng=0.22*dark;\\nb=(0.16+(bass*0.1))*dark;"},{"baseVals":{"enabled":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"q8=1.5","point_eqs_eel":"masterspeed=30;\\n\\ntm=time*masterspeed*0.1;\\nperspective=0.7;\\n\\n\\n//plot x,y shape at z=0\\nsmp=sample*6.283;\\n\\npinch=sin(smp*6 + 1.5)*0.3 + 0.7;\\n\\nxp=sin(smp )*0.65;\\nxp=xp*pinch;\\nyp=cos(smp )*0.65;\\nyp=yp*pinch;\\nzp=0;\\n\\n\\n//rotate on y axis;\\nangy=q1*10 + sample*0;\\nxq=xp*cos(angy) - zp*sin(angy);\\nzq=xp*sin(angy) + zp*cos(angy);\\nxp=xq;\\nzp=zq;\\n\\n//rotate on x axis\\naxs1 = sin(time*0.9) + 1.6;\\nyq= yp*cos(axs1) - zp*sin(axs1);\\nzq= yp*sin(axs1) + zp*cos(axs1);\\nyp=yq;\\nzp=zq;\\n\\n//rotate on y axis again\\naxs2 = sin(time*0.45)*3.3;\\nxq=xp*cos(axs2) - zp*sin(axs2);\\nzq=xp*sin(axs2) + zp*cos(axs2);\\nxp=xq;\\nzp=zq;\\n\\n//stretch y axis to compensate for aspect ratio\\nyp=yp*1.2;\\n\\n//push forward into viewpace\\nzp=zp+2.1;\\n\\n//project x,y,z into screenspace\\nxs=xp/zp;\\nys=yp/zp;\\n\\n//center 0,0 in middle of screen\\nx=(-1*xs)+0.5;\\ny=ys+0.5;\\n\\ndark=1 - (cos(smp*6 + 1.5)*0.5 + 0.5);\\nr=1.00*dark;\\ng=0.32*dark;\\nb=0.36*dark;\\n"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"masterspeed=30;\\n\\ntm=time*masterspeed*0.1;// + t1*0.002*masterspeed;\\nperspective=0.7;\\n\\n//plot x,y,z to point on sphere\\nsmp=sample*6.283;\\n\\npinch=cos(smp*6 + 0)*0.3 + 0.7;\\n\\nxp=sin(smp )*0.65;\\nxp=xp*pinch;\\nyp=cos(smp )*0.65;\\nyp=yp*pinch;\\nzp=0;\\n\\n\\n\\n//rotate on y axis;\\nangy=time*33;\\nangy=q1*10 + sample*0;\\nangy=angy+1.5;\\nxq=xp*cos(angy) - zp*sin(angy);\\nzq=xp*sin(angy) + zp*cos(angy);\\nxp=xq;\\nzp=zq;\\n\\n//rotate on x axis\\naxs1 = sin(time*0.9) + 1.6;\\nyq= yp*cos(axs1) - zp*sin(axs1);\\nzq= yp*sin(axs1) + zp*cos(axs1);\\nyp=yq;\\nzp=zq;\\n\\n//rotate on y axis again\\naxs2 = sin(time*0.45)*3.3;\\nxq=xp*cos(axs2) - zp*sin(axs2);\\nzq=xp*sin(axs2) + zp*cos(axs2);\\nxp=xq;\\nzp=zq;\\n\\n//stretch y axis to compensate for aspect ratio\\nyp=yp*1.2;\\n\\n//push forward into viewpace\\nzp=zp+2.1;\\n\\n//project x,y,z into screenspace\\nxs=xp/zp;\\nys=yp/zp;\\n\\n//center 0,0 in middle of screen\\nx=-xs+0.5;\\ny=ys+0.5;\\n\\ndark=1 - (cos(smp*6 + q8)*0.5 + 0.5);\\nr=0.82*dark;\\ng=0.02*dark;\\nb=0.26*dark;"}],"init_eqs_eel":"mv_x=64;mv_y=48;\\nnut=0;\\nstp=0;stq=0;\\nrtp=0;rtq=0;\\nwvr=0;\\ndecay=0;\\ndcsp=0","frame_eqs_eel":"chng=sin(time*.5);\\ncthr=.9999;\\nmq21=if(above(chng,cthr),rand(3),mq21);\\nmq22=if(above(chng,cthr),rand(3),mq22);\\nmq23=if(above(chng,cthr),rand(3),mq23);\\nmq24=if(above(chng,cthr),rand(2),mq24);\\nmq25=if(above(chng,cthr),rand(2),mq25);\\nmq26=if(above(chng,cthr),rand(2),mq26);\\nmq27=if(above(chng,cthr),rand(1),mq27);\\nmq28=if(above(chng,cthr),rand(1),mq28);\\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\\nmq31=if(above(chng,cthr),rand(1)*.3,mq31);\\nmonitor=chng;\\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\\nq27=mq27;q28=mq28;q29=mq29;q31=mq31;\\n\\nmonitor=mq1;\\nvol=bass+treb+mid;\\natime=atime+vol;\\nq1=.4+sin(atime*.006        )*.4;\\nq2=.4+cos(atime*.00613828348)*.4;\\nq3=.4+sin(atime*.00598593455)*.4;\\nmonitor=q3;\\n\\ndecay=.997;\\n//zoom=1.008;\\nms=sin(time*0.6)*0.15;\\nmss=mss+ms*0.001;\\nq1=ms;\\n\\n\\n//rot=sin(time)*0.01;\\n\\n//echo_zoom=1 + ( sin(time*0.6)*0.5+0.5 )*3;\\ndx=0;dy=0","pixel_eqs_eel":"it = 0.3*bass_att;\\nradm = rad*500;\\nrot = 0.02*atan((radm+it)*30)/((rad+0.1)*(bass_att*500));\\nvar=4+(bass_att*4);\\nmod = cos(ang*var)+(bass_att*2);\\nmod = mod*rad;\\nzoom = .95 - abs(0.02*mod)+(bass_att*0.01);","warp":" shader_body { \\n  vec3 noise3_1;\\n  vec3 ret_2;\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (texture (sampler_main, uv).xyz + ((texture (sampler_blur1, uv).xyz * scale1) + bias1));\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (0.5 + ((\\n    (uv - vec2(0.0, 1.0))\\n   - 0.5) * (1.0 + \\n    (tmpvar_3.y * 0.03)\\n  )));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = (tmpvar_4.x + pow (tmpvar_3.x, 0.0));\\n  tmpvar_5.y = (tmpvar_4.y + pow (tmpvar_3.x, 0.005));\\n  vec2 tmpvar_6;\\n  tmpvar_6 = fract(tmpvar_5);\\n  noise3_1 = (texture (sampler_noise_lq, ((\\n    (uv_orig * texsize.xy)\\n   * texsize_noise_lq.zw) + rand_frame.xy)).xyz * fract(q15));\\n  vec3 tmpvar_7;\\n  tmpvar_7 = (noise3_1 * (vec3(1.0, 1.0, 1.0) - vec3(fract(\\n    (q3 * 0.5)\\n  ))));\\n  noise3_1 = tmpvar_7;\\n  vec4 tmpvar_8;\\n  tmpvar_8 = texture (sampler_main, tmpvar_6);\\n  vec3 tmpvar_9;\\n  tmpvar_9.x = q10;\\n  tmpvar_9.y = q11;\\n  tmpvar_9.z = q12;\\n  vec3 tmpvar_10;\\n  tmpvar_10 = mix (tmpvar_7, tmpvar_9, tmpvar_8.xxx);\\n  ret_2 = (tmpvar_8.xyz + clamp ((\\n    (tmpvar_8.yzx * tmpvar_10.zxy)\\n   - \\n    (tmpvar_8.zxy * tmpvar_10.yzx)\\n  ), 0.0, 1.0));\\n  vec4 tmpvar_11;\\n  tmpvar_11 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * tmpvar_6.xyy) * (\\n    (q27 * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\\n  if (((ret_2.x > (q21 * q3)) && (ret_2.x <= (q24 * q1)))) {\\n    ret_2.y = (ret_2.y + (tmpvar_11.x * 0.5));\\n  };\\n  if (((ret_2.y > (q22 * q1)) && (ret_2.y <= (q25 * q2)))) {\\n    ret_2.z = (ret_2.z + (tmpvar_11.y * 0.5));\\n  };\\n  if (((ret_2.z > (q23 * q2)) && (ret_2.z <= (q26 * q3)))) {\\n    ret_2.x = (ret_2.x + (tmpvar_11.z * 0.5));\\n  };\\n  vec4 tmpvar_12;\\n  tmpvar_12.w = 1.0;\\n  tmpvar_12.xyz = ret_2;\\n  ret = tmpvar_12.xyz;\\n }","comp":" shader_body { \\n  float diff_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = fract(uv);\\n  vec4 tmpvar_4;\\n  tmpvar_4 = texture (sampler_main, tmpvar_3);\\n  vec2 x_5;\\n  x_5 = (tmpvar_4.xy - ((texture (sampler_blur1, tmpvar_3).xyz * scale1) + bias1).xy);\\n  vec2 x_6;\\n  x_6 = (tmpvar_4.xy - ((texture (sampler_blur2, tmpvar_3).xyz * scale2) + bias2).xy);\\n  diff_1 = ((1.0 - (\\n    sqrt(dot (x_5, x_5))\\n   * 3.5)) * (1.0 - sqrt(\\n    dot (x_6, x_6)\\n  )));\\n  ret_2.xy = (tmpvar_4.xy * diff_1);\\n  ret_2.z = pow (diff_1, (1.0/((1.0 - uv.y))));\\n  vec4 tmpvar_7;\\n  tmpvar_7 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv.xyy) * (\\n    (q28 * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q31)));\\n  if (((ret_2.x > (q26 * q3)) && (ret_2.x <= (q23 * q1)))) {\\n    ret_2.z = (ret_2.z - (tmpvar_7.x * 0.5));\\n  };\\n  if (((ret_2.y > (q25 * q1)) && (ret_2.y <= (q22 * q2)))) {\\n    ret_2.x = (ret_2.x - (tmpvar_7.y * 0.5));\\n  };\\n  if (((ret_2.z > (q24 * q2)) && (ret_2.z <= (q21 * q3)))) {\\n    ret_2.y = (ret_2.y - (tmpvar_7.z * 0.5));\\n  };\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = ret_2;\\n  ret = tmpvar_8.xyz;\\n }"}')},8766:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_orient":2,"wave_mode":1,"wave_thick":1,"wave_brighten":0,"wrap":0,"wave_a":0.004,"wave_scale":0.01,"wave_smoothing":0,"wave_mystery":-0.44,"modwavealphastart":1,"modwavealphaend":1,"warpscale":1.331,"zoom":1.03442,"warp":0.19788,"sx":0.99967,"sy":0.9999,"wave_y":0.04,"ob_size":0,"ob_r":1,"ob_a":0.7,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":0,"mv_y":0,"mv_l":1,"mv_g":0.91,"mv_b":0.71,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"thickoutline":1,"rad":0.04043,"tex_zoom":0.73458,"r":0,"a":0.1,"g2":0,"border_a":0},"init_eqs_eel":"vx = 0","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":100,"thickoutline":1,"textured":1,"rad":0.53189,"ang":0.25133,"tex_zoom":1.3345,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"xx = 0.5;\\nyy = 0.4;","frame_eqs_eel":""},{"baseVals":{"sides":100,"additive":1,"thickoutline":1,"textured":1,"x":0.43,"y":0.6,"rad":1.16781,"ang":5.96903,"tex_zoom":0.67165,"r2":1,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"xx = 0.5;\\nyy = 0.4;","frame_eqs_eel":"d = sqrt( sqr(xx-q4)+sqr(yy-q8));\\n\\nxx = if(below(d,0.15),0.4+int(rand(200))/1000,xx);\\nyy = if(below(d,0.15),0.3+int(rand(400))/1000,yy);\\naang = if(below(d,0.12),int(rand(1000))/1000,aang);\\nang =aang*4*asin(1);\\nx = xx;\\ny = yy;"},{"baseVals":{"sides":100,"additive":1,"thickoutline":1,"y":0.75,"rad":0.07059,"tex_zoom":0.73458,"g":0.5,"b":0.5,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"vx = 0","frame_eqs_eel":"x = q1;\\ny = q5;"}],"waves":[{"baseVals":{"usedots":1,"scaling":2.44415,"smoothing":0,"a":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t1 = 0;\\nv = 0.01;\\nj = j + (bass)*0.01;\\nj2 = j2 + (mid_att)*0.01;\\nj3 = j3 + (treb_att)*0.01;\\nt2 = j;\\nt3 = j2;\\nt4 = j3;\\n//t5 = 0;\\nk = k*0.99 + 10*mid/fps;\\nt5 = -k;\\n\\ncl1 = cl1 + 0.002;\\ncl1 = if(above(cl1,1),0,cl1);\\ncl1 = if(below(cl1,0),1,cl1);\\nt8 = cl1;\\n\\ncl2 = cl2 -1*q1;\\ncl2 = if(above(cl2,1),0,cl2);\\ncl2 = if(below(cl2,0),1,cl2);\\nt7 = cl2;\\n\\ncl3 = cl3 +0.001;\\ncl3 = if(above(cl3,1),0,cl3);\\ncl3 = if(below(cl3,0),1,cl3);\\nt6 = cl3;","point_eqs_eel":"xx = ((sample*0983624912364)%10000000+100)/10000000;\\nyy = ((xx*1896575575)%10000000+100)/10000000;\\nzz = ((yy*58652340875)%10000000+100)/10000000;\\n\\n\\nd = sqrt(sqr(xx)+sqr(yy)+sqr(zz));\\n\\nzz = zz + t8 - if(above(zz+t8,1),1,0) - 0.5;\\nxx = xx + t7 - if(above(xx+t7,1),1,0) - 0.5;\\nyy = yy + t6 - if(above(yy+t6,1),1,0) - 0.5;\\n\\nv = 0.001;\\n\\nw = 1;// (sample*sin(time*0.3)*0.01-1);\\nbb = d*d*0.5;\\nn= 0.3;\\ns1 = sin(sin(t2*w+bb)*n);\\ns2 = sin(sin(t3*w+bb)*n);\\ns3 = sin(sin(t4*w+bb)*n);\\nc1 = cos(sin(t2*w+bb)*n);\\nc2 = cos(sin(t3*w+bb)*n);\\nc3 = cos(sin(t4*w+bb)*n);\\n\\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\\n\\nzoom = .5*(1/(z+0.5));\\nx = 0.5 + zoom*x1 + sin(time*0.1)*0;;\\ny = 0.5 + zoom*y1 + cos(time*0.16801)*0;\\n\\npi3 = 3.1415*2*0.3333;\\nt = z*2+t2*1;\\nc=3;\\n//r = sin(t)*c;\\n\\n//g = sin(t+pi3)*c;\\n\\n//b = sin(t-pi3)*c;\\n\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\n\\na = 0.4;"},{"baseVals":{"scaling":7.7518,"smoothing":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t8 = 1;\\n\\nt1 = 0.5;\\nt2 = 0.9;","point_eqs_eel":"d = d*0.85 + (value1)*1;\\n\\nx = 0.5 + d*sample*(1-sample);\\ny = 0.9 - sample*0.8;"},{"baseVals":{"usedots":1,"thick":1,"scaling":5.92556,"smoothing":0,"g":0,"b":0,"a":0.66,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt7 = q7;\\nt8 = q8;","point_eqs_eel":"sample = 1-sample;\\nxxx = xx;\\nyyy = yy;\\nxx = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2\\n+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;\\n\\nyy = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6\\n+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;\\n\\nd = 1/sqrt(sqr(xx-xxx)+sqr(yy-yyy));\\ndd = dd*0.95 + (value1);\\nddd = dd*sample*(1-sample)*d;\\n\\nx = xx + (yy-yyy)*ddd;\\ny = yy - (xx-xxx)*ddd;"},{"baseVals":{"thick":1,"scaling":5.92556,"smoothing":0,"r":0.65,"g":0.45,"enabled":0},"init_eqs_eel":"t2 = 0","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt7 = q7;\\nt8 = q8;","point_eqs_eel":"sample = 1-sample;\\nxxx = xx;\\nyyy = yy;\\nxx = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2\\n+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;\\n\\nyy = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6\\n+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;\\n\\nd = 1/sqrt(sqr(xx-xxx)+sqr(yy-yyy));\\ndd = dd*0.95 + (value1);\\nddd = dd*sample*(1-sample)*d;\\nddd = sample*(1-sample)*sin(sample*200)*d*0.05;\\nx = xx + (yy-yyy)*ddd;\\ny = yy - (xx-xxx)*ddd;"}],"init_eqs_eel":"","frame_eqs_eel":"mv_r = mv_r + 0.2*( 0.60*sin(0.980*time) + 0.40*sin(1.047*time) );\\nmv_g = mv_g + 0.2*( 0.60*sin(0.835*time) + 0.40*sin(1.081*time) );\\nmv_b = mv_b + 0.2*( 0.60*sin(0.814*time) + 0.40*sin(1.011*time) );\\nq1 = (cx*2-1) + 0.6*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\nq2 = (cy*2-1) + 0.6*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\\nob_r = 1- 0.4*abs(q1);\\nob_g = 0.3*abs(q2);\\nob_b = 0.4*abs(q1);\\nwave_x = 1-abs(q2)-0.05;\\nwave_y = 1-abs(q1)-0.06;\\nwave_r = wave_r + 0.4*( 0.60*sin(0.514*time) + 0.40*sin(1.211*time) );\\nwave_b = wave_b + 0.4*( 0.60*sin(0.714*time) + 0.40*sin(q2) );\\nwave_g = wave_g + 0.4*( 0.60*sin(10*q1) + 0.40*sin(10*q2) );","pixel_eqs_eel":"du = (x*2-1) - q1;\\ndv = (y*2-1) - q2;\\ndist = sqrt(du*du+dv*dv);\\nang2 = atan2(du,dv) + time*0.15;\\nmult = -0.2*sin(dist*0.05);\\ndx = mult*sin(ang2*2-1.5)*aspectx;\\ndy = mult*cos(ang2*2-1.5)*aspecty;","warp":" shader_body { \\n  vec2 my_uv_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (vec2(1280.0, 1024.0) * texsize.zw);\\n  float tmpvar_4;\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (uv + vec2(0.005, 0.0));\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv - vec2(0.005, 0.0));\\n  tmpvar_4 = (((\\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_6).xyz * scale2)\\n   + bias2)).x * tmpvar_3.x);\\n  float tmpvar_7;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (uv + vec2(0.0, 0.005));\\n  vec2 tmpvar_9;\\n  tmpvar_9 = (uv - vec2(0.0, 0.005));\\n  tmpvar_7 = (((\\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_9).xyz * scale2)\\n   + bias2)).x * tmpvar_3.y);\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = tmpvar_4;\\n  tmpvar_10.y = tmpvar_7;\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = (((\\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_6).xyz * scale2)\\n   + bias2)).x * tmpvar_3.x);\\n  tmpvar_11.y = (((\\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_9).xyz * scale2)\\n   + bias2)).x * tmpvar_3.y);\\n  ret_2.x = texture (sampler_fw_main, ((uv - (tmpvar_10 * 0.01)) + (tmpvar_11 * 0.003))).x;\\n  vec4 tmpvar_12;\\n  tmpvar_12 = texture (sampler_blur3, uv);\\n  ret_2.x = (ret_2.x + ((ret_2.x - \\n    ((tmpvar_12.xyz * scale3) + bias3)\\n  .x) * 0.1));\\n  ret_2.x = (ret_2.x + 0.004);\\n  vec2 tmpvar_13;\\n  tmpvar_13.x = tmpvar_7;\\n  tmpvar_13.y = -(tmpvar_4);\\n  my_uv_1 = (uv + ((tmpvar_13 * 0.05) * (1.2 - \\n    ((tmpvar_12.xyz * scale3) + bias3)\\n  .y)));\\n  ret_2.z = texture (sampler_fw_main, my_uv_1).z;\\n  vec2 x_14;\\n  x_14 = (my_uv_1 - uv);\\n  ret_2.z = (ret_2.z + ((\\n    ((ret_2.z - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).z) * sqrt(dot (x_14, x_14)))\\n   * 180.0) / sqrt(\\n    dot (tmpvar_3, tmpvar_3)\\n  )));\\n  ret_2.z = (ret_2.z * 0.8);\\n  ret_2.z = (ret_2.z + 0.004);\\n  vec2 tmpvar_15;\\n  tmpvar_15.x = -(tmpvar_7);\\n  tmpvar_15.y = tmpvar_4;\\n  my_uv_1 = (tmpvar_15 * 0.045);\\n  vec2 tmpvar_16;\\n  tmpvar_16.x = (((\\n    (texture (sampler_blur2, (uv + vec2(0.01, 0.0))).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, (uv - vec2(0.01, 0.0))).xyz * scale2)\\n   + bias2)).y * tmpvar_3.x);\\n  tmpvar_16.y = (((\\n    (texture (sampler_blur2, (uv + vec2(0.0, 0.01))).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, (uv - vec2(0.0, 0.01))).xyz * scale2)\\n   + bias2)).y * tmpvar_3.y);\\n  my_uv_1 = (my_uv_1 + (uv - (tmpvar_16 * 0.03)));\\n  ret_2.y = texture (sampler_fw_main, my_uv_1).y;\\n  ret_2.y = (ret_2.y + ((\\n    (ret_2.y - ((texture (sampler_blur3, my_uv_1).xyz * scale3) + bias3).y)\\n   * 0.1) + 0.01));\\n  vec4 tmpvar_17;\\n  tmpvar_17.w = 1.0;\\n  tmpvar_17.xyz = ret_2;\\n  ret = tmpvar_17.xyz;\\n }","comp":"vec2 xlat_mutabled;\\nvec3 xlat_mutabledx;\\nvec3 xlat_mutabledy;\\n shader_body { \\n  vec2 my_uv2_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = (0.448 + q9);\\n  tmpvar_2.y = (0.701 + q10);\\n  vec2 tmpvar_3;\\n  tmpvar_3 = ((uv - 0.5) * 1.81);\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = ((tmpvar_3.x * tmpvar_3.x) - (tmpvar_3.y * tmpvar_3.y));\\n  tmpvar_4.y = ((2.0 * tmpvar_3.x) * tmpvar_3.y);\\n  my_uv2_1 = (tmpvar_4 + tmpvar_2);\\n  my_uv2_1 = (1.0 - abs((\\n    (fract((my_uv2_1 * 0.5)) * 2.0)\\n   - 1.0)));\\n  xlat_mutabled = (texsize.zw * 3.0);\\n  xlat_mutabledx = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * xlat_mutabled))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * xlat_mutabled))\\n  ).xyz * scale1) + bias1));\\n  xlat_mutabledy = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * xlat_mutabled))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * xlat_mutabled))\\n  ).xyz * scale1) + bias1));\\n  vec4 tmpvar_5;\\n  tmpvar_5 = texture (sampler_main, uv);\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = xlat_mutabledx.x;\\n  tmpvar_6.y = xlat_mutabledy.x;\\n  float tmpvar_7;\\n  tmpvar_7 = sqrt(dot (tmpvar_6, tmpvar_6));\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = xlat_mutabledx.y;\\n  tmpvar_8.y = xlat_mutabledy.y;\\n  vec4 tmpvar_9;\\n  tmpvar_9.w = 1.0;\\n  tmpvar_9.xyz = mix (mix (mix (\\n    mix (((vec3(0.6, 0.5, 0.4) * tmpvar_5.x) * ((\\n      (-(xlat_mutabledx) + xlat_mutabledy)\\n     + 1.0) * 1.4).x), (vec3(4.0, 2.0, 1.0) * tmpvar_7), vec3((tmpvar_7 * 2.0)))\\n  , vec3(0.3, 0.0, 0.0), vec3(\\n    (texture (sampler_main, my_uv2_1).z * 4.0)\\n  )), vec3(0.0, 0.0, 1.4), vec3((\\n    sqrt(dot (tmpvar_8, tmpvar_8))\\n   * 1.4))), vec3(0.5, 0.5, 0.5), vec3((tmpvar_5.y * 2.0)));\\n  ret = tmpvar_9.xyz;\\n }"}')},4708:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_orient":2,"wave_mode":1,"wave_thick":1,"wave_brighten":0,"wrap":0,"wave_a":0.004,"wave_scale":0.01,"wave_smoothing":0,"wave_mystery":-0.44,"modwavealphastart":1,"modwavealphaend":1,"warpscale":1.331,"zoom":1.004,"warp":0.19788,"sx":0.99967,"sy":0.9999,"wave_y":0.04,"ob_size":0,"ob_r":1,"ob_a":0.7,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":0,"mv_y":0,"mv_l":1,"mv_g":0.91,"mv_b":0.71,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"thickoutline":1,"rad":0.04043,"tex_zoom":0.73458,"r":0,"a":0.1,"g2":0,"border_a":0},"init_eqs_eel":"vx = 0","frame_eqs_eel":""},{"baseVals":{"sides":100,"additive":1,"thickoutline":1,"textured":1,"x":0.7,"y":0.3,"rad":0.6623,"ang":2.45044,"tex_zoom":0.74934,"g":0.1,"b":0.1,"r2":1,"g2":0.1,"b2":0.1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"xx = 0.5;\\nyy = 0.4;","frame_eqs_eel":"d = sqrt( sqr(xx-q4)+sqr(yy-q8));\\n\\nxx = if(below(d,0.15),0.4+rand(200)/1000,xx);\\nyy = if(below(d,0.15),0.3+rand(400)/1000,yy);\\naang = if(below(d,0.12),rand(1000)/1000,aang);\\nang =aang*4*asin(1);\\nx = xx;\\ny = yy;"},{"baseVals":{"sides":100,"additive":1,"thickoutline":1,"textured":1,"x":0.43,"y":0.6,"rad":1.16781,"ang":5.96903,"tex_zoom":0.67165,"r2":1,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"xx = 0.5;\\nyy = 0.4;","frame_eqs_eel":"d = sqrt( sqr(xx-q4)+sqr(yy-q8));\\n\\nxx = if(below(d,0.15),0.4+rand(200)/1000,xx);\\nyy = if(below(d,0.15),0.3+rand(400)/1000,yy);\\naang = if(below(d,0.12),rand(1000)/1000,aang);\\nang =aang*4*asin(1);\\nx = xx;\\ny = yy;"},{"baseVals":{"sides":100,"additive":1,"thickoutline":1,"y":0.75,"rad":0.07059,"tex_zoom":0.73458,"g":0.5,"b":0.5,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"vx = 0","frame_eqs_eel":"x = q1;\\ny = q5;"}],"waves":[{"baseVals":{"usedots":1,"scaling":2.44415,"smoothing":0,"a":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t1 = 0;\\nv = 0.01;\\nj = j + (bass)*0.01;\\nj2 = j2 + (mid_att)*0.01;\\nj3 = j3 + (treb_att)*0.01;\\nt2 = j;\\nt3 = j2;\\nt4 = j3;\\n//t5 = 0;\\nk = k*0.99 + 10*mid/fps;\\nt5 = -k;\\n\\ncl1 = cl1 + 0.002;\\ncl1 = if(above(cl1,1),0,cl1);\\ncl1 = if(below(cl1,0),1,cl1);\\nt8 = cl1;\\n\\ncl2 = cl2 -1*q1;\\ncl2 = if(above(cl2,1),0,cl2);\\ncl2 = if(below(cl2,0),1,cl2);\\nt7 = cl2;\\n\\ncl3 = cl3 +0.001;\\ncl3 = if(above(cl3,1),0,cl3);\\ncl3 = if(below(cl3,0),1,cl3);\\nt6 = cl3;","point_eqs_eel":"xx = ((sample*0983624912364)%10000000+100)/10000000;\\nyy = ((xx*1896575575)%10000000+100)/10000000;\\nzz = ((yy*58652340875)%10000000+100)/10000000;\\n\\n\\nd = sqrt(sqr(xx)+sqr(yy)+sqr(zz));\\n\\nzz = zz + t8 - if(above(zz+t8,1),1,0) - 0.5;\\nxx = xx + t7 - if(above(xx+t7,1),1,0) - 0.5;\\nyy = yy + t6 - if(above(yy+t6,1),1,0) - 0.5;\\n\\nv = 0.001;\\n\\nw = 1;// (sample*sin(time*0.3)*0.01-1);\\nbb = d*d*0.5;\\nn= 0.3;\\ns1 = sin(sin(t2*w+bb)*n);\\ns2 = sin(sin(t3*w+bb)*n);\\ns3 = sin(sin(t4*w+bb)*n);\\nc1 = cos(sin(t2*w+bb)*n);\\nc2 = cos(sin(t3*w+bb)*n);\\nc3 = cos(sin(t4*w+bb)*n);\\n\\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\\n\\nzoom = .5*(1/(z+0.5));\\nx = 0.5 + zoom*x1 + sin(time*0.1)*0;;\\ny = 0.5 + zoom*y1 + cos(time*0.16801)*0;\\n\\npi3 = 3.1415*2*0.3333;\\nt = z*2+t2*1;\\nc=3;\\n//r = sin(t)*c;\\n\\n//g = sin(t+pi3)*c;\\n\\n//b = sin(t-pi3)*c;\\n\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\n\\na = 0.4;"},{"baseVals":{"scaling":7.7518,"smoothing":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t8 = 1;\\n\\nt1 = 0.5;\\nt2 = 0.9;","point_eqs_eel":"d = d*0.85 + (value1)*1;\\n\\nx = 0.5 + d*sample*(1-sample);\\ny = 0.9 - sample*0.8;"},{"baseVals":{"usedots":1,"thick":1,"scaling":5.92556,"smoothing":0,"g":0,"b":0,"a":0.66,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt7 = q7;\\nt8 = q8;","point_eqs_eel":"sample = 1-sample;\\nxxx = xx;\\nyyy = yy;\\nxx = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2\\n+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;\\n\\nyy = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6\\n+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;\\n\\nd = 1/sqrt(sqr(xx-xxx)+sqr(yy-yyy));\\ndd = dd*0.95 + (value1);\\nddd = dd*sample*(1-sample)*d;\\n\\nx = xx + (yy-yyy)*ddd;\\ny = yy - (xx-xxx)*ddd;"},{"baseVals":{"thick":1,"scaling":5.92556,"smoothing":0,"r":0.65,"g":0.45,"enabled":0},"init_eqs_eel":"t2 = 0","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt7 = q7;\\nt8 = q8;","point_eqs_eel":"sample = 1-sample;\\nxxx = xx;\\nyyy = yy;\\nxx = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2\\n+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;\\n\\nyy = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6\\n+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;\\n\\nd = 1/sqrt(sqr(xx-xxx)+sqr(yy-yyy));\\ndd = dd*0.95 + (value1);\\nddd = dd*sample*(1-sample)*d;\\nddd = sample*(1-sample)*sin(sample*200)*d*0.05;\\nx = xx + (yy-yyy)*ddd;\\ny = yy - (xx-xxx)*ddd;"}],"init_eqs_eel":"","frame_eqs_eel":"mv_r = mv_r + 0.2*( 0.60*sin(0.980*time) + 0.40*sin(1.047*time) );\\nmv_g = mv_g + 0.2*( 0.60*sin(0.835*time) + 0.40*sin(1.081*time) );\\nmv_b = mv_b + 0.2*( 0.60*sin(0.814*time) + 0.40*sin(1.011*time) );\\nq1 = (cx*2-1) + 0.6*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\nq2 = (cy*2-1) + 0.6*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\\nob_r = 1- 0.4*abs(q1);\\nob_g = 0.3*abs(q2);\\nob_b = 0.4*abs(q1);\\nwave_x = 1-abs(q2)-0.05;\\nwave_y = 1-abs(q1)-0.06;\\nwave_r = wave_r + 0.4*( 0.60*sin(0.514*time) + 0.40*sin(1.211*time) );\\nwave_b = wave_b + 0.4*( 0.60*sin(0.714*time) + 0.40*sin(q2) );\\nwave_g = wave_g + 0.4*( 0.60*sin(10*q1) + 0.40*sin(10*q2) );","pixel_eqs_eel":"du = (x*2-1) - q1;\\ndv = (y*2-1) - q2;\\ndist = sqrt(du*du+dv*dv);\\nang2 = atan2(du,dv) + time*0.15;\\nmult = -0.2*sin(dist*0.05);\\ndx = mult*sin(ang2*2-1.5)*aspectx;\\ndy = mult*cos(ang2*2-1.5)*aspecty;","warp":" shader_body { \\n  vec2 my_uv_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (vec2(1280.0, 1024.0) * texsize.zw);\\n  float tmpvar_4;\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (uv + vec2(0.005, 0.0));\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv - vec2(0.005, 0.0));\\n  tmpvar_4 = (((\\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_6).xyz * scale2)\\n   + bias2)).x * tmpvar_3.x);\\n  float tmpvar_7;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (uv + vec2(0.0, 0.005));\\n  vec2 tmpvar_9;\\n  tmpvar_9 = (uv - vec2(0.0, 0.005));\\n  tmpvar_7 = (((\\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_9).xyz * scale2)\\n   + bias2)).x * tmpvar_3.y);\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = tmpvar_4;\\n  tmpvar_10.y = tmpvar_7;\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = (((\\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_6).xyz * scale2)\\n   + bias2)).x * tmpvar_3.x);\\n  tmpvar_11.y = (((\\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_9).xyz * scale2)\\n   + bias2)).x * tmpvar_3.y);\\n  ret_2.x = texture (sampler_fw_main, ((uv - (tmpvar_10 * 0.01)) + (tmpvar_11 * 0.003))).x;\\n  vec4 tmpvar_12;\\n  tmpvar_12 = texture (sampler_blur3, uv);\\n  ret_2.x = (ret_2.x + ((ret_2.x - \\n    ((tmpvar_12.xyz * scale3) + bias3)\\n  .x) * 0.1));\\n  ret_2.x = (ret_2.x + 0.004);\\n  vec2 tmpvar_13;\\n  tmpvar_13.x = tmpvar_7;\\n  tmpvar_13.y = -(tmpvar_4);\\n  my_uv_1 = (uv + ((tmpvar_13 * 0.05) * (1.2 - \\n    ((tmpvar_12.xyz * scale3) + bias3)\\n  .y)));\\n  ret_2.z = texture (sampler_fw_main, my_uv_1).z;\\n  vec2 x_14;\\n  x_14 = (my_uv_1 - uv);\\n  ret_2.z = (ret_2.z + ((\\n    ((ret_2.z - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).z) * sqrt(dot (x_14, x_14)))\\n   * 180.0) / sqrt(\\n    dot (tmpvar_3, tmpvar_3)\\n  )));\\n  ret_2.z = (ret_2.z * 0.8);\\n  ret_2.z = (ret_2.z + 0.004);\\n  vec2 tmpvar_15;\\n  tmpvar_15.x = -(tmpvar_7);\\n  tmpvar_15.y = tmpvar_4;\\n  my_uv_1 = (tmpvar_15 * 0.045);\\n  vec2 tmpvar_16;\\n  tmpvar_16.x = (((\\n    (texture (sampler_blur2, (uv + vec2(0.01, 0.0))).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, (uv - vec2(0.01, 0.0))).xyz * scale2)\\n   + bias2)).y * tmpvar_3.x);\\n  tmpvar_16.y = (((\\n    (texture (sampler_blur2, (uv + vec2(0.0, 0.01))).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, (uv - vec2(0.0, 0.01))).xyz * scale2)\\n   + bias2)).y * tmpvar_3.y);\\n  my_uv_1 = (my_uv_1 + (uv - (tmpvar_16 * 0.03)));\\n  ret_2.y = texture (sampler_fw_main, my_uv_1).y;\\n  ret_2.y = (ret_2.y + ((\\n    (ret_2.y - ((texture (sampler_blur3, my_uv_1).xyz * scale3) + bias3).y)\\n   * 0.1) + 0.01));\\n  vec4 tmpvar_17;\\n  tmpvar_17.w = 1.0;\\n  tmpvar_17.xyz = ret_2;\\n  ret = tmpvar_17.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = (1.0 - q4);\\n  tmpvar_2.y = q8;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (tmpvar_2 + ((uv - tmpvar_2) * 0.992));\\n  ret_1 = (mix (mix (vec3(0.0, 0.0, 0.2), vec3(0.3, 0.0, 1.0), texture (sampler_fw_main, tmpvar_3).yyy), vec3(1.0, 1.0, 0.0), vec3(max (\\n    (((texture (sampler_blur1, tmpvar_3).xyz * scale1) + bias1).z * 1.5)\\n  , texture (sampler_main, \\n    (tmpvar_2 + ((uv - tmpvar_2) * 0.996))\\n  ).z))) * (1.0 - (\\n    ((texture (sampler_blur1, tmpvar_3).xyz * scale1) + bias1)\\n  .x * 2.0)));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = mix (ret_1, vec3(1.0, 0.1, 0.4), texture (sampler_fw_main, uv).xxx);\\n  ret_1 = tmpvar_4;\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = tmpvar_4;\\n  ret = tmpvar_5.xyz;\\n }"}')},4366:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":4,"gammaadj":1,"decay":0.995,"echo_zoom":1.007,"echo_orient":3,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"wave_a":1.413,"wave_scale":0.418,"wave_smoothing":0,"wave_mystery":-0.66,"modwavealphastart":2,"modwavealphaend":2,"warpanimspeed":0.626,"warpscale":1.331,"zoomexp":1.00001,"zoom":0.99951,"warp":0.08925,"wave_r":0,"wave_g":0,"wave_x":0.24,"wave_y":0.44,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"additive":1,"rad":0.0277,"ang":6.03186,"tex_ang":6.03186,"tex_zoom":0.6839,"r2":1,"g2":0,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":1},"init_eqs_eel":"","frame_eqs_eel":"an = an + q6;\\nang = an*0.5;\\nx = q4;\\ny = q5;\\nrad = q3*sqrt(2);\\n\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;\\n"},{"baseVals":{"enabled":1,"additive":1,"rad":0.0277,"ang":6.03186,"tex_ang":6.03186,"tex_zoom":0.6839,"r2":1,"g2":0,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":1},"init_eqs_eel":"","frame_eqs_eel":"an = an + q9;\\nang = an*0.5;\\nx = q7;\\ny = q8;\\nrad = q3*sqrt(2);\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;\\n"},{"baseVals":{"enabled":1,"additive":1,"rad":0.0277,"ang":6.03186,"tex_ang":6.03186,"tex_zoom":0.6839,"r2":1,"g2":0,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":1},"init_eqs_eel":"","frame_eqs_eel":"an = an + q12;\\nang = an*0.5;\\nx = q10;\\ny = q11;\\nrad = q3*sqrt(2);\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;\\n"},{"baseVals":{"sides":48,"additive":1,"num_inst":4,"rad":0.0277,"ang":6.03186,"tex_ang":6.03186,"tex_zoom":0.6839,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"an = an + 0.5*q16/num_inst;\\nw = asin(1)*4*instance/num_inst + an;\\nx = q6 + sin(w)*q5*0.5;\\ny = q7 + cos(w)*q5*0.5;\\nrad = q5*0.25;\\n\\n\\n//x = 0.5 + (x-0.5)/q2;\\n//y = 0.5 + (y-0.5)/q1;\\n"}],"waves":[{"baseVals":{"enabled":1,"thick":1,"additive":1,"scaling":2.0231,"smoothing":0,"r":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"vol = bass*8 + mid*5 + treb*3;\\nm = m*0.97 + vol*0.08;\\nmonitor = vol;\\nbeat = above(vol,res)*above(vol,m)*above(vol,16);\\ndiff = (1-beat)*diff + beat*(vol-res);\\nres = beat*(vol + m*0.04) + (1-beat)*(res -  (0.1+diff*0.02)*60/fps);\\nres = max(0,res);\\n\\na = beat;","point_eqs_eel":"tt3 = tt3*0.6 + (value1)*1;\\ntt2 = tt2*0.7 + tt3*0.2;\\ntt1 = tt1*0.8 + tt2*0.1;\\nd = d*0.9 + tt1*0.2;\\n\\ny = 0.5 + d*sample*(1-sample)*2;\\nx =  -0.05 + sample*1.1;"},{"baseVals":{"spectrum":1,"thick":1,"enabled":0},"init_eqs_eel":"chance = 0;","frame_eqs_eel":"","point_eqs_eel":"// the velocity vector\\n\\nx = q3 + sample*sin(q14)*q13*40;\\ny = q4 + sample*cos(q14)*q13*40;\\n\\n// tangential velocity of rotation\\n//x = q3 + sample*q16*40;\\n//y = q4 - q5/2;\\n\\n\\nx = 0.5 + (x-0.5)/q1;\\ny = 0.5 + (y-0.5)/q2;"},{"baseVals":{"spectrum":1,"thick":1,"enabled":0},"init_eqs_eel":"chance = 0;","frame_eqs_eel":"","point_eqs_eel":"// tangential property of velocity vector\\n\\nx = q3 + sample*sin(q10)*cos(q14-q10)*q13*40;\\ny = q4 + sample*cos(q10)*cos(q14-q10)*q13*40;\\n\\n// vx\\n//x = q3 + sample*q11*40;\\n//y = q4;\\n\\nx = 0.5 + (x-0.5)/q1;\\ny = 0.5 + (y-0.5)/q2;"},{"baseVals":{"spectrum":1,"thick":1,"enabled":0},"init_eqs_eel":"chance = 0;","frame_eqs_eel":"","point_eqs_eel":"// orthogonal property of velocity vector\\n\\nx = q3 + sample*sin(q10+asin(1))*cos(q14-q10-asin(1))*q13*40;\\ny = q4 + sample*cos(q10+asin(1))*cos(q14-q10-asin(1))*q13*40;\\n\\n// vy\\n//x = q3;\\n//y = q4 + sample*q12*40;\\n\\nx = 0.5 + (x-0.5)/q1;\\ny = 0.5 + (y-0.5)/q2;"}],"init_eqs_eel":"x1 = 0.5;\\ny1 = 0.6;\\n\\nx2 = 0.5;\\ny2 = 0.4;\\n\\nx3 = 0.5;\\ny3 = 0.2;\\n\\nvr1 = 0.0001;\\nvr2 = 0.0;\\nvr3 = 0.0;\\n\\nvx1 = 0;\\nvx2 = 0;\\nvx3 = 0;","frame_eqs_eel":"zoom = 1;\\nwarp = 0;\\nwave_a = 0;\\n\\nr = 0.03+ (bass_att+treb_att)*0.004;\\nmonitor = aspecty;\\nvr = sin(vr1)*r;\\nbounce = below(y1,r-(aspectx-1)*0.5);y1 = y1+vy1;vy1 = if(bounce, abs(vy1)*0.96 + (r-y1-(aspectx-1)*0.5)*0.1, vy1-0.0003*60/fps);\\nvx1 = if(bounce, vx1 + (vr-vx1)*0.15, vx1);vr = if(bounce, vr + (vx1-vr)*0.85 , vr);vr1 = asin(vr/r);\\nbounce = above(x1,1-r+(aspecty-1)*0.5);vx1 = if(bounce, - abs(vx1)*0.96 + (1-r-x1+(aspecty-1)*0.5)*0.1, vx1);\\nvy1 = if(bounce, vy1 + (vr-vy1)*0.15, vy1);vr = if(bounce, vr + (vy1-vr)*0.85 , vr);vr1 = asin(vr/r);\\nbounce = below(x1,r-(aspecty-1)*0.5);x1 = x1+vx1;vx1 = if(bounce, abs(vx1)*0.96 + (r-x1-(aspecty-1)*0.5)*0.1, vx1);\\nvy1 = if(bounce, vy1 + (-vr-vy1)*0.15, vy1);vr = if(bounce, vr - (vy1+vr)*0.85 , vr);vr1 = asin(vr/r);\\n\\nvr = sin(vr2)*r;\\nbounce = below(y2,r-(aspectx-1)*0.5);y2 = y2+vy2;vy2 = if(bounce, abs(vy2)*0.96 + (r-y2-(aspectx-1)*0.5)*0.1, vy2-0.0003*60/fps);\\nvx2 = if(bounce, vx2 + (vr-vx2)*0.15, vx2);vr = if(bounce, vr + (vx2-vr)*0.85 , vr);vr2 = asin(vr/r);\\nbounce = above(x2,1-r+(aspecty-1)*0.5);vx2 = if(bounce, - abs(vx2)*0.96 + (1-r-x2+(aspecty-1)*0.5)*0.1, vx2);\\nvy2 = if(bounce, vy2 + (vr-vy2)*0.15, vy2);vr = if(bounce, vr + (vy2-vr)*0.85 , vr);vr2 = asin(vr/r);\\nbounce = below(x2,r-(aspecty-1)*0.5);x2 = x2+vx2;vx2 = if(bounce, abs(vx2)*0.96 + (r-x2-(aspecty-1)*0.5)*0.1, vx2);\\nvy2 = if(bounce, vy2 + (-vr-vy2)*0.15, vy2);vr = if(bounce, vr - (vy2+vr)*0.85 , vr);vr2 = asin(vr/r);\\n\\nvr = sin(vr3)*r;\\nbounce = below(y3,r-(aspectx-1)*0.5);y3 = y3+vy3;vy3 = if(bounce, abs(vy3)*0.96 + (r-y3-(aspectx-1)*0.5)*0.1, vy3-0.0003*60/fps);\\nvx3 = if(bounce, vx3 + (vr-vx3)*0.15, vx3);vr = if(bounce, vr + (vx3-vr)*0.85 , vr);vr3 = asin(vr/r);\\nbounce = above(x3,1-r+(aspecty-1)*0.5);vx3 = if(bounce, - abs(vx3)*0.96 + (1-r-x3+(aspecty-1)*0.5)*0.1, vx3);\\nvy3 = if(bounce, vy3 + (vr-vy3)*0.15, vy3);vr = if(bounce, vr + (vy3-vr)*0.85 , vr);vr3 = asin(vr/r);\\nbounce = below(x3,r-(aspecty-1)*0.5);x3 = x3+vx3;vx3 = if(bounce, abs(vx3)*0.96 + (r-x3-(aspecty-1)*0.5)*0.1, vx3);\\nvy3 = if(bounce, vy3 + (-vr-vy3)*0.15, vy3);vr = if(bounce, vr - (vy3+vr)*0.85 , vr);vr3 = asin(vr/r);\\n\\nbounce = below( sqrt( sqr(x1+vx1-x2-vx2) + sqr(y1+vy1-y2-vy2)), 2*r);\\nbounce = bounce*below(sqrt( sqr(x1+vx1-x2-vx2) + sqr(y1+vy1-y2-vy2)),sqrt( sqr(x1-x2) + sqr(y1-y2)));\\nref_ang = atan2(x2-x1,y2-y1)+asin(1); // common tangent\\nv1 = sqrt(vx1*vx1+vy1*vy1);v2 = sqrt(vx2*vx2+vy2*vy2);w1 = atan2(vx1,vy1);w2 = atan2(vx2,vy2);\\nvr = sin(vr1)*r; v2r=sin(vr2)*r;\\nvx1 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + ((vr-v2r)-sin(ref_ang)*v1*cos(w1-ref_ang))*0.1\\n              + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx1);\\nvy1 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + ((vr-v2r)-cos(ref_ang)*v1*cos(w1-ref_ang))*0.1\\n              + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy1);\\nvx2 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + ((v2r-vr)-sin(ref_ang)*v2*cos(w2-ref_ang))*0.1\\n              + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx2);\\nvy2 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + ((v2r-vr)-cos(ref_ang)*v2*cos(w2-ref_ang))*0.1\\n              + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy2);\\nvr = if(bounce, vr + (cos(w1-ref_ang)*(v1-v2)-vr)*0.9 , vr);vr1 = asin(vr/r);\\nv2r = if(bounce, v2r + (cos(w2-ref_ang)*(v2-v1)-v2r)*0.9 , v2r);vr2 = asin(v2r/r);\\n\\nbounce = below( sqrt( sqr(x1+vx1-x3-vx3) + sqr(y1+vy1-y3-vy3)), 2*r);\\nbounce = bounce*below(sqrt( sqr(x1+vx1-x3-vx3) + sqr(y1+vy1-y3-vy3)),sqrt( sqr(x1-x3) + sqr(y1-y3)));\\nref_ang = atan2(x3-x1,y3-y1)+asin(1); // common tangent\\nv1 = sqrt(vx1*vx1+vy1*vy1);v2 = sqrt(vx3*vx3+vy3*vy3);w1 = atan2(vx1,vy1);w2 = atan2(vx3,vy3);\\nvr = sin(vr1)*r; v2r=sin(vr3)*r;\\nvx1 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + ((vr-v2r)-sin(ref_ang)*v1*cos(w1-ref_ang))*0.1\\n              + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx1);\\nvy1 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + ((vr-v2r)-cos(ref_ang)*v1*cos(w1-ref_ang))*0.1\\n              + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy1);\\nvx3 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + ((v2r-vr)-sin(ref_ang)*v2*cos(w2-ref_ang))*0.1\\n              + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx3);\\nvy3 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + ((v2r-vr)-cos(ref_ang)*v2*cos(w2-ref_ang))*0.1\\n              + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy3);\\nvr = if(bounce, vr + (cos(w1-ref_ang)*(v1-v2)-vr)*0.9 , vr);vr1 = asin(vr/r);\\nv2r = if(bounce, v2r + (cos(w2-ref_ang)*(v2-v1)-v2r)*0.9 , v2r);vr3 = asin(v2r/r);\\n\\nbounce = below( sqrt( sqr(x3+vx3-x2-vx2) + sqr(y3+vy3-y2-vy2)), 2*r);\\nbounce = bounce*below(sqrt( sqr(x2+vx2-x3-vx3) + sqr(y2+vy2-y3-vy3)),sqrt( sqr(x2-x3) + sqr(y2-y3)));\\nref_ang = atan2(x2-x3,y2-y3)+asin(1); // common tangent\\nv1 = sqrt(vx3*vx3+vy3*vy3);v2 = sqrt(vx2*vx2+vy2*vy2);w1 = atan2(vx3,vy3);w2 = atan2(vx2,vy2);\\nvr = sin(vr3)*r; v2r=sin(vr2)*r;\\nvx3 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + ((vr-v2r)-sin(ref_ang)*v1*cos(w1-ref_ang))*0.1\\n              + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx3);\\nvy3 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + ((vr-v2r)-cos(ref_ang)*v1*cos(w1-ref_ang))*0.1\\n              + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy3);\\nvx2 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + ((v2r-vr)-sin(ref_ang)*v2*cos(w2-ref_ang))*0.1\\n              + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx2);\\nvy2 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + ((v2r-vr)-cos(ref_ang)*v2*cos(w2-ref_ang))*0.1\\n              + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy2);\\nvr = if(bounce, vr + (cos(w1-ref_ang)*(v1-v2)-vr)*0.9 , vr);vr3 = asin(vr/r);\\nv2r = if(bounce, v2r + (cos(w2-ref_ang)*(v2-v1)-v2r)*0.9 , v2r);vr2 = asin(v2r/r);\\n\\n\\n\\n\\nq1 = aspectx;\\nq2 = aspecty;\\nq3 = r*2;\\n\\nq4  = x1;  q5 = y1;  q6 = vr1;\\nq7  = x2;  q8 = y2;  q9 = vr2;\\nq10 = x3; q11 = y3; q12 = vr3;\\n\\nq13 = atan2( (x1+x2+x3)/3 - 0.5, (y1+y2+y3)/3-0.5);\\nq14 = sigmoid(sqrt( sqr((x1+x2+x3)/3 - 0.5) + sqr((y1+y2+y3)/3-0.5) ),2)*0.2;","pixel_eqs_eel":"du = (x*2-1) - (q4+q7+q10-1.5)*2/3;\\ndv = (y*2-1) + (q5+q8+q11-1.5)*2/3;\\ndist = sqrt(du*du+dv*dv);\\nang2 = atan2(du,dv);\\nmult = sin(dist*0.05)*0.4*q14;\\ndx = mult*sin(ang2*2+q13)*aspectx;\\ndy = mult*cos(ang2*2+q13)*aspecty;","warp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 8.0);\\n  ret_1.xz = vec2(0.0, 0.0);\\n  vec2 tmpvar_3;\\n  tmpvar_3 = fract(uv);\\n  ret_1.y = texture (sampler_fc_main, tmpvar_3).y;\\n  ret_1.y = (ret_1.y + ((\\n    ((ret_1.y - ((texture (sampler_blur3, tmpvar_3).xyz * scale3) + bias3).y) - 0.03)\\n   * 0.6) - 0.06));\\n  ret_1.y = (ret_1.y + ((\\n    (texture (sampler_blur3, uv_orig).xyz * scale3)\\n   + bias3).x * 0.3));\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = (((texture (sampler_blur1, \\n    (uv_orig + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv_orig - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1)).z;\\n  tmpvar_4.y = (((texture (sampler_blur1, \\n    (uv_orig + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv_orig - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1)).z;\\n  ret_1.z = (texture (sampler_fc_main, (mix (uv_orig, uv, vec2(0.3, 0.3)) + (\\n    (tmpvar_4 * texsize.zw)\\n   * 8.0))).z - 0.03);\\n  ret_1.z = (ret_1.z + ((\\n    clamp ((0.2 - ((texture (sampler_blur2, uv).xyz * scale2) + bias2).y), 0.0, 1.0)\\n   * 0.1) + (\\n    ((texture (sampler_blur2, uv_orig).xyz * scale2) + bias2)\\n  .x * 0.2)));\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = ret_1;\\n  ret = tmpvar_5.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 6.0);\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = dot (tmpvar_3, vec3(0.32, 0.49, 0.29));\\n  tmpvar_5.y = dot (tmpvar_4, vec3(0.32, 0.49, 0.29));\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv - (0.25 * tmpvar_5));\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = dot (tmpvar_3, vec3(0.32, 0.49, 0.29));\\n  tmpvar_7.y = dot (tmpvar_4, vec3(0.32, 0.49, 0.29));\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (uv + (0.25 * tmpvar_7));\\n  ret_1 = ((0.8 * (\\n    (texture (sampler_blur3, tmpvar_6).xyz * scale3)\\n   + bias3)) - ((texture (sampler_blur1, tmpvar_6).xyz * scale1) + bias1));\\n  ret_1 = (ret_1 + (0.6 * (\\n    (texture (sampler_blur1, uv).xyz * scale1)\\n   + bias1)));\\n  ret_1 = (ret_1 - ((\\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur1, tmpvar_8).xyz * scale1)\\n   + bias1)));\\n  ret_1 = (ret_1 + ((1.2 * texture (sampler_main, tmpvar_8).xyz) + (0.15 * \\n    ((texture (sampler_blur1, tmpvar_8).xyz * scale1) + bias1)\\n  )));\\n  ret_1 = (ret_1 + 0.9);\\n  ret_1 = (vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))) - (0.15 * dot (texture (sampler_noise_hq, \\n    (uv + (0.01 * time))\\n  ), vec4(0.32, 0.49, 0.29, 0.0))));\\n  ret_1 = (mix (ret_1, (\\n    (0.75 * ret_1)\\n   * \\n    dot ((((0.6 * \\n      ((texture (sampler_blur3, tmpvar_6).xyz * scale3) + bias3)\\n    ) - (0.7 * texture (sampler_main, uv).xyz)) - (0.3 * (\\n      (texture (sampler_blur1, tmpvar_8).xyz * scale1)\\n     + bias1))), vec3(0.32, 0.49, 0.29))\\n  ), pow (hue_shader, ret_1)) * 0.8);\\n  ret_1 = (ret_1 * ret_1);\\n  vec3 tmpvar_9;\\n  tmpvar_9 = sqrt(ret_1);\\n  ret_1 = tmpvar_9;\\n  vec4 tmpvar_10;\\n  tmpvar_10.w = 1.0;\\n  tmpvar_10.xyz = tmpvar_9;\\n  ret = tmpvar_10.xyz;\\n }"}')},8752:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":4,"gammaadj":1,"decay":0.9,"echo_zoom":1,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":5.715,"wave_smoothing":0.9,"modwavealphastart":1,"modwavealphaend":1,"warpanimspeed":0.162,"warpscale":5.582,"zoomexp":0.32104,"zoom":0.9901,"warp":0.11563,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"thickoutline":1,"textured":1,"rad":0.05343,"tex_zoom":12.77228,"g":1,"b":1,"a":0,"r2":1,"b2":1,"a2":1,"border_g":0,"border_a":0},"init_eqs_eel":"vx = 0;\\nvy = 0;","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":100,"textured":1,"y":0.75,"rad":0.46753,"g":1,"b":1,"r2":1,"b2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"w = -atan2(0.5,q1)*4+asin(1)*4;\\nang = w;\\nx = 0.5 +sin(w)*0.19;\\ny = 0.5 +cos(w)*0.26;"},{"baseVals":{"enabled":1,"sides":100,"textured":1,"y":0.75,"rad":0.46753,"g":1,"b":1,"r2":1,"b2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"w = -atan2(0.5,q1)*4+asin(1)*4 + asin(1)*2/3;\\nang = w;\\nx = 0.5 +sin(w)*0.19;\\ny = 0.5 +cos(w)*0.26;"},{"baseVals":{"enabled":1,"sides":100,"textured":1,"y":0.75,"rad":0.46753,"g":1,"b":1,"r2":1,"b2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"w = -atan2(0.5,q1)*4+asin(1)*4 - asin(1)*2/3;\\nang = w;\\nx = 0.5 +sin(w)*0.19;\\ny = 0.5 +cos(w)*0.26;"}],"waves":[{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1,"scaling":2.44415,"smoothing":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t1 = 0;\\nv = 0.01;\\nj = j + (bass)*0.01;\\nj2 = j2 + (mid_att)*0.01;\\nj3 = j3 + (treb_att)*0.01;\\nt2 = j;\\nt3 = j2;\\nt4 = j3;\\n//t5 = 0;\\nk = k*0.99 + 10*mid/fps;\\nt5 = -k;\\n\\ncl1 = cl1 - 0.0005 - bass*0.003;\\ncl1 = if(above(cl1,1),0,cl1);\\ncl1 = if(below(cl1,0),1,cl1);\\nt8 = cl1;\\n\\ncl2 = cl2 +0.0001 + mid*0.001 - bass*0.0005 -treb*0.0005;\\ncl2 = if(above(cl2,1),0,cl2);\\ncl2 = if(below(cl2,0),1,cl2);\\nt7 = cl2;\\n\\ncl3 = cl3 +0.0001+ treb*0.001 - bass*0.0005 - mid*0.0005;\\ncl3 = if(above(cl3,1),0,cl3);\\ncl3 = if(below(cl3,0),1,cl3);\\nt6 = cl3;","point_eqs_eel":"xx = ((sample*0983624912364)%10000000+100)/10000000;\\nyy = ((xx*1896575575)%10000000+100)/10000000;\\nzz = ((yy*58652340875)%10000000+100)/10000000;\\n\\n\\nd = sqrt(sqr(xx)+sqr(yy)+sqr(zz));\\n\\nzz = zz + t8 - if(above(zz+t8,1),1,0) - 0.5;\\nxx = xx + t7 - if(above(xx+t7,1),1,0) - 0.5;\\nyy = yy + t6 - if(above(yy+t6,1),1,0) - 0.5;\\n\\nv = 0.001;\\n\\nw = 1;// (sample*sin(time*0.3)*0.01-1);\\nbb = d*d*0.5;\\nn= 0.3;\\ns1 = sin(sin(t2*w+bb)*n);\\ns2 = sin(sin(t3*w+bb)*n);\\ns3 = sin(sin(t4*w+bb)*n);\\nc1 = cos(sin(t2*w+bb)*n);\\nc2 = cos(sin(t3*w+bb)*n);\\nc3 = cos(sin(t4*w+bb)*n);\\n\\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\\n\\nzoom = .5*(1/(z+0.5));\\nx = 0.5 + zoom*x1 + sin(time*0.1)*0;;\\ny = 0.5 + zoom*y1 + cos(time*0.16801)*0;\\n\\npi3 = 3.1415*2*0.3333;\\nt = z*2+t2*1;\\nc=3;\\nr = sin(t)*c;\\n\\ng = sin(t+pi3)*c;\\n\\nb = sin(t-pi3)*c;\\n\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\n\\na = -z+0.7;"},{"baseVals":{"enabled":1,"thick":1,"scaling":2.44415,"smoothing":0,"a":0.05},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t8 = 1;","point_eqs_eel":"t8 = -t8;\\ny = sample*0.48;\\nx = 0.5 + t8*0.04 - t8*sample*0.02 + (sqr(sample*2-1)-1)*q1*0.5;\\n\\npi3 = 3.1415*2*0.3333;\\nt = -(q4-q6)*10+sample*asin(1)*4.01;\\nc=9;\\nr = sin(t)*c;\\n\\ng = sin(t+pi3)*c;\\n\\nb = sin(t-pi3)*c;\\n\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\n"},{"baseVals":{"enabled":1,"samples":49,"scaling":2.44415,"smoothing":0,"r":0,"g":0,"b":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t8 = 1;","point_eqs_eel":"t8 = -1;\\ny = sample*0.48;\\nx = 0.5 + t8*0.04 - t8*sample*0.02 + (sqr(sample*2-1)-1)*q1*0.5;"},{"baseVals":{"enabled":1,"samples":49,"scaling":2.44415,"smoothing":0,"r":0,"g":0,"b":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t8 = 1;","point_eqs_eel":"t8 = 1;\\ny = sample*0.48;\\nx = 0.5 + t8*0.04 - t8*sample*0.02 + (sqr(sample*2-1)-1)*q1*0.5;"}],"init_eqs_eel":"x1 = 0;\\ny1 = 0;","frame_eqs_eel":"zoom = 1.0;\\n\\nq1 = .1*(bass-treb);\\n\\nvvb = if(below(vvb,0),0,vvb);\\nvvm = if(below(vvm,0),0,vvm);\\nvvt = if(below(vvt,0),0,vvt);\\nvb = vb*0.85 + (1-vb)*pow(bass,2)*0.001;\\nvvb = vvb*0.95 + (1-vvb)*vb*0.2;\\nvm = vm*0.85 + (1-vm)*pow(mid,2)*0.01;\\nvvm = vvm*0.95 + (1-vvm)*vm*0.2;\\nvt = vt*0.85 + (1-vt)*pow(treb,2)*0.001;\\nvvt = vvt*0.95 + (1-vvt)*vt*0.2;\\n\\nq1 = (vvb-vvt)*vvm;//0.5 + vb - vvb;\\nq2 = vvm;//0.5 + vm - vvm;\\nq3 = vvt;//0.5 + vt - vvt;\\n\\nv=0.2;\\nd = 0;//v*0.2;\\nbb = bb + vvb*v - d;\\nmm = mm + vvm*v - d;\\ntt = tt + vvt*v - d;\\nq4 = bb;\\nq5 = mm;\\nq6 = tt;\\n\\n\\nq4 = if(above(abs(q1),0.02),0.99,1);\\nq9 = 0.5 + 0.5*sin(time*0.14);","pixel_eqs_eel":"","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (texture (sampler_fc_main, uv) * q4).xyz;\\n  ret = tmpvar_1.xyz;\\n }","comp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1.x = 0.5;\\n  tmpvar_1.y = (1.0 - q9);\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (uv_orig - tmpvar_1);\\n  float tmpvar_3;\\n  tmpvar_3 = (3.0 / tmpvar_2.y);\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = ((tmpvar_2.x * tmpvar_3) * q9);\\n  tmpvar_4.y = (tmpvar_3 * q9);\\n  vec4 tmpvar_5;\\n  tmpvar_5 = texture (sampler_main, fract(((1.0 - \\n    abs(((fract(\\n      ((tmpvar_2 + vec2(0.5, 1.0)) * 0.5)\\n    ) * 2.0) - 1.0))\\n  ) - (\\n    ((texture (sampler_noise_hq, ((tmpvar_4 * 0.05) + (vec2(0.1, -0.05) * time))) - 0.5) * float(int((tmpvar_2.y > 0.0))))\\n  .xy * 0.025))));\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = (((tmpvar_5.xyz * tmpvar_5.xyz) * 1.4) - 0.04);\\n  ret = tmpvar_6.xyz;\\n }"}')},15:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1.56,"decay":1,"echo_zoom":0.362,"echo_orient":1,"wave_thick":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":1.599,"wave_smoothing":0,"wave_mystery":-0.5,"modwavealphastart":2,"modwavealphaend":2,"warpscale":0.107,"zoomexp":0.1584,"fshader":1,"warp":0.01,"wave_r":0.51,"wave_g":0.5,"ob_size":0,"ob_a":1,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0.5,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"sides":100,"thickoutline":1,"rad":0.50126,"tex_zoom":0.99996,"g":1,"b":1,"r2":1,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.5+sin(time*0.618)*0.2;\\ny = 0.5+cos(time*1.618)*0.2;\\nrad = bass*0.05;\\nborder_r = 1-(sin(time*1.25)*0.3+0.7);\\nborder_g = 1-(sin(time)*0.3+0.3);\\nborder_b = 1-(sin(time/3)*0.5+0.5);"},{"baseVals":{"sides":100,"thickoutline":1,"rad":0.50126,"g":1,"b":1,"g2":0,"b2":1,"border_g":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.5+sin(time*2.618)*0.3;\\ny = 0.5+cos(time*3.14)*0.3;\\nrad = bass*0.05;\\nborder_r = 1-(sin(time*1.25)*0.3+0.7);\\nborder_g = 1-(sin(time)*0.3+0.3);\\nborder_b = 1-(sin(time/3)*0.5+0.5);\\n"},{"baseVals":{"sides":100,"thickoutline":1,"rad":0.50126,"tex_zoom":0.9998,"g":1,"b":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.5+sin(-time*2.618)*0.4;\\ny = 0.5+cos(-time*1.14)*0.4;\\nrad = bass*0.05;\\nborder_r = 1-(sin(time*1.25)*0.3+0.7);\\nborder_g = 1-(sin(time)*0.3+0.3);\\nborder_b = 1-(sin(time/3)*0.5+0.5);"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"scaling":0.16188,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"additive":1,"scaling":25.12601,"smoothing":1,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"//zoom = 0.99;\\nib_r = sin(time*1.25*4)*0.3+0.7;\\nib_g = sin(time*4)*0.3+0.3;\\nib_b = sin(time/3*4)*0.5+0.5;\\n\\nxx1 = xx1*0.9 + (bass)*0.01;\\nxx2 = xx2*0.9 + (treb)*0.01;\\nyy1 = yy1*0.94 + (treb+bass)*0.0075;\\n\\nx1 = 0.5 + (xx1-xx2)*2;\\ny1 = 0.4 + yy1;\\n\\nx1 = max(0,min(1,x1)); y1 = max(0,min(1,y1));\\n\\nspring = 10;\\ngrav = .5;\\nresist = 1;\\nbounce = 0.75;\\ndt = 0.0002*(60/fps);\\n\\nvx2 = vx2*(1-resist*dt) + dt*((x1+x3-2*x2)*spring);\\nvy2 = vy2*(1-resist*dt) + dt*((y1+y3-2*y2)*spring-grav);\\nvx3 = vx3*(1-resist*dt) + dt*((x2+x4-2*x3)*spring);\\nvy3 = vy3*(1-resist*dt) + dt*((y2+y4-2*y3)*spring-grav);\\nvx4 = vx4*(1-resist*dt) + dt*((x3-x4)*spring);\\nvy4 = vy4*(1-resist*dt) + dt*((y3-y4)*spring-grav);\\n\\nx2 = x2 + vx2;\\ny2 = y2 + vy2;\\nx3 = x3 + vx3;\\ny3 = y3 + vy3;\\nx4 = x4 + vx4;\\ny4 = y4 + vy4;\\n\\nvx2 = if(above(x2,0),vx2,abs(vx2)*bounce);\\nvx2 = if(below(x2,1),vx2,-abs(vx2)*bounce);\\nvx3 = if(above(x3,0),vx3,abs(vx3)*bounce);\\nvx3 = if(below(x3,1),vx3,-abs(vx3)*bounce);\\nvx4 = if(above(x4,0),vx4,abs(vx4)*bounce);\\nvx4 = if(below(x4,1),vx4,-abs(vx4)*bounce);\\nvy2 = if(above(y2,0),vy2,abs(vy2)*bounce);\\nvy2 = if(below(y2,1),vy2,-abs(vy2)*bounce);\\nvy3 = if(above(y3,0),vy3,abs(vy3)*bounce);\\nvy3 = if(below(y3,1),vy3,-abs(vy3)*bounce);\\nvy4 = if(above(y4,0),vy4,abs(vy4)*bounce);\\nvy4 = if(below(y4,1),vy4,-abs(vy4)*bounce);\\nq4 = x4;\\nq8 = y4;\\n\\nq1 = aspectx;\\nq2 = aspecty;\\n\\nzoom = 1;\\nwarp = 0;\\nbb = bb*0.99 + bass*0.02;\\nmm = mm*0.99 + mid*0.02;\\ntt = tt*0.99 + treb*0.02;\\n\\nmx = max(max(bb,mm),tt);\\nmn = min(min(bb,mm),tt);\\n\\nob_r = (bb-mn)/(mx-mn);\\nob_b = (mm-mn)/(mx-mn);\\nob_g = (tt-mn)/(mx-mn);\\nq6 = atan2(vx4,vy4);\\nq5 = sqrt(vx4*vx4 + vy4*vy4);\\n\\na = a*0.95 + q5;\\n\\ns = s*0.9 + a;\\nq3 = s*0.1;\\nmonitor = s;\\n\\nwave_a = 0;","pixel_eqs_eel":"x = 0.5 + (x-0.5)*q1;\\ny = 0.5 + (y-0.5)*q2;\\n\\ndir = -q6*1 + asin(1)*0;\\n\\nb1 = 0.1; // distance\\nm1 = q5*25;//-0.6 + q5*200; // size\\nt1 = 0.05; // velocity\\n\\nxx = q4;\\nyy = 1-q8;\\n\\ndx = 0; dy = 0;\\n\\nd = sqrt((x-xx)*(x-xx)+(y-yy)*(y-yy));\\n\\nr = 0.05;\\nv = -35*q5;\\ndx = v*sin(dir)*(r-d)*(1-sigmoid(d-r,200))*q2;\\ndy = v*cos(dir)*(r-d)*(1-sigmoid(d-r,200))*q1;","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv);\\n  tmpvar_1.xyz = ((texture (sampler_main, clamp (\\n    (uv - (((vec2(0.0, 32.0) * texsize.zw) * dot (\\n      (tmpvar_2.xyz - 0.35)\\n    , vec3(0.32, 0.49, 0.29))) * (dot (tmpvar_2.xyz, vec3(0.32, 0.49, 0.29)) - 0.4)))\\n  , 0.0, 1.0)).xyz - 0.0011) + ((texture (sampler_noise_lq, \\n    (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 1.5)) + rand_frame.xy)\\n  ) - 0.5) * 0.0038).xyz);\\n  ret = tmpvar_1.xyz;\\n }","comp":" shader_body { \\n  vec2 uv1_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2.y = 0.0;\\n  tmpvar_2.x = texsize.z;\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = 0.0;\\n  tmpvar_3.y = texsize.w;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = (texture (sampler_main, (uv - tmpvar_2)).xyz - texture (sampler_main, (uv + tmpvar_2)).xyz).x;\\n  tmpvar_4.y = (texture (sampler_main, (uv - tmpvar_3)).xyz - texture (sampler_main, (uv + tmpvar_3)).xyz).x;\\n  uv1_1 = ((0.3 * cos(\\n    ((uv - 0.5) * 2.0)\\n  )) - tmpvar_4);\\n  float tmpvar_5;\\n  tmpvar_5 = clamp ((0.04 / sqrt(\\n    dot (uv1_1, uv1_1)\\n  )), 0.0, 1.0);\\n  uv1_1 = ((0.3 * cos(\\n    (uv1_1 * 12.0)\\n  )) - (9.0 * tmpvar_4));\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = (tmpvar_5 + ((texture (sampler_main, uv).xyz * 12.0) * vec3(clamp (\\n    (0.04 / sqrt(dot (uv1_1, uv1_1)))\\n  , 0.0, 1.0))));\\n  ret = tmpvar_6.xyz;\\n }"}')},6643:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1.56,"decay":1,"echo_zoom":0.362,"echo_orient":1,"wave_thick":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":1.599,"wave_smoothing":0,"wave_mystery":-0.5,"modwavealphastart":2,"modwavealphaend":2,"warpscale":0.107,"zoomexp":0.1584,"fshader":1,"warp":0.01,"wave_r":0.51,"wave_g":0.5,"ob_size":0,"ob_a":1,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0.5,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"sides":100,"thickoutline":1,"rad":0.50126,"tex_zoom":0.99996,"g":1,"b":1,"r2":1,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.5+sin(time*0.618)*0.2;\\ny = 0.5+cos(time*1.618)*0.2;\\nrad = bass*0.05;\\nborder_r = 1-(sin(time*1.25)*0.3+0.7);\\nborder_g = 1-(sin(time)*0.3+0.3);\\nborder_b = 1-(sin(time/3)*0.5+0.5);"},{"baseVals":{"sides":100,"thickoutline":1,"rad":0.50126,"g":1,"b":1,"g2":0,"b2":1,"border_g":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.5+sin(time*2.618)*0.3;\\ny = 0.5+cos(time*3.14)*0.3;\\nrad = bass*0.05;\\nborder_r = 1-(sin(time*1.25)*0.3+0.7);\\nborder_g = 1-(sin(time)*0.3+0.3);\\nborder_b = 1-(sin(time/3)*0.5+0.5);\\n"},{"baseVals":{"sides":100,"thickoutline":1,"rad":0.50126,"tex_zoom":0.9998,"g":1,"b":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.5+sin(-time*2.618)*0.4;\\ny = 0.5+cos(-time*1.14)*0.4;\\nrad = bass*0.05;\\nborder_r = 1-(sin(time*1.25)*0.3+0.7);\\nborder_g = 1-(sin(time)*0.3+0.3);\\nborder_b = 1-(sin(time/3)*0.5+0.5);"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"scaling":0.16188,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"additive":1,"scaling":25.12601,"smoothing":1,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"q11 = 0.5/asin(1);","frame_eqs_eel":"//zoom = 0.99;\\nib_r = sin(time*1.25*4)*0.3+0.7;\\nib_g = sin(time*4)*0.3+0.3;\\nib_b = sin(time/3*4)*0.5+0.5;\\n\\nxx1 = xx1*0.9 + (bass)*0.01;\\nxx2 = xx2*0.9 + (treb)*0.01;\\nyy1 = yy1*0.94 + (treb+bass)*0.0075;\\n\\nx1 = 0.5 + (xx1-xx2)*2;\\ny1 = 0.4 + yy1;\\n\\nx1 = max(0,min(1,x1)); y1 = max(0,min(1,y1));\\n\\nspring = 10;\\ngrav = .5;\\nresist = 1;\\nbounce = 0.75;\\ndt = 0.0002*(60/fps);\\n\\nvx2 = vx2*(1-resist*dt) + dt*((x1+x3-2*x2)*spring);\\nvy2 = vy2*(1-resist*dt) + dt*((y1+y3-2*y2)*spring-grav);\\nvx3 = vx3*(1-resist*dt) + dt*((x2+x4-2*x3)*spring);\\nvy3 = vy3*(1-resist*dt) + dt*((y2+y4-2*y3)*spring-grav);\\nvx4 = vx4*(1-resist*dt) + dt*((x3-x4)*spring);\\nvy4 = vy4*(1-resist*dt) + dt*((y3-y4)*spring-grav);\\n\\nx2 = x2 + vx2;\\ny2 = y2 + vy2;\\nx3 = x3 + vx3;\\ny3 = y3 + vy3;\\nx4 = x4 + vx4;\\ny4 = y4 + vy4;\\n\\nvx2 = if(above(x2,0),vx2,abs(vx2)*bounce);\\nvx2 = if(below(x2,1),vx2,-abs(vx2)*bounce);\\nvx3 = if(above(x3,0),vx3,abs(vx3)*bounce);\\nvx3 = if(below(x3,1),vx3,-abs(vx3)*bounce);\\nvx4 = if(above(x4,0),vx4,abs(vx4)*bounce);\\nvx4 = if(below(x4,1),vx4,-abs(vx4)*bounce);\\nvy2 = if(above(y2,0),vy2,abs(vy2)*bounce);\\nvy2 = if(below(y2,1),vy2,-abs(vy2)*bounce);\\nvy3 = if(above(y3,0),vy3,abs(vy3)*bounce);\\nvy3 = if(below(y3,1),vy3,-abs(vy3)*bounce);\\nvy4 = if(above(y4,0),vy4,abs(vy4)*bounce);\\nvy4 = if(below(y4,1),vy4,-abs(vy4)*bounce);\\nq4 = x4;\\nq8 = y4;\\n\\nq1 = aspectx;\\nq2 = aspecty;\\n\\nzoom = 1;\\nwarp = 0;\\nbb = bb*0.99 + bass*0.02;\\nmm = mm*0.99 + mid*0.02;\\ntt = tt*0.99 + treb*0.02;\\n\\nmx = max(max(bb,mm),tt);\\nmn = min(min(bb,mm),tt);\\n\\nob_r = (bb-mn)/(mx-mn);\\nob_b = (mm-mn)/(mx-mn);\\nob_g = (tt-mn)/(mx-mn);\\nq6 = atan2(vx4,vy4);\\nq5 = sqrt(vx4*vx4 + vy4*vy4);\\n\\na = a*0.95 + q5;\\n\\ns = s*0.9 + a;\\nq3 = s*0.1;\\nmonitor = s;\\n\\nwave_a = 0;\\n\\nq9 = 0.5 + 0.5*sin(time*0.1);","pixel_eqs_eel":"x = 0.5 + (x-0.5)*q1;\\ny = 0.5 + (y-0.5)*q2;\\nxx = q4;\\nyy = 1-q8;\\n\\ndx = 0; dy = 0;\\n\\nd = sqrt((x-xx)*(x-xx)+(y-yy)*(y-yy));\\n\\nr = 0.11;\\nv = 20;\\nv2 = q5;\\ndx = (v*(sin(y-yy)*(d-r)-(x-xx)*(d-r/2)) + cos(dir)*v2)*(1.00-sigmoid(d-r,100));\\ndy = (-v*(sin(x-xx)*(d-r)+(y-yy)*(d-r/2)) -sin(dir)*v2)*(1.00-sigmoid(d-r,100));","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv);\\n  tmpvar_1.xyz = ((texture (sampler_main, clamp (\\n    (uv - (((vec2(0.0, 32.0) * texsize.zw) * dot (\\n      (tmpvar_2.xyz - 0.35)\\n    , vec3(0.32, 0.49, 0.29))) * (dot (tmpvar_2.xyz, vec3(0.32, 0.49, 0.29)) - 0.4)))\\n  , 0.0, 1.0)).xyz - 0.0011) + ((texture (sampler_noise_lq, \\n    (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 1.5)) + rand_frame.xy)\\n  ) - 0.5) * 0.0038).xyz);\\n  ret = tmpvar_1.xyz;\\n }","comp":"vec2 xlat_mutabled;\\nvec3 xlat_mutabledx;\\nvec3 xlat_mutabledy;\\n shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = 0.5;\\n  tmpvar_2.y = (1.0 - q9);\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (uv_orig - tmpvar_2);\\n  float tmpvar_4;\\n  tmpvar_4 = (3.0 / tmpvar_3.y);\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = ((tmpvar_3.x * tmpvar_4) * q9);\\n  tmpvar_5.y = (tmpvar_4 * q9);\\n  xlat_mutabled = (texsize.zw * 1.5);\\n  xlat_mutabledx = (texture (sampler_main, (uv_orig + (vec2(1.0, 0.0) * xlat_mutabled))).xyz - texture (sampler_main, (uv_orig - (vec2(1.0, 0.0) * xlat_mutabled))).xyz);\\n  xlat_mutabledy = (texture (sampler_main, (uv_orig + (vec2(0.0, 1.0) * xlat_mutabled))).xyz - texture (sampler_main, (uv_orig - (vec2(0.0, 1.0) * xlat_mutabled))).xyz);\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = xlat_mutabledx.y;\\n  tmpvar_6.y = xlat_mutabledy.y;\\n  vec2 x_7;\\n  x_7 = (tmpvar_6 * 8.0);\\n  ret_1 = (((texture (sampler_main, \\n    fract((((1.0 - \\n      abs(((fract(\\n        ((tmpvar_3 + vec2(0.5, 1.0)) * 0.5)\\n      ) * 2.0) - 1.0))\\n    ) + vec2(0.0, -0.02)) - ((\\n      (texture (sampler_noise_hq, ((tmpvar_5 * 0.05) + (vec2(0.1, -0.05) * time))) - 0.5)\\n     * \\n      float(int((tmpvar_3.y > 0.0)))\\n    ).xy * 0.025)))\\n  ).x * \\n    (1.0 - sqrt(dot (x_7, x_7)))\\n  ) * (\\n    (hue_shader * 6.0)\\n   - 4.0)) * 0.8);\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = xlat_mutabledx.z;\\n  tmpvar_8.y = xlat_mutabledy.z;\\n  vec2 x_9;\\n  x_9 = (tmpvar_8 * 4.0);\\n  vec3 tmpvar_10;\\n  tmpvar_10 = mix (ret_1, vec3(1.0, 1.0, 1.0), vec3(sqrt(dot (x_9, x_9))));\\n  ret_1 = tmpvar_10;\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 1.0;\\n  tmpvar_11.xyz = tmpvar_10;\\n  ret = tmpvar_11.xyz;\\n }"}')},4495:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":3,"gammaadj":1.21,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":1,"wave_thick":1,"wave_brighten":0,"wrap":0,"darken":1,"invert":1,"wave_a":0.004,"wave_scale":0.01,"wave_smoothing":0,"wave_mystery":-0.44,"modwavealphastart":1,"modwavealphaend":1,"warpanimspeed":0.01,"warpscale":100,"zoomexp":0.92178,"fshader":1,"zoom":0.9901,"warp":0.01,"wave_y":0.04,"ob_size":0.005,"ob_r":1,"ob_g":1,"ob_b":1,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0.25,"mv_g":0.5,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"sides":100,"thickoutline":1,"textured":1,"x":0.77,"y":0.79,"rad":0.31091,"ang":4.27256,"tex_ang":0.12566,"tex_zoom":1.51878,"g":1,"b":1,"a":0.96,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"vx = 0","frame_eqs_eel":""},{"baseVals":{"sides":100,"additive":1,"thickoutline":1,"y":0.75,"rad":0.04208,"tex_zoom":0.73458,"g":1,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"vx = 0","frame_eqs_eel":"x = q3;\\ny = q7;"},{"baseVals":{"sides":100,"additive":1,"thickoutline":1,"y":0.75,"rad":0.04208,"tex_zoom":0.73458,"g":1,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"vx = 0","frame_eqs_eel":"x = q2;\\ny = q6;"},{"baseVals":{"sides":100,"additive":1,"thickoutline":1,"y":0.75,"rad":0.07059,"tex_zoom":0.73458,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"vx = 0","frame_eqs_eel":"x = q1;\\ny = q5;"}],"waves":[{"baseVals":{"usedots":1,"scaling":2.44415,"smoothing":0,"a":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t1 = 0;\\nv = 0.01;\\nj = j + (bass)*0.01;\\nj2 = j2 + (mid_att)*0.01;\\nj3 = j3 + (treb_att)*0.01;\\nt2 = j;\\nt3 = j2;\\nt4 = j3;\\n//t5 = 0;\\nk = k*0.99 + 10*mid/fps;\\nt5 = -k;\\n\\ncl1 = cl1 + 0.002;\\ncl1 = if(above(cl1,1),0,cl1);\\ncl1 = if(below(cl1,0),1,cl1);\\nt8 = cl1;\\n\\ncl2 = cl2 -1*q1;\\ncl2 = if(above(cl2,1),0,cl2);\\ncl2 = if(below(cl2,0),1,cl2);\\nt7 = cl2;\\n\\ncl3 = cl3 +0.001;\\ncl3 = if(above(cl3,1),0,cl3);\\ncl3 = if(below(cl3,0),1,cl3);\\nt6 = cl3;","point_eqs_eel":"xx = ((sample*0983624912364)%10000000+100)/10000000;\\nyy = ((xx*1896575575)%10000000+100)/10000000;\\nzz = ((yy*58652340875)%10000000+100)/10000000;\\n\\n\\nd = sqrt(sqr(xx)+sqr(yy)+sqr(zz));\\n\\nzz = zz + t8 - if(above(zz+t8,1),1,0) - 0.5;\\nxx = xx + t7 - if(above(xx+t7,1),1,0) - 0.5;\\nyy = yy + t6 - if(above(yy+t6,1),1,0) - 0.5;\\n\\nv = 0.001;\\n\\nw = 1;// (sample*sin(time*0.3)*0.01-1);\\nbb = d*d*0.5;\\nn= 0.3;\\ns1 = sin(sin(t2*w+bb)*n);\\ns2 = sin(sin(t3*w+bb)*n);\\ns3 = sin(sin(t4*w+bb)*n);\\nc1 = cos(sin(t2*w+bb)*n);\\nc2 = cos(sin(t3*w+bb)*n);\\nc3 = cos(sin(t4*w+bb)*n);\\n\\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\\n\\nzoom = .5*(1/(z+0.5));\\nx = 0.5 + zoom*x1 + sin(time*0.1)*0;;\\ny = 0.5 + zoom*y1 + cos(time*0.16801)*0;\\n\\npi3 = 3.1415*2*0.3333;\\nt = z*2+t2*1;\\nc=3;\\n//r = sin(t)*c;\\n\\n//g = sin(t+pi3)*c;\\n\\n//b = sin(t-pi3)*c;\\n\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\n\\na = 0.4;"},{"baseVals":{"scaling":2.44415,"smoothing":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t8 = 1;","point_eqs_eel":"t8 = -t8;\\ny = sample*0.05;\\nx = 0.5 + t8*0.005;\\n\\npi3 = 3.1415*2*0.3333;\\nt = (q4-q6)*10;\\nc=2;\\nr = sin(t)*c;\\ng = sin(t+pi3)*c;\\n\\nb = sin(t-pi3)*c;\\n\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\n"},{"baseVals":{"thick":1,"additive":1,"scaling":100,"smoothing":0.6,"r":0,"g":0.4,"a":0.3,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt7 = q7;\\nt8 = q8;","point_eqs_eel":"sample = 1-sample;\\nxxx = xx;\\nyyy = yy;\\nxx = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2\\n+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;\\n\\nyy = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6\\n+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;\\nd = 1/sqrt(sqr(xx-xxx)+sqr(yy-yyy));\\nx = xx + sample*(1-sample)*(value1-value2)*(yy-yyy)*d;\\ny = yy - sample*(1-sample)*(value1-value2)*(xx-xxx)*d;"},{"baseVals":{"usedots":1,"scaling":2.44415,"smoothing":0,"r":0,"g":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t8 = 1;","point_eqs_eel":"t8 = -t8;\\ny = (1+t8)*0.01;\\nx = sample;"}],"init_eqs_eel":"x1 = 0.9;\\ny1 = 0.5;\\n\\nx2 = 0.5; y2 = 0.5;\\nx3 = 0.5; y3 = 0.5;\\nx4 = 0.5; y4 = 0.5;","frame_eqs_eel":"decay = 1;\\nxx1 = xx1*0.9 + (bass)*0.01;\\nxx2 = xx2*0.9 + (treb)*0.01;\\nyy1 = yy1*0.94 + (treb+bass)*0.0075;\\n\\nx1 = 0.5 + xx1-xx2;\\ny1 = 0.5 + yy1;\\n\\n//x2 = 0;y2 = 0;x3 = 0;y3 = 0;x4 = 0;y4 = 0;\\n\\nspring = 28;\\ngrav = 2;\\nresist = 0.2;\\nbounce = 0.94;\\ndt = 0.0001;\\n\\nvx2 = vx2*(1-resist*dt) + dt*((x1+x3-2*x2)*spring);\\nvy2 = vy2*(1-resist*dt) + dt*((y1+y3-2*y2)*spring-grav);\\nvx3 = vx3*(1-resist*dt) + dt*((x2+x4-2*x3)*spring);\\nvy3 = vy3*(1-resist*dt) + dt*((y2+y4-2*y3)*spring-grav);\\nvx4 = vx4*(1-resist*dt) + dt*((x3-x4)*spring);\\nvy4 = vy4*(1-resist*dt) + dt*((y3-y4)*spring-grav);\\n\\nx2 = x2 + vx2;\\ny2 = y2 + vy2;\\nx3 = x3 + vx3;\\ny3 = y3 + vy3;\\nx4 = x4 + vx4;\\ny4 = y4 + vy4;\\n\\nvx2 = if(above(x2,0),vx2,abs(vx2)*bounce);\\nvx2 = if(below(x2,1),vx2,-abs(vx2)*bounce);\\nvx3 = if(above(x3,0),vx3,abs(vx3)*bounce);\\nvx3 = if(below(x3,1),vx3,-abs(vx3)*bounce);\\nvx4 = if(above(x4,0),vx4,abs(vx4)*bounce);\\nvx4 = if(below(x4,1),vx4,-abs(vx4)*bounce);\\n\\nvy2 = if(above(y2,0),vy2,abs(vy2)*bounce);\\nvy2 = if(below(y2,1),vy2,-abs(vy2)*bounce);\\nvy3 = if(above(y3,0),vy3,abs(vy3)*bounce);\\nvy3 = if(below(y3,1),vy3,-abs(vy3)*bounce);\\nvy4 = if(above(y4,0),vy4,abs(vy4)*bounce);\\nvy4 = if(below(y4,1),vy4,-abs(vy4)*bounce);\\nq1 = aspectx;\\nq2 = aspecty;\\nq4 = x4;\\n\\nq8 = y4;\\n\\n\\nzoom = 1;\\nwarp = 0;\\nbb = bb*0.99 + bass*0.02;\\nmm = mm*0.99 + mid*0.02;\\ntt = tt*0.99 + treb*0.02;\\n\\nob_r = (bb-min(min(bb,mm),tt))/(max(max(bb,mm),tt)-min(min(bb,mm),tt));\\nob_b = (mm-min(min(bb,mm),tt))/(max(max(bb,mm),tt)-min(min(bb,mm),tt));\\nob_g = (tt-min(min(bb,mm),tt))/(max(max(bb,mm),tt)-min(min(bb,mm),tt));\\nq6 = atan2(vx4,vy4);\\nq5 = sqrt(vx4*vx4 + vy4*vy4);\\n\\nwave_a = 0;\\n// these lines belong to the composite shader\\na = a*0.98 - (bass-treb)*0.01;\\nq15 = a;\\nv = v*0.96 + a*0.12;\\nq16 = v;\\nw = w - v*0.01;\\nq18 = w;\\nq19 = 0.5-(bass_att-treb_att)*0.15;\\nd = d + (bass_att-0.5)*0.01*60/fps;\\nd2 = d2 + (treb_att-0.5)*0.006*60/fps;\\nq20 = d;\\nq21 = d2;\\nmonitor = d2;","pixel_eqs_eel":"x = 0.5 + (x-0.5)*q1;\\ny = 0.5 + (y-0.5)*q2;\\n\\ndir = -q6*1 + asin(1)*1;\\n\\nb1 = 0.1; // distance\\nm1 = q5*25;//-0.6 + q5*200; // size\\nt1 = 0.05; // velocity\\n\\nxx = q4;\\nyy = 1-q8;\\n\\n\\nx1 = xx   +cos(dir+1.5708)*b1;\\ny1 = yy -sin(dir+1.5708)*b1;\\n\\nx2 = xx   -cos(dir+1.5708)*b1;\\ny2 = yy +sin(dir+1.5708)*b1;\\n\\nd1 = sqrt((x1-x)*(x1-x)+(y1-y)*(y1-y))-b1*2;\\nsi1 = 1- 1/(1+pow(2,-d1*100));\\n\\nd2 = sqrt((x2-x)*(x2-x)+(y2-y)*(y2-y))-b1*2;\\nsi2 = 1- 1/(1+pow(2,-d2*100));\\n\\nsi3 = -pow(q5,3)*00;\\n\\ndx = (si1*sin(y1-y)*m1*d1  - si2*sin(y2-y)*m1*d2 + si3*cos(dir)*t1)*2;\\ndy = (-si1*sin(x1-x)*m1*d1 + si2*sin(x2-x)*m1*d2 - si3*sin(dir)*t1)*2;","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = texture (sampler_fc_main, uv).xyz;\\n  ret = tmpvar_1.xyz;\\n }","comp":"vec2 xlat_mutablers;\\n shader_body { \\n  vec2 uv_1;\\n  uv_1 = (0.5 + ((uv - 0.5) * aspect.xy));\\n  xlat_mutablers.x = (((ang / 3.14) + (rad * \\n    (q15 - q16)\\n  )) - q18);\\n  vec2 x_2;\\n  x_2 = (uv_1 - 0.5);\\n  xlat_mutablers.y = ((0.1 / (0.05 + \\n    (sqrt(dot (x_2, x_2)) * 1.4)\\n  )) + q21);\\n  vec2 tmpvar_3;\\n  tmpvar_3 = fract(xlat_mutablers);\\n  vec2 tmpvar_4;\\n  tmpvar_4.y = 0.0;\\n  tmpvar_4.x = texsize.z;\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (tmpvar_4 * 4.0);\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = 0.0;\\n  tmpvar_6.y = texsize.w;\\n  vec2 tmpvar_7;\\n  tmpvar_7 = (tmpvar_6 * 4.0);\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = dot (((\\n    (texture (sampler_blur1, (tmpvar_3 - tmpvar_5)).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (tmpvar_3 + tmpvar_5)).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  tmpvar_8.y = dot (((\\n    (texture (sampler_blur1, (tmpvar_3 - tmpvar_7)).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (tmpvar_3 + tmpvar_7)).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  uv_1 = ((0.4 * cos(\\n    ((12.56 * tmpvar_3) - (vec2(0.0, 10.0) * (q21 + q20)))\\n  )) - (4.0 * tmpvar_8));\\n  vec3 tmpvar_9;\\n  tmpvar_9 = pow (((\\n    (2.0 * (clamp ((0.02 / \\n      sqrt(dot (uv_1, uv_1))\\n    ), 0.0, 1.0) * hue_shader))\\n   * \\n    ((texture (sampler_main, tmpvar_3) * 4.0).xyz + 1.0)\\n  ) - 0.04), vec3(0.8, 0.8, 0.8));\\n  vec4 tmpvar_10;\\n  tmpvar_10.w = 1.0;\\n  tmpvar_10.xyz = mix (tmpvar_9, tmpvar_9.zxy, vec3(q19)).zxy;\\n  ret = tmpvar_10.xyz;\\n }"}')},6110:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.5,"echo_zoom":1,"echo_orient":3,"wave_thick":1,"modwavealphabyvolume":1,"wave_a":0.009,"wave_scale":2.136,"wave_smoothing":0.9,"modwavealphastart":1.6,"modwavealphaend":1.6,"warpanimspeed":9.861,"warpscale":16.217,"zoomexp":1.50374,"wave_r":0,"wave_g":0.04,"wave_b":0,"ob_size":0,"ob_r":1,"ob_g":0.1,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"sides":100,"additive":1,"thickoutline":1,"rad":0.99596,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":5,"textured":1,"rad":0.986,"tex_ang":3.14159,"tex_zoom":0.99979,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ang =sin(time/65) ;// ang + (bass*.2) + (time*.4);"},{"baseVals":{"sides":100,"textured":1,"x":0.9,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = sin(time) * .4 + .5;"},{"baseVals":{"sides":36,"additive":1,"rad":0.81623,"r":0,"g":0.04,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = 1-q1;\\ny = q2;\\nx = 0.5 + (x - 0.5)*0.25;\\ny = 0.5 + (y - 0.5)*0.25;"}],"waves":[{"baseVals":{"thick":1,"scaling":2.0231,"smoothing":0,"r":0,"b":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"","point_eqs_eel":"tt3 = tt3*0.6 + (value1)*1;\\ntt2 = tt2*0.7 + tt3*0.2;\\ntt1 = tt1*0.8 + tt2*0.1;\\nd = d*0.9 + tt1*0.2;\\n\\ny = 0.5 + d*sample*(1-sample);\\nx =  -0.05 + sample*1.1;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"warp = 0;\\nvolume = 0.3*(bass+mid+att);\\nxamptarg = if(equal(frame%15,0),min(0.25*volume*bass_att,0.5),xamptarg);\\nxamp = xamp + 0.5*(xamptarg-xamp);\\nxdir = if(above(abs(xpos),xamp),-sign(xpos),if(below(abs(xspeed),0.1),2*above(xpos,0)-1,xdir));\\nxspeed = xspeed + xdir*xamp - xpos - xspeed*0.055*below(abs(xpos),xamp);\\nxpos = xpos + 0.001*xspeed;\\nyamptarg = if(equal(frame%15,0),min(0.15*volume*treb_att,0.5),yamptarg);\\nyamp = yamp + 0.5*(yamptarg-yamp);\\nydir = if(above(abs(ypos),yamp),-sign(ypos),if(below(abs(yspeed),0.1),2*above(ypos,0)-1,ydir));\\nyspeed = yspeed + ydir*yamp - ypos - yspeed*0.055*below(abs(ypos),yamp);\\nypos = ypos + 0.001*yspeed;\\nbeatrate = equal(beatrate,0) + (1-equal(beatrate,0))*(below(volume,0.01) + (1-below(volume,0.01))*beatrate);\\nlastbeat = lastbeat + equal(lastbeat,0)*time;\\nmeanbass_att = 0.1*(meanbass_att*9 + bass_att);\\npeakbass_att = max(bass_att,peakbass_att);\\nbeat = above(volume,0.8)*below(peakbass_att - bass_att, 0.05*peakbass_att)*above(time - lastbeat, 0.1 + 0.5*(beatrate - 0.1));\\nbeatrate = max(if(beat,if(below(time-lastbeat,2*beatrate),0.1*(beatrate*9 + time - lastbeat),beatrate),beatrate),0.1);\\npeakbass_att = beat*bass_att + (1-beat)*peakbass_att*(above(time - lastbeat, 2*beatrate)*0.95 + (1-above(time - lastbeat, 2*beatrate))*0.995);\\nlastbeat = beat*time + (1-beat)*lastbeat;\\npeakbass_att = max(peakbass_att,1.1*meanbass_att);\\n//wave_x = xpos + 0.5;\\n//wave_y = 1-(ypos + 0.5);\\nwave_r = 0.5 + 0.499*( 0.60*sin(0.980*time) + 0.40*sin(1.047*time) );\\nwave_g = 0.5 + 0.499*( 0.60*sin(0.835*time) + 0.40*sin(1.081*time) );\\nwave_b = 0.5 + 0.499*( 0.60*sin(0.814*time) + 0.40*sin(1.011*time) );\\nwave_mystery = -0.17 + 0.03*(0.6*sin(0.637*time) + 0.4*sin(0.949*time));\\nmv_r = if(beat, 1, ib_r);\\nmv_b = if(beat, wave_b, ib_b);\\n//mv_a = if(beat, 0.1, ib_a);\\n//ib_a = 0.015;\\nq3 = wave_mystery;\\nq1 = wave_x;\\nq2 = 1-wave_y;\\nq2 = ypos+0.5;\\nwarp=0;\\n\\n//q2 = 1-(ypos + 0.5);\\n//q1 = 0.5;\\n//q2=0.5;\\nob_r = 1-wave_g;\\nob_b = 1-wave_r;\\nob_g = 1-wave_b;\\n\\nmonitor = wave_y;\\nmovement =movement + 0.4*(((bass+bass_att + 0.1*pow((bass+0.6*bass_att+0.2*treb_att),3)))/fps);\\nmovement = if(above(movement,10000), 0, movement);\\nrot =1*sin(movement);\\ncx = wave_x;\\ncy = y_pos+0.5;\\n\\nq8 = movement;","pixel_eqs_eel":"myy = x-q1;\\nmyx = y-q2+0.1;\\ndx = 3*sin(q8*0.675)*(2*myx*myy);\\ndy = 3*sin(q8*0.675)*((myx*myx) - (myy*myy));","warp":" shader_body { \\n  vec2 uv_z_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (1.0 - abs((\\n    (fract((uv * 0.5)) * 2.0)\\n   - 1.0)));\\n  ret_2.x = texture (sampler_fc_main, tmpvar_3).z;\\n  ret_2.y = mix (mix (texture (sampler_fc_main, tmpvar_3).x, ret_2.x, 0.5), texture (sampler_main, uv_orig).y, 0.75);\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (texsize.zw * 6.0);\\n  vec2 tmpvar_5;\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv_orig - 0.5);\\n  tmpvar_5 = ((tmpvar_6 * 0.998) + 0.5);\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = (((texture (sampler_blur1, \\n    (tmpvar_5 + (vec2(1.0, 0.0) * tmpvar_4))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (tmpvar_5 - (vec2(1.0, 0.0) * tmpvar_4))\\n  ).xyz * scale1) + bias1)).z;\\n  tmpvar_7.y = (((texture (sampler_blur1, \\n    (tmpvar_5 + (vec2(0.0, 1.0) * tmpvar_4))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (tmpvar_5 - (vec2(0.0, 1.0) * tmpvar_4))\\n  ).xyz * scale1) + bias1)).z;\\n  uv_z_1 = (tmpvar_5 - ((tmpvar_7 * texsize.zw) * 2.0));\\n  ret_2.z = max (((\\n    (texture (sampler_fc_main, tmpvar_3).x - 0.5)\\n   * 3.0) * clamp (\\n    (1.0 - (sqrt(dot (tmpvar_6, tmpvar_6)) * 3.2))\\n  , 0.0, 1.0)), texture (sampler_fc_main, uv_z_1).z);\\n  ret_2.z = (ret_2.z + ((texture (sampler_fc_main, uv_z_1).z - \\n    ((texture (sampler_blur1, clamp (uv_z_1, 0.0, 1.0)).xyz * scale1) + bias1)\\n  .z) * 0.02));\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = ret_2;\\n  ret = tmpvar_8.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_blur1, uv);\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (texsize.zw * 8.0);\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = tmpvar_4.x;\\n  tmpvar_6.y = tmpvar_5.x;\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = tmpvar_4.z;\\n  tmpvar_7.y = tmpvar_5.z;\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = tmpvar_4.y;\\n  tmpvar_8.y = tmpvar_5.y;\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = tmpvar_4.x;\\n  tmpvar_9.y = tmpvar_5.x;\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = tmpvar_4.z;\\n  tmpvar_10.y = tmpvar_5.z;\\n  vec2 tmpvar_11;\\n  tmpvar_11 = (uv - (tmpvar_10 * 1.4));\\n  vec2 tmpvar_12;\\n  tmpvar_12.x = tmpvar_4.y;\\n  tmpvar_12.y = tmpvar_5.y;\\n  vec2 tmpvar_13;\\n  tmpvar_13 = (uv - (tmpvar_12 * 0.1));\\n  vec4 tmpvar_14;\\n  tmpvar_14 = texture (sampler_main, uv);\\n  ret_1 = (tmpvar_14.x * vec3(0.7, 0.6, 0.5));\\n  vec3 tmpvar_15;\\n  tmpvar_15 = mix (mix (mix (\\n    mix (mix (mix (mix (\\n      mix (mix (ret_1, vec3(1.0, 0.8, 0.4), vec3((sqrt(\\n        dot (tmpvar_7, tmpvar_7)\\n      ) * 2.0))), vec3(0.8, 0.4, 0.0), vec3(sqrt(dot (tmpvar_6, tmpvar_6))))\\n    , vec3(1.0, 1.0, 0.0), vec3(\\n      ((((texture (sampler_blur2, \\n        (uv - (tmpvar_9 * 0.4))\\n      ).xyz * scale2) + bias2).z * ((tmpvar_2.xyz * scale1) + bias1).x) * 1.4)\\n    )), vec3(0.2, 0.0, 0.6), vec3((tmpvar_14.z * 2.0))), vec3(0.8, 0.7, 0.6), vec3(((\\n      (texture (sampler_blur1, tmpvar_11).xyz * scale1)\\n     + bias1).x * (\\n      (tmpvar_2.xyz * scale1)\\n     + bias1).z))), vec3(1.0, 1.0, 0.0), vec3((((\\n      (texture (sampler_blur2, tmpvar_11).xyz * scale2)\\n     + bias2).y * tmpvar_14.z) * 2.0)))\\n  , vec3(1.0, 1.0, 1.0), vec3(\\n    sqrt(dot (tmpvar_8, tmpvar_8))\\n  )), vec3(1.0, 0.0, 0.0), tmpvar_14.yyy), ((1.0 - texture (sampler_main, tmpvar_13).z) * vec3(1.0, 1.0, 0.0)), vec3(((\\n    (texture (sampler_blur1, tmpvar_13).xyz * scale1)\\n   + bias1).y * (\\n    (tmpvar_2.xyz * scale1)\\n   + bias1).y)));\\n  ret_1 = tmpvar_15;\\n  vec4 tmpvar_16;\\n  tmpvar_16.w = 1.0;\\n  tmpvar_16.xyz = tmpvar_15;\\n  ret = tmpvar_16.xyz;\\n }"}')},7785:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":4,"gammaadj":1.9,"echo_zoom":1.169,"echo_orient":1,"wave_mode":5,"additivewave":1,"wave_a":0,"wave_scale":0.9,"wave_smoothing":0.63,"wave_mystery":1,"modwavealphastart":2,"modwavealphaend":2,"warpscale":2.853,"rot":0.006,"warp":0,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.005,"mv_x":0,"mv_y":48,"mv_dx":-0.941,"mv_dy":0.426,"mv_l":5,"mv_r":0.316,"mv_g":0.078,"mv_b":0.942,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"textured":1,"rad":0.78903,"ang":0.62832,"tex_zoom":1.02009,"r":0,"g":1,"b":1,"r2":0.7,"b2":1,"border_a":0},"init_eqs_eel":"vx = 0;\\nvy = 0;","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"c_x = 0.5;\\nc_y = 0.5;","frame_eqs_eel":"sx=1+.01*(8*bass%8)*equal(time%(int(24-2*bass)),0);\\nsy=1+.01*(8*mid%8) *equal(time%(12+int(24-2*bass)),0);\\n\\nq1 = aspectx;\\nq2 = aspecty;\\nrot = 0;\\nzoom = 1;\\nwarp = 0;\\n\\n\\nvol = bass*8 + mid*4 + treb*2;\\nvol = vol*above(vol,17);\\nmonitor = vol;\\nbeat = above(vol,res);\\ndiff = (1-beat)*diff + beat*(vol-res);\\nres = beat*(vol+2*diff) + (1-beat)*(res - (diff*0.04 + 0.12)*60/fps);\\nres = max(0,res);\\nmonitor = res;\\n\\nr = if(beat, 0.01*(rand(200)-100)*0.01,r);\\nrot = r;\\n\\nc_x = if(beat,0.5 + 0.5*(rand(200)-100)*0.01, c_x);\\nc_y = if(beat,0.5 + 0.5*(rand(200)-100)*0.01, c_y);\\n\\n\\nq23 = c_x;\\nq24 = c_y;\\n\\n// elastic thread code by Flexi\\n\\nxx1 = xx1*0.9 + (bass)*0.01;\\nxx2 = xx2*0.9 + (treb)*0.01;\\nyy1 = yy1*0.94 + (treb+bass)*0.0075;\\nx1 = 0.5 + (xx1-xx2)*2;\\ny1 = 0.4 + yy1*1.5;\\ndt = 0.03/fps;\\nvx2 = vx2*(1-2*dt) + dt*((x1+x3-2*x2)*10);\\nvy2 = vy2*(1-2*dt) + dt*((y1+y3-2*y2)*10-0.5);\\nvx3 = vx3*(1-2*dt) + dt*((x2+x4-2*x3)*10);\\nvy3 = vy3*(1-2*dt) + dt*((y2+y4-2*y3)*10-0.5);\\nvx4 = vx4*(1-2*dt) + dt*((x3-x4)*10);\\nvy4 = vy4*(1-2*dt) + dt*((y3-y4)*10-0.5);\\nx2 = x2 + vx2; y2 = y2 + vy2;\\nx3 = x3 + vx3; y3 = y3 + vy3;\\nx4 = x4 + vx4; y4 = y4 + vy4;\\nvx2 = if(above(x2,0),vx2,abs(vx2)*0.5);\\nvx2 = if(below(x2,1),vx2,-abs(vx2)*0.5);\\nvx3 = if(above(x3,0),vx3,abs(vx3)*0.5);\\nvx3 = if(below(x3,1),vx3,-abs(vx3)*0.5);\\nvx4 = if(above(x4,0),vx4,abs(vx4)*0.5);\\nvx4 = if(below(x4,1),vx4,-abs(vx4)*0.5);\\nvy2 = if(above(y2,0),vy2,abs(vy2)*0.5);\\nvy2 = if(below(y2,1),vy2,-abs(vy2)*0.5);\\nvy3 = if(above(y3,0),vy3,abs(vy3)*0.5);\\nvy3 = if(below(y3,1),vy3,-abs(vy3)*0.5);\\nvy4 = if(above(y4,0),vy4,abs(vy4)*0.5);\\nvy4 = if(below(y4,1),vy4,-abs(vy4)*0.5);\\nq1 = x1;q2 = x2;q3 = x3;q4 = x4;\\nq5 = y1;q6 = y2;q7 = y3;q8 = y4;\\nq9 = 1/aspectx;\\nq10 = 1/aspecty;\\nq11 = aspectx;\\nq12 = aspecty;\\nq13 = sqrt(vx4*vx4 + vy4*vy4)*0.8;\\nq14 = atan2(vx4,vy4);","pixel_eqs_eel":"d = (pow(sqrt(sqr(x-q3)+sqr(y-q4)),2)-0);\\nv = 0.03;\\ndx = v*(x-q23)*d;\\ndy = v*(y-q24)*d;\\n\\n\\nx = 0.5 + (x-0.5)*q11;\\ny = 0.5 + (y-0.5)*q12;\\ndir = -q14*1 + asin(1)*1;\\n\\nvelocity = q13;\\nstrength = 100;\\nsize = 0.07;\\n\\nxx = q4;\\nyy = 1-q8;\\n\\n\\nx1 = xx   +cos(dir+1.5708)*size;\\ny1 = yy -sin(dir+1.5708)*size;\\n\\nx2 = xx   -cos(dir+1.5708)*size;\\ny2 = yy +sin(dir+1.5708)*size;\\n\\nd1 = sqrt((x1-x)*(x1-x)+(y1-y)*(y1-y))-size*2;\\nsi1 = 1- 1/(1+pow(2,-d1*100));\\n\\nd2 = sqrt((x2-x)*(x2-x)+(y2-y)*(y2-y))-size*2;\\nsi2 = 1- 1/(1+pow(2,-d2*100));\\n\\ndx += (si1*sin(y1-y)*d1  - si2*sin(y2-y)*d2)*strength*velocity;\\ndy += (-si1*sin(x1-x)*d1 + si2*sin(x2-x)*d2)*strength*velocity;","warp":"vec2 xlat_mutabled;\\nvec3 xlat_mutabledx;\\nvec3 xlat_mutabledy;\\n shader_body { \\n  vec3 ret_1;\\n  vec3 tmpvar_2;\\n  tmpvar_2 = (texture (sampler_noise_lq, ((\\n    (uv_orig * texsize.xy)\\n   * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5);\\n  xlat_mutabled = (texsize.zw * 4.0);\\n  xlat_mutabledx = (((texture (sampler_blur1, \\n    (uv_orig + (vec2(1.0, 0.0) * xlat_mutabled))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv_orig - (vec2(1.0, 0.0) * xlat_mutabled))\\n  ).xyz * scale1) + bias1));\\n  xlat_mutabledy = (((texture (sampler_blur1, \\n    (uv_orig + (vec2(0.0, 1.0) * xlat_mutabled))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv_orig - (vec2(0.0, 1.0) * xlat_mutabled))\\n  ).xyz * scale1) + bias1));\\n  xlat_mutabled = uv;\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = xlat_mutabledx.y;\\n  tmpvar_3.y = xlat_mutabledy.y;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = xlat_mutabledx.z;\\n  tmpvar_4.y = xlat_mutabledy.z;\\n  vec4 tmpvar_5;\\n  tmpvar_5 = texture (sampler_main, uv_orig);\\n  ret_1.y = ((texture (sampler_main, (uv - \\n    ((tmpvar_3 * texsize.zw) * 6.0)\\n  )).y - 0.008) + ((1.0 - tmpvar_5.x) * 0.018));\\n  ret_1.z = ((texture (sampler_main, (uv - \\n    ((tmpvar_4 * texsize.zw) * 6.0)\\n  )).z - 0.008) + (tmpvar_5.x * 0.018));\\n  ret_1.x = texture (sampler_fc_main, (uv + ((tmpvar_2.xy * texsize.zw) * 0.5))).x;\\n  ret_1.x = (ret_1.x + ((\\n    (ret_1.x - ((texture (sampler_blur3, uv).xyz * scale3) + bias3).x)\\n   * 0.15) + (tmpvar_2 * 0.0042)).x);\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = ret_1;\\n  ret = tmpvar_6.xyz;\\n }","comp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1.x = q3;\\n  tmpvar_1.y = q4;\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = q6;\\n  tmpvar_2.y = q7;\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = q9;\\n  tmpvar_3.y = q10;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = q12;\\n  tmpvar_4.y = q13;\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (texsize.zw * 1.25);\\n  vec3 tmpvar_6;\\n  tmpvar_6 = (texture (sampler_main, (uv + (vec2(1.0, 0.0) * tmpvar_5))).xyz - texture (sampler_main, (uv - (vec2(1.0, 0.0) * tmpvar_5))).xyz);\\n  vec3 tmpvar_7;\\n  tmpvar_7 = (texture (sampler_main, (uv + (vec2(0.0, 1.0) * tmpvar_5))).xyz - texture (sampler_main, (uv - (vec2(0.0, 1.0) * tmpvar_5))).xyz);\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = dot (tmpvar_6, vec3(0.32, 0.49, 0.29));\\n  tmpvar_8.y = dot (tmpvar_7, vec3(0.32, 0.49, 0.29));\\n  vec2 x_9;\\n  x_9 = ((uv - (tmpvar_8 * 8.0)) - tmpvar_1);\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = dot (tmpvar_6, vec3(0.32, 0.49, 0.29));\\n  tmpvar_10.y = dot (tmpvar_7, vec3(0.32, 0.49, 0.29));\\n  vec2 x_11;\\n  x_11 = ((uv - (tmpvar_10 * 8.0)) - tmpvar_2);\\n  vec2 tmpvar_12;\\n  tmpvar_12.x = dot (tmpvar_6, vec3(0.32, 0.49, 0.29));\\n  tmpvar_12.y = dot (tmpvar_7, vec3(0.32, 0.49, 0.29));\\n  vec2 x_13;\\n  x_13 = ((uv - (tmpvar_12 * 8.0)) - tmpvar_3);\\n  vec2 tmpvar_14;\\n  tmpvar_14.x = dot (tmpvar_6, vec3(0.32, 0.49, 0.29));\\n  tmpvar_14.y = dot (tmpvar_7, vec3(0.32, 0.49, 0.29));\\n  vec2 x_15;\\n  x_15 = ((uv - (tmpvar_14 * 8.0)) - tmpvar_4);\\n  vec4 tmpvar_16;\\n  tmpvar_16.w = 1.0;\\n  tmpvar_16.xyz = mix (texture (sampler_main, uv).xyz, max (max (\\n    (vec3((1.0 - pow (sqrt(\\n      dot (x_9, x_9)\\n    ), 0.2))) * vec3(2.0, 1.0, -1.0))\\n  , \\n    (vec3((1.0 - pow (sqrt(\\n      dot (x_11, x_11)\\n    ), 0.2))) * vec3(2.0, -1.0, 1.0))\\n  ), max (\\n    (vec3((1.0 - pow (sqrt(\\n      dot (x_13, x_13)\\n    ), 0.2))) * vec3(-1.0, 1.0, 2.0))\\n  , \\n    (vec3((1.0 - pow (sqrt(\\n      dot (x_15, x_15)\\n    ), 0.2))) * vec3(1.0, -1.0, 2.0))\\n  )), vec3(0.5, 0.5, 0.5));\\n  ret = tmpvar_16.xyz;\\n }"}')},6481:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.955,"echo_zoom":0.997,"echo_alpha":0.5,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":0.01,"warpscale":100,"zoomexp":0.92178,"fshader":1,"zoom":0.9901,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.005,"ob_g":1,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":14,"additive":1,"num_inst":48,"rad":0.05237,"tex_ang":0.62832,"r2":1,"g2":0,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));"},{"baseVals":{"enabled":1,"sides":14,"additive":1,"num_inst":48,"rad":0.05186,"tex_ang":0.62832,"r2":1,"g2":0,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));"},{"baseVals":{"enabled":1,"sides":12,"additive":1,"num_inst":512,"y":0.55,"rad":0.09105,"tex_zoom":0.7874,"r":0,"g":0.06,"b":1,"g2":0,"border_a":0},"init_eqs_eel":"started = 0;\\nt1 = 0.412; //seeds for pseudo random generator\\nt2 = 0.4563;\\nt3 = 0.6452;\\nt4 = 0.2565;","frame_eqs_eel":"bb = bb + bass*bass*0.85*equal(instance,0);\\nmm = mm + mid*mid*0.85*equal(instance,0);\\ntt = tt + treb*treb*0.85*equal(instance,0);\\n\\nq3 = bb*0.012;\\nq4 = mm*0.012;\\nq5 = tt*0.012;\\n\\nrnd1 = if(equal(instance,0),t1,rnd1);\\nrnd2 = if(equal(instance,0),t2,rnd2);\\nrnd3 = if(equal(instance,0),t3,rnd3);\\nrnd4 = if(equal(instance,0),t4,rnd4);\\nrnd1 = 4*rnd1*(1-rnd1);\\nrnd2 = 4*rnd2*(1-rnd2);\\nrnd3 = 4*rnd3*(1-rnd3);\\nrnd4 = 4*rnd4*(1-rnd4);\\nt = .6;\\nt =  (rnd1+time*t) - int(rnd1+time*t);\\nt = t + rnd2*0.1;\\nwh = rnd4*asin(1)*4;\\nwv = 0.25 + rnd3*0.1;\\n\\nd = 1.4; // makes the perspective impact\\nzoom = 1;\\nl = 1;\\n\\n// Kardan angles\\n\\nw1 = q3; // first rotation: clockwise in the desktop pane\\nw2 = q4; // rotation around vertical axis\\nw3 = q5; // rotation around horizontal axis\\n\\n\\n// definition of the 3D shape\\n\\ni = instance;\\n\\nmy_x = t *(cos(wh)*sin(wv)*l);\\nmy_y = (-0.5 +(t-0.75)*(t-0.75))*cos(wv)*l;\\nmy_z = t*(sin(wh)*sin(wv)*l);\\n\\n\\n// 3D rotations\\n\\nx1 = cos(w1)*my_x + sin(w1)*my_y;\\ny1 = -sin(w1)*my_x + cos(w1)*my_y;\\nz1 = my_z;\\n\\nx2 = cos(w2)*x1 + sin(w2)*z1;\\nz2 = -sin(w2)*x1 + cos(w2)*z1;\\ny2 = y1;\\n\\ny3 = cos(w3)*y2 + sin(w3)*z2;\\nz3 = -sin(w3)*y2 + cos(w3)*z2;\\nx3 = x2;\\n\\n// perspective calculation\\n\\np = tan(asin(1) + atan2(d+z3,sqrt(x3*x3 + y3*y3)));\\nd = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));\\n\\nrad = rad/d;\\nmy_x = zoom*sin(atan2(x3,y3))*p;\\nmy_y = zoom*cos(atan2(x3,y3))*p;\\n\\nx = 0.5 + my_x;\\ny = 0.5 + my_y;\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;"},{"baseVals":{"enabled":1,"sides":14,"additive":1,"num_inst":222,"rad":0.05186,"tex_ang":0.62832,"r2":1,"g2":0,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));"}],"waves":[{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));"}],"init_eqs_eel":"x1 = 0.9;\\ny1 = 0.5;\\n\\nx2 = 0.5; y2 = 0.5;\\nx3 = 0.5; y3 = 0.5;\\nx4 = 0.5; y4 = 0.5;","frame_eqs_eel":"xx1 = xx1*0.9 + (bass)*0.01;\\nxx2 = xx2*0.9 + (treb)*0.01;\\nyy1 = yy1*0.94 + (treb+bass)*0.0075;\\n\\nx1 = 0.5 + (xx1-xx2)*2;\\ny1 = 0.4 + yy1;\\n\\nx1 = max(0,min(1,x1)); y1 = max(0,min(1,y1));\\n\\nspring = 10;\\ngrav = .5;\\nresist = 1;\\nbounce = 0.75;\\ndt = 0.0008*(60/fps);\\n\\nvx2 = vx2*(1-resist*dt) + dt*((x1+x3-2*x2)*spring);\\nvy2 = vy2*(1-resist*dt) + dt*((y1+y3-2*y2)*spring-grav);\\nvx3 = vx3*(1-resist*dt) + dt*((x2+x4-2*x3)*spring);\\nvy3 = vy3*(1-resist*dt) + dt*((y2+y4-2*y3)*spring-grav);\\nvx4 = vx4*(1-resist*dt) + dt*((x3-x4)*spring);\\nvy4 = vy4*(1-resist*dt) + dt*((y3-y4)*spring-grav);\\n\\nx2 = x2 + vx2;\\ny2 = y2 + vy2;\\nx3 = x3 + vx3;\\ny3 = y3 + vy3;\\nx4 = x4 + vx4;\\ny4 = y4 + vy4;\\n\\nvx2 = if(above(x2,0),vx2,abs(vx2)*bounce);\\nvx2 = if(below(x2,1),vx2,-abs(vx2)*bounce);\\nvx3 = if(above(x3,0),vx3,abs(vx3)*bounce);\\nvx3 = if(below(x3,1),vx3,-abs(vx3)*bounce);\\nvx4 = if(above(x4,0),vx4,abs(vx4)*bounce);\\nvx4 = if(below(x4,1),vx4,-abs(vx4)*bounce);\\nvy2 = if(above(y2,0),vy2,abs(vy2)*bounce);\\nvy2 = if(below(y2,1),vy2,-abs(vy2)*bounce);\\nvy3 = if(above(y3,0),vy3,abs(vy3)*bounce);\\nvy3 = if(below(y3,1),vy3,-abs(vy3)*bounce);\\nvy4 = if(above(y4,0),vy4,abs(vy4)*bounce);\\nvy4 = if(below(y4,1),vy4,-abs(vy4)*bounce);\\nq4 = x4;\\nq8 = y4;\\n\\nq1 = aspectx;\\nq2 = aspecty;\\nq10 = x1;\\nq11 = y1;\\nzoom = 1;\\nwarp = 0;\\nq6 = atan2(vx4,vy4);\\nq5 = sqrt(vx4*vx4 + vy4*vy4);\\n\\na = a*0.95 + q5;\\n\\ns = s*0.9 + a;\\nq3 = s*0.1;\\nmonitor = s;\\n\\nwave_a = 0;","pixel_eqs_eel":"x = 0.5 + (x-0.5)*q1;\\ny = 0.5 + (y-0.5)*q2;\\nxx = q4;\\nyy = 1-q8;\\n\\ndx = 0; dy = 0;\\n\\nd = sqrt((x-xx)*(x-xx)+(y-yy)*(y-yy));\\n\\nr = 0.11;\\nv = 20;\\nv2 = q5;\\ndx = (v*(sin(y-yy)*(d-r)-(x-xx)*(d-r/2)) + cos(dir)*v2)*(1.00-sigmoid(d-r,100));\\ndy = (-v*(sin(x-xx)*(d-r)+(y-yy)*(d-r/2)) -sin(dir)*v2)*(1.00-sigmoid(d-r,100));","warp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 4.0);\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1)).x;\\n  tmpvar_3.y = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1)).x;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (uv + ((tmpvar_3 * texsize.zw) * 4.0));\\n  ret_1.x = (((texture (sampler_main, tmpvar_4).x - \\n    ((texture (sampler_main, tmpvar_4).x - ((texture (sampler_blur3, tmpvar_4).xyz * scale3) + bias3).x) * 0.02)\\n  ) - 0.008) + ((texture (sampler_noise_lq, \\n    (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)\\n  ).xyz - 0.5) * 0.1)).x;\\n  ret_1.y = (texture (sampler_fc_main, uv).y - (ret_1.x * 0.04));\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = ret_1;\\n  ret = tmpvar_5.xyz;\\n }","comp":" shader_body { \\n  vec2 uv_1;\\n  vec3 ret_2;\\n  uv_1 = (0.5 + ((uv - 0.5) * 0.86));\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (-(texsize.zw) * 4.0);\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv_1 + (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv_1 - (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_blur1, \\n    (uv_1 + (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv_1 - (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = q4;\\n  tmpvar_6.y = q8;\\n  vec2 tmpvar_7;\\n  tmpvar_7 = ((tmpvar_6 * vec2(1.0, -1.0)) + vec2(0.0, 1.0));\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = tmpvar_4.y;\\n  tmpvar_8.y = tmpvar_5.y;\\n  vec2 x_9;\\n  x_9 = ((uv_1 + (tmpvar_8 * 4.0)) - tmpvar_7);\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = tmpvar_4.x;\\n  tmpvar_10.y = tmpvar_5.x;\\n  vec2 x_11;\\n  x_11 = ((uv_1 + (tmpvar_10 * 4.0)) - tmpvar_7);\\n  vec2 tmpvar_12;\\n  tmpvar_12.x = tmpvar_4.z;\\n  tmpvar_12.y = tmpvar_5.z;\\n  vec2 x_13;\\n  x_13 = ((uv_1 + (tmpvar_12 * 4.0)) - tmpvar_7);\\n  vec3 tmpvar_14;\\n  float tmpvar_15;\\n  tmpvar_15 = sqrt(dot (x_11, x_11));\\n  tmpvar_14.x = (tmpvar_15 * tmpvar_15);\\n  float tmpvar_16;\\n  tmpvar_16 = sqrt(dot (x_9, x_9));\\n  tmpvar_14.y = (tmpvar_16 * tmpvar_16);\\n  float tmpvar_17;\\n  tmpvar_17 = sqrt(dot (x_13, x_13));\\n  tmpvar_14.z = (tmpvar_17 * tmpvar_17);\\n  vec3 tmpvar_18;\\n  tmpvar_18 = (1.1 - pow ((tmpvar_14 * 2.0), vec3(0.3, 0.3, 0.3)));\\n  ret_2 = ((1.0 - (tmpvar_18 * tmpvar_18)) * texture (sampler_main, uv_1).xyz);\\n  ret_2 = ret_2.zyx;\\n  ret_2.yz = (ret_2.yz - (ret_2.xx * 0.5));\\n  vec4 tmpvar_19;\\n  tmpvar_19.w = 1.0;\\n  tmpvar_19.xyz = ret_2;\\n  ret = tmpvar_19.xyz;\\n }"}')},7266:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"modwavealphabyvolume":1,"wave_a":0.207,"wave_scale":0.397,"wave_smoothing":0,"wave_mystery":0.24,"modwavealphaend":1.17,"warpscale":16.016,"zoomexp":11.56276,"zoom":1.05971,"warp":0.13126,"ob_size":0.005,"ob_a":1,"ib_size":0,"mv_x":64,"mv_y":48,"mv_l":0,"mv_r":0.35,"mv_g":0.35,"mv_b":0.35,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"decay = 1;\\nxx1 = xx1*0.9 + (bass)*0.01;\\nxx2 = xx2*0.9 + (treb)*0.01;\\nyy1 = yy1*0.94 + (treb+bass)*0.0075;\\n\\nx1 = 0.5 + (xx1-xx2)*1.5;\\ny1 = 0.5 + yy1;\\n\\n//x2 = 0;y2 = 0;x3 = 0;y3 = 0;x4 = 0;y4 = 0;\\n\\nspring = 18;\\ngrav = 1;\\nresist = 5;\\nbounce = 0.9;\\ndt = 0.0003;\\n\\nvx2 = vx2*(1-resist*dt) + dt*((x1+x3-2*x2)*spring);\\nvy2 = vy2*(1-resist*dt) + dt*((y1+y3-2*y2)*spring-grav);\\nvx3 = vx3*(1-resist*dt) + dt*((x2+x4-2*x3)*spring);\\nvy3 = vy3*(1-resist*dt) + dt*((y2+y4-2*y3)*spring-grav);\\nvx4 = vx4*(1-resist*dt) + dt*((x3-x4)*spring);\\nvy4 = vy4*(1-resist*dt) + dt*((y3-y4)*spring-grav);\\n\\nx2 = x2 + vx2;\\ny2 = y2 + vy2;\\nx3 = x3 + vx3;\\ny3 = y3 + vy3;\\nx4 = x4 + vx4;\\ny4 = y4 + vy4;\\n\\nvx2 = if(above(x2,0),vx2,abs(vx2)*bounce);\\nvx2 = if(below(x2,1),vx2,-abs(vx2)*bounce);\\nvx3 = if(above(x3,0),vx3,abs(vx3)*bounce);\\nvx3 = if(below(x3,1),vx3,-abs(vx3)*bounce);\\nvx4 = if(above(x4,0),vx4,abs(vx4)*bounce);\\nvx4 = if(below(x4,1),vx4,-abs(vx4)*bounce);\\n\\nvy2 = if(above(y2,0),vy2,abs(vy2)*bounce);\\nvy2 = if(below(y2,1),vy2,-abs(vy2)*bounce);\\nvy3 = if(above(y3,0),vy3,abs(vy3)*bounce);\\nvy3 = if(below(y3,1),vy3,-abs(vy3)*bounce);\\nvy4 = if(above(y4,0),vy4,abs(vy4)*bounce);\\nvy4 = if(below(y4,1),vy4,-abs(vy4)*bounce);\\n\\n\\nq1 = x1;\\nq2 = x2;\\nq3 = x3;\\nq4 = x4;\\n\\nq5 = y1;\\nq6 = y2;\\nq7 = y3;\\nq8 = y4;\\n\\nq6 = atan2(vx4,vy4);\\nq5 = sqrt(vx4*vx4 + vy4*vy4);\\n\\nzoom = 1.001;\\nrot = 0.00;\\nwarp = 0.2;\\nwave_a = 0;","pixel_eqs_eel":"r = 0.2;\\ncx1 = q4;\\ncy1 = q5;\\nd = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));\\ndir = -(r*r-d*d)*q3;\\nx1 = if( above(d,r),0,  sin(y-cy1)*dir);\\ny1 = if( above(d,r),0, -sin(x-cx1)*dir);\\nv = 1;\\ndx = (x1)*v;\\ndy = (y1)*v;","warp":" shader_body { \\n  vec2 uv_1;\\n  vec3 ret_2;\\n  uv_1 = (0.5 + ((uv - 0.5) * 1.002));\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (texsize.zw * 8.0);\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv_1 + (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv_1 - (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_blur1, \\n    (uv_1 + (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv_1 - (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = tmpvar_4.x;\\n  tmpvar_6.y = tmpvar_5.x;\\n  vec2 tmpvar_7;\\n  tmpvar_7 = fract(((0.5 + \\n    (uv_1 - 0.5)\\n  ) - (tmpvar_6 * texsize.zw)));\\n  ret_2.x = texture (sampler_main, tmpvar_7).x;\\n  ret_2.x = (ret_2.x + ((\\n    (ret_2.x - ((texture (sampler_blur2, tmpvar_7).xyz * scale2) + bias2))\\n  .x * 0.4) + 0.006));\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = tmpvar_5.x;\\n  tmpvar_8.y = -(tmpvar_4.x);\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = tmpvar_4.z;\\n  tmpvar_9.y = tmpvar_5.z;\\n  ret_2.z = max ((clamp (\\n    (((texture (sampler_blur1, uv_1).xyz * scale1) + bias1).x - 0.3)\\n  , 0.0, 1.0) * 2.0), (texture (sampler_fc_main, (\\n    (uv_1 - ((tmpvar_8 * texsize.zw) * 8.0))\\n   + \\n    ((tmpvar_9 * texsize.zw) * 4.0)\\n  )).z - 0.008));\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = tmpvar_4.y;\\n  tmpvar_10.y = tmpvar_5.y;\\n  ret_2.y = max (ret_2.x, (texture (sampler_fc_main, (uv_1 + \\n    (tmpvar_10 * texsize.zw)\\n  )).y - 0.016));\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 1.0;\\n  tmpvar_11.xyz = ret_2;\\n  ret = tmpvar_11.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 6.0);\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = dot (tmpvar_3, vec3(0.32, 0.49, 0.29));\\n  tmpvar_5.y = dot (tmpvar_4, vec3(0.32, 0.49, 0.29));\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv - (0.25 * tmpvar_5));\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = dot (tmpvar_3, vec3(0.32, 0.49, 0.29));\\n  tmpvar_7.y = dot (tmpvar_4, vec3(0.32, 0.49, 0.29));\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (uv + (0.25 * tmpvar_7));\\n  ret_1 = ((0.8 * (\\n    (texture (sampler_blur3, tmpvar_6).xyz * scale3)\\n   + bias3)) - ((texture (sampler_blur1, tmpvar_6).xyz * scale1) + bias1));\\n  ret_1 = (ret_1 + (0.6 * (\\n    (texture (sampler_blur1, uv).xyz * scale1)\\n   + bias1)));\\n  ret_1 = (ret_1 - ((\\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur1, tmpvar_8).xyz * scale1)\\n   + bias1)));\\n  ret_1 = (ret_1 + ((1.2 * texture (sampler_main, tmpvar_8).xyz) + (0.15 * \\n    ((texture (sampler_blur1, tmpvar_8).xyz * scale1) + bias1)\\n  )));\\n  ret_1 = (ret_1 + 1.0);\\n  float tmpvar_9;\\n  tmpvar_9 = dot (ret_1, vec3(0.32, 0.49, 0.29));\\n  ret_1 = (mix (vec3(tmpvar_9), (\\n    (0.75 * vec3(tmpvar_9))\\n   * \\n    dot ((((0.6 * \\n      ((texture (sampler_blur3, tmpvar_6).xyz * scale3) + bias3)\\n    ) - (0.7 * texture (sampler_main, uv).xyz)) - (0.3 * (\\n      (texture (sampler_blur1, tmpvar_8).xyz * scale1)\\n     + bias1))), vec3(0.32, 0.49, 0.29))\\n  ), pow (hue_shader, vec3(tmpvar_9))) * 0.9);\\n  ret_1 = (ret_1 * ret_1);\\n  vec3 tmpvar_10;\\n  tmpvar_10 = sqrt(ret_1);\\n  ret_1 = tmpvar_10;\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 1.0;\\n  tmpvar_11.xyz = tmpvar_10;\\n  ret = tmpvar_11.xyz;\\n }"}')},9086:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":3,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"wave_thick":1,"wave_brighten":0,"wave_a":0.004,"wave_scale":0.267,"wave_smoothing":0,"wave_mystery":-0.44,"modwavealphastart":1,"modwavealphaend":1,"warpscale":5.921,"zoomexp":11.56276,"zoom":1.05971,"warp":0.17692,"wave_y":0.04,"ob_size":0,"ob_a":1,"ib_size":0,"mv_x":64,"mv_y":48,"mv_l":0,"mv_b":0,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"thickoutline":1,"rad":0.01,"tex_ang":0.12566,"tex_zoom":1.51878,"g":0.99,"b":1,"a":0.1,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"thickoutline":1,"textured":1,"rad":0.80013,"ang":4.64954,"tex_zoom":1.24471,"g":1,"b":1,"r2":1,"b2":1,"a2":0.77,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"thickoutline":1,"x":1,"rad":3.0054,"tex_ang":0.12566,"tex_zoom":1.51878,"r":0,"g":1,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"thickoutline":1,"x":1,"rad":0.39872,"tex_ang":0.12566,"tex_zoom":1.51878,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"thick":1,"scaling":2.0231,"smoothing":0,"r":0,"g":0,"b":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"","point_eqs_eel":"tt3 = tt3*0.6 + (value1)*1;\\ntt2 = tt2*0.7 + tt3*0.2;\\ntt1 = tt1*0.8 + tt2*0.1;\\nd = d*0.9 + tt1*0.2;\\n\\ny = 0.5 + d*sample*(1-sample)*4;\\nx =  -0.05 + sample*1.1;"},{"baseVals":{"scaling":2.0231,"smoothing":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"","point_eqs_eel":"tt3 = tt3*0.6 + (value1)*1;\\ntt2 = tt2*0.7 + tt3*0.2;\\ntt1 = tt1*0.8 + tt2*0.1;\\nd = d*0.9 + tt1*0.2;\\n\\ny = 0.5 + d*sample*(1-sample)*4;\\nx =  -0.05 + sample*1.1;"},{"baseVals":{"thick":1,"additive":1,"scaling":100,"smoothing":0.6,"r":0,"g":0.4,"a":0.3,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt7 = q7;\\nt8 = q8;","point_eqs_eel":"sample = 1-sample;\\nxxx = xx;\\nyyy = yy;\\nxx = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2\\n+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;\\n\\nyy = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6\\n+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;\\nd = 1/sqrt(sqr(xx-xxx)+sqr(yy-yyy));\\nx = xx + sample*(1-sample)*(value1-value2)*(yy-yyy)*d;\\ny = yy - sample*(1-sample)*(value1-value2)*(xx-xxx)*d;"},{"baseVals":{"usedots":1,"scaling":2.44415,"smoothing":0,"r":0,"g":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t8 = 1;","point_eqs_eel":"t8 = -t8;\\ny = (1+t8)*0.01;\\nx = sample;"}],"init_eqs_eel":"q11 = 0.5/asin(1);","frame_eqs_eel":"wave_a = 0;\\nzoom = 1;\\nbb = bb*0.99 + bass*0.02;\\nmm = mm*0.99 + mid*0.02;\\ntt = tt*0.99 + treb*0.02;\\n\\nmx = max(max(bb,mm),tt);\\nmn = min(min(bb,mm),tt);\\n\\nh1 = (bb-mn)/(mx-mn);\\nh2 = (mm-mn)/(mx-mn);\\nh3 = (tt-mn)/(mx-mn);\\n\\nv = 0.07/fps;\\nbm = bm + (h1-h2)*v;\\nmt = mt + (h2-h3)*v;\\nbt = bt + (h1-h3)*v;\\n\\nw = bm*2;\\nq3 = sin(w);\\nq4 = cos(w);\\n\\n\\nq10 = bm;\\nq11 = mt;\\nq12 = bt;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 my_uv_1;\\n  vec2 d_2;\\n  vec3 ret_3;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (texsize.zw * 3.0);\\n  vec3 tmpvar_5;\\n  tmpvar_5 = ((2.0 * (\\n    (texture (sampler_blur1, fract((uv + (vec2(1.0, 0.0) * tmpvar_4)))).xyz * scale1)\\n   + bias1)) - (2.0 * (\\n    (texture (sampler_blur1, fract((uv - (vec2(1.0, 0.0) * tmpvar_4)))).xyz * scale1)\\n   + bias1)));\\n  vec3 tmpvar_6;\\n  tmpvar_6 = ((2.0 * (\\n    (texture (sampler_blur1, fract((uv + (vec2(0.0, 1.0) * tmpvar_4)))).xyz * scale1)\\n   + bias1)) - (2.0 * (\\n    (texture (sampler_blur1, fract((uv - (vec2(0.0, 1.0) * tmpvar_4)))).xyz * scale1)\\n   + bias1)));\\n  vec3 tmpvar_7;\\n  tmpvar_7 = ((texture (sampler_blur1, uv).xyz * scale1) + bias1);\\n  d_2 = -(tmpvar_4);\\n  float tmpvar_8;\\n  tmpvar_8 = (d_2 * 1.5).x;\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = tmpvar_5.y;\\n  tmpvar_9.y = tmpvar_6.y;\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = tmpvar_5.x;\\n  tmpvar_10.y = tmpvar_6.x;\\n  vec2 tmpvar_11;\\n  tmpvar_11 = ((uv - (\\n    (tmpvar_9 * d_2)\\n   * 0.5)) - (tmpvar_10 * tmpvar_8));\\n  ret_3.y = texture (sampler_fc_main, (tmpvar_11 - floor(tmpvar_11))).y;\\n  ret_3.y = (ret_3.y + ((\\n    (ret_3.y - tmpvar_7.y)\\n   * 0.042) + -0.008));\\n  vec2 tmpvar_12;\\n  tmpvar_12.x = tmpvar_5.x;\\n  tmpvar_12.y = tmpvar_6.x;\\n  vec2 tmpvar_13;\\n  tmpvar_13.x = tmpvar_5.z;\\n  tmpvar_13.y = tmpvar_6.z;\\n  my_uv_1 = ((uv - (\\n    (tmpvar_12 * d_2)\\n   * 0.5)) - (tmpvar_13 * tmpvar_8));\\n  ret_3.x = texture (sampler_fc_main, (my_uv_1 - floor(my_uv_1))).x;\\n  ret_3.x = (ret_3.x + ((\\n    (ret_3.x - tmpvar_7.x)\\n   * 0.042) + -0.008));\\n  vec2 tmpvar_14;\\n  tmpvar_14.x = tmpvar_5.z;\\n  tmpvar_14.y = tmpvar_6.z;\\n  vec2 tmpvar_15;\\n  tmpvar_15.x = tmpvar_5.y;\\n  tmpvar_15.y = tmpvar_6.y;\\n  my_uv_1 = ((uv - (\\n    (tmpvar_14 * d_2)\\n   * 0.5)) - (tmpvar_15 * tmpvar_8));\\n  ret_3.z = texture (sampler_fc_main, (my_uv_1 - floor(my_uv_1))).z;\\n  ret_3.z = (ret_3.z + ((\\n    (ret_3.z - tmpvar_7.z)\\n   * 0.042) + -0.008));\\n  vec4 tmpvar_16;\\n  tmpvar_16.w = 1.0;\\n  tmpvar_16.xyz = ret_3;\\n  ret = tmpvar_16.xyz;\\n }","comp":" shader_body { \\n  vec2 uv_1;\\n  uv_1 = uv;\\n  vec2 dz_2;\\n  vec3 dy_3;\\n  vec3 dx_4;\\n  vec2 d_5;\\n  vec3 ret_6;\\n  vec2 tmpvar_7;\\n  tmpvar_7 = ((uv - 0.5) * aspect.xy);\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = ((q4 * tmpvar_7.x) - (q3 * tmpvar_7.y));\\n  tmpvar_8.y = ((q3 * tmpvar_7.x) + (q4 * tmpvar_7.y));\\n  vec2 tmpvar_9;\\n  tmpvar_9 = (0.5 + (tmpvar_8 * 2.0));\\n  vec2 numerator_10;\\n  numerator_10 = (tmpvar_9 - vec2(0.0, 0.5));\\n  vec2 denominator_11;\\n  denominator_11 = (tmpvar_9 - vec2(1.0, 0.5));\\n  vec2 tmpvar_12;\\n  tmpvar_12.x = ((numerator_10.x * denominator_11.x) + (numerator_10.y * denominator_11.y));\\n  tmpvar_12.y = ((numerator_10.y * denominator_11.x) - (numerator_10.x * denominator_11.y));\\n  vec2 tmpvar_13;\\n  tmpvar_13 = (((tmpvar_12 / \\n    ((denominator_11.x * denominator_11.x) + (denominator_11.y * denominator_11.y))\\n  ) + 0.5) - vec2(0.5, 0.5));\\n  float tmpvar_14;\\n  tmpvar_14 = sqrt(dot (tmpvar_13, tmpvar_13));\\n  float tmpvar_15;\\n  float tmpvar_16;\\n  tmpvar_16 = (min (abs(\\n    (tmpvar_13.x / tmpvar_13.y)\\n  ), 1.0) / max (abs(\\n    (tmpvar_13.x / tmpvar_13.y)\\n  ), 1.0));\\n  float tmpvar_17;\\n  tmpvar_17 = (tmpvar_16 * tmpvar_16);\\n  tmpvar_17 = (((\\n    ((((\\n      ((((-0.01213232 * tmpvar_17) + 0.05368138) * tmpvar_17) - 0.1173503)\\n     * tmpvar_17) + 0.1938925) * tmpvar_17) - 0.3326756)\\n   * tmpvar_17) + 0.9999793) * tmpvar_16);\\n  tmpvar_17 = (tmpvar_17 + (float(\\n    (abs((tmpvar_13.x / tmpvar_13.y)) > 1.0)\\n  ) * (\\n    (tmpvar_17 * -2.0)\\n   + 1.570796)));\\n  tmpvar_15 = (tmpvar_17 * sign((tmpvar_13.x / tmpvar_13.y)));\\n  if ((abs(tmpvar_13.y) > (1e-08 * abs(tmpvar_13.x)))) {\\n    if ((tmpvar_13.y < 0.0)) {\\n      if ((tmpvar_13.x >= 0.0)) {\\n        tmpvar_15 += 3.141593;\\n      } else {\\n        tmpvar_15 = (tmpvar_15 - 3.141593);\\n      };\\n    };\\n  } else {\\n    tmpvar_15 = (sign(tmpvar_13.x) * 1.570796);\\n  };\\n  vec2 tmpvar_18;\\n  tmpvar_18.x = (tmpvar_15 * 0.1591549);\\n  tmpvar_18.y = tmpvar_14;\\n  vec2 tmpvar_19;\\n  tmpvar_19.x = ((tmpvar_18.x * 2.0) + q11);\\n  tmpvar_19.y = ((0.2 * log(tmpvar_14)) + q12);\\n  uv_1 = (0.5 + ((0.5 - \\n    abs(((fract(\\n      (tmpvar_19 * 0.5)\\n    ) * 2.0) - 1.0))\\n  ).yx * 1.06));\\n  vec2 tmpvar_20;\\n  vec2 tmpvar_21;\\n  tmpvar_21 = (vec2(1.0, 0.0) * texsize.zw);\\n  tmpvar_20.x = (texture (sampler_main, (uv_1 + tmpvar_21)).xyz - texture (sampler_main, (uv_1 - tmpvar_21)).xyz).y;\\n  vec2 tmpvar_22;\\n  tmpvar_22 = (vec2(0.0, 1.0) * texsize.zw);\\n  tmpvar_20.y = (texture (sampler_main, (uv_1 + tmpvar_22)).xyz - texture (sampler_main, (uv_1 - tmpvar_22)).xyz).y;\\n  d_5 = (texsize.zw * 1.2);\\n  dx_4 = ((2.0 * (\\n    (texture (sampler_blur1, (uv_1 + (vec2(1.0, 0.0) * d_5))).xyz * scale1)\\n   + bias1)) - (2.0 * (\\n    (texture (sampler_blur1, (uv_1 - (vec2(1.0, 0.0) * d_5))).xyz * scale1)\\n   + bias1)));\\n  dy_3 = ((2.0 * (\\n    (texture (sampler_blur1, (uv_1 + (vec2(0.0, 1.0) * d_5))).xyz * scale1)\\n   + bias1)) - (2.0 * (\\n    (texture (sampler_blur1, (uv_1 - (vec2(0.0, 1.0) * d_5))).xyz * scale1)\\n   + bias1)));\\n  vec2 tmpvar_23;\\n  tmpvar_23.x = dx_4.y;\\n  tmpvar_23.y = dy_3.y;\\n  dz_2 = ((tmpvar_20 * 3.0) + tmpvar_23);\\n  ret_6 = (vec3(((\\n    pow ((sqrt(dot (dz_2, dz_2)) * 0.8), 0.7)\\n   + \\n    (((texture (sampler_blur2, uv_1).xyz * scale2) + bias2).y * 0.4)\\n  ) - 0.1)) * vec3(0.3, 0.5, 0.7));\\n  vec2 tmpvar_24;\\n  tmpvar_24.x = dx_4.x;\\n  tmpvar_24.y = dy_3.x;\\n  vec3 tmpvar_25;\\n  tmpvar_25 = mix (mix (ret_6, vec3(0.2, 0.1, 0.0), vec3((texture (sampler_main, \\n    (uv_1 + ((tmpvar_24 * texsize.zw) * 18.0))\\n  ).x * 6.0))), vec3(1.0, 1.0, 1.0), texture (sampler_main, uv_1).zzz);\\n  ret_6 = tmpvar_25;\\n  vec4 tmpvar_26;\\n  tmpvar_26.w = 1.0;\\n  tmpvar_26.xyz = tmpvar_25;\\n  ret = tmpvar_26.xyz;\\n }"}')},7554:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":4,"gammaadj":1,"wave_thick":1,"wrap":0,"wave_a":0.004,"wave_scale":9.731,"wave_smoothing":0,"wave_mystery":1,"modwavealphastart":1,"modwavealphaend":1,"warpanimspeed":0.442,"warpscale":7.315,"zoomexp":1.50374,"warp":0.08563,"wave_y":0.04,"ob_size":0,"ob_g":1,"ob_a":1,"ib_size":0,"ib_r":1,"ib_g":0,"ib_b":0.75,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_b":0,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"sides":41,"additive":1,"num_inst":50,"rad":0.01,"ang":3.20442,"tex_zoom":6.23873,"g":1,"b":1,"a":0,"r2":1,"b2":1,"border_a":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"index = instance*q32;\\n\\nx = gmegabuf(index);\\ny = gmegabuf(index+1);\\n\\nang = gmegabuf(index+9);\\nrad = gmegabuf(index+4)*2;\\n\\nr = gmegabuf(index+5);\\ng = gmegabuf(index+6);\\nb = gmegabuf(index+7);\\n\\nr2 = r; g2 = g; b2 = b;\\n\\n\\nx = 0.5 + (x-0.5)/q2;"},{"baseVals":{"sides":23,"additive":1,"num_inst":50,"x":0.74,"y":0.27,"rad":0.01,"tex_zoom":0.81948,"g":1,"b":1,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"vx = 0","frame_eqs_eel":"sample = instance/(num_inst-1);\\n\\nx1 = 0.5;\\ny1 = 0.5 + (q3-0.5)*0.01;\\ny2 = 0.5;\\nx = x1 + (sample-0.5)*0.2;\\ny = y2*sample + y1*(1-sample);"},{"baseVals":{"sides":100,"additive":1,"rad":0.0999,"tex_zoom":0.73458,"r":0,"g":1,"a":0,"border_a":1,"enabled":0},"init_eqs_eel":"vx = 0","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":3,"additive":1,"num_inst":400,"rad":0.16283,"tex_zoom":0.73458,"g":1,"b":1,"a":0.5,"g2":0,"border_a":0},"init_eqs_eel":"i3 = 0;\\ni4 = 0;","frame_eqs_eel":"i3 = if(equal(instance,0),0,i3);\\ni4 = if(equal(instance,0),0,i4);\\nppo = 8;\\nindex = i4*q32;\\nsample = i3 % ppo;\\n\\nsize = gmegabuf(index+4)*40;\\n\\nx = gmegabuf(index);\\ny = gmegabuf(index+1);\\n\\nang = gmegabuf(index+9);\\nrad = size*0.05;\\n\\nr = gmegabuf(index+5);\\ng = gmegabuf(index+6);\\nb = gmegabuf(index+7);\\n\\n\\nsample = sample/ppo;\\nbending = gmegabuf(index + 12)*5 + gmegabuf(index + 10)*5;\\ndir = -ang + (sample-0.4)*bending;\\n\\n ang =  asin(1)*1.5 - dir + bending*0.05;\\n\\nx = x + ((sample-0.3)*0.06*cos(dir)*size + sin(dir)*size*bending*0.01);\\ny = y + ((sample-0.3)*0.06*sin(dir)*size - cos(dir)*size*bending*0.01);\\n\\nx = 0.5 + (x-0.5)/q2;\\n\\nrad = rad*1.5 - sample*0.05*size;\\n\\ni3 = i3 + 1;\\ni4 = if( equal(i3%ppo,0), i4 +1, i4);"}],"waves":[{"baseVals":{"samples":452,"additive":1,"scaling":2.44415,"smoothing":0,"a":0.15,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t1 = 0;\\nt2 = 0;","point_eqs_eel":"ppo = 9;\\nindex = t2*q32;\\nsample = t1 % ppo;\\n\\nnindex = gmegabuf(index + q30); // the next neighbor\'s index\\nnnindex = gmegabuf(index + q30+1); // the next neighbor\'s index\\nnnnindex = gmegabuf(index + q30+2); // the next neighbor\'s index\\n\\nx = gmegabuf(index);\\ny = gmegabuf(index+1);\\nr = 0.5 + gmegabuf(index+5)*0.5;\\ng = 0.5 + gmegabuf(index+6)*0.5;\\nb = 0.5 + gmegabuf(index+7)*0.5;\\n\\nnx = gmegabuf(nindex);\\nny = gmegabuf(nindex+1);\\nnnx = gmegabuf(nnindex);\\nnny = gmegabuf(nnindex+1);\\nnnnx = gmegabuf(nnnindex);\\nnnny = gmegabuf(nnnindex+1);\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q2;\\nnx = 0.5 + (nx-0.5)/q2;\\nny = 0.5 + (ny-0.5)/q2;\\nnnx = 0.5 + (nnx-0.5)/q2;\\nnny = 0.5 + (nny-0.5)/q2;\\nnnnx = 0.5 + (nnnx-0.5)/q2;\\nnnny = 0.5 + (nnny-0.5)/q2;\\n\\nx = if( equal(sample,2), nx, x);\\ny = if( equal(sample,2), ny, y);\\nx = if( equal(sample,4), nnx, x);\\ny = if( equal(sample,4), nny, y);\\nx = if( equal(sample,6), nnnx, x);\\ny = if( equal(sample,6), nnny, y);\\n\\na = above(sample,1)*below(sample,ppo-1)*a;\\n\\nt1 = t1 + 1;\\nt2 = if( equal(t1%ppo,0), t2 +1, t2);"},{"baseVals":{"enabled":1,"samples":65,"spectrum":1,"usedots":1,"thick":1,"additive":1,"scaling":0.33408,"smoothing":0,"a":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t8 = 1;\\n\\nt1 = 0.5;\\nt2 = 0.9;","point_eqs_eel":"d = 0;//d*0.85 + (value1)*1;\\n\\ny = 0.2 + value1+value2;\\nx = 0.9 - sample*0.8;\\n\\ngmegabuf((sample*64-1)*q32 + 14) = value1 + value2;"},{"baseVals":{"samples":280,"additive":1,"scaling":5.92556,"smoothing":0,"a":0.5,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1 = 0;\\nt2 = 0;\\n\\n","point_eqs_eel":"// q32 number of attributes\\n// q31 number of objects\\n\\nppo = 7; // number of points used for each object\\nindex = t2*q32; // object\'s index\\n\\nx = 0.5 +(gmegabuf(index)-0.5)/q2;\\ny = 0.5 + (gmegabuf(index+1)-0.5)/q2;\\n\\n// collecting pairs of index and distance to the current object in a local buffer\\ni = 0;\\nj = 0;\\nloop(q31,\\n     d = sqrt( sqr(gmegabuf(index)-gmegabuf(i)) + sqr(gmegabuf(index+1)-gmegabuf(i+1)));\\n     d = if( equal(d,0), 1, d);\\n     megabuf(j)   = i; // store index/distance pairs\\n     megabuf(j+1) = d;\\n     j = j+2;\\n     i = i+q32;\\n    );\\n\\n// sort that buffer, but only 5 cycles for the 5 nearest objects\\ni = 0;\\nloop( 5,\\n      j = i;\\n      smallestfind = 100;\\n      findindex = 0;\\n      loop( q31-j,\\n            distance =megabuf(j*2+1);\\n            smaller = above( smallestfind, distance);\\n            smallestfind = if(smaller, distance, smallestfind);\\n            findindex = if( smaller, j*2, findindex);\\n            j = j + 1;\\n          );\\n\\n      // now that the nearest object was found, swap it to the buffer\'s top\\n\\n      j = megabuf(i);\\n      d = megabuf(i+1);\\n\\n      megabuf(i)   = megabuf(findindex);\\n      megabuf(i+1) = megabuf(findindex+1);\\n      megabuf(findindex)   = j;\\n      megabuf(findindex+1) = d;\\n\\n      i = i+1;\\n    );\\n\\n\\nindex2 = (t1)%ppo;\\ni = megabuf(index2-2);\\nxx = 0.5 + (gmegabuf(i)-0.5)/q2;\\nyy = 0.5 + (gmegabuf(i+1)-0.5)/q2;\\nw = asin(1)*index2/4;\\n//xx = x + sin(w)*0.1;\\n//yy = y + cos(w)*0.1;\\nx = if( equal(index2%2,0), x, xx);\\ny = if( equal(index2%2,0), y, yy);\\n\\n\\na = below(index2,ppo-1)*above(index2,1)*a;\\nr = 0.5 + gmegabuf(index + 5)*0.5;\\ng = 0.5 + gmegabuf(index + 6)*0.5;\\nb = 0.5 + gmegabuf(index + 7)*0.5;\\n\\n\\nt2 = t2 + equal(t1%ppo,ppo-1);\\nt1 = t1 + 1;\\n\\n//a = above(t1,128);"},{"baseVals":{"samples":15,"thick":1,"additive":1,"scaling":5.92556,"smoothing":0,"a":0.4,"enabled":0},"init_eqs_eel":"t2 = 0","frame_eqs_eel":"t1 = 0;\\nt2 = 0;\\nt3 = 0;\\nt4 = 0.5;","point_eqs_eel":"ppo = 5;\\n\\nindex = t2*q32;\\nneighbor = 1;\\nneighbor = gmegabuf(index+10+neighbor);\\nx = 0.5 + (gmegabuf(index)-0.5)/q2;\\ny = 0.5 + (gmegabuf(index+1)-0.5)/q2;\\nxx = 0.5 + ( gmegabuf(neighbor) - 0.5)/q2;\\nyy = 0.5 + ( gmegabuf(neighbor+1) - 0.5)/q2;\\n\\nx = if( equal(t1 % 2, 0), x, xx);\\ny = if( equal(t1 % 2, 0), y, yx);\\n\\n\\nt2 = t2 + equal(t1,ppo);\\nt1 = if(above(t1,ppo),t1-ppo,t1) + 1;\\n"}],"init_eqs_eel":"// clear buffer\\ni = 0; loop(1024*1024, gmegabuf(i) = 0; i = i+1;);\\n\\ncount = 50;\\nattributes = 32;\\nnListStart = 24; // starting index of neighbor list\\n\\nminradius = 0.004;\\nmaxradius = 0.04;\\nv = 0.0;\\n\\n// randomize initial coordinates\\nindex = 0;\\nloop(count,\\n     gmegabuf(index*attributes) = rand(1000)/1000;\\n     gmegabuf(index*attributes+1) = rand(1000)/1000;\\n     gmegabuf(index*attributes+2) = v*(rand(1000)/1000-0.5);\\n     gmegabuf(index*attributes+3) = v*(rand(1000)/1000-0.5);\\n     gmegabuf(index*attributes+4) = minradius + (maxradius-minradius)*(index+1)/count;\\n     gmegabuf(index*attributes+5) = 0;\\n     gmegabuf(index*attributes+6) = 1;\\n     gmegabuf(index*attributes+7) = 1;\\n     gmegabuf(index*attributes+8) = pow(gmegabuf(index*attributes+4),3) ;\\n     gmegabuf(index*attributes+9) = 4*asin(1)*rand(1000)/1000;\\n     gmegabuf(index*attributes+10) = 0;\\n     gmegabuf(index*attributes+13) = index/(count-1);\\n     gmegabuf(index*attributes+14) = 0;\\n     index = index+1;\\n    );\\n\\nq30 = nListStart;\\nq31 = count;\\nq32 = attributes;\\n\\n// 0, x\\n// 1, y\\n// 2, vx\\n// 3, vy\\n// 4, radius\\n// 5, red\\n// 6, green\\n// 7, blue\\n// 8, mass\\n// 9, angle\\n// 10, rotation\\n// 11, bend force\\n// 12, bending\\n// 13, sample\\n// 14, spectrum","frame_eqs_eel":"dt = 1/fps;\\n\\nwarp = 0;\\nzoom = 1;\\nwave_a = 0;\\n\\ngravity = 0.0015*dt*0;\\ndampening = 0;\\nfriction = 2048*dt;\\nshock = 0.002;\\npi2 = asin(1);\\n\\nnn = 3; // number of nearest neighbors to search, reduce if not needed\\n        // provide enough attributes, otherwise the next object\'s coordinate will be overwritten\\n        // collision detection is based on nearest neighbors, so keep it at least at 1.\\n\\ncheck = 2; // how many neighbors will be checked for a possible collision. may not be above nn.\\n           // raise to avoid odd behavior in clusters of touching objects.\\n\\nbouncefactor = 0.1;\\nrotatefactor = 0; // relation between angular and translative momentum, when object hits a border. this is an empirical value for a convincing impression\\n\\n\\n\\nh = (aspecty-1)*0.5; w = (aspectx-1)*0.5;\\nindex = 0; index2 = 0;\\nloop(count,\\n\\n     random = rand(1000)/1000;\\n     sample = gmegabuf(index+13);\\n\\n     // bend force\\n     gmegabuf(index + 11) = gmegabuf(index + 11)*0.92 - 4*gmegabuf(index+12)*dt + 2*(random-0.5)*dt*gmegabuf(index+14);\\n\\n     // bend\\n     gmegabuf(index + 12) += 60*gmegabuf(index + 11)*dt;\\n\\n     v = sqrt( sqr( gmegabuf(index + 2) ) + sqr( gmegabuf(index + 3) ) );\\n\\n     // apply friction\\n     fric = max(0,1 - sqr(v*friction) - v*2);\\n     gmegabuf(index + 2) *= fric;\\n     gmegabuf(index + 3) *= fric;\\n\\n     // apply direction change\\n     gmegabuf(index + 10) = gmegabuf(index + 10)*fric +  v*gmegabuf(index +12)*0;\\n\\n     // apply acceleration force\\n     acceleration = random*0.000 + abs(gmegabuf(index+11))*0.003;\\n     direction = gmegabuf(index + 9) - pi2;\\n     gmegabuf(index + 2) += sin(direction)*acceleration;\\n     gmegabuf(index + 3) += cos(direction)*acceleration;\\n\\n     // adding velocity vectors\\n     gmegabuf(index) = gmegabuf(index) + gmegabuf(index+2)*60*dt;\\n     gmegabuf(index+1) = gmegabuf(index+1) + gmegabuf(index+3)*60*dt;\\n     gmegabuf(index+9) = gmegabuf(index+9) + gmegabuf(index+10)*0.5;\\n\\n     // applying gravity\\n     gmegabuf(index+3) = gmegabuf(index+3) - gravity;\\n\\n     vr = sin(gmegabuf(index+10))*gmegabuf(index+4); // rotation speed at the surface\\n\\n     // bounce off ceiling\\n     bounce = above( gmegabuf(index+1), 1 - gmegabuf(index+4) + w);\\n     gmegabuf(index+2) = if( bounce, gmegabuf(index+2) + (vr+gmegabuf(index+2))*rotatefactor, gmegabuf(index+2));\\n     gmegabuf(index+3) = if( bounce, -abs(gmegabuf(index+3))*dampening - shock, gmegabuf(index+3));\\n     vr = if( bounce, vr - (gmegabuf(index+2) + vr)*(1-rotatefactor), vr);\\n\\n     // bounce off floor\\n     bounce = below( gmegabuf(index+1), gmegabuf(index+4) - w);\\n     gmegabuf(index+2) = if( bounce, gmegabuf(index+2) + (vr-gmegabuf(index+2))*rotatefactor, gmegabuf(index+2));\\n     gmegabuf(index+3) = if( bounce, abs(gmegabuf(index+3))*dampening + shock, gmegabuf(index+3));\\n     vr = if( bounce, vr + (gmegabuf(index+2) - vr)*(1-rotatefactor), vr);\\n\\n     // bounce off right border\\n     bounce = above( gmegabuf(index), 1 - gmegabuf(index+4) + h);\\n     gmegabuf(index+2) = if( bounce, -abs(gmegabuf(index+2))*dampening - shock, gmegabuf(index+2));\\n     gmegabuf(index+3) = if( bounce, gmegabuf(index+3) + (vr-gmegabuf(index+3))*rotatefactor, gmegabuf(index+3));\\n     vr = if( bounce, vr + (gmegabuf(index+3) - vr)*(1-rotatefactor), vr);\\n\\n     // bounce off left border\\n     bounce = below( gmegabuf(index), gmegabuf(index+4) - h);\\n     gmegabuf(index+2) = if( bounce, abs(gmegabuf(index+2))*dampening + shock, gmegabuf(index+2));\\n     gmegabuf(index+3) = if( bounce, gmegabuf(index+3) - (vr+gmegabuf(index+3))*rotatefactor, gmegabuf(index+3));\\n     vr = if( bounce, vr - (gmegabuf(index+3) + vr)*(1-rotatefactor), vr);\\n\\n     gmegabuf(index+10) = asin(vr/gmegabuf(index+4));\\n\\n     i = 0; j = 0; // collecting pairs of index and distance to the current object in a local buffer\\n     loop( count,\\n           d = sqrt( sqr(gmegabuf(index)-gmegabuf(i)) + sqr(gmegabuf(index+1)-gmegabuf(i+1)));\\n           d = if( equal(d,0), 10, d); // leave out comparison with itself (where d == 0, set d to a high value)\\n           d = d - (gmegabuf(index+4)+gmegabuf(i+4))*0.5; // subtract radius (surface to surface distance)\\n           megabuf(j)   = i; // store index/distance pairs\\n           megabuf(j+1) = d;\\n           j = j+2;\\n           i = i+attributes; );\\n     i = 0; // sort that buffer, but only as many cycles as needed for the _nn_ nearest neighbors\\n     loop( nn,\\n           j = i; smallestfind = 10; findindex = -1;\\n           loop( count-j,\\n                 distance =megabuf(j*2+1);\\n                 smaller = above( smallestfind, distance);\\n                 smallestfind = if(smaller, distance, smallestfind);\\n                 findindex = if( smaller, j*2, findindex);\\n                 j = j + 1; );\\n           j = megabuf(i*2); d = megabuf(i*2+1);\\n           megabuf(i*2)   = megabuf(findindex);\\n           megabuf(i*2+1) = megabuf(findindex+1);\\n           megabuf(findindex)   = j;\\n           megabuf(findindex+1) = d;\\n           i = i+1;\\n         );\\n     i = 0; // storing the indexes of the nearest neighbors in the list\\n     loop( nn,\\n           gmegabuf(index + nListStart + i) = megabuf(i*2);\\n           i = i +1;\\n         );\\n     i = 0; // collision detection and impulse transmission below\\n     loop( check,\\n           index2 = megabuf(i);\\n           hit = below( sqrt( sqr( gmegabuf(index) - gmegabuf(index2)) +\\n                              sqr( gmegabuf(index+1) - gmegabuf(index2+1))),\\n                        gmegabuf(index + 4) + gmegabuf(index2 + 4)\\n                      )\\n                 *\\n                 above( sqrt( sqr( gmegabuf(index)   - gmegabuf(index2))+\\n                        sqr( gmegabuf(index+1) - gmegabuf(index2+1))),\\n                        sqrt( sqr( gmegabuf(index+0) - gmegabuf(index2+0)+\\n                                   gmegabuf(index+2) - gmegabuf(index2+2))+\\n                              sqr( gmegabuf(index+1) - gmegabuf(index2+1)+\\n                                   gmegabuf(index+3) - gmegabuf(index2+3)) ) );\\n           ref_ang = atan2( gmegabuf(index2)-gmegabuf(index), // calculating the angle of the common tangent\\n                            gmegabuf(index2 + 1)-gmegabuf(index + 1)) + pi2;\\n           v1 = sqrt(sqr( gmegabuf(index + 2)) + sqr( gmegabuf(index + 3))); // velocity of object1\\n           v2 = sqrt(sqr( gmegabuf(index2 + 2)) + sqr( gmegabuf(index2 + 3)));  // velocity of object2\\n           w1 = atan2( gmegabuf(index + 2), gmegabuf(index + 3));   // object1 motion angle\\n           w2 = atan2( gmegabuf(index2 + 2), gmegabuf(index2 + 3)); // object2 motion angle\\n           vr2 = sin(gmegabuf(index2 + 10))*gmegabuf(index2+4); // the other object\'s surface velocity\\n           m1 = gmegabuf(index + 8); m2 = gmegabuf(index2 + 8);\\n           vv1 = ((m1-m2)*v1 + 2*m2*v2)/(m1+m2); vv2 = ((m2-m1)*v2 + 2*m1*v1)/(m1+m2);\\n           vrr = ((m1-m2)*vr + 2*m2*vr2)/(m1+m2); vrr2 = ((m2-m1)*vr2 + 2*m1*vr)/(m1+m2);\\n\\n           gmegabuf( index + 2) = if( hit, sin(ref_ang)*v1*cos(w1-ref_ang) + ((vr-vr2)-sin(ref_ang)*v1*cos(w1-ref_ang))*0.1\\n                                         + cos(ref_ang)*vv1*sin(w2-ref_ang),\\n                                                  gmegabuf( index + 2) );\\n\\n           gmegabuf( index + 3) = if( hit, cos(ref_ang)*v1*cos(w1-ref_ang) + ((vr-vr2)-cos(ref_ang)*v1*cos(w1-ref_ang))*0.1\\n                                         - sin(ref_ang)*vv1*sin(w2-ref_ang),\\n                                                 gmegabuf( index + 3) );\\n\\n           gmegabuf( index2 + 2) = if( hit, sin(ref_ang)*v2*cos(w2-ref_ang) + ((vr2-vr)-sin(ref_ang)*v2*cos(w2-ref_ang))*0.1\\n                                          + cos(ref_ang)*vv2*sin(w1-ref_ang),\\n                                                  gmegabuf( index2 + 2) );\\n\\n           gmegabuf( index2 + 3) = if( hit, cos(ref_ang)*v2*cos(w2-ref_ang) + ((vr2-vr)-cos(ref_ang)*v2*cos(w2-ref_ang))*0.1\\n                                          - sin(ref_ang)*vv2*sin(w1-ref_ang),\\n                                                  gmegabuf( index2 + 3) );\\n\\n           vr = if( hit, vr + (cos(w1-ref_ang)*(v1-v2)-vr) , vr);\\n           gmegabuf( index + 10) = asin( vr / gmegabuf(index+4) );\\n\\n           vr2 = if( hit, vr2 + (cos(w2-ref_ang)*(v2-v1)-vr2) , vr2);\\n           gmegabuf( index2 + 10) = asin( vr2 / gmegabuf(index2+4) );\\n\\n           i=i+2;\\n         );\\n     index = index+attributes;\\n    );\\n\\n\\nq1 = aspectx;\\nq2 = aspecty;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  ret_1.z = (texture (sampler_main, uv).z * 0.5);\\n  vec2 tmpvar_2;\\n  tmpvar_2 = ((uv_orig * texsize.xy) * texsize_noise_lq.zw);\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (texsize.zw * 4.0);\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = (((2.0 * \\n    ((texture (sampler_blur1, (uv_orig + (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv_orig - (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1) + bias1)\\n  )).y * 0.5);\\n  tmpvar_4.y = (((2.0 * \\n    ((texture (sampler_blur1, (uv_orig + (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv_orig - (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1) + bias1)\\n  )).y * 0.5);\\n  ret_1.y = texture (sampler_fw_main, clamp ((uv_orig + (\\n    (tmpvar_4 * texsize.zw)\\n   * 4.0)), 0.0, 1.0)).y;\\n  ret_1.y = (ret_1.y + ((\\n    (ret_1 - ((texture (sampler_blur1, uv_orig).xyz * scale1) + bias1))\\n  .y * 0.025) + -0.014));\\n  ret_1.y = (ret_1.y + ((texture (sampler_noise_lq, tmpvar_2).y - 0.5) * 0.02));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = (((2.0 * \\n    ((texture (sampler_blur1, (uv_orig + (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv_orig - (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1) + bias1)\\n  )).x * 0.5);\\n  tmpvar_5.y = (((2.0 * \\n    ((texture (sampler_blur1, (uv_orig + (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv_orig - (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1) + bias1)\\n  )).x * 0.5);\\n  ret_1.x = ((texture (sampler_main, (uv - \\n    ((tmpvar_5 * texsize.zw) * 4.0)\\n  )).x - (ret_1.y * 0.01)) + 0.004);\\n  ret_1.x = (ret_1.x + ((\\n    (texture (sampler_noise_lq, tmpvar_2).x - 0.5)\\n   * 0.01) + (ret_1.z * 0.14)));\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = ret_1;\\n  ret = tmpvar_6.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 4.0);\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = (((2.0 * \\n    ((texture (sampler_blur1, (uv + (vec2(1.0, 0.0) * tmpvar_2))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv - (vec2(1.0, 0.0) * tmpvar_2))).xyz * scale1) + bias1)\\n  )) * 0.5).y;\\n  tmpvar_3.y = (((2.0 * \\n    ((texture (sampler_blur1, (uv + (vec2(0.0, 1.0) * tmpvar_2))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv - (vec2(0.0, 1.0) * tmpvar_2))).xyz * scale1) + bias1)\\n  )) * 0.5).y;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (uv - ((tmpvar_3 * texsize.zw) * 128.0));\\n  vec4 tmpvar_5;\\n  tmpvar_5 = texture (sampler_main, uv);\\n  ret_1 = (((\\n    ((texture (sampler_blur2, tmpvar_4).xyz * scale2) + bias2)\\n  .x * \\n    clamp ((1.0 - tmpvar_5.y), 0.0, 1.0)\\n  ) * pow (hue_shader.yxz, vec3(8.0, 8.0, 8.0))) * 3.0);\\n  ret_1 = (mix (mix (ret_1, \\n    (pow (hue_shader.yzx, vec3(8.0, 8.0, 8.0)) * 1.4)\\n  , vec3(\\n    ((texture (sampler_main, tmpvar_4).x * 0.8) + ((texture (sampler_blur1, tmpvar_4).xyz * scale1) + bias1).x)\\n  )), vec3(1.0, 1.0, 1.0), (\\n    (pow (hue_shader, vec3(8.0, 8.0, 8.0)) * texture (sampler_main, clamp (uv, 0.0, 1.0)).y)\\n   * 1.2)) * clamp ((1.0 - tmpvar_5.z), 0.0, 1.0));\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = ret_1;\\n  ret = tmpvar_6.xyz;\\n }"}')},6168:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":4,"gammaadj":1,"decay":0.995,"echo_zoom":1.007,"echo_orient":3,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"wave_a":1.413,"wave_scale":0.418,"wave_smoothing":0,"wave_mystery":-0.66,"modwavealphastart":2,"modwavealphaend":2,"warpanimspeed":0.568,"warpscale":1.867,"zoomexp":1.00001,"zoom":0.99951,"warp":0.1089,"wave_r":0,"wave_g":0,"wave_x":0.24,"wave_y":0.44,"ob_size":0,"ob_a":1,"ib_size":0,"ib_r":0,"ib_b":1,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"sides":100,"additive":1,"thickoutline":1,"rad":0.0277,"ang":6.03186,"tex_ang":6.03186,"tex_zoom":0.6839,"a":0,"r2":1,"g2":0,"border_r":0.05,"border_a":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"an = an + q6;\\nang = an*0.5;\\nx = q4;\\ny = q5;\\nrad = q3;\\n\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;\\n"},{"baseVals":{"sides":100,"additive":1,"thickoutline":1,"rad":0.0277,"ang":6.03186,"tex_ang":6.03186,"tex_zoom":0.6839,"a":0,"r2":1,"g2":0,"border_r":0.05,"border_a":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"an = an + q9;\\nang = an*0.5;\\nx = q7;\\ny = q8;\\nrad = q3;\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;\\n"},{"baseVals":{"sides":100,"additive":1,"thickoutline":1,"rad":0.0277,"ang":6.03186,"tex_ang":6.03186,"tex_zoom":0.6839,"a":0,"r2":1,"g2":0,"border_r":0.05,"border_a":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"an = an + q12;\\nang = an*0.5;\\nx = q10;\\ny = q11;\\nrad = q3;\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;\\n"},{"baseVals":{"sides":48,"additive":1,"num_inst":4,"rad":0.0277,"ang":6.03186,"tex_ang":6.03186,"tex_zoom":0.6839,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"an = an + 0.5*q16/num_inst;\\nw = asin(1)*4*instance/num_inst + an;\\nx = q6 + sin(w)*q5*0.5;\\ny = q7 + cos(w)*q5*0.5;\\nrad = q5*0.25;\\n\\n\\n//x = 0.5 + (x-0.5)/q2;\\n//y = 0.5 + (y-0.5)/q1;\\n"}],"waves":[{"baseVals":{"enabled":1,"thick":1,"additive":1,"scaling":2.0231,"smoothing":0,"r":0.18},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"vol = bass*8 + mid*5 + treb*3;\\nm = m*0.97 + vol*0.08;\\nmonitor = vol;\\nbeat = above(vol,res)*above(vol,m)*above(vol,16);\\ndiff = (1-beat)*diff + beat*(vol-res);\\nres = beat*(vol + m*0.04) + (1-beat)*(res -  (0.1+diff*0.02)*60/fps);\\nres = max(0,res);\\n\\na = beat;","point_eqs_eel":"tt3 = tt3*0.6 + (value1)*1;\\ntt2 = tt2*0.7 + tt3*0.2;\\ntt1 = tt1*0.8 + tt2*0.1;\\nd = d*0.9 + tt1*0.2;\\n\\ny = 0.5 + d*sample*(1-sample)*2;\\nx =  -0.05 + sample*1.1;"},{"baseVals":{"enabled":1,"spectrum":1,"scaling":0.36971,"smoothing":0,"r":0.01},"init_eqs_eel":"chance = 0;","frame_eqs_eel":"t1 = asin(1);\\n\\nrot = rot + q6;\\nt2 = rot;\\n\\nq4 = 0.5 + (q4-0.5)*q15;\\nq5 = 0.5 + (q5-0.5)*q15;","point_eqs_eel":"w = 4*t1*sample + t2;\\nd = q3*0.5*q15 + value1;\\n\\nx = q4 + sin(w)*d;\\ny = q5 + cos(w)*d;"},{"baseVals":{"enabled":1,"spectrum":1,"scaling":0.36971,"smoothing":0,"r":0.01},"init_eqs_eel":"chance = 0;","frame_eqs_eel":"t1 = asin(1);\\n\\nrot = rot + q9;\\nt2 = rot;\\n\\nq7 = 0.5 + (q7-0.5)*q15;\\nq8 = 0.5 + (q8-0.5)*q15;","point_eqs_eel":"w = 4*t1*sample + t2;\\nd = q3*0.5*q15 + value1;\\n\\nx = q7 + sin(w)*d;\\ny = q8 + cos(w)*d;"},{"baseVals":{"enabled":1,"spectrum":1,"scaling":0.36971,"smoothing":0,"r":0.01},"init_eqs_eel":"chance = 0;","frame_eqs_eel":"t1 = asin(1);\\n\\nrot = rot + q12;\\nt2 = rot;\\n\\nq10 = 0.5 + (q10-0.5)*q15;\\nq11= 0.5 + (q11-0.5)*q15;","point_eqs_eel":"w = 4*t1*sample + t2;\\nd = q3*0.5*q15 + value1;\\n\\nx = q10 + sin(w)*d;\\ny = q11 + cos(w)*d;"}],"init_eqs_eel":"x1 = 0.5;\\ny1 = 0.6;\\n\\nx2 = 0.5;\\ny2 = 0.4;\\n\\nx3 = 0.5;\\ny3 = 0.2;\\n\\nvr1 = 0.0001;\\nvr2 = 0.0;\\nvr3 = 0.0;\\n\\nvx1 = 0;\\nvx2 = 0;\\nvx3 = 0;","frame_eqs_eel":"zoom = 1;\\nwave_a = 0;\\n\\n// impuls transmission with an angular momentum factor, 3 bodies\\n// code by Flexi\\n// good luck with tuning these values to a fine dynamic behavior ;-)\\n\\n   r = 0.11+ (bass_att+treb_att)*0.005; // the object\'s radius\\n\\n   gravity = 0.01;\\n\\n   bouncedampening = 0.94;  // This is where kinetic energy is taken from the system.\\n                            // Be careful with values close to 1.0\\n\\n   bounceimpact = 0.17;     // When an object hits one border, it slightly penetrates it.\\n                            // The impact value determines how strong this depth is taken as resulting impuls.\\n                            // This is where kinetic energy possibly is added to the system depent on the increase in size.\\n\\n// don\'t change below\\n\\n// bouncing off borders (the first rotating object)\\n\\n   y1  = y1+vy1; // adding velocity vector to position\\n   x1  = x1+vx1;\\n\\n   vr  = sin(vr1)*r; // tangential velocity\\nbounce = below(y1,r-(aspectx-1)*0.5); // hit floor?\\n   vy1 = if(bounce, abs(vy1)*bouncedampening + (r-y1-(aspectx-1)*0.5)*bounceimpact, vy1-gravity/fps);\\n   vx1 = if(bounce, vx1 + (vr-vx1)*bounceimpact, vx1);\\n   vr  = if(bounce, vr + (vx1-vr)*0.85 , vr);\\nbounce = above(x1,1-r+(aspecty-1)*0.5); // hit right border?\\n   vx1 = if(bounce, - abs(vx1)*bouncedampening + (1-r-x1+(aspecty-1)*0.5)*bounceimpact, vx1);\\n   vy1 = if(bounce, vy1 + (vr-vy1)*bounceimpact, vy1);\\n   vr  = if(bounce, vr + (vy1-vr)*0.85 , vr);\\nbounce = below(x1,r-(aspecty-1)*0.5); // hit left border?\\n   vx1 = if(bounce, abs(vx1)*bouncedampening + (r-x1-(aspecty-1)*0.5)*bounceimpact, vx1);\\n   vy1 = if(bounce, vy1 + (-vr-vy1)*bounceimpact, vy1);\\n   vr  = if(bounce, vr - (vy1+vr)*0.85 , vr);\\n   vr1 = asin(vr/r); // angular velocity of the surface\\n\\n// bouncing off borders (the second rotating object)\\nvr=sin(vr2)*r;bounce=below(y2,r-(aspectx-1)*0.5);y2=y2+vy2;vy2=if(bounce,abs(vy2)*bouncedampening+(r-y2-(aspectx-1)*0.5)\\n*bounceimpact,vy2-gravity/fps);vx2=if(bounce,vx2+(vr-vx2)*bounceimpact,vx2);vr=if(bounce,vr+(vx2-vr)*0.85,vr);\\nbounce=above(x2,1-r+(aspecty-1)*0.5);vx2=if(bounce,-abs(vx2)*bouncedampening+(1-r-x2+(aspecty-1)*0.5)*bounceimpact,vx2);\\nvy2=if(bounce,vy2+(vr-vy2)*bounceimpact,vy2);vr=if(bounce,vr+(vy2-vr)*0.85,vr);bounce=below(x2,r-(aspecty-1)*0.5);x2=x2+vx2;\\nvx2=if(bounce,abs(vx2)*bouncedampening+(r-x2-(aspecty-1)*0.5)*bounceimpact,vx2);vy2=if(bounce,vy2+(-vr-vy2)*bounceimpact,vy2);\\nvr=if(bounce,vr-(vy2+vr)*0.85,vr);vr2=asin(vr/r);\\n\\n// bouncing off borders (the third rotating object)\\nvr=sin(vr3)*r;bounce=below(y3,r-(aspectx-1)*0.5);y3=y3+vy3;vy3=if(bounce,abs(vy3)*bouncedampening+(r-y3-(aspectx-1)*0.5)\\n*bounceimpact,vy3-gravity/fps);vx3=if(bounce,vx3+(vr-vx3)*bounceimpact,vx3);vr=if(bounce,vr+(vx3-vr)*0.85,vr);\\nbounce=above(x3,1-r+(aspecty-1)*0.5);vx3=if(bounce,-abs(vx3)*bouncedampening+(1-r-x3+(aspecty-1)*0.5)*bounceimpact,vx3);\\nvy3=if(bounce,vy3+(vr-vy3)*bounceimpact,vy3);vr=if(bounce,vr+(vy3-vr)*0.85,vr);bounce=below(x3,r-(aspecty-1)*0.5);x3=x3+vx3;\\nvx3=if(bounce,abs(vx3)*bouncedampening+(r-x3-(aspecty-1)*0.5)*bounceimpact,vx3);vy3=if(bounce,vy3+(-vr-vy3)*bounceimpact,vy3);\\nvr=if(bounce,vr-(vy3+vr)*0.85,vr);vr3=asin(vr/r);\\n\\n// bouncing of object1 with object2\\n\\nbounce = below( sqrt( sqr(x1+vx1-x2-vx2) + sqr(y1+vy1-y2-vy2)), 2*r); // is distance < diameter ?\\nbounce = bounce*below(sqrt( sqr(x1+vx1-x2-vx2) + sqr(y1+vy1-y2-vy2)),sqrt( sqr(x1-x2) + sqr(y1-y2))); // detect only if objects\\n                                                                                                      // move towards each other\\nref_ang = atan2(x2-x1,y2-y1)+asin(1); // angle of the common tangent\\nv1 = sqrt(vx1*vx1+vy1*vy1); // absolute velocity\\nv2 = sqrt(vx2*vx2+vy2*vy2);\\nw1 = atan2(vx1,vy1); // absolute motion angle\\nw2 = atan2(vx2,vy2);\\nvr = sin(vr1)*r; // angular velocity of the surface\\nv2r= sin(vr2)*r;\\n// in case of a bounce, the velocity is split into the horizontal and vertical part relative to the common tangent,\\n// then the vertical aspects get swapped.\\n// a bounce goes 90% into impuls transmission and 10% angular momentum transmission.\\n// these values make quite a plausible impression, but in fact this has pretty little to do with physical correctness ;)\\nvx1 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + ((vr-v2r)-sin(ref_ang)*v1*cos(w1-ref_ang))*0.1\\n              + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx1);\\nvy1 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + ((vr-v2r)-cos(ref_ang)*v1*cos(w1-ref_ang))*0.1\\n              + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy1);\\nvx2 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + ((v2r-vr)-sin(ref_ang)*v2*cos(w2-ref_ang))*0.1\\n              + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx2);\\nvy2 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + ((v2r-vr)-cos(ref_ang)*v2*cos(w2-ref_ang))*0.1\\n              + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy2);\\nvr = if(bounce, vr + (cos(w1-ref_ang)*(v1-v2)-vr)*0.9 , vr);\\nvr1 = asin(vr/r);\\nv2r = if(bounce, v2r + (cos(w2-ref_ang)*(v2-v1)-v2r)*0.9 , v2r);\\nvr2 = asin(v2r/r);\\n\\n// bouncing of object1 with object3\\n\\n\\nbounce=below(sqrt(sqr(x1+vx1-x3-vx3)+sqr(y1+vy1-y3-vy3)),2*r);bounce=bounce*below(sqrt(sqr(x1+vx1-x3-\\nvx3)+sqr(y1+vy1-y3-vy3)),sqrt(sqr(x1-x3)+sqr(y1-y3)));ref_ang=atan2(x3-x1,y3-y1)+asin(1);v1=sqrt(vx1*vx1\\n+vy1*vy1);v2=sqrt(vx3*vx3+vy3*vy3);w1=atan2(vx1,vy1);w2=atan2(vx3,vy3);vr=sin(vr1)*r;v2r=sin(vr3)*r;vx1\\n=if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang)+((vr-v2r)-sin(ref_ang)*v1*cos(w1-ref_ang))*0.1+sin(ref_ang+\\nasin(1))*v2*cos(w2-ref_ang-asin(1)),vx1);vy1=if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang)+((vr-v2r)-cos\\n(ref_ang)*v1*cos(w1-ref_ang))*0.1+cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)),vy1);vx3=if(bounce,sin\\n(ref_ang)*v2*cos(w2-ref_ang)+((v2r-vr)-sin(ref_ang)*v2*cos(w2-ref_ang))*0.1+sin(ref_ang+asin(1))*v1*cos\\n(w1-ref_ang-asin(1)),vx3);vy3=if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang)+((v2r-vr)-cos(ref_ang)*v2*cos(w2\\n-ref_ang))*0.1+cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)),vy3);vr=if(bounce,vr+(cos(w1-ref_ang)*(v1\\n-v2)-vr)*0.9,vr);vr1=asin(vr/r);v2r=if(bounce,v2r+(cos(w2-ref_ang)*(v2-v1)-v2r)*0.9,v2r);vr3=asin(v2r/r);\\n\\n// bouncing of object3 with object2\\nbounce=below(sqrt(sqr(x3+vx3-x2-vx2)+sqr(y3+vy3-y2-vy2)),2*r);bounce=bounce*below(sqrt(sqr(x2+vx2-x3-\\nvx3)+sqr(y2+vy2-y3-vy3)),sqrt(sqr(x2-x3)+sqr(y2-y3)));ref_ang=atan2(x2-x3,y2-y3)+asin(1);v1=sqrt(vx3*vx3\\n+vy3*vy3);v2=sqrt(vx2*vx2+vy2*vy2);w1=atan2(vx3,vy3);w2=atan2(vx2,vy2);vr=sin(vr3)*r;v2r=sin(vr2)*r;vx3\\n=if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang)+((vr-v2r)-sin(ref_ang)*v1*cos(w1-ref_ang))*0.1+sin(ref_ang+\\nasin(1))*v2*cos(w2-ref_ang-asin(1)),vx3);vy3=if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang)+((vr-v2r)-cos\\n(ref_ang)*v1*cos(w1-ref_ang))*0.1+cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)),vy3);vx2=if(bounce,sin\\n(ref_ang)*v2*cos(w2-ref_ang)+((v2r-vr)-sin(ref_ang)*v2*cos(w2-ref_ang))*0.1+sin(ref_ang+asin(1))*v1*cos\\n(w1-ref_ang-asin(1)),vx2);vy2=if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang)+((v2r-vr)-cos(ref_ang)*v2*cos(w2\\n-ref_ang))*0.1+cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)),vy2);vr=if(bounce,vr+(cos(w1-ref_ang)*(v1\\n-v2)-vr)*0.9,vr);vr3=asin(vr/r);v2r=if(bounce,v2r+(cos(w2-ref_ang)*(v2-v1)-v2r)*0.9,v2r);vr2=asin(v2r/r);\\n\\n\\nq1 = aspectx;\\nq2 = aspecty;\\nq3 = r*2;\\n\\nq4  = x1;  q5 = y1;  q6 = vr1;\\nq7  = x2;  q8 = y2;  q9 = vr2;\\nq10 = x3; q11 = y3; q12 = vr3;\\nq13 = atan2( (x1+x2+x3)/3 - 0.5, (y1+y2+y3)/3-0.5);\\nq14 = sigmoid(sqrt( sqr((x1+x2+x3)/3 - 0.5) + sqr((y1+y2+y3)/3-0.5) ),2)*0.2;\\nq15 = 1/max(aspectx,aspecty);","pixel_eqs_eel":"c = 42; // impacts the \\"sharpness\\" of the sigmoid filter function\\ns = 0.5; // strength of the rotation\\nd = q3*0.6; // radius of the sigmoid filter function\\n\\n//\\ncx1 = 0.5 + (q4-0.5)*q15;\\ncy1 = 0.5 - (q5-0.5)*q15;\\nd1 = sqrt( sqr(x-cx1) + sqr(y-cy1));\\ns1 = sigmoid(d-d1,c)*s;\\nrx1 = -q6*sin(y-cy1)*s1;\\nry1 = q6*sin(x-cx1)*s1;\\n\\ncx2 = 0.5 + (q7-0.5)*q15;\\ncy2 = 0.5 - (q8-0.5)*q15;\\nd2 = sqrt( sqr(x-cx2) + sqr(y-cy2));\\ns2 = sigmoid(d-d2,c)*s;\\nrx2 = -q9*sin(y-cy2)*s2;\\nry2 = q9*sin(x-cx2)*s2;\\n\\ncx3 = 0.5 + (q10-0.5)*q15;\\ncy3 = 0.5 - (q11-0.5)*q15;\\nd3 = sqrt( sqr(x-cx3) + sqr(y-cy3));\\ns3 = sigmoid(0.12-d3,c)*s;\\nrx3 = -q12*sin(y-cy3)*s3;\\nry3 = q12*sin(x-cx3)*s3;\\n\\n\\n\\ndx = rx1 + rx2 + rx3;\\ndy = ry1 + ry2 + ry3;","warp":" shader_body { \\n  vec2 my_uv_1;\\n  vec3 ret_2;\\n  vec3 tmpvar_3;\\n  tmpvar_3 = ((640.0 * texsize.z) * ((2.0 * \\n    ((texture (sampler_blur2, (uv + vec2(0.01, 0.0))).xyz * scale2) + bias2)\\n  ) - (2.0 * \\n    ((texture (sampler_blur2, (uv - vec2(0.01, 0.0))).xyz * scale2) + bias2)\\n  )));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = ((512.0 * texsize.w) * ((2.0 * \\n    ((texture (sampler_blur2, (uv + vec2(0.0, 0.01))).xyz * scale2) + bias2)\\n  ) - (2.0 * \\n    ((texture (sampler_blur2, (uv - vec2(0.0, 0.01))).xyz * scale2) + bias2)\\n  )));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = tmpvar_3.y;\\n  tmpvar_5.y = tmpvar_4.y;\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = tmpvar_3.x;\\n  tmpvar_6.y = tmpvar_4.x;\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = tmpvar_4.y;\\n  tmpvar_7.y = -(tmpvar_3.y);\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (uv - ((\\n    ((tmpvar_5 * 0.3) + (tmpvar_6 * 0.1))\\n   + \\n    (tmpvar_7 * 0.01)\\n  ) * 0.01));\\n  ret_2.x = texture (sampler_fw_main, (tmpvar_8 - floor(tmpvar_8))).x;\\n  ret_2.x = (ret_2.x + ((\\n    (2.0 * ret_2.x)\\n   - \\n    (2.0 * ((texture (sampler_blur1, tmpvar_8).xyz * scale1) + bias1).x)\\n  ) * 0.25));\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = tmpvar_3.y;\\n  tmpvar_9.y = tmpvar_4.y;\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = tmpvar_4.x;\\n  tmpvar_10.y = -(tmpvar_3.y);\\n  my_uv_1 = ((uv - (tmpvar_9 * 0.01)) + (tmpvar_10 * 0.001));\\n  ret_2.y = texture (sampler_fw_main, (my_uv_1 - floor(my_uv_1))).y;\\n  ret_2.y = (ret_2.y + ((\\n    ((2.0 * ret_2.y) - (2.0 * ((texture (sampler_blur3, my_uv_1).xyz * scale3) + bias3).y))\\n   * 0.025) + 0.01));\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 1.0;\\n  tmpvar_11.xyz = ret_2;\\n  ret = tmpvar_11.xyz;\\n }","comp":"vec2 xlat_mutabled;\\nvec3 xlat_mutabledx;\\nvec3 xlat_mutabledy;\\n shader_body { \\n  vec3 ret_1;\\n  xlat_mutabled = (texsize.zw * 1.5);\\n  xlat_mutabledx = (texture (sampler_main, (uv_orig + (vec2(1.0, 0.0) * xlat_mutabled))).xyz - texture (sampler_main, (uv_orig - (vec2(1.0, 0.0) * xlat_mutabled))).xyz);\\n  xlat_mutabledy = (texture (sampler_main, (uv_orig + (vec2(0.0, 1.0) * xlat_mutabled))).xyz - texture (sampler_main, (uv_orig - (vec2(0.0, 1.0) * xlat_mutabled))).xyz);\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = xlat_mutabledx.y;\\n  tmpvar_2.y = xlat_mutabledy.y;\\n  vec2 x_3;\\n  x_3 = (tmpvar_2 * 8.0);\\n  ret_1 = (((texture (sampler_main, uv).x * \\n    (1.0 - sqrt(dot (x_3, x_3)))\\n  ) * pow (hue_shader, vec3(6.0, 6.0, 6.0))) * 1.4);\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = xlat_mutabledx.z;\\n  tmpvar_4.y = xlat_mutabledy.z;\\n  vec2 x_5;\\n  x_5 = (tmpvar_4 * 4.0);\\n  vec3 tmpvar_6;\\n  tmpvar_6 = mix (ret_1, vec3(1.0, 1.0, 1.0), vec3(sqrt(dot (x_5, x_5))));\\n  ret_1 = tmpvar_6;\\n  vec4 tmpvar_7;\\n  tmpvar_7.w = 1.0;\\n  tmpvar_7.xyz = tmpvar_6;\\n  ret = tmpvar_7.xyz;\\n }"}')},4419:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.995,"echo_zoom":1.007,"echo_orient":3,"wave_thick":1,"modwavealphabyvolume":1,"wave_a":0.9,"wave_scale":2.997,"wave_smoothing":0,"wave_mystery":-0.5,"modwavealphastart":1,"modwavealphaend":1,"warpanimspeed":0.274,"warpscale":7.98,"zoom":0.99951,"warp":0.20929,"wave_r":0.02,"wave_g":0.02,"wave_b":0,"ob_size":0.5,"ob_r":1,"ob_g":0.12,"ob_b":1,"ob_a":0.37,"ib_size":0,"ib_a":1,"mv_x":0,"mv_y":0,"mv_l":5,"mv_a":0,"b1ed":0.2},"shapes":[{"baseVals":{"sides":99,"textured":1,"x":1,"y":0.63,"rad":1.3,"tex_zoom":0.763,"g":1,"b":1,"a":0.97,"r2":1,"b2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"textured":1,"y":0.55,"rad":0.225,"g":1,"b":1,"a":0.97,"r2":1,"b2":1,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"textured":1,"x":0.85,"y":0,"rad":1.3,"tex_zoom":2.068,"g":1,"b":1,"a":0.97,"r2":1,"b2":1,"a2":0.97,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":3,"textured":1,"x":0.02,"rad":0.733,"ang":1.319,"tex_zoom":100,"g":1,"b":1,"a":0.97,"r2":1,"b2":1,"a2":0.97,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"sep":60,"scaling":0.08,"smoothing":0.4,"r":0,"g":0,"b":0,"a":0.97,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"sep":20,"scaling":0.07,"smoothing":0.65,"r":0.3,"g":0.3,"b":0.3,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"sep":30,"scaling":0.07,"r":0.3,"g":0.3,"b":0.3,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"sep":60,"r":0,"g":0,"b":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"x1 = 0;\\ny1= .001;\\nz1 = 0;","frame_eqs_eel":"zoom = 1;\\nwave_a = 0;\\n\\nstartx = 0.3;\\nstarty = 0.3;\\n\\na = 0.55;\\nb = 0.05;\\nd = 0.09;\\n\\nq1 = aspectx;\\nq2 = aspecty;\\nq5 = a;\\nq6 = b;\\nq7 = d;\\n\\n\\n// coloring borders\\nbb = bb*0.99 + bass*0.02;\\nmm = mm*0.99 + mid*0.02;\\ntt = tt*0.99 + treb*0.02;\\n\\nmx = max(max(bb,mm),tt);\\nmn = min(min(bb,mm),tt);\\n\\nh1 = (bb-mn)/(mx-mn);\\nh2 = (mm-mn)/(mx-mn);\\nh3 = (tt-mn)/(mx-mn);\\n\\nv = 0.1333/fps;\\nbm = bm + (h1-h2)*v;\\nmt = mt + (h2-h3)*v;\\nbt = bt + (h1-h3)*v;\\n\\nw = bm*2;\\nq3 = sin(w);\\nq4 = cos(w);\\n\\n\\nq10 = bm;\\nq11 = mt;\\nq12 = bt;","pixel_eqs_eel":"x = 0.5 + (x-0.51)*q1;\\ny = 0.5 - (y-0.5)*q2;\\ndx = (x*(1-x)-q5*x*y/(x+q6));\\ndy = -q7*y*(1-y/x);\\n\\ndx = -dx*0.02/q1;\\ndy = -dy*0.02/q2;","warp":" shader_body { \\n  vec2 my_uv2_1;\\n  vec2 dz_2;\\n  vec3 ret_3;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (texsize.zw * 4.0);\\n  vec3 tmpvar_5;\\n  tmpvar_5 = ((2.0 * (\\n    (texture (sampler_blur1, (uv + (vec2(1.0, 0.0) * tmpvar_4))).xyz * scale1)\\n   + bias1)) - (2.0 * (\\n    (texture (sampler_blur1, (uv - (vec2(1.0, 0.0) * tmpvar_4))).xyz * scale1)\\n   + bias1)));\\n  vec3 tmpvar_6;\\n  tmpvar_6 = ((2.0 * (\\n    (texture (sampler_blur1, (uv + (vec2(0.0, 1.0) * tmpvar_4))).xyz * scale1)\\n   + bias1)) - (2.0 * (\\n    (texture (sampler_blur1, (uv - (vec2(0.0, 1.0) * tmpvar_4))).xyz * scale1)\\n   + bias1)));\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = tmpvar_5.x;\\n  tmpvar_7.y = tmpvar_6.x;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (tmpvar_7 * texsize.zw);\\n  ret_3.x = (texture (sampler_fw_main, (uv - tmpvar_8)).x - ((\\n    (texture (sampler_blur3, uv).xyz * scale3)\\n   + bias3).x - (\\n    (texture (sampler_blur1, (uv + tmpvar_8)).xyz * scale1)\\n   + bias1).x));\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = tmpvar_5.y;\\n  tmpvar_9.y = tmpvar_6.y;\\n  dz_2 = (-(tmpvar_9) * texsize.zw);\\n  ret_3.y = ((texture (sampler_fw_main, (uv - dz_2)).y - 0.06) - ((\\n    ((texture (sampler_blur2, uv).xyz * scale2) + bias2)\\n  .y - \\n    ((texture (sampler_blur1, (uv + dz_2)).xyz * scale1) + bias1)\\n  .y) * 1.3));\\n  vec2 tmpvar_10;\\n  tmpvar_10 = ((uv_orig - 0.5) * (1.8 - (\\n    (bass_att - treb_att)\\n   * 0.015)));\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = ((tmpvar_10.x * tmpvar_10.x) - (tmpvar_10.y * tmpvar_10.y));\\n  tmpvar_11.y = ((2.0 * tmpvar_10.x) * tmpvar_10.y);\\n  my_uv2_1 = (tmpvar_11 + vec2(0.28, 0.4));\\n  vec2 tmpvar_12;\\n  tmpvar_12.x = ((2.0 * (\\n    (texture (sampler_blur1, (my_uv2_1 + (vec2(1.0, 0.0) * tmpvar_4))).xyz * scale1)\\n   + bias1)) - (2.0 * (\\n    (texture (sampler_blur1, (my_uv2_1 - (vec2(1.0, 0.0) * tmpvar_4))).xyz * scale1)\\n   + bias1))).z;\\n  tmpvar_12.y = ((2.0 * (\\n    (texture (sampler_blur1, (my_uv2_1 + (vec2(0.0, 1.0) * tmpvar_4))).xyz * scale1)\\n   + bias1)) - (2.0 * (\\n    (texture (sampler_blur1, (my_uv2_1 - (vec2(0.0, 1.0) * tmpvar_4))).xyz * scale1)\\n   + bias1))).z;\\n  dz_2 = (tmpvar_12 * texsize.zw);\\n  ret_3.z = (texture (sampler_main, clamp ((my_uv2_1 + dz_2), 0.0, 1.0)).z - 0.014);\\n  vec4 tmpvar_13;\\n  tmpvar_13.w = 1.0;\\n  tmpvar_13.xyz = ret_3;\\n  ret = tmpvar_13.xyz;\\n }","comp":" shader_body { \\n  vec3 dy_1;\\n  vec3 dx_2;\\n  vec2 mirror_uv_3;\\n  vec3 ret_4;\\n  vec2 tmpvar_5;\\n  tmpvar_5 = ((uv - 0.5) * aspect.xy);\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = ((q4 * tmpvar_5.x) - (q3 * tmpvar_5.y));\\n  tmpvar_6.y = ((q3 * tmpvar_5.x) + (q4 * tmpvar_5.y));\\n  vec2 tmpvar_7;\\n  tmpvar_7 = (0.5 - (tmpvar_6 * 2.0));\\n  vec2 numerator_8;\\n  numerator_8 = (tmpvar_7 - vec2(0.0, 0.5));\\n  vec2 denominator_9;\\n  denominator_9 = (tmpvar_7 - vec2(1.0, 0.5));\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = ((numerator_8.x * denominator_9.x) + (numerator_8.y * denominator_9.y));\\n  tmpvar_10.y = ((numerator_8.y * denominator_9.x) - (numerator_8.x * denominator_9.y));\\n  vec2 tmpvar_11;\\n  tmpvar_11 = (((tmpvar_10 / \\n    ((denominator_9.x * denominator_9.x) + (denominator_9.y * denominator_9.y))\\n  ) + 0.5) - vec2(0.5, 0.5));\\n  float tmpvar_12;\\n  tmpvar_12 = sqrt(dot (tmpvar_11, tmpvar_11));\\n  float tmpvar_13;\\n  float tmpvar_14;\\n  tmpvar_14 = (min (abs(\\n    (tmpvar_11.x / tmpvar_11.y)\\n  ), 1.0) / max (abs(\\n    (tmpvar_11.x / tmpvar_11.y)\\n  ), 1.0));\\n  float tmpvar_15;\\n  tmpvar_15 = (tmpvar_14 * tmpvar_14);\\n  tmpvar_15 = (((\\n    ((((\\n      ((((-0.01213232 * tmpvar_15) + 0.05368138) * tmpvar_15) - 0.1173503)\\n     * tmpvar_15) + 0.1938925) * tmpvar_15) - 0.3326756)\\n   * tmpvar_15) + 0.9999793) * tmpvar_14);\\n  tmpvar_15 = (tmpvar_15 + (float(\\n    (abs((tmpvar_11.x / tmpvar_11.y)) > 1.0)\\n  ) * (\\n    (tmpvar_15 * -2.0)\\n   + 1.570796)));\\n  tmpvar_13 = (tmpvar_15 * sign((tmpvar_11.x / tmpvar_11.y)));\\n  if ((abs(tmpvar_11.y) > (1e-08 * abs(tmpvar_11.x)))) {\\n    if ((tmpvar_11.y < 0.0)) {\\n      if ((tmpvar_11.x >= 0.0)) {\\n        tmpvar_13 += 3.141593;\\n      } else {\\n        tmpvar_13 = (tmpvar_13 - 3.141593);\\n      };\\n    };\\n  } else {\\n    tmpvar_13 = (sign(tmpvar_11.x) * 1.570796);\\n  };\\n  vec2 tmpvar_16;\\n  tmpvar_16.x = (tmpvar_13 * 0.1591549);\\n  tmpvar_16.y = tmpvar_12;\\n  vec2 tmpvar_17;\\n  tmpvar_17.x = ((tmpvar_16.x * 2.0) + q11);\\n  tmpvar_17.y = ((0.3 * log(tmpvar_12)) + q12);\\n  vec2 tmpvar_18;\\n  tmpvar_18 = (0.5 + (0.5 - abs(\\n    ((fract((tmpvar_17 * 0.5)) * 2.0) - 1.0)\\n  )));\\n  vec2 tmpvar_19;\\n  tmpvar_19 = (texsize.zw * 3.0);\\n  vec3 tmpvar_20;\\n  tmpvar_20 = ((2.0 * (\\n    (texture (sampler_blur1, (tmpvar_18 + (vec2(1.0, 0.0) * tmpvar_19))).xyz * scale1)\\n   + bias1)) - (2.0 * (\\n    (texture (sampler_blur1, (tmpvar_18 - (vec2(1.0, 0.0) * tmpvar_19))).xyz * scale1)\\n   + bias1)));\\n  vec3 tmpvar_21;\\n  tmpvar_21 = ((2.0 * (\\n    (texture (sampler_blur1, (tmpvar_18 + (vec2(0.0, 1.0) * tmpvar_19))).xyz * scale1)\\n   + bias1)) - (2.0 * (\\n    (texture (sampler_blur1, (tmpvar_18 - (vec2(0.0, 1.0) * tmpvar_19))).xyz * scale1)\\n   + bias1)));\\n  vec2 tmpvar_22;\\n  tmpvar_22.x = tmpvar_20.x;\\n  tmpvar_22.y = tmpvar_21.x;\\n  mirror_uv_3 = (tmpvar_18 + ((tmpvar_22 * texsize.zw) * 4.0));\\n  ret_4 = ((mix (ret_4, vec3(1.0, 1.0, 1.0), \\n    ((((texture (sampler_blur1, mirror_uv_3).xyz * scale1) + bias1).x * (1.0 - (\\n      (texture (sampler_blur2, mirror_uv_3).xyz * scale2)\\n     + bias2).x)) * (pow (hue_shader, vec3(4.0, 4.0, 4.0)) * 1.4))\\n  ) * texture (sampler_main, mirror_uv_3).xxx) + ((\\n    (1.0 - texture (sampler_main, mirror_uv_3).x)\\n   * \\n    ((texture (sampler_blur1, mirror_uv_3).xyz * scale1) + bias1)\\n  .x) * vec3(3.0, 3.0, 3.0)));\\n  vec2 tmpvar_23;\\n  tmpvar_23.x = tmpvar_20.x;\\n  tmpvar_23.y = tmpvar_21.x;\\n  mirror_uv_3 = (mirror_uv_3 - ((tmpvar_23 * texsize.zw) * 24.0));\\n  dx_2 = ((2.0 * (\\n    (texture (sampler_blur1, (mirror_uv_3 + (vec2(1.0, 0.0) * tmpvar_19))).xyz * scale1)\\n   + bias1)) - (2.0 * (\\n    (texture (sampler_blur1, (mirror_uv_3 - (vec2(1.0, 0.0) * tmpvar_19))).xyz * scale1)\\n   + bias1)));\\n  dy_1 = ((2.0 * (\\n    (texture (sampler_blur1, (mirror_uv_3 + (vec2(0.0, 1.0) * tmpvar_19))).xyz * scale1)\\n   + bias1)) - (2.0 * (\\n    (texture (sampler_blur1, (mirror_uv_3 - (vec2(0.0, 1.0) * tmpvar_19))).xyz * scale1)\\n   + bias1)));\\n  vec2 tmpvar_24;\\n  tmpvar_24.x = -(dx_2.y);\\n  tmpvar_24.y = dy_1.y;\\n  vec2 tmpvar_25;\\n  tmpvar_25 = (tmpvar_24 * 0.25);\\n  vec3 tmpvar_26;\\n  tmpvar_26 = mix (ret_4, vec3(1.0, 1.0, 1.0), (mix (vec3(1.0, 0.7, 0.2), vec3(0.15, 0.0, 0.5), vec3(\\n    ((((\\n      ((mirror_uv_3.x * 0.8) - mirror_uv_3.y)\\n     + 0.75) + tmpvar_25.x) + tmpvar_25.y) - 0.1)\\n  )) * texture (sampler_main, mirror_uv_3).y));\\n  vec2 tmpvar_27;\\n  vec2 tmpvar_28;\\n  tmpvar_28 = ((0.5 + (\\n    (uv - 0.5)\\n   * aspect.wz)) - vec2(0.5, 0.5));\\n  vec2 tmpvar_29;\\n  tmpvar_29.x = ((q4 * tmpvar_28.x) - (q3 * tmpvar_28.y));\\n  tmpvar_29.y = ((q3 * tmpvar_28.x) + (q4 * tmpvar_28.y));\\n  tmpvar_27 = (vec2(0.5, 0.5) + tmpvar_29);\\n  mirror_uv_3 = tmpvar_27.yx;\\n  vec2 tmpvar_30;\\n  tmpvar_30 = (vec2(1.0, 0.0) * texsize.zw);\\n  dx_2 = ((2.0 * texture (sampler_main, (tmpvar_27.yx + tmpvar_30)).xyz) - (2.0 * texture (sampler_main, (tmpvar_27.yx - tmpvar_30)).xyz));\\n  vec2 tmpvar_31;\\n  tmpvar_31 = (vec2(0.0, 1.0) * texsize.zw);\\n  dy_1 = ((2.0 * texture (sampler_main, (tmpvar_27.yx + tmpvar_31)).xyz) - (2.0 * texture (sampler_main, (tmpvar_27.yx - tmpvar_31)).xyz));\\n  vec2 tmpvar_32;\\n  tmpvar_32.x = dx_2.z;\\n  tmpvar_32.y = dy_1.z;\\n  vec3 tmpvar_33;\\n  tmpvar_33 = mix (tmpvar_26, vec3(0.9, 0.9, 1.0), vec3((1.0 - texture (sampler_main, (tmpvar_27.yx - tmpvar_32)).z)));\\n  ret_4 = tmpvar_33;\\n  vec4 tmpvar_34;\\n  tmpvar_34.w = 1.0;\\n  tmpvar_34.xyz = tmpvar_33;\\n  ret = tmpvar_34.xyz;\\n }"}')},3057:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.9,"echo_zoom":1.169,"echo_orient":1,"wave_mode":5,"additivewave":1,"wave_a":0,"wave_scale":0.9,"wave_smoothing":0.63,"wave_mystery":1,"modwavealphastart":2,"modwavealphaend":2,"warpscale":2.853,"rot":0.006,"warp":0,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.005,"mv_x":0,"mv_y":48,"mv_dx":-0.941,"mv_dy":0.426,"mv_l":5,"mv_r":0.316,"mv_g":0.078,"mv_b":0.942,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"c_x = 0.5;\\nc_y = 0.5;","frame_eqs_eel":"q1 = aspectx;\\nq2 = aspecty;\\nrot = 0;\\nzoom = 1;\\nwarp = 0;\\n\\nvol = bass*8 + mid*5 + treb*3;\\nm = m*0.96 + vol*0.06;\\nmonitor = vol-m;\\nbeat = above(vol,res)*above(vol,m)*above(vol,10);\\ndiff = (1-beat)*diff + beat*(vol-res);\\nres = beat*(vol + m*0.15) + (1-beat)*(res -  (0.15+diff*0.03)*60/fps);\\nres = max(0,res);\\n\\nr = if(beat, 0.02*(rand(200)-100)*0.01,r);\\nrot = r;\\n\\nc_x = if(beat,0.5 + 0.5*(rand(200)-100)*0.01, c_x);\\nc_y = if(beat,0.5 + 0.5*(rand(200)-100)*0.01, c_y);\\nv = if(beat,0.035 + 0.025*(rand(200)-100)*0.01, v);\\n\\nw = w + (0.07-v)*90;\\n\\nq3 = c_x;\\nq4 = c_y;\\nq5 = v;\\nq6 = beat;\\nq7 = w;","pixel_eqs_eel":"d = (pow(sqrt(sqr(x-q3)+sqr(y-q4)),0.5)-0);\\nv = q5;\\ndx = v*(x-q3)*d;\\ndy = v*(y-q4)*d;","warp":" shader_body { \\n  vec3 ret_1;\\n  vec3 tmpvar_2;\\n  tmpvar_2 = (texture (sampler_noise_lq, ((\\n    (uv_orig * texsize.xy)\\n   * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5);\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (texsize.zw * 4.0);\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_6;\\n  tmpvar_6 = mix (uv_orig, uv, vec2(0.35, 0.35));\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = tmpvar_4.y;\\n  tmpvar_7.y = tmpvar_5.y;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (tmpvar_6 - ((tmpvar_7 * texsize.zw) * 4.0));\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = tmpvar_4.z;\\n  tmpvar_9.y = tmpvar_5.z;\\n  vec2 tmpvar_10;\\n  tmpvar_10 = (tmpvar_6 - ((tmpvar_9 * texsize.zw) * 4.0));\\n  vec4 tmpvar_11;\\n  tmpvar_11 = texture (sampler_blur1, uv);\\n  vec4 tmpvar_12;\\n  tmpvar_12 = texture (sampler_main, uv_orig);\\n  ret_1.y = (((\\n    (texture (sampler_main, tmpvar_8).y - (((\\n      (tmpvar_11.xyz * scale1)\\n     + bias1).y - texture (sampler_main, tmpvar_8).y) * 0.024))\\n   - 0.009) + (\\n    (1.0 - tmpvar_12.x)\\n   * 0.014)) + (tmpvar_2 * 0.02)).x;\\n  ret_1.z = (((\\n    (texture (sampler_main, tmpvar_10).z - (((\\n      (tmpvar_11.xyz * scale1)\\n     + bias1).z - texture (sampler_main, tmpvar_10).z) * 0.024))\\n   - 0.009) + (tmpvar_12.x * 0.014)) + (tmpvar_2 * 0.02)).x;\\n  ret_1.x = texture (sampler_fc_main, (uv + ((tmpvar_2.xy * texsize.zw) * 0.5))).x;\\n  ret_1.x = (ret_1.x + ((\\n    (ret_1.x - ((texture (sampler_blur3, uv).xyz * scale3) + bias3).x)\\n   * 0.4) + (tmpvar_2 * 0.004)).x);\\n  vec4 tmpvar_13;\\n  tmpvar_13.w = 1.0;\\n  tmpvar_13.xyz = ret_1;\\n  ret = tmpvar_13.xyz;\\n }","comp":"vec2 xlat_mutabled;\\n shader_body { \\n  float fnord_1;\\n  xlat_mutabled = (texsize.zw * 4.0);\\n  float tmpvar_2;\\n  vec4 tmpvar_3;\\n  tmpvar_3 = texture (sampler_main, uv);\\n  tmpvar_2 = (tmpvar_3.x * (1.0 - tmpvar_3.z));\\n  float tmpvar_4;\\n  tmpvar_4 = ((1.0 - tmpvar_3.y) * (1.0 - tmpvar_3.x));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = (((texture (sampler_blur1, \\n    (uv_orig + (vec2(1.0, 0.0) * xlat_mutabled))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv_orig - (vec2(1.0, 0.0) * xlat_mutabled))\\n  ).xyz * scale1) + bias1)).x;\\n  tmpvar_5.y = (((texture (sampler_blur1, \\n    (uv_orig + (vec2(0.0, 1.0) * xlat_mutabled))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv_orig - (vec2(0.0, 1.0) * xlat_mutabled))\\n  ).xyz * scale1) + bias1)).x;\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (((uv - 0.5) + (tmpvar_5 * 0.15)) * texsize.xy);\\n  float tmpvar_7;\\n  tmpvar_7 = clamp (((float(mod (\\n    ((abs(tmpvar_6.x) + abs(tmpvar_6.y)) + q7)\\n  , 64.0))) - 32.0), 0.0, 1.0);\\n  float tmpvar_8;\\n  tmpvar_8 = clamp (((float(mod (\\n    ((-(abs(tmpvar_6.x)) - abs(tmpvar_6.y)) + q7)\\n  , 64.0))) - 32.0), 0.0, 1.0);\\n  float tmpvar_9;\\n  tmpvar_9 = sqrt(dot (tmpvar_6, tmpvar_6));\\n  if ((tmpvar_9 > (0.25 * texsize.y))) {\\n    fnord_1 = tmpvar_8;\\n  } else {\\n    fnord_1 = tmpvar_7;\\n  };\\n  vec4 tmpvar_10;\\n  tmpvar_10.w = 1.0;\\n  tmpvar_10.xyz = (mix (vec3(fnord_1), vec3(1.0, 0.0, 0.0), vec3(tmpvar_2)) * (vec3(1.0, 1.0, 1.0) - vec3(tmpvar_4)));\\n  ret = tmpvar_10.xyz;\\n }"}')},425:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"wave_mode":2,"additivewave":1,"modwavealphabyvolume":1,"wave_a":0.009,"wave_scale":2.713,"wave_smoothing":0,"modwavealphastart":1.2,"modwavealphaend":1.2,"warpscale":1.331,"zoom":0.99951,"warp":0.00909,"wave_r":0.44,"wave_g":0.4,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":12,"additive":1,"num_inst":2,"x":0.49,"rad":0.09902,"tex_zoom":4.36077,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = rand(1000)/1000;\\ny = rand(1000)/1000;\\nang = rand(150)/100;"},{"baseVals":{"sides":5,"textured":1,"rad":0.986,"tex_ang":3.14159,"tex_zoom":0.99979,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ang =sin(time/65) ;// ang + (bass*.2) + (time*.4);"},{"baseVals":{"sides":100,"textured":1,"x":0.9,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = sin(time) * .4 + .5;\\n\\n\\npow( (bass*.15),2);"},{"baseVals":{"enabled":1,"sides":36,"additive":1,"rad":0.81623,"r":0,"g":0.04,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = 1-q1;\\ny = q2;\\nx = 0.5 + (x - 0.5)*0.25;\\ny = 0.5 + (y - 0.5)*0.25;"}],"waves":[{"baseVals":{"thick":1,"additive":1,"r":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"q1 = below(rand(100),4 + 10*(treb+mid+bass));","point_eqs_eel":"it = (it + 1)*above(sample,0)*below(it,53);\\nita = (ita + equal(it,0))*above(sample,0);\\n\\nsw = 1-equal(it,0)*equal(ita,0);\\nswi = (equal(lr,9) + equal(lr,5))*equal(it,0)*equal(ita,4);\\nxv = if(sw - swi,xv,rand(1001)*.001*.8);\\nmx = xv + ita*.025;\\nmy = if(sw - swi,my,rand(1001)*.001*.975);\\n\\nsz = .01;\\nvx = above(it,1)*below(it,39) + above(it,12)*below(it,28) - equal(it,20) + equal(it,46) + equal(it,51) + equal(it,41) - equal(it,15) - equal(it,25) + equal(it,10) + equal(it,30) - equal(it,4) - equal(it,36);\\nvy = above(it,17)*below(it,49) + above(it,22)*below(it,44) - equal(it,33) + equal(it,7) + equal(it,51) + equal(it,15) - equal(it,41) - equal(it,25) + equal(it,4) + equal(it,10) - equal(it,36) - equal(it,30);\\n\\nsa = equal(ita,0)*13 + equal(ita,1)*9 + equal(ita,2)*12 + equal(ita,3)*11 + equal(ita,4)*4 + equal(ita,5)*18 + equal(ita,6)*15 + equal(ita,7)*16;\\nsb = equal(ita,0)*11 + equal(ita,1)*9 + equal(ita,2)*12 + equal(ita,3)*12;\\nsc = equal(ita,0)*4 + equal(ita,1)*15 + equal(ita,3)*4 + equal(ita,4)*18 + equal(ita,5)*21 + equal(ita,6)*7 + equal(ita,7)*19;\\nsd = equal(ita,0)*12 + equal(ita,1)*15 + equal(ita,2)*22 + equal(ita,3)*5;\\nse = equal(ita,0)*8 + equal(ita,1)*1 + equal(ita,2)*20 + equal(ita,3)*5;\\nsf = equal(ita,0)*6 + equal(ita,1)*5 + equal(ita,2)*1 + equal(ita,3)*18 + equal(ita,5)*10 + equal(ita,6)*15 + equal(ita,7)*25;\\nsg = equal(ita,0)*1 + equal(ita,1)*14 + equal(ita,2)*7 + equal(ita,3)*5 + equal(ita,4)*18;\\nsh = equal(ita,0)*19 + equal(ita,1)*21 + equal(ita,2)*18 + equal(ita,3)*16 + equal(ita,4)*18 + equal(ita,5)*9 + equal(ita,6)*19 + equal(ita,7)*5;\\nsi = equal(ita,0)*8 + equal(ita,1)*1 + equal(ita,2)*16 + equal(ita,3)*16 + equal(ita,4)*25;\\nsj = equal(ita,0)*25 + equal(ita,1)*5 + equal(ita,2)*19 + equal(ita,6)*14 + equal(ita,7)*15;\\n\\nlr = if(sw,lr,rand(10));\\nlet = equal(lr,0)*sa + equal(lr,1)*sb + equal(lr,2)*sc + equal(lr,3)*sd + equal(lr,4)*se + equal(lr,5)*sf + equal(lr,6)*sg + equal(lr,7)*sh + equal(lr,8)*si + equal(lr,9)*sj;\\n\\nva = equal(let,23) + equal(let,24) + equal(let,26);\\nvb = above(let,0)*below(let,9) + above(let,10)*below(let,19) + equal(let,21) + equal(let,23);\\nvc = equal(let,1) + equal(let,2) + equal(let,5) + equal(let,6) + equal(let,8) + equal(let,11) + equal(let,16) + equal(let,18) + equal(let,19);\\nvd = above(let,1)*below(let,9) + above(let,10)*below(let,24) - equal(let,20);\\nve = equal(let,13) + equal(let,14) + equal(let,24) + equal(let,25);\\nvf = above(let,1)*below(let,8) + equal(let,9) + above(let,14)*below(let,21) + equal(let,26);\\nvg = equal(let,1);\\nvh = equal(let,9) + equal(let,20);\\nvi = above(let,0)*below(let,5) - equal(let,3) + equal(let,18);\\nvj = above(let,2)*below(let,8) - equal(let,4) + equal(let,9) + above(let,14)*below(let,21) - equal(let,18) + equal(let,26);\\nvk = equal(let,11) + equal(let,13) + above(let,23)*below(let,27);\\nvl = equal(let,8) + equal(let,10) + above(let,12)*below(let,18) + above(let,20)*below(let,24);\\nvm = equal(let,1) + equal(let,2) + equal(let,8) + equal(let,16) + equal(let,18) + equal(let,19);\\nvn = equal(let,1) + equal(let,7) + equal(let,8) + equal(let,10) + above(let,12)*below(let,24) - equal(let,16) - equal(let,18) - equal(let,20) - equal(let,22);\\nvo = equal(let,11) + equal(let,14) + equal(let,17) + equal(let,18) + equal(let,23) + equal(let,24);\\nvp = equal(let,3) + equal(let,5) + equal(let,7) + equal(let,9) + equal(let,10) + equal(let,12) + equal(let,15) + equal(let,17) + equal(let,19) + equal(let,21) + equal(let,26);\\nvq = equal(let,2) + equal(let,4) + equal(let,22);\\nvr = equal(let,9) + equal(let,20) + equal(let,25);\\nvs = equal(let,22);\\nvt = above(let,1)*below(let,13) - equal(let,6) - equal(let,8) - equal(let,11) + equal(let,15) + equal(let,17) + equal(let,19) + equal(let,21) + equal(let,26);\\n\\na = if(above(it,51),0,if(above(it,49),va,if(above(it,47),vb,if(above(it,44),vc,if(above(it,42),vd,if(above(it,39),ve, if(above(it,37),vf,if(above(it,34),vg,if(above(it,31),vh,if(above(it,28),vi,if(above(it,26),vj,if(above(it,23),vk, if(above(it,21),vl,if(above(it,18),vm,if(above(it,16),vn,if(above(it,13),vo,if(above(it,11),vp,if(above(it,8),vq, if(above(it,5),vr,if(above(it,2),vs,if(it,vt,0)))))))))))))))))))));\\n\\na = a*below(ita,8)*q1;\\n\\nx = mx + vx*sz*.75;\\ny = my + vy*sz*1.5;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":1,"thick":1,"additive":1,"scaling":5.92556,"smoothing":0,"r":0,"g":0,"b":0.4,"a":0.34},"init_eqs_eel":"t2 = 0","frame_eqs_eel":"t1 = q13;\\nt2 = q14;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt7 = q7;\\nt8 = q8;","point_eqs_eel":"sample = 1-sample;\\nxxx = xx;\\nyyy = yy;\\nxx = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2\\n+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;\\n\\nyy = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6\\n+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;\\n\\nd = 1/sqrt(sqr(xx-xxx)+sqr(yy-yyy));\\ndd = dd*0.95 + (value1);\\nddd = dd*sample*(1-sample)*d;\\nddd = sample*(1-sample)*sin(sample*120)*d*0.1;\\nx = xx + (yy-yyy)*ddd;\\ny = yy - (xx-xxx)*ddd;\\n\\nx = 0.5 + (x-0.5)*q9;\\ny = 0.5 + (y-0.5)*q10;\\n"}],"init_eqs_eel":"","frame_eqs_eel":"vol = bass*8 + mid*5 + treb*3;\\nm = m*0.97 + vol*0.08;\\nmonitor = vol;\\nbeat = above(vol,res)*above(vol,m)*above(vol,16);\\ndiff = (1-beat)*diff + beat*(vol-res);\\nres = beat*(vol + m*0.1) + (1-beat)*(res -  (0.1+diff*0.02)*60/fps);\\nres = max(0,res);\\n\\n\\nx = if(beat,rand(60)*0.01 + 0.2,x);\\ny = if(beat,rand(60)*0.01 + 0.2,y);\\nq1 = x;\\nq2 = y;\\n\\nwave_x = q1;\\nwave_y = 1-q2;\\n\\nxx1 = xx1*0.9 + (bass)*0.01;\\nxx2 = xx2*0.9 + (treb)*0.01;\\nyy1 = yy1*0.94 + (treb+bass)*0.0075;\\n\\nx1 = 0.5 + (xx1-xx2)*2;\\ny1 = 0.4 + yy1;\\n\\nx1 = max(0,min(1,x1)); y1 = max(0,min(1,y1));\\n\\nspring = 10;\\ngrav = .5;\\nresist = 1;\\nbounce = 0.75;\\ndt = 0.001*(60/fps);\\n\\nvx2 = vx2*(1-resist*dt) + dt*((x1+x3-2*x2)*spring);\\nvy2 = vy2*(1-resist*dt) + dt*((y1+y3-2*y2)*spring-grav);\\nvx3 = vx3*(1-resist*dt) + dt*((x2+x4-2*x3)*spring);\\nvy3 = vy3*(1-resist*dt) + dt*((y2+y4-2*y3)*spring-grav);\\nvx4 = vx4*(1-resist*dt) + dt*((x3-x4)*spring);\\nvy4 = vy4*(1-resist*dt) + dt*((y3-y4)*spring-grav);\\n\\nx2 = x2 + vx2;\\ny2 = y2 + vy2;\\nx3 = x3 + vx3;\\ny3 = y3 + vy3;\\nx4 = x4 + vx4;\\ny4 = y4 + vy4;\\n\\nvx2 = if(above(x2,0),vx2,abs(vx2)*bounce);\\nvx2 = if(below(x2,1),vx2,-abs(vx2)*bounce);\\nvx3 = if(above(x3,0),vx3,abs(vx3)*bounce);\\nvx3 = if(below(x3,1),vx3,-abs(vx3)*bounce);\\nvx4 = if(above(x4,0),vx4,abs(vx4)*bounce);\\nvx4 = if(below(x4,1),vx4,-abs(vx4)*bounce);\\nvy2 = if(above(y2,0),vy2,abs(vy2)*bounce);\\nvy2 = if(below(y2,1),vy2,-abs(vy2)*bounce);\\nvy3 = if(above(y3,0),vy3,abs(vy3)*bounce);\\nvy3 = if(below(y3,1),vy3,-abs(vy3)*bounce);\\nvy4 = if(above(y4,0),vy4,abs(vy4)*bounce);\\nvy4 = if(below(y4,1),vy4,-abs(vy4)*bounce);\\n\\n\\nq13 = x1; q14 = x2; q3 = x3; q4 = x4;\\nq5 = y1; q6 = y2; q7 = y3; q8 = y4;\\nq9 =1/ aspectX;\\nq10 = 1/aspectY;\\n\\nq12 = atan2(vx4,vy4);\\nq11 = sqrt(vx4*vx4 + vy4*vy4);","pixel_eqs_eel":"cx = q1;\\ncy = q2;\\n\\nd = pow(sqrt(sqr(x-cx)+sqr(y-cy)),0.8);\\nr = 0.2;\\nv = 0.2;\\n\\ndx = (x - cx)*v*(d-r);\\ndy = (y - cy)*v*(d-r);\\n\\ndir = -q12*1 + asin(1)*1;\\n\\nb1 = 0.05; // distance\\nm1 = q11*25;//-0.6 + q5*200; // size\\nt1 = 0.05; // velocity\\n\\nxx = q4;\\nyy = 1-q8;\\n\\n\\nx1 = xx   +cos(dir+1.5708)*b1;\\ny1 = yy -sin(dir+1.5708)*b1;\\n\\nx2 = xx   -cos(dir+1.5708)*b1;\\ny2 = yy +sin(dir+1.5708)*b1;\\n\\nd1 = sqrt((x1-x)*(x1-x)+(y1-y)*(y1-y))-b1*2;\\nsi1 = 1- 1/(1+pow(2,-d1*1000));\\n\\nd2 = sqrt((x2-x)*(x2-x)+(y2-y)*(y2-y))-b1*2;\\nsi2 = 1- 1/(1+pow(2,-d2*1000));\\n\\nsi3 = -pow(q5,3)*00;\\n\\ndx += (si1*sin(y1-y)*m1*d1  - si2*sin(y2-y)*m1*d2 + si3*cos(dir)*t1)*12;\\ndy += (-si1*sin(x1-x)*m1*d1 + si2*sin(x2-x)*m1*d2 - si3*sin(dir)*t1)*12;","warp":" shader_body { \\n  vec2 my_uv_1;\\n  vec3 ret_2;\\n  vec3 tmpvar_3;\\n  tmpvar_3 = ((640.0 * texsize.z) * ((2.0 * \\n    ((texture (sampler_blur2, (uv + vec2(0.01, 0.0))).xyz * scale2) + bias2)\\n  ) - (2.0 * \\n    ((texture (sampler_blur2, (uv - vec2(0.01, 0.0))).xyz * scale2) + bias2)\\n  )));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = ((512.0 * texsize.w) * ((2.0 * \\n    ((texture (sampler_blur2, (uv + vec2(0.0, 0.01))).xyz * scale2) + bias2)\\n  ) - (2.0 * \\n    ((texture (sampler_blur2, (uv - vec2(0.0, 0.01))).xyz * scale2) + bias2)\\n  )));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = tmpvar_3.y;\\n  tmpvar_5.y = tmpvar_4.y;\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = tmpvar_3.x;\\n  tmpvar_6.y = tmpvar_4.x;\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = tmpvar_4.y;\\n  tmpvar_7.y = -(tmpvar_3.y);\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (uv - ((\\n    ((tmpvar_5 * 0.3) + (tmpvar_6 * 0.1))\\n   + \\n    (tmpvar_7 * 0.01)\\n  ) * 0.01));\\n  ret_2.x = texture (sampler_fw_main, (tmpvar_8 - floor(tmpvar_8))).x;\\n  ret_2.x = (ret_2.x + ((\\n    (2.0 * ret_2.x)\\n   - \\n    (2.0 * ((texture (sampler_blur1, tmpvar_8).xyz * scale1) + bias1).x)\\n  ) * 0.25));\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = tmpvar_3.y;\\n  tmpvar_9.y = tmpvar_4.y;\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = tmpvar_4.x;\\n  tmpvar_10.y = -(tmpvar_3.y);\\n  my_uv_1 = ((uv - (tmpvar_9 * 0.01)) + (tmpvar_10 * 0.001));\\n  ret_2.y = texture (sampler_fw_main, (my_uv_1 - floor(my_uv_1))).y;\\n  ret_2.y = (ret_2.y + ((\\n    ((2.0 * ret_2.y) - (2.0 * ((texture (sampler_blur3, my_uv_1).xyz * scale3) + bias3).y))\\n   * 0.025) + 0.01));\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 1.0;\\n  tmpvar_11.xyz = ret_2;\\n  ret = tmpvar_11.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 4.0);\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = q19;\\n  tmpvar_3.y = q20;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = q19;\\n  tmpvar_4.y = q20;\\n  vec3 tmpvar_5;\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv - 0.5);\\n  tmpvar_5 = (((2.0 * \\n    ((texture (sampler_blur1, (clamp (\\n      ((0.5 + tmpvar_6) + (tmpvar_3 * vec2(-1.0, 1.0)))\\n    , 0.0, 1.0) + (vec2(1.0, 0.0) * tmpvar_2))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (clamp (\\n      ((0.5 + tmpvar_6) + (tmpvar_4 * vec2(-1.0, 1.0)))\\n    , 0.0, 1.0) - (vec2(1.0, 0.0) * tmpvar_2))).xyz * scale1) + bias1)\\n  )) * 0.5);\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = q19;\\n  tmpvar_7.y = q20;\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = q19;\\n  tmpvar_8.y = q20;\\n  vec3 tmpvar_9;\\n  tmpvar_9 = (((2.0 * \\n    ((texture (sampler_blur1, (clamp (\\n      ((0.5 + tmpvar_6) + (tmpvar_7 * vec2(-1.0, 1.0)))\\n    , 0.0, 1.0) + (vec2(0.0, 1.0) * tmpvar_2))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (clamp (\\n      ((0.5 + tmpvar_6) + (tmpvar_8 * vec2(-1.0, 1.0)))\\n    , 0.0, 1.0) - (vec2(0.0, 1.0) * tmpvar_2))).xyz * scale1) + bias1)\\n  )) * 0.5);\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = q19;\\n  tmpvar_10.y = q20;\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = q19;\\n  tmpvar_11.y = q20;\\n  ret_1 = (1.0 - sqrt(vec3(mix (\\n    ((texture (sampler_blur2, clamp ((\\n      (0.5 + tmpvar_6)\\n     + \\n      (tmpvar_10 * vec2(-1.0, 1.0))\\n    ), 0.0, 1.0)).xyz * scale2) + bias2)\\n  .x, \\n    ((texture (sampler_blur3, clamp ((\\n      (0.5 + tmpvar_6)\\n     + \\n      (tmpvar_11 * vec2(-1.0, 1.0))\\n    ), 0.0, 1.0)).xyz * scale3) + bias3)\\n  .x, 0.6))));\\n  ret_1 = (ret_1 * mix (vec3(2.0, 1.0, 0.0), vec3(0.5, 1.0, 2.0), vec3((\\n    (uv.x + uv.y)\\n   * 0.5))));\\n  vec2 tmpvar_12;\\n  tmpvar_12.x = tmpvar_5.y;\\n  tmpvar_12.y = tmpvar_9.y;\\n  vec2 tmpvar_13;\\n  tmpvar_13.x = tmpvar_5.x;\\n  tmpvar_13.y = tmpvar_9.x;\\n  vec2 tmpvar_14;\\n  tmpvar_14.x = q19;\\n  tmpvar_14.y = q20;\\n  vec3 tmpvar_15;\\n  vec4 tmpvar_16;\\n  tmpvar_16 = texture (sampler_main, uv);\\n  tmpvar_15 = mix (mix (mix (ret_1, vec3(2.0, 1.0, 0.0), vec3(\\n    (((texture (sampler_blur2, (uv + \\n      (tmpvar_12 * 0.1)\\n    )).xyz * scale2) + bias2).y * 2.0)\\n  )), vec3((\\n    sqrt(dot (tmpvar_13, tmpvar_13))\\n   + texture (sampler_main, \\n    clamp (((0.5 + tmpvar_6) + (tmpvar_14 * vec2(-1.0, 1.0))), 0.0, 1.0)\\n  ).x)), vec3((\\n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\\n  .y * 1.2))), vec3(1.0, 1.0, 2.0), vec3((-(tmpvar_16.z) + (\\n    clamp (((tmpvar_16.y * 1.4) - 0.9), 0.0, 1.0)\\n   * 1.2))));\\n  ret_1 = tmpvar_15;\\n  vec4 tmpvar_17;\\n  tmpvar_17.w = 1.0;\\n  tmpvar_17.xyz = tmpvar_15;\\n  ret = tmpvar_17.xyz;\\n }"}')},1360:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":2,"gammaadj":1,"decay":0.995,"echo_zoom":1.007,"echo_orient":3,"wave_thick":1,"modwavealphabyvolume":1,"wave_a":0.9,"wave_scale":2.997,"wave_smoothing":0,"wave_mystery":-0.5,"modwavealphastart":1,"modwavealphaend":1,"warpanimspeed":0.274,"warpscale":7.98,"zoom":0.99951,"warp":0.20929,"wave_r":0.02,"wave_g":0.02,"wave_b":0,"ob_size":0.05,"ob_r":1,"ob_g":0.05,"ob_a":1,"ib_size":0,"ib_a":1,"mv_x":0,"mv_y":0,"mv_l":5,"mv_a":0,"b1ed":0.2},"shapes":[{"baseVals":{"sides":99,"textured":1,"x":1,"y":0.63,"rad":1.3,"tex_zoom":0.763,"g":1,"b":1,"a":0.97,"r2":1,"b2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"textured":1,"y":0.55,"rad":0.225,"g":1,"b":1,"a":0.97,"r2":1,"b2":1,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"textured":1,"x":0.85,"y":0,"rad":1.3,"tex_zoom":2.068,"g":1,"b":1,"a":0.97,"r2":1,"b2":1,"a2":0.97,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":3,"textured":1,"x":0.02,"rad":0.733,"ang":1.319,"tex_zoom":100,"g":1,"b":1,"a":0.97,"r2":1,"b2":1,"a2":0.97,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"samples":495,"sep":4,"spectrum":1,"thick":1,"additive":1,"scaling":100,"smoothing":1,"r":0,"g":0,"b":0,"a":0.99},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\nab = 1;","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt8 = .07;\\nt7 = 1;","point_eqs_eel":"t7 = -t7;\\npi = asin(1);\\nn = 180;\\nrd = 0.075;//+(value1*10+1)*((sample*512)%2)*0.02;\\nmy_x = sin(sample*pi*4+(t7+1)*t8)*0.5 + cos(sample*pi*n)*rd*sin(sample*pi*4+(t7+1)*t8);\\nmy_z = cos(sample*pi*4+(t7+1)*t8)*0.5 + cos(sample*pi*n)*rd*cos(sample*pi*4+(t7+1)*t8);\\nmy_y = sin(sample*pi*n)*rd;\\n\\n\\n\\nd = 1.4; // makes the perspective impact\\nzoom = 0.55;\\n\\nw3 = -q8;\\nw2 = q9;\\nw1 = q10;\\n\\nx1 = cos(w1)*my_x + sin(w1)*my_y;\\ny1 = -sin(w1)*my_x + cos(w1)*my_y;\\nz1 = my_z;\\n\\nx2 = cos(w2)*x1 + sin(w2)*z1;\\nz2 = -sin(w2)*x1 + cos(w2)*z1;\\ny2 = y1;\\n\\ny3 = cos(w3)*y2 + sin(w3)*z2;\\nz3 = -sin(w3)*y2 + cos(w3)*z2;\\nx3 = x2;\\n\\n// perspective calculation\\n\\nl = sqrt(x3*x3 + y3*y3);\\nw = atan2(x3,y3);\\np = tan(asin(1) + atan2(d+z3,l));\\nd = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));\\n\\nmy_x = zoom*sin(w)*p;\\nmy_y = zoom*cos(w)*p;\\n\\nx = 0.5 + my_x;\\ny = 0.5 + my_y;\\n\\nb = -z3 + 0.5;\\nb = min(1,max(0,b))*0.5;"},{"baseVals":{"sep":20,"scaling":0.07,"smoothing":0.65,"r":0,"g":0.3,"b":0.3,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"sep":30,"scaling":0.07,"r":0.3,"g":0.3,"b":0.3,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"sep":60,"r":0,"g":0,"b":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"q21 = 1/asin(1);","frame_eqs_eel":"zoom = 1;\\nwave_a = 0;\\n\\nq1 = 0.25/asin(1);\\n\\n\\nv = 0.4;\\nj1 = j1*0.95 + sqr(bass*4)*v;\\nj2 = j2*0.95 + sqr(mid*4)*v;\\nj3 = j3*0.95 + sqr(treb*4)*v;\\n\\nn = n + j1*0.0052;\\nn1 = n1 + j2*0.0052;\\nn2 = n2 + j3*0.0052;\\n\\n//n = time*100;\\n//n1 = time*100;\\n//n2 = time*100;\\n\\nangle1 = n*0.01;\\nangle2 = n1*0.01;\\nangle3 = n2*0.01;\\n\\n\\nq2 = cos(angle1);\\nq3 = sin(angle1);\\n\\nq4 = cos(angle2);\\nq5 = sin(angle2);\\n\\nq6 = cos(angle3);\\nq7 = sin(angle3);\\n\\n\\nq8 = angle1;\\nq9 = angle2;\\nq10 = angle3;","pixel_eqs_eel":"x = 0.5 + (x-0.51)*q1;\\ny = 0.5 - (y-0.5)*q2;\\ndx = (x*(1-x)-q5*x*y/(x+q6));\\ndy = -q7*y*(1-y/x);\\n\\ndx = -dx*0.02/q1;\\ndy = -dy*0.02/q2;","warp":" shader_body { \\n  vec2 d_1;\\n  vec3 ret_2;\\n  vec3 tmpvar_3;\\n  tmpvar_3 = vec3((texture (sampler_noise_lq, ((\\n    (uv * texsize.xy)\\n   * texsize_noise_lq.zw) + rand_frame.xy)).y - 0.5));\\n  float cosw_4;\\n  cosw_4 = -(q6);\\n  vec2 tmpvar_5;\\n  tmpvar_5 = ((uv_orig - 0.5) * aspect.xy);\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = ((cosw_4 * tmpvar_5.x) - (q7 * tmpvar_5.y));\\n  tmpvar_6.y = ((q7 * tmpvar_5.x) + (cosw_4 * tmpvar_5.y));\\n  vec2 tmpvar_7;\\n  tmpvar_7 = ((0.5 - (tmpvar_6 * 2.0)) + ((tmpvar_3.xy * texsize.zw) * 4.0));\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = (q9 * 0.5);\\n  tmpvar_8.y = (q8 * 0.5);\\n  vec2 numerator_9;\\n  numerator_9 = (tmpvar_7 - vec2(0.0, 0.5));\\n  vec2 denominator_10;\\n  denominator_10 = (tmpvar_7 - vec2(1.0, 0.5));\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = ((numerator_9.x * denominator_10.x) + (numerator_9.y * denominator_10.y));\\n  tmpvar_11.y = ((numerator_9.y * denominator_10.x) - (numerator_9.x * denominator_10.y));\\n  vec2 tmpvar_12;\\n  tmpvar_12 = (((tmpvar_11 / \\n    ((denominator_10.x * denominator_10.x) + (denominator_10.y * denominator_10.y))\\n  ) + 0.5) - vec2(0.5, 0.5));\\n  float tmpvar_13;\\n  tmpvar_13 = sqrt(dot (tmpvar_12, tmpvar_12));\\n  float tmpvar_14;\\n  float tmpvar_15;\\n  tmpvar_15 = (min (abs(\\n    (tmpvar_12.x / tmpvar_12.y)\\n  ), 1.0) / max (abs(\\n    (tmpvar_12.x / tmpvar_12.y)\\n  ), 1.0));\\n  float tmpvar_16;\\n  tmpvar_16 = (tmpvar_15 * tmpvar_15);\\n  tmpvar_16 = (((\\n    ((((\\n      ((((-0.01213232 * tmpvar_16) + 0.05368138) * tmpvar_16) - 0.1173503)\\n     * tmpvar_16) + 0.1938925) * tmpvar_16) - 0.3326756)\\n   * tmpvar_16) + 0.9999793) * tmpvar_15);\\n  tmpvar_16 = (tmpvar_16 + (float(\\n    (abs((tmpvar_12.x / tmpvar_12.y)) > 1.0)\\n  ) * (\\n    (tmpvar_16 * -2.0)\\n   + 1.570796)));\\n  tmpvar_14 = (tmpvar_16 * sign((tmpvar_12.x / tmpvar_12.y)));\\n  if ((abs(tmpvar_12.y) > (1e-08 * abs(tmpvar_12.x)))) {\\n    if ((tmpvar_12.y < 0.0)) {\\n      if ((tmpvar_12.x >= 0.0)) {\\n        tmpvar_14 += 3.141593;\\n      } else {\\n        tmpvar_14 = (tmpvar_14 - 3.141593);\\n      };\\n    };\\n  } else {\\n    tmpvar_14 = (sign(tmpvar_12.x) * 1.570796);\\n  };\\n  vec2 tmpvar_17;\\n  tmpvar_17.x = (tmpvar_14 * 0.1591549);\\n  tmpvar_17.y = tmpvar_13;\\n  vec2 tmpvar_18;\\n  tmpvar_18.x = ((tmpvar_17.x * 2.0) + tmpvar_8.x);\\n  tmpvar_18.y = ((0.3 * log(tmpvar_13)) + tmpvar_8.y);\\n  vec2 tmpvar_19;\\n  tmpvar_19 = (0.5 + (0.5 - abs(\\n    ((fract((tmpvar_18 * 0.5)) * 2.0) - 1.0)\\n  )));\\n  ret_2.x = (((\\n    (texture (sampler_blur1, tmpvar_19).xyz * scale1)\\n   + bias1).x * 0.97) - 0.02);\\n  ret_2.z = ((texture (sampler_main, (\\n    (0.5 + ((uv_orig - 0.5) * 0.985))\\n   + \\n    ((tmpvar_3.xy * texsize.zw) * 0.5)\\n  )).z * 0.85) - 0.004);\\n  vec2 tmpvar_20;\\n  tmpvar_20 = (texsize.zw * 4.0);\\n  vec2 tmpvar_21;\\n  tmpvar_21.x = (((2.0 * \\n    ((texture (sampler_blur1, (uv_orig + (tmpvar_20 * vec2(1.0, 0.0)))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv_orig + (tmpvar_20 * vec2(-1.0, 0.0)))).xyz * scale1) + bias1)\\n  )).y * 0.5);\\n  tmpvar_21.y = (((2.0 * \\n    ((texture (sampler_blur1, (uv_orig + (tmpvar_20 * vec2(0.0, 1.0)))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv_orig + (tmpvar_20 * vec2(0.0, -1.0)))).xyz * scale1) + bias1)\\n  )).y * 0.5);\\n  d_1 = (tmpvar_21 * texsize.zw);\\n  vec2 domain_22;\\n  domain_22 = (uv_orig - (d_1 * 2.5));\\n  vec4 tmpvar_23;\\n  tmpvar_23.w = 0.0;\\n  tmpvar_23.xyz = max (vec4(0.0, 0.0, 0.0, 0.0), texture (sampler_fc_main, (domain_22 + (texsize.zw * vec2(-1.0, 0.0))))).xyz;\\n  vec4 tmpvar_24;\\n  tmpvar_24.w = 0.0;\\n  tmpvar_24.xyz = max (tmpvar_23, texture (sampler_fc_main, (domain_22 + (texsize.zw * vec2(0.0, -1.0))))).xyz;\\n  vec4 tmpvar_25;\\n  tmpvar_25.w = 0.0;\\n  tmpvar_25.xyz = max (tmpvar_24, texture (sampler_fc_main, domain_22)).xyz;\\n  vec4 tmpvar_26;\\n  tmpvar_26.w = 0.0;\\n  tmpvar_26.xyz = max (tmpvar_25, texture (sampler_fc_main, (domain_22 + (texsize.zw * vec2(0.0, 1.0))))).xyz;\\n  ret_2.y = ((max (tmpvar_26, texture (sampler_fc_main, \\n    (domain_22 + (texsize.zw * vec2(1.0, 0.0)))\\n  )).y + (\\n    (texture (sampler_main, (uv_orig + (d_1 * 4.0))).y - ((texture (sampler_blur1, (uv_orig + \\n      (d_1 * 4.0)\\n    )).xyz * scale1) + bias1).y)\\n   * 0.206)) - 0.09);\\n  ret_2.y = (ret_2.y + ((\\n    (texture (sampler_blur1, tmpvar_19).xyz * scale1)\\n   + bias1).z * 0.25));\\n  vec4 tmpvar_27;\\n  tmpvar_27.w = 1.0;\\n  tmpvar_27.xyz = ret_2;\\n  ret = tmpvar_27.xyz;\\n }","comp":" shader_body { \\n  vec2 dz_1;\\n  vec3 dy_2;\\n  vec3 dx_3;\\n  vec2 d_4;\\n  vec3 p_5;\\n  vec3 ret_6;\\n  vec2 tmpvar_7;\\n  tmpvar_7 = ((uv - 0.5) * aspect.xy);\\n  float tmpvar_8;\\n  float tmpvar_9;\\n  tmpvar_9 = (min (abs(\\n    (tmpvar_7.x / 0.08)\\n  ), 1.0) / max (abs(\\n    (tmpvar_7.x / 0.08)\\n  ), 1.0));\\n  float tmpvar_10;\\n  tmpvar_10 = (tmpvar_9 * tmpvar_9);\\n  tmpvar_10 = (((\\n    ((((\\n      ((((-0.01213232 * tmpvar_10) + 0.05368138) * tmpvar_10) - 0.1173503)\\n     * tmpvar_10) + 0.1938925) * tmpvar_10) - 0.3326756)\\n   * tmpvar_10) + 0.9999793) * tmpvar_9);\\n  tmpvar_10 = (tmpvar_10 + (float(\\n    (abs((tmpvar_7.x / 0.08)) > 1.0)\\n  ) * (\\n    (tmpvar_10 * -2.0)\\n   + 1.570796)));\\n  tmpvar_8 = (tmpvar_10 * sign((tmpvar_7.x / 0.08)));\\n  if ((0.08 <= (1e-08 * abs(tmpvar_7.x)))) {\\n    tmpvar_8 = (sign(tmpvar_7.x) * 1.570796);\\n  };\\n  float tmpvar_11;\\n  float tmpvar_12;\\n  tmpvar_12 = (min (abs(\\n    (tmpvar_7.y / 0.08)\\n  ), 1.0) / max (abs(\\n    (tmpvar_7.y / 0.08)\\n  ), 1.0));\\n  float tmpvar_13;\\n  tmpvar_13 = (tmpvar_12 * tmpvar_12);\\n  tmpvar_13 = (((\\n    ((((\\n      ((((-0.01213232 * tmpvar_13) + 0.05368138) * tmpvar_13) - 0.1173503)\\n     * tmpvar_13) + 0.1938925) * tmpvar_13) - 0.3326756)\\n   * tmpvar_13) + 0.9999793) * tmpvar_12);\\n  tmpvar_13 = (tmpvar_13 + (float(\\n    (abs((tmpvar_7.y / 0.08)) > 1.0)\\n  ) * (\\n    (tmpvar_13 * -2.0)\\n   + 1.570796)));\\n  tmpvar_11 = (tmpvar_13 * sign((tmpvar_7.y / 0.08)));\\n  if ((0.08 <= (1e-08 * abs(tmpvar_7.y)))) {\\n    tmpvar_11 = (sign(tmpvar_7.y) * 1.570796);\\n  };\\n  vec3 tmpvar_14;\\n  tmpvar_14.x = (sin(tmpvar_8) * cos(tmpvar_11));\\n  tmpvar_14.y = (sin(tmpvar_11) * cos(tmpvar_8));\\n  tmpvar_14.z = (cos(tmpvar_8) * cos(tmpvar_11));\\n  vec2 tmpvar_15;\\n  tmpvar_15.x = ((tmpvar_14.z * q2) - (tmpvar_14.y * q3));\\n  tmpvar_15.y = ((tmpvar_14.z * q3) + (tmpvar_14.y * q2));\\n  vec2 tmpvar_16;\\n  tmpvar_16.x = ((tmpvar_15.x * q4) - (tmpvar_14.x * q5));\\n  tmpvar_16.y = ((tmpvar_15.x * q5) + (tmpvar_14.x * q4));\\n  p_5.z = tmpvar_16.x;\\n  vec2 tmpvar_17;\\n  tmpvar_17.x = ((tmpvar_15.y * q6) - (tmpvar_16.y * q7));\\n  tmpvar_17.y = ((tmpvar_15.y * q7) + (tmpvar_16.y * q6));\\n  p_5.xy = tmpvar_17.yx;\\n  float tmpvar_18;\\n  float tmpvar_19;\\n  tmpvar_19 = (min (abs(\\n    (tmpvar_17.y / tmpvar_16.x)\\n  ), 1.0) / max (abs(\\n    (tmpvar_17.y / tmpvar_16.x)\\n  ), 1.0));\\n  float tmpvar_20;\\n  tmpvar_20 = (tmpvar_19 * tmpvar_19);\\n  tmpvar_20 = (((\\n    ((((\\n      ((((-0.01213232 * tmpvar_20) + 0.05368138) * tmpvar_20) - 0.1173503)\\n     * tmpvar_20) + 0.1938925) * tmpvar_20) - 0.3326756)\\n   * tmpvar_20) + 0.9999793) * tmpvar_19);\\n  tmpvar_20 = (tmpvar_20 + (float(\\n    (abs((tmpvar_17.y / tmpvar_16.x)) > 1.0)\\n  ) * (\\n    (tmpvar_20 * -2.0)\\n   + 1.570796)));\\n  tmpvar_18 = (tmpvar_20 * sign((tmpvar_17.y / tmpvar_16.x)));\\n  if ((abs(tmpvar_16.x) > (1e-08 * abs(tmpvar_17.y)))) {\\n    if ((tmpvar_16.x < 0.0)) {\\n      if ((tmpvar_17.y >= 0.0)) {\\n        tmpvar_18 += 3.141593;\\n      } else {\\n        tmpvar_18 = (tmpvar_18 - 3.141593);\\n      };\\n    };\\n  } else {\\n    tmpvar_18 = (sign(tmpvar_17.y) * 1.570796);\\n  };\\n  float tmpvar_21;\\n  tmpvar_21 = sqrt(dot (p_5.xz, p_5.xz));\\n  float tmpvar_22;\\n  float tmpvar_23;\\n  tmpvar_23 = (min (abs(\\n    (tmpvar_17.x / tmpvar_21)\\n  ), 1.0) / max (abs(\\n    (tmpvar_17.x / tmpvar_21)\\n  ), 1.0));\\n  float tmpvar_24;\\n  tmpvar_24 = (tmpvar_23 * tmpvar_23);\\n  tmpvar_24 = (((\\n    ((((\\n      ((((-0.01213232 * tmpvar_24) + 0.05368138) * tmpvar_24) - 0.1173503)\\n     * tmpvar_24) + 0.1938925) * tmpvar_24) - 0.3326756)\\n   * tmpvar_24) + 0.9999793) * tmpvar_23);\\n  tmpvar_24 = (tmpvar_24 + (float(\\n    (abs((tmpvar_17.x / tmpvar_21)) > 1.0)\\n  ) * (\\n    (tmpvar_24 * -2.0)\\n   + 1.570796)));\\n  tmpvar_22 = (tmpvar_24 * sign((tmpvar_17.x / tmpvar_21)));\\n  if ((abs(tmpvar_21) > (1e-08 * abs(tmpvar_17.x)))) {\\n    if ((tmpvar_21 < 0.0)) {\\n      if ((tmpvar_17.x >= 0.0)) {\\n        tmpvar_22 += 3.141593;\\n      } else {\\n        tmpvar_22 = (tmpvar_22 - 3.141593);\\n      };\\n    };\\n  } else {\\n    tmpvar_22 = (sign(tmpvar_17.x) * 1.570796);\\n  };\\n  vec2 tmpvar_25;\\n  tmpvar_25.x = (tmpvar_18 * q1);\\n  tmpvar_25.y = (((tmpvar_22 * q1) * 2.0) + 0.5);\\n  float cosw_26;\\n  cosw_26 = -(q6);\\n  vec2 tmpvar_27;\\n  tmpvar_27 = ((uv - 0.5) * aspect.xy);\\n  vec2 tmpvar_28;\\n  tmpvar_28.x = ((cosw_26 * tmpvar_27.x) - (q7 * tmpvar_27.y));\\n  tmpvar_28.y = ((q7 * tmpvar_27.x) + (cosw_26 * tmpvar_27.y));\\n  vec2 tmpvar_29;\\n  tmpvar_29 = (0.5 - (tmpvar_28 * 2.0));\\n  vec2 tmpvar_30;\\n  tmpvar_30.x = (q9 * 0.5);\\n  tmpvar_30.y = (q8 * 0.5);\\n  vec2 numerator_31;\\n  numerator_31 = (tmpvar_29 - vec2(0.0, 0.5));\\n  vec2 denominator_32;\\n  denominator_32 = (tmpvar_29 - vec2(1.0, 0.5));\\n  vec2 tmpvar_33;\\n  tmpvar_33.x = ((numerator_31.x * denominator_32.x) + (numerator_31.y * denominator_32.y));\\n  tmpvar_33.y = ((numerator_31.y * denominator_32.x) - (numerator_31.x * denominator_32.y));\\n  vec2 tmpvar_34;\\n  tmpvar_34 = (((tmpvar_33 / \\n    ((denominator_32.x * denominator_32.x) + (denominator_32.y * denominator_32.y))\\n  ) + 0.5) - vec2(0.5, 0.5));\\n  float tmpvar_35;\\n  tmpvar_35 = sqrt(dot (tmpvar_34, tmpvar_34));\\n  float tmpvar_36;\\n  float tmpvar_37;\\n  tmpvar_37 = (min (abs(\\n    (tmpvar_34.x / tmpvar_34.y)\\n  ), 1.0) / max (abs(\\n    (tmpvar_34.x / tmpvar_34.y)\\n  ), 1.0));\\n  float tmpvar_38;\\n  tmpvar_38 = (tmpvar_37 * tmpvar_37);\\n  tmpvar_38 = (((\\n    ((((\\n      ((((-0.01213232 * tmpvar_38) + 0.05368138) * tmpvar_38) - 0.1173503)\\n     * tmpvar_38) + 0.1938925) * tmpvar_38) - 0.3326756)\\n   * tmpvar_38) + 0.9999793) * tmpvar_37);\\n  tmpvar_38 = (tmpvar_38 + (float(\\n    (abs((tmpvar_34.x / tmpvar_34.y)) > 1.0)\\n  ) * (\\n    (tmpvar_38 * -2.0)\\n   + 1.570796)));\\n  tmpvar_36 = (tmpvar_38 * sign((tmpvar_34.x / tmpvar_34.y)));\\n  if ((abs(tmpvar_34.y) > (1e-08 * abs(tmpvar_34.x)))) {\\n    if ((tmpvar_34.y < 0.0)) {\\n      if ((tmpvar_34.x >= 0.0)) {\\n        tmpvar_36 += 3.141593;\\n      } else {\\n        tmpvar_36 = (tmpvar_36 - 3.141593);\\n      };\\n    };\\n  } else {\\n    tmpvar_36 = (sign(tmpvar_34.x) * 1.570796);\\n  };\\n  vec2 tmpvar_39;\\n  tmpvar_39.x = (tmpvar_36 * 0.1591549);\\n  tmpvar_39.y = tmpvar_35;\\n  vec2 tmpvar_40;\\n  tmpvar_40.x = ((tmpvar_39.x * 2.0) + tmpvar_30.x);\\n  tmpvar_40.y = ((0.3 * log(tmpvar_35)) + tmpvar_30.y);\\n  vec2 tmpvar_41;\\n  tmpvar_41 = (0.5 + (0.5 - abs(\\n    ((fract((tmpvar_40 * 0.5)) * 2.0) - 1.0)\\n  )));\\n  vec2 tmpvar_42;\\n  vec2 tmpvar_43;\\n  tmpvar_43 = (vec2(1.0, 0.0) * texsize.zw);\\n  tmpvar_42.x = (texture (sampler_main, (uv + tmpvar_43)).xyz - texture (sampler_main, (uv - tmpvar_43)).xyz).y;\\n  vec2 tmpvar_44;\\n  tmpvar_44 = (vec2(0.0, 1.0) * texsize.zw);\\n  tmpvar_42.y = (texture (sampler_main, (uv + tmpvar_44)).xyz - texture (sampler_main, (uv - tmpvar_44)).xyz).y;\\n  d_4 = (texsize.zw * 2.0);\\n  dx_3 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * d_4))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * d_4))\\n  ).xyz * scale1) + bias1));\\n  dy_2 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * d_4))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * d_4))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_45;\\n  tmpvar_45.x = dx_3.y;\\n  tmpvar_45.y = dy_2.y;\\n  dz_1 = ((tmpvar_42 * 3.0) + tmpvar_45);\\n  vec2 tmpvar_46;\\n  tmpvar_46.x = dx_3.x;\\n  tmpvar_46.y = dy_2.x;\\n  vec2 tmpvar_47;\\n  tmpvar_47.x = dx_3.y;\\n  tmpvar_47.y = dy_2.y;\\n  vec3 tmpvar_48;\\n  vec3 tmpvar_49;\\n  tmpvar_49 = pow (hue_shader, vec3(4.0, 4.0, 4.0));\\n  tmpvar_48 = (mix (mix (\\n    mix (mix (ret_6, (1.0 - tmpvar_49), vec3((texture (sampler_main, tmpvar_41).x * 1.5))), vec3(1.5, 1.5, 1.5), ((texture (sampler_blur1, (\\n      fract(tmpvar_25)\\n     - \\n      ((tmpvar_46 * texsize.zw) * 256.0)\\n    )).xyz * scale1) + bias1).zzz)\\n  , vec3(1.0, 1.0, 1.0), vec3(\\n    (sqrt(dot (dz_1, dz_1)) + (texture (sampler_main, (uv + (\\n      (tmpvar_47 * texsize.zw)\\n     * 18.0))).y * 0.25))\\n  )), (tmpvar_49 * 1.4), (\\n    (texture (sampler_blur1, tmpvar_41).xyz * scale1)\\n   + bias1).zzz) * (vec3(1.0, 1.0, 1.0) - vec3((texture (sampler_main, \\n    fract(tmpvar_25)\\n  ).z * 0.76))));\\n  ret_6 = tmpvar_48;\\n  vec4 tmpvar_50;\\n  tmpvar_50.w = 1.0;\\n  tmpvar_50.xyz = tmpvar_48;\\n  ret = tmpvar_50.xyz;\\n }"}')},3309:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.5,"echo_zoom":1.03,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":0.01,"wave_smoothing":0,"modwavealphastart":1,"modwavealphaend":1,"warpscale":0.107,"zoomexp":4.28632,"fshader":1,"warp":0.01743,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0,"ob_g":1,"ob_a":1,"ib_size":0,"ib_r":1,"ib_g":1,"ib_b":1,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"textured":1,"rad":0.789,"ang":0.6283,"tex_zoom":1.17257,"r":0,"g":1,"border_a":0},"init_eqs_eel":"vx = 0;\\nvy = 0;","frame_eqs_eel":"rad = 0.65 + bass*0.1;\\n\\nan = an*0.99 + (bass-treb)*0.1;\\nang = an*0.1 + 0.6;"},{"baseVals":{"sides":100,"thickoutline":1,"textured":1,"rad":0.40271,"tex_zoom":2.23888,"g":1,"b":1,"r2":0.08,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"textured":1,"rad":1.21525,"tex_ang":2.57611,"tex_zoom":0.55595,"g":1,"b":1,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":34,"x":0.99,"y":0.99,"rad":0.02558,"r":0,"g":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"samples":495,"sep":4,"spectrum":1,"thick":1,"additive":1,"scaling":100,"smoothing":1,"r":0,"g":0.04,"b":0,"a":0.99},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\nab = 1;","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt8 = .07;\\nt7 = 1;","point_eqs_eel":"t7 = -t7;\\npi = asin(1);\\nn = 180;\\nrd = 0.075;//+(value1*10+1)*((sample*512)%2)*0.02;\\nmy_x = sin(sample*pi*4+(t7+1)*t8)*0.5 + cos(sample*pi*n)*rd*sin(sample*pi*4+(t7+1)*t8);\\nmy_y = cos(sample*pi*4+(t7+1)*t8)*0.5 + cos(sample*pi*n)*rd*cos(sample*pi*4+(t7+1)*t8);\\nmy_z = sin(sample*pi*n)*rd;\\n\\n\\n\\nd = 1.4; // makes the perspective impact\\nzoom = 0.65;\\n\\nw1 = q2;\\nw2 = q3;\\nw3 = q4;\\n\\nx1 = cos(w1)*my_x + sin(w1)*my_y;\\ny1 = -sin(w1)*my_x + cos(w1)*my_y;\\nz1 = my_z;\\n\\nx2 = cos(w2)*x1 + sin(w2)*z1;\\nz2 = -sin(w2)*x1 + cos(w2)*z1;\\ny2 = y1;\\n\\ny3 = cos(w3)*y2 + sin(w3)*z2;\\nz3 = -sin(w3)*y2 + cos(w3)*z2;\\nx3 = x2;\\n\\n// perspective calculation\\n\\nl = sqrt(x3*x3 + y3*y3);\\nw = atan2(x3,y3);\\np = tan(asin(1) + atan2(d+z3,l));\\nd = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));\\n\\nmy_x = zoom*sin(w)*p;\\nmy_y = zoom*cos(w)*p;\\n\\nx = 0.5 + my_x;\\ny = 0.5 + my_y;\\n\\nb = -z3 + 0.5;\\nb = min(1,max(0,b))*0.5;\\nr = 1-b*2\\n//b = (1 - r)*0.1;\\n//a =  7/(d*16) - 0.1;"},{"baseVals":{"samples":445,"sep":4,"spectrum":1,"usedots":1,"thick":1,"additive":1,"scaling":100,"smoothing":1,"a":0.99,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\nab = 1;","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt8 = .09;\\nt7 = 1;","point_eqs_eel":"t7 = -t7;\\npi = asin(1);\\nn = 160;\\nrd = 0.075;//+(value1*10+1)*((sample*512)%2)*0.02;\\nxx = sin(sample*pi*4+(t7+1)*t8)*0.5 + cos(sample*pi*n)*rd*sin(sample*pi*4);\\nyy = cos(sample*pi*4+(t7+1)*t8)*0.5 + cos(sample*pi*n)*rd*cos(sample*pi*4);\\nzz = sin(sample*pi*n)*rd;\\n\\nd = sqrt( xx*xx + yy*yy + zz*zz);\\nd1 = 1;\\nxx = xx*d1;\\nyy = yy*d1;\\nzz = zz*d1;\\n\\nw = -d*t5;\\ns1 = sin(t2*1+w);\\ns2 = sin(t3*1+w);\\ns3 = sin(t4*1+w);\\nc1 = cos(t2*1+w);\\nc2 = cos(t3*1+w);\\nc3 = cos(t4*1+w);\\n\\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\\n\\na = 0.75;\\nzoom = 0.5*atan2(a,a+z);//0.5*(1/(z+a));\\nx = 0.5 + zoom*x1;\\ny = 0.5 + zoom*y1;\\n\\npi3 = 3.1415*2*0.3333;\\nt = sample*pi*4-2*time;\\nc=1.6;\\nr = sin(t)*c;\\n\\ng = sin(t+pi3)*c;\\n\\nb = sin(t-pi3)*c;\\n\\nj = 0.71;\\n//r = 0.5+xx*j;\\n//g = 0.5+yy*j;\\n//b = 0.5+zz*j;\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\na = 1-(z + a)/2;\\n"},{"baseVals":{"sep":4,"scaling":0.09348,"smoothing":1,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\nab = 1;","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;","point_eqs_eel":"s8 = sample*383;\\n\\ns = 100;//0.3;\\nxx = sin(sample*s);//((sample*343)%7 - 3.5)*s;\\nzz = cos(sample*s);//((sample*49)%7 - 3.5)*s;\\nyy = (sample-0.5);//((sample*7)%7 - 3.5)*s;\\n\\nd = sqrt( xx*xx + yy*yy + zz*zz);\\nd1 = 1/d;\\nxx = xx*d1;\\nyy = yy*d1;\\nzz = zz*d1;\\n\\nw = 1+0*(d)*(t6);//(sample*sin(time*0.3)*0.02-1);\\ns1 = sin(t2*w);\\ns2 = sin(t3*w);\\ns3 = sin(t4*w);\\nc1 = cos(t2*w);\\nc2 = cos(t3*w);\\nc3 = cos(t4*w);\\n\\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\\n\\na = 2;\\nzoom = 0.3*atan2(a-z,a);//0.5*(1/(z+a));\\nx = 0.5 + zoom*x1;\\ny = 0.5 + zoom*y1;\\n\\npi3 = 3.1415*2*0.3333;\\nt = -z*13+t5*20;\\nc = 10;\\nr = sin(t)*c;\\n\\ng = sin(t+pi3)*c;\\n\\nb = sin(t-pi3)*c;\\n\\nj = 0.71;\\n//r = 0.5+xx*j;\\n//g = 0.5+yy*j;\\n//b = 0.5+zz*j;\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\n\\n\\na = sigmoid(-z,10)*1.0+0.0;"},{"baseVals":{"samples":484,"sep":4,"usedots":1,"scaling":9.94125,"smoothing":1,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\nab = 1;","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;","point_eqs_eel":"s8 = sample*383;\\n\\ns = 0.25;\\nxx = ((sample*(465))%15 - 8)*s*2;\\nyy = ((sample*31)%31 - 16)*s;\\nzz = 0;\\n\\nd = sqrt( xx*xx + yy*yy + zz*zz);\\nw = 1;\\n\\ns1 = sin(t2*1);\\ns2 = sin(t3*0);\\ns3 = sin(t4*1);\\nc1 = cos(t2*1);\\nc2 = cos(t3*0);\\nc3 = cos(t4*1);\\n\\n\\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\\n\\na = 500;\\nzoom = 0.05*atan2(a-z,a);//0.5*(1/(z+a));\\nx = 0.5 + zoom*x1;\\ny = 0.5 + zoom*y1;\\n\\npi3 = 3.1415*2*0.3333;\\nt = -z*5+t5;\\nc = 10;\\nr = sin(t)*c;\\n\\ng = sin(t+pi3)*c;\\n\\nb = sin(t-pi3)*c;\\n\\nj = 0.71;\\n//r = 0.5+xx*j;\\n//g = 0.5+yy*j;\\n//b = 0.5+zz*j;\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\n\\n\\na = sigmoid(z,5);"}],"init_eqs_eel":"x1 = 0;\\ny1 = 0;","frame_eqs_eel":"q1 = 0;\\nv = 0.4;\\nj1 = j1*0.95 + sqr(bass*4)*v;\\nj2 = j2*0.95 + sqr(mid*4)*v;\\nj3 = j3*0.95 + sqr(treb*4)*v;\\n\\nn = n + j1*0.0052;\\nn1 = n1 + j2*0.0052;\\nn2 = n2 + j3*0.0052;\\n\\n\\nq2 = n*0.01;\\nq3 = n1*0.01;\\nq4 = n2*0.01;\\n\\nk = k*0.99 + sqr(mid_att*2);\\nq5 = k*0.00;\\n\\nzoom = 1.0016;\\nwarp = 0;\\n\\nrot = -0.00;\\n\\nq9 = aspectx;\\nq10 = aspecty;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 4.0);\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = (((texture (sampler_blur2, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale2) + bias2)).z;\\n  tmpvar_3.y = -(((\\n    (texture (sampler_blur2, (uv + (vec2(1.0, 0.0) * tmpvar_2))).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, (uv - (vec2(1.0, 0.0) * tmpvar_2))).xyz * scale2)\\n   + bias2)).z);\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (uv + ((tmpvar_3 * texsize.zw) * 60.0));\\n  vec2 x_5;\\n  x_5 = (tmpvar_4 - uv);\\n  vec4 tmpvar_6;\\n  tmpvar_6 = texture (sampler_main, uv);\\n  vec4 tmpvar_7;\\n  tmpvar_7 = texture (sampler_blur1, uv);\\n  ret_1.z = (((texture (sampler_main, tmpvar_4).z + \\n    (((tmpvar_6.z - (\\n      (tmpvar_7.xyz * scale1)\\n     + bias1).z) * 200.0) * sqrt(dot (x_5, x_5)))\\n  ) * 0.96) - 0.02);\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1)).y;\\n  tmpvar_8.y = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1)).y;\\n  ret_1.y = ((texture (sampler_main, (uv_orig + \\n    ((tmpvar_8 * texsize.zw) * 6.0)\\n  )).y + (\\n    (tmpvar_6.y - ((tmpvar_7.xyz * scale1) + bias1).y)\\n   * 0.1)) - 0.016);\\n  vec4 tmpvar_9;\\n  tmpvar_9.w = 1.0;\\n  tmpvar_9.xyz = ret_1;\\n  ret = tmpvar_9.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 8.0);\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = tmpvar_3.z;\\n  tmpvar_5.y = tmpvar_4.z;\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = tmpvar_3.y;\\n  tmpvar_6.y = tmpvar_4.y;\\n  ret_1 = (mix (vec3(0.2, 0.0, 0.1), vec3(0.8, 0.6, 0.0), texture (sampler_main, (uv - \\n    (tmpvar_5 * 0.2)\\n  )).yyy) * ((\\n    (-(tmpvar_3.y) + tmpvar_4.y)\\n   + 1.0) + (\\n    (-(tmpvar_3.z) + tmpvar_4.z)\\n   * 2.0)));\\n  vec3 tmpvar_7;\\n  tmpvar_7 = mix (mix (ret_1, vec3(0.2, 0.0, 0.4), vec3((\\n    ((texture (sampler_blur1, (uv - (tmpvar_6 * 0.04))).xyz * scale1) + bias1)\\n  .x * 1.4))), vec3(1.0, 0.9, 0.8), texture (sampler_main, uv).zzz);\\n  ret_1 = tmpvar_7;\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = tmpvar_7;\\n  ret = tmpvar_8.xyz;\\n }"}')},4629:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"wave_thick":1,"wave_brighten":0,"wrap":0,"wave_a":0.004,"wave_scale":0.01,"wave_smoothing":0,"wave_mystery":-0.44,"modwavealphastart":1,"modwavealphaend":1,"warpanimspeed":0.01,"warpscale":100,"zoomexp":0.9217,"zoom":0.9901,"warp":0.01,"wave_y":0.04,"ob_size":0,"ob_g":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"thickoutline":1,"rad":0.02015,"tex_ang":0.12566,"tex_zoom":1.51878,"r":0,"a":0.1,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"thickoutline":1,"x":1,"rad":0.39872,"tex_ang":0.12566,"tex_zoom":1.51878,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"thickoutline":1,"x":1,"rad":3.0054,"tex_ang":0.12566,"tex_zoom":1.51878,"r":0,"g":1,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"thickoutline":1,"x":1,"rad":0.39872,"tex_ang":0.12566,"tex_zoom":1.51878,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"usedots":1,"scaling":2.44415,"smoothing":0,"a":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t1 = 0;\\nv = 0.01;\\nj = j + (bass)*0.01;\\nj2 = j2 + (mid_att)*0.01;\\nj3 = j3 + (treb_att)*0.01;\\nt2 = j;\\nt3 = j2;\\nt4 = j3;\\n//t5 = 0;\\nk = k*0.99 + 10*mid/fps;\\nt5 = -k;\\n\\ncl1 = cl1 + 0.002;\\ncl1 = if(above(cl1,1),0,cl1);\\ncl1 = if(below(cl1,0),1,cl1);\\nt8 = cl1;\\n\\ncl2 = cl2 -1*q1;\\ncl2 = if(above(cl2,1),0,cl2);\\ncl2 = if(below(cl2,0),1,cl2);\\nt7 = cl2;\\n\\ncl3 = cl3 +0.001;\\ncl3 = if(above(cl3,1),0,cl3);\\ncl3 = if(below(cl3,0),1,cl3);\\nt6 = cl3;","point_eqs_eel":"xx = ((sample*0983624912364)%10000000+100)/10000000;\\nyy = ((xx*1896575575)%10000000+100)/10000000;\\nzz = ((yy*58652340875)%10000000+100)/10000000;\\n\\n\\nd = sqrt(sqr(xx)+sqr(yy)+sqr(zz));\\n\\nzz = zz + t8 - if(above(zz+t8,1),1,0) - 0.5;\\nxx = xx + t7 - if(above(xx+t7,1),1,0) - 0.5;\\nyy = yy + t6 - if(above(yy+t6,1),1,0) - 0.5;\\n\\nv = 0.001;\\n\\nw = 1;// (sample*sin(time*0.3)*0.01-1);\\nbb = d*d*0.5;\\nn= 0.3;\\ns1 = sin(sin(t2*w+bb)*n);\\ns2 = sin(sin(t3*w+bb)*n);\\ns3 = sin(sin(t4*w+bb)*n);\\nc1 = cos(sin(t2*w+bb)*n);\\nc2 = cos(sin(t3*w+bb)*n);\\nc3 = cos(sin(t4*w+bb)*n);\\n\\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\\n\\nzoom = .5*(1/(z+0.5));\\nx = 0.5 + zoom*x1 + sin(time*0.1)*0;;\\ny = 0.5 + zoom*y1 + cos(time*0.16801)*0;\\n\\npi3 = 3.1415*2*0.3333;\\nt = z*2+t2*1;\\nc=3;\\n//r = sin(t)*c;\\n\\n//g = sin(t+pi3)*c;\\n\\n//b = sin(t-pi3)*c;\\n\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\n\\na = 0.4;"},{"baseVals":{"scaling":2.44415,"smoothing":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t8 = 1;","point_eqs_eel":"t8 = -t8;\\ny = sample;\\nx = 0.5 + t8*0.005;\\n\\npi3 = 3.1415*2*0.3333;\\nt = time + sample*2;\\nc=2;\\n\\nr = sin(t)*c;\\ng = sin(t+pi3)*c;\\n\\nb = sin(t-pi3)*c;\\n\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\n"},{"baseVals":{"thick":1,"additive":1,"scaling":100,"smoothing":0.6,"r":0,"g":0.4,"a":0.3,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt7 = q7;\\nt8 = q8;","point_eqs_eel":"sample = 1-sample;\\nxxx = xx;\\nyyy = yy;\\nxx = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2\\n+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;\\n\\nyy = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6\\n+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;\\nd = 1/sqrt(sqr(xx-xxx)+sqr(yy-yyy));\\nx = xx + sample*(1-sample)*(value1-value2)*(yy-yyy)*d;\\ny = yy - sample*(1-sample)*(value1-value2)*(xx-xxx)*d;"},{"baseVals":{"usedots":1,"scaling":2.44415,"smoothing":0,"r":0,"g":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t8 = 1;","point_eqs_eel":"t8 = -t8;\\ny = (1+t8)*0.01;\\nx = sample;"}],"init_eqs_eel":"x1 = 0.9;\\ny1 = 0.5;\\n\\nx2 = 0.5; y2 = 0.5;\\nx3 = 0.5; y3 = 0.5;\\nx4 = 0.5; y4 = 0.5;","frame_eqs_eel":"decay = 1;\\nxx1 = xx1*0.9 + (bass)*0.01;\\nxx2 = xx2*0.9 + (treb)*0.01;\\nyy1 = yy1*0.94 + (treb+bass)*0.0075;\\n\\nx1 = 0.5 + (xx1-xx2)*1.5;\\ny1 = 0.5 + yy1;\\n\\n//x2 = 0;y2 = 0;x3 = 0;y3 = 0;x4 = 0;y4 = 0;\\n\\nspring = 18;\\ngrav = 1;\\nresist = 5;\\nbounce = 0.9;\\ndt = 0.0003;\\n\\nvx2 = vx2*(1-resist*dt) + dt*((x1+x3-2*x2)*spring);\\nvy2 = vy2*(1-resist*dt) + dt*((y1+y3-2*y2)*spring-grav);\\nvx3 = vx3*(1-resist*dt) + dt*((x2+x4-2*x3)*spring);\\nvy3 = vy3*(1-resist*dt) + dt*((y2+y4-2*y3)*spring-grav);\\nvx4 = vx4*(1-resist*dt) + dt*((x3-x4)*spring);\\nvy4 = vy4*(1-resist*dt) + dt*((y3-y4)*spring-grav);\\n\\nx2 = x2 + vx2;\\ny2 = y2 + vy2;\\nx3 = x3 + vx3;\\ny3 = y3 + vy3;\\nx4 = x4 + vx4;\\ny4 = y4 + vy4;\\n\\nvx2 = if(above(x2,0),vx2,abs(vx2)*bounce);\\nvx2 = if(below(x2,1),vx2,-abs(vx2)*bounce);\\nvx3 = if(above(x3,0),vx3,abs(vx3)*bounce);\\nvx3 = if(below(x3,1),vx3,-abs(vx3)*bounce);\\nvx4 = if(above(x4,0),vx4,abs(vx4)*bounce);\\nvx4 = if(below(x4,1),vx4,-abs(vx4)*bounce);\\n\\nvy2 = if(above(y2,0),vy2,abs(vy2)*bounce);\\nvy2 = if(below(y2,1),vy2,-abs(vy2)*bounce);\\nvy3 = if(above(y3,0),vy3,abs(vy3)*bounce);\\nvy3 = if(below(y3,1),vy3,-abs(vy3)*bounce);\\nvy4 = if(above(y4,0),vy4,abs(vy4)*bounce);\\nvy4 = if(below(y4,1),vy4,-abs(vy4)*bounce);\\n\\n\\nq1 = x1;\\nq2 = x2;\\nq3 = x3;\\nq4 = x4;\\n\\nq5 = y1;\\nq6 = y2;\\nq7 = y3;\\nq8 = y4;\\n\\nwarp = 0;\\nzoom = 1.00;\\nq6 = atan2(vx4,vy4);\\nq5 = sqrt(vx4*vx4 + vy4*vy4);","pixel_eqs_eel":"dir = -q6*1 + asin(1)*1;\\n\\nb1 = 0.1; // distance\\nm1 = q5*25;//-0.6 + q5*200; // size\\nt1 = 0.05; // velocity\\n\\nxx = q4;\\nyy = 1-q8;\\n\\n\\nx1 = xx   +cos(dir+1.5708)*b1;\\ny1 = yy -sin(dir+1.5708)*b1;\\n\\nx2 = xx   -cos(dir+1.5708)*b1;\\ny2 = yy +sin(dir+1.5708)*b1;\\n\\nd1 = sqrt((x1-x)*(x1-x)+(y1-y)*(y1-y))-b1*2;\\nsi1 = 1- 1/(1+pow(2,-d1*100));\\n\\nd2 = sqrt((x2-x)*(x2-x)+(y2-y)*(y2-y))-b1*2;\\nsi2 = 1- 1/(1+pow(2,-d2*100));\\n\\nsi3 = -pow(q5,3)*00;\\n\\ndx = (si1*sin(y1-y)*m1*d1  - si2*sin(y2-y)*m1*d2 + si3*cos(dir)*t1)*2;\\ndy = (-si1*sin(x1-x)*m1*d1 + si2*sin(x2-x)*m1*d2 - si3*sin(dir)*t1)*2;","warp":" shader_body { \\n  vec2 my_uv_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (vec2(1280.0, 1024.0) * texsize.zw);\\n  float tmpvar_4;\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (uv + vec2(0.005, 0.0));\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv - vec2(0.005, 0.0));\\n  tmpvar_4 = (((\\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_6).xyz * scale2)\\n   + bias2)).x * tmpvar_3.x);\\n  float tmpvar_7;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (uv + vec2(0.0, 0.005));\\n  vec2 tmpvar_9;\\n  tmpvar_9 = (uv - vec2(0.0, 0.005));\\n  tmpvar_7 = (((\\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_9).xyz * scale2)\\n   + bias2)).x * tmpvar_3.y);\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = tmpvar_4;\\n  tmpvar_10.y = tmpvar_7;\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = (((\\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_6).xyz * scale2)\\n   + bias2)).x * tmpvar_3.x);\\n  tmpvar_11.y = (((\\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_9).xyz * scale2)\\n   + bias2)).x * tmpvar_3.y);\\n  ret_2.x = texture (sampler_fw_main, ((uv - (tmpvar_10 * 0.006)) + (tmpvar_11 * 0.003))).x;\\n  vec4 tmpvar_12;\\n  tmpvar_12 = texture (sampler_blur3, uv);\\n  ret_2.x = (ret_2.x + ((ret_2.x - \\n    ((tmpvar_12.xyz * scale3) + bias3)\\n  .x) * 0.1));\\n  ret_2.x = (ret_2.x + 0.004);\\n  vec2 tmpvar_13;\\n  tmpvar_13.x = tmpvar_7;\\n  tmpvar_13.y = -(tmpvar_4);\\n  my_uv_1 = (uv + ((tmpvar_13 * 0.05) * (1.2 - \\n    ((tmpvar_12.xyz * scale3) + bias3)\\n  .y)));\\n  ret_2.z = texture (sampler_fw_main, my_uv_1).z;\\n  vec2 x_14;\\n  x_14 = (my_uv_1 - uv);\\n  ret_2.z = (ret_2.z + ((\\n    ((ret_2.z - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).z) * sqrt(dot (x_14, x_14)))\\n   * 180.0) / sqrt(\\n    dot (tmpvar_3, tmpvar_3)\\n  )));\\n  ret_2.z = (ret_2.z * 0.85);\\n  ret_2.z = (ret_2.z + 0.008);\\n  vec2 tmpvar_15;\\n  tmpvar_15.x = -(tmpvar_7);\\n  tmpvar_15.y = tmpvar_4;\\n  my_uv_1 = (tmpvar_15 * 0.045);\\n  vec2 tmpvar_16;\\n  tmpvar_16.x = (((\\n    (texture (sampler_blur2, (uv + vec2(0.01, 0.0))).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, (uv - vec2(0.01, 0.0))).xyz * scale2)\\n   + bias2)).y * tmpvar_3.x);\\n  tmpvar_16.y = (((\\n    (texture (sampler_blur2, (uv + vec2(0.0, 0.01))).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, (uv - vec2(0.0, 0.01))).xyz * scale2)\\n   + bias2)).y * tmpvar_3.y);\\n  my_uv_1 = (my_uv_1 + (uv - (tmpvar_16 * 0.03)));\\n  ret_2.y = texture (sampler_fw_main, my_uv_1).y;\\n  ret_2.y = (ret_2.y + ((\\n    (ret_2.y - ((texture (sampler_blur3, my_uv_1).xyz * scale3) + bias3).y)\\n   * 0.1) + 0.03));\\n  vec4 tmpvar_17;\\n  tmpvar_17.w = 1.0;\\n  tmpvar_17.xyz = ret_2;\\n  ret = tmpvar_17.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = (1.0 - q4);\\n  tmpvar_2.y = q8;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (tmpvar_2 + ((uv - tmpvar_2) * 0.992));\\n  ret_1 = (mix (mix (vec3(0.0, 0.0, 0.2), vec3(0.3, 0.0, 1.0), texture (sampler_fw_main, tmpvar_3).yyy), vec3(1.0, 1.0, 0.0), vec3(max (\\n    (((texture (sampler_blur1, tmpvar_3).xyz * scale1) + bias1).z * 1.5)\\n  , texture (sampler_main, \\n    (tmpvar_2 + ((uv - tmpvar_2) * 0.996))\\n  ).z))) * (1.0 - (\\n    ((texture (sampler_blur1, tmpvar_3).xyz * scale1) + bias1)\\n  .x * 2.0)));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = mix (ret_1, vec3(1.0, 0.1, 0.4), texture (sampler_fw_main, uv).xxx);\\n  ret_1 = tmpvar_4;\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = tmpvar_4;\\n  ret = tmpvar_5.xyz;\\n }"}')},3612:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":2.789,"wave_scale":0.292,"wave_smoothing":0,"wave_mystery":0.12,"modwavealphastart":1,"modwavealphaend":1,"warpanimspeed":0.01,"warpscale":100,"zoomexp":0.92178,"zoom":0.9901,"warp":0.01,"wave_g":0,"ob_size":0,"ob_r":0.2,"ob_a":0.1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_b":0,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"sides":100,"additive":1,"thickoutline":1,"rad":0.71426,"tex_ang":0.12566,"tex_zoom":1.51878,"a":0,"g2":0,"border_r":0.1,"border_g":0,"border_b":0,"border_a":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":100,"additive":1,"thickoutline":1,"x":0.43,"y":0.42,"rad":0.15799,"ang":0.1885,"tex_zoom":0.87865,"r":0,"g":1,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = q4;\\ny = q8;"},{"baseVals":{"thickoutline":1,"x":1,"rad":3.0054,"tex_ang":0.12566,"tex_zoom":1.51878,"r":0,"g":1,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"thickoutline":1,"x":1,"rad":0.39872,"tex_ang":0.12566,"tex_zoom":1.51878,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"usedots":1,"scaling":2.44415,"smoothing":0,"a":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t1 = 0;\\nv = 0.01;\\nj = j + (bass)*0.01;\\nj2 = j2 + (mid_att)*0.01;\\nj3 = j3 + (treb_att)*0.01;\\nt2 = j;\\nt3 = j2;\\nt4 = j3;\\n//t5 = 0;\\nk = k*0.99 + 10*mid/fps;\\nt5 = -k;\\n\\ncl1 = cl1 + 0.002;\\ncl1 = if(above(cl1,1),0,cl1);\\ncl1 = if(below(cl1,0),1,cl1);\\nt8 = cl1;\\n\\ncl2 = cl2 -1*q1;\\ncl2 = if(above(cl2,1),0,cl2);\\ncl2 = if(below(cl2,0),1,cl2);\\nt7 = cl2;\\n\\ncl3 = cl3 +0.001;\\ncl3 = if(above(cl3,1),0,cl3);\\ncl3 = if(below(cl3,0),1,cl3);\\nt6 = cl3;","point_eqs_eel":"xx = ((sample*0983624912364)%10000000+100)/10000000;\\nyy = ((xx*1896575575)%10000000+100)/10000000;\\nzz = ((yy*58652340875)%10000000+100)/10000000;\\n\\n\\nd = sqrt(sqr(xx)+sqr(yy)+sqr(zz));\\n\\nzz = zz + t8 - if(above(zz+t8,1),1,0) - 0.5;\\nxx = xx + t7 - if(above(xx+t7,1),1,0) - 0.5;\\nyy = yy + t6 - if(above(yy+t6,1),1,0) - 0.5;\\n\\nv = 0.001;\\n\\nw = 1;// (sample*sin(time*0.3)*0.01-1);\\nbb = d*d*0.5;\\nn= 0.3;\\ns1 = sin(sin(t2*w+bb)*n);\\ns2 = sin(sin(t3*w+bb)*n);\\ns3 = sin(sin(t4*w+bb)*n);\\nc1 = cos(sin(t2*w+bb)*n);\\nc2 = cos(sin(t3*w+bb)*n);\\nc3 = cos(sin(t4*w+bb)*n);\\n\\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\\n\\nzoom = .5*(1/(z+0.5));\\nx = 0.5 + zoom*x1 + sin(time*0.1)*0;;\\ny = 0.5 + zoom*y1 + cos(time*0.16801)*0;\\n\\npi3 = 3.1415*2*0.3333;\\nt = z*2+t2*1;\\nc=3;\\n//r = sin(t)*c;\\n\\n//g = sin(t+pi3)*c;\\n\\n//b = sin(t-pi3)*c;\\n\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\n\\na = 0.4;"},{"baseVals":{"scaling":2.44415,"smoothing":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t8 = 1;","point_eqs_eel":"t8 = -t8;\\ny = sample;\\nx = 0.5 + t8*0.005;\\n\\npi3 = 3.1415*2*0.3333;\\nt = time + sample*2;\\nc=2;\\n\\nr = sin(t)*c;\\ng = sin(t+pi3)*c;\\n\\nb = sin(t-pi3)*c;\\n\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\n"},{"baseVals":{"thick":1,"additive":1,"scaling":100,"smoothing":0.6,"r":0,"g":0.4,"a":0.3,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt7 = q7;\\nt8 = q8;","point_eqs_eel":"sample = 1-sample;\\nxxx = xx;\\nyyy = yy;\\nxx = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2\\n+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;\\n\\nyy = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6\\n+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;\\nd = 1/sqrt(sqr(xx-xxx)+sqr(yy-yyy));\\nx = xx + sample*(1-sample)*(value1-value2)*(yy-yyy)*d;\\ny = yy - sample*(1-sample)*(value1-value2)*(xx-xxx)*d;"},{"baseVals":{"usedots":1,"scaling":2.44415,"smoothing":0,"r":0,"g":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t8 = 1;","point_eqs_eel":"t8 = -t8;\\ny = (1+t8)*0.01;\\nx = sample;"}],"init_eqs_eel":"x1 = 0.9;\\ny1 = 0.5;\\n\\nx2 = 0.5; y2 = 0.5;\\nx3 = 0.5; y3 = 0.5;\\nx4 = 0.5; y4 = 0.5;","frame_eqs_eel":"decay = 1;\\nxx1 = xx1*0.9 + (bass)*0.01;\\nxx2 = xx2*0.9 + (treb)*0.01;\\nyy1 = yy1*0.94 + (treb+bass)*0.0075;\\n\\nx1 = 0.5 + xx1-xx2;\\ny1 = 0.5 + yy1;\\n\\n//x2 = 0;y2 = 0;x3 = 0;y3 = 0;x4 = 0;y4 = 0;\\n\\nspring = 18;\\ngrav = 1;\\nresist = 0.2;\\nbounce = 0.9;\\ndt = 0.0003;\\n\\nvx2 = vx2*(1-resist*dt) + dt*((x1+x3-2*x2)*spring);\\nvy2 = vy2*(1-resist*dt) + dt*((y1+y3-2*y2)*spring-grav);\\nvx3 = vx3*(1-resist*dt) + dt*((x2+x4-2*x3)*spring);\\nvy3 = vy3*(1-resist*dt) + dt*((y2+y4-2*y3)*spring-grav);\\nvx4 = vx4*(1-resist*dt) + dt*((x3-x4)*spring);\\nvy4 = vy4*(1-resist*dt) + dt*((y3-y4)*spring-grav);\\n\\nx2 = x2 + vx2;\\ny2 = y2 + vy2;\\nx3 = x3 + vx3;\\ny3 = y3 + vy3;\\nx4 = x4 + vx4;\\ny4 = y4 + vy4;\\n\\nvx2 = if(above(x2,0),vx2,abs(vx2)*bounce);\\nvx2 = if(below(x2,1),vx2,-abs(vx2)*bounce);\\nvx3 = if(above(x3,0),vx3,abs(vx3)*bounce);\\nvx3 = if(below(x3,1),vx3,-abs(vx3)*bounce);\\nvx4 = if(above(x4,0),vx4,abs(vx4)*bounce);\\nvx4 = if(below(x4,1),vx4,-abs(vx4)*bounce);\\n\\nvy2 = if(above(y2,0),vy2,abs(vy2)*bounce);\\nvy2 = if(below(y2,1),vy2,-abs(vy2)*bounce);\\nvy3 = if(above(y3,0),vy3,abs(vy3)*bounce);\\nvy3 = if(below(y3,1),vy3,-abs(vy3)*bounce);\\nvy4 = if(above(y4,0),vy4,abs(vy4)*bounce);\\nvy4 = if(below(y4,1),vy4,-abs(vy4)*bounce);\\n\\n\\nq1 = x1;\\nq2 = x2;\\nq3 = x3;\\nq4 = x4;\\n\\nq5 = y1;\\nq6 = y2;\\nq7 = y3;\\nq8 = y4;\\n\\n\\nzoom = 1.004;\\n\\nq6 = atan2(vx4,vy4);\\nq5 = sqrt(vx4*vx4 + vy4*vy4);","pixel_eqs_eel":"dir = -q6*1 + asin(1)*1;\\n\\nb1 = 0.08; // distance\\nm1 = q5*45;//-0.6 + q5*200; // size\\nt1 = 0.5; // velocity\\n\\nxx = 0.5 + (q4-0.5)/aspectx;\\nyy = 1-(0.5 + (q8-0.5)/aspecty);\\n\\n\\nx1 = xx   +cos(dir+1.5708)*b1;\\ny1 = yy -sin(dir+1.5708)*b1;\\n\\nx2 = xx   -cos(dir+1.5708)*b1;\\ny2 = yy +sin(dir+1.5708)*b1;\\n\\nd1 = sqrt((x1-x)*(x1-x)+(y1-y)*(y1-y))-b1*2;\\nsi1 = 1- 1/(1+pow(2,-d1*100));\\n\\nd2 = sqrt((x2-x)*(x2-x)+(y2-y)*(y2-y))-b1*2;\\nsi2 = 1- 1/(1+pow(2,-d2*100));\\n\\nsi3 = -pow(q5,3)*00;\\n\\ndx = (si1*sin(y1-y)*m1*d1  - si2*sin(y2-y)*m1*d2 + si3*cos(dir)*t1)*2/aspectx;\\ndy = (-si1*sin(x1-x)*m1*d1 + si2*sin(x2-x)*m1*d2 - si3*sin(dir)*t1)*2/aspecty;","warp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 8.0);\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1)).x;\\n  tmpvar_3.y = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1)).x;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (uv - ((tmpvar_3 * texsize.zw) * 0.5));\\n  ret_1.x = texture (sampler_fw_main, tmpvar_4).x;\\n  ret_1.x = (ret_1.x + ((\\n    (ret_1.x - ((texture (sampler_blur3, tmpvar_4).xyz * scale3) + bias3).x)\\n   * 0.2) - 0.004));\\n  ret_1.y = ((texture (sampler_fw_main, uv_orig).y * 0.98) - 0.004);\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = ret_1;\\n  ret = tmpvar_5.xyz;\\n }","comp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = (texsize.zw * 4.0);\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_1))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_1))\\n  ).xyz * scale1) + bias1)).x;\\n  tmpvar_2.y = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_1))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_1))\\n  ).xyz * scale1) + bias1)).x;\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = mix ((vec3(0.0, 0.0, 1.0) * texture (sampler_main, uv).x), vec3(1.0, 0.0, 0.0), texture (sampler_main, (uv - tmpvar_2)).yyy);\\n  ret = tmpvar_3.xyz;\\n }"}')},1279:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"wave_thick":1,"wave_brighten":0,"wrap":0,"wave_a":0.004,"wave_scale":0.01,"wave_smoothing":0,"wave_mystery":-0.44,"modwavealphastart":1,"modwavealphaend":1,"warpanimspeed":0.137,"warpscale":13.125,"zoom":0.99951,"warp":0.99213,"wave_y":0.04,"ob_size":0.015,"ob_r":0.1,"ob_g":0.25,"ob_a":1,"ib_size":0,"ib_b":1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"thickoutline":1,"rad":0.02015,"tex_ang":0.12566,"tex_zoom":1.51878,"r":0,"a":0.1,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"thickoutline":1,"x":1,"rad":0.39872,"tex_ang":0.12566,"tex_zoom":1.51878,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"thickoutline":1,"x":1,"rad":3.0054,"tex_ang":0.12566,"tex_zoom":1.51878,"r":0,"g":1,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"thickoutline":1,"x":1,"rad":0.39872,"tex_ang":0.12566,"tex_zoom":1.51878,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"usedots":1,"scaling":2.44415,"smoothing":0,"a":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t1 = 0;\\nv = 0.01;\\nj = j + (bass)*0.01;\\nj2 = j2 + (mid_att)*0.01;\\nj3 = j3 + (treb_att)*0.01;\\nt2 = j;\\nt3 = j2;\\nt4 = j3;\\n//t5 = 0;\\nk = k*0.99 + 10*mid/fps;\\nt5 = -k;\\n\\ncl1 = cl1 + 0.002;\\ncl1 = if(above(cl1,1),0,cl1);\\ncl1 = if(below(cl1,0),1,cl1);\\nt8 = cl1;\\n\\ncl2 = cl2 -1*q1;\\ncl2 = if(above(cl2,1),0,cl2);\\ncl2 = if(below(cl2,0),1,cl2);\\nt7 = cl2;\\n\\ncl3 = cl3 +0.001;\\ncl3 = if(above(cl3,1),0,cl3);\\ncl3 = if(below(cl3,0),1,cl3);\\nt6 = cl3;","point_eqs_eel":"xx = ((sample*0983624912364)%10000000+100)/10000000;\\nyy = ((xx*1896575575)%10000000+100)/10000000;\\nzz = ((yy*58652340875)%10000000+100)/10000000;\\n\\n\\nd = sqrt(sqr(xx)+sqr(yy)+sqr(zz));\\n\\nzz = zz + t8 - if(above(zz+t8,1),1,0) - 0.5;\\nxx = xx + t7 - if(above(xx+t7,1),1,0) - 0.5;\\nyy = yy + t6 - if(above(yy+t6,1),1,0) - 0.5;\\n\\nv = 0.001;\\n\\nw = 1;// (sample*sin(time*0.3)*0.01-1);\\nbb = d*d*0.5;\\nn= 0.3;\\ns1 = sin(sin(t2*w+bb)*n);\\ns2 = sin(sin(t3*w+bb)*n);\\ns3 = sin(sin(t4*w+bb)*n);\\nc1 = cos(sin(t2*w+bb)*n);\\nc2 = cos(sin(t3*w+bb)*n);\\nc3 = cos(sin(t4*w+bb)*n);\\n\\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\\n\\nzoom = .5*(1/(z+0.5));\\nx = 0.5 + zoom*x1 + sin(time*0.1)*0;\\ny = 0.5 + zoom*y1 + cos(time*0.16801)*0;\\n\\npi3 = 3.1415*2*0.3333;\\nt = z*2+t2*1;\\nc=3;\\n//r = sin(t)*c;\\n\\n//g = sin(t+pi3)*c;\\n\\n//b = sin(t-pi3)*c;\\n\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\n\\na = 0.4;"},{"baseVals":{"scaling":2.44415,"smoothing":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t8 = 1;","point_eqs_eel":"t8 = -t8;\\ny = sample;\\nx = 0.5 + t8*0.005;\\n\\npi3 = 3.1415*2*0.3333;\\nt = time + sample*2;\\nc=2;\\n\\nr = sin(t)*c;\\ng = sin(t+pi3)*c;\\n\\nb = sin(t-pi3)*c;\\n\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\n"},{"baseVals":{"thick":1,"additive":1,"scaling":100,"smoothing":0.6,"r":0,"g":0.4,"a":0.3,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt7 = q7;\\nt8 = q8;","point_eqs_eel":"sample = 1-sample;\\nxxx = xx;\\nyyy = yy;\\nxx = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2\\n+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;\\n\\nyy = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6\\n+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;\\nd = 1/sqrt(sqr(xx-xxx)+sqr(yy-yyy));\\nx = xx + sample*(1-sample)*(value1-value2)*(yy-yyy)*d;\\ny = yy - sample*(1-sample)*(value1-value2)*(xx-xxx)*d;"},{"baseVals":{"usedots":1,"scaling":2.44415,"smoothing":0,"r":0,"g":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t8 = 1;","point_eqs_eel":"t8 = -t8;\\ny = (1+t8)*0.01;\\nx = sample;"}],"init_eqs_eel":"","frame_eqs_eel":"warp = 0;\\nwave_a = 0;\\n// elastic thread code\\n\\nxx1 = xx1*0.9 + (bass)*0.01;\\nxx2 = xx2*0.9 + (treb)*0.01;\\nyy1 = yy1*0.94 + (treb+bass)*0.0075;\\nx1 = 0.5 + (xx1-xx2)*2;\\ny1 = 0.4 + yy1*1.5;\\ndt = 0.03/fps;\\nvx2 = vx2*(1-2*dt) + dt*((x1+x3-2*x2)*10);\\nvy2 = vy2*(1-2*dt) + dt*((y1+y3-2*y2)*10-0.5);\\nvx3 = vx3*(1-2*dt) + dt*((x2+x4-2*x3)*10);\\nvy3 = vy3*(1-2*dt) + dt*((y2+y4-2*y3)*10-0.5);\\nvx4 = vx4*(1-2*dt) + dt*((x3-x4)*10);\\nvy4 = vy4*(1-2*dt) + dt*((y3-y4)*10-0.5);\\nx2 = x2 + vx2; y2 = y2 + vy2;\\nx3 = x3 + vx3; y3 = y3 + vy3;\\nx4 = x4 + vx4; y4 = y4 + vy4;\\nvx2 = if(above(x2,0),vx2,abs(vx2)*0.5);\\nvx2 = if(below(x2,1),vx2,-abs(vx2)*0.5);\\nvx3 = if(above(x3,0),vx3,abs(vx3)*0.5);\\nvx3 = if(below(x3,1),vx3,-abs(vx3)*0.5);\\nvx4 = if(above(x4,0),vx4,abs(vx4)*0.5);\\nvx4 = if(below(x4,1),vx4,-abs(vx4)*0.5);\\nvy2 = if(above(y2,0),vy2,abs(vy2)*0.5);\\nvy2 = if(below(y2,1),vy2,-abs(vy2)*0.5);\\nvy3 = if(above(y3,0),vy3,abs(vy3)*0.5);\\nvy3 = if(below(y3,1),vy3,-abs(vy3)*0.5);\\nvy4 = if(above(y4,0),vy4,abs(vy4)*0.5);\\nvy4 = if(below(y4,1),vy4,-abs(vy4)*0.5);\\nq1 = x1;q2 = x2;q3 = x3;q4 = x4;\\nq5 = y1;q6 = y2;q7 = y3;q8 = y4;\\nq9 = 1/aspectx;\\nq10 = 1/aspecty;\\nq11 = aspectx;\\nq12 = aspecty;\\nq13 = sqrt(vx4*vx4 + vy4*vy4);\\nq14 = atan2(vx4,vy4);\\nq15 = sin(q14);\\nq16 = cos(q14);","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 uv_1;\\n  vec2 my_uv_2;\\n  vec3 ret_3;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = q4;\\n  tmpvar_4.y = (1.0 - q8);\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = -(q15);\\n  tmpvar_5.y = q16;\\n  vec2 domain_6;\\n  vec2 uv_rot_7;\\n  domain_6 = (uv - tmpvar_4);\\n  domain_6 = (domain_6 * aspect.xy);\\n  float tmpvar_8;\\n  tmpvar_8 = (1.0/((1.0 + exp(\\n    ((sqrt(dot (domain_6, domain_6)) - 0.07) * 50.0)\\n  ))));\\n  domain_6 = (domain_6 + ((tmpvar_5 * q13) * (aspect.wz * tmpvar_8)));\\n  float tmpvar_9;\\n  tmpvar_9 = sin(tmpvar_8);\\n  float tmpvar_10;\\n  tmpvar_10 = cos(tmpvar_8);\\n  uv_rot_7.x = ((tmpvar_10 * domain_6.x) - (tmpvar_9 * domain_6.y));\\n  uv_rot_7.y = ((tmpvar_9 * domain_6.x) + (tmpvar_10 * domain_6.y));\\n  uv_rot_7 = (uv_rot_7 * aspect.zw);\\n  uv_rot_7 = (uv_rot_7 + tmpvar_4);\\n  uv_1 = (clamp ((tmpvar_4 + \\n    ((uv_rot_7 - tmpvar_4) * mix (1.0, 4.0, tmpvar_8))\\n  ), 0.0, 1.0) + (texsize.zw * vec2(0.0, 0.15)));\\n  vec2 tmpvar_11;\\n  tmpvar_11 = mix (uv_orig, uv_1, vec2(0.2, 0.2));\\n  uv_1 = tmpvar_11;\\n  vec2 tmpvar_12;\\n  tmpvar_12 = (vec2(1280.0, 1024.0) * texsize.zw);\\n  float tmpvar_13;\\n  tmpvar_13 = (((\\n    (texture (sampler_blur2, (tmpvar_11 + vec2(0.005, 0.0))).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, (tmpvar_11 - vec2(0.005, 0.0))).xyz * scale2)\\n   + bias2)).x * tmpvar_12.x);\\n  float tmpvar_14;\\n  tmpvar_14 = (((\\n    (texture (sampler_blur2, (tmpvar_11 + vec2(0.0, 0.005))).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, (tmpvar_11 - vec2(0.0, 0.005))).xyz * scale2)\\n   + bias2)).x * tmpvar_12.y);\\n  vec2 tmpvar_15;\\n  tmpvar_15.x = tmpvar_13;\\n  tmpvar_15.y = tmpvar_14;\\n  vec2 tmpvar_16;\\n  tmpvar_16.x = (((\\n    (texture (sampler_blur2, (tmpvar_11 + vec2(0.005, 0.0))).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, (tmpvar_11 - vec2(0.005, 0.0))).xyz * scale2)\\n   + bias2)).x * tmpvar_12.x);\\n  tmpvar_16.y = (((\\n    (texture (sampler_blur2, (tmpvar_11 + vec2(0.0, 0.005))).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, (tmpvar_11 - vec2(0.0, 0.005))).xyz * scale2)\\n   + bias2)).x * tmpvar_12.y);\\n  ret_3.x = texture (sampler_fw_main, ((tmpvar_11 - (tmpvar_15 * 0.006)) + (tmpvar_16 * 0.003))).x;\\n  ret_3.x = (ret_3.x + ((ret_3.x - \\n    ((texture (sampler_blur3, tmpvar_11).xyz * scale3) + bias3)\\n  .x) * 0.1));\\n  ret_3.x = (ret_3.x + 0.004);\\n  vec2 tmpvar_17;\\n  tmpvar_17.x = tmpvar_14;\\n  tmpvar_17.y = -(tmpvar_13);\\n  my_uv_2 = (uv_orig + ((tmpvar_17 * 0.05) * (1.2 - \\n    ((texture (sampler_blur3, uv_orig).xyz * scale3) + bias3)\\n  .y)));\\n  ret_3.z = texture (sampler_fw_main, my_uv_2).z;\\n  vec2 x_18;\\n  x_18 = (my_uv_2 - uv_orig);\\n  ret_3.z = (ret_3.z + ((\\n    ((ret_3.z - ((texture (sampler_blur1, uv_orig).xyz * scale1) + bias1).z) * sqrt(dot (x_18, x_18)))\\n   * 180.0) / sqrt(\\n    dot (tmpvar_12, tmpvar_12)\\n  )));\\n  ret_3.z = (ret_3.z * 0.85);\\n  ret_3.z = (ret_3.z + 0.008);\\n  vec2 tmpvar_19;\\n  tmpvar_19.x = -(tmpvar_14);\\n  tmpvar_19.y = tmpvar_13;\\n  my_uv_2 = (tmpvar_19 * 0.045);\\n  vec2 tmpvar_20;\\n  tmpvar_20.x = (((\\n    (texture (sampler_blur2, (tmpvar_11 + vec2(0.01, 0.0))).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, (tmpvar_11 - vec2(0.01, 0.0))).xyz * scale2)\\n   + bias2)).y * tmpvar_12.x);\\n  tmpvar_20.y = (((\\n    (texture (sampler_blur2, (tmpvar_11 + vec2(0.0, 0.01))).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, (tmpvar_11 - vec2(0.0, 0.01))).xyz * scale2)\\n   + bias2)).y * tmpvar_12.y);\\n  my_uv_2 = (my_uv_2 + (tmpvar_11 - (tmpvar_20 * 0.03)));\\n  ret_3.y = texture (sampler_fw_main, my_uv_2).y;\\n  ret_3.y = (ret_3.y + ((\\n    (ret_3.y - ((texture (sampler_blur3, my_uv_2).xyz * scale3) + bias3).y)\\n   * 0.1) + 0.03));\\n  vec4 tmpvar_21;\\n  tmpvar_21.w = 1.0;\\n  tmpvar_21.xyz = ret_3;\\n  ret = tmpvar_21.xyz;\\n }","comp":" shader_body { \\n  vec2 dz_1;\\n  vec3 dy_2;\\n  vec3 dx_3;\\n  vec2 d_4;\\n  vec3 ret_5;\\n  vec2 tmpvar_6;\\n  vec2 tmpvar_7;\\n  tmpvar_7 = (vec2(1.0, 0.0) * texsize.zw);\\n  tmpvar_6.x = (texture (sampler_main, (uv + tmpvar_7)).xyz - texture (sampler_main, (uv - tmpvar_7)).xyz).y;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (vec2(0.0, 1.0) * texsize.zw);\\n  tmpvar_6.y = (texture (sampler_main, (uv + tmpvar_8)).xyz - texture (sampler_main, (uv - tmpvar_8)).xyz).y;\\n  d_4 = (texsize.zw * 2.0);\\n  dx_3 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * d_4))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * d_4))\\n  ).xyz * scale1) + bias1));\\n  dy_2 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * d_4))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * d_4))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = dx_3.y;\\n  tmpvar_9.y = dy_2.y;\\n  dz_1 = ((tmpvar_6 * 3.0) + tmpvar_9);\\n  ret_5 = (vec3(((\\n    pow ((sqrt(dot (dz_1, dz_1)) * 0.8), 0.7)\\n   + \\n    (((texture (sampler_blur2, uv).xyz * scale2) + bias2).y * 0.4)\\n  ) - 0.1)) * vec3(0.3, 0.5, 0.7));\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = dx_3.x;\\n  tmpvar_10.y = dy_2.x;\\n  vec3 tmpvar_11;\\n  tmpvar_11 = mix (mix (ret_5, vec3(0.2, 0.1, 0.0), vec3((texture (sampler_main, \\n    (uv + ((tmpvar_10 * texsize.zw) * 18.0))\\n  ).x * 6.0))), vec3(1.0, 1.0, 1.0), texture (sampler_main, uv).zzz);\\n  ret_5 = tmpvar_11;\\n  vec4 tmpvar_12;\\n  tmpvar_12.w = 1.0;\\n  tmpvar_12.xyz = tmpvar_11;\\n  ret = tmpvar_12.xyz;\\n }"}')},1681:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1.9,"echo_zoom":1.169,"echo_orient":1,"wave_mode":5,"additivewave":1,"wave_a":0,"wave_scale":0.9,"wave_smoothing":0.63,"wave_mystery":1,"modwavealphastart":2,"modwavealphaend":2,"warpscale":2.853,"rot":0.006,"warp":0,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.005,"mv_x":0,"mv_y":48,"mv_dx":-0.941,"mv_dy":0.426,"mv_l":5,"mv_r":0.316,"mv_g":0.078,"mv_b":0.942,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"textured":1,"rad":0.78903,"ang":0.62832,"tex_zoom":1.02009,"r":0,"g":1,"b":1,"r2":0.7,"b2":1,"border_a":0},"init_eqs_eel":"vx = 0;\\nvy = 0;","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"c_x = 0.5;\\nc_y = 0.5;","frame_eqs_eel":"// sx/sy code by Amandio C\\nsx=1+.01*(8*bass%8)*equal(time%(int(24-2*bass)),0);\\nsy=1+.01*(8*mid%8) *equal(time%(12+int(24-2*bass)),0);\\n\\n\\nq1 = aspectx;\\nq2 = aspecty;\\nrot = 0;\\nzoom = 1;\\nwarp = 0;\\n\\n\\nvol = bass*8 + mid*4 + treb*2;\\nvol = vol*above(vol,17);\\nmonitor = vol;\\nbeat = above(vol,res);\\ndiff = (1-beat)*diff + beat*(vol-res);\\nres = beat*(vol+2*diff) + (1-beat)*(res - (diff*0.04 + 0.12)*60/fps);\\nres = max(0,res);\\nmonitor = res;\\n\\nr = if(beat, 0.01*(rand(200)-100)*0.01,r);\\nrot = r;\\n\\nc_x = if(beat,0.5 + 0.5*(rand(200)-100)*0.01, c_x);\\nc_y = if(beat,0.5 + 0.5*(rand(200)-100)*0.01, c_y);\\n\\n\\nq3 = c_x;\\nq4 = c_y;","pixel_eqs_eel":"d = (pow(sqrt(sqr(x-q3)+sqr(y-q4)),2)-0);\\nv = 0.03;\\ndx = v*(x-q3)*d;\\ndy = v*(y-q4)*d;","warp":"vec2 xlat_mutabled;\\nvec3 xlat_mutabledx;\\nvec3 xlat_mutabledy;\\n shader_body { \\n  vec3 ret_1;\\n  vec3 tmpvar_2;\\n  tmpvar_2 = (texture (sampler_noise_lq, ((\\n    (uv_orig * texsize.xy)\\n   * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5);\\n  xlat_mutabled = (texsize.zw * 4.0);\\n  xlat_mutabledx = (((texture (sampler_blur1, \\n    (uv_orig + (vec2(1.0, 0.0) * xlat_mutabled))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv_orig - (vec2(1.0, 0.0) * xlat_mutabled))\\n  ).xyz * scale1) + bias1));\\n  xlat_mutabledy = (((texture (sampler_blur1, \\n    (uv_orig + (vec2(0.0, 1.0) * xlat_mutabled))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv_orig - (vec2(0.0, 1.0) * xlat_mutabled))\\n  ).xyz * scale1) + bias1));\\n  xlat_mutabled = uv;\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = xlat_mutabledx.y;\\n  tmpvar_3.y = xlat_mutabledy.y;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = xlat_mutabledx.z;\\n  tmpvar_4.y = xlat_mutabledy.z;\\n  vec4 tmpvar_5;\\n  tmpvar_5 = texture (sampler_main, uv_orig);\\n  ret_1.y = ((texture (sampler_main, (uv - \\n    ((tmpvar_3 * texsize.zw) * 6.0)\\n  )).y - 0.008) + ((1.0 - tmpvar_5.x) * 0.018));\\n  ret_1.z = ((texture (sampler_main, (uv - \\n    ((tmpvar_4 * texsize.zw) * 6.0)\\n  )).z - 0.008) + (tmpvar_5.x * 0.018));\\n  ret_1.x = texture (sampler_fc_main, (uv + ((tmpvar_2.xy * texsize.zw) * 0.5))).x;\\n  ret_1.x = (ret_1.x + ((\\n    (ret_1.x - ((texture (sampler_blur3, uv).xyz * scale3) + bias3).x)\\n   * 0.15) + (tmpvar_2 * 0.0042)).x);\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = ret_1;\\n  ret = tmpvar_6.xyz;\\n }","comp":" shader_body { \\n  vec2 dz_1;\\n  vec3 dy_2;\\n  vec3 dx_3;\\n  vec2 d_4;\\n  vec3 ret_5;\\n  vec2 tmpvar_6;\\n  vec2 tmpvar_7;\\n  tmpvar_7 = (vec2(1.0, 0.0) * texsize.zw);\\n  tmpvar_6.x = (texture (sampler_main, (uv + tmpvar_7)).xyz - texture (sampler_main, (uv - tmpvar_7)).xyz).y;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (vec2(0.0, 1.0) * texsize.zw);\\n  tmpvar_6.y = (texture (sampler_main, (uv + tmpvar_8)).xyz - texture (sampler_main, (uv - tmpvar_8)).xyz).y;\\n  d_4 = (texsize.zw * 2.0);\\n  dx_3 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * d_4))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * d_4))\\n  ).xyz * scale1) + bias1));\\n  dy_2 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * d_4))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * d_4))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = dx_3.y;\\n  tmpvar_9.y = dy_2.y;\\n  dz_1 = ((tmpvar_6 * 3.0) + tmpvar_9);\\n  ret_5 = (vec3(((\\n    pow ((sqrt(dot (dz_1, dz_1)) * 0.8), 0.7)\\n   + \\n    (((texture (sampler_blur2, uv).xyz * scale2) + bias2).y * 0.4)\\n  ) - 0.1)) * vec3(0.3, 0.5, 0.7));\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = dx_3.x;\\n  tmpvar_10.y = dy_2.x;\\n  vec3 tmpvar_11;\\n  tmpvar_11 = mix (mix (ret_5, vec3(0.2, 0.1, 0.0), vec3((texture (sampler_main, \\n    (uv + ((tmpvar_10 * texsize.zw) * 18.0))\\n  ).x * 6.0))), vec3(1.0, 1.0, 1.0), texture (sampler_main, uv).zzz);\\n  ret_5 = tmpvar_11;\\n  vec4 tmpvar_12;\\n  tmpvar_12.w = 1.0;\\n  tmpvar_12.xyz = tmpvar_11;\\n  ret = tmpvar_12.xyz;\\n }"}')},10:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1.28,"decay":0.8,"echo_zoom":1,"echo_orient":3,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"brighten":1,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":0.01,"warpscale":100,"zoomexp":0.92178,"zoom":0.9901,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.005,"ob_g":1,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"sides":39,"additive":1,"num_inst":126,"rad":0.06989,"tex_ang":0.62832,"r2":1,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));"},{"baseVals":{"sides":41,"additive":1,"num_inst":239,"rad":0.06989,"tex_ang":0.62832,"r":0,"g":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));"},{"baseVals":{"sides":43,"additive":1,"num_inst":32,"rad":0.06989,"tex_ang":0.62832,"r":0,"b":1,"g2":0,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));"},{"baseVals":{"sides":14,"additive":1,"num_inst":127,"rad":0.0556,"tex_ang":0.62832,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));"}],"waves":[{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));"}],"init_eqs_eel":"x1 = 0.9;\\ny1 = 0.5;\\n\\nx2 = 0.5; y2 = 0.5;\\nx3 = 0.5; y3 = 0.5;\\nx4 = 0.5; y4 = 0.5;","frame_eqs_eel":"xx1 = xx1*0.9 + (bass)*0.01;\\nxx2 = xx2*0.9 + (treb)*0.01;\\nyy1 = yy1*0.94 + (treb+bass)*0.0075;\\n\\nx1 = 0.5 + (xx1-xx2)*2;\\ny1 = 0.4 + yy1;\\n\\nx1 = max(0,min(1,x1)); y1 = max(0,min(1,y1));\\n\\nspring = 10;\\ngrav = .5;\\nresist = 1;\\nbounce = 0.75;\\ndt = 0.0008*(60/fps);\\n\\nvx2 = vx2*(1-resist*dt) + dt*((x1+x3-2*x2)*spring);\\nvy2 = vy2*(1-resist*dt) + dt*((y1+y3-2*y2)*spring-grav);\\nvx3 = vx3*(1-resist*dt) + dt*((x2+x4-2*x3)*spring);\\nvy3 = vy3*(1-resist*dt) + dt*((y2+y4-2*y3)*spring-grav);\\nvx4 = vx4*(1-resist*dt) + dt*((x3-x4)*spring);\\nvy4 = vy4*(1-resist*dt) + dt*((y3-y4)*spring-grav);\\n\\nx2 = x2 + vx2;\\ny2 = y2 + vy2;\\nx3 = x3 + vx3;\\ny3 = y3 + vy3;\\nx4 = x4 + vx4;\\ny4 = y4 + vy4;\\n\\nvx2 = if(above(x2,0),vx2,abs(vx2)*bounce);\\nvx2 = if(below(x2,1),vx2,-abs(vx2)*bounce);\\nvx3 = if(above(x3,0),vx3,abs(vx3)*bounce);\\nvx3 = if(below(x3,1),vx3,-abs(vx3)*bounce);\\nvx4 = if(above(x4,0),vx4,abs(vx4)*bounce);\\nvx4 = if(below(x4,1),vx4,-abs(vx4)*bounce);\\nvy2 = if(above(y2,0),vy2,abs(vy2)*bounce);\\nvy2 = if(below(y2,1),vy2,-abs(vy2)*bounce);\\nvy3 = if(above(y3,0),vy3,abs(vy3)*bounce);\\nvy3 = if(below(y3,1),vy3,-abs(vy3)*bounce);\\nvy4 = if(above(y4,0),vy4,abs(vy4)*bounce);\\nvy4 = if(below(y4,1),vy4,-abs(vy4)*bounce);\\nq4 = x4;\\nq8 = y4;\\n\\nq1 = aspectx;\\nq2 = aspecty;\\nq10 = x1;\\nq11 = y1;\\nzoom = 1;\\nwarp = 0;\\nq6 = atan2(vx4,vy4);\\nq5 = sqrt(vx4*vx4 + vy4*vy4);\\n\\na = a*0.95 + q5;\\n\\ns = s*0.9 + a;\\nq3 = s*0.1;\\nmonitor = s;\\n\\nwave_a = 0;","pixel_eqs_eel":"x = 0.5 + (x-0.5)*q1;\\ny = 0.5 + (y-0.5)*q2;\\nxx = q4;\\nyy = 1-q8;\\n\\ndx = 0; dy = 0;\\n\\nd = sqrt((x-xx)*(x-xx)+(y-yy)*(y-yy));\\n\\nr = 0.11;\\nv = 20;\\nv2 = q5;\\ndx = (v*(sin(y-yy)*(d-r)-(x-xx)*(d-r/2)) + cos(dir)*v2)*(1.00-sigmoid(d-r,100));\\ndy = (-v*(sin(x-xx)*(d-r)+(y-yy)*(d-r/2)) -sin(dir)*v2)*(1.00-sigmoid(d-r,100));","warp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 8.0);\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = tmpvar_3.x;\\n  tmpvar_5.y = tmpvar_4.x;\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv + ((tmpvar_5 * texsize.zw) * 4.0));\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = tmpvar_3.y;\\n  tmpvar_7.y = tmpvar_4.y;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (uv + ((tmpvar_7 * texsize.zw) * 4.0));\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = tmpvar_3.z;\\n  tmpvar_9.y = tmpvar_4.z;\\n  vec2 tmpvar_10;\\n  tmpvar_10 = (uv + ((tmpvar_9 * texsize.zw) * 4.0));\\n  ret_1.x = (texture (sampler_main, tmpvar_6).x - ((texture (sampler_main, tmpvar_6).xyz - \\n    ((texture (sampler_blur3, tmpvar_6).xyz * scale3) + bias3)\\n  ).x * 0.02));\\n  ret_1.y = (texture (sampler_main, tmpvar_8).y - ((texture (sampler_main, tmpvar_8).xyz - \\n    ((texture (sampler_blur3, tmpvar_8).xyz * scale3) + bias3)\\n  ).y * 0.02));\\n  ret_1.z = (texture (sampler_main, tmpvar_10).z - ((texture (sampler_main, tmpvar_10).xyz - \\n    ((texture (sampler_blur3, tmpvar_10).xyz * scale3) + bias3)\\n  ).z * 0.02));\\n  ret_1 = (ret_1 + ((texture (sampler_noise_lq, \\n    (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 0.24)) + rand_frame.xy)\\n  ).xyz - 0.5) * 0.04));\\n  ret_1 = (ret_1 - ((ret_1.yzx * 0.1) - 0.04));\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 1.0;\\n  tmpvar_11.xyz = ret_1;\\n  ret = tmpvar_11.xyz;\\n }","comp":" shader_body { \\n  vec2 uv2_1;\\n  vec3 ret_2;\\n  uv2_1 = (uv + (vec2(1.0, 0.0) * texsize.zw));\\n  float tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(-1.0, 0.0) * texsize.zw));\\n  float tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(0.0, 1.0) * texsize.zw));\\n  float tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(0.0, -1.0) * texsize.zw));\\n  vec3 tmpvar_6;\\n  tmpvar_6.z = 0.14;\\n  tmpvar_6.x = (tmpvar_3 - tmpvar_4);\\n  tmpvar_6.y = (tmpvar_5 - ((\\n    (texture (sampler_main, uv2_1).xyz + (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4))\\n   + \\n    (((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2) * 0.15)\\n  ) + (\\n    ((texture (sampler_blur3, uv2_1).xyz * scale3) + bias3)\\n   * 0.1)).x);\\n  ret_2 = (0.5 + (0.5 * normalize(tmpvar_6)));\\n  vec2 x_7;\\n  x_7 = (ret_2.xy - 0.5);\\n  ret_2 = (ret_2 * clamp ((\\n    sqrt(dot (x_7, x_7))\\n   * 5.0), 0.0, 1.0));\\n  ret_2 = ret_2.xxy;\\n  ret_2 = (ret_2 + 1.0);\\n  ret_2 = (ret_2 * mix (ret_2, (ret_2 * \\n    (((texture (sampler_blur3, uv).xyz * scale3) + bias3) - ((texture (sampler_blur1, uv).xyz * scale1) + bias1))\\n  ), pow (hue_shader, ret_2)));\\n  ret_2 = (ret_2 * hue_shader);\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = ret_2;\\n  ret = tmpvar_8.xyz;\\n }"}')},730:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1.28,"decay":0.8,"echo_zoom":1,"echo_orient":3,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"brighten":1,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":0.01,"warpscale":100,"zoomexp":0.92178,"zoom":0.9901,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.005,"ob_g":1,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"sides":39,"additive":1,"num_inst":126,"rad":0.06989,"tex_ang":0.62832,"r2":1,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));"},{"baseVals":{"sides":41,"additive":1,"num_inst":239,"rad":0.06989,"tex_ang":0.62832,"r":0,"g":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));"},{"baseVals":{"sides":43,"additive":1,"num_inst":32,"rad":0.06989,"tex_ang":0.62832,"r":0,"b":1,"g2":0,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));"},{"baseVals":{"sides":14,"additive":1,"num_inst":127,"rad":0.0556,"tex_ang":0.62832,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));"}],"waves":[{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));"}],"init_eqs_eel":"x1 = 0.9;\\ny1 = 0.5;\\n\\nx2 = 0.5; y2 = 0.5;\\nx3 = 0.5; y3 = 0.5;\\nx4 = 0.5; y4 = 0.5;","frame_eqs_eel":"xx1 = xx1*0.9 + (bass)*0.01;\\nxx2 = xx2*0.9 + (treb)*0.01;\\nyy1 = yy1*0.94 + (treb+bass)*0.0075;\\n\\nx1 = 0.5 + (xx1-xx2)*2;\\ny1 = 0.4 + yy1;\\n\\nx1 = max(0,min(1,x1)); y1 = max(0,min(1,y1));\\n\\nspring = 10;\\ngrav = .5;\\nresist = 1;\\nbounce = 0.75;\\ndt = 0.0001*(60/fps);\\n\\nvx2 = vx2*(1-resist*dt) + dt*((x1+x3-2*x2)*spring);\\nvy2 = vy2*(1-resist*dt) + dt*((y1+y3-2*y2)*spring-grav);\\nvx3 = vx3*(1-resist*dt) + dt*((x2+x4-2*x3)*spring);\\nvy3 = vy3*(1-resist*dt) + dt*((y2+y4-2*y3)*spring-grav);\\nvx4 = vx4*(1-resist*dt) + dt*((x3-x4)*spring);\\nvy4 = vy4*(1-resist*dt) + dt*((y3-y4)*spring-grav);\\n\\nx2 = x2 + vx2;\\ny2 = y2 + vy2;\\nx3 = x3 + vx3;\\ny3 = y3 + vy3;\\nx4 = x4 + vx4;\\ny4 = y4 + vy4;\\n\\nvx2 = if(above(x2,0),vx2,abs(vx2)*bounce);\\nvx2 = if(below(x2,1),vx2,-abs(vx2)*bounce);\\nvx3 = if(above(x3,0),vx3,abs(vx3)*bounce);\\nvx3 = if(below(x3,1),vx3,-abs(vx3)*bounce);\\nvx4 = if(above(x4,0),vx4,abs(vx4)*bounce);\\nvx4 = if(below(x4,1),vx4,-abs(vx4)*bounce);\\nvy2 = if(above(y2,0),vy2,abs(vy2)*bounce);\\nvy2 = if(below(y2,1),vy2,-abs(vy2)*bounce);\\nvy3 = if(above(y3,0),vy3,abs(vy3)*bounce);\\nvy3 = if(below(y3,1),vy3,-abs(vy3)*bounce);\\nvy4 = if(above(y4,0),vy4,abs(vy4)*bounce);\\nvy4 = if(below(y4,1),vy4,-abs(vy4)*bounce);\\nq4 = x4;\\nq8 = y4;\\n\\nq1 = aspectx;\\nq2 = aspecty;\\nq10 = x1;\\nq11 = y1;\\nzoom = 1;\\nwarp = 0;\\nq6 = atan2(vx4,vy4);\\nq5 = sqrt(vx4*vx4 + vy4*vy4);\\n\\na = a*0.95 + q5;\\n\\ns = s*0.9 + a;\\nq3 = s*0.1;\\nmonitor = s;\\n\\nwave_a = 0;","pixel_eqs_eel":"x = 0.5 + (x-0.5)*q1;\\ny = 0.5 + (y-0.5)*q2;\\nxx = q4;\\nyy = 1-q8;\\n\\ndx = 0; dy = 0;\\n\\nd = sqrt((x-xx)*(x-xx)+(y-yy)*(y-yy));\\n\\nr = 0.1;\\nv = 20;\\nv2 = q5;\\ndx = (v*(sin(y-yy)*(d-r)-(x-xx)*(d-r/2)) + cos(dir)*v2)*(1.00-sigmoid(d-r,120));\\ndy = (-v*(sin(x-xx)*(d-r)+(y-yy)*(d-r/2)) -sin(dir)*v2)*(1.00-sigmoid(d-r,120));","warp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = mix (uv_orig, uv, vec2(2.0, 2.0));\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (texsize.zw * 2.0);\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (tmpvar_2 + (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (tmpvar_2 - (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_blur1, \\n    (tmpvar_2 + (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (tmpvar_2 - (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = tmpvar_4.x;\\n  tmpvar_6.y = tmpvar_5.x;\\n  vec2 tmpvar_7;\\n  tmpvar_7 = (tmpvar_2 + ((tmpvar_6 * texsize.zw) * 8.0));\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = tmpvar_4.y;\\n  tmpvar_8.y = tmpvar_5.y;\\n  vec2 tmpvar_9;\\n  tmpvar_9 = (tmpvar_2 + ((tmpvar_8 * texsize.zw) * 8.0));\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = tmpvar_4.z;\\n  tmpvar_10.y = tmpvar_5.z;\\n  vec2 tmpvar_11;\\n  tmpvar_11 = (tmpvar_2 + ((tmpvar_10 * texsize.zw) * 8.0));\\n  ret_1.x = (texture (sampler_main, tmpvar_7).x - ((texture (sampler_main, tmpvar_7).xyz - \\n    ((texture (sampler_blur3, tmpvar_7).xyz * scale3) + bias3)\\n  ).x * 0.02));\\n  ret_1.y = (texture (sampler_main, tmpvar_9).y - ((texture (sampler_main, tmpvar_9).xyz - \\n    ((texture (sampler_blur3, tmpvar_9).xyz * scale3) + bias3)\\n  ).y * 0.02));\\n  ret_1.z = (texture (sampler_main, tmpvar_11).z - ((texture (sampler_main, tmpvar_11).xyz - \\n    ((texture (sampler_blur3, tmpvar_11).xyz * scale3) + bias3)\\n  ).z * 0.02));\\n  ret_1 = (ret_1 + ((texture (sampler_noise_lq, \\n    (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 1.2)) + rand_frame.xy)\\n  ).xyz - 0.5) * 0.04));\\n  ret_1 = (ret_1 - ((ret_1.yzx * 0.1) - 0.02));\\n  vec4 tmpvar_12;\\n  tmpvar_12.w = 1.0;\\n  tmpvar_12.xyz = ret_1;\\n  ret = tmpvar_12.xyz;\\n }","comp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = (texsize.zw * 8.0);\\n  vec3 tmpvar_2;\\n  tmpvar_2 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_1))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_1))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_1))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_1))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = q4;\\n  tmpvar_4.y = (1.0 - q8);\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = tmpvar_2.y;\\n  tmpvar_5.y = tmpvar_3.y;\\n  vec2 x_6;\\n  x_6 = ((uv - (tmpvar_5 * 2.0)) - tmpvar_4);\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = tmpvar_2.x;\\n  tmpvar_7.y = tmpvar_3.x;\\n  vec2 x_8;\\n  x_8 = ((uv - (tmpvar_7 * 2.0)) - tmpvar_4);\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = tmpvar_2.z;\\n  tmpvar_9.y = tmpvar_3.z;\\n  vec2 x_10;\\n  x_10 = ((uv - (tmpvar_9 * 2.0)) - tmpvar_4);\\n  vec3 tmpvar_11;\\n  tmpvar_11.x = (1.1 - pow (sqrt(\\n    dot (x_8, x_8)\\n  ), 0.2));\\n  tmpvar_11.y = (1.1 - pow (sqrt(\\n    dot (x_6, x_6)\\n  ), 0.2));\\n  tmpvar_11.z = (1.1 - pow (sqrt(\\n    dot (x_10, x_10)\\n  ), 0.2));\\n  vec4 tmpvar_12;\\n  tmpvar_12.w = 1.0;\\n  tmpvar_12.xyz = ((tmpvar_11 * texture (sampler_main, uv).xyz) * 2.4);\\n  ret = tmpvar_12.xyz;\\n }"}')},7431:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1.56,"decay":1,"echo_zoom":0.362,"echo_orient":1,"wave_thick":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":1.599,"wave_smoothing":0,"wave_mystery":-0.5,"modwavealphastart":2,"modwavealphaend":2,"warpscale":0.107,"zoomexp":0.1584,"fshader":1,"warp":0.01,"wave_r":0.51,"wave_g":0.5,"ob_size":0,"ob_a":1,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0.5,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"sides":100,"thickoutline":1,"rad":0.50126,"tex_zoom":0.99996,"g":1,"b":1,"r2":1,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.5+sin(time*0.618)*0.2;\\ny = 0.5+cos(time*1.618)*0.2;\\nrad = bass*0.05;\\nborder_r = 1-(sin(time*1.25)*0.3+0.7);\\nborder_g = 1-(sin(time)*0.3+0.3);\\nborder_b = 1-(sin(time/3)*0.5+0.5);"},{"baseVals":{"sides":100,"thickoutline":1,"rad":0.50126,"g":1,"b":1,"g2":0,"b2":1,"border_g":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.5+sin(time*2.618)*0.3;\\ny = 0.5+cos(time*3.14)*0.3;\\nrad = bass*0.05;\\nborder_r = 1-(sin(time*1.25)*0.3+0.7);\\nborder_g = 1-(sin(time)*0.3+0.3);\\nborder_b = 1-(sin(time/3)*0.5+0.5);\\n"},{"baseVals":{"sides":100,"thickoutline":1,"rad":0.50126,"tex_zoom":0.9998,"g":1,"b":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.5+sin(-time*2.618)*0.4;\\ny = 0.5+cos(-time*1.14)*0.4;\\nrad = bass*0.05;\\nborder_r = 1-(sin(time*1.25)*0.3+0.7);\\nborder_g = 1-(sin(time)*0.3+0.3);\\nborder_b = 1-(sin(time/3)*0.5+0.5);"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"scaling":0.16188,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"additive":1,"scaling":25.12601,"smoothing":1,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"q11 = 0.5/asin(1);","frame_eqs_eel":"//zoom = 0.99;\\nib_r = sin(time*1.25*4)*0.3+0.7;\\nib_g = sin(time*4)*0.3+0.3;\\nib_b = sin(time/3*4)*0.5+0.5;\\nwave_r = 1- ib_r;\\nwave_g = 1- ib_g;\\nwave_b = 1- ib_b;\\n//wave_mystery = -1+bass/2;\\nwave_x = 0.5+sin(time*3)*0.3;\\nwave_y = 0.5+cos(time*2.187)*0.3;\\nt = t + 2.5/fps;\\nt = if(above(t,2),t-2,t);\\nq12 = -t;","pixel_eqs_eel":"r = bass/4;\\ncx1 = 0.5+sin(time*0.618)*0.2;\\ncy1 = 0.5+cos(time*1.618)*0.2;\\nd = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));\\ndir = (bass)*(r*r-d*d)*0.3;\\nx1 = if( above(d,r),0,  sin(y-cy1)*dir);\\ny1 = if( above(d,r),0, -sin(x-cx1)*dir);\\n\\n\\ncx1 = 0.5+sin(time*2.618)*0.3;\\ncy1 = 0.5+cos(time*3.14)*0.3;\\nd = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));\\ndir = -(mid)*(r*r-d*d)*0.3;\\nx2 = if( above(d,r),0,  sin(y-cy1)*dir);\\ny2 = if( above(d,r),0, -sin(x-cx1)*dir);\\n\\ncx1 = 0.5+sin(-time*2.618)*0.4;\\ncy1 = 0.5+cos(-time*1.14)*0.4;\\nd = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));\\ndir = -(treb)*(r*r-d*d)*0.3;\\nx3 = if( above(d,r),0,  sin(y-cy1)*dir);\\ny3 = if( above(d,r),0, -sin(x-cx1)*dir);\\n\\n\\ndx = x1+x2+x3;\\ndy = y1+y2+y3;","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = texture (sampler_main, fract(uv)).xyz;\\n  ret = tmpvar_1.xyz;\\n }","comp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = ((uv - 0.5) * aspect.wz);\\n  float tmpvar_2;\\n  float tmpvar_3;\\n  tmpvar_3 = (min (abs(\\n    (tmpvar_1.x / tmpvar_1.y)\\n  ), 1.0) / max (abs(\\n    (tmpvar_1.x / tmpvar_1.y)\\n  ), 1.0));\\n  float tmpvar_4;\\n  tmpvar_4 = (tmpvar_3 * tmpvar_3);\\n  tmpvar_4 = (((\\n    ((((\\n      ((((-0.01213232 * tmpvar_4) + 0.05368138) * tmpvar_4) - 0.1173503)\\n     * tmpvar_4) + 0.1938925) * tmpvar_4) - 0.3326756)\\n   * tmpvar_4) + 0.9999793) * tmpvar_3);\\n  tmpvar_4 = (tmpvar_4 + (float(\\n    (abs((tmpvar_1.x / tmpvar_1.y)) > 1.0)\\n  ) * (\\n    (tmpvar_4 * -2.0)\\n   + 1.570796)));\\n  tmpvar_2 = (tmpvar_4 * sign((tmpvar_1.x / tmpvar_1.y)));\\n  if ((abs(tmpvar_1.y) > (1e-08 * abs(tmpvar_1.x)))) {\\n    if ((tmpvar_1.y < 0.0)) {\\n      if ((tmpvar_1.x >= 0.0)) {\\n        tmpvar_2 += 3.141593;\\n      } else {\\n        tmpvar_2 = (tmpvar_2 - 3.141593);\\n      };\\n    };\\n  } else {\\n    tmpvar_2 = (sign(tmpvar_1.x) * 1.570796);\\n  };\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = ((tmpvar_2 * q11) * 1.5);\\n  tmpvar_5.y = (((0.666 * \\n    log(sqrt(dot (tmpvar_1, tmpvar_1)))\\n  ) - (tmpvar_2 * q11)) + q12);\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = texture (sampler_main, clamp ((0.5 + (\\n    (0.5 - abs(((\\n      fract((tmpvar_5 * 0.5))\\n     * 2.0) - 1.0)))\\n   * vec2(0.96, 1.02))), 0.0, 1.0)).xyz;\\n  ret = tmpvar_6.xyz;\\n }"}')},331:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1,"decay":0.5,"echo_zoom":1,"echo_orient":3,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_a":0.009,"wave_scale":1.554,"wave_smoothing":0,"modwavealphastart":1.2,"modwavealphaend":1.2,"warpanimspeed":0.01,"warpscale":100,"zoomexp":0.19913,"warp":0.01359,"wave_r":0,"wave_b":0.04,"ob_size":0.005,"ob_a":1,"ib_size":0.5,"ib_r":1,"ib_g":1,"ib_b":1,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"additive":1,"thickoutline":1,"rad":0.86644,"g":0.03,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":5,"textured":1,"rad":0.986,"tex_ang":3.14159,"tex_zoom":0.99979,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ang =sin(time/65) ;// ang + (bass*.2) + (time*.4);"},{"baseVals":{"sides":100,"textured":1,"x":0.9,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = sin(time) * .4 + .5;\\n\\n"},{"baseVals":{"sides":36,"additive":1,"rad":0.81623,"r":0,"g":0.04,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = 1-q1;\\ny = q2;\\nx = 0.5 + (x - 0.5)*0.25;\\ny = 0.5 + (y - 0.5)*0.25;"}],"waves":[{"baseVals":{"thick":1,"additive":1,"r":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"q1 = below(rand(100),4 + 10*(treb+mid+bass));","point_eqs_eel":"it = (it + 1)*above(sample,0)*below(it,53);\\nita = (ita + equal(it,0))*above(sample,0);\\n\\nsw = 1-equal(it,0)*equal(ita,0);\\nswi = (equal(lr,9) + equal(lr,5))*equal(it,0)*equal(ita,4);\\nxv = if(sw - swi,xv,rand(1001)*.001*.8);\\nmx = xv + ita*.025;\\nmy = if(sw - swi,my,rand(1001)*.001*.975);\\n\\nsz = .01;\\nvx = above(it,1)*below(it,39) + above(it,12)*below(it,28) - equal(it,20) + equal(it,46) + equal(it,51) + equal(it,41) - equal(it,15) - equal(it,25) + equal(it,10) + equal(it,30) - equal(it,4) - equal(it,36);\\nvy = above(it,17)*below(it,49) + above(it,22)*below(it,44) - equal(it,33) + equal(it,7) + equal(it,51) + equal(it,15) - equal(it,41) - equal(it,25) + equal(it,4) + equal(it,10) - equal(it,36) - equal(it,30);\\n\\nsa = equal(ita,0)*13 + equal(ita,1)*9 + equal(ita,2)*12 + equal(ita,3)*11 + equal(ita,4)*4 + equal(ita,5)*18 + equal(ita,6)*15 + equal(ita,7)*16;\\nsb = equal(ita,0)*11 + equal(ita,1)*9 + equal(ita,2)*12 + equal(ita,3)*12;\\nsc = equal(ita,0)*4 + equal(ita,1)*15 + equal(ita,3)*4 + equal(ita,4)*18 + equal(ita,5)*21 + equal(ita,6)*7 + equal(ita,7)*19;\\nsd = equal(ita,0)*12 + equal(ita,1)*15 + equal(ita,2)*22 + equal(ita,3)*5;\\nse = equal(ita,0)*8 + equal(ita,1)*1 + equal(ita,2)*20 + equal(ita,3)*5;\\nsf = equal(ita,0)*6 + equal(ita,1)*5 + equal(ita,2)*1 + equal(ita,3)*18 + equal(ita,5)*10 + equal(ita,6)*15 + equal(ita,7)*25;\\nsg = equal(ita,0)*1 + equal(ita,1)*14 + equal(ita,2)*7 + equal(ita,3)*5 + equal(ita,4)*18;\\nsh = equal(ita,0)*19 + equal(ita,1)*21 + equal(ita,2)*18 + equal(ita,3)*16 + equal(ita,4)*18 + equal(ita,5)*9 + equal(ita,6)*19 + equal(ita,7)*5;\\nsi = equal(ita,0)*8 + equal(ita,1)*1 + equal(ita,2)*16 + equal(ita,3)*16 + equal(ita,4)*25;\\nsj = equal(ita,0)*25 + equal(ita,1)*5 + equal(ita,2)*19 + equal(ita,6)*14 + equal(ita,7)*15;\\n\\nlr = if(sw,lr,rand(10));\\nlet = equal(lr,0)*sa + equal(lr,1)*sb + equal(lr,2)*sc + equal(lr,3)*sd + equal(lr,4)*se + equal(lr,5)*sf + equal(lr,6)*sg + equal(lr,7)*sh + equal(lr,8)*si + equal(lr,9)*sj;\\n\\nva = equal(let,23) + equal(let,24) + equal(let,26);\\nvb = above(let,0)*below(let,9) + above(let,10)*below(let,19) + equal(let,21) + equal(let,23);\\nvc = equal(let,1) + equal(let,2) + equal(let,5) + equal(let,6) + equal(let,8) + equal(let,11) + equal(let,16) + equal(let,18) + equal(let,19);\\nvd = above(let,1)*below(let,9) + above(let,10)*below(let,24) - equal(let,20);\\nve = equal(let,13) + equal(let,14) + equal(let,24) + equal(let,25);\\nvf = above(let,1)*below(let,8) + equal(let,9) + above(let,14)*below(let,21) + equal(let,26);\\nvg = equal(let,1);\\nvh = equal(let,9) + equal(let,20);\\nvi = above(let,0)*below(let,5) - equal(let,3) + equal(let,18);\\nvj = above(let,2)*below(let,8) - equal(let,4) + equal(let,9) + above(let,14)*below(let,21) - equal(let,18) + equal(let,26);\\nvk = equal(let,11) + equal(let,13) + above(let,23)*below(let,27);\\nvl = equal(let,8) + equal(let,10) + above(let,12)*below(let,18) + above(let,20)*below(let,24);\\nvm = equal(let,1) + equal(let,2) + equal(let,8) + equal(let,16) + equal(let,18) + equal(let,19);\\nvn = equal(let,1) + equal(let,7) + equal(let,8) + equal(let,10) + above(let,12)*below(let,24) - equal(let,16) - equal(let,18) - equal(let,20) - equal(let,22);\\nvo = equal(let,11) + equal(let,14) + equal(let,17) + equal(let,18) + equal(let,23) + equal(let,24);\\nvp = equal(let,3) + equal(let,5) + equal(let,7) + equal(let,9) + equal(let,10) + equal(let,12) + equal(let,15) + equal(let,17) + equal(let,19) + equal(let,21) + equal(let,26);\\nvq = equal(let,2) + equal(let,4) + equal(let,22);\\nvr = equal(let,9) + equal(let,20) + equal(let,25);\\nvs = equal(let,22);\\nvt = above(let,1)*below(let,13) - equal(let,6) - equal(let,8) - equal(let,11) + equal(let,15) + equal(let,17) + equal(let,19) + equal(let,21) + equal(let,26);\\n\\na = if(above(it,51),0,if(above(it,49),va,if(above(it,47),vb,if(above(it,44),vc,if(above(it,42),vd,if(above(it,39),ve, if(above(it,37),vf,if(above(it,34),vg,if(above(it,31),vh,if(above(it,28),vi,if(above(it,26),vj,if(above(it,23),vk, if(above(it,21),vl,if(above(it,18),vm,if(above(it,16),vn,if(above(it,13),vo,if(above(it,11),vp,if(above(it,8),vq, if(above(it,5),vr,if(above(it,2),vs,if(it,vt,0)))))))))))))))))))));\\n\\na = a*below(ita,8)*q1;\\n\\nx = mx + vx*sz*.75;\\ny = my + vy*sz*1.5;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"","pixel_eqs_eel":"vx = 0.5+cos(time*0.2)*.5;\\nvy = 0.5+sin(time*0.2)*.5;\\nx = x - vx;\\ny = y - vy;\\n\\nd = time*0.1;\\nxx = sin(d)*x + cos(d)*y;\\nyy = cos(d)*x - sin(d)*y;\\n\\nx = xx;\\ny = yy;\\n\\ncz = 0.5;\\nzoom = 0.33;\\nw = 1/zoom*(1+sqrt(sqr(cz) + sqr(x-cx)+sqr(y-cy)));\\ndx = (x-mx)*w;\\ndy = (y-my)*w;","warp":" shader_body { \\n  vec2 uv_z_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (1.0 - abs((\\n    (fract((uv * 0.5)) * 2.0)\\n   - 1.0)));\\n  ret_2.x = (texture (sampler_fc_main, tmpvar_3).x * 0.5);\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (texsize.zw * 4.0);\\n  vec2 tmpvar_5;\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv_orig - 0.5);\\n  tmpvar_5 = ((tmpvar_6 * 0.996) + 0.5);\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = (((texture (sampler_blur1, \\n    (tmpvar_5 + (vec2(1.0, 0.0) * tmpvar_4))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (tmpvar_5 - (vec2(1.0, 0.0) * tmpvar_4))\\n  ).xyz * scale1) + bias1)).z;\\n  tmpvar_7.y = (((texture (sampler_blur1, \\n    (tmpvar_5 + (vec2(0.0, 1.0) * tmpvar_4))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (tmpvar_5 - (vec2(0.0, 1.0) * tmpvar_4))\\n  ).xyz * scale1) + bias1)).z;\\n  uv_z_1 = (tmpvar_5 - ((tmpvar_7 * texsize.zw) * 2.0));\\n  ret_2.z = max (((\\n    (texture (sampler_fc_main, tmpvar_3).x - 0.5)\\n   * 3.0) * clamp (\\n    (1.0 - (sqrt(dot (tmpvar_6, tmpvar_6)) * 3.2))\\n  , 0.0, 1.0)), texture (sampler_fc_main, uv_z_1).z);\\n  ret_2.z = (ret_2.z + ((texture (sampler_fc_main, uv_z_1).z - \\n    ((texture (sampler_blur1, clamp (uv_z_1, 0.0, 1.0)).xyz * scale1) + bias1)\\n  .z) * 0.02));\\n  ret_2.y = (max (texture (sampler_fc_main, mix (uv, uv_orig, vec2(0.9996, 0.9996))).y, texture (sampler_fc_main, uv_orig).z) - 0.008);\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = ret_2;\\n  ret = tmpvar_8.xyz;\\n }","comp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = (texsize.zw * 4.0);\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_1))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_1))\\n  ).xyz * scale1) + bias1)).y;\\n  tmpvar_2.y = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_1))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_1))\\n  ).xyz * scale1) + bias1)).y;\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = mix ((texture (sampler_fc_main, (uv - \\n    (tmpvar_2 * 0.4)\\n  )).x * pow (hue_shader.zxy, vec3(4.0, 4.0, 4.0))), (mix (\\n    (pow (hue_shader, vec3(6.0, 6.0, 6.0)) * 1.2)\\n  , \\n    pow (hue_shader, vec3(8.0, 8.0, 8.0))\\n  .yzx, texture (sampler_main, uv).yyy) * 2.0), vec3(((\\n    (texture (sampler_blur1, uv).xyz * scale1)\\n   + bias1).z * 0.7)));\\n  ret = tmpvar_3.xyz;\\n }"}')},4977:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1,"decay":1,"echo_zoom":0.999797,"echo_orient":2,"wave_mode":1,"wave_thick":1,"wave_brighten":0,"wrap":0,"wave_a":0.004361,"wave_scale":0.01,"wave_smoothing":0,"wave_mystery":-0.44,"modwavealphastart":1,"modwavealphaend":1.000001,"warpanimspeed":0.01,"warpscale":100,"zoomexp":0.321044,"warp":0.01,"wave_y":0.04,"ob_size":0.005,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":0,"mv_y":0,"mv_l":1,"mv_g":0.91,"mv_b":0.71,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"additive":1,"thickoutline":1,"y":0.75,"rad":0.074934,"tex_zoom":0.734576,"g":1,"g2":0,"border_a":0},"init_eqs_eel":"vx = 0","frame_eqs_eel":"x = q4;\\ny = q8;"},{"baseVals":{"enabled":1,"sides":100,"additive":1,"thickoutline":1,"textured":1,"x":0.7,"y":0.3,"rad":0.6623,"ang":2.450441,"tex_zoom":0.749341,"g":0.1,"b":0.1,"r2":1,"g2":0.1,"b2":0.1,"a2":1,"border_a":0},"init_eqs_eel":"xx = 0.5;\\nyy = 0.4;","frame_eqs_eel":"d = sqrt( sqr(xx-q4)+sqr(yy-q8));\\n\\nxx = if(below(d,0.15),0.4+rand(200)/1000,xx);\\nyy = if(below(d,0.15),0.3+rand(400)/1000,yy);\\naang = if(below(d,0.12),rand(1000)/1000,aang);\\nang =aang*4*asin(1);\\nx = xx;\\ny = yy;"},{"baseVals":{"enabled":1,"sides":100,"additive":1,"thickoutline":1,"textured":1,"x":0.43,"y":0.6,"rad":1.167812,"ang":5.969028,"tex_zoom":0.671652,"r2":1,"g2":0,"a2":1,"border_a":0},"init_eqs_eel":"xx = 0.5;\\nyy = 0.4;","frame_eqs_eel":"d = sqrt( sqr(xx-q4)+sqr(yy-q8));\\n\\nxx = if(below(d,0.15),0.4+rand(200)/1000,xx);\\nyy = if(below(d,0.15),0.3+rand(400)/1000,yy);\\naang = if(below(d,0.12),rand(1000)/1000,aang);\\nang =aang*4*asin(1);\\nx = xx;\\ny = yy;"},{"baseVals":{"sides":100,"additive":1,"thickoutline":1,"y":0.75,"rad":0.070592,"tex_zoom":0.734576,"g":0.5,"b":0.5,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"vx = 0","frame_eqs_eel":"x = q1;\\ny = q5;"}],"waves":[{"baseVals":{"usedots":1,"scaling":2.44415,"smoothing":0,"a":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t1 = 0;\\nv = 0.01;\\nj = j + (bass)*0.01;\\nj2 = j2 + (mid_att)*0.01;\\nj3 = j3 + (treb_att)*0.01;\\nt2 = j;\\nt3 = j2;\\nt4 = j3;\\n//t5 = 0;\\nk = k*0.99 + 10*mid/fps;\\nt5 = -k;\\n\\ncl1 = cl1 + 0.002;\\ncl1 = if(above(cl1,1),0,cl1);\\ncl1 = if(below(cl1,0),1,cl1);\\nt8 = cl1;\\n\\ncl2 = cl2 -1*q1;\\ncl2 = if(above(cl2,1),0,cl2);\\ncl2 = if(below(cl2,0),1,cl2);\\nt7 = cl2;\\n\\ncl3 = cl3 +0.001;\\ncl3 = if(above(cl3,1),0,cl3);\\ncl3 = if(below(cl3,0),1,cl3);\\nt6 = cl3;","point_eqs_eel":"xx = ((sample*0983624912364)%10000000+100)/10000000;\\nyy = ((xx*1896575575)%10000000+100)/10000000;\\nzz = ((yy*58652340875)%10000000+100)/10000000;\\n\\n\\nd = sqrt(sqr(xx)+sqr(yy)+sqr(zz));\\n\\nzz = zz + t8 - if(above(zz+t8,1),1,0) - 0.5;\\nxx = xx + t7 - if(above(xx+t7,1),1,0) - 0.5;\\nyy = yy + t6 - if(above(yy+t6,1),1,0) - 0.5;\\n\\nv = 0.001;\\n\\nw = 1;// (sample*sin(time*0.3)*0.01-1);\\nbb = d*d*0.5;\\nn= 0.3;\\ns1 = sin(sin(t2*w+bb)*n);\\ns2 = sin(sin(t3*w+bb)*n);\\ns3 = sin(sin(t4*w+bb)*n);\\nc1 = cos(sin(t2*w+bb)*n);\\nc2 = cos(sin(t3*w+bb)*n);\\nc3 = cos(sin(t4*w+bb)*n);\\n\\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\\n\\nzoom = .5*(1/(z+0.5));\\nx = 0.5 + zoom*x1 + sin(time*0.1)*0;;\\ny = 0.5 + zoom*y1 + cos(time*0.16801)*0;\\n\\npi3 = 3.1415*2*0.3333;\\nt = z*2+t2*1;\\nc=3;\\n//r = sin(t)*c;\\n\\n//g = sin(t+pi3)*c;\\n\\n//b = sin(t-pi3)*c;\\n\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\n\\na = 0.4;"},{"baseVals":{"scaling":7.7518,"smoothing":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t8 = 1;\\n\\nt1 = 0.5;\\nt2 = 0.9;","point_eqs_eel":"d = d*0.85 + (value1)*1;\\n\\nx = 0.5 + d*sample*(1-sample);\\ny = 0.9 - sample*0.8;"},{"baseVals":{"usedots":1,"thick":1,"scaling":5.925558,"smoothing":0,"g":0,"b":0,"a":0.66,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt7 = q7;\\nt8 = q8;","point_eqs_eel":"sample = 1-sample;\\nxxx = xx;\\nyyy = yy;\\nxx = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2\\n+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;\\n\\nyy = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6\\n+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;\\n\\nd = 1/sqrt(sqr(xx-xxx)+sqr(yy-yyy));\\ndd = dd*0.95 + (value1);\\nddd = dd*sample*(1-sample)*d;\\n\\nx = xx + (yy-yyy)*ddd;\\ny = yy - (xx-xxx)*ddd;"},{"baseVals":{"thick":1,"scaling":5.925558,"smoothing":0,"r":0.65,"g":0.45,"enabled":0},"init_eqs_eel":"t2 = 0","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt7 = q7;\\nt8 = q8;","point_eqs_eel":"sample = 1-sample;\\nxxx = xx;\\nyyy = yy;\\nxx = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2\\n+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;\\n\\nyy = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6\\n+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;\\n\\nd = 1/sqrt(sqr(xx-xxx)+sqr(yy-yyy));\\ndd = dd*0.95 + (value1);\\nddd = dd*sample*(1-sample)*d;\\nddd = sample*(1-sample)*sin(sample*200)*d*0.05;\\nx = xx + (yy-yyy)*ddd;\\ny = yy - (xx-xxx)*ddd;"}],"init_eqs_eel":"x1 = 0;\\ny1 = 0;","frame_eqs_eel":"decay = 0.25;\\nxx1 = xx1*0.9 + (bass)*0.01;\\nxx2 = xx2*0.9 + (treb)*0.01;\\nyy1 = yy1*0.94 + (treb+bass)*0.0075;\\n\\nx1 = 0.5 + (xx1-xx2)*2;\\ny1 = 0.4 + yy1;\\n\\nx1 = max(0,min(1,x1));\\ny1 = max(0,min(1,y1));\\n//x2 = 0;y2 = 0;x3 = 0;y3 = 0;x4 = 0;y4 = 0;\\n\\nspring = 50;\\ngrav = 2;\\nresist = 5;\\nbounce = 0.75;\\ndt = 0.0005;\\n\\nspx2 = (x1+x3-2*x2)*spring;\\nspy2 = (y1+y3-2*y2)*spring;\\nspx3 = (x2+x4-2*x3)*spring;\\nspy3 = (y2+y4-2*y3)*spring;\\nspx4 = (x3-x4)*spring;\\nspy4 = (y3-y4)*spring;\\n\\nvx2 = vx2*(1-resist*dt) + dt*(spx2);\\nvy2 = vy2*(1-resist*dt) + dt*(spy2-grav);\\nvx3 = vx3*(1-resist*dt) + dt*(spx3);\\nvy3 = vy3*(1-resist*dt) + dt*(spy3-grav);\\nvx4 = vx4*(1-resist*dt) + dt*(spx4);\\nvy4 = vy4*(1-resist*dt) + dt*(spy4-grav);\\n\\nx2 = x2 + vx2;\\ny2 = y2 + vy2;\\nx3 = x3 + vx3;\\ny3 = y3 + vy3;\\nx4 = x4 + vx4;\\ny4 = y4 + vy4;\\n\\nvx2 = if(above(x2,0.1),vx2,abs(vx2)*bounce);\\nvx2 = if(below(x2,0.9),vx2,-abs(vx2)*bounce);\\nvx3 = if(above(x3,0.1),vx3,abs(vx3)*bounce);\\nvx3 = if(below(x3,0.9),vx3,-abs(vx3)*bounce);\\nvx4 = if(above(x4,0.1),vx4,abs(vx4)*bounce);\\nvx4 = if(below(x4,0.9),vx4,-abs(vx4)*bounce);\\n\\nvy2 = if(above(y2,0),vy2,abs(vy2)*bounce);\\nvy2 = if(below(y2,1),vy2,-abs(vy2)*bounce);\\nvy3 = if(above(y3,0),vy3,abs(vy3)*bounce);\\nvy3 = if(below(y3,1),vy3,-abs(vy3)*bounce);\\nvy4 = if(above(y4,0),vy4,abs(vy4)*bounce);\\nvy4 = if(below(y4,1),vy4,-abs(vy4)*bounce);\\n\\n\\nq1 = x1;\\nq2 = x2;\\nq3 = x3;\\nq4 = x4;\\n\\nq5 = y1;\\nq6 = y2;\\nq7 = y3;\\nq8 = y4;\\n\\nmonitor = ry4;\\n\\nzoom = 1;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 my_uv_1;\\n  vec3 ret_2;\\n  float tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur2, \\n    (uv + vec2(0.005, 0.0))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    (uv - vec2(0.005, 0.0))\\n  ).xyz * scale2) + bias2)).y;\\n  float tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur2, \\n    (uv + vec2(0.0, 0.005))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    (uv - vec2(0.0, 0.005))\\n  ).xyz * scale2) + bias2)).y;\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = tmpvar_3;\\n  tmpvar_5.y = tmpvar_4;\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv - (tmpvar_5 * 0.01));\\n  ret_2.y = texture (sampler_fc_main, (tmpvar_6 - floor(tmpvar_6))).y;\\n  ret_2.y = (ret_2.y + ((ret_2.y - \\n    ((texture (sampler_blur3, (tmpvar_6 - floor(tmpvar_6))).xyz * scale3) + bias3)\\n  .y) * 0.1));\\n  vec2 tmpvar_7;\\n  tmpvar_7 = floor(uv);\\n  ret_2.y = (ret_2.y + (0.006 - (\\n    ((texture (sampler_blur3, (uv - tmpvar_7)).xyz * scale3) + bias3)\\n  .x * 5.0)));\\n  ret_2.y = ret_2.y;\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = -(tmpvar_4);\\n  tmpvar_8.y = tmpvar_3;\\n  my_uv_1 = (tmpvar_8 * 0.05);\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = (((texture (sampler_blur2, \\n    (uv + vec2(0.01, 0.0))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    (uv - vec2(0.01, 0.0))\\n  ).xyz * scale2) + bias2)).z;\\n  tmpvar_9.y = (((texture (sampler_blur2, \\n    (uv + vec2(0.0, 0.01))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    (uv - vec2(0.0, 0.01))\\n  ).xyz * scale2) + bias2)).z;\\n  my_uv_1 = (my_uv_1 + (uv - (tmpvar_9 * 0.005)));\\n  ret_2.z = texture (sampler_fw_main, (my_uv_1 - floor(my_uv_1))).z;\\n  ret_2.z = (ret_2.z + ((ret_2.z - \\n    ((texture (sampler_blur3, (my_uv_1 - floor(my_uv_1))).xyz * scale3) + bias3)\\n  .z) * 0.13));\\n  ret_2.z = (ret_2.z * 0.95);\\n  ret_2.z = (ret_2.z + ((0.03 - \\n    ((texture (sampler_blur3, (uv - tmpvar_7)).xyz * scale3) + bias3)\\n  .x) - (texture (sampler_main, \\n    (my_uv_1 - floor(my_uv_1))\\n  ).y * 0.05)));\\n  ret_2.x = (texture (sampler_main, uv_orig).x - 0.3);\\n  vec4 tmpvar_10;\\n  tmpvar_10.w = 1.0;\\n  tmpvar_10.xyz = ret_2;\\n  ret = tmpvar_10.xyz;\\n }","comp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1 = texture (sampler_main, uv);\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (uv - 0.5);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = mix ((mix (\\n    mix (mix ((mix (vec3(1.0, 1.0, 0.5), vec3(0.15, 0.0, 0.2), vec3(\\n      (1.0 - ((texture (sampler_blur3, (vec2(0.51, 0.5) + tmpvar_2)).xyz * scale3) + bias3).x)\\n    )) * (vec3(1.0, 1.0, 1.0) - \\n      ((texture (sampler_blur2, uv).xyz * scale2) + bias2)\\n    .xxx)), vec3(-0.2, 0.0, 0.5), ((texture (sampler_blur1, \\n      (vec2(0.5, 0.5) + (tmpvar_2 * 0.96))\\n    ).xyz * scale1) + bias1).xxx), vec3(0.9, 0.7, 0.0), tmpvar_1.xxx)\\n  , vec3(0.5, 0.5, 0.0), tmpvar_1.yyy) * (vec3(1.0, 1.0, 1.0) - vec3(\\n    ((((texture (sampler_blur1, uv).xyz * scale1) + bias1).z * 2.0) - tmpvar_1.y)\\n  ))), vec3(0.5, 0.0, 0.1), tmpvar_1.zzz);\\n  ret = tmpvar_3.xyz;\\n }"}')},8218:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_orient":2,"wave_mode":1,"wave_thick":1,"wave_brighten":0,"wrap":0,"wave_a":0.004,"wave_scale":0.01,"wave_smoothing":0,"wave_mystery":-0.44,"modwavealphastart":1,"modwavealphaend":1,"warpanimspeed":1.311,"warpscale":8.311,"zoomexp":5.20652,"warp":0.13291,"wave_y":0.04,"ob_size":0.005,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":0,"mv_y":0,"mv_l":1,"mv_g":0.91,"mv_b":0.71,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"additive":1,"thickoutline":1,"y":0.75,"rad":0.07493,"tex_zoom":0.73458,"g":1,"g2":0,"border_a":0},"init_eqs_eel":"vx = 0","frame_eqs_eel":"x = q4;\\ny = q8;"},{"baseVals":{"enabled":1,"sides":100,"additive":1,"thickoutline":1,"textured":1,"x":0.7,"y":0.3,"rad":0.6623,"ang":2.45044,"tex_zoom":0.74934,"g":0.1,"b":0.1,"r2":1,"g2":0.1,"b2":0.1,"a2":1,"border_a":0},"init_eqs_eel":"xx = 0.5;\\nyy = 0.4;","frame_eqs_eel":"d = sqrt( sqr(xx-q4)+sqr(yy-q8));\\n\\nxx = if(below(d,0.15),0.4+rand(200)/1000,xx);\\nyy = if(below(d,0.15),0.3+rand(400)/1000,yy);\\naang = if(below(d,0.12),rand(1000)/1000,aang);\\nang =aang*4*asin(1);\\nx = xx;\\ny = yy;"},{"baseVals":{"enabled":1,"sides":100,"additive":1,"thickoutline":1,"textured":1,"x":0.43,"y":0.6,"rad":1.16781,"ang":5.96903,"tex_zoom":0.67165,"r2":1,"g2":0,"a2":1,"border_a":0},"init_eqs_eel":"xx = 0.5;\\nyy = 0.4;","frame_eqs_eel":"d = sqrt( sqr(xx-q4)+sqr(yy-q8));\\n\\nxx = if(below(d,0.15),0.4+rand(200)/1000,xx);\\nyy = if(below(d,0.15),0.3+rand(400)/1000,yy);\\naang = if(below(d,0.12),rand(1000)/1000,aang);\\nang =aang*4*asin(1);\\nx = xx;\\ny = yy;"},{"baseVals":{"sides":100,"additive":1,"thickoutline":1,"y":0.75,"rad":0.07059,"tex_zoom":0.73458,"g":0.5,"b":0.5,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"vx = 0","frame_eqs_eel":"x = q1;\\ny = q5;"}],"waves":[{"baseVals":{"usedots":1,"scaling":2.44415,"smoothing":0,"a":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t1 = 0;\\nv = 0.01;\\nj = j + (bass)*0.01;\\nj2 = j2 + (mid_att)*0.01;\\nj3 = j3 + (treb_att)*0.01;\\nt2 = j;\\nt3 = j2;\\nt4 = j3;\\n//t5 = 0;\\nk = k*0.99 + 10*mid/fps;\\nt5 = -k;\\n\\ncl1 = cl1 + 0.002;\\ncl1 = if(above(cl1,1),0,cl1);\\ncl1 = if(below(cl1,0),1,cl1);\\nt8 = cl1;\\n\\ncl2 = cl2 -1*q1;\\ncl2 = if(above(cl2,1),0,cl2);\\ncl2 = if(below(cl2,0),1,cl2);\\nt7 = cl2;\\n\\ncl3 = cl3 +0.001;\\ncl3 = if(above(cl3,1),0,cl3);\\ncl3 = if(below(cl3,0),1,cl3);\\nt6 = cl3;","point_eqs_eel":"xx = ((sample*0983624912364)%10000000+100)/10000000;\\nyy = ((xx*1896575575)%10000000+100)/10000000;\\nzz = ((yy*58652340875)%10000000+100)/10000000;\\n\\n\\nd = sqrt(sqr(xx)+sqr(yy)+sqr(zz));\\n\\nzz = zz + t8 - if(above(zz+t8,1),1,0) - 0.5;\\nxx = xx + t7 - if(above(xx+t7,1),1,0) - 0.5;\\nyy = yy + t6 - if(above(yy+t6,1),1,0) - 0.5;\\n\\nv = 0.001;\\n\\nw = 1;// (sample*sin(time*0.3)*0.01-1);\\nbb = d*d*0.5;\\nn= 0.3;\\ns1 = sin(sin(t2*w+bb)*n);\\ns2 = sin(sin(t3*w+bb)*n);\\ns3 = sin(sin(t4*w+bb)*n);\\nc1 = cos(sin(t2*w+bb)*n);\\nc2 = cos(sin(t3*w+bb)*n);\\nc3 = cos(sin(t4*w+bb)*n);\\n\\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\\n\\nzoom = .5*(1/(z+0.5));\\nx = 0.5 + zoom*x1 + sin(time*0.1)*0;;\\ny = 0.5 + zoom*y1 + cos(time*0.16801)*0;\\n\\npi3 = 3.1415*2*0.3333;\\nt = z*2+t2*1;\\nc=3;\\n//r = sin(t)*c;\\n\\n//g = sin(t+pi3)*c;\\n\\n//b = sin(t-pi3)*c;\\n\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\n\\na = 0.4;"},{"baseVals":{"scaling":7.7518,"smoothing":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t8 = 1;\\n\\nt1 = 0.5;\\nt2 = 0.9;","point_eqs_eel":"d = d*0.85 + (value1)*1;\\n\\nx = 0.5 + d*sample*(1-sample);\\ny = 0.9 - sample*0.8;"},{"baseVals":{"usedots":1,"thick":1,"scaling":5.92556,"smoothing":0,"g":0,"b":0,"a":0.66,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt7 = q7;\\nt8 = q8;","point_eqs_eel":"sample = 1-sample;\\nxxx = xx;\\nyyy = yy;\\nxx = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2\\n+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;\\n\\nyy = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6\\n+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;\\n\\nd = 1/sqrt(sqr(xx-xxx)+sqr(yy-yyy));\\ndd = dd*0.95 + (value1);\\nddd = dd*sample*(1-sample)*d;\\n\\nx = xx + (yy-yyy)*ddd;\\ny = yy - (xx-xxx)*ddd;"},{"baseVals":{"thick":1,"scaling":5.92556,"smoothing":0,"r":0.65,"g":0.45,"enabled":0},"init_eqs_eel":"t2 = 0","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt7 = q7;\\nt8 = q8;","point_eqs_eel":"sample = 1-sample;\\nxxx = xx;\\nyyy = yy;\\nxx = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2\\n+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;\\n\\nyy = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6\\n+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;\\n\\nd = 1/sqrt(sqr(xx-xxx)+sqr(yy-yyy));\\ndd = dd*0.95 + (value1);\\nddd = dd*sample*(1-sample)*d;\\nddd = sample*(1-sample)*sin(sample*200)*d*0.05;\\nx = xx + (yy-yyy)*ddd;\\ny = yy - (xx-xxx)*ddd;"}],"init_eqs_eel":"x1 = 0;\\ny1 = 0;","frame_eqs_eel":"decay = 0.25;\\nxx1 = xx1*0.9 + (bass)*0.01;\\nxx2 = xx2*0.9 + (treb)*0.01;\\nyy1 = yy1*0.94 + (treb+bass)*0.0075;\\n\\nx1 = 0.5 + (xx1-xx2)*2;\\ny1 = 0.4 + yy1;\\n\\nx1 = max(0,min(1,x1));\\ny1 = max(0,min(1,y1));\\n//x2 = 0;y2 = 0;x3 = 0;y3 = 0;x4 = 0;y4 = 0;\\n\\nspring = 50;\\ngrav = 2;\\nresist = 5;\\nbounce = 0.75;\\ndt = 0.00015*60/fps;\\n\\nspx2 = (x1+x3-2*x2)*spring;\\nspy2 = (y1+y3-2*y2)*spring;\\nspx3 = (x2+x4-2*x3)*spring;\\nspy3 = (y2+y4-2*y3)*spring;\\nspx4 = (x3-x4)*spring;\\nspy4 = (y3-y4)*spring;\\n\\nvx2 = vx2*(1-resist*dt) + dt*(spx2);\\nvy2 = vy2*(1-resist*dt) + dt*(spy2-grav);\\nvx3 = vx3*(1-resist*dt) + dt*(spx3);\\nvy3 = vy3*(1-resist*dt) + dt*(spy3-grav);\\nvx4 = vx4*(1-resist*dt) + dt*(spx4);\\nvy4 = vy4*(1-resist*dt) + dt*(spy4-grav);\\n\\nx2 = x2 + vx2;\\ny2 = y2 + vy2;\\nx3 = x3 + vx3;\\ny3 = y3 + vy3;\\nx4 = x4 + vx4;\\ny4 = y4 + vy4;\\n\\nvx2 = if(above(x2,0.1),vx2,abs(vx2)*bounce);\\nvx2 = if(below(x2,0.9),vx2,-abs(vx2)*bounce);\\nvx3 = if(above(x3,0.1),vx3,abs(vx3)*bounce);\\nvx3 = if(below(x3,0.9),vx3,-abs(vx3)*bounce);\\nvx4 = if(above(x4,0.1),vx4,abs(vx4)*bounce);\\nvx4 = if(below(x4,0.9),vx4,-abs(vx4)*bounce);\\n\\nvy2 = if(above(y2,0),vy2,abs(vy2)*bounce);\\nvy2 = if(below(y2,1),vy2,-abs(vy2)*bounce);\\nvy3 = if(above(y3,0),vy3,abs(vy3)*bounce);\\nvy3 = if(below(y3,1),vy3,-abs(vy3)*bounce);\\nvy4 = if(above(y4,0),vy4,abs(vy4)*bounce);\\nvy4 = if(below(y4,1),vy4,-abs(vy4)*bounce);\\n\\n\\nq1 = x1;\\nq2 = x2;\\nq3 = x3;\\nq4 = x4;\\n\\nq5 = y1;\\nq6 = y2;\\nq7 = y3;\\nq8 = y4;\\n\\nmonitor = ry4;\\n\\nzoom = 1.0004;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 my_uv_1;\\n  vec3 ret_2;\\n  float tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur2, \\n    (uv + vec2(0.005, 0.0))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    (uv - vec2(0.005, 0.0))\\n  ).xyz * scale2) + bias2)).y;\\n  float tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur2, \\n    (uv + vec2(0.0, 0.005))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    (uv - vec2(0.0, 0.005))\\n  ).xyz * scale2) + bias2)).y;\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = tmpvar_3;\\n  tmpvar_5.y = tmpvar_4;\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv - (tmpvar_5 * 0.01));\\n  ret_2.y = texture (sampler_fc_main, (tmpvar_6 - floor(tmpvar_6))).y;\\n  ret_2.y = (ret_2.y + ((ret_2.y - \\n    ((texture (sampler_blur3, (tmpvar_6 - floor(tmpvar_6))).xyz * scale3) + bias3)\\n  .y) * 0.1));\\n  vec2 tmpvar_7;\\n  tmpvar_7 = floor(uv);\\n  ret_2.y = (ret_2.y + (0.006 - (\\n    ((texture (sampler_blur3, (uv - tmpvar_7)).xyz * scale3) + bias3)\\n  .x * 5.0)));\\n  ret_2.y = ret_2.y;\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = -(tmpvar_4);\\n  tmpvar_8.y = tmpvar_3;\\n  my_uv_1 = (tmpvar_8 * 0.05);\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = (((texture (sampler_blur2, \\n    (uv + vec2(0.01, 0.0))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    (uv - vec2(0.01, 0.0))\\n  ).xyz * scale2) + bias2)).z;\\n  tmpvar_9.y = (((texture (sampler_blur2, \\n    (uv + vec2(0.0, 0.01))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    (uv - vec2(0.0, 0.01))\\n  ).xyz * scale2) + bias2)).z;\\n  my_uv_1 = (my_uv_1 + (uv - (tmpvar_9 * 0.005)));\\n  ret_2.z = texture (sampler_fw_main, (my_uv_1 - floor(my_uv_1))).z;\\n  ret_2.z = (ret_2.z + ((ret_2.z - \\n    ((texture (sampler_blur3, (my_uv_1 - floor(my_uv_1))).xyz * scale3) + bias3)\\n  .z) * 0.13));\\n  ret_2.z = (ret_2.z * 0.95);\\n  ret_2.z = (ret_2.z + ((0.03 - \\n    ((texture (sampler_blur3, (uv - tmpvar_7)).xyz * scale3) + bias3)\\n  .x) - (texture (sampler_main, \\n    (my_uv_1 - floor(my_uv_1))\\n  ).y * 0.05)));\\n  ret_2.x = (texture (sampler_main, uv_orig).x - 0.3);\\n  vec4 tmpvar_10;\\n  tmpvar_10.w = 1.0;\\n  tmpvar_10.xyz = ret_2;\\n  ret = tmpvar_10.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 8.0);\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = tmpvar_3.y;\\n  tmpvar_5.y = tmpvar_4.y;\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv + (tmpvar_5 * 0.1));\\n  vec4 tmpvar_7;\\n  tmpvar_7 = texture (sampler_main, uv);\\n  ret_1 = (((\\n    ((texture (sampler_blur2, tmpvar_6).xyz * scale2) + bias2)\\n  .x * \\n    clamp ((1.0 - tmpvar_7.z), 0.0, 1.0)\\n  ) * pow (hue_shader.yxz, vec3(8.0, 8.0, 8.0))) * 3.0);\\n  ret_1 = (mix (ret_1, (\\n    pow (hue_shader.yzx, vec3(8.0, 8.0, 8.0))\\n   * 1.4), vec3((\\n    (texture (sampler_main, tmpvar_6).x * 0.8)\\n   + \\n    ((texture (sampler_blur1, tmpvar_6).xyz * scale1) + bias1)\\n  .x))) * clamp ((1.0 - \\n    (((texture (sampler_blur1, uv).xyz * scale1) + bias1).y * 4.0)\\n  ), 0.0, 1.0));\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = tmpvar_3.y;\\n  tmpvar_8.y = tmpvar_4.y;\\n  vec3 tmpvar_9;\\n  vec3 tmpvar_10;\\n  tmpvar_10 = pow (hue_shader, vec3(8.0, 8.0, 8.0));\\n  tmpvar_9 = mix (mix (ret_1, vec3(1.0, 1.0, 1.0), (\\n    (tmpvar_10 * texture (sampler_main, clamp ((uv - (tmpvar_8 * 0.04)), 0.0, 1.0)).z)\\n   * 1.2)), (tmpvar_10.zxy * 1.8), tmpvar_7.yyy);\\n  ret_1 = tmpvar_9;\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 1.0;\\n  tmpvar_11.xyz = tmpvar_9;\\n  ret = tmpvar_11.xyz;\\n }"}')},933:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.56,"decay":1,"echo_zoom":0.362,"echo_orient":1,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"fshader":1,"zoom":1.0039,"warp":0.19788,"sx":0.99967,"sy":0.9999,"wave_g":0.65,"wave_b":0.65,"ob_size":0,"ob_a":1,"ib_size":0.005,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"sides":5,"additive":1,"num_inst":2,"x":0.49,"rad":0.11589,"tex_zoom":4.36077,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = rand(1000)/1000;\\ny = rand(1000)/1000;\\nang = rand(150)/100;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"thick":1,"r":0,"g":0.3,"b":0.75,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));"},{"baseVals":{"thick":1,"r":0,"b":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));"},{"baseVals":{"thick":1,"g":0.5,"b":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));"},{"baseVals":{"thick":1,"r":0.4,"g":0,"b":0.6,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));"}],"init_eqs_eel":"","frame_eqs_eel":"warp = 0;\\nzoom = 1.0;\\n\\nbb = bb*0.99 + bass*0.02;\\nmm = mm*0.99 + mid*0.02;\\ntt = tt*0.99 + treb*0.02;\\n\\nmx = max(max(bb,mm),tt);\\nmn = min(min(bb,mm),tt);\\n\\nib_r = (bb-mn)/(mx-mn);\\nib_b = (mm-mn)/(mx-mn);\\nib_g = (tt-mn)/(mx-mn);","pixel_eqs_eel":"// have a nice warp effect? - rotate it like a shape!\\n\\n  angle = asin(1)*0.5 + sin(time*0.05)*asin(1);\\n\\n/////////////////////////////////////////////////////////\\nX1 = (x-0.5)*aspectx; // center\\nY1 = (y-0.5)*aspecty;\\nx = cos(-angle)*X1 -sin(-angle)*Y1; // rotate the original x/y coordinates\\ny = sin(-angle)*X1 +cos(-angle)*Y1;\\n/////////////////////////////////////////////////////////\\n// x = x + 0.5;\\n// y = y + 0.5;\\n// place your original code below (so far center is at 0,0)\\n\\n\\n  t = time*0.25;\\n  v = 0.0005;\\n  n = 11;\\n\\n  dx = v*sin(y*n+t); // these are the 2 lines for my mushroom motion\\n  dy = v*sin(x*n+t); // insert your per-vertex-code-to-rotate here (and shift back center to 0.5/0.5 if needed)\\n\\n\\n\\n/////////////////////////////////////////////////////////\\ndx1 = cos(angle)*dx - sin(angle)*dy; // and finally rotate the resulting vector for the rotated domain\\ndy1 = sin(angle)*dx + cos(angle)*dy;\\ndx = dx1*aspectx;\\ndy = dy1*aspecty;\\n/////////////////////////////////////////////////////////","warp":"vec2 xlat_mutabled;\\nvec3 xlat_mutabledx;\\nvec3 xlat_mutabledy;\\n shader_body { \\n  vec3 ret_1;\\n  vec3 tmpvar_2;\\n  tmpvar_2 = (texture (sampler_noise_lq, ((\\n    (uv_orig * texsize.xy)\\n   * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5);\\n  xlat_mutabled = (texsize.zw * 4.0);\\n  xlat_mutabledx = (((2.0 * \\n    ((texture (sampler_blur1, (uv_orig + (vec2(1.0, 0.0) * xlat_mutabled))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv_orig - (vec2(1.0, 0.0) * xlat_mutabled))).xyz * scale1) + bias1)\\n  )) * 0.5);\\n  xlat_mutabledy = (((2.0 * \\n    ((texture (sampler_blur1, (uv_orig + (vec2(0.0, 1.0) * xlat_mutabled))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv_orig - (vec2(0.0, 1.0) * xlat_mutabled))).xyz * scale1) + bias1)\\n  )) * 0.5);\\n  xlat_mutabled = uv;\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = xlat_mutabledx.y;\\n  tmpvar_3.y = xlat_mutabledy.y;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = xlat_mutabledx.z;\\n  tmpvar_4.y = xlat_mutabledy.z;\\n  vec4 tmpvar_5;\\n  tmpvar_5 = texture (sampler_main, uv_orig);\\n  ret_1.y = ((texture (sampler_main, (uv - \\n    ((tmpvar_3 * texsize.zw) * 6.0)\\n  )).y - 0.008) + ((1.0 - tmpvar_5.x) * 0.018));\\n  ret_1.z = ((texture (sampler_main, (uv - \\n    ((tmpvar_4 * texsize.zw) * 6.0)\\n  )).z - 0.008) + (tmpvar_5.x * 0.018));\\n  ret_1.x = texture (sampler_fc_main, (uv + ((tmpvar_2.xy * texsize.zw) * 0.5))).x;\\n  ret_1.x = (ret_1.x + ((\\n    ((2.0 * ret_1.x) - (2.0 * ((texture (sampler_blur3, uv).xyz * scale3) + bias3).x))\\n   * 0.075) + (tmpvar_2 * 0.0042)).x);\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = ret_1;\\n  ret = tmpvar_6.xyz;\\n }","comp":" shader_body { \\n  vec2 dz_1;\\n  vec3 dy_2;\\n  vec3 dx_3;\\n  vec2 d_4;\\n  vec3 ret_5;\\n  vec2 tmpvar_6;\\n  vec2 tmpvar_7;\\n  tmpvar_7 = (vec2(1.0, 0.0) * texsize.zw);\\n  tmpvar_6.x = (texture (sampler_main, (uv + tmpvar_7)).xyz - texture (sampler_main, (uv - tmpvar_7)).xyz).y;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (vec2(0.0, 1.0) * texsize.zw);\\n  tmpvar_6.y = (texture (sampler_main, (uv + tmpvar_8)).xyz - texture (sampler_main, (uv - tmpvar_8)).xyz).y;\\n  d_4 = (texsize.zw * 2.0);\\n  dx_3 = (((2.0 * \\n    ((texture (sampler_blur1, (uv + (vec2(1.0, 0.0) * d_4))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv - (vec2(1.0, 0.0) * d_4))).xyz * scale1) + bias1)\\n  )) * 0.5);\\n  dy_2 = (((2.0 * \\n    ((texture (sampler_blur1, (uv + (vec2(0.0, 1.0) * d_4))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv - (vec2(0.0, 1.0) * d_4))).xyz * scale1) + bias1)\\n  )) * 0.5);\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = dx_3.y;\\n  tmpvar_9.y = dy_2.y;\\n  dz_1 = ((tmpvar_6 * 2.0) + tmpvar_9);\\n  vec4 tmpvar_10;\\n  tmpvar_10 = texture (sampler_blur1, uv);\\n  ret_5 = (vec3(((\\n    pow ((sqrt(dot (dz_1, dz_1)) * 0.8), 0.7)\\n   * 2.0) + (\\n    ((tmpvar_10.xyz * scale1) + bias1)\\n  .y * 2.0))) * vec3(0.2, 0.3, 0.6));\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = q19;\\n  tmpvar_11.y = q20;\\n  vec2 tmpvar_12;\\n  tmpvar_12 = fract(((0.5 + \\n    (uv - 0.5)\\n  ) + (tmpvar_11 * vec2(-1.0, 1.0))));\\n  vec2 tmpvar_13;\\n  tmpvar_13.x = dx_3.y;\\n  tmpvar_13.y = dy_2.y;\\n  vec3 tmpvar_14;\\n  tmpvar_14 = mix (((\\n    (mix (ret_5, vec3(3.0, 2.0, 1.0), ((texture (sampler_blur3, \\n      (tmpvar_12 - tmpvar_13)\\n    ).xyz * scale3) + bias3).xxx) * (vec3(1.0, 1.0, 1.0) - ((texture (sampler_blur2, \\n      (tmpvar_12 - dz_1)\\n    ).xyz * scale2) + bias2).xxx))\\n   * \\n    (vec3(1.0, 1.0, 1.0) - vec3((0.75 * texture (sampler_main, tmpvar_12).x)))\\n  ) * (vec3(1.0, 1.0, 1.0) - vec3(\\n    (((tmpvar_10.xyz * scale1) + bias1).z * 4.0)\\n  ))), vec3(2.0, 2.0, 2.0), texture (sampler_main, uv).zzz);\\n  ret_5 = tmpvar_14;\\n  vec4 tmpvar_15;\\n  tmpvar_15.w = 1.0;\\n  tmpvar_15.xyz = tmpvar_14;\\n  ret = tmpvar_15.xyz;\\n }"}')},9623:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":4,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"wave_thick":1,"wave_brighten":0,"wave_a":0.004,"wave_scale":0.01,"wave_smoothing":0,"wave_mystery":-0.44,"modwavealphastart":1,"modwavealphaend":1,"warpanimspeed":0.01,"warpscale":100,"zoomexp":0.24298,"zoom":0.9901,"warp":0.01,"wave_y":0.04,"ob_size":0,"ob_g":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":64,"mv_y":48,"mv_l":0,"mv_b":0,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"thickoutline":1,"rad":0.01,"tex_ang":0.12566,"tex_zoom":1.51878,"r":0.05,"a":0.1,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"thickoutline":1,"textured":1,"rad":0.80013,"ang":4.64954,"tex_zoom":1.24471,"g":1,"b":1,"r2":1,"b2":1,"a2":0.77,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"thickoutline":1,"x":1,"rad":3.0054,"tex_ang":0.12566,"tex_zoom":1.51878,"r":0,"g":1,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"thickoutline":1,"x":1,"rad":0.39872,"tex_ang":0.12566,"tex_zoom":1.51878,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"usedots":1,"scaling":2.44415,"smoothing":0,"a":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t1 = 0;\\nv = 0.01;\\nj = j + (bass)*0.01;\\nj2 = j2 + (mid_att)*0.01;\\nj3 = j3 + (treb_att)*0.01;\\nt2 = j;\\nt3 = j2;\\nt4 = j3;\\n//t5 = 0;\\nk = k*0.99 + 10*mid/fps;\\nt5 = -k;\\n\\ncl1 = cl1 + 0.002;\\ncl1 = if(above(cl1,1),0,cl1);\\ncl1 = if(below(cl1,0),1,cl1);\\nt8 = cl1;\\n\\ncl2 = cl2 -1*q1;\\ncl2 = if(above(cl2,1),0,cl2);\\ncl2 = if(below(cl2,0),1,cl2);\\nt7 = cl2;\\n\\ncl3 = cl3 +0.001;\\ncl3 = if(above(cl3,1),0,cl3);\\ncl3 = if(below(cl3,0),1,cl3);\\nt6 = cl3;","point_eqs_eel":"xx = ((sample*0983624912364)%10000000+100)/10000000;\\nyy = ((xx*1896575575)%10000000+100)/10000000;\\nzz = ((yy*58652340875)%10000000+100)/10000000;\\n\\n\\nd = sqrt(sqr(xx)+sqr(yy)+sqr(zz));\\n\\nzz = zz + t8 - if(above(zz+t8,1),1,0) - 0.5;\\nxx = xx + t7 - if(above(xx+t7,1),1,0) - 0.5;\\nyy = yy + t6 - if(above(yy+t6,1),1,0) - 0.5;\\n\\nv = 0.001;\\n\\nw = 1;// (sample*sin(time*0.3)*0.01-1);\\nbb = d*d*0.5;\\nn= 0.3;\\ns1 = sin(sin(t2*w+bb)*n);\\ns2 = sin(sin(t3*w+bb)*n);\\ns3 = sin(sin(t4*w+bb)*n);\\nc1 = cos(sin(t2*w+bb)*n);\\nc2 = cos(sin(t3*w+bb)*n);\\nc3 = cos(sin(t4*w+bb)*n);\\n\\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\\n\\nzoom = .5*(1/(z+0.5));\\nx = 0.5 + zoom*x1 + sin(time*0.1)*0.;;\\ny = 0.5 + zoom*y1 + cos(time*0.16801)*0.;\\n\\npi3 = 3.1415*2*0.3333;\\nt = z*2+t2*1;\\nc=3;\\n//r = sin(t)*c;\\n\\n//g = sin(t+pi3)*c;\\n\\n//b = sin(t-pi3)*c;\\n\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\n\\na = 0.4;"},{"baseVals":{"scaling":2.44415,"smoothing":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t8 = 1;","point_eqs_eel":"t8 = -t8;\\ny = sample;\\nx = 0.5 + t8*0.005;\\n\\npi3 = 3.1415*2*0.3333;\\nt = time + sample*2;\\nc=2;\\n\\nr = sin(t)*c;\\ng = sin(t+pi3)*c;\\n\\nb = sin(t-pi3)*c;\\n\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\n"},{"baseVals":{"thick":1,"additive":1,"scaling":100,"smoothing":0.6,"r":0,"g":0.4,"a":0.3,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt7 = q7;\\nt8 = q8;","point_eqs_eel":"sample = 1-sample;\\nxxx = xx;\\nyyy = yy;\\nxx = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2\\n+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;\\n\\nyy = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6\\n+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;\\nd = 1/sqrt(sqr(xx-xxx)+sqr(yy-yyy));\\nx = xx + sample*(1-sample)*(value1-value2)*(yy-yyy)*d;\\ny = yy - sample*(1-sample)*(value1-value2)*(xx-xxx)*d;"},{"baseVals":{"usedots":1,"scaling":2.44415,"smoothing":0,"r":0,"g":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t8 = 1;","point_eqs_eel":"t8 = -t8;\\ny = (1+t8)*0.01;\\nx = sample;"}],"init_eqs_eel":"x1 = 0.9;\\ny1 = 0.5;\\n\\nx2 = 0.5; y2 = 0.5;\\nx3 = 0.5; y3 = 0.5;\\nx4 = 0.5; y4 = 0.5;","frame_eqs_eel":"zoom =1;// 0.999;\\nwarp = 0;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 my_uv_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (0.02 * aspect.zw);\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur2, \\n    ((uv + (vec2(1.0, 0.0) * tmpvar_3)) - floor((uv + (vec2(1.0, 0.0) * tmpvar_3))))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    ((uv - (vec2(1.0, 0.0) * tmpvar_3)) - floor((uv - (vec2(1.0, 0.0) * tmpvar_3))))\\n  ).xyz * scale2) + bias2));\\n  vec3 tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_blur2, \\n    ((uv + (vec2(0.0, 1.0) * tmpvar_3)) - floor((uv + (vec2(0.0, 1.0) * tmpvar_3))))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    ((uv - (vec2(0.0, 1.0) * tmpvar_3)) - floor((uv - (vec2(0.0, 1.0) * tmpvar_3))))\\n  ).xyz * scale2) + bias2));\\n  vec3 tmpvar_6;\\n  tmpvar_6 = ((texture (sampler_blur1, uv).xyz * scale1) + bias1);\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = tmpvar_4.y;\\n  tmpvar_7.y = tmpvar_5.y;\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = tmpvar_5.x;\\n  tmpvar_8.y = -(tmpvar_4.x);\\n  vec2 tmpvar_9;\\n  tmpvar_9 = ((uv - (tmpvar_7 * vec2(0.01, 0.01))) - (tmpvar_8 * -0.02));\\n  ret_2.y = texture (sampler_fc_main, (tmpvar_9 - floor(tmpvar_9))).y;\\n  ret_2.y = (ret_2.y + ((\\n    (ret_2.y - tmpvar_6.y)\\n   * 0.02) + 0.005));\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = tmpvar_4.x;\\n  tmpvar_10.y = tmpvar_5.x;\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = tmpvar_5.z;\\n  tmpvar_11.y = -(tmpvar_4.z);\\n  my_uv_1 = ((uv - (tmpvar_10 * vec2(0.01, 0.01))) - (tmpvar_11 * -0.02));\\n  ret_2.x = texture (sampler_fc_main, (my_uv_1 - floor(my_uv_1))).x;\\n  ret_2.x = (ret_2.x + ((\\n    (ret_2.x - tmpvar_6.x)\\n   * 0.02) + 0.005));\\n  vec2 tmpvar_12;\\n  tmpvar_12.x = tmpvar_4.z;\\n  tmpvar_12.y = tmpvar_5.z;\\n  vec2 tmpvar_13;\\n  tmpvar_13.x = tmpvar_5.y;\\n  tmpvar_13.y = -(tmpvar_4.y);\\n  my_uv_1 = ((uv - (tmpvar_12 * vec2(0.01, 0.01))) - (tmpvar_13 * -0.02));\\n  ret_2.z = texture (sampler_fc_main, (my_uv_1 - floor(my_uv_1))).z;\\n  ret_2.z = (ret_2.z + ((\\n    (ret_2.z - tmpvar_6.z)\\n   * 0.02) + 0.005));\\n  vec4 tmpvar_14;\\n  tmpvar_14.w = 1.0;\\n  tmpvar_14.xyz = ret_2;\\n  ret = tmpvar_14.xyz;\\n }","comp":" shader_body { \\n  vec2 uv2_1;\\n  vec3 ret_2;\\n  uv2_1 = (uv + (vec2(1.0, 0.0) * texsize.zw));\\n  float tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(-1.0, 0.0) * texsize.zw));\\n  float tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(0.0, 1.0) * texsize.zw));\\n  float tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(0.0, -1.0) * texsize.zw));\\n  vec3 tmpvar_6;\\n  tmpvar_6.z = 0.14;\\n  tmpvar_6.x = (tmpvar_3 - tmpvar_4);\\n  tmpvar_6.y = (tmpvar_5 - ((\\n    (texture (sampler_main, uv2_1).xyz + (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4))\\n   + \\n    (((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2) * 0.15)\\n  ) + (\\n    ((texture (sampler_blur3, uv2_1).xyz * scale3) + bias3)\\n   * 0.1)).x);\\n  ret_2 = (0.5 + (0.5 * normalize(tmpvar_6)));\\n  vec2 x_7;\\n  x_7 = (ret_2.xy - 0.5);\\n  ret_2 = (ret_2 * clamp ((\\n    sqrt(dot (x_7, x_7))\\n   * 5.0), 0.0, 1.0));\\n  ret_2 = ret_2.xxy;\\n  ret_2 = (ret_2 + 1.15);\\n  ret_2 = (ret_2 * mix (ret_2, (ret_2 * \\n    (((texture (sampler_blur3, uv).xyz * scale3) + bias3) - ((texture (sampler_blur1, uv).xyz * scale1) + bias1))\\n  ), pow (hue_shader.zxy, ret_2)));\\n  ret_2 = (ret_2 * ret_2);\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = ret_2;\\n  ret = tmpvar_8.xyz;\\n }"}')},3397:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":2,"gammaadj":1.21,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"wave_thick":1,"wave_brighten":0,"wrap":0,"wave_a":0.004,"wave_scale":0.073,"wave_smoothing":0,"wave_mystery":-0.44,"modwavealphastart":1,"modwavealphaend":1,"warpanimspeed":0.01,"warpscale":100,"zoomexp":0.92178,"fshader":1,"zoom":0.9901,"warp":0.01,"wave_y":0.04,"ob_size":0.005,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0.5,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"sides":24,"rad":0.0639,"tex_ang":0.12566,"tex_zoom":1.51878,"r":0,"g":1,"a":0.96,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = q1;\\ny = q5;"},{"baseVals":{"sides":24,"rad":0.0639,"tex_ang":0.12566,"tex_zoom":1.51878,"a":0.96,"g2":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = q2;\\ny = q6;"},{"baseVals":{"sides":24,"rad":0.0639,"tex_ang":0.12566,"tex_zoom":1.51878,"r":0,"b":1,"a":0.96,"g2":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = q3;\\ny = q7;"},{"baseVals":{"sides":24,"rad":0.0639,"tex_ang":0.12566,"tex_zoom":1.51878,"g":1,"b":1,"a":0.96,"g2":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = q4;\\ny = q8;"}],"waves":[{"baseVals":{"enabled":1,"thick":1,"scaling":2.0231,"smoothing":0,"r":0,"b":0.33},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"","point_eqs_eel":"tt3 = tt3*0.6 + (value1)*1;\\ntt2 = tt2*0.7 + tt3*0.2;\\ntt1 = tt1*0.8 + tt2*0.1;\\nd = d*0.9 + tt1*0.2;\\n\\ny = 0.5 + d*sample*(1-sample)*6;\\nx =  -0.05 + sample*1.1;"},{"baseVals":{"thick":1,"additive":1,"scaling":1.69136,"smoothing":0,"g":0,"b":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt7 = q7;\\nt8 = q8;","point_eqs_eel":"sample = 1-sample;\\n\\nx = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2\\n+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;\\n\\ny = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6\\n+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;\\n\\nx = 0.5 + (x-0.5)*q9;\\ny = 0.5 + (y-0.5)*q10;\\n"},{"baseVals":{"enabled":1,"thick":1,"additive":1,"scaling":1.69136,"smoothing":0,"g":0,"b":0,"a":0.3},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"sample = 1-sample;\\nxxx = xx;\\nyyy = yy;\\nxx = pow(sample,5)*q1 + 5*pow(sample,4)*(1-sample)*q1 + 10*pow(sample,3)*sqr(1-sample)*q2\\n+ 10*sqr(sample)*pow(1-sample,3)*q3 + 5*pow(1-sample,4)*sample*q4 + pow(1-sample,5)*q4;\\n\\nyy = pow(sample,5)*q5 + 5*pow(sample,4)*(1-sample)*q5 + 10*pow(sample,3)*sqr(1-sample)*q6\\n+ 10*sqr(sample)*pow(1-sample,3)*q7 + 5*pow(1-sample,4)*sample*q8 + pow(1-sample,5)*q8;\\n\\nd = 1/sqrt(sqr(xx-xxx)+sqr(yy-yyy));\\ndd = sample*(1-sample)*sin(sample*180)*d*0.1;\\nx = xx + (yy-yyy)*dd;\\ny = yy - (xx-xxx)*dd;\\n\\nx = 0.5 + (x-0.5)*q9;\\ny = 0.5 + (y-0.5)*q10;\\n"},{"baseVals":{"usedots":1,"scaling":2.44415,"smoothing":0,"r":0,"g":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t8 = 1;","point_eqs_eel":"t8 = -t8;\\ny = (1+t8)*0.01;\\nx = sample;"}],"init_eqs_eel":"x1 = 0.9;\\ny1 = 0.5;\\n\\nx2 = 0.5; y2 = 0.5;\\nx3 = 0.5; y3 = 0.5;\\nx4 = 0.5; y4 = 0.5;","frame_eqs_eel":"zoom = 1;\\nwarp = 0;\\nwave_a = 0;\\n\\n// elastic thread code\\n\\nxx1 = xx1*0.9 + (bass)*0.01;\\nxx2 = xx2*0.9 + (treb)*0.01;\\nyy1 = yy1*0.94 + (treb+bass)*0.0075;\\nx1 = 0.5 + (xx1-xx2)*2;\\ny1 = 0.4 + yy1*1.5;\\ndt = 0.03/fps;\\nvx2 = vx2*(1-2*dt) + dt*((x1+x3-2*x2)*10);\\nvy2 = vy2*(1-2*dt) + dt*((y1+y3-2*y2)*10-0.5);\\nvx3 = vx3*(1-2*dt) + dt*((x2+x4-2*x3)*10);\\nvy3 = vy3*(1-2*dt) + dt*((y2+y4-2*y3)*10-0.5);\\nvx4 = vx4*(1-2*dt) + dt*((x3-x4)*10);\\nvy4 = vy4*(1-2*dt) + dt*((y3-y4)*10-0.5);\\nx2 = x2 + vx2; y2 = y2 + vy2;\\nx3 = x3 + vx3; y3 = y3 + vy3;\\nx4 = x4 + vx4; y4 = y4 + vy4;\\nvx2 = if(above(x2,0),vx2,abs(vx2)*0.5);\\nvx2 = if(below(x2,1),vx2,-abs(vx2)*0.5);\\nvx3 = if(above(x3,0),vx3,abs(vx3)*0.5);\\nvx3 = if(below(x3,1),vx3,-abs(vx3)*0.5);\\nvx4 = if(above(x4,0),vx4,abs(vx4)*0.5);\\nvx4 = if(below(x4,1),vx4,-abs(vx4)*0.5);\\nvy2 = if(above(y2,0),vy2,abs(vy2)*0.5);\\nvy2 = if(below(y2,1),vy2,-abs(vy2)*0.5);\\nvy3 = if(above(y3,0),vy3,abs(vy3)*0.5);\\nvy3 = if(below(y3,1),vy3,-abs(vy3)*0.5);\\nvy4 = if(above(y4,0),vy4,abs(vy4)*0.5);\\nvy4 = if(below(y4,1),vy4,-abs(vy4)*0.5);\\nq1 = x1;q2 = x2;q3 = x3;q4 = x4;\\nq5 = y1;q6 = y2;q7 = y3;q8 = y4;\\nq9 = 1/aspectx;\\nq10 = 1/aspecty;\\nq11 = aspectx;\\nq12 = aspecty;\\nq13 = sqrt(vx4*vx4 + vy4*vy4)*0.8;\\nq14 = atan2(vx4,vy4);","pixel_eqs_eel":"x = 0.5 + (x-0.5)*q11;\\ny = 0.5 + (y-0.5)*q12;\\ndir = -q14*1 + asin(1)*1;\\n\\nvelocity = q13;\\nstrength = 100;\\nsize = 0.07;\\n\\nxx = q4;\\nyy = 1-q8;\\n\\n\\nx1 = xx   +cos(dir+1.5708)*size;\\ny1 = yy -sin(dir+1.5708)*size;\\n\\nx2 = xx   -cos(dir+1.5708)*size;\\ny2 = yy +sin(dir+1.5708)*size;\\n\\nd1 = sqrt((x1-x)*(x1-x)+(y1-y)*(y1-y))-size*2;\\nsi1 = 1- 1/(1+pow(2,-d1*100));\\n\\nd2 = sqrt((x2-x)*(x2-x)+(y2-y)*(y2-y))-size*2;\\nsi2 = 1- 1/(1+pow(2,-d2*100));\\n\\ndx = (si1*sin(y1-y)*d1  - si2*sin(y2-y)*d2)*strength*velocity;\\ndy = (-si1*sin(x1-x)*d1 + si2*sin(x2-x)*d2)*strength*velocity;","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv);\\n  tmpvar_1.xyz = ((texture (sampler_main, clamp (\\n    (uv - (((vec2(0.0, 32.0) * texsize.zw) * dot (\\n      (tmpvar_2.xyz - 0.35)\\n    , vec3(0.32, 0.49, 0.29))) * (dot (tmpvar_2.xyz, vec3(0.32, 0.49, 0.29)) - 0.4)))\\n  , 0.0, 1.0)).xyz - 0.0011) + ((texture (sampler_noise_lq, \\n    (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 1.5)) + rand_frame.xy)\\n  ) - 0.5) * 0.0038).xyz);\\n  ret = tmpvar_1.xyz;\\n }","comp":" shader_body { \\n  vec2 dz_1;\\n  vec3 dy_2;\\n  vec3 dx_3;\\n  vec2 d_4;\\n  vec3 ret_5;\\n  vec2 tmpvar_6;\\n  vec2 tmpvar_7;\\n  tmpvar_7 = (vec2(1.0, 0.0) * texsize.zw);\\n  tmpvar_6.x = (texture (sampler_main, (uv + tmpvar_7)).xyz - texture (sampler_main, (uv - tmpvar_7)).xyz).y;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (vec2(0.0, 1.0) * texsize.zw);\\n  tmpvar_6.y = (texture (sampler_main, (uv + tmpvar_8)).xyz - texture (sampler_main, (uv - tmpvar_8)).xyz).y;\\n  d_4 = (texsize.zw * 2.0);\\n  dx_3 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * d_4))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * d_4))\\n  ).xyz * scale1) + bias1));\\n  dy_2 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * d_4))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * d_4))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = dx_3.y;\\n  tmpvar_9.y = dy_2.y;\\n  dz_1 = ((tmpvar_6 * 3.0) + tmpvar_9);\\n  ret_5 = (vec3(((\\n    pow ((sqrt(dot (dz_1, dz_1)) * 0.8), 0.7)\\n   + \\n    (((texture (sampler_blur2, uv).xyz * scale2) + bias2).y * 0.4)\\n  ) - 0.1)) * vec3(0.3, 0.5, 0.7));\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = dx_3.x;\\n  tmpvar_10.y = dy_2.x;\\n  vec3 tmpvar_11;\\n  tmpvar_11 = mix (mix (ret_5, vec3(0.2, 0.1, 0.0), vec3((texture (sampler_main, \\n    (uv + ((tmpvar_10 * texsize.zw) * 18.0))\\n  ).x * 6.0))), vec3(1.0, 1.0, 1.0), texture (sampler_main, uv).zzz);\\n  ret_5 = tmpvar_11;\\n  vec4 tmpvar_12;\\n  tmpvar_12.w = 1.0;\\n  tmpvar_12.xyz = tmpvar_11;\\n  ret = tmpvar_12.xyz;\\n }"}')},7706:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":4,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_orient":2,"wave_mode":1,"wave_thick":1,"wave_brighten":0,"wrap":0,"wave_a":0.004,"wave_scale":0.01,"wave_smoothing":0,"wave_mystery":-0.44,"modwavealphastart":1,"modwavealphaend":1,"warpscale":1.331,"zoom":1.004,"warp":0.19788,"sx":0.99967,"sy":0.9999,"wave_y":0.04,"ob_size":0,"ob_r":1,"ob_a":0.7,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":0,"mv_y":0,"mv_l":1,"mv_g":0.91,"mv_b":0.71,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"additive":1,"thickoutline":1,"rad":0.04466,"tex_zoom":0.73458,"g":1,"b":1,"a":0.03,"g2":0,"border_a":0},"init_eqs_eel":"vx = 0","frame_eqs_eel":""},{"baseVals":{"sides":100,"additive":1,"thickoutline":1,"textured":1,"x":0.7,"y":0.3,"rad":0.6623,"ang":2.45044,"tex_zoom":0.74934,"g":0.1,"b":0.1,"r2":1,"g2":0.1,"b2":0.1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"xx = 0.5;\\nyy = 0.4;","frame_eqs_eel":"d = sqrt( sqr(xx-q4)+sqr(yy-q8));\\n\\nxx = if(below(d,0.15),0.4+int(rand(200))/1000,xx);\\nyy = if(below(d,0.15),0.3+int(rand(400))/1000,yy);\\naang = if(below(d,0.12),int(rand(1000))/1000,aang);\\nang =aang*4*asin(1);\\nx = xx;\\ny = yy;"},{"baseVals":{"sides":100,"additive":1,"thickoutline":1,"textured":1,"x":0.43,"y":0.6,"rad":1.16781,"ang":5.96903,"tex_zoom":0.67165,"r2":1,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"xx = 0.5;\\nyy = 0.4;","frame_eqs_eel":"d = sqrt( sqr(xx-q4)+sqr(yy-q8));\\n\\nxx = if(below(d,0.15),0.4+int(rand(200))/1000,xx);\\nyy = if(below(d,0.15),0.3+int(rand(400))/1000,yy);\\naang = if(below(d,0.12),int(rand(1000))/1000,aang);\\nang =aang*4*asin(1);\\nx = xx;\\ny = yy;"},{"baseVals":{"sides":100,"additive":1,"thickoutline":1,"y":0.75,"rad":0.07059,"tex_zoom":0.73458,"g":0.5,"b":0.5,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"vx = 0","frame_eqs_eel":"x = q1;\\ny = q5;"}],"waves":[{"baseVals":{"usedots":1,"scaling":2.44415,"smoothing":0,"a":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t1 = 0;\\nv = 0.01;\\nj = j + (bass)*0.01;\\nj2 = j2 + (mid_att)*0.01;\\nj3 = j3 + (treb_att)*0.01;\\nt2 = j;\\nt3 = j2;\\nt4 = j3;\\n//t5 = 0;\\nk = k*0.99 + 10*mid/fps;\\nt5 = -k;\\n\\ncl1 = cl1 + 0.002;\\ncl1 = if(above(cl1,1),0,cl1);\\ncl1 = if(below(cl1,0),1,cl1);\\nt8 = cl1;\\n\\ncl2 = cl2 -1*q1;\\ncl2 = if(above(cl2,1),0,cl2);\\ncl2 = if(below(cl2,0),1,cl2);\\nt7 = cl2;\\n\\ncl3 = cl3 +0.001;\\ncl3 = if(above(cl3,1),0,cl3);\\ncl3 = if(below(cl3,0),1,cl3);\\nt6 = cl3;","point_eqs_eel":"xx = ((sample*0983624912364)%10000000+100)/10000000;\\nyy = ((xx*1896575575)%10000000+100)/10000000;\\nzz = ((yy*58652340875)%10000000+100)/10000000;\\n\\n\\nd = sqrt(sqr(xx)+sqr(yy)+sqr(zz));\\n\\nzz = zz + t8 - if(above(zz+t8,1),1,0) - 0.5;\\nxx = xx + t7 - if(above(xx+t7,1),1,0) - 0.5;\\nyy = yy + t6 - if(above(yy+t6,1),1,0) - 0.5;\\n\\nv = 0.001;\\n\\nw = 1;// (sample*sin(time*0.3)*0.01-1);\\nbb = d*d*0.5;\\nn= 0.3;\\ns1 = sin(sin(t2*w+bb)*n);\\ns2 = sin(sin(t3*w+bb)*n);\\ns3 = sin(sin(t4*w+bb)*n);\\nc1 = cos(sin(t2*w+bb)*n);\\nc2 = cos(sin(t3*w+bb)*n);\\nc3 = cos(sin(t4*w+bb)*n);\\n\\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\\n\\nzoom = .5*(1/(z+0.5));\\nx = 0.5 + zoom*x1 + sin(time*0.1)*0;;\\ny = 0.5 + zoom*y1 + cos(time*0.16801)*0;\\n\\npi3 = 3.1415*2*0.3333;\\nt = z*2+t2*1;\\nc=3;\\n//r = sin(t)*c;\\n\\n//g = sin(t+pi3)*c;\\n\\n//b = sin(t-pi3)*c;\\n\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\n\\na = 0.4;"},{"baseVals":{"scaling":7.7518,"smoothing":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t8 = 1;\\n\\nt1 = 0.5;\\nt2 = 0.9;","point_eqs_eel":"d = d*0.85 + (value1)*1;\\n\\nx = 0.5 + d*sample*(1-sample);\\ny = 0.9 - sample*0.8;"},{"baseVals":{"usedots":1,"thick":1,"scaling":5.92556,"smoothing":0,"g":0,"b":0,"a":0.66,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt7 = q7;\\nt8 = q8;","point_eqs_eel":"sample = 1-sample;\\nxxx = xx;\\nyyy = yy;\\nxx = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2\\n+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;\\n\\nyy = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6\\n+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;\\n\\nd = 1/sqrt(sqr(xx-xxx)+sqr(yy-yyy));\\ndd = dd*0.95 + (value1);\\nddd = dd*sample*(1-sample)*d;\\n\\nx = xx + (yy-yyy)*ddd;\\ny = yy - (xx-xxx)*ddd;"},{"baseVals":{"thick":1,"scaling":5.92556,"smoothing":0,"r":0.65,"g":0.45,"enabled":0},"init_eqs_eel":"t2 = 0","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt7 = q7;\\nt8 = q8;","point_eqs_eel":"sample = 1-sample;\\nxxx = xx;\\nyyy = yy;\\nxx = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2\\n+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;\\n\\nyy = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6\\n+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;\\n\\nd = 1/sqrt(sqr(xx-xxx)+sqr(yy-yyy));\\ndd = dd*0.95 + (value1);\\nddd = dd*sample*(1-sample)*d;\\nddd = sample*(1-sample)*sin(sample*200)*d*0.05;\\nx = xx + (yy-yyy)*ddd;\\ny = yy - (xx-xxx)*ddd;"}],"init_eqs_eel":"","frame_eqs_eel":"mv_r = mv_r + 0.2*( 0.60*sin(0.980*time) + 0.40*sin(1.047*time) );\\nmv_g = mv_g + 0.2*( 0.60*sin(0.835*time) + 0.40*sin(1.081*time) );\\nmv_b = mv_b + 0.2*( 0.60*sin(0.814*time) + 0.40*sin(1.011*time) );\\nq1 = (cx*2-1) + 0.6*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\nq2 = (cy*2-1) + 0.6*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\\nob_r = 1- 0.4*abs(q1);\\nob_g = 0.3*abs(q2);\\nob_b = 0.4*abs(q1);\\nwave_x = 1-abs(q2)-0.05;\\nwave_y = 1-abs(q1)-0.06;\\nwave_r = wave_r + 0.4*( 0.60*sin(0.514*time) + 0.40*sin(1.211*time) );\\nwave_b = wave_b + 0.4*( 0.60*sin(0.714*time) + 0.40*sin(q2) );\\nwave_g = wave_g + 0.4*( 0.60*sin(10*q1) + 0.40*sin(10*q2) );","pixel_eqs_eel":"du = (x*2-1) - q1;\\ndv = (y*2-1) - q2;\\ndist = sqrt(du*du+dv*dv);\\nang2 = atan2(du,dv) + time*0.15;\\nmult = 0.2*sin(dist*0.05);\\ndx = mult*sin(ang2*2-1.5)*aspectx;\\ndy = mult*cos(ang2*2-1.5)*aspecty;","warp":" shader_body { \\n  vec2 my_uv_1;\\n  vec3 ret_2;\\n  float tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur2, \\n    (uv + vec2(0.005, 0.0))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    (uv - vec2(0.005, 0.0))\\n  ).xyz * scale2) + bias2)).y;\\n  float tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur2, \\n    (uv + vec2(0.0, 0.005))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    (uv - vec2(0.0, 0.005))\\n  ).xyz * scale2) + bias2)).y;\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = tmpvar_3;\\n  tmpvar_5.y = tmpvar_4;\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv - (tmpvar_5 * 0.01));\\n  ret_2.y = texture (sampler_fc_main, (tmpvar_6 - floor(tmpvar_6))).y;\\n  ret_2.y = (ret_2.y + ((ret_2.y - \\n    ((texture (sampler_blur3, (tmpvar_6 - floor(tmpvar_6))).xyz * scale3) + bias3)\\n  .y) * 0.1));\\n  vec2 tmpvar_7;\\n  tmpvar_7 = floor(uv);\\n  ret_2.y = (ret_2.y + (0.006 - (\\n    ((texture (sampler_blur3, (uv - tmpvar_7)).xyz * scale3) + bias3)\\n  .x * 5.0)));\\n  ret_2.y = ret_2.y;\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = -(tmpvar_4);\\n  tmpvar_8.y = tmpvar_3;\\n  my_uv_1 = (tmpvar_8 * 0.05);\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = (((texture (sampler_blur2, \\n    (uv + vec2(0.01, 0.0))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    (uv - vec2(0.01, 0.0))\\n  ).xyz * scale2) + bias2)).z;\\n  tmpvar_9.y = (((texture (sampler_blur2, \\n    (uv + vec2(0.0, 0.01))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    (uv - vec2(0.0, 0.01))\\n  ).xyz * scale2) + bias2)).z;\\n  my_uv_1 = (my_uv_1 + (uv - (tmpvar_9 * 0.005)));\\n  ret_2.z = texture (sampler_fw_main, (my_uv_1 - floor(my_uv_1))).z;\\n  ret_2.z = (ret_2.z + ((ret_2.z - \\n    ((texture (sampler_blur3, (my_uv_1 - floor(my_uv_1))).xyz * scale3) + bias3)\\n  .z) * 0.13));\\n  ret_2.z = (ret_2.z * 0.95);\\n  ret_2.z = (ret_2.z + ((0.03 - \\n    ((texture (sampler_blur3, (uv - tmpvar_7)).xyz * scale3) + bias3)\\n  .x) - (texture (sampler_main, \\n    (my_uv_1 - floor(my_uv_1))\\n  ).y * 0.05)));\\n  ret_2.x = (texture (sampler_main, uv).x - 0.3);\\n  vec4 tmpvar_10;\\n  tmpvar_10.w = 1.0;\\n  tmpvar_10.xyz = ret_2;\\n  ret = tmpvar_10.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  ret_1 = (1.4 * pow ((\\n    clamp (((texture (sampler_blur1, uv).xyz * scale1) + bias1), 0.0, 1.0)\\n   * \\n    (texture (sampler_pc_main, uv).xyz - ((texture (sampler_blur3, uv).xyz * scale3) + bias3))\\n  ), vec3(0.5, 0.5, 0.5)));\\n  ret_1 = ((vec3(0.9, 0.5, 0.0) * ret_1.z) + (vec3(0.4, 0.0, 0.8) * ret_1.y));\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ret_1;\\n  ret = tmpvar_2.xyz;\\n }"}')},4636:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_orient":2,"wave_mode":1,"wave_thick":1,"wave_brighten":0,"wave_a":0.004,"wave_scale":0.01,"wave_smoothing":0,"wave_mystery":-0.44,"modwavealphastart":1,"modwavealphaend":1,"warpscale":1.331,"zoom":0.99951,"warp":0.01,"wave_y":0.04,"ob_size":0,"ob_r":0.01,"ob_a":1,"ib_size":0.005,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":0,"mv_y":0,"mv_l":1,"mv_g":0.91,"mv_b":0.71,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":12,"additive":1,"num_inst":2,"x":0.49,"rad":0.09902,"tex_zoom":4.36077,"r":0,"b":1,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = int(rand(1000))/1000;\\ny = int(rand(1000))/1000;\\nang = int(rand(150))/100;"},{"baseVals":{"sides":100,"additive":1,"thickoutline":1,"x":0.7,"y":0.3,"rad":0.18348,"ang":2.45044,"tex_zoom":0.74934,"g":0.1,"b":0.1,"r2":1,"g2":0.1,"b2":0.1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"xx = 0.5;\\nyy = 0.4;","frame_eqs_eel":"x = q4 + 0.5;\\ny = q5 + 0.5;"},{"baseVals":{"sides":100,"additive":1,"thickoutline":1,"textured":1,"x":0.43,"y":0.6,"rad":1.16781,"ang":5.96903,"tex_zoom":0.67165,"r2":1,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"xx = 0.5;\\nyy = 0.4;","frame_eqs_eel":"d = sqrt( sqr(xx-q4)+sqr(yy-q8));\\n\\nxx = if(below(d,0.15),0.4+int(rand(200))/1000,xx);\\nyy = if(below(d,0.15),0.3+int(rand(400))/1000,yy);\\naang = if(below(d,0.12),int(rand(1000))/1000,aang);\\nang =aang*4*asin(1);\\nx = xx;\\ny = yy;"},{"baseVals":{"sides":100,"additive":1,"thickoutline":1,"y":0.75,"rad":0.07059,"tex_zoom":0.73458,"g":0.5,"b":0.5,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"vx = 0","frame_eqs_eel":"x = q1;\\ny = q5;"}],"waves":[{"baseVals":{"usedots":1,"scaling":2.44415,"smoothing":0,"a":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t1 = 0;\\nv = 0.01;\\nj = j + (bass)*0.01;\\nj2 = j2 + (mid_att)*0.01;\\nj3 = j3 + (treb_att)*0.01;\\nt2 = j;\\nt3 = j2;\\nt4 = j3;\\n//t5 = 0;\\nk = k*0.99 + 10*mid/fps;\\nt5 = -k;\\n\\ncl1 = cl1 + 0.002;\\ncl1 = if(above(cl1,1),0,cl1);\\ncl1 = if(below(cl1,0),1,cl1);\\nt8 = cl1;\\n\\ncl2 = cl2 -1*q1;\\ncl2 = if(above(cl2,1),0,cl2);\\ncl2 = if(below(cl2,0),1,cl2);\\nt7 = cl2;\\n\\ncl3 = cl3 +0.001;\\ncl3 = if(above(cl3,1),0,cl3);\\ncl3 = if(below(cl3,0),1,cl3);\\nt6 = cl3;","point_eqs_eel":"xx = ((sample*0983624912364)%10000000+100)/10000000;\\nyy = ((xx*1896575575)%10000000+100)/10000000;\\nzz = ((yy*58652340875)%10000000+100)/10000000;\\n\\n\\nd = sqrt(sqr(xx)+sqr(yy)+sqr(zz));\\n\\nzz = zz + t8 - if(above(zz+t8,1),1,0) - 0.5;\\nxx = xx + t7 - if(above(xx+t7,1),1,0) - 0.5;\\nyy = yy + t6 - if(above(yy+t6,1),1,0) - 0.5;\\n\\nv = 0.001;\\n\\nw = 1;// (sample*sin(time*0.3)*0.01-1);\\nbb = d*d*0.5;\\nn= 0.3;\\ns1 = sin(sin(t2*w+bb)*n);\\ns2 = sin(sin(t3*w+bb)*n);\\ns3 = sin(sin(t4*w+bb)*n);\\nc1 = cos(sin(t2*w+bb)*n);\\nc2 = cos(sin(t3*w+bb)*n);\\nc3 = cos(sin(t4*w+bb)*n);\\n\\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\\n\\nzoom = .5*(1/(z+0.5));\\nx = 0.5 + zoom*x1 + sin(time*0.1)*0;;\\ny = 0.5 + zoom*y1 + cos(time*0.16801)*0;\\n\\npi3 = 3.1415*2*0.3333;\\nt = z*2+t2*1;\\nc=3;\\n//r = sin(t)*c;\\n\\n//g = sin(t+pi3)*c;\\n\\n//b = sin(t-pi3)*c;\\n\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\n\\na = 0.4;"},{"baseVals":{"usedots":1,"thick":1,"scaling":9.94114,"smoothing":0,"r":0,"g":0.1,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t8 = 1;\\n\\nt1 = 0.5;\\nt2 = 0.9;","point_eqs_eel":"d = d*0.85 + (value1)*1;\\n\\ny = 0.5 + d*sample*(1-sample);\\nx = 0.9 - sample*0.8;"},{"baseVals":{"usedots":1,"thick":1,"scaling":5.92556,"smoothing":0,"g":0,"b":0,"a":0.66,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt7 = q7;\\nt8 = q8;","point_eqs_eel":"sample = 1-sample;\\nxxx = xx;\\nyyy = yy;\\nxx = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2\\n+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;\\n\\nyy = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6\\n+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;\\n\\nd = 1/sqrt(sqr(xx-xxx)+sqr(yy-yyy));\\ndd = dd*0.95 + (value1);\\nddd = dd*sample*(1-sample)*d;\\n\\nx = xx + (yy-yyy)*ddd;\\ny = yy - (xx-xxx)*ddd;"},{"baseVals":{"thick":1,"scaling":5.92556,"smoothing":0,"r":0.65,"g":0.45,"enabled":0},"init_eqs_eel":"t2 = 0","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt7 = q7;\\nt8 = q8;","point_eqs_eel":"sample = 1-sample;\\nxxx = xx;\\nyyy = yy;\\nxx = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2\\n+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;\\n\\nyy = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6\\n+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;\\n\\nd = 1/sqrt(sqr(xx-xxx)+sqr(yy-yyy));\\ndd = dd*0.95 + (value1);\\nddd = dd*sample*(1-sample)*d;\\nddd = sample*(1-sample)*sin(sample*200)*d*0.05;\\nx = xx + (yy-yyy)*ddd;\\ny = yy - (xx-xxx)*ddd;"}],"init_eqs_eel":"","frame_eqs_eel":"wave_a = 0;\\n\\n\\n\\n//Thanks to Zylot for rainbow generator\\ncounter1 = if(equal(counter2,1),if(equal(counter1,1),0,counter1+.2),1);\\ncounter2 = if(equal(counter1,1),if(equal(counter2,1),0,counter2+.2),1);\\ncdelay1 = if(equal(cdelay2,1),1,if(equal(colorcounter%2,1),if(equal(counter1,1),2 ,0), if(equal(counter2,1),2,0)));\\ncdelay2 = if(equal(cdelay1,2),1,0);\\ncolorcounter = if(above(colorcounter,7),0,if(equal(cdelay1,1),colorcounter+1,colorcounter));\\nib_r = .5*if(equal(colorcounter,1),1, if(equal(colorcounter,2),1, if(equal(colorcounter,3),1, if(equal(colorcounter,4),sin(counter2+2.1), if(equal(colorcounter,5),0, if(equal(colorcounter,6),0,sin(counter1)))))));\\nq1=ib_r;\\nq2=ib_g;\\nq3=ib_b;\\n\\n\\n\\ndecay =1;\\n\\n\\n//echo_orient=((bass_att+mid_att+treb_att)/3)*3;\\n//solarize=above(0.5,bass);\\n//darken=above(0.4,treb);\\n\\nmusictime=musictime+(mid*mid*mid)*0.02*(75/fps);\\n\\nxpos=cos(musictime*0.6)*0.6;\\nypos=sin(musictime*0.4)*0.6;\\nq4=xpos;\\nq5=ypos;\\n\\n// these lines belong to the composite shader\\na = a*0.98 - (bass-treb)*0.01;\\nq15 = a;\\nv = v*0.96 + a*0.12;\\nq16 = v;\\nw = w - v*0.01;\\nq18 = w;\\nq19 = 0.5-(bass_att-treb_att)*0.15;\\nd = d + (bass_att-0.5)*0.01*60/fps;\\nd2 = d2 + (treb_att-0.5)*0.006*60/fps;\\nq20 = d;\\nq21 = d2;\\nmonitor = d2;","pixel_eqs_eel":"//flip= (-2 * above(sin(time),-0.9) )+1;\\n//var=(bass+mid+treb)/3;\\n//rot=((ang&rad/rad)/(var*20))/10;\\n//sx=.99-(var*0.01);\\n//cx=var*0.1*(ang/12);\\n//sy=sx;\\n\\n//zoom=-1;\\nsx=-1+(bass*0.2);\\nsy=-1-(treb*0.2);\\n\\ncx=0.5+q4;\\ncy=0.5-q5;\\nrd=sqrt( sqr( (x-0.5-q4)*2) + sqr( (y-0.5+q5)*1.5 ) );\\n//zm=(1.1-(rd/4));\\nzm=1;\\n\\nag=atan( (y-0.5+q5)/(x-0.5-q4) );\\nstar=sin(ag*6+time)*((2-rd)-ag)/5;\\nzm=zm+star/20;\\nsx=zm*rd;\\nsy=zm*rd;\\n//rot=above(rd,0.7)*(rd-0.7)*sin(time*0.3)","warp":" shader_body { \\n  vec3 ret_1;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv);\\n  ret_1.x = (tmpvar_2.x - ((\\n    (((texture (sampler_blur1, uv).xyz * scale1) + bias1).x - tmpvar_2.x)\\n   + 0.004) * 0.04));\\n  vec2 tmpvar_3;\\n  tmpvar_3 = ((uv_orig - 0.5) * vec2(1.8, 1.8));\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = ((tmpvar_3.x * tmpvar_3.x) - (tmpvar_3.y * tmpvar_3.y));\\n  tmpvar_4.y = ((2.0 * tmpvar_3.x) * tmpvar_3.y);\\n  ret_1.y = (texture (sampler_fc_main, (tmpvar_4 + vec2(0.25, 0.551))).y + 0.0038);\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (texsize.zw * 12.0);\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 0.8)) + rand_frame.xy);\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = (((texture (sampler_blur1, \\n    (uv_orig + (vec2(1.0, 0.0) * tmpvar_5))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv_orig - (vec2(1.0, 0.0) * tmpvar_5))\\n  ).xyz * scale1) + bias1)).z;\\n  tmpvar_7.y = (((texture (sampler_blur1, \\n    (uv_orig + (vec2(0.0, 1.0) * tmpvar_5))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv_orig - (vec2(0.0, 1.0) * tmpvar_5))\\n  ).xyz * scale1) + bias1)).z;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = ((mix (uv_orig, uv, vec2(0.02, 0.02)) + (\\n    (tmpvar_7 * texsize.zw)\\n   * 4.0)) + ((\\n    (texture (sampler_noise_lq, tmpvar_6).xy - 0.5)\\n   * texsize.zw) * 4.0));\\n  ret_1.z = (((texture (sampler_fc_main, tmpvar_8).z - \\n    ((texture (sampler_fc_main, tmpvar_8).z - ((texture (sampler_blur3, tmpvar_8).xyz * scale3) + bias3).z) * 0.02)\\n  ) - 0.008) + ((texture (sampler_noise_lq, tmpvar_6).z - 0.5) * 0.1));\\n  vec4 tmpvar_9;\\n  tmpvar_9.w = 1.0;\\n  tmpvar_9.xyz = ret_1;\\n  ret = tmpvar_9.xyz;\\n }","comp":"vec2 xlat_mutablers;\\n shader_body { \\n  vec2 uv_1;\\n  uv_1 = (0.5 + ((uv - 0.5) * aspect.xy));\\n  xlat_mutablers.x = (((ang / 3.14) + (rad * \\n    (q15 - q16)\\n  )) - q18);\\n  vec2 x_2;\\n  x_2 = (uv_1 - 0.5);\\n  xlat_mutablers.y = ((0.1 / (0.05 + \\n    (sqrt(dot (x_2, x_2)) * 1.4)\\n  )) + q21);\\n  vec2 tmpvar_3;\\n  tmpvar_3 = fract(xlat_mutablers);\\n  vec2 tmpvar_4;\\n  tmpvar_4.y = 0.0;\\n  tmpvar_4.x = texsize.z;\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (tmpvar_4 * 4.0);\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = 0.0;\\n  tmpvar_6.y = texsize.w;\\n  vec2 tmpvar_7;\\n  tmpvar_7 = (tmpvar_6 * 4.0);\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = dot (((\\n    (texture (sampler_blur1, (tmpvar_3 - tmpvar_5)).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (tmpvar_3 + tmpvar_5)).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  tmpvar_8.y = dot (((\\n    (texture (sampler_blur1, (tmpvar_3 - tmpvar_7)).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (tmpvar_3 + tmpvar_7)).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  uv_1 = ((0.4 * cos(\\n    ((12.56 * tmpvar_3) - (vec2(0.0, 10.0) * (q21 + q20)))\\n  )) - (4.0 * tmpvar_8));\\n  vec3 tmpvar_9;\\n  tmpvar_9 = pow (((\\n    (2.0 * (clamp ((0.02 / \\n      sqrt(dot (uv_1, uv_1))\\n    ), 0.0, 1.0) * hue_shader))\\n   * \\n    ((texture (sampler_main, tmpvar_3) * 4.0).xyz + 1.0)\\n  ) - 0.04), vec3(0.8, 0.8, 0.8));\\n  vec4 tmpvar_10;\\n  tmpvar_10.w = 1.0;\\n  tmpvar_10.xyz = mix (tmpvar_9, tmpvar_9.zxy, vec3(q19)).zxy;\\n  ret = tmpvar_10.xyz;\\n }"}')},3286:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.5,"echo_zoom":1,"echo_orient":3,"wave_thick":1,"modwavealphabyvolume":1,"wave_a":0.009,"wave_scale":2.136,"wave_smoothing":0.9,"modwavealphastart":1.6,"modwavealphaend":1.6,"warpanimspeed":9.861,"warpscale":16.217,"zoomexp":1.50374,"wave_r":0,"wave_g":0.04,"wave_b":0,"ob_size":0,"ob_r":1,"ob_g":0.1,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"sides":100,"additive":1,"thickoutline":1,"rad":0.99596,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":5,"textured":1,"rad":0.986,"tex_ang":3.14159,"tex_zoom":0.99979,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ang =sin(time/65) ;// ang + (bass*.2) + (time*.4);"},{"baseVals":{"sides":100,"textured":1,"x":0.9,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = sin(time) * .4 + .5;"},{"baseVals":{"sides":36,"additive":1,"rad":0.81623,"r":0,"g":0.04,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = 1-q1;\\ny = q2;\\nx = 0.5 + (x - 0.5)*0.25;\\ny = 0.5 + (y - 0.5)*0.25;"}],"waves":[{"baseVals":{"thick":1,"scaling":2.0231,"smoothing":0,"r":0,"b":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"","point_eqs_eel":"tt3 = tt3*0.6 + (value1)*1;\\ntt2 = tt2*0.7 + tt3*0.2;\\ntt1 = tt1*0.8 + tt2*0.1;\\nd = d*0.9 + tt1*0.2;\\n\\ny = 0.5 + d*sample*(1-sample);\\nx =  -0.05 + sample*1.1;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"warp = 0;\\nvolume = 0.3*(bass+mid+att);\\nxamptarg = if(equal(frame%15,0),min(0.25*volume*bass_att,0.5),xamptarg);\\nxamp = xamp + 0.5*(xamptarg-xamp);\\nxdir = if(above(abs(xpos),xamp),-sign(xpos),if(below(abs(xspeed),0.1),2*above(xpos,0)-1,xdir));\\nxspeed = xspeed + xdir*xamp - xpos - xspeed*0.055*below(abs(xpos),xamp);\\nxpos = xpos + 0.001*xspeed;\\nyamptarg = if(equal(frame%15,0),min(0.15*volume*treb_att,0.5),yamptarg);\\nyamp = yamp + 0.5*(yamptarg-yamp);\\nydir = if(above(abs(ypos),yamp),-sign(ypos),if(below(abs(yspeed),0.1),2*above(ypos,0)-1,ydir));\\nyspeed = yspeed + ydir*yamp - ypos - yspeed*0.055*below(abs(ypos),yamp);\\nypos = ypos + 0.001*yspeed;\\nbeatrate = equal(beatrate,0) + (1-equal(beatrate,0))*(below(volume,0.01) + (1-below(volume,0.01))*beatrate);\\nlastbeat = lastbeat + equal(lastbeat,0)*time;\\nmeanbass_att = 0.1*(meanbass_att*9 + bass_att);\\npeakbass_att = max(bass_att,peakbass_att);\\nbeat = above(volume,0.8)*below(peakbass_att - bass_att, 0.05*peakbass_att)*above(time - lastbeat, 0.1 + 0.5*(beatrate - 0.1));\\nbeatrate = max(if(beat,if(below(time-lastbeat,2*beatrate),0.1*(beatrate*9 + time - lastbeat),beatrate),beatrate),0.1);\\npeakbass_att = beat*bass_att + (1-beat)*peakbass_att*(above(time - lastbeat, 2*beatrate)*0.95 + (1-above(time - lastbeat, 2*beatrate))*0.995);\\nlastbeat = beat*time + (1-beat)*lastbeat;\\npeakbass_att = max(peakbass_att,1.1*meanbass_att);\\n//wave_x = xpos + 0.5;\\n//wave_y = 1-(ypos + 0.5);\\nwave_r = 0.5 + 0.499*( 0.60*sin(0.980*time) + 0.40*sin(1.047*time) );\\nwave_g = 0.5 + 0.499*( 0.60*sin(0.835*time) + 0.40*sin(1.081*time) );\\nwave_b = 0.5 + 0.499*( 0.60*sin(0.814*time) + 0.40*sin(1.011*time) );\\nwave_mystery = -0.17 + 0.03*(0.6*sin(0.637*time) + 0.4*sin(0.949*time));\\nmv_r = if(beat, 1, ib_r);\\nmv_b = if(beat, wave_b, ib_b);\\n//mv_a = if(beat, 0.1, ib_a);\\n//ib_a = 0.015;\\nq3 = wave_mystery;\\nq1 = wave_x;\\nq2 = 1-wave_y;\\nq2 = ypos+0.5;\\nwarp=0;\\n\\n//q2 = 1-(ypos + 0.5);\\n//q1 = 0.5;\\n//q2=0.5;\\nob_r = 1-wave_g;\\nob_b = 1-wave_r;\\nob_g = 1-wave_b;\\n\\nmonitor = wave_y;\\nmovement =movement + 0.4*(((bass+bass_att + 0.1*pow((bass+0.6*bass_att+0.2*treb_att),3)))/fps);\\nmovement = if(above(movement,10000), 0, movement);\\nrot =1*sin(movement);\\ncx = wave_x;\\ncy = y_pos+0.5;\\n\\nq8 = movement;","pixel_eqs_eel":"myy = x-q1;\\nmyx = y-q2+0.1;\\ndx = 3*sin(q8*0.675)*(2*myx*myy);\\ndy = 3*sin(q8*0.675)*((myx*myx) - (myy*myy));","warp":" shader_body { \\n  vec2 uv_z_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (1.0 - abs((\\n    (fract((uv * 0.5)) * 2.0)\\n   - 1.0)));\\n  ret_2.x = texture (sampler_fc_main, tmpvar_3).z;\\n  ret_2.y = mix (mix (texture (sampler_fc_main, tmpvar_3).x, ret_2.x, 0.5), texture (sampler_main, uv_orig).y, 0.75);\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (texsize.zw * 6.0);\\n  vec2 tmpvar_5;\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv_orig - 0.5);\\n  tmpvar_5 = ((tmpvar_6 * 0.998) + 0.5);\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = (((texture (sampler_blur1, \\n    (tmpvar_5 + (vec2(1.0, 0.0) * tmpvar_4))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (tmpvar_5 - (vec2(1.0, 0.0) * tmpvar_4))\\n  ).xyz * scale1) + bias1)).z;\\n  tmpvar_7.y = (((texture (sampler_blur1, \\n    (tmpvar_5 + (vec2(0.0, 1.0) * tmpvar_4))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (tmpvar_5 - (vec2(0.0, 1.0) * tmpvar_4))\\n  ).xyz * scale1) + bias1)).z;\\n  uv_z_1 = (tmpvar_5 - ((tmpvar_7 * texsize.zw) * 2.0));\\n  ret_2.z = max (((\\n    (texture (sampler_fc_main, tmpvar_3).x - 0.5)\\n   * 3.0) * clamp (\\n    (1.0 - (sqrt(dot (tmpvar_6, tmpvar_6)) * 3.2))\\n  , 0.0, 1.0)), texture (sampler_fc_main, uv_z_1).z);\\n  ret_2.z = (ret_2.z + ((texture (sampler_fc_main, uv_z_1).z - \\n    ((texture (sampler_blur1, clamp (uv_z_1, 0.0, 1.0)).xyz * scale1) + bias1)\\n  .z) * 0.02));\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = ret_2;\\n  ret = tmpvar_8.xyz;\\n }","comp":" shader_body { \\n  vec2 uv2_1;\\n  vec3 ret_2;\\n  uv2_1 = (uv + (vec2(1.0, 0.0) * texsize.zw));\\n  float tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(-1.0, 0.0) * texsize.zw));\\n  float tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(0.0, 1.0) * texsize.zw));\\n  float tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(0.0, -1.0) * texsize.zw));\\n  vec3 tmpvar_6;\\n  tmpvar_6.z = 0.14;\\n  tmpvar_6.x = (tmpvar_3 - tmpvar_4);\\n  tmpvar_6.y = (tmpvar_5 - ((\\n    (texture (sampler_main, uv2_1).xyz + (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4))\\n   + \\n    (((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2) * 0.15)\\n  ) + (\\n    ((texture (sampler_blur3, uv2_1).xyz * scale3) + bias3)\\n   * 0.1)).x);\\n  ret_2 = (0.5 + (0.5 * normalize(tmpvar_6)));\\n  vec2 x_7;\\n  x_7 = (ret_2.xy - 0.5);\\n  ret_2 = (ret_2 * clamp ((\\n    sqrt(dot (x_7, x_7))\\n   * 5.0), 0.0, 1.0));\\n  ret_2 = ret_2.xxy;\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = ret_2;\\n  ret = tmpvar_8.xyz;\\n }"}')},4199:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.56,"decay":1,"echo_zoom":0.362,"echo_orient":1,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":2.853,"fshader":1,"rot":0.006,"warp":0,"wave_g":0.65,"wave_b":0.65,"ob_size":0.005,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"sides":5,"additive":1,"num_inst":2,"x":0.49,"rad":0.11589,"tex_zoom":4.36077,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = rand(1000)/1000;\\ny = rand(1000)/1000;\\nang = rand(150)/100;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"thick":1,"r":0,"g":0.3,"b":0.75},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));"},{"baseVals":{"enabled":1,"thick":1,"r":0,"b":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));"},{"baseVals":{"enabled":1,"thick":1,"g":0.5,"b":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));"},{"baseVals":{"enabled":1,"thick":1,"r":0.4,"g":0,"b":0.6},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));"}],"init_eqs_eel":"c_x = 0.5;\\nc_y = 0.5;","frame_eqs_eel":"q1 = aspectx;\\nq2 = aspecty;\\nrot = 0;\\nzoom = 1;\\nwarp = 0;\\n\\nvol = bass*8 + mid*5 + treb*3;\\nm = m*0.96 + vol*0.06;\\nmonitor = vol-m;\\nbeat = above(vol,res)*above(vol,m)*above(vol,10);\\ndiff = (1-beat)*diff + beat*(vol-res);\\nres = beat*(vol + m*0.15) + (1-beat)*(res -  (0.15+diff*0.03)*60/fps);\\nres = max(0,res);\\n\\nr = if(beat, 0.02*(rand(200)-100)*0.01,r);\\nrot = r;\\n\\nc_x = if(beat,0.5 + 0.5*(rand(200)-100)*0.01, c_x);\\nc_y = if(beat,0.5 + 0.5*(rand(200)-100)*0.01, c_y);\\nv = if(beat,0.035 + 0.025*(rand(200)-100)*0.01, v);\\n\\n\\nq3 = c_x;\\nq4 = c_y;\\nq5 = v;\\nq6 = beat;","pixel_eqs_eel":"d = (pow(sqrt(sqr(x-q3)+sqr(y-q4)),0.5)-0);\\nv = q5;\\ndx = v*(x-q3)*d;\\ndy = v*(y-q4)*d;","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv);\\n  tmpvar_1.xyz = ((texture (sampler_main, clamp (\\n    (uv - (((vec2(0.0, 64.0) * texsize.zw) * dot (\\n      (tmpvar_2.xyz - 0.35)\\n    , vec3(0.32, 0.49, 0.29))) * (dot (tmpvar_2.xyz, vec3(0.32, 0.49, 0.29)) - 0.4)))\\n  , 0.0, 1.0)).xyz - 0.0011) + ((texture (sampler_noise_lq, \\n    (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 1.5)) + rand_frame.xy)\\n  ) - 0.5) * 0.0038).xyz);\\n  ret = tmpvar_1.xyz;\\n }","comp":" shader_body { \\n  vec2 uv1_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2.y = 0.0;\\n  tmpvar_2.x = texsize.z;\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = 0.0;\\n  tmpvar_3.y = texsize.w;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = (texture (sampler_main, (uv - tmpvar_2)).xyz - texture (sampler_main, (uv + tmpvar_2)).xyz).x;\\n  tmpvar_4.y = (texture (sampler_main, (uv - tmpvar_3)).xyz - texture (sampler_main, (uv + tmpvar_3)).xyz).x;\\n  uv1_1 = ((0.3 * cos(\\n    ((uv - 0.5) * 2.0)\\n  )) - tmpvar_4);\\n  float tmpvar_5;\\n  tmpvar_5 = clamp ((0.04 / sqrt(\\n    dot (uv1_1, uv1_1)\\n  )), 0.0, 1.0);\\n  uv1_1 = ((0.3 * cos(\\n    (uv1_1 * 12.0)\\n  )) - (9.0 * tmpvar_4));\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = (tmpvar_5 + ((texture (sampler_main, uv).xyz * 12.0) * vec3(clamp (\\n    (0.04 / sqrt(dot (uv1_1, uv1_1)))\\n  , 0.0, 1.0))));\\n  ret = tmpvar_6.xyz;\\n }"}')},3472:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1.56,"decay":1,"echo_zoom":0.362,"echo_orient":1,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"fshader":1,"zoom":1.004,"warp":0.19788,"sx":0.99967,"sy":0.9999,"wave_g":0.65,"wave_b":0.65,"ob_size":0,"ob_a":1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"sides":5,"additive":1,"num_inst":2,"x":0.49,"rad":0.11589,"tex_zoom":4.36077,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = rand(1000)/1000;\\ny = rand(1000)/1000;\\nang = rand(150)/100;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"thick":1,"r":0,"g":0.3,"b":0.75},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));"},{"baseVals":{"enabled":1,"thick":1,"r":0,"b":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));"},{"baseVals":{"enabled":1,"thick":1,"g":0.5,"b":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));"},{"baseVals":{"enabled":1,"thick":1,"r":0.4,"g":0,"b":0.6},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));"}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.2*( 0.60*sin(0.980*time) + 0.40*sin(1.047*time) );\\nwave_g = wave_g + 0.2*( 0.60*sin(0.835*time) + 0.40*sin(1.081*time) );\\nwave_b = wave_b + 0.2*( 0.60*sin(0.814*time) + 0.40*sin(1.011*time) );\\nq1 = (cx*2-1) + 0.6*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\nq2 = (cy*2-1) + 0.6*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\\nwarp = 0;\\nzoom = 1;\\nbb = bb*0.99 + bass*0.02;\\nmm = mm*0.99 + mid*0.02;\\ntt = tt*0.99 + treb*0.02;\\n\\nmx = max(max(bb,mm),tt);\\nmn = min(min(bb,mm),tt);\\n\\nob_r = (bb-mn)/(mx-mn);\\nob_b = (mm-mn)/(mx-mn);\\nob_g = (tt-mn)/(mx-mn);","pixel_eqs_eel":"du = (x*2-1) - q1;\\ndv = (y*2-1) - q2;\\ndist = sqrt(du*du+dv*dv);\\nang2 = atan2(du,dv) + time*0.15;\\nmult = 0.05*sin(dist*0.05);\\ndx = mult*sin(ang2*2-1.5);\\ndy = mult*cos(ang2*2-1.5);","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv);\\n  tmpvar_1.xyz = ((texture (sampler_main, clamp (\\n    (uv - (((vec2(0.0, 64.0) * texsize.zw) * dot (\\n      (tmpvar_2.xyz - 0.35)\\n    , vec3(0.32, 0.49, 0.29))) * (dot (tmpvar_2.xyz, vec3(0.32, 0.49, 0.29)) - 0.4)))\\n  , 0.0, 1.0)).xyz - 0.0011) + ((texture (sampler_noise_lq, \\n    (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 1.5)) + rand_frame.xy)\\n  ) - 0.5) * 0.0038).xyz);\\n  ret = tmpvar_1.xyz;\\n }","comp":" shader_body { \\n  vec2 uv1_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2.y = 0.0;\\n  tmpvar_2.x = texsize.z;\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = 0.0;\\n  tmpvar_3.y = texsize.w;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = (texture (sampler_main, (uv - tmpvar_2)).xyz - texture (sampler_main, (uv + tmpvar_2)).xyz).x;\\n  tmpvar_4.y = (texture (sampler_main, (uv - tmpvar_3)).xyz - texture (sampler_main, (uv + tmpvar_3)).xyz).x;\\n  uv1_1 = ((0.3 * cos(\\n    ((uv - 0.5) * 2.0)\\n  )) - tmpvar_4);\\n  float tmpvar_5;\\n  tmpvar_5 = clamp ((0.04 / sqrt(\\n    dot (uv1_1, uv1_1)\\n  )), 0.0, 1.0);\\n  uv1_1 = ((0.3 * cos(\\n    (uv1_1 * 12.0)\\n  )) - (9.0 * tmpvar_4));\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = (tmpvar_5 + ((texture (sampler_main, uv).xyz * 12.0) * vec3(clamp (\\n    (0.04 / sqrt(dot (uv1_1, uv1_1)))\\n  , 0.0, 1.0))));\\n  ret = tmpvar_6.xyz;\\n }"}')},4841:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":3,"gammaadj":1.56,"decay":1,"echo_zoom":0.362,"echo_orient":1,"wave_thick":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":1.599,"wave_smoothing":0,"wave_mystery":-0.5,"modwavealphastart":2,"modwavealphaend":2,"warpscale":0.107,"zoomexp":0.1584,"fshader":1,"warp":0.01,"wave_r":0.51,"wave_g":0.5,"ob_size":0,"ob_a":1,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0.5,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"sides":100,"thickoutline":1,"rad":0.50126,"tex_zoom":0.99996,"g":1,"b":1,"r2":1,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.5+sin(time*0.618)*0.2;\\ny = 0.5+cos(time*1.618)*0.2;\\nrad = bass*0.05;\\nborder_r = 1-(sin(time*1.25)*0.3+0.7);\\nborder_g = 1-(sin(time)*0.3+0.3);\\nborder_b = 1-(sin(time/3)*0.5+0.5);"},{"baseVals":{"sides":100,"thickoutline":1,"rad":0.50126,"g":1,"b":1,"g2":0,"b2":1,"border_g":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.5+sin(time*2.618)*0.3;\\ny = 0.5+cos(time*3.14)*0.3;\\nrad = bass*0.05;\\nborder_r = 1-(sin(time*1.25)*0.3+0.7);\\nborder_g = 1-(sin(time)*0.3+0.3);\\nborder_b = 1-(sin(time/3)*0.5+0.5);\\n"},{"baseVals":{"sides":100,"thickoutline":1,"rad":0.50126,"tex_zoom":0.9998,"g":1,"b":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.5+sin(-time*2.618)*0.4;\\ny = 0.5+cos(-time*1.14)*0.4;\\nrad = bass*0.05;\\nborder_r = 1-(sin(time*1.25)*0.3+0.7);\\nborder_g = 1-(sin(time)*0.3+0.3);\\nborder_b = 1-(sin(time/3)*0.5+0.5);"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"scaling":0.16188,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"additive":1,"scaling":25.12601,"smoothing":1,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"//zoom = 0.99;\\nib_r = sin(time*1.25*4)*0.3+0.7;\\nib_g = sin(time*4)*0.3+0.3;\\nib_b = sin(time/3*4)*0.5+0.5;\\nwave_r = 1- ib_r;\\nwave_g = 1- ib_g;\\nwave_b = 1- ib_b;\\n//wave_mystery = -1+bass/2;\\nwave_x = 0.5+sin(time*3)*0.3;\\nwave_y = 0.5+cos(time*2.187)*0.3;","pixel_eqs_eel":"r = bass/4;\\ncx1 = 0.5+sin(time*0.618)*0.2;\\ncy1 = 0.5+cos(time*1.618)*0.2;\\nd = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));\\ndir = (bass)*(r*r-d*d)*0.3;\\nx1 = if( above(d,r),0,  sin(y-cy1)*dir);\\ny1 = if( above(d,r),0, -sin(x-cx1)*dir);\\n\\n\\ncx1 = 0.5+sin(time*2.618)*0.3;\\ncy1 = 0.5+cos(time*3.14)*0.3;\\nd = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));\\ndir = -(mid)*(r*r-d*d)*0.3;\\nx2 = if( above(d,r),0,  sin(y-cy1)*dir);\\ny2 = if( above(d,r),0, -sin(x-cx1)*dir);\\n\\ncx1 = 0.5+sin(-time*2.618)*0.4;\\ncy1 = 0.5+cos(-time*1.14)*0.4;\\nd = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));\\ndir = -(treb)*(r*r-d*d)*0.3;\\nx3 = if( above(d,r),0,  sin(y-cy1)*dir);\\ny3 = if( above(d,r),0, -sin(x-cx1)*dir);\\n\\n\\ndx = x1+x2+x3;\\ndy = y1+y2+y3;","warp":" shader_body { \\n  vec2 uv_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 2.0)) + rand_frame.xy);\\n  uv_1 = (uv + ((texture (sampler_noise_lq, tmpvar_2).xy - 0.5) * texsize.zw));\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = bass;\\n  tmpvar_3.y = treb;\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = (texture (sampler_main, (uv_1 + (\\n    (texture (sampler_main, (mix (uv_1, uv_orig, vec2(-1.0, -1.0)) + texsize.zw)).xy - 0.4)\\n   * \\n    (-0.004 + (0.04 * clamp ((tmpvar_3 - 1.0), 0.0, 1.0)))\\n  ))).xyz - (0.0008 + (\\n    (texture (sampler_noise_lq, tmpvar_2) - 0.5)\\n   * 0.02)).xyz);\\n  ret = tmpvar_4.xyz;\\n }","comp":" shader_body { \\n  vec2 uv1_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2.y = 0.0;\\n  tmpvar_2.x = texsize.z;\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = 0.0;\\n  tmpvar_3.y = texsize.w;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = (texture (sampler_main, (uv - tmpvar_2)).xyz - texture (sampler_main, (uv + tmpvar_2)).xyz).x;\\n  tmpvar_4.y = (texture (sampler_main, (uv - tmpvar_3)).xyz - texture (sampler_main, (uv + tmpvar_3)).xyz).x;\\n  uv1_1 = ((0.3 * cos(\\n    ((uv - 0.5) * 2.0)\\n  )) - tmpvar_4);\\n  float tmpvar_5;\\n  tmpvar_5 = clamp ((0.04 / sqrt(\\n    dot (uv1_1, uv1_1)\\n  )), 0.0, 1.0);\\n  uv1_1 = ((0.3 * cos(\\n    (uv1_1 * 12.0)\\n  )) - (9.0 * tmpvar_4));\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = (tmpvar_5 + ((texture (sampler_main, uv).xyz * 12.0) * vec3(clamp (\\n    (0.04 / sqrt(dot (uv1_1, uv1_1)))\\n  , 0.0, 1.0))));\\n  ret = tmpvar_6.xyz;\\n }"}')},5653:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1.56,"decay":1,"echo_zoom":0.362,"echo_orient":1,"wave_thick":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":1.599,"wave_smoothing":0,"wave_mystery":-0.5,"modwavealphastart":2,"modwavealphaend":2,"warpscale":0.107,"zoomexp":0.1584,"fshader":1,"warp":0.01,"wave_r":0.51,"wave_g":0.5,"ob_size":0,"ob_a":1,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0.5,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"sides":100,"thickoutline":1,"rad":0.50126,"tex_zoom":0.99996,"g":1,"b":1,"r2":1,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.5+sin(time*0.618)*0.2;\\ny = 0.5+cos(time*1.618)*0.2;\\nrad = bass*0.05;\\nborder_r = 1-(sin(time*1.25)*0.3+0.7);\\nborder_g = 1-(sin(time)*0.3+0.3);\\nborder_b = 1-(sin(time/3)*0.5+0.5);"},{"baseVals":{"sides":100,"thickoutline":1,"rad":0.50126,"g":1,"b":1,"g2":0,"b2":1,"border_g":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.5+sin(time*2.618)*0.3;\\ny = 0.5+cos(time*3.14)*0.3;\\nrad = bass*0.05;\\nborder_r = 1-(sin(time*1.25)*0.3+0.7);\\nborder_g = 1-(sin(time)*0.3+0.3);\\nborder_b = 1-(sin(time/3)*0.5+0.5);\\n"},{"baseVals":{"sides":100,"thickoutline":1,"rad":0.50126,"tex_zoom":0.9998,"g":1,"b":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.5+sin(-time*2.618)*0.4;\\ny = 0.5+cos(-time*1.14)*0.4;\\nrad = bass*0.05;\\nborder_r = 1-(sin(time*1.25)*0.3+0.7);\\nborder_g = 1-(sin(time)*0.3+0.3);\\nborder_b = 1-(sin(time/3)*0.5+0.5);"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"scaling":0.16188,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"additive":1,"scaling":25.12601,"smoothing":1,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"//zoom = 0.99;\\nib_r = sin(time*1.25*4)*0.3+0.7;\\nib_g = sin(time*4)*0.3+0.3;\\nib_b = sin(time/3*4)*0.5+0.5;\\nwave_r = 1- ib_r;\\nwave_g = 1- ib_g;\\nwave_b = 1- ib_b;\\n//wave_mystery = -1+bass/2;\\nwave_x = 0.5+sin(time*3)*0.3;\\nwave_y = 0.5+cos(time*2.187)*0.3;","pixel_eqs_eel":"r = bass/4;\\ncx1 = 0.5+sin(time*0.618)*0.2;\\ncy1 = 0.5+cos(time*1.618)*0.2;\\nd = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));\\ndir = (bass)*(r*r-d*d)*0.3;\\nx1 = if( above(d,r),0,  sin(y-cy1)*dir);\\ny1 = if( above(d,r),0, -sin(x-cx1)*dir);\\n\\n\\ncx1 = 0.5+sin(time*2.618)*0.3;\\ncy1 = 0.5+cos(time*3.14)*0.3;\\nd = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));\\ndir = -(mid)*(r*r-d*d)*0.3;\\nx2 = if( above(d,r),0,  sin(y-cy1)*dir);\\ny2 = if( above(d,r),0, -sin(x-cx1)*dir);\\n\\ncx1 = 0.5+sin(-time*2.618)*0.4;\\ncy1 = 0.5+cos(-time*1.14)*0.4;\\nd = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));\\ndir = -(treb)*(r*r-d*d)*0.3;\\nx3 = if( above(d,r),0,  sin(y-cy1)*dir);\\ny3 = if( above(d,r),0, -sin(x-cx1)*dir);\\n\\n\\ndx = x1+x2+x3;\\ndy = y1+y2+y3;","warp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1.x = bass;\\n  tmpvar_1.y = treb;\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = (texture (sampler_main, (uv + (\\n    (texture (sampler_main, (mix (uv, uv_orig, vec2(-1.0, -1.0)) + texsize.zw)).xy - 0.37)\\n   * \\n    (0.005 + (0.045 * clamp ((tmpvar_1 - 1.0), 0.0, 1.0)))\\n  ))).xyz - 0.001);\\n  ret = tmpvar_2.xyz;\\n }","comp":"vec2 xlat_mutablers;\\nvec2 xlat_mutablers0;\\nvec2 xlat_mutableuv3;\\n shader_body { \\n  vec2 uv_1;\\n  uv_1.x = uv.x;\\n  float z_2;\\n  uv_1.y = (uv.y - 0.1);\\n  vec2 tmpvar_3;\\n  tmpvar_3 = ((uv_1 - 0.5) * aspect.xy);\\n  z_2 = (1.0/(tmpvar_3.y));\\n  xlat_mutablers0.x = (tmpvar_3.x * z_2);\\n  xlat_mutablers0.y = z_2;\\n  xlat_mutablers.x = (xlat_mutablers0.x + (time / 2.0));\\n  xlat_mutablers.y = (z_2 + time);\\n  float tmpvar_4;\\n  tmpvar_4 = clamp ((12.0 * tmpvar_3.y), 0.0, 1.0);\\n  vec2 tmpvar_5;\\n  tmpvar_5 = fract(((tmpvar_3 + 0.5) - (\\n    ((vec3(dot (texture (sampler_noise_hq, (xlat_mutablers / 2.0)), vec4(0.32, 0.49, 0.29, 0.0))) - 0.55) * 0.1)\\n   * tmpvar_4).xy));\\n  vec2 tmpvar_6;\\n  tmpvar_6.y = 0.0;\\n  tmpvar_6.x = texsize.z;\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = 0.0;\\n  tmpvar_7.y = texsize.w;\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = dot ((texture (sampler_main, (tmpvar_5 + tmpvar_6)).xyz - texture (sampler_main, (tmpvar_5 - tmpvar_6)).xyz), vec3(0.32, 0.49, 0.29));\\n  tmpvar_8.y = dot ((texture (sampler_main, (tmpvar_5 + tmpvar_7)).xyz - texture (sampler_main, (tmpvar_5 - tmpvar_7)).xyz), vec3(0.32, 0.49, 0.29));\\n  xlat_mutableuv3 = (tmpvar_5 + (tmpvar_8 * (1.0 - tmpvar_4)));\\n  vec2 x_9;\\n  x_9 = ((tmpvar_3 + 0.45) + (tmpvar_8 * 24.0));\\n  vec4 tmpvar_10;\\n  tmpvar_10 = texture (sampler_main, fract(xlat_mutableuv3));\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 1.0;\\n  tmpvar_11.xyz = ((tmpvar_10.xyz + (\\n    (vec3((0.02 / sqrt(dot (x_9, x_9)))) * (1.0 - tmpvar_4))\\n   * 2.0)) + clamp ((\\n    (q22 * clamp (((\\n      (0.01 * abs((xlat_mutableuv3.x - 0.5)))\\n     / \\n      abs((xlat_mutableuv3.y - 0.55))\\n    ) - (tmpvar_8 * 4.0)), 0.0, 1.0).x)\\n   * \\n    clamp ((1.0 - dot ((tmpvar_10.xyz * 4.0), vec3(0.32, 0.49, 0.29))), 0.0, 1.0)\\n  ), 0.0, 1.0));\\n  ret = tmpvar_11.xyz;\\n }"}')},1182:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"invert":1,"wave_a":0.001,"warpanimspeed":100,"warpscale":0.01,"zoomexp":1.14947,"warp":0,"sx":0.9901,"sy":0.9901,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0,"ob_r":1,"ob_g":1,"ob_b":1,"ib_r":1,"ib_g":1,"ib_b":1,"mv_a":0},"shapes":[{"baseVals":{"sides":30,"textured":1,"x":0.89,"y":0.86,"rad":0.92324,"tex_ang":1.19381,"tex_zoom":0.2274,"g":1,"b":1,"a":0.5,"r2":1,"b2":1,"border_r":0,"border_g":0,"border_a":0,"enabled":0},"init_eqs_eel":"tex_saw = 0.4;","frame_eqs_eel":""},{"baseVals":{"sides":30,"textured":1,"x":0.16,"y":0.73,"rad":0.9998,"tex_zoom":0.21006,"g":1,"b":1,"r2":1,"b2":1,"border_r":0,"border_g":0,"border_a":0,"enabled":0},"init_eqs_eel":"tex_saw = 0.4;","frame_eqs_eel":""},{"baseVals":{"sides":100,"rad":0.22167,"border_a":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":100,"g":1,"b":1,"r2":1,"b2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"a = above(q4,1000 - 9000/fps) && above(q3, 1.5);\\na2 = above(q4,1000) && above(q3, 1.5);\\n\\nxx = if(above(q4,1000 - 3/fps), rand(100)*0.01, rand(100)*0.01);\\nyy = if(above(q4,1000 - 3/fps), rand(100)*0.01, rand(70)*0.01 + .15);\\nradi = if(above(q4, 1000 - 3/fps), sqrt(q3)*.333 + .15, sqrt(q3)*.4);\\n\\nrad = radi;\\n\\nx = xx;\\ny = yy;\\n\\n\\nr = 0.5 + 0.5*sin(q1*1.22) + 0.1;\\ng = 0.45 + 0.45*sin(q1*1.307);\\nb = 0.45 + 0.45*sin(q1*1.959);\\n\\n\\nr2 = 0.5 + 0.5*sin(q1*1.622) + 0.1;\\ng2 = 0.45 + 0.45*sin(q1*1.507);\\nb2 = 0.45 + 0.45*sin(q1*1.6559);"}],"waves":[{"baseVals":{"enabled":1,"spectrum":1,"thick":1,"a":0.42},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//init\\nzs = if(below(zs,-9.42478),0,zs);\\n\\nzs = if(above(zs, 9.42478),0, zs);\\n\\nspeed = .0025*floor(tan(pow(q3, .667)))*(1.5708*atan(bass) + 1.5708*atan(mid) + 1.5708*atan(treb)); //pattern source?\\n\\n//sum\\nzs += speed; //resonant beat detection\\n\\n//project position and radius and pattern speed & beat detection\\nx = 0.5 + (0.18 + pow(q3, 1.25)*.005)*cos(zs*asin(1)*100);\\ny = 0.5 + (0.18 + pow(q3, 1.25)*.005)*sin(zs*asin(1)*100);\\n\\n\\n// color waveform to bass / mid / treble\\nif(above(mid + treb, bass*2), r = .3 - abs(.33*sin(1 - q29*bass*bass)), r = .7 + abs(.33*sin(1 - q29*bass*bass)));\\nif(above(bass + treb, mid*2), g = .3 - abs(.33*sin(1 - q30*mid*mid)), g = .7 + abs(.33*sin(1 - q30*mid*mid)));\\nif(below(mid + bass, treb*2), b = .3 - abs(.33*sin(1 - q3*treb*treb)), b = .7 + abs(.33*sin(1 - q3*treb*treb)));\\n\\n//match opacity to nearness of central beat\\na = .175 + q4*.0007;"},{"baseVals":{"samples":64,"spectrum":1,"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"thick":1,"a":0.42,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"index = 0;\\nloop (200000,\\n  megabuf(index) = 0;\\n  gmegabuf(index) = 0;\\n  index = index + 1;\\n);\\n\\ntstart = time;\\n\\nbd_recsz   = 8;\\nbd_oct     = 4; //Oktaven\\nbd_spo     = 30;//Res. pro Oktave\\nbd_finc    = pow(2.0,1/bd_spo); //Freq. Incr. \\nbd_nres    = bd_oct * bd_spo;\\nbd_minbpm  = 20;\\nbd_maxbpm  = pow(2,bd_oct)*bd_minbpm;\\n\\n//mem spaces\\nbd_dat0    = 100000;\\nbd_tab0     = bd_dat0 + bd_nres * bd_recsz * 3;\\n\\n\\n//Fill BPM Tab\\n//n = bd_dat0;\\n//BPM = bd_minbpm;\\n//loop (bd_nres,gmegabuf (n) = BPM; BPM *=  bd_finc; n += bd_recsz;);\\n\\n\\n//##### nur fuer Darstellung\\nreg00 = bd_minbpm;\\nreg01 = bd_maxbpm;\\nreg02 = bd_recsz;\\nreg03 = bd_nres;\\nreg05 = bd_finc;\\n\\nreg06 = bd_dat0;\\nreg07 = bd_mp0;\\n\\ntime_st = 0;\\ntimediff = 1;","frame_eqs_eel":"//############## THIS IS A CONSTRUCTION SITE #########\\n\\ndt = min (1/fps,0.1) ; //Stability !\\ndec_m = 1-dt*4; dec_s = 1 - dt; dec_xs = 1-dt/6;\\nt0 = time - tstart;\\n\\nbd_b =  bass; bd_bass_ = bd_bass_*dec_m + (1-dec_m)*bd_b; bd_bass = bd_b-bd_bass_;\\nbd_m =  mid ; bd_mid_  = bd_mid_ *dec_m + (1-dec_m)*bd_m; bd_mid =  bd_m -bd_mid_;\\nbd_t =  treb; bd_treb_ = bd_treb_*dec_m + (1-dec_m)*bd_t; bd_treb = bd_t-bd_treb_;\\n\\nn = 0; BPM = bd_minbpm; \\nloop (bd_nres, \\n  gmegabuf(50000+n*bd_recsz) = 0; \\n  bd_arg = BPM/60*t0*6.283; \\n  gmegabuf (bd_tab0+n*bd_recsz) = BPM; \\n  BPM *= bd_finc;\\nn+=1);\\n\\nbd_src=0;\\nloop (3, bd_exc = bd_bass*(bd_src==0) + bd_mid*(bd_src==1) + bd_treb*(bd_src==2);\\n  oct = 0;\\n  loop (bd_oct,\\n    bd_slot = 0;\\n    bd_pk = 0; bd_mean = 0.0;\\n    loop (bd_spo,\\n      bd_tabptr = bd_tab0 +                 (oct*bd_spo+ bd_slot)*bd_recsz;\\n      n        =  bd_dat0 + (bd_nres*bd_src +oct*bd_spo+ bd_slot)*bd_recsz;\\n      BPM = gmegabuf(bd_tabptr); bd_omega = BPM/60*6.283;\\n      Feder = sqr(bd_omega); //Res.f = sqrt (Feder)/2pi (Hz)\\n      gmegabuf (n+4) = gmegabuf(n+2); //alte pos\\n      gmegabuf (n+1) *= 1-.5*dt * sqrt (BPM/300); //damping\\n\\n      EC_Steps = int (1 + BPM/50)*2;\\n      loop (EC_Steps, // Euler-Cauchy steps\\n        Kraft = bd_exc - Feder*gmegabuf(n + 2) ;\\n        gmegabuf (n+1) += Kraft         * dt/EC_Steps;\\n        gmegabuf (n+2) += gmegabuf(n+1) * dt/EC_Steps;  \\n      );\\n      beatcos = gmegabuf(n+1);  beatsin = gmegabuf(n+2)*bd_omega;\\n      quad = sqrt (pow(beatsin,2) + pow(beatcos,2));\\n      gmegabuf (n) = gmegabuf(n)*0.8 + 0.2*quad;\\n      bd_ampl = gmegabuf(n);\\n      bd_mean += bd_ampl;\\n      if (bd_ampl > bd_pk, bd_pk=bd_ampl, 0);\\n    bd_slot +=1;);\\n // Komb. bass,mid,treb\\n    bd_slot = 0;    \\n    bd_qual = pow(bd_pk/bd_mean*bd_spo-1,1);\\n    gmegabuf((bd_src*bd_oct+oct)*2) = bd_qual;\\n    loop (bd_spo,\\n      m =  50000 + (bd_slot + 0*oct*bd_spo)*bd_recsz;\\n      n =  bd_dat0 + (bd_nres*bd_src +oct*bd_spo+ bd_slot)*bd_recsz; //#2x berechnet\\n      gmegabuf(m) += (bd_qual)*gmegabuf (n)/12;\\n    bd_slot +=1;);\\n  oct += 1;);\\nbd_src +=1;);\\n\\n\\n//Get maxind\\nbd_slot = 0; maxind = 0; bd_pk = 0; bd_mean = 0;\\nloop (bd_spo,\\n   m =  50000 + bd_slot*bd_recsz;\\n   gmegabuf(m) = pow(gmegabuf(m),1);\\n   bd_mean += gmegabuf(m);\\n   if (gmegabuf(m) > bd_pk, bd_pk = gmegabuf(m); maxind = bd_slot, 0);\\nbd_slot += 1);\\nquali = bd_pk/bd_mean*bd_spo-1;\\n\\nn = 0; loop (150, gmegabuf(50+n) *= 0; n+=1);\\n\\n//KREISE\\nbd_src = 0; tsin = 0; tcos = 0;\\nloop (3,\\n  oct = 0;  \\n  loop (bd_oct,\\n    n         =  bd_dat0 + (bd_nres*bd_src +oct*bd_spo+ maxind)*bd_recsz;\\n    bd_tabptr = bd_tab0  +                 (oct*bd_spo+ maxind)*bd_recsz;\\n    BPM = gmegabuf(bd_tabptr); \\n\\n    im =  gmegabuf(n+1);\\n    re =  gmegabuf(n+2) * BPM/60*6.283;\\n    bd_cos =  cos (BPM/60*6.28*time);\\n    bd_sin = -sin (BPM/60*6.28*time);\\n\\n//Winkel zurueckdrehen. Das sind nun die Winkel relativ zu cos(oct*time).\\n    re0 =  re*bd_cos + im*bd_sin;\\n    im0 = -re*bd_sin + im*bd_cos;\\n    bd_qual = gmegabuf((bd_src*bd_oct+oct)*2);\\n    gmegabuf (50+oct*4)   +=  bd_qual * (im0)*1;\\n    gmegabuf (50+oct*4+1) +=  bd_qual * (re0)*1;\\n    gmegabuf (50+oct*4+2) +=  bd_qual;\\n\\n//Summe der besten Beitraege. Das ist der Referenzwinkel.\\n    gmegabuf (100+0)  +=  bd_qual * im0;\\n    gmegabuf (100+1)  +=  bd_qual * re0;\\n\\n//Nun sollten wir die Differenzwinkel zur Ref berechnen. Und was damit ? Dann kann ich die\\n//Einzelwinkel auf Ref bringen - bringt doch nichts !\\n//Ich kann alle auf Null drehen, daraus sinusse erzeuge und addieren ->besserer Takt ?\\n    re =  (bd_cos*re0 + bd_sin*im0);\\n    im =  (-bd_cos*im0 + bd_sin*re0);\\ntsin += im*5;\\n\\n  oct += 1);\\nbd_src +=1);\\nq30 = tsin;\\n\\nvol = bass_att + mid_att + treb_att;\\nvol_ = vol_*0.95 + 0.05*vol;\\nq29 = vol-vol_;\\n\\n//Welche Oktave ???\\nbd_src = 0; maxo = 0; maxs = 0; maxa = 0;\\nloop (3,\\n  oct = 1;  \\n  loop (bd_oct-1,\\n    n =  bd_dat0 + (bd_nres*bd_src +oct*bd_spo+ maxind)*bd_recsz;\\n    bd_qual = gmegabuf((bd_src*bd_oct+oct)*2);\\n\\n    ampl = bd_qual / (1+oct*(maxind/bd_oct)*0);\\n    if (ampl>maxa, maxa = ampl; maxs = bd_src; maxo = oct;, 0);\\n  oct += 1);\\nbd_src +=1);\\n\\nq28 = pow(4*bd_qual,1.5);\\nq31 = q28;\\nif(above(q28,50),q28 = pow(5*sin(.5*bd_qual), 2), 0);\\n\\n//monitor = q31;\\n\\n\\n//Beat-Flash\\ntesti = bd_nres*maxs +bd_spo*maxo + maxind;\\nif (bor (beat && (prog==0), abs(testi-test0)<2),test0 = testi,0);\\nn =  bd_dat0 + (test0)*bd_recsz;\\ncreep = gmegabuf(n+1);\\nbeat =  (creep>0) * (creepo <0);\\nbeatct = if (change, 0, beatct+beat);\\nprog = (prog+beat)%8;\\ncreepo = creep;\\nshow = if (beat, 1, show*0.5);\\nq4 = (gmegabuf(n+1)/gmegabuf(n)*1000);\\nq2 = prog;\\n\\n\\nif(beat, timediff = time - time_st; time_st = time, timediff = timediff); \\nif(below(timediff, .0625), timediff = .0625, timediff = timediff);\\nq8 = timediff;\\n//avgtime = avgtime*.975 + timediff*.0225;\\n//q9 = avgtime;\\n\\nmonitor = q8;\\n\\n//Selbst bei Barbie Girl fehlt manchmal der Rhythmus in Band 2,\\n//obwohl das der gefuehlte Takt ist - >Problem mit Phasenkorrektur !\\n//stehen Phasen bei doppelter Frequenz in Relation ? NEIN.\\n\\n\\n\\n\\n\\n//Problem: Fats Domino (1992) hat 55BPM -> Problem mit 110\\n//Problem: 1991 London Beat I been thinking about you - geht nicht - solved\\n//Problem: U96 - Love religion (1995) beginnt mit BPM < 20\\n//Porblem: adiemus (1995)\\n//Konflikt-Beat siehe Michale jackson b&W (1991)\\n\\n\\nq24 = bd_maxbpm;\\n//q32 = aspecty;\\n\\n\\nold_bass_flop=bass_flop;\\nold_treb_flop=treb_flop;\\nold_mid_flop=mid_flop;\\nchaos=.9+.1*sin(pulse);\\nentropy=if(equal(pulse,-20),1+bass_flop+treb_flop+mid_flop+q4*.002,entropy);\\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.6)*chaos+1.6);\\nbass_flop=abs(bass_flop-equal(bass_thresh,2));\\ntreb_thresh=above(treb_att,treb_thresh)*2 + (1-above(treb_att,treb_thresh))*((treb_thresh-1.6)*chaos+1.6);\\ntreb_flop=abs(treb_flop-equal(treb_thresh,2));\\nmid_thresh=above(mid_att,mid_thresh)*2 + (1-above(mid_att,mid_thresh))*((mid_thresh-1.6)*chaos+1.6);\\nmid_flop=abs(mid_flop-equal(mid_thresh,2));\\nbass_changed=bnot(equal(old_bass_flop,bass_flop));\\nmid_changed=bnot(equal(old_mid_flop,mid_flop));\\ntreb_changed=bnot(equal(old_treb_flop,treb_flop));\\nbass_residual = bass_changed*sin(pulse*1.5) + bnot(bass_changed)*bass_residual;\\ntreb_residual = treb_changed*sin(pulse*1.5) + bnot(treb_changed)*treb_residual;\\nmid_residual = mid_changed*sin(pulse*1.5) + bnot(mid_changed)*mid_residual;\\npulse=if(above(abs(pulse),20),-20,pulse+(bass_thresh+mid_thresh+treb_thresh)*.018);\\nq11=mid_residual;\\nq12=bass_residual;\\nq13=treb_residual;\\nq14=sin(pulse);\\nq15=cos(pulse*(.5+.1*entropy));\\nq16=sin(pulse*(.5+pow(.25,entropy)));\\nob_r=sin(time*1.0785+q16);\\nob_b=sin(time*0.8445+q15);\\nob_g=sin(time*.413+q14);\\nib_r=cos(time*0.6+q11*.1);\\nib_b=cos(time*1.4055+q12*.1);\\nib_g=cos(time*0.833+q13*.1);\\nib_size=.05+.03*q12;\\nob_size=.03+.02*sin(time*2.321+q12*.2);\\nob_a=.6+.4*q13;\\nib_a=.9+.1*sin(q12*.3+q14+q11*.5);\\nrot=0;\\n\\n//monitor = q13;\\n\\n\\nbasstime += q29*.1*30/fps;\\nq1 = basstime;\\n\\n//start in most active range\\nbasstime = if(below(basstime, -10000), 0, basstime);\\nbasstime = if(above(basstime, 10000), 0, basstime);\\n\\nbasstime += bass_att*0.025 * 30/fps;\\nvol2 = pow(bass+mid+treb,2);\\nbasssum = vol2;\\n\\nstickybit = time%2;\\n\\n//avg vol\\n//buffer 1\\nvolAvg = volAvg + vol2*equal(stickybit,1);\\n//number of samples 1 or framerate\\nsample1 = sample1 + equal(stickybit,1);\\n//buffer 2\\nvolAvg2 = volAvg2 + vol2*equal(stickybit,0);\\n//number of samples 2\\nsample2 = sample2 + equal(stickybit,0);\\n\\n//transision\\nedge = bnot(equal(bit2,stickybit));\\n\\nvolAvg = volAvg - volAvg*edge*stickybit;\\nvolAvg2 = volAvg2 - volAvg2*edge*equal(stickybit,0);\\n\\nsample1 = sample1  - sample1*edge*stickybit;\\nsample2 = sample2  - sample2*edge*equal(stickybit,0);\\n\\n//test vol against avg buffer lvl\\ndiff = if(equal(stickybit,1), (basssum/(volAvg2/sample2)) , 0);\\ndiff = if(equal(stickybit,0), (basssum/(volAvg/sample1)), diff);\\n\\nq3 = diff;\\n//pv_beat = pv_beat*0.2*sqrt(fps/30) + 0.1*(bass_att*bass + mid_att*mid + treb_att*treb)*sqrt(q3);\\npv_beat = pv_beat*0.2*sqrt(fps/30) + 0.1*(bass_att*bass_att + mid_att*mid_att + treb_att*treb_att)*(.001*q4)/sqrt(q8);\\nq32 = pv_beat;\\nmonitor = q32;\\n\\nbit2 = time%2;\\n\\ndifftime = difftime + diff*0.03;\\nq2 = difftime;\\n\\nwarp = (bass*bass + mid*mid + treb*treb)*.005;\\n\\nfoo_r = sin(q1*0.34313);\\nfoo_g = sin(q1*0.3675);\\nfoo_b = sin(q1*0.55095);\\n\\nif(above(foo_r, foo_g) && above(foo_r, foo_b), q23 = 1, q23 = 0);\\nif(above(foo_g, foo_r) && above(foo_g, foo_b), q21 = 1, q21 = 0);\\nif(above(foo_b, foo_r) && above(foo_b, foo_g), q22 = 1, q22 = 0);\\nif(equal(q11+q12+q13,0), q22 = 1, 0);\\n\\nq5 = 30/fps;\\n\\nq19 = 50;\\nq20 = 1;\\n\\nif(above(q31, 14), q19 = 100, q19 = q19);\\n\\nif(above(q31, 50), q19 = 500, q19 = q19);\\n\\n//if(above(q31, 55), \\n//     if(above(q3, 3.5), foo = 1.0 + .333/(bass_att*bass_att*bass_att); q20 = 30000, foo = foo);\\n//     if(above(bass_att + mid_att + treb_att, 2.5), q19 = foo; q20 = 30000, q19 = q19),\\n//     q19 = q19);\\n\\n\\n\\n//if(below(bass_att + mid_att + treb_att, 1), q19 = 0, q19 = q19);\\n\\n\\nif(above(q3, 2), q19 = .5 + 10*q8, q19 = q19);","pixel_eqs_eel":"if(q32>1.2*sqrt(bass_att), \\n    rot=if(above(q14,0),rad*.2*q15,tan(rad*(.001*q4)));\\n    zoom=if(above(q12,1.5),zoom+(1-zoom)*rot*cos(rad*3.14*q12),if(above(q13,2)*above(x,.5+.5*q15),zoom+(1-zoom)*sin(q11*rot*3.14),zoom+(1-zoom)*cos(rad*3*q16)));\\n    dx=above(q11,0)*sin(rad*.5*q12);\\n    dy=above(q13,0)*sin(rad*.5*q13),\\n\\n    zoom = q19;\\n    zoomexp = q20;\\n    rot = 0);","warp":" shader_body { \\n  vec3 ret_1;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_pw_main, uv_orig);\\n  ret_1 = ((texture (sampler_blur1, tmpvar_2.xy).xyz * scale1) + bias1);\\n  vec3 tmpvar_3;\\n  tmpvar_3 = vec3((((1.0 - ret_1.x) * (1.0 - ret_1.y)) * (1.0 - ret_1.z)));\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (((texsize.zw * q5) * -3.0) * ((\\n    pow (tmpvar_3, vec3(0.333, 0.333, 0.333))\\n   + \\n    ((((0.5 * tmpvar_3) * (\\n      (texture (sampler_blur2, ret_1.xx).xyz * scale2)\\n     + bias2)) * ((texture (sampler_blur2, ret_1.yy).xyz * scale2) + bias2)) * ((texture (sampler_blur2, ret_1.zz).xyz * scale2) + bias2))\\n  ) + (\\n    ((0.25 * ((texture (sampler_blur3, ret_1.xx).xyz * scale3) + bias3)) * ((texture (sampler_blur3, ret_1.yy).xyz * scale3) + bias3))\\n   * \\n    ((texture (sampler_blur3, ret_1.xx).xyz * scale3) + bias3)\\n  )).xy);\\n  vec3 tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_blur1, \\n    (uv_orig + (vec2(1.0, 0.0) * tmpvar_4))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv_orig - (vec2(1.0, 0.0) * tmpvar_4))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_6;\\n  tmpvar_6 = (((texture (sampler_blur1, \\n    (uv_orig + (vec2(0.0, 1.0) * tmpvar_4))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv_orig - (vec2(0.0, 1.0) * tmpvar_4))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = tmpvar_5.x;\\n  tmpvar_7.y = tmpvar_6.x;\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = tmpvar_5.y;\\n  tmpvar_8.y = tmpvar_6.y;\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = tmpvar_5.z;\\n  tmpvar_9.y = tmpvar_6.z;\\n  vec2 tmpvar_10;\\n  tmpvar_10 = (uv_orig + ((\\n    (((tmpvar_7 * q21) + (tmpvar_8 * q22)) + (tmpvar_9 * q23))\\n   * texsize.zw) * 6.0));\\n  ret_1 = ((texture (sampler_main, tmpvar_10).xyz + (\\n    (texture (sampler_main, uv).xyz - ((texture (sampler_blur1, uv).xyz * scale1) + bias1))\\n   * 0.1)) - ((0.00015 * q28) * (\\n    ((((\\n      (texture (sampler_main, tmpvar_10).x * texture (sampler_main, tmpvar_10).y)\\n     * texture (sampler_main, tmpvar_10).z) / (2.0 * q8)) + ((\\n      sqrt(treb)\\n     * texture (sampler_main, tmpvar_10).x) * texture (sampler_main, tmpvar_10).y)) + ((sqrt(mid) * texture (sampler_main, tmpvar_10).x) * texture (sampler_main, tmpvar_10).z))\\n   + \\n    ((sqrt(bass) * texture (sampler_main, tmpvar_10).y) * texture (sampler_main, tmpvar_10).z)\\n  )));\\n  ret_1.x = mix (ret_1.x, (1.01 * texture (sampler_pc_main, tmpvar_10).x), (bass_att * 0.05));\\n  ret_1.y = mix (ret_1.y, (1.01 * texture (sampler_pc_main, tmpvar_10).y), (mid_att * 0.05));\\n  ret_1.z = mix (ret_1.z, (1.01 * texture (sampler_pc_main, tmpvar_10).z), (treb_att * 0.05));\\n  ret_1 = (ret_1 + ((\\n    (pow (q3, 1.2) - 0.25)\\n   * 0.00667) * tmpvar_2).xyz);\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 0.0;\\n  tmpvar_11.xyz = ret_1;\\n  vec3 tmpvar_12;\\n  tmpvar_12 = mix (tmpvar_11, texture (sampler_pc_main, uv), vec4(float((\\n    (q32 * sqrt(((\\n      ((1.0 - ret_1.x) * (1.0 - ret_1.y))\\n     + \\n      ((1.0 - ret_1.x) * (1.0 - ret_1.z))\\n    ) + (\\n      (1.0 - ret_1.y)\\n     * \\n      (1.0 - ret_1.z)\\n    ))))\\n   > 1.333)))).xyz;\\n  ret_1 = tmpvar_12;\\n  vec4 tmpvar_13;\\n  tmpvar_13.w = 1.0;\\n  tmpvar_13.xyz = tmpvar_12;\\n  ret = tmpvar_13.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  ret_1 = mix (texture (sampler_main, uv).xyz, texture (sampler_main, ((0.5 - uv) + 0.5)).xyz, vec3(0.5, 0.5, 0.5));\\n  ret_1 = (1.0 - ((ret_1 * \\n    (1.0 - ret_1)\\n  ) * 4.0));\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ret_1;\\n  ret = tmpvar_2.xyz;\\n }"}')},2354:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0,"ob_g":0.1,"ob_b":1,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":54,"textured":1,"rad":0.49138,"ang":1.5708,"tex_ang":3.14159,"g":1,"b":1,"r2":1,"b2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":54,"rad":0.08195,"r":0,"g":1,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x=q3;\\ny=1-q4;\\n\\nr = abs(q20);\\ng = abs(q21);\\nb = abs(q22);\\n\\nrad = .1*mid;"},{"baseVals":{"enabled":1,"sides":54,"rad":0.08195,"r":0,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x=q5;\\ny=1-q6;\\n\\nrad = .2*bass;"},{"baseVals":{"enabled":1,"sides":54,"rad":0.08195,"r":0,"b":1,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x=q1;\\ny=1-q2;\\n\\nr = (q23);\\ng = (q24);\\nb = (q25);\\na = q19;\\n\\nrad = bass*.1;"}],"waves":[{"baseVals":{"sep":51,"spectrum":1,"usedots":1,"thick":1,"scaling":1.32735,"smoothing":0.82,"b":3,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x = rand(1001)*.001;\\ny = rand(1001)*.001;\\n\\ntm = time*.5 + sample*2;\\n\\nr = .5 + .5*sin(tm*1.132);\\ng = .5 + .5*sin(tm*1.121);\\nb = .5 + .5*sin(tm*1.187);"},{"baseVals":{"sep":51,"spectrum":1,"usedots":1,"scaling":1.32735,"smoothing":0.82,"b":3,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x = rand(1001)*.001;\\ny = rand(1001)*.001;\\n\\ntm = time*.5 + sample*2;\\n\\nr = .5 + .5*sin(tm*1.132);\\ng = .5 + .5*sin(tm*1.121);\\nb = .5 + .5*sin(tm*1.187);"},{"baseVals":{"sep":51,"usedots":1,"thick":1,"scaling":1.32735,"smoothing":0.82,"b":3,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x = rand(1001)*.001;\\ny = rand(1001)*.001;\\n\\ntm = time*.5 + sample*2;\\n\\nr = .5 + .5*sin(tm*1.132);\\ng = .5 + .5*sin(tm*1.121);\\nb = .5 + .5*sin(tm*1.187);"},{"baseVals":{"enabled":1,"sep":51,"usedots":1,"additive":1,"scaling":1.32735,"smoothing":0.82,"b":3},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x = rand(1001)*.001;\\ny = rand(1001)*.001;\\n\\ntm = time*.5 + sample*2;\\n\\nr = .5 + .5*sin(tm*1.132);\\ng = .5 + .5*sin(tm*1.121);\\nb = .5 + .5*sin(tm*1.187);"}],"init_eqs_eel":"//******** INITIALIZATION *********\\n//---------- some global vars, do not change -------------\\navg = 0.01;\\nq7 = .25; //MyZoom\\nq8 =  rand(2.0)-1.0; //fractal modifier\\n//q8 = 1; //#\\nq16 = 1 + rand(2); //Tele ; rather fish eye\\n//q16 = 1; //#\\nq18 = rand(0.8)+.1; //brightness balance back/front\\nq30 = 1; //logarithmic Z-Dist storage; unused\\nq31 =128;\\nstart = 1; travel = 0; RotZ = 0; look = 0; slow = 0; t0 = time+3; lampx = .5; lampy = .5;\\ncran0 = rand(1);\\nn = 0; loop (10000, gmegabuf(n)=0; n=n+1; ); \\nn = 0; loop (10000,  megabuf(n)=0; n=n+1; ); \\ntrelx = 0;  trely = 0; trelz = 0;\\nreg20 = 1; reg21 = 0; reg22 = 0; reg23 = 0; reg24 = 1; reg25 = 0; reg26 = 0; reg27 = 0; reg28 = 1;\\n\\n//Find random starting point\\nwhile (exec2(\\n  ran1 = rand(800)/100;  ran2 = rand(800)/100;  ran3 = rand(800)/100;\\n  PosX = rand(5)-2;   PosY = rand(5)-2;   PosZ = rand(5)-2; \\n\\n//  PosX = 3.3; PosY = 2; PosZ = -2; ran1 = 0; ran2 = 0; ran3 = 0; //#\\n\\n  c1 = cos(ran1); c2 = cos(ran2); c3 = cos(ran3); \\n  s1 = sin(ran1); s2 = sin(ran2); s3 = sin(ran3);\\n\\n  reg20 = c2*c1; reg21 = c2*s1; reg22 = -s2;\\n  reg23 = s3*s2*c1 - c3*s1; reg24 = s3*s2*s1 + c3*c1; reg25 = s3*c2;\\n  reg26 = c3*s2*c1 + s3*s1; reg27 = c3*s2*s1 - s3*c1; reg28 = c3*c2;\\n\\n  //***********BOT*************\\n  //Coord. Trans. must exactly match def in warp S. !!!!\\n  dist = 0.001;\\n  while (exec2(\\n    uvx = reg26*dist/q7; uvy = reg27*dist/q7; uvz = reg28*dist/q7;\\n    uvx += PosX; uvy += PosY; uvz += PosZ;\\n    uvx = 8.0*((uvx/8+30.5 - int(uvx/8+30.5))-.5);\\n    uvy = 8.0*((uvy/8+30.5 - int(uvy/8+30.5))-.5);\\n    uvz = 8.0*((uvz/8+30.5 - int(uvz/8+30.5))-.5);\\n    uvx0 = uvx+q8; uvy0 = uvy+q8; uvz0 = uvz+q8;\\n    loop (7+1,\\n      uvx = if (uvx > 1, 2-uvx, if(uvx < -1, -2-uvx, uvx));\\n      uvy = if (uvy > 1, 2-uvy, if(uvy < -1, -2-uvy, uvy));\\n      uvz = if (uvz > 1, 2-uvz, if(uvz < -1, -2-uvz, uvz));\\n      slen = uvx*uvx + uvy*uvy + uvz*uvz;\\n      uvx = if (slen < 0.25, uvx*4, if (slen < 1, uvx/slen, uvx)) *2.6 + uvx0; \\n      uvy = if (slen < 0.25, uvy*4, if (slen < 1, uvy/slen, uvy)) *2.6 + uvy0; \\n      uvz = if (slen < 0.25, uvz*4, if (slen < 1, uvz/slen, uvz)) *2.6 + uvz0; \\n    );\\n    len = sqrt(uvx*uvx + uvy*uvy + uvz*uvz);\\n    dist *= 1.05;\\n  ,(dist < 0.6)*(len > 30)));\\n,(dist < .06))); //end while","frame_eqs_eel":"fps_ = .0 * fps_ + 1*if(fps<=25,fps,25+.5*(fps-25)); \\ndec_s = 1-.06*30/fps_;\\nbeat = (time >  t0+3); t0 = if(beat, time, t0);\\n\\nspeed = min(0.2,dist_-.02) * (1+2*avg) *(1-slow*.0)*.7/q7; //#\\nds = ds * dec_s + (1-dec_s)*speed*.25/fps_; \\nRotZ = if (RotZ==0,beat*(rand(100)<20*travel)*(rand(10)/10-.3),\\n                   bnot(beat*(rand(100)<30))*RotZ);\\nslow = if (bnot(slow), beat*(rand(1000*avg)<6), bnot(beat*(rand(100)<50)));\\nlook = if (bnot(look), beat*(rand(1000*speed)<12), bnot(beat*(rand(100)<50)));\\n\\n//Lamp View\\nlx = if (beat,rand(150)/200+.15,lx);\\nly = if (beat,rand(150)/200+.15,ly);\\nlampx = lampx * dec_s + (1-dec_s)*if (look,lx,0.5);\\nlampy = lampy * dec_s + (1-dec_s)*if (look,ly,0.5);\\nq1 = lampx; q2 = lampy;\\n\\n//Position \\nDirX= reg26; DirY= reg27; DirZ = reg28;\\nPosX = PosX + ds*DirX ; PosY = PosY + ds*DirY; PosZ = PosZ + ds*DirZ; \\nq4 = PosX; q5 = PosY; q6 = PosZ;\\n\\nangchg = (.2-dist_)*(dist_ < .2)*2;\\ntravel = if (angchg > 0,0,travel+ds);\\nv1 = v1 * dec_s + (1-dec_s)* RotZ * ds;\\nv2 = v2 *dec_s + (1-dec_s)*angchg *xslope/fps_;\\nv3 = v3 *dec_s + (1-dec_s)*(angchg *yslope/fps_ + 2*v1*sin(time*.1));\\n//v2 = .008;\\n//push old RotMat\\nreg30 =reg20; reg31 =reg21; reg32 =reg22; \\nreg33 =reg23; reg34 =reg24; reg35 =reg25; \\nreg36 =reg26; reg37 =reg27; reg38 =reg28; \\n\\nn = 0; avg = 0;\\nloop (5,\\n  n = n+1;\\n  //new Rot. Mat for infinitesimal angles\\n  ran1 = rand(100)/100;\\n  ran2 = rand(100)/200-.25;\\n  tx = cos(n*1.57+ran2) * (n <= 4)*ran1; ty = sin(n*1.57+ran2) * (n <= 4)*ran1;\\n  c1 = cos(v1); c2 = cos(v2+ty); c3 = cos(v3+tx); \\n  s1 = sin(v1); s2 = sin(v2+ty); s3 = sin(v3+tx);\\n  reg10 = c2*c1; reg11 = c2*s1; reg12 = -s2;\\n  reg13 = s3*s2*c1 - c3*s1; reg14 = s3*s2*s1 + c3*c1; reg15 = s3*c2;\\n  reg16 = c3*s2*c1 + s3*s1; reg17 = c3*s2*s1 - s3*c1; reg18 = c3*c2;\\n\\n  //pop old RotMat\\n  reg20 =reg30; reg21 =reg31; reg22 =reg32; \\n  reg23 =reg33; reg24 =reg34; reg25 =reg35; \\n  reg26 =reg36; reg27 =reg37; reg28 =reg38; \\n\\n  //Multiply new RotMat by old one\\n  q20 = reg10*reg20 + reg11*reg23 + reg12*reg26;\\n  q21 = reg10*reg21 + reg11*reg24 + reg12*reg27;\\n  q22 = reg10*reg22 + reg11*reg25 + reg12*reg28;\\n  q23 = reg13*reg20 + reg14*reg23 + reg15*reg26;\\n  q24 = reg13*reg21 + reg14*reg24 + reg15*reg27;\\n  q25 = reg13*reg22 + reg14*reg25 + reg15*reg28;\\n  q26 = reg16*reg20 + reg17*reg23 + reg18*reg26;\\n  q27 = reg16*reg21 + reg17*reg24 + reg18*reg27;\\n  q28 = reg16*reg22 + reg17*reg25 + reg18*reg28;\\n\\n  reg20 =q20; reg21 =q21; reg22 =q22;\\n  reg23 =q23; reg24 =q24; reg25 =q25;\\n  reg26 =q26; reg27 =q27; reg28 =q28;\\n\\n  //***********BOT*************\\n  //Coord. Trans. must exactly match def in warp S. !!!!\\n  dist = 0.002;\\n  while (exec2(\\n    uvx = reg26*dist/q7; uvy = reg27*dist/q7; uvz = reg28*dist/q7;\\n    uvx += PosX; uvy += PosY; uvz += PosZ;\\n    uvx = 8.0*((uvx/8+30.5 - int(uvx/8+30.5))-.5);\\n    uvy = 8.0*((uvy/8+30.5 - int(uvy/8+30.5))-.5);\\n    uvz = 8.0*((uvz/8+30.5 - int(uvz/8+30.5))-.5);\\n    uvx0 = uvx+q8; uvy0 = uvy+q8; uvz0 = uvz+q8;\\n    loop (7+1,\\n      uvx = if (uvx > 1, 2-uvx, if(uvx < -1, -2-uvx, uvx));\\n      uvy = if (uvy > 1, 2-uvy, if(uvy < -1, -2-uvy, uvy));\\n      uvz = if (uvz > 1, 2-uvz, if(uvz < -1, -2-uvz, uvz));\\n      slen = uvx*uvx + uvy*uvy + uvz*uvz;\\n      uvx = if (slen < 0.25, uvx*4, if (slen < 1, uvx/slen, uvx)) *2.6 + uvx0; \\n      uvy = if (slen < 0.25, uvy*4, if (slen < 1, uvy/slen, uvy)) *2.6 + uvy0; \\n      uvz = if (slen < 0.25, uvz*4, if (slen < 1, uvz/slen, uvz)) *2.6 + uvz0; \\n    );\\n    len = sqrt(uvx*uvx + uvy*uvy + uvz*uvz);\\n    dist *= 1.1;\\n  ,(dist < 0.6)*(len > 30)));\\n  megabuf(n) = megabuf(n)*dec_s + (1-dec_s)*dist; //stores the 4 trial points\\n  avg = avg+abs(megabuf(n)/5);\\n); //end loop 5\\n\\nn = 0; avg = 0; loop (5, n=n+1; avg = avg+abs(megabuf(n)/5));\\n\\nxslope = min(max(2/avg*(megabuf(1)-megabuf(3)),-3),3);\\nyslope = min(max(2/avg*(megabuf(4)-megabuf(2)),-3),3);\\nmonitor = avg;\\ndist_ = dist_*dec_s + (1-dec_s)*dist;\\n\\nq10 = ds*q7; //compensation of lin. movement in GetDist and zoom uv\\nq14 = 1*abs(ds) + 2*(abs(v1) + abs(v2) + abs(v3)) + 1.0/255 + start*.05; \\n//q15 = sign(4*avg - 1)*pow(abs(4*avg - 1), 1.25); // 500*ds*q7; // + ( sign(v1)*sqrt(abs(v1)) + sign(v2)*sqrt(abs(v2)) + sign(v3)*sqrt(abs(v3)) )\\nq15 = 4*avg - 1.4;\\nq19 = .6 + .4*sin(time*.02+cran0*6); //brightness backgd\\nstart = start * .9;\\nq11 = v1; q12 = v2; q13 = v3;\\n//forward comp. of Rotation\\n\\nmonitor = 3.333*q15;","pixel_eqs_eel":"warp = 0.0; zoom = 1; dx = -q12/q16*(1+0*pow(x-.5,2)); dy = q13/q16*(1+0*pow(y-.5,2)); rot =q11;","warp":"float sustain;\\nfloat xlat_mutabledist;\\nfloat xlat_mutablestruc;\\nvec2 xlat_mutableuv1;\\nvec3 xlat_mutableuv2;\\n shader_body { \\n  mat3 tmpvar_1;\\n  tmpvar_1[uint(0)].x = q20;\\n  tmpvar_1[uint(0)].y = q23;\\n  tmpvar_1[uint(0)].z = q26;\\n  tmpvar_1[1u].x = q21;\\n  tmpvar_1[1u].y = q24;\\n  tmpvar_1[1u].z = q27;\\n  tmpvar_1[2u].x = q22;\\n  tmpvar_1[2u].y = q25;\\n  tmpvar_1[2u].z = q28;\\n  vec3 tmpvar_2;\\n  tmpvar_2.x = q4;\\n  tmpvar_2.y = q5;\\n  tmpvar_2.z = q6;\\n  sustain = (0.92 + (q14 * 1.5));\\n  vec2 uv_3;\\n  vec3 ret_4;\\n  uv_3 = (((uv - 0.5) * (1.0 - \\n    (q10 / (1.0 - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).z))\\n  )) + 0.5);\\n  xlat_mutableuv1 = (((uv_orig - 0.5) * aspect.xy) * q16);\\n  vec4 tmpvar_5;\\n  tmpvar_5 = fract((8.0 * texture (sampler_noise_lq, (uv_3 + rand_frame.yz))));\\n  vec3 tmpvar_6;\\n  tmpvar_6 = tmpvar_5.xyz;\\n  if ((tmpvar_5.y > 0.1)) {\\n    vec3 tmpvar_7;\\n    tmpvar_7 = (tmpvar_5.xyz - vec3(0.5, 0.5, 0.5));\\n    vec4 nb2_8;\\n    vec4 nb_9;\\n    vec2 tmpvar_10;\\n    tmpvar_10 = (0.003472222 * floor((\\n      (288.0 * texture (sampler_pc_main, (uv_3 - texsize.zw)).yz)\\n     + vec2(0.5, 0.5))));\\n    nb_9.x = (1.0 - (tmpvar_10.y + (0.03125 * \\n      (tmpvar_10.x - 0.505)\\n    )));\\n    vec2 tmpvar_11;\\n    tmpvar_11 = (0.003472222 * floor((\\n      (288.0 * texture (sampler_pc_main, (uv_3 + (texsize.zw * vec2(1.0, -1.0)))).yz)\\n     + vec2(0.5, 0.5))));\\n    nb_9.y = (1.0 - (tmpvar_11.y + (0.03125 * \\n      (tmpvar_11.x - 0.505)\\n    )));\\n    vec2 tmpvar_12;\\n    tmpvar_12 = (0.003472222 * floor((\\n      (288.0 * texture (sampler_pc_main, (uv_3 + texsize.zw)).yz)\\n     + vec2(0.5, 0.5))));\\n    nb_9.z = (1.0 - (tmpvar_12.y + (0.03125 * \\n      (tmpvar_12.x - 0.505)\\n    )));\\n    vec2 tmpvar_13;\\n    tmpvar_13 = (0.003472222 * floor((\\n      (288.0 * texture (sampler_pc_main, (uv_3 + (texsize.zw * vec2(-1.0, 1.0)))).yz)\\n     + vec2(0.5, 0.5))));\\n    nb_9.w = (1.0 - (tmpvar_13.y + (0.03125 * \\n      (tmpvar_13.x - 0.505)\\n    )));\\n    vec2 tmpvar_14;\\n    tmpvar_14 = (0.003472222 * floor((\\n      (288.0 * texture (sampler_pc_main, (uv_3 + (texsize.zw * vec2(0.0, -1.0)))).yz)\\n     + vec2(0.5, 0.5))));\\n    nb2_8.x = (1.0 - (tmpvar_14.y + (0.03125 * \\n      (tmpvar_14.x - 0.505)\\n    )));\\n    vec2 tmpvar_15;\\n    tmpvar_15 = (0.003472222 * floor((\\n      (288.0 * texture (sampler_pc_main, (uv_3 + (texsize.zw * vec2(1.0, 0.0)))).yz)\\n     + vec2(0.5, 0.5))));\\n    nb2_8.y = (1.0 - (tmpvar_15.y + (0.03125 * \\n      (tmpvar_15.x - 0.505)\\n    )));\\n    vec2 tmpvar_16;\\n    tmpvar_16 = (0.003472222 * floor((\\n      (288.0 * texture (sampler_pc_main, (uv_3 + (texsize.zw * vec2(0.0, 1.0)))).yz)\\n     + vec2(0.5, 0.5))));\\n    nb2_8.z = (1.0 - (tmpvar_16.y + (0.03125 * \\n      (tmpvar_16.x - 0.505)\\n    )));\\n    vec2 tmpvar_17;\\n    tmpvar_17 = (0.003472222 * floor((\\n      (288.0 * texture (sampler_pc_main, (uv_3 + (texsize.zw * vec2(-1.0, 0.0)))).yz)\\n     + vec2(0.5, 0.5))));\\n    nb2_8.w = (1.0 - (tmpvar_17.y + (0.03125 * \\n      (tmpvar_17.x - 0.505)\\n    )));\\n    vec4 tmpvar_18;\\n    tmpvar_18 = min (nb_9, nb2_8);\\n    nb_9.zw = tmpvar_18.zw;\\n    nb_9.xy = min (tmpvar_18.xy, tmpvar_18.zw);\\n    vec2 tmpvar_19;\\n    tmpvar_19 = (0.003472222 * floor((\\n      (288.0 * texture (sampler_pc_main, uv_3).yz)\\n     + vec2(0.5, 0.5))));\\n    vec2 tmpvar_20;\\n    tmpvar_20.x = (tmpvar_7.x * abs(tmpvar_7.y));\\n    tmpvar_20.y = (abs(tmpvar_7.x) * tmpvar_7.y);\\n    xlat_mutabledist = (min (min (nb_9.x, nb_9.y), (1.0 - \\n      (tmpvar_19.y + (0.03125 * (tmpvar_19.x - 0.505)))\\n    )) + (0.01 * tmpvar_20)).x;\\n  } else {\\n    xlat_mutabledist = tmpvar_6.x;\\n  };\\n  vec2 tmpvar_21;\\n  tmpvar_21 = (0.003472222 * floor((\\n    (288.0 * texture (sampler_pc_main, uv_3).yz)\\n   + vec2(0.5, 0.5))));\\n  xlat_mutabledist = (min (xlat_mutabledist, (1.0 - \\n    (tmpvar_21.y + (0.03125 * (tmpvar_21.x - 0.505)))\\n  )) - (q10 * 0.8));\\n  float tmpvar_22;\\n  tmpvar_22 = (xlat_mutabledist + (pow (xlat_mutabledist, 3.0) * 0.2));\\n  vec3 tmpvar_23;\\n  tmpvar_23.xy = (xlat_mutableuv1 * tmpvar_22);\\n  tmpvar_23.z = tmpvar_22;\\n  xlat_mutableuv2 = (((tmpvar_23 / q7) * tmpvar_1) + tmpvar_2);\\n  xlat_mutableuv2 = ((fract(\\n    ((xlat_mutableuv2 / 8.0) + 0.5)\\n  ) - 0.5) * 8.0);\\n  vec4 tmpvar_24;\\n  tmpvar_24.w = 0.0;\\n  tmpvar_24.xyz = (vec3((texture (sampler_noisevol_lq, (xlat_mutableuv2 / 16.0)).x * 3.0)) * 80.0);\\n  float tmpvar_25;\\n  tmpvar_25 = sqrt(dot (tmpvar_24.xyz, tmpvar_24.xyz));\\n  xlat_mutablestruc = (sqrt(dot (tmpvar_24.xyz, tmpvar_24.xyz)) / 80.0);\\n  if (((tmpvar_25 < 80.0) && (xlat_mutabledist > 0.005))) {\\n    ret_4.x = (((1.0 - sustain) * xlat_mutablestruc) + (sustain * texture (sampler_main, uv_3).x));\\n    vec2 tmpvar_26;\\n    tmpvar_26 = (0.003472222 * floor((\\n      (288.0 * vec2((1.0 - xlat_mutabledist)))\\n     + vec2(0.5, 0.5))));\\n    vec2 tmpvar_27;\\n    tmpvar_27.x = ((32.0 * (\\n      (1.0 - xlat_mutabledist)\\n     - tmpvar_26.x)) + 0.495);\\n    tmpvar_27.y = tmpvar_26.x;\\n    ret_4.yz = tmpvar_27;\\n  } else {\\n    vec3 tmpvar_28;\\n    tmpvar_28.x = (0.5 * (sustain + 1.0));\\n    tmpvar_28.y = sustain;\\n    tmpvar_28.z = sustain;\\n    vec3 tmpvar_29;\\n    tmpvar_29.y = 0.0;\\n    tmpvar_29.x = (1.0 - sustain);\\n    tmpvar_29.z = (1.0 - sustain);\\n    ret_4 = ((texture (sampler_fw_main, fract(uv_3)).xyz * tmpvar_28) - (0.01 * tmpvar_29));\\n  };\\n  vec4 tmpvar_30;\\n  tmpvar_30.w = 1.0;\\n  tmpvar_30.xyz = ret_4;\\n  ret = tmpvar_30.xyz;\\n }","comp":" shader_body { \\n  vec2 uv_1;\\n  vec2 dz_2;\\n  vec3 ret2_3;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = (abs((uv.x - 0.5)) + 0.5);\\n  tmpvar_4.y = uv.y;\\n  uv_1 = (abs((tmpvar_4 - 0.5)) + 0.5);\\n  ret2_3 = (texture (sampler_main, uv_1).xyz * (0.6 + (0.5 * \\n    sin(((uv_1.x * 10.0) + (3.141593 * (q27 + q28))))\\n  )));\\n  vec3 tmpvar_5;\\n  tmpvar_5 = mix (vec3(dot (texture (sampler_main, uv_1).xyz, vec3(0.32, 0.49, 0.29))), ret2_3, pow (ret2_3, vec3((0.15 + \\n    (mid_att * 0.025)\\n  ))));\\n  ret2_3 = tmpvar_5;\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv_1 - 0.5);\\n  vec2 tmpvar_7;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (vec2(0.0005, 0.0) * q21);\\n  tmpvar_7.x = (texture (sampler_main, (uv_1 + tmpvar_8)).x - texture (sampler_main, (uv_1 - tmpvar_8)).z);\\n  vec2 tmpvar_9;\\n  tmpvar_9 = (vec2(0.0, 0.0005) * q20);\\n  tmpvar_7.y = (texture (sampler_main, (uv_1 + tmpvar_9)).x - texture (sampler_main, (uv_1 - tmpvar_9)).z);\\n  dz_2 = (tmpvar_7 + ((texture (sampler_noise_hq, \\n    (((tmpvar_6 / (\\n      (((0.5 * q26) + (0.5 * q27)) / q16)\\n     + rad)) * ((q23 * 0.1) + (q24 * 0.1))) + q31)\\n  ) - 0.5) * 0.1).xy);\\n  vec2 tmpvar_10;\\n  tmpvar_10 = abs((tmpvar_6 - dz_2));\\n  vec3 tmpvar_11;\\n  float tmpvar_12;\\n  tmpvar_12 = abs(q21);\\n  float tmpvar_13;\\n  tmpvar_13 = abs(q20);\\n  tmpvar_11.x = (tmpvar_13 + tmpvar_12);\\n  float tmpvar_14;\\n  tmpvar_14 = abs(q22);\\n  tmpvar_11.y = (tmpvar_12 + tmpvar_14);\\n  tmpvar_11.z = (tmpvar_14 + tmpvar_13);\\n  vec3 tmpvar_15;\\n  tmpvar_15 = log(exp2((\\n    (3.141593 * tmpvar_11)\\n   * \\n    ((0.7 * texture (sampler_main, uv_1).xyz) + ((pow (\\n      abs((0.03333 / sqrt(dot (tmpvar_10, tmpvar_10))))\\n    , 0.75) * tmpvar_5) * (5.0 + sqrt(mid))))\\n  .yzx)));\\n  vec3 tmpvar_16;\\n  float tmpvar_17;\\n  tmpvar_17 = abs(q24);\\n  float tmpvar_18;\\n  tmpvar_18 = abs(q23);\\n  tmpvar_16.x = (tmpvar_18 + tmpvar_17);\\n  float tmpvar_19;\\n  tmpvar_19 = abs(q25);\\n  tmpvar_16.y = (tmpvar_17 + tmpvar_19);\\n  tmpvar_16.z = (tmpvar_19 + tmpvar_18);\\n  vec2 tmpvar_20;\\n  tmpvar_20 = fract(-(tmpvar_10));\\n  vec2 tmpvar_21;\\n  tmpvar_21 = fract(dz_2);\\n  vec3 tmpvar_22;\\n  tmpvar_22 = log(exp2((\\n    (3.141593 * tmpvar_16)\\n   * texture (sampler_main, \\n    fract(-(abs((tmpvar_20 - \\n      (2.0 * (dot (tmpvar_21, tmpvar_20) * tmpvar_21))\\n    ))))\\n  ).xyz)));\\n  vec3 tmpvar_23;\\n  float tmpvar_24;\\n  tmpvar_24 = abs(q27);\\n  float tmpvar_25;\\n  tmpvar_25 = abs(q26);\\n  tmpvar_23.x = (tmpvar_25 + tmpvar_24);\\n  float tmpvar_26;\\n  tmpvar_26 = abs(q28);\\n  tmpvar_23.y = (tmpvar_24 + tmpvar_26);\\n  tmpvar_23.z = (tmpvar_26 + tmpvar_25);\\n  vec3 tmpvar_27;\\n  tmpvar_27 = log(exp2((\\n    (3.141593 * tmpvar_23)\\n   * texture (sampler_main, \\n    fract(-(tmpvar_10))\\n  ).zxy)));\\n  vec3 tmpvar_28;\\n  tmpvar_28 = mix (tmpvar_15, tmpvar_22, (1.5708 - (1.570796 - \\n    (sign(tmpvar_27) * (1.570796 - (sqrt(\\n      (1.0 - abs(tmpvar_27))\\n    ) * (1.570796 + \\n      (abs(tmpvar_27) * (-0.2146018 + (abs(tmpvar_27) * (0.08656672 + \\n        (abs(tmpvar_27) * -0.03102955)\\n      ))))\\n    ))))\\n  )));\\n  vec3 tmpvar_29;\\n  tmpvar_29 = mix (tmpvar_15, tmpvar_22, tmpvar_27);\\n  vec3 tmpvar_30;\\n  tmpvar_30.z = 0.0;\\n  tmpvar_30.xy = ((uv_1 - 0.5) + (0.4 * dot (texture (sampler_main, uv_1).xyz, vec3(0.32, 0.49, 0.29))));\\n  float x_31;\\n  x_31 = (fract((\\n    (dot (tmpvar_30, vec3(0.32, 0.49, 0.29)) * 3.0)\\n   - time)) - 0.5);\\n  vec4 tmpvar_32;\\n  tmpvar_32.w = 1.0;\\n  tmpvar_32.xyz = ((0.637 * abs(\\n    mix ((1.5708 - (1.570796 - (\\n      sign(tmpvar_29)\\n     * \\n      (1.570796 - (sqrt((1.0 - \\n        abs(tmpvar_29)\\n      )) * (1.570796 + (\\n        abs(tmpvar_29)\\n       * \\n        (-0.2146018 + (abs(tmpvar_29) * (0.08656672 + (\\n          abs(tmpvar_29)\\n         * -0.03102955))))\\n      ))))\\n    ))), (sign(tmpvar_28) * (1.570796 - (\\n      sqrt((1.0 - abs(tmpvar_28)))\\n     * \\n      (1.570796 + (abs(tmpvar_28) * (-0.2146018 + (\\n        abs(tmpvar_28)\\n       * \\n        (0.08656672 + (abs(tmpvar_28) * -0.03102955))\\n      ))))\\n    ))), ((3.0 * q15) * mix ((1.5708 - \\n      (1.570796 - (sign(tmpvar_15) * (1.570796 - (\\n        sqrt((1.0 - abs(tmpvar_15)))\\n       * \\n        (1.570796 + (abs(tmpvar_15) * (-0.2146018 + (\\n          abs(tmpvar_15)\\n         * \\n          (0.08656672 + (abs(tmpvar_15) * -0.03102955))\\n        ))))\\n      ))))\\n    ), (1.5708 - \\n      (1.570796 - (sign(tmpvar_22) * (1.570796 - (\\n        sqrt((1.0 - abs(tmpvar_22)))\\n       * \\n        (1.570796 + (abs(tmpvar_22) * (-0.2146018 + (\\n          abs(tmpvar_22)\\n         * \\n          (0.08656672 + (abs(tmpvar_22) * -0.03102955))\\n        ))))\\n      ))))\\n    ), (\\n      sign(tmpvar_27)\\n     * \\n      (1.570796 - (sqrt((1.0 - \\n        abs(tmpvar_27)\\n      )) * (1.570796 + (\\n        abs(tmpvar_27)\\n       * \\n        (-0.2146018 + (abs(tmpvar_27) * (0.08656672 + (\\n          abs(tmpvar_27)\\n         * -0.03102955))))\\n      ))))\\n    ))))\\n  )) + (exp(\\n    (-20.0 * sqrt((x_31 * x_31)))\\n  ) * q10));\\n  ret = tmpvar_32.xyz;\\n }"}')},1444:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.925,"echo_zoom":1.007,"echo_orient":3,"wave_brighten":0,"brighten":1,"darken":1,"solarize":1,"wave_a":0.001,"wave_scale":0.01,"wave_smoothing":0,"modwavealphastart":1,"modwavealphaend":1,"warpanimspeed":1.459,"warpscale":2.007,"fshader":1,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0.015,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":5,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"textured":1,"rad":0.789,"ang":0.6283,"tex_zoom":1.17257,"r":0,"g":1,"border_a":0},"init_eqs_eel":"vx = 0;\\nvy = 0;","frame_eqs_eel":"rad = 0.65 + bass*0.1;\\n\\nan = an*0.99 + (bass-treb)*0.1;\\nang = an*0.1 + 0.6;"},{"baseVals":{"sides":100,"thickoutline":1,"textured":1,"rad":0.40271,"tex_zoom":2.23888,"g":1,"b":1,"r2":0.08,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"textured":1,"rad":1.21525,"tex_ang":2.57611,"tex_zoom":0.55595,"g":1,"b":1,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":34,"x":0.99,"y":0.99,"rad":0.02558,"r":0,"g":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"samples":495,"sep":4,"spectrum":1,"thick":1,"additive":1,"scaling":100,"smoothing":1,"r":0,"g":0.04,"b":0,"a":0.99},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\nab = 1;","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt8 = .07;\\nt7 = 1;","point_eqs_eel":"t7 = -t7;\\npi = asin(1);\\nn = 180;\\nrd = 0.075;//+(value1*10+1)*((sample*512)%2)*0.02;\\nmy_x = sin(sample*pi*4+(t7+1)*t8)*0.5 + cos(sample*pi*n)*rd*sin(sample*pi*4+(t7+1)*t8);\\nmy_y = cos(sample*pi*4+(t7+1)*t8)*0.5 + cos(sample*pi*n)*rd*cos(sample*pi*4+(t7+1)*t8);\\nmy_z = sin(sample*pi*n)*rd;\\n\\n\\n\\nd = 1.4; // makes the perspective impact\\nzoom = 0.65;\\n\\nw1 = q2;\\nw2 = q3;\\nw3 = q4;\\n\\nx1 = cos(w1)*my_x + sin(w1)*my_y;\\ny1 = -sin(w1)*my_x + cos(w1)*my_y;\\nz1 = my_z;\\n\\nx2 = cos(w2)*x1 + sin(w2)*z1;\\nz2 = -sin(w2)*x1 + cos(w2)*z1;\\ny2 = y1;\\n\\ny3 = cos(w3)*y2 + sin(w3)*z2;\\nz3 = -sin(w3)*y2 + cos(w3)*z2;\\nx3 = x2;\\n\\n// perspective calculation\\n\\nl = sqrt(x3*x3 + y3*y3);\\nw = atan2(x3,y3);\\np = tan(asin(1) + atan2(d+z3,l));\\nd = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));\\n\\nmy_x = zoom*sin(w)*p;\\nmy_y = zoom*cos(w)*p;\\n\\nx = 0.5 + my_x;\\ny = 0.5 + my_y;\\n\\nb = -z3 + 0.5;\\nb = min(1,max(0,b))*0.5;\\nr = 1-b*2\\n//b = (1 - r)*0.1;\\n//a =  7/(d*16) - 0.1;"},{"baseVals":{"samples":445,"sep":4,"spectrum":1,"usedots":1,"thick":1,"additive":1,"scaling":100,"smoothing":1,"a":0.99,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\nab = 1;","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt8 = .09;\\nt7 = 1;","point_eqs_eel":"t7 = -t7;\\npi = asin(1);\\nn = 160;\\nrd = 0.075;//+(value1*10+1)*((sample*512)%2)*0.02;\\nxx = sin(sample*pi*4+(t7+1)*t8)*0.5 + cos(sample*pi*n)*rd*sin(sample*pi*4);\\nyy = cos(sample*pi*4+(t7+1)*t8)*0.5 + cos(sample*pi*n)*rd*cos(sample*pi*4);\\nzz = sin(sample*pi*n)*rd;\\n\\nd = sqrt( xx*xx + yy*yy + zz*zz);\\nd1 = 1;\\nxx = xx*d1;\\nyy = yy*d1;\\nzz = zz*d1;\\n\\nw = -d*t5;\\ns1 = sin(t2*1+w);\\ns2 = sin(t3*1+w);\\ns3 = sin(t4*1+w);\\nc1 = cos(t2*1+w);\\nc2 = cos(t3*1+w);\\nc3 = cos(t4*1+w);\\n\\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\\n\\na = 0.75;\\nzoom = 0.5*atan2(a,a+z);//0.5*(1/(z+a));\\nx = 0.5 + zoom*x1;\\ny = 0.5 + zoom*y1;\\n\\npi3 = 3.1415*2*0.3333;\\nt = sample*pi*4-2*time;\\nc=1.6;\\nr = sin(t)*c;\\n\\ng = sin(t+pi3)*c;\\n\\nb = sin(t-pi3)*c;\\n\\nj = 0.71;\\n//r = 0.5+xx*j;\\n//g = 0.5+yy*j;\\n//b = 0.5+zz*j;\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\na = 1-(z + a)/2;\\n"},{"baseVals":{"sep":4,"scaling":0.09348,"smoothing":1,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\nab = 1;","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;","point_eqs_eel":"s8 = sample*383;\\n\\ns = 100;//0.3;\\nxx = sin(sample*s);//((sample*343)%7 - 3.5)*s;\\nzz = cos(sample*s);//((sample*49)%7 - 3.5)*s;\\nyy = (sample-0.5);//((sample*7)%7 - 3.5)*s;\\n\\nd = sqrt( xx*xx + yy*yy + zz*zz);\\nd1 = 1/d;\\nxx = xx*d1;\\nyy = yy*d1;\\nzz = zz*d1;\\n\\nw = 1+0*(d)*(t6);//(sample*sin(time*0.3)*0.02-1);\\ns1 = sin(t2*w);\\ns2 = sin(t3*w);\\ns3 = sin(t4*w);\\nc1 = cos(t2*w);\\nc2 = cos(t3*w);\\nc3 = cos(t4*w);\\n\\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\\n\\na = 2;\\nzoom = 0.3*atan2(a-z,a);//0.5*(1/(z+a));\\nx = 0.5 + zoom*x1;\\ny = 0.5 + zoom*y1;\\n\\npi3 = 3.1415*2*0.3333;\\nt = -z*13+t5*20;\\nc = 10;\\nr = sin(t)*c;\\n\\ng = sin(t+pi3)*c;\\n\\nb = sin(t-pi3)*c;\\n\\nj = 0.71;\\n//r = 0.5+xx*j;\\n//g = 0.5+yy*j;\\n//b = 0.5+zz*j;\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\n\\n\\na = sigmoid(-z,10)*1.0+0.0;"},{"baseVals":{"samples":484,"sep":4,"usedots":1,"scaling":9.94125,"smoothing":1,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\nab = 1;","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;","point_eqs_eel":"s8 = sample*383;\\n\\ns = 0.25;\\nxx = ((sample*(465))%15 - 8)*s*2;\\nyy = ((sample*31)%31 - 16)*s;\\nzz = 0;\\n\\nd = sqrt( xx*xx + yy*yy + zz*zz);\\nw = 1;\\n\\ns1 = sin(t2*1);\\ns2 = sin(t3*0);\\ns3 = sin(t4*1);\\nc1 = cos(t2*1);\\nc2 = cos(t3*0);\\nc3 = cos(t4*1);\\n\\n\\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\\n\\na = 500;\\nzoom = 0.05*atan2(a-z,a);//0.5*(1/(z+a));\\nx = 0.5 + zoom*x1;\\ny = 0.5 + zoom*y1;\\n\\npi3 = 3.1415*2*0.3333;\\nt = -z*5+t5;\\nc = 10;\\nr = sin(t)*c;\\n\\ng = sin(t+pi3)*c;\\n\\nb = sin(t-pi3)*c;\\n\\nj = 0.71;\\n//r = 0.5+xx*j;\\n//g = 0.5+yy*j;\\n//b = 0.5+zz*j;\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\n\\n\\na = sigmoid(z,5);"}],"init_eqs_eel":"step = 0;","frame_eqs_eel":"dec_med = pow (0.7, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, -2+avg+peak) * above (time, t0+.1);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %16;\\nindex2 = (index2 + is_beat*bnot(index))%2;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass_att + mid_att + treb_att;\\nq27 = index + 1;\\nq28 = index2;\\n\\nq29 = ((index%2)-.5)*2;\\n\\nk1 =  is_beat*equal(index%2,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.1416/8;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\n//ds = max ((q26-.2),0);\\n//step = step + ds/10;\\n\\nstep = step + q24 ;\\n\\np3 = p3*dec_slow + (1-dec_slow) * step;\\nq30 = step;\\n\\np4 = dec_slow*p4 + (1-dec_slow)*q27;\\nq31 = p4;\\n\\nq12 = time -t0;\\nmonitor = q12;\\n\\n\\n\\nzoom = 1;\\nrot = -0 ;\\ndx = .00;","pixel_eqs_eel":"zoom = 1.3;","warp":" shader_body { \\n  vec2 uv_1;\\n  vec2 uv6_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = ((uv - 0.5) * aspect.xy);\\n  float tmpvar_4;\\n  tmpvar_4 = (((q29 * 2.0) * sqrt(\\n    dot (tmpvar_3, tmpvar_3)\\n  )) + (rand_frame * 64.0)).x;\\n  uv_1 = (uv + (clamp (\\n    ((sin(tmpvar_4) / cos(tmpvar_4)) * normalize(tmpvar_3))\\n  , vec2(-2.0, -2.0), vec2(2.0, 2.0)) / 20.0));\\n  uv6_2 = (0.4 * sin((tmpvar_3 * 22.0)));\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = (((q24 * \\n    (((texture (sampler_main, uv_1).xyz - (\\n      ((texture (sampler_blur1, fract(uv_1)).xyz * scale1) + bias1)\\n     * 0.04)) + (0.15 * (vec3(\\n      (0.1 / sqrt(dot (uv6_2, uv6_2)))\\n    ) * roam_cos.xyz))) - 0.02)\\n  ) * 0.98) + ((1.0 - q24) * texture (sampler_main, uv_orig).xyz));\\n  ret = tmpvar_5.xyz;\\n }","comp":"uniform sampler2D sampler_rand00;\\n shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1 = texture (sampler_main, uv);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ((texture (sampler_rand00, (0.4 + \\n    (0.6 * tmpvar_1.xy)\\n  )) * tmpvar_1.z) * 3.0).xyz;\\n  ret = tmpvar_2.xyz;\\n }"}')},6411:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":0,"gammaadj":2.693,"decay":0.97,"echo_zoom":1.628259,"wave_mode":6,"wrap":0,"wave_a":0.2,"wave_scale":1.09326,"wave_smoothing":0.1,"wave_mystery":-0.4,"warpscale":3.259127,"fshader":1,"zoom":1.00496,"warp":0.180378,"sx":0.999666,"sy":0.9999,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"wave_y":0.38,"ob_a":0.1,"ib_r":0.55,"ib_a":0.1,"mv_x":57.599998,"mv_y":44.16,"mv_dx":0.002,"mv_dy":0.002,"mv_l":5,"mv_r":0.7,"mv_g":0.4,"mv_b":0.5,"mv_a":0.1},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"mv_r = wave_r + 0.35*( 0.60*sin(0.980*time) + 0.40*sin(1.047*time) );\\nmv_g = wave_g + 0.35*( 0.60*sin(0.835*time) + 0.40*sin(1.081*time) );\\nmv_b = wave_b + 0.35*( 0.60*sin(0.814*time) + 0.40*sin(1.011*time));\\nq1 = (cx*2-1) + 0.62*( 0.60*sin(0.474*time) + 0.40*sin(0.394*time) );\\nq2 = (cy*2-1) + 0.62*( 0.60*sin(0.413*time) + 0.40*sin(0.323*time) );\\nq3 = (cx*2-1) + 0.62*( 0.60*sin(0.274*-time) + 0.40*sin(0.464*time) );\\nq4 = (cy*2-1) + 0.62*( 0.60*sin(0.334*time) + 0.40*sin(0.371*-time) );\\ndecay = decay - 0.01*equal(frame%5,0);\\ncy = cy + 0.1*sin(time*0.245);\\ncx = cx + 0.1*cos(time*0341);\\nwave_mystery = 2;\\n//mv_l = 2*max(max(bass,bass_att)-1.2,0);\\nwarp = warp * pow(2, 0.6*sin(time*0.194));","pixel_eqs_eel":"du = x*2-1 - q1;\\ndv = y*2-1 - q2;\\ndist = sqrt(du*du+dv*dv);\\nang2 = atan2(du,dv);\\nmult = 0.008/(dist+0.4);\\ndx = mult*sin(ang2-1.5)*aspectx;\\ndy = mult*cos(ang2-1.5)*aspecty;\\ndu = x*2-1 - q3;\\ndv = y*2-1 - q4;\\ndist = sqrt(du*du+dv*dv);\\nang2 = atan2(du,dv);\\nmult = 0.008/(dist+0.7);\\ndx = dx + mult*sin(ang2+1.5)*aspectx;\\ndy = dy + mult*cos(ang2+1.5)*aspecty;","warp":"","comp":""}')},4782:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1.9,"echo_zoom":1.169,"additivewave":1,"modwavealphabyvolume":1,"wave_a":2.929,"wave_scale":0.53,"wave_smoothing":0,"wave_mystery":-0.26,"modwavealphastart":1.15,"modwavealphaend":1.33,"warpscale":3.138,"zoomexp":2.00676,"zoom":1.033,"warp":0.04298,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"wave_y":0.48,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = 1;\\nwave_g = 0;\\nwave_b = 0;\\nrot = rot + 0.010*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );\\ncx = cx + 0.110*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\ncy = cy + 0.110*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\\ndx = dx + 0.0015*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );\\ndy = dy + 0.0015*( 0.60*sin(0.284*time) + 0.40*sin(0.247*time) );\\ndecay = decay - 0.01*equal(frame%6,0);\\ndx = dx + dx_residual*0.5;\\ndy = dy + dy_residual*0.5;\\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.96+1.3);\\ndx_residual = equal(bass_thresh,2.13)*0.016*sin(time*7) + (1-equal(bass_thresh,2.13))*dx_residual;\\ndy_residual = equal(bass_thresh,2.13)*0.012*sin(time*9) + (1-equal(bass_thresh,2.13))*dy_residual;\\nwave_x = wave_x - dx_residual*7;\\nwave_y = wave_y - dy_residual*7;\\n//wave_mystery = time*0.057;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 xfer_1;\\n  vec3 ret_2;\\n  vec4 tmpvar_3;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (uv - 0.5);\\n  tmpvar_3 = texture (sampler_main, (tmpvar_4 + 0.5));\\n  ret_2 = (tmpvar_3.xyz / ((tmpvar_3.x + tmpvar_3.y) + tmpvar_3.z));\\n  ret_2 = texture (sampler_main, ((tmpvar_4 * dot (ret_2, vec3(1.0, 0.975, 0.95))) + 0.5)).xyz;\\n  vec3 tmpvar_5;\\n  tmpvar_5 = clamp (((ret_2 - 0.05) * 99.0), 0.0, 1.0);\\n  xfer_1.x = tmpvar_5.x;\\n  xfer_1.yz = (tmpvar_5.yz * clamp ((\\n    (0.1 - ret_2.xy)\\n   * 99.0), 0.0, 1.0));\\n  ret_2 = (ret_2 + (vec3(-0.014, 0.014, 0.0) * tmpvar_5.xxx));\\n  ret_2 = (ret_2 + (vec3(0.0, -0.08, 0.08) * xfer_1.yyy));\\n  ret_2 = (ret_2 + (vec3(0.0, 0.0, -0.02) * xfer_1.zzz));\\n  ret_2 = (ret_2 + (vec3(5.0, 15.0, 40.0) * (\\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5)\\n   / 256.0)));\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = ret_2;\\n  ret = tmpvar_6.xyz;\\n }","comp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1 = texture (sampler_main, uv);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = (tmpvar_1.xyz * (vec3(5.4, 1.53, 2.7) * dot (tmpvar_1.xyz, vec3(0.32, 0.49, 0.29))));\\n  ret = tmpvar_2.xyz;\\n }"}')},2308:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1.998,"wave_mode":1,"wave_thick":1,"wave_a":5.9,"wave_scale":0.559671,"wave_smoothing":0.9,"warpscale":2.853,"rot":-0.01,"warp":0.099892,"wave_r":0.9,"wave_g":0.45,"wave_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.100*( 0.60*sin(0.933*time) + 0.40*sin(1.045*time) );\\nwave_g = wave_g + 0.050*( 0.60*sin(0.900*time) + 0.40*sin(0.956*time) );\\ndecay = decay - 0.01*equal(frame%50,0);","pixel_eqs_eel":"zoom=0.9615+rad*0.1;","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (texture (sampler_main, uv).xyz * 0.98);\\n  ret = tmpvar_1.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  ret_1 = (texture (sampler_main, uv).xyz - ((texture (sampler_blur1, uv).xyz * scale1) + bias1));\\n  ret_1 = (ret_1 * 4.5);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ret_1;\\n  ret = tmpvar_2.xyz;\\n }"}')},3374:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.9,"echo_zoom":1.16936,"wave_mode":2,"wave_a":0.027265,"wave_scale":1.015009,"wave_smoothing":0.522,"modwavealphastart":0.83,"modwavealphaend":1.31,"warpscale":3.138,"zoom":1.033,"warp":0.148366,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = 0.85 + 0.35*sin(0.437*time+1) + 0.55*sin(0.197*time+4);\\nwave_g = 0.85 + 0.35*sin(0.544*time+2) + 0.55*sin(0.143*time+5);\\nwave_b = 0.85 + 0.35*sin(0.751*time+3) + 0.55*sin(0.117*time+6);\\nwave_r = sqrt(wave_r);\\nwave_g = sqrt(wave_g);\\nwave_b = sqrt(wave_b);\\nrot = rot + 0.010*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );\\ncx = cx + 0.210*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\ncy = cy + 0.210*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\\ndx = dx + 0.003*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );\\ndy = dy + 0.003*( 0.60*sin(0.284*time) + 0.40*sin(0.247*time) );\\ndecay = decay - 0.01*equal(frame%6,0);\\ndx = dx + dx_residual;\\ndy = dy + dy_residual;\\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.96+1.3);\\ndx_residual = equal(bass_thresh,2.13)*0.016*sin(time*7) + (1-equal(bass_thresh,2.13))*dx_residual;\\ndy_residual = equal(bass_thresh,2.13)*0.012*sin(time*9) + (1-equal(bass_thresh,2.13))*dy_residual;\\nwave_x = wave_x - dx_residual*7;\\nwave_y = wave_y - dy_residual*7;\\nwave_mystery = time*0.03;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  ret_1 = (texture (sampler_main, uv).xyz + ((\\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5)\\n   / 256.0) * 3.0));\\n  vec3 tmpvar_2;\\n  tmpvar_2 = fract((ret_1 - 0.005));\\n  ret_1 = tmpvar_2;\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = tmpvar_2;\\n  ret = tmpvar_3.xyz;\\n }","comp":"uniform sampler2D sampler_seaweed;\\n shader_body { \\n  vec3 ret_1;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv);\\n  ret_1 = tmpvar_2.xyz;\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = ret_1.x;\\n  tmpvar_3.y = (time * 0.003);\\n  vec3 tmpvar_4;\\n  tmpvar_4 = ((texture (sampler_seaweed, (0.4 + tmpvar_3)) * tmpvar_2.z) * 3.0).xyz;\\n  ret_1 = tmpvar_4;\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = tmpvar_4;\\n  ret = tmpvar_5.xyz;\\n }"}')},5371:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":2.7,"wave_mode":1,"wave_a":2.707,"wave_scale":1.025,"wave_smoothing":0.1,"warpscale":1.331,"zoom":1.014,"rot":-0.06,"warp":0.02944,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.350*( 0.60*sin(3.980*time) + 0.40*sin(11.047*time) );\\nwave_g = wave_g + 0.350*( 0.60*sin(0.835*time) + 0.40*sin(1.081*time) );\\nwave_b = wave_b + 0.350*( 0.60*sin(0.814*time) + 0.40*sin(1.011*time) );\\ncx = cx + 0.110*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\ncy = cy + 0.110*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\\ndx = dx + 0.01*( 0.60*sin(0.173*time) + 0.40*sin(0.223*time) );\\ndecay = decay - 0.01*equal(frame%20,0);","pixel_eqs_eel":"","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (texture (sampler_main, (uv + (\\n    (texture (sampler_main, (mix (uv, uv_orig, vec2(-1.0, -1.0)) + texsize.zw)).xy - 0.37)\\n   * 0.03))).xyz - 0.004);\\n  ret = tmpvar_1.xyz;\\n }","comp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1 = texture (sampler_main, uv);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = mix (vec3(dot (tmpvar_1.xyz, vec3(0.3333, 0.3333, 0.3333))), tmpvar_1.xyz, vec3(3.0, 3.0, 3.0));\\n  ret = tmpvar_2.xyz;\\n }"}')},2956:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":2,"gammaadj":2.7,"wave_mode":1,"modwavealphabyvolume":1,"wave_a":2.707,"wave_scale":1.025,"wave_smoothing":0.1,"modwavealphastart":0.77,"modwavealphaend":1.01,"warpscale":1.331,"zoom":1.014,"warp":0.21786,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.350*( 0.60*sin(3.980*time) + 0.40*sin(11.047*time) );\\nwave_g = wave_g + 0.350*( 0.60*sin(0.835*time) + 0.40*sin(1.081*time) );\\nwave_b = wave_b + 0.350*( 0.60*sin(0.814*time) + 0.40*sin(1.011*time) );\\ncx = cx + 0.110*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\ncy = cy + 0.110*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\\ndx = dx + 0.005*( 0.60*sin(0.173*time) + 0.40*sin(0.223*time) );\\ndecay = decay - 0.01*equal(frame%20,0);","pixel_eqs_eel":"","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (texture (sampler_main, (uv + (\\n    (texture (sampler_main, (mix (uv, uv_orig, vec2(-1.0, -1.0)) + texsize.zw)).xy - 0.37)\\n   * 0.01))).xyz - 0.004);\\n  ret = tmpvar_1.xyz;\\n }","comp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1 = texture (sampler_main, uv);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = mix (vec3(dot (tmpvar_1.xyz, vec3(0.3333, 0.3333, 0.3333))), tmpvar_1.xyz, vec3(3.0, 3.0, 3.0));\\n  ret = tmpvar_2.xyz;\\n }"}')},5828:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":3,"decay":1,"wave_mode":6,"wave_dots":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":2.965,"wave_scale":23.563,"wave_smoothing":0.9,"modwavealphastart":0.83,"modwavealphaend":1.15,"warpscale":1.772,"zoomexp":4.401,"zoom":1.011,"rot":0.003,"warp":0,"wave_r":0.49,"wave_g":0.49,"wave_b":0.49,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"t = time*12.3;\\nwave_x = wave_x + 0.350*( 0.70*sin(2.221*time*5) + 0.30*sin(1.821*time*15) );\\nwave_y = wave_y + 0.350*( 0.30*sin(1.942*time*5) + 0.70*sin(2.522*time*15) );\\nwave_r = wave_r + 0.790*( 0.60*sin(0.823*t) + 0.40*sin(0.916*t) );\\nwave_g = wave_g + 0.790*( 0.60*sin(0.900*t) + 0.40*sin(1.023*t) );\\nwave_b = wave_b + 0.790*( 0.60*sin(0.808*t) + 0.40*sin(0.949*t) );\\nrot = rot + 0.030*( 0.60*sin(0.38*time) + 0.40*sin(0.54*time+4) );\\nzoom = zoom + 0.015*( 0.60*sin(0.29*time+1) + 0.40*sin(0.43*time+2) );\\ndx = dx + 0.002*( 0.60*sin(0.434*time) + 0.40*sin(0.277*time) );\\ndy = dy + 0.002*( 0.60*sin(0.384*time) + 0.40*sin(0.477*time) );","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  ret_1 = (texture (sampler_main, (uv + (\\n    ((texture (sampler_main, uv).xyz - ((\\n      (texture (sampler_blur1, uv).xyz * scale1)\\n     + bias1) * 5.0)).xy * texsize.zw)\\n   * 3.0))).xyz + ((\\n    (texture (sampler_noise_lq, ((uv_orig * texsize.xy) * texsize_noise_lq.zw)).xyz * 2.0)\\n   - 1.0) * 0.013));\\n  ret_1 = (ret_1 - 0.00014);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ret_1;\\n  ret = tmpvar_2.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv);\\n  vec3 tmpvar_3;\\n  tmpvar_3.z = 0.0;\\n  tmpvar_3.xy = texsize.zw;\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (tmpvar_3 * 1.25);\\n  ret_1 = (mix (vec3(dot (tmpvar_2.xyz, vec3(0.3333, 0.3333, 0.3333))), tmpvar_2.xyz, vec3(1.8, 1.8, 1.8)) * 0.5);\\n  ret_1 = (ret_1 + (vec3(5.4, 3.78, 1.62) * clamp (\\n    (dot (((texture (sampler_blur1, \\n      (uv + tmpvar_4.xz)\\n    ).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29)) - dot (((texture (sampler_blur1, \\n      (uv - tmpvar_4.xz)\\n    ).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29)))\\n  , 0.0, 1.0)));\\n  ret_1 = (ret_1 + (vec3(1.08, 2.7, 3.78) * clamp (\\n    (dot (((texture (sampler_blur1, \\n      (uv + tmpvar_4.zy)\\n    ).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29)) - dot (((texture (sampler_blur1, \\n      (uv - tmpvar_4.zy)\\n    ).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29)))\\n  , 0.0, 1.0)));\\n  ret_1 = (ret_1 * 1.6);\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = ret_1;\\n  ret = tmpvar_5.xyz;\\n }"}')},1956:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.9,"echo_zoom":1.169,"wave_mode":7,"additivewave":1,"wave_thick":1,"wave_a":0.051,"wave_scale":2.827,"wave_smoothing":0.09,"modwavealphastart":0.63,"modwavealphaend":0.87,"warpscale":3.138,"zoom":1.007,"warp":0.01029,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"wave_y":0.72,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = 0.85 + 0.25*sin(0.437*time+1);\\nwave_g = 0.85 + 0.25*sin(0.544*time+2);\\nwave_b = 0.85 + 0.25*sin(0.751*time+3);\\nrot = rot + 0.010*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );\\ncx = cx + 0.210*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\ncy = cy + 0.210*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\\ndx = dx + 0.003*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );\\ndy = dy + 0.003*( 0.60*sin(0.284*time) + 0.40*sin(0.247*time) );\\ndecay = decay - 0.01*equal(frame%6,0);\\ndx = dx + dx_residual;\\ndy = dy + dy_residual;\\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.96+1.3);\\ndx_residual = equal(bass_thresh,2.13)*0.016*sin(time*7) + (1-equal(bass_thresh,2.13))*dx_residual;\\ndy_residual = equal(bass_thresh,2.13)*0.012*sin(time*9) + (1-equal(bass_thresh,2.13))*dy_residual;\\nwave_x = wave_x - dx_residual*7;\\nwave_y = wave_y - dy_residual*7;\\nwave_mystery = time*0.03;\\nwarp = warp * (1 + 0.3*cos(time*0.284+4));\\nzoom = zoom + 0.007*cos(time*0.317+2);","pixel_eqs_eel":"","warp":"uniform sampler2D sampler_cells;\\n shader_body { \\n  vec3 ret_1;\\n  ret_1 = (texture (sampler_main, uv).xyz + ((texture (sampler_noise_lq, \\n    (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)\\n  ).xyz - 0.5) / 256.0));\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_cells, (uv_orig * aspect.xy));\\n  vec2 x_3;\\n  x_3 = (uv - uv_orig);\\n  ret_1 = (mix (ret_1, tmpvar_2.xyz, vec3((\\n    clamp ((1.0 - (abs(\\n      (((dot (tmpvar_2.xyz, vec3(0.32, 0.49, 0.29)) * 0.8) + 0.1) - (0.5 + (roam_cos.y * 0.25)))\\n    ) * 43.0)), 0.0, 1.0)\\n   * 0.07))) * (0.97 + (0.03 * \\n    clamp ((sqrt(dot (x_3, x_3)) * 200.0), 0.0, 1.0)\\n  )));\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = ret_1;\\n  ret = tmpvar_4.xyz;\\n }","comp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1 = texture (sampler_main, uv);\\n  float tmpvar_2;\\n  tmpvar_2 = dot (tmpvar_1.xyz, vec3(0.3, 0.5, 0.2));\\n  vec3 x_3;\\n  x_3 = (tmpvar_1.xyz - vec3(tmpvar_2));\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = (mix (vec3(tmpvar_2), tmpvar_1.xyz, vec3((\\n    sqrt(dot (x_3, x_3))\\n   * 70.0))) * 1.15);\\n  ret = tmpvar_4.xyz;\\n }"}')},4228:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":5,"decay":0.97,"wave_mode":2,"bmotionvectorson":0,"wave_a":3.5,"wave_scale":2.72,"wave_smoothing":0.77,"warpscale":2.853,"zoom":1.046,"rot":0.02,"warp":1.42,"wave_r":0.6,"wave_g":0.6,"wave_b":0.6,"wave_y":0.47},"shapes":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.400*( 0.60*sin(0.933*time) + 0.40*sin(1.045*time) );\\nwave_g = wave_g + 0.400*( 0.60*sin(0.900*time) + 0.40*sin(0.956*time) );\\nwave_b = wave_b + 0.400*( 0.60*sin(0.910*time) + 0.40*sin(0.920*time) );\\nzoom = zoom + 0.023*( 0.60*sin(0.339*time) + 0.40*sin(0.276*time) );\\nrot = rot + 0.030*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );\\ncx = cx + 0.070*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\ncy = cy + 0.070*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );","pixel_eqs_eel":"zoom=zoom+0.27*sin(time*1.55+rad*5);","warp":"","comp":""}')},2655:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":5,"decay":0.97,"wave_mode":2,"wave_a":3.5,"wave_scale":2.72,"wave_smoothing":0.77,"warpscale":2.853,"zoom":1.046,"rot":0.02,"warp":1.42,"wave_r":0.6,"wave_g":0.6,"wave_b":0.6,"wave_y":0.47,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.400*( 0.60*sin(0.933*time) + 0.40*sin(1.045*time) );\\nwave_g = wave_g + 0.400*( 0.60*sin(0.900*time) + 0.40*sin(0.956*time) );\\nwave_b = wave_b + 0.400*( 0.60*sin(0.910*time) + 0.40*sin(0.920*time) );\\nzoom = zoom + 0.023*( 0.60*sin(0.339*time) + 0.40*sin(0.276*time) );\\nrot = rot + 0.030*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );\\ncx = cx + 0.070*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\ncy = cy + 0.070*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );","pixel_eqs_eel":"dx=dx-0.05*sin(time*1.35+(x*2-1)*18);\\ndy=dy-0.05*sin(time*1.79+(y*2-1)*13);","warp":"","comp":""}')},3046:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1.9,"echo_zoom":1.169,"wave_mode":7,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":0,"wave_scale":2.122,"wave_smoothing":0.783,"modwavealphastart":0.99,"modwavealphaend":1.49,"warpanimspeed":0.55,"warpscale":1.66,"zoom":1.013,"warp":0.06621,"wave_r":0.81,"wave_g":0.79,"wave_b":0.77,"mv_a":0},"shapes":[{"baseVals":{"sides":16,"rad":0.80814,"ang":1.25664,"g":1,"b":1,"a":0,"r2":0.42,"g2":0.6,"b2":0.5,"a2":0.01,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = 0.85 + 0.35*sin(0.437*time+1) + 0.55*sin(0.197*time+4);\\nwave_g = 0.85 + 0.35*sin(0.544*time+2) + 0.55*sin(0.143*time+5);\\nwave_b = 0.85 + 0.35*sin(0.751*time+3) + 0.55*sin(0.117*time+6);\\nwave_r = sqrt(wave_r);\\nwave_g = sqrt(wave_g);\\nwave_b = sqrt(wave_b);\\nrot = rot + 0.010*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );\\ncx = cx + 0.210*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\ncy = cy + 0.210*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\\ndx = dx + 0.003*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );\\ndy = dy + 0.003*( 0.60*sin(0.284*time) + 0.40*sin(0.247*time) );\\ndecay = decay - 0.01*equal(frame%6,0);\\ndx = dx + dx_residual;\\ndy = dy + dy_residual;\\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.96+1.3);\\ndx_residual = equal(bass_thresh,2.13)*0.016*sin(time*7) + (1-equal(bass_thresh,2.13))*dx_residual;\\ndy_residual = equal(bass_thresh,2.13)*0.012*sin(time*9) + (1-equal(bass_thresh,2.13))*dy_residual;\\nwave_x = wave_x - dx_residual*7;\\nwave_y = wave_y - dy_residual*7;\\nwave_mystery = time*0.03;\\n\\nzoom = zoom + 0.008*(0.35*sin(0.844*time+2) + 0.55*sin(1.743*time+5));\\n//zoom = zoom + max(0,treb-1.2)*0.1;\\n\\nq1 = 0.03;// + 0.09*pow( 0.5 + 0.25*sin(0.437*time+1) + 0.15*sin(0.197*time+4), 8 );","pixel_eqs_eel":"fcx = 0.5 + 0.4*cos(time * 0.67 + 1);\\nfcy = 0.5 + 0.4*sin(time * 0.53 + 2);\\n\\nfrad = sqrt((fcx - x)*(fcx-x) + (fcy-y)*(fcy-y));\\nfrad *= frad;\\nstr = 0.004 / (frad + 0.01);\\ndx = dx + (fcy - y) * str;\\ndy = dy - (fcx - x) * str;","warp":" shader_body { \\n  vec3 ret_1;\\n  ret_1 = (texture (sampler_main, (uv + (\\n    ((cos((\\n      (((texture (sampler_blur1, uv).xyz * scale1) + bias1).xy * 7.0)\\n     + \\n      (time * 1.7)\\n    )) * texsize.zw) * 100.0)\\n   * q1))).xyz + ((0.6 - \\n    dot (((texture (sampler_blur3, uv).xyz * scale3) + bias3), vec3(0.3, 0.5, 0.2))\\n  ) * 0.01));\\n  ret_1 = (ret_1 + ((\\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5)\\n   / 256.0) * 20.0));\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ret_1;\\n  ret = tmpvar_2.xyz;\\n }","comp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1 = texture (sampler_main, uv);\\n  vec3 tmpvar_2;\\n  tmpvar_2.x = (((tmpvar_1.x * tmpvar_1.y) * 5.0) - 1.0);\\n  tmpvar_2.y = ((tmpvar_1.y * tmpvar_1.z) * 5.0);\\n  tmpvar_2.z = ((tmpvar_1.z * tmpvar_1.x) * 6.0);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = (tmpvar_2.zyx * 0.37);\\n  ret = tmpvar_3.xyz;\\n }"}')},9864:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":5,"gammaadj":1,"decay":0.9,"echo_zoom":0.710682,"wave_mode":6,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":0.311604,"wave_scale":1.22891,"wave_smoothing":0,"wave_mystery":0.2,"modwavealphastart":0.71,"modwavealphaend":1.3,"zoom":0.999902,"warp":0.207965,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.0065,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.4999,"mv_g":0.4999,"mv_b":0.4999,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"x":0.37,"rad":2.999997,"ang":3.644249,"r":0,"a":0.5,"g2":0,"a2":0.3,"border_a":1},"init_eqs_eel":"t1 = rand(100)*0.01;\\nt2 = rand(100)*0.01;","frame_eqs_eel":"ang = time*(0.3 + 0.1*t1);\\nrad = rad * (0.9 + 0.2*t2);\\nr = min(1,max(0,r + 0.2*sin(time*0.417 + 1)));\\ng = min(1,max(0,g + 0.2*sin(time*0.391 + 2)));\\nb = min(1,max(0,b + 0.2*sin(time*0.432 + 4)));\\nr2 = min(1,max(0,r2 + 0.2*sin(time*0.657 + 3)));\\ng2 = min(1,max(0,g2 + 0.2*sin(time*0.737 + 5)));\\nb2 = min(1,max(0,b2 + 0.2*sin(time*0.884 + 6)));"},{"baseVals":{"enabled":1,"sides":5,"additive":1,"textured":1,"x":0.37,"rad":0.706533,"ang":3.644249,"g":1,"b":1,"a":0.8,"r2":1,"b2":1,"border_a":0},"init_eqs_eel":"t1 = rand(100)*0.01;\\nt2 = rand(100)*0.01;","frame_eqs_eel":"x = x + 0.05*sin(time*1.25+3);\\ny = y + 0.03*sin(time*1.49+1);\\nang = time*(0.3 + 0.1*t1);\\nrad = rad * (0.9 + 0.2*t2);\\nr = min(1,max(0,r + 0.1*sin(time*0.417 + 1)));\\ng = min(1,max(0,g + 0.1*sin(time*0.391 + 2)));\\nb = min(1,max(0,b + 0.1*sin(time*0.432 + 4)));\\nr2 = min(1,max(0,r2 + 0.1*sin(time*0.457 + 3)));\\ng2 = min(1,max(0,g2 + 0.1*sin(time*0.437 + 5)));\\nb2 = min(1,max(0,b2 + 0.1*sin(time*0.484 + 6)));"},{"baseVals":{"enabled":1,"sides":5,"additive":1,"textured":1,"x":0.67,"y":0.43,"rad":0.706533,"ang":4.209736,"g":1,"b":1,"a":0.8,"r2":1,"b2":1,"border_a":0},"init_eqs_eel":"t1 = rand(100)*0.01;\\nt2 = rand(100)*0.01;","frame_eqs_eel":"x = x + 0.05*sin(time*2.17);\\ny = y + 0.03*sin(time*1.83);\\nang = time*(0.3 + 0.1*t1);\\nrad = rad * (0.9 + 0.2*t2);\\nr = min(1,max(0,r + 0.1*sin(time*0.417 + 1)));\\ng = min(1,max(0,g + 0.1*sin(time*0.391 + 2)));\\nb = min(1,max(0,b + 0.1*sin(time*0.432 + 4)));\\nr2 = min(1,max(0,r2 + 0.1*sin(time*0.457 + 3)));\\ng2 = min(1,max(0,g2 + 0.1*sin(time*0.437 + 5)));\\nb2 = min(1,max(0,b2 + 0.1*sin(time*0.484 + 6)));"},{"baseVals":{"enabled":1,"sides":6,"rad":0.161222,"g":1,"r2":1,"g2":0,"border_a":1},"init_eqs_eel":"","frame_eqs_eel":"x = x + 0.2*sin(time*1.14);\\ny = y + 0.1*sin(time*0.93+2);"}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_mystery = time*0.2;","pixel_eqs_eel":"","warp":"","comp":""}')},9768:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1.9,"echo_zoom":1.169,"wave_mode":6,"wave_dots":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":0.3,"wave_scale":1.128,"wave_smoothing":0.783,"modwavealphastart":1.41,"modwavealphaend":1.67,"warpscale":1.503,"zoom":1.013,"warp":0.06322,"wave_r":0.81,"wave_g":0.79,"wave_b":0.77,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = 1;\\nwave_g = 1;\\nwave_b = 1;\\nrot = rot + 0.010*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );\\ncx = cx + 0.210*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\ncy = cy + 0.210*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\\ndx = dx + 0.003*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );\\ndy = dy + 0.003*( 0.60*sin(0.284*time) + 0.40*sin(0.247*time) );\\ndecay = decay - 0.01*equal(frame%6,0);\\ndx = dx + dx_residual;\\ndy = dy + dy_residual;\\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.96+1.3);\\ndx_residual = equal(bass_thresh,2.13)*0.016*sin(time*7) + (1-equal(bass_thresh,2.13))*dx_residual;\\ndy_residual = equal(bass_thresh,2.13)*0.012*sin(time*9) + (1-equal(bass_thresh,2.13))*dy_residual;\\nwave_x = wave_x - dx_residual*7;\\nwave_y = wave_y - dy_residual*7;\\nwave_mystery = time*0.03;","pixel_eqs_eel":"","warp":" shader_body { \\n  float n_1;\\n  vec3 ret_2;\\n  ret_2 = texture (sampler_pw_main, uv).xyz;\\n  n_1 = (clamp ((texture (sampler_pw_main, \\n    (uv + texsize.zw)\\n  ).x * 999.0), 0.0, 1.0) + clamp ((texture (sampler_pw_main, \\n    (uv + (texsize.zw * vec2(1.0, 0.0)))\\n  ).x * 999.0), 0.0, 1.0));\\n  n_1 = (n_1 + clamp ((texture (sampler_pw_main, \\n    (uv + (texsize.zw * vec2(1.0, -1.0)))\\n  ).x * 999.0), 0.0, 1.0));\\n  n_1 = (n_1 + clamp ((texture (sampler_pw_main, \\n    (uv + (texsize.zw * vec2(0.0, 1.0)))\\n  ).x * 999.0), 0.0, 1.0));\\n  n_1 = (n_1 + clamp ((texture (sampler_pw_main, \\n    (uv + (texsize.zw * vec2(0.0, -1.0)))\\n  ).x * 999.0), 0.0, 1.0));\\n  n_1 = (n_1 + clamp ((texture (sampler_pw_main, \\n    (uv + (texsize.zw * vec2(-1.0, 1.0)))\\n  ).x * 999.0), 0.0, 1.0));\\n  n_1 = (n_1 + clamp ((texture (sampler_pw_main, \\n    (uv + (texsize.zw * vec2(-1.0, 0.0)))\\n  ).x * 999.0), 0.0, 1.0));\\n  n_1 = (n_1 + clamp ((texture (sampler_pw_main, \\n    (uv - texsize.zw)\\n  ).x * 999.0), 0.0, 1.0));\\n  if ((n_1 < 1.5)) {\\n    ret_2 = vec3(0.0, 0.0, 0.0);\\n  };\\n  if ((n_1 > 3.5)) {\\n    ret_2 = vec3(0.0, 0.0, 0.0);\\n  };\\n  bool tmpvar_3;\\n  if ((ret_2.x < 0.1)) {\\n    tmpvar_3 = (abs((n_1 - 3.0)) < 0.5);\\n  } else {\\n    tmpvar_3 = bool(0);\\n  };\\n  if (tmpvar_3) {\\n    ret_2 = vec3(1.0, 1.0, 1.0);\\n  };\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = ret_2;\\n  ret = tmpvar_4.xyz;\\n }","comp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (texture (sampler_main, uv).xyz + (clamp (\\n    ((((texture (sampler_blur2, uv).xyz * scale2) + bias2) * 2.8) - 0.13)\\n  , 0.0, 1.0) * vec3(1.4, 0.3, 1.3)));\\n  ret = tmpvar_1.xyz;\\n }"}')},3682:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":0,"wave_mode":1,"wave_thick":1,"wave_a":0.3,"wave_scale":1.17037,"wave_smoothing":0.5,"warpscale":2.853,"zoomexp":3.6,"zoom":1.014,"rot":-0.16,"warp":0.309,"wave_r":0.6,"wave_g":0.6,"wave_b":0.6,"wave_y":0.47,"mv_a":0},"shapes":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.400*( 0.60*sin(0.933*time) + 0.40*sin(1.045*time) );\\nwave_g = wave_g + 0.400*( 0.60*sin(0.900*time) + 0.40*sin(0.956*time) );\\nwave_b = wave_b + 0.400*( 0.60*sin(0.910*time) + 0.40*sin(0.920*time) );\\nzoom = zoom + 0.023*( 0.60*sin(0.339*time) + 0.40*sin(0.276*time) );\\nrot = rot + 0.030*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );\\ndecay = decay - 0.02*equal(frame%40,0);","pixel_eqs_eel":"rot=rot+0.1/(rad+0.1);","warp":"","comp":""}')},8402:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.9,"echo_zoom":1.169,"wave_mode":7,"wave_thick":1,"wave_a":0.433,"wave_scale":2.62,"wave_smoothing":0.27,"wave_mystery":-0.08,"modwavealphastart":1.03,"modwavealphaend":1.61,"warpanimspeed":1.729,"warpscale":2.108,"zoomexp":1.64463,"zoom":0.99901,"warp":0.45599,"wave_r":0.6,"wave_g":0.8,"ob_g":0.5,"ob_b":0.45,"ob_a":0.26,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":30,"rad":1.08925,"r":0.8,"g":0.4,"b":0.2,"a":0.05,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"rad = rad + 0.02*cos(time*3);"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"q10 = 0;\\nmy_rot = 0;\\nmy_zoom = 1;\\ns = 0.5;","frame_eqs_eel":"wave_r = wave_r + 0.05*sin(0.437*time+1);\\nwave_g = wave_g + 0.05*sin(0.544*time+2);\\nwave_b = wave_b + 0.05*sin(0.751*time+3);\\ndx = dx + 0.003*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );\\ndy = dy + 0.003*( 0.60*sin(0.284*time) + 0.40*sin(0.247*time) );\\ndecay = decay - 0.01*equal(frame%6,0);\\ndx = dx + dx_residual;\\ndy = dy + dy_residual;\\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.96+1.3);\\ndx_residual = equal(bass_thresh,2.13)*0.016*sin(time*7) + (1-equal(bass_thresh,2.13))*dx_residual;\\ndy_residual = equal(bass_thresh,2.13)*0.012*sin(time*9) + (1-equal(bass_thresh,2.13))*dy_residual;\\nwave_x = wave_x - dx_residual*7;\\nwave_y = wave_y - dy_residual*7;\\nwave_mystery = time*37.03;\\n\\nnew_rot = rot + 0.013*( 0.60*sin(17.381*time) + 0.40*sin(11.579*time) );\\nnew_zoom = zoom + 0.01*( 0.60*sin(20.1934*time+3) + 0.40*sin(16.307*time+9) );\\nnew_warp = warp + 0.34*( 0.60*sin(13.5442*time) + 0.40*sin(22.543*time) );\\nnew_cx = cx + 0.310*( 0.60*sin(16.374*time) + 0.40*sin(26.294*time) );\\nnew_cy = cy + 0.310*( 0.60*sin(18.393*time) + 0.40*sin(37.223*time) );\\nnew_s = rand(100)*0.01;\\n\\n// this is a great way to respond to beats:\\n// once you get one, let it decay at a constant rate!!\\nrg = max(rg*0.77, 0.02 + 0.5*min(2,max(0,mid_att-1)*1.3));\\nq9 = rg;\\n\\n\\n\\n// custom wave opacity modulation\\n//beat = (bass+mid+treb) / (bass_att+mid_att+treb_att);\\nbeat = max(bass/bass_att, mid/mid_att);\\nbeat = max(beat, treb/treb_att);\\n decay_rate = pow(0.9995, fps);\\n beat = max( beat, prev_beat*decay_rate );\\n  wave_a = (beat - prev_beat - 0.07)*24;\\n  is_beat = above(wave_a, 0.5);\\n  rot = (1-is_beat)*my_rot + (is_beat)*new_rot;\\n  zoom = (1-is_beat)*my_zoom + (is_beat)*new_zoom;\\n  warp = (1-is_beat)*my_warp + (is_beat)*new_warp;\\n  cx = (1-is_beat)*my_cx + (is_beat)*new_cx;\\n  cy = (1-is_beat)*my_cy + (is_beat)*new_cy;\\n  s = (1-is_beat)*my_s + (is_beat)*new_s;\\nprev_beat = beat;\\nmy_rot = rot;\\nmy_zoom = zoom;\\nmy_warp = warp;\\nmy_cx = cx;\\nmy_cy = cy;\\nmy_s = s;\\n\\nq11 = s;","pixel_eqs_eel":"zoom = zoom + cos(ang*7)*0.02;","warp":" shader_body { \\n  vec3 ret_1;\\n  float tmpvar_2;\\n  tmpvar_2 = (0.03 + (1.5 * (q11 * q11)));\\n  vec3 tmpvar_3;\\n  tmpvar_3.xy = (((\\n    (uv_orig * 4.0)\\n   * texsize.xy) / 850.0) * tmpvar_2);\\n  tmpvar_3.z = (time * 0.055);\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (uv_orig * texsize.xy);\\n  ret_1 = texture (sampler_main, (uv + ((1.53 * \\n    (cos(((\\n      (0.6 * tmpvar_4)\\n     * tmpvar_2) + (texture (sampler_noisevol_hq, tmpvar_3).xy * 9.0))) * texsize.zw)\\n  ) / tmpvar_2))).xyz;\\n  ret_1 = (ret_1 * 0.99);\\n  ret_1 = (ret_1 + (19.52 * (\\n    (texture (sampler_noise_lq, ((tmpvar_4 * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5)\\n   / 256.0)));\\n  ret_1 = mix (ret_1, ret_1.zxy, vec3(0.05, 0.05, 0.05));\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = ret_1;\\n  ret = tmpvar_5.xyz;\\n }","comp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = ((texture (sampler_main, uv).xyz * 1.5) - 0.1);\\n  ret = tmpvar_1.xyz;\\n }"}')},7986:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":5,"gammaadj":1.998,"wave_mode":2,"wave_thick":1,"wrap":0,"wave_a":0.244,"wave_scale":1.981,"wave_smoothing":0.6,"warpscale":2.853,"zoom":1.064,"warp":0,"wave_r":0.6,"wave_g":0.6,"wave_b":0.6,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.400*( 0.60*sin(0.933*time) + 0.40*sin(1.045*time) );\\nwave_g = wave_g + 0.400*( 0.60*sin(0.900*time) + 0.40*sin(0.956*time) );\\nwave_b = wave_b + 0.400*( 0.60*sin(0.910*time) + 0.40*sin(0.920*time) );\\nzoom = zoom + 0.013*( 0.60*sin(0.339*time) + 0.40*sin(0.276*time) );\\nrot = rot + 0.040*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );","pixel_eqs_eel":"zoom = zoom + (x*2-1)*(0.08+0.15*sin(time*0.321)) + (y*2-1)*(0.08+0.15*cos(time*0.321));\\nsx=sx-(zoom-1)*0.1;\\nsy=sy-(zoom-1)*0.1;","warp":"","comp":""}')},1708:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":4,"gammaadj":1.9,"echo_zoom":1.169,"wave_thick":1,"wave_a":0.433,"wave_scale":2.358,"wave_smoothing":0.54,"wave_mystery":0.2,"modwavealphastart":1.03,"modwavealphaend":1.61,"warpscale":1.331,"zoom":0.99951,"warp":0.00909,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"bass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.35)*0.96+1.3);\\nbass_factor = equal(bass_thresh,2)*sin(time*bass_thresh*.4) + (1-equal(bass_thresh,2))*bass_factor;\\nmid_thresh = above(mid_att,mid_thresh)*2 + (1-above(mid_att,mid_thresh))*((mid_thresh-1.35)*0.96+1.3);\\nmid_factor = equal(mid_thresh,2)*sin(time*mid_thresh*.4) + (1-equal(mid_thresh,2))*mid_factor;\\ntreb_thresh = above(treb_att,treb_thresh)*2 + (1-above(treb_att,treb_thresh))*((treb_thresh-1.35)*0.96+1.3);\\ntreb_factor = equal(treb_thresh,2)*sin(time*treb_thresh*.4) + (1-equal(treb_thresh,2))*treb_factor;\\nwave_r = 0.5+0.5*bass_factor;\\nwave_b = 0.5+0.5*mid_factor;\\nwave_g = 0.5+0.5*treb_factor;\\nwave_mystery = sin(time*.7)/10;\\nq1=bass_factor;\\nq2=mid_factor;\\nq3=treb_factor;","pixel_eqs_eel":"pi=22/7+.2-.2*q1;\\nrpi=pi*rad;\\napi=(1-rad)*pi;\\nzoom = if(above(rad,abs(q2)),1.07+sin(rpi)*.04*q2, 0.97+(sin(rpi)/10-sin(api)/10)*.04*q2)+cos(rpi*3*q3)*.07;\\nrot = if(above(rad,abs(q2)),cos((rad*2*rpi)+sin(pi*pow(rad,5)))*.1*q1,(cos(api)/25+sin(rpi))*.1*q1)+cos(api*3*q3)*.1;","warp":" shader_body { \\n  vec2 my_uv_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (vec2(1280.0, 1024.0) * texsize.zw);\\n  float tmpvar_4;\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (uv + vec2(0.005, 0.0));\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv - vec2(0.005, 0.0));\\n  tmpvar_4 = (((\\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_6).xyz * scale2)\\n   + bias2)).x * tmpvar_3.x);\\n  float tmpvar_7;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (uv + vec2(0.0, 0.005));\\n  vec2 tmpvar_9;\\n  tmpvar_9 = (uv - vec2(0.0, 0.005));\\n  tmpvar_7 = (((\\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_9).xyz * scale2)\\n   + bias2)).x * tmpvar_3.y);\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = tmpvar_4;\\n  tmpvar_10.y = tmpvar_7;\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = (((\\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_6).xyz * scale2)\\n   + bias2)).x * tmpvar_3.x);\\n  tmpvar_11.y = (((\\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_9).xyz * scale2)\\n   + bias2)).x * tmpvar_3.y);\\n  ret_2.x = texture (sampler_fw_main, ((uv - (tmpvar_10 * 0.01)) + (tmpvar_11 * 0.003))).x;\\n  vec4 tmpvar_12;\\n  tmpvar_12 = texture (sampler_blur3, uv);\\n  ret_2.x = (ret_2.x + ((ret_2.x - \\n    ((tmpvar_12.xyz * scale3) + bias3)\\n  .x) * 0.1));\\n  ret_2.x = (ret_2.x + 0.004);\\n  vec2 tmpvar_13;\\n  tmpvar_13.x = tmpvar_7;\\n  tmpvar_13.y = -(tmpvar_4);\\n  my_uv_1 = (uv + ((tmpvar_13 * 0.05) * (1.2 - \\n    ((tmpvar_12.xyz * scale3) + bias3)\\n  .y)));\\n  ret_2.z = texture (sampler_fw_main, my_uv_1).z;\\n  vec2 x_14;\\n  x_14 = (my_uv_1 - uv);\\n  ret_2.z = (ret_2.z + ((\\n    ((ret_2.z - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).z) * sqrt(dot (x_14, x_14)))\\n   * 180.0) / sqrt(\\n    dot (tmpvar_3, tmpvar_3)\\n  )));\\n  ret_2.z = (ret_2.z * 0.8);\\n  ret_2.z = (ret_2.z + 0.004);\\n  vec2 tmpvar_15;\\n  tmpvar_15.x = -(tmpvar_7);\\n  tmpvar_15.y = tmpvar_4;\\n  my_uv_1 = (tmpvar_15 * 0.045);\\n  vec2 tmpvar_16;\\n  tmpvar_16.x = (((\\n    (texture (sampler_blur2, (uv + vec2(0.01, 0.0))).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, (uv - vec2(0.01, 0.0))).xyz * scale2)\\n   + bias2)).y * tmpvar_3.x);\\n  tmpvar_16.y = (((\\n    (texture (sampler_blur2, (uv + vec2(0.0, 0.01))).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, (uv - vec2(0.0, 0.01))).xyz * scale2)\\n   + bias2)).y * tmpvar_3.y);\\n  my_uv_1 = (my_uv_1 + (uv - (tmpvar_16 * 0.03)));\\n  ret_2.y = texture (sampler_fw_main, my_uv_1).y;\\n  ret_2.y = (ret_2.y + ((\\n    (ret_2.y - ((texture (sampler_blur3, my_uv_1).xyz * scale3) + bias3).y)\\n   * 0.1) + 0.01));\\n  vec4 tmpvar_17;\\n  tmpvar_17.w = 1.0;\\n  tmpvar_17.xyz = ret_2;\\n  ret = tmpvar_17.xyz;\\n }","comp":" shader_body { \\n  vec2 uv1_1;\\n  vec3 tmpvar_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = -(uv);\\n  tmpvar_2 = (texture (sampler_main, uv).xyz + texture (sampler_main, tmpvar_3).xyz);\\n  vec2 tmpvar_4;\\n  tmpvar_4.y = 0.0;\\n  tmpvar_4.x = texsize.z;\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = 0.0;\\n  tmpvar_5.y = texsize.w;\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = ((texture (sampler_main, (uv - tmpvar_4)).xyz - texture (sampler_main, (uv + tmpvar_4)).xyz).x + (texture (sampler_main, (tmpvar_3 - tmpvar_4)).xyz - texture (sampler_main, (tmpvar_3 + tmpvar_4)).xyz).x);\\n  tmpvar_6.y = ((texture (sampler_main, (uv - tmpvar_5)).xyz - texture (sampler_main, (uv + tmpvar_5)).xyz).x + (texture (sampler_main, (tmpvar_3 - tmpvar_5)).xyz - texture (sampler_main, (tmpvar_3 + tmpvar_5)).xyz).x);\\n  uv1_1 = ((uv - 0.5) * aspect.xy);\\n  uv1_1 = ((0.4 * cos(\\n    (uv1_1 * q27)\\n  )) - (16.0 * tmpvar_6));\\n  vec4 tmpvar_7;\\n  tmpvar_7.w = 1.0;\\n  tmpvar_7.xyz = (((\\n    (0.5 * q1)\\n   * tmpvar_2) + (q26 * \\n    clamp ((0.04 / sqrt(dot (uv1_1, uv1_1))), 0.0, 1.0)\\n  )) + ((22.0 * vec3(\\n    clamp ((0.04 / sqrt(dot (uv1_1, uv1_1))), 0.0, 1.0)\\n  )) * (-0.1 + tmpvar_2)));\\n  ret = tmpvar_7.xyz;\\n }"}')},5212:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1,"decay":1,"wave_mode":6,"modwavealphabyvolume":1,"wave_a":0.22,"wave_scale":1.141,"wave_smoothing":0.522,"wave_mystery":0.4,"modwavealphastart":0.83,"modwavealphaend":1.31,"warpscale":3.138,"zoom":1.023,"warp":0.14846,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.650*( 0.60*sin(1.437*time) + 0.40*sin(0.970*time) );\\nwave_g = wave_g + 0.650*( 0.60*sin(1.344*time) + 0.40*sin(0.841*time) );\\nwave_b = wave_b + 0.650*( 0.60*sin(1.251*time) + 0.40*sin(1.055*time) );\\nrot = rot + 0.010*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );\\ncx = cx + 0.210*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\ncy = cy + 0.210*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\\ndx = dx + 0.005*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );\\ndy = dy + 0.005*( 0.60*sin(0.284*time) + 0.40*sin(0.247*time) );\\ndecay = decay - 0.01*equal(frame%6,0);\\ndx = dx + dx_residual*0.33;\\ndy = dy + dy_residual*0.33;\\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.96+1.3);\\ndx_residual = equal(bass_thresh,2)*0.016*sin(time*7) + (1-equal(bass_thresh,2))*dx_residual;\\ndy_residual = equal(bass_thresh,2)*0.012*sin(time*9) + (1-equal(bass_thresh,2))*dy_residual;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv);\\n  ret_1 = (tmpvar_2.xyz + ((tmpvar_2.xyz - \\n    ((texture (sampler_blur2, uv).xyz * scale2) + bias2)\\n  ) * 0.3));\\n  ret_1 = (ret_1 * 0.9);\\n  ret_1 = (ret_1 + ((\\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 0.4)) + rand_frame.xy)).xyz - 0.5)\\n   / 256.0) * 112.0));\\n  vec3 tmpvar_3;\\n  tmpvar_3 = mix (ret_1, vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))), vec3(0.2, 0.2, 0.2));\\n  ret_1 = tmpvar_3;\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = tmpvar_3;\\n  ret = tmpvar_4.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  vec3 tmpvar_2;\\n  tmpvar_2.z = 0.0;\\n  tmpvar_2.xy = texsize.zw;\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (tmpvar_2 * 2.5);\\n  ret_1 = (texture (sampler_main, uv).xyz * 0.5);\\n  ret_1 = (ret_1 + (vec3(1.4, 0.98, 0.42) * (\\n    dot (((texture (sampler_blur1, (uv + tmpvar_3.xz)).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29))\\n   - \\n    dot (((texture (sampler_blur1, (uv - tmpvar_3.xz)).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29))\\n  )));\\n  ret_1 = (ret_1 + (vec3(0.28, 0.7, 0.98) * (\\n    dot (((texture (sampler_blur1, (uv + tmpvar_3.zy)).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29))\\n   - \\n    dot (((texture (sampler_blur1, (uv - tmpvar_3.zy)).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29))\\n  )));\\n  ret_1 = (ret_1 * 1.5);\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = ret_1;\\n  ret = tmpvar_4.xyz;\\n }"}')},1939:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.9,"echo_zoom":1.16936,"wave_mode":7,"modwavealphabyvolume":1,"wave_a":0,"wave_scale":1.015009,"wave_smoothing":0.522,"modwavealphastart":0.83,"modwavealphaend":1.31,"warpscale":3.138,"zoom":1.009006,"warp":0.000536,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = 0.85 + 0.25*sin(0.437*time+1);\\nwave_g = 0.85 + 0.25*sin(0.544*time+2);\\nwave_b = 0.85 + 0.25*sin(0.751*time+3);\\nrot = rot + 0.010*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );\\ncx = cx + 0.210*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\ncy = cy + 0.210*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\\ndx = dx + 0.003*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );\\ndy = dy + 0.003*( 0.60*sin(0.284*time) + 0.40*sin(0.247*time) );\\ndecay = decay - 0.01*equal(frame%6,0);\\ndx = dx + dx_residual;\\ndy = dy + dy_residual;\\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.96+1.3);\\ndx_residual = equal(bass_thresh,2.13)*0.016*sin(time*7) + (1-equal(bass_thresh,2.13))*dx_residual;\\ndy_residual = equal(bass_thresh,2.13)*0.012*sin(time*9) + (1-equal(bass_thresh,2.13))*dy_residual;\\nwave_x = wave_x - dx_residual*7;\\nwave_y = wave_y - dy_residual*7;\\nwave_mystery = time*0.03;\\n\\nzoom = zoom + 0.005*( 0.60*sin(0.1934*time+3) + 0.40*sin(0.307*time+9) );\\nzoom = zoom + max(0,bass_att-1.1)*0.4;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  ret_1 = texture (sampler_main, uv).xyz;\\n  ret_1 = (ret_1 + ((ret_1 - \\n    ((texture (sampler_blur2, uv).xyz * scale2) + bias2)\\n  ) * 0.3));\\n  ret_1 = (ret_1 * 0.9);\\n  ret_1 = (ret_1 + ((\\n    ((texture (sampler_noise_lq, ((\\n      (uv_orig * texsize.xy)\\n     * \\n      (texsize_noise_lq.zw * 0.4)\\n    ) + rand_frame.xy)).xyz - 0.5) / 256.0)\\n   * 122.0) * clamp (\\n    (treb_att - 1.0)\\n  , 0.0, 1.0)));\\n  ret_1 = mix (ret_1, vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))), vec3(0.2, 0.2, 0.2));\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ret_1;\\n  ret = tmpvar_2.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  ret_1 = (texture (sampler_main, uv).xyz + ((\\n    (texture (sampler_blur1, uv).xyz * scale1)\\n   + bias1) * 0.4));\\n  vec3 tmpvar_2;\\n  tmpvar_2 = pow (ret_1, vec3(0.5, 0.8, 1.7));\\n  ret_1 = tmpvar_2;\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = tmpvar_2;\\n  ret = tmpvar_3.xyz;\\n }"}')},3095:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.9,"echo_zoom":1.169,"wave_mode":7,"modwavealphabyvolume":1,"wave_a":0,"wave_scale":1.015,"wave_smoothing":0.522,"modwavealphastart":0.83,"modwavealphaend":1.31,"warpanimspeed":30.965,"warpscale":2.572,"zoom":1.00901,"warp":0.00054,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = 0.85 + 0.25*sin(0.437*time+1);\\nwave_g = 0.85 + 0.25*sin(0.544*time+2);\\nwave_b = 0.85 + 0.25*sin(0.751*time+3);\\nrot = rot + 0.010*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );\\ncx = cx + 0.210*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\ncy = cy + 0.210*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\\ndx = dx + 0.003*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );\\ndy = dy + 0.003*( 0.60*sin(0.284*time) + 0.40*sin(0.247*time) );\\ndecay = decay - 0.01*equal(frame%6,0);\\ndx = dx + dx_residual;\\ndy = dy + dy_residual;\\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.96+1.3);\\ndx_residual = equal(bass_thresh,2.13)*0.016*sin(time*7) + (1-equal(bass_thresh,2.13))*dx_residual;\\ndy_residual = equal(bass_thresh,2.13)*0.012*sin(time*9) + (1-equal(bass_thresh,2.13))*dy_residual;\\nwave_x = wave_x - dx_residual*7;\\nwave_y = wave_y - dy_residual*7;\\nwave_mystery = time*0.03;\\n\\n//zoom = zoom + 0.005*( 0.60*sin(0.1934*time+3) + 0.40*sin(0.307*time+9) );\\n//zoom = zoom + max(0,bass_att-1.1)*0.2;\\n//warp = warp + max(0,treb_att-1.1)*1.0;\\n\\n// this is a great way to respond to beats:\\n// once you get one, let it decay at a constant rate!!\\nrg = max(rg*0.77, 0.02 + 0.5*min(2,max(0,mid_att-1)*1.3));\\nq9 = rg;\\n\\nzoom = zoom + q9*0.1;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 z_1;\\n  vec3 tmpvar_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (0.1 * texsize.zw);\\n  tmpvar_2 = (0.25 * ((\\n    (texture (sampler_main, (uv + tmpvar_3)).xyz + texture (sampler_main, (uv + (tmpvar_3 * vec2(-1.0, 1.0)))).xyz)\\n   + texture (sampler_main, \\n    (uv + (tmpvar_3 * vec2(1.0, -1.0)))\\n  ).xyz) + texture (sampler_main, (uv - tmpvar_3)).xyz));\\n  float tmpvar_4;\\n  tmpvar_4 = ((tmpvar_2.x * tmpvar_2.y) * tmpvar_2.y);\\n  z_1.x = (tmpvar_2.x + ((\\n    -(tmpvar_4)\\n   + \\n    (0.035 * (1.0 - tmpvar_2.x))\\n  ) * 4.0));\\n  z_1.y = (tmpvar_2.y + ((tmpvar_4 - \\n    (0.095 * tmpvar_2.y)\\n  ) * 4.0));\\n  z_1.z = tmpvar_2.z;\\n  z_1.x = (z_1.x + (0.4 * (\\n    ((texture (sampler_blur2, uv).xyz * scale2) + bias2)\\n   - texture (sampler_main, uv).xyz)).x);\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = (z_1 + (0.09 * (\\n    (texture (sampler_noise_lq, (((uv * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)).xyz * 2.0)\\n   - 1.0)));\\n  ret = tmpvar_5.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  ret_1 = texture (sampler_main, uv).xyz;\\n  ret_1 = ret_1.xzy;\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ret_1;\\n  ret = tmpvar_2.xyz;\\n }"}')},2730:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.9,"echo_zoom":1.16936,"wave_mode":7,"modwavealphabyvolume":1,"wave_a":0,"wave_scale":1.015009,"wave_smoothing":0.522,"modwavealphastart":0.83,"modwavealphaend":1.31,"warpanimspeed":30.965099,"warpscale":2.571729,"zoom":1.009006,"warp":0.000536,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = 0.85 + 0.25*sin(0.437*time+1);\\nwave_g = 0.85 + 0.25*sin(0.544*time+2);\\nwave_b = 0.85 + 0.25*sin(0.751*time+3);\\nrot = rot + 0.010*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );\\ncx = cx + 0.210*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\ncy = cy + 0.210*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\\ndx = dx + 0.003*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );\\ndy = dy + 0.003*( 0.60*sin(0.284*time) + 0.40*sin(0.247*time) );\\ndecay = decay - 0.01*equal(frame%6,0);\\ndx = dx + dx_residual;\\ndy = dy + dy_residual;\\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.96+1.3);\\ndx_residual = equal(bass_thresh,2.13)*0.016*sin(time*7) + (1-equal(bass_thresh,2.13))*dx_residual;\\ndy_residual = equal(bass_thresh,2.13)*0.012*sin(time*9) + (1-equal(bass_thresh,2.13))*dy_residual;\\nwave_x = wave_x - dx_residual*7;\\nwave_y = wave_y - dy_residual*7;\\nwave_mystery = time*0.03;\\n\\n//zoom = zoom + 0.005*( 0.60*sin(0.1934*time+3) + 0.40*sin(0.307*time+9) );\\n//zoom = zoom + max(0,bass_att-1.1)*0.2;\\n//warp = warp + max(0,treb_att-1.1)*1.0;\\n\\n// this is a great way to respond to beats:\\n// once you get one, let it decay at a constant rate!!\\nrg = max(rg*0.77, 0.02 + 0.5*min(2,max(0,mid_att-1)*1.3));\\nq9 = rg;\\n\\nzoom = zoom + q9*0.1;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  ret_1 = texture (sampler_main, uv).xyz;\\n  ret_1 = (ret_1 + ((ret_1 - \\n    ((texture (sampler_blur2, uv).xyz * scale2) + bias2)\\n  ) * 0.3));\\n  ret_1 = (ret_1 * 0.9);\\n  ret_1 = (ret_1 + ((\\n    ((texture (sampler_noise_lq, ((\\n      (uv_orig * texsize.xy)\\n     * \\n      (texsize_noise_lq.zw * 0.4)\\n    ) + rand_frame.xy)).xyz - 0.5) / 256.0)\\n   * 122.0) * clamp (\\n    (treb_att - 1.0)\\n  , 0.0, 1.0)));\\n  ret_1 = mix (ret_1, vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))), vec3(0.2, 0.2, 0.2));\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ret_1;\\n  ret = tmpvar_2.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  ret_1 = (texture (sampler_main, uv).xyz + ((\\n    (texture (sampler_blur1, uv).xyz * scale1)\\n   + bias1) * 0.4));\\n  vec3 tmpvar_2;\\n  tmpvar_2 = pow (ret_1, vec3(0.5, 0.8, 1.7));\\n  ret_1 = tmpvar_2;\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = tmpvar_2;\\n  ret = tmpvar_3.xyz;\\n }"}')},4571:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1,"decay":1,"wave_mode":7,"modwavealphabyvolume":1,"wave_a":0.207218,"wave_scale":0.397108,"wave_smoothing":0,"wave_mystery":0.24,"modwavealphaend":1.17,"warpanimspeed":0.451118,"warpscale":3.03984,"zoomexp":2.95821,"zoom":1.00971,"warp":0.131259,"wave_g":0.999999,"mv_x":64,"mv_y":48,"mv_l":0,"mv_r":0.35,"mv_g":0.35,"mv_b":0.35,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.350*( 0.60*sin(0.980*time) + 0.40*sin(1.047*time) );\\nwave_g = wave_g + 0.350*( 0.60*sin(0.835*time) + 0.40*sin(1.081*time) );\\nwave_b = wave_b + 0.350*( 0.60*sin(0.814*time) + 0.40*sin(1.011*time) );\\ncx = cx + 0.110*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\ncy = cy + 0.110*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\\ndecay = decay - 0.01*equal(frame%20,0);\\n//zoom = 1;\\n//warp = 0;\\nzoom = zoom + 0.2*(0.01*cos(time*0.317+1) + 0.01*cos(time*0.1132+4));\\nrot  = rot  + 0.5*(0.01*cos(time*0.214+3) + 0.01*cos(time*0.2732+2));\\nwave_mystery = time*0.05;\\n//zoom = zoom + (max(1, bass_att)-1)*0.01;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv);\\n  ret_1 = (tmpvar_2.xyz + ((tmpvar_2.xyz - \\n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\\n  ) * 0.3));\\n  ret_1 = (ret_1 * 0.9);\\n  ret_1 = (ret_1 + ((\\n    (texture (sampler_noise_lq, ((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 0.1))).xyz - 0.5)\\n   / 256.0) * 28.0));\\n  vec3 tmpvar_3;\\n  tmpvar_3 = mix (ret_1, vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))), vec3(0.04, 0.04, 0.04));\\n  ret_1 = tmpvar_3;\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = tmpvar_3;\\n  ret = tmpvar_4.xyz;\\n }","comp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = texture (sampler_main, uv).xyz;\\n  ret = tmpvar_1.xyz;\\n }"}')},6320:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1,"decay":1,"modwavealphabyvolume":1,"wave_a":0.207218,"wave_scale":0.397108,"wave_smoothing":0,"wave_mystery":0.24,"modwavealphaend":1.17,"warpanimspeed":0.451118,"warpscale":3.03984,"zoomexp":2.194764,"zoom":1.029709,"warp":0.098617,"wave_g":0.999999,"mv_x":64,"mv_y":48,"mv_l":0,"mv_r":0.35,"mv_g":0.35,"mv_b":0.35,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.350*( 0.60*sin(0.980*time) + 0.40*sin(1.047*time) );\\nwave_g = wave_g + 0.350*( 0.60*sin(0.835*time) + 0.40*sin(1.081*time) );\\nwave_b = wave_b + 0.350*( 0.60*sin(0.814*time) + 0.40*sin(1.011*time) );\\ncx = cx + 0.110*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\ncy = cy + 0.110*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\\ndecay = decay - 0.01*equal(frame%20,0);\\n//zoom = 1;\\n//warp = 0;\\nzoom = zoom + 0.7*(0.01*cos(time*0.317+1) + 0.01*cos(time*0.1132+4));\\nrot  = rot  + 0.5*(0.01*cos(time*0.214+3) + 0.01*cos(time*0.2732+2));\\nwave_mystery = time*0.05;\\n//zoom = zoom + (max(1, bass_att)-1)*0.01;\\n\\nrot = rot + min(0.3,pow(max(0,bass_att-1),2)*0.2);","pixel_eqs_eel":"zoom = zoom + 0.005*cos(ang*5 + time*1.5);","warp":" shader_body { \\n  vec3 ret_1;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv);\\n  ret_1 = (tmpvar_2.xyz + ((tmpvar_2.xyz - \\n    ((texture (sampler_blur2, uv).xyz * scale2) + bias2)\\n  ) * 0.3));\\n  ret_1 = (ret_1 * 0.9);\\n  ret_1 = (ret_1 + ((\\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 0.4)) + rand_frame.xy)).xyz - 0.5)\\n   / 256.0) * 112.0));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_1;\\n  ret = tmpvar_3.xyz;\\n }","comp":" shader_body { \\n  vec2 uv2_1;\\n  float blur_2;\\n  float crisp_3;\\n  vec3 ret_4;\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (uv - 0.5);\\n  uv2_1 = ((tmpvar_5 * 0.8) + 0.5);\\n  crisp_3 = texture (sampler_main, uv2_1).y;\\n  blur_2 = ((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1).y;\\n  ret_4 = (texture (sampler_main, ((tmpvar_5 * 0.6) + 0.5)).zzz * (1.0 - (blur_2 * 1.15)));\\n  vec3 tmpvar_6;\\n  tmpvar_6 = max (ret_4, vec3(crisp_3));\\n  uv2_1 = uv;\\n  crisp_3 = texture (sampler_main, uv).x;\\n  blur_2 = ((texture (sampler_blur1, uv).xyz * scale1) + bias1).x;\\n  ret_4 = (tmpvar_6 * (1.0 - (blur_2 * 1.15)));\\n  vec3 tmpvar_7;\\n  tmpvar_7 = max (ret_4, vec3(crisp_3));\\n  ret_4 = tmpvar_7;\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = tmpvar_7;\\n  ret = tmpvar_8.xyz;\\n }"}')},9728:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"wave_mode":6,"additivewave":1,"wave_dots":1,"wave_thick":1,"wave_brighten":0,"wave_a":100,"wave_scale":3.63,"wave_smoothing":0.9,"wave_mystery":-0.3,"modwavealphastart":1.15,"modwavealphaend":1.55,"warpscale":1.331,"zoom":0.96971,"warp":0,"wave_r":0.6,"wave_g":0.6,"wave_b":0.6,"mv_x":64,"mv_y":48,"mv_l":0,"mv_r":0.35,"mv_g":0.35,"mv_b":0.35,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"rot_sum = 0;\\nq2 = 0.07 + 0.04*rand(1000)*0.001 + 0.03*rand(1000)*0.001;\\nq3 = 1.035 + 0.06*(rand(1000)+rand(1000)+rand(1000))*0.000333;","frame_eqs_eel":"wave_r = wave_r + 0.500*( 0.60*sin(1.980*time) + 0.40*sin(3.047*time) );\\nwave_g = wave_g + 0.500*( 0.60*sin(2.835*time) + 0.40*sin(2.081*time) );\\nwave_b = wave_b + 0.500*( 0.60*sin(3.814*time) + 0.40*sin(1.011*time) );\\ncx = 0.5;//cx + 0.110*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\ncy = 0.5;//cy + 0.110*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\\n\\nrot = q2;//0.13;//6.28*(rand(737)/737.0 - 0.5) * 0.03;\\nzoom = zoom-1 + q3;\\nrot_sum = rot_sum + rot;\\nq1 = -rot_sum;\\nq5 = cos(rot_sum);\\nq6 = sin(rot_sim);\\nmonitor = q2;\\n\\n// custom beat detection code: (fps-independent; quiet songs don\'t freak out)\\nmin_att    = 2.5;               // lower # = quieter songs can declare beats\\ndecay_to   = 0.8;               // lower # = more hasty to declare a beat\\ndecay_rate = pow(0.9990, fps);  // lower # = more hasty to declare a beat\\nbeat =           bass/max(min_att,bass_att);\\nbeat = max(beat, mid /max(min_att,mid_att ));\\nbeat = max(beat, treb/max(min_att,treb_att));\\nbeat = max( beat, (prev_beat-decay_to)*decay_rate + decay_to );\\nbeat_level     = (beat - prev_beat - 0.02)*24;\\nis_beat = above(beat_level, 0.5);\\nprev_beat = beat;\\n  // put your beat responses HERE:\\n  wave_a = beat_level;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (texture (sampler_pw_main, uv).xyz - 0.004);\\n  ret = tmpvar_1.xyz;\\n }","comp":" shader_body { \\n  vec2 uv_1;\\n  vec2 uv2_2;\\n  uv_1 = (uv - 0.5);\\n  uv_1 = (uv_1 * (min (aspect.x, aspect.y) * 0.8));\\n  uv_1 = (uv_1 * aspect.xy);\\n  float tmpvar_3;\\n  tmpvar_3 = sin(q1);\\n  float tmpvar_4;\\n  tmpvar_4 = cos(q1);\\n  uv2_2.x = ((uv_1.x * tmpvar_4) - (uv_1.y * tmpvar_3));\\n  uv2_2.y = ((uv_1.x * tmpvar_3) + (uv_1.y * tmpvar_4));\\n  uv2_2 = (uv2_2 * aspect.zw);\\n  uv2_2 = (uv2_2 + 0.5);\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = (abs((\\n    (texture (sampler_main, uv2_2).xyz * 2.65)\\n   + \\n    (((texture (sampler_blur1, uv2_2).xyz * scale1) + bias1) * -2.0)\\n  )) * 1.5);\\n  ret = tmpvar_5.xyz;\\n }"}')},6848:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1.9,"echo_zoom":1.16936,"wave_mode":5,"additivewave":1,"wave_a":0,"wave_scale":0.899719,"wave_smoothing":0.63,"wave_mystery":1,"modwavealphastart":2,"modwavealphaend":2,"warpscale":2.593743,"zoom":1.00496,"warp":0.278033,"sx":0.999666,"sy":0.9999,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"mv_x":0,"mv_y":48,"mv_dx":-0.941273,"mv_dy":0.426319,"mv_l":5,"mv_r":0.315997,"mv_g":0.078173,"mv_b":0.941976,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"rg = 0;","frame_eqs_eel":"wave_r = wave_r + 0.350*( 0.60*sin(0.980*time) + 0.40*sin(1.047*time) );\\nwave_g = wave_g + 0.350*( 0.60*sin(0.835*time) + 0.40*sin(1.081*time) );\\nwave_b = wave_b + 0.350*( 0.60*sin(0.814*time) + 0.40*sin(1.011*time) );\\nq1 = (cx*2-1) + 0.52*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\nq2 = (cy*2-1) + 0.52*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\\nq3 = (cx*2-1) + 0.52*( 0.60*sin(0.174*-time) + 0.40*sin(0.364*time) );\\nq4 = (cy*2-1) + 0.52*( 0.60*sin(0.234*time) + 0.40*sin(0.271*-time) );\\ndecay = decay - 0.01*equal(frame%5,0);\\n\\n// this is a great way to respond to beats:\\n// once you get one, let it decay at a constant rate!!\\nrg = max(rg*0.95, 0.3 + 0.5*min(2,max(0,mid_att-1)*1.3));\\nq9 = rg;","pixel_eqs_eel":"du = x*2-1 - q1;\\ndv = y*2-1 - q2;\\ndist = sqrt(du*du+dv*dv);\\nang2 = atan2(du,dv);\\nmult = 0.008/(dist+0.4);\\ndx = mult*sin(ang2-1.5);\\ndy = mult*cos(ang2-1.5);\\ndu = x*2-1 - q3;\\ndv = y*2-1 - q4;\\ndist = sqrt(du*du+dv*dv);\\nang2 = atan2(du,dv);\\nmult = 0.008/(dist+0.4);\\ndx = dx + mult*sin(ang2+1.5);\\ndy = dy + mult*cos(ang2+1.5);","warp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = mix (uv_orig, uv, vec2(q9));\\n  ret_1 = texture (sampler_main, tmpvar_2).xyz;\\n  ret_1 = (ret_1 + ((ret_1 - \\n    ((texture (sampler_blur1, tmpvar_2).xyz * scale1) + bias1)\\n  ) * 0.3));\\n  ret_1 = (ret_1 * 0.9);\\n  ret_1 = (ret_1 + ((\\n    ((texture (sampler_noise_lq, ((\\n      (uv_orig * texsize.xy)\\n     * \\n      (texsize_noise_lq.zw * 0.4)\\n    ) + rand_frame.xy)).xyz - 0.5) / 256.0)\\n   * 122.0) * clamp (\\n    (treb_att - 1.0)\\n  , 0.0, 1.0)));\\n  ret_1 = mix (ret_1, vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))), vec3(0.2, 0.2, 0.2));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_1;\\n  ret = tmpvar_3.xyz;\\n }","comp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (0.3 + (0.4 * vec3(dot (texture (sampler_main, uv).xyz, vec3(0.32, 0.49, 0.29)))));\\n  ret = tmpvar_1.xyz;\\n }"}')},6389:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1.993,"wave_mode":7,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":1.199,"wave_scale":4.226,"wave_smoothing":0.7,"warpscale":1.331,"zoom":1.004,"warp":0.19788,"sx":0.99967,"sy":0.9999,"wave_r":0.8,"wave_g":0.8,"wave_b":0.8,"wave_y":0.68,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.2*( 0.60*sin(0.980*time) + 0.40*sin(1.047*time) );\\nwave_g = wave_g + 0.2*( 0.60*sin(0.835*time) + 0.40*sin(1.081*time) );\\nwave_b = wave_b + 0.2*( 0.60*sin(0.814*time) + 0.40*sin(1.011*time) );\\nq1 = (cx*2-1) + 0.6*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\nq2 = (cy*2-1) + 0.6*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\\nrot = rot + 0.03*cos(time*0.571+3);\\ndx = dx + 0.1*cos(time*0.492+1);\\ndy = dy + 0.1*cos(time*0.439+2);\\n//zoom = zoom + 0.01*cos(time*0.671+5);","pixel_eqs_eel":"du = (x*2-1) - q1;\\ndv = (y*2-1) - q2;\\ndist = sqrt(du*du+dv*dv);\\nang2 = atan2(du,dv) + time*0.15;\\nmult = 0.65*sin(dist*0.05);\\ndx = mult*sin(ang2*2-1.5);\\ndy = mult*cos(ang2*2-1.5);","warp":" shader_body { \\n  vec3 ret_1;\\n  ret_1 = (texture (sampler_main, uv).xyz + ((\\n    ((texture (sampler_noise_lq, ((\\n      (uv * texsize.xy)\\n     * texsize_noise_lq.zw) + rand_frame.xy)) * 2.0) - 1.0)\\n  .xyz / 256.0) * 5.0));\\n  ret_1 = (ret_1 * 0.98);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ret_1;\\n  ret = tmpvar_2.xyz;\\n }","comp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (texture (sampler_main, uv).xyz * 1.5);\\n  ret = tmpvar_1.xyz;\\n }"}')},7586:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1.44,"wave_mode":2,"wave_a":0.199,"wave_scale":1.605,"wave_smoothing":0.7,"warpscale":2.853,"zoom":1.014,"warp":0,"wave_g":0.6,"wave_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.400*( 0.60*sin(0.933*time) + 0.40*sin(1.045*time) );\\nwave_g = wave_g + 0.400*( 0.60*sin(0.900*time) + 0.40*sin(0.956*time) );\\nwave_b = wave_b + 0.400*( 0.60*sin(0.910*time) + 0.40*sin(0.920*time) );\\nzoom = zoom + 0.023*( 0.60*sin(0.339*time) + 0.40*sin(0.276*time) );\\nrot = rot + 0.030*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );\\ndecay = decay - 0.01*equal(frame%6,0);","pixel_eqs_eel":"zoom=zoom+0.06-0.06*sin(ang*2+time*3);","warp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = (((\\n    ((texture (sampler_blur2, (uv + vec2(0.01, 0.0))).xyz * scale2) + bias2)\\n   - \\n    ((texture (sampler_blur2, (uv - vec2(0.01, 0.0))).xyz * scale2) + bias2)\\n  ).y * 1280.0) * texsize.z);\\n  tmpvar_2.y = (((\\n    ((texture (sampler_blur2, (uv + vec2(0.0, 0.01))).xyz * scale2) + bias2)\\n   - \\n    ((texture (sampler_blur2, (uv - vec2(0.0, 0.01))).xyz * scale2) + bias2)\\n  ).y * 1024.0) * texsize.w);\\n  ret_1.y = texture (sampler_fw_main, (uv + (tmpvar_2 * 0.01))).y;\\n  ret_1 = (ret_1 + ((ret_1 - \\n    ((texture (sampler_blur3, uv).xyz * scale3) + bias3)\\n  ) * 0.35));\\n  ret_1 = (ret_1 * 0.96);\\n  ret_1 = (ret_1 + ((texture (sampler_noise_lq, \\n    (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 0.4)) + rand_frame.xy)\\n  ).xyz - 0.5) * 0.3));\\n  ret_1 = mix (ret_1, vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))), vec3(0.2, 0.2, 0.2));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_1;\\n  ret = tmpvar_3.xyz;\\n }","comp":""}')},1547:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1.9,"echo_zoom":1.169,"echo_orient":1,"wave_mode":5,"additivewave":1,"wave_a":0,"wave_scale":0.9,"wave_smoothing":0.63,"wave_mystery":1,"modwavealphastart":2,"modwavealphaend":2,"warpscale":1.331,"zoom":1.004,"warp":0.19788,"sx":0.99967,"sy":0.9999,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"mv_x":0,"mv_y":48,"mv_dx":-0.941,"mv_dy":0.426,"mv_l":5,"mv_r":0.316,"mv_g":0.078,"mv_b":0.942,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.2*( 0.60*sin(0.980*time) + 0.40*sin(1.047*time) );\\nwave_g = wave_g + 0.2*( 0.60*sin(0.835*time) + 0.40*sin(1.081*time) );\\nwave_b = wave_b + 0.2*( 0.60*sin(0.814*time) + 0.40*sin(1.011*time) );\\nq1 = (cx*2-1) + 0.6*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\nq2 = (cy*2-1) + 0.6*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );","pixel_eqs_eel":"du = (x*2-1) - q1;\\ndv = (y*2-1) - q2;\\ndist = sqrt(du*du+dv*dv);\\nang2 = atan2(du,dv) + time*0.15;\\nmult = 0.65*sin(dist*0.05);\\ndx = mult*sin(ang2*2-1.5);\\ndy = mult*cos(ang2*2-1.5);","warp":" shader_body { \\n  vec3 ret_1;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv);\\n  ret_1 = (tmpvar_2.xyz + ((tmpvar_2.xyz - \\n    ((texture (sampler_blur2, uv).xyz * scale2) + bias2)\\n  ) * 0.3));\\n  ret_1 = (ret_1 * 0.9);\\n  ret_1 = (ret_1 + ((\\n    ((texture (sampler_noise_lq, ((\\n      (uv_orig * texsize.xy)\\n     * \\n      (texsize_noise_lq.zw * 0.4)\\n    ) + rand_frame.xy)).xyz - 0.5) / 256.0)\\n   * 122.0) * clamp (\\n    (treb_att - 1.0)\\n  , 0.0, 1.0)));\\n  vec3 tmpvar_3;\\n  tmpvar_3 = mix (ret_1, vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))), vec3(0.2, 0.2, 0.2));\\n  ret_1 = tmpvar_3;\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = tmpvar_3;\\n  ret = tmpvar_4.xyz;\\n }","comp":" shader_body { \\n  vec2 uv2_1;\\n  vec3 ret_2;\\n  uv2_1 = (uv + (vec2(1.0, 0.0) * texsize.zw));\\n  float tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(-1.0, 0.0) * texsize.zw));\\n  float tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(0.0, 1.0) * texsize.zw));\\n  float tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(0.0, -1.0) * texsize.zw));\\n  vec3 tmpvar_6;\\n  tmpvar_6.z = 0.14;\\n  tmpvar_6.x = (tmpvar_3 - tmpvar_4);\\n  tmpvar_6.y = (tmpvar_5 - ((\\n    (texture (sampler_main, uv2_1).xyz + (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4))\\n   + \\n    (((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2) * 0.15)\\n  ) + (\\n    ((texture (sampler_blur3, uv2_1).xyz * scale3) + bias3)\\n   * 0.1)).x);\\n  ret_2 = (0.5 + (0.5 * normalize(tmpvar_6)));\\n  vec2 x_7;\\n  x_7 = (ret_2.xy - 0.5);\\n  ret_2 = (ret_2 * clamp ((\\n    sqrt(dot (x_7, x_7))\\n   * 5.0), 0.0, 1.0));\\n  ret_2 = ret_2.xxy;\\n  ret_2 = (ret_2 + 1.15);\\n  ret_2 = (ret_2 * mix (ret_2, (ret_2 * \\n    (((texture (sampler_blur3, uv).xyz * scale3) + bias3) - ((texture (sampler_blur1, uv).xyz * scale1) + bias1))\\n  ), pow (hue_shader.yxz, ret_2)));\\n  ret_2 = (ret_2 * ret_2);\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = ret_2;\\n  ret = tmpvar_8.xyz;\\n }"}')},1120:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1.56,"decay":1,"echo_zoom":0.362,"echo_orient":1,"modwavealphabyvolume":1,"darken":1,"wave_a":0.001,"wave_scale":0.653,"wave_smoothing":0,"wave_mystery":-0.5,"warpscale":0.107,"zoomexp":0.34421,"fshader":1,"zoom":2.78167,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":25.6,"mv_y":9.6,"mv_l":5,"mv_a":0},"shapes":[{"baseVals":{"additive":1,"textured":1,"rad":3.971,"tex_zoom":0.29171,"r":0,"a":0,"g2":0,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"additive":1,"textured":1,"rad":1.52776,"tex_zoom":0.40839,"g":1,"b":1,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ang = angc;\\nangc = angc-treb*.01;\\n\\nx=.5 + .2*sin(angc);\\ny=.5 + .2*sin(.98*angc);"},{"baseVals":{"additive":1,"textured":1,"rad":6.662,"tex_zoom":0.14949,"g":1,"b":1,"a":0.1,"g2":0,"border_r":0,"border_g":0,"border_b":0,"border_a":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ang = ang + angc;\\nangc = angc + bass*.01;\\nx = .5 + .045*sin(.234*time);\\ny = .5 + .054*sin(.223*time);\\n\\nr2 = (rand100)*.01"},{"baseVals":{"additive":1,"textured":1,"x":0.18,"y":0.3,"rad":1.5584,"tex_zoom":0.19788,"g":1,"b":1,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = .5+.05*sin(.23*time + .2*treb_att);\\ny = .5+.05*cos(.2*time + .2*bass);\\n\\nr = .5+sin(time);\\nb = .5+sin(time*.556677);\\ng = .5+sin(time*.353);"}],"waves":[{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"bassc = 0;\\nbcount = 0;","frame_eqs_eel":"r=bass*.5;\\ng=treb*.5;\\nb=mid*.5;","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));"},{"baseVals":{"spectrum":1,"usedots":1,"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"r=bass*.5;\\ng=treb*.5;\\nb=mid*.5;\\na = 0 + (treb_att * .15);","point_eqs_eel":"x = .5+.2*sin(time*.7454);\\nx = x+(.0005-int(rand(10))*.008);\\ny = .5+.2*cos(time*.455);\\ny = y+(.0005-int(rand(10))*.001);\\n\\n\\nbassc = if(above(bcount,0),1,0);\\nbcount = if(above(bcount,0),bcount - .00005,if(below(bassc,1),if(above(bass,1.5),.2,0),0));\\nx = x - bcount;"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"r=bass*.5;\\ng=treb*.5;\\nb=mid*.5;","point_eqs_eel":"x = .5+.2*sin(time*.7454);\\nx = x+(.0005+int(rand(10))*.008);\\ny = .5+.2*cos(time*.455);\\ny = y+(.0005-int(rand(10))*.001);\\n\\nbassc = if(above(bcount,0),1,0);\\nbcount = if(above(bcount,0),bcount - .00005,if(below(bassc,1),if(above(bass,1.5),.2,0),0));\\nx = x + bcount;\\nma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"r=bass*.5;\\ng=treb*.5;\\nb=mid*.5;","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));"}],"init_eqs_eel":"q21 = 1/asin(1);","frame_eqs_eel":"// coordinates spiral 1\\nq21 = .5; //sin(time); // X\\nq22 = 0 - sin(time * .5); //-0.5; // Y\\n\\n// coordinates spiral 2\\nq23 = 0;\\nq24 = 1; //sin(time); //0.5;\\n\\nq25 = 0.5/asin(1); // pi/4\\n\\nq26 = time*0.3; // rotation\\nq27 = -time*0.6; // growth\\n\\n\\nbassfix=.05+.01*bass;\\nmidfix=.05+.01*mid;\\ntrebfix=.05+.01*treb;\\nbassif=if(above(bass_att,1),bassif+bassfix,if(above(bassif,85),0,bassif*.96));\\nmidif=if(above(mid_att,1),midif+midfix,if(above(midif,.85),0,midif*.96));\\ntrebif=if(above(treb_att,1),trebif+trebfix,if(above(trebif,.85),0,trebif*.96));\\n\\nq12=bassif;\\nq13=midif;\\nq14=trebif;\\nq15=abs(cos(bassif-time));\\nq16=abs(cos(midif-time));\\nq17=abs(cos(trebif-time));","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 mret_1;\\n  vec3 ret_2;\\n  mret_1 = (texture (sampler_noise_hq, fract((uv_orig * texsize.zw))).xyz - texture (sampler_noise_lq, (uv + (uv_orig - texsize_noise_lq.zw))).xyz);\\n  mret_1 = (mret_1 + texture (sampler_noise_hq, fract(uv)).zyx);\\n  mret_1.x = (mret_1.x * ((0.5 + \\n    (0.2 * sin(((rad * 20.0) + (time * 16.0))))\\n  ) + (0.1 * q12)));\\n  mret_1.y = (mret_1.y * ((0.5 + \\n    (0.2 * sin(((rad * 40.0) + (time * 18.4))))\\n  ) + (0.1 * q13)));\\n  mret_1.z = (mret_1.z * ((0.5 + \\n    (0.2 * sin(((rad * 10.0) - (time * 14.3))))\\n  ) + (0.1 * q14)));\\n  vec3 tmpvar_3;\\n  tmpvar_3.x = (0.95 + (0.2 * q17));\\n  tmpvar_3.y = (0.95 + (0.2 * q15));\\n  tmpvar_3.z = (0.95 + (0.2 * q16));\\n  ret_2 = (texture (sampler_noise_hq, uv).xxx * tmpvar_3);\\n  ret_2 = mix (ret_2, mret_1, vec3(0.2, 0.2, 0.2)).xzy;\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = ret_2;\\n  ret = tmpvar_4.xyz;\\n }","comp":"vec2 xlat_mutabledenominator;\\nvec2 xlat_mutablenumerator;\\n shader_body { \\n  vec2 uv_1;\\n  uv_1 = uv;\\n  vec3 fret_2;\\n  vec2 xy1_3;\\n  vec2 uvm_4;\\n  vec2 spiral_5;\\n  vec2 c_6;\\n  vec3 ret_7;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = ((uv - 0.5) * aspect.wz);\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = q21;\\n  tmpvar_9.y = q22;\\n  xlat_mutablenumerator = ((tmpvar_8 + tmpvar_9) * 64.0);\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = q23;\\n  tmpvar_10.y = q24;\\n  xlat_mutabledenominator = (tmpvar_8 + tmpvar_10);\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = ((xlat_mutablenumerator.x * xlat_mutabledenominator.x) + (xlat_mutablenumerator.y * xlat_mutabledenominator.y));\\n  tmpvar_11.y = ((xlat_mutablenumerator.y * xlat_mutabledenominator.x) - (xlat_mutablenumerator.x * xlat_mutabledenominator.y));\\n  c_6 = ((tmpvar_11 / (\\n    (xlat_mutabledenominator.x * xlat_mutabledenominator.x)\\n   + \\n    (xlat_mutabledenominator.y * xlat_mutabledenominator.y)\\n  )) - 0.5);\\n  float tmpvar_12;\\n  float tmpvar_13;\\n  tmpvar_13 = (min (abs(\\n    (c_6.x / c_6.y)\\n  ), 1.0) / max (abs(\\n    (c_6.x / c_6.y)\\n  ), 1.0));\\n  float tmpvar_14;\\n  tmpvar_14 = (tmpvar_13 * tmpvar_13);\\n  tmpvar_14 = (((\\n    ((((\\n      ((((-0.01213232 * tmpvar_14) + 0.05368138) * tmpvar_14) - 0.1173503)\\n     * tmpvar_14) + 0.1938925) * tmpvar_14) - 0.3326756)\\n   * tmpvar_14) + 0.9999793) * tmpvar_13);\\n  tmpvar_14 = (tmpvar_14 + (float(\\n    (abs((c_6.x / c_6.y)) > 1.0)\\n  ) * (\\n    (tmpvar_14 * -2.0)\\n   + 1.570796)));\\n  tmpvar_12 = (tmpvar_14 * sign((c_6.x / c_6.y)));\\n  if ((abs(c_6.y) > (1e-08 * abs(c_6.x)))) {\\n    if ((c_6.y < 0.0)) {\\n      if ((c_6.x >= 0.0)) {\\n        tmpvar_12 += 3.141593;\\n      } else {\\n        tmpvar_12 = (tmpvar_12 - 3.141593);\\n      };\\n    };\\n  } else {\\n    tmpvar_12 = (sign(c_6.x) * 1.570796);\\n  };\\n  float tmpvar_15;\\n  tmpvar_15 = (3.0 * tmpvar_12);\\n  vec2 tmpvar_16;\\n  tmpvar_16.x = ((tmpvar_15 * q25) + q26);\\n  tmpvar_16.y = (((\\n    (2.0 * aspect.w)\\n   * \\n    log(sqrt(dot (c_6, c_6)))\\n  ) + (tmpvar_15 * q25)) + q27);\\n  spiral_5 = (0.5 + ((0.5 - \\n    abs(((fract(\\n      (tmpvar_16 * 0.5)\\n    ) * 2.0) - 1.0))\\n  ) * 1.1));\\n  float tmpvar_17;\\n  tmpvar_17 = (0.015 * time);\\n  uvm_4.x = (spiral_5.x - (0.07 * texture (sampler_noise_hq, vec2((\\n    (spiral_5.x * 1.5)\\n   + tmpvar_17))).x));\\n  uvm_4.y = (spiral_5.y - (0.07 * texture (sampler_noise_hq, vec2((\\n    (spiral_5.y * 1.5)\\n   + tmpvar_17))).x));\\n  uv_1 = uvm_4;\\n  uvm_4 = (uvm_4 - 0.5);\\n  float tmpvar_18;\\n  float tmpvar_19;\\n  tmpvar_19 = (min (abs(\\n    (uv_1.x / uv_1.y)\\n  ), 1.0) / max (abs(\\n    (uv_1.x / uv_1.y)\\n  ), 1.0));\\n  float tmpvar_20;\\n  tmpvar_20 = (tmpvar_19 * tmpvar_19);\\n  tmpvar_20 = (((\\n    ((((\\n      ((((-0.01213232 * tmpvar_20) + 0.05368138) * tmpvar_20) - 0.1173503)\\n     * tmpvar_20) + 0.1938925) * tmpvar_20) - 0.3326756)\\n   * tmpvar_20) + 0.9999793) * tmpvar_19);\\n  tmpvar_20 = (tmpvar_20 + (float(\\n    (abs((uv_1.x / uv_1.y)) > 1.0)\\n  ) * (\\n    (tmpvar_20 * -2.0)\\n   + 1.570796)));\\n  tmpvar_18 = (tmpvar_20 * sign((uv_1.x / uv_1.y)));\\n  if ((abs(uv_1.y) > (1e-08 * abs(uv_1.x)))) {\\n    if ((uv_1.y < 0.0)) {\\n      if ((uv_1.x >= 0.0)) {\\n        tmpvar_18 += 3.141593;\\n      } else {\\n        tmpvar_18 = (tmpvar_18 - 3.141593);\\n      };\\n    };\\n  } else {\\n    tmpvar_18 = (sign(uv_1.x) * 1.570796);\\n  };\\n  vec2 tmpvar_21;\\n  tmpvar_21.x = tmpvar_18;\\n  tmpvar_21.y = inversesqrt(dot (uv_1, uv_1));\\n  uvm_4 = (uvm_4 + 0.5);\\n  vec2 tmpvar_22;\\n  tmpvar_22 = (uv_1 - vec2(0.5, 0.5));\\n  float tmpvar_23;\\n  tmpvar_23 = (time * 1.4);\\n  xy1_3.x = ((sin(tmpvar_23) * tmpvar_22.x) - (cos(tmpvar_23) * tmpvar_22.y));\\n  xy1_3.y = ((cos(tmpvar_23) * tmpvar_22.x) + (sin(tmpvar_23) * tmpvar_22.y));\\n  vec2 tmpvar_24;\\n  tmpvar_24 = (xy1_3 - 0.5);\\n  uv_1 = tmpvar_24;\\n  vec3 tmpvar_25;\\n  tmpvar_25 = ((texture (sampler_blur1, uvm_4).xyz * scale1) + bias1);\\n  vec4 tmpvar_26;\\n  tmpvar_26 = texture (sampler_main, fract(uvm_4));\\n  vec2 tmpvar_27;\\n  tmpvar_27.x = (tmpvar_26.x + cos((uvm_4.x - \\n    (roam_sin.y * 4.0)\\n  )));\\n  tmpvar_27.y = (tmpvar_26.x - sin((uvm_4.y + roam_cos.x)));\\n  vec3 tmpvar_28;\\n  tmpvar_28 = ((tmpvar_26.xyz - tmpvar_25) - (4.0 * tmpvar_27).xxx);\\n  fret_2.yz = tmpvar_28.yz;\\n  fret_2.x = (tmpvar_28.x / (tmpvar_26.y / tmpvar_25.y));\\n  vec3 tmpvar_29;\\n  tmpvar_29 = (1.0 - fret_2);\\n  ret_7 = ((texture (sampler_main, tmpvar_24).xyz * tmpvar_29) + (0.8 * fret_2));\\n  vec3 tmpvar_30;\\n  tmpvar_30 = mix (ret_7, tmpvar_29, vec3((1.5 * clamp (\\n    dot (fret_2, tmpvar_29)\\n  , 0.0, 1.0))));\\n  ret_7 = (mix (tmpvar_30, mix (texture (sampler_main, tmpvar_21).xyz, tmpvar_30, vec3(0.5, 0.5, 0.5)), vec3(0.5, 0.5, 0.5)) - texture (sampler_main, tmpvar_21).xyz);\\n  vec4 tmpvar_31;\\n  tmpvar_31.w = 1.0;\\n  tmpvar_31.xyz = ret_7;\\n  ret = tmpvar_31.xyz;\\n }"}')},7792:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.42,"decay":1,"echo_zoom":1.007,"echo_orient":3,"wave_mode":3,"wave_dots":1,"wave_thick":1,"modwavealphabyvolume":1,"darken":1,"wave_a":0.998,"wave_scale":2.155,"wave_smoothing":0.9,"wave_mystery":-1,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":1.0095,"warp":0.01,"ob_r":0.01,"ob_a":0.5,"ib_size":0.015,"ib_a":0.5,"mv_x":64,"mv_y":1.248,"mv_l":5,"mv_b":0,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":10,"additive":1,"rad":0.24483},"init_eqs_eel":"","frame_eqs_eel":"x=x+.2*sin(time*.411);\\ny=y+.2*cos(time*.423);"},{"baseVals":{"enabled":1,"sides":10,"additive":1,"rad":0.24483},"init_eqs_eel":"","frame_eqs_eel":"x=x-.2*sin(time*.411);\\ny=y-.2*cos(time*.423);"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"//Unchained\'s Beat Code\\n\\nold_bass_flop=bass_flop;\\nold_treb_flop=treb_flop;\\nold_mid_flop=mid_flop;\\nchaos=.9+.1*sin(pulse);\\nentropy=if(equal(pulse,-20),1+bass_flop+treb_flop+mid_flop+rand(2),entropy);\\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*chaos+1.3);\\nbass_flop=abs(bass_flop-equal(bass_thresh,2));\\ntreb_thresh=above(treb_att,treb_thresh)*2 + (1-above(treb_att,treb_thresh))*((treb_thresh-1.3)*chaos+1.3);\\ntreb_flop=abs(treb_flop-equal(treb_thresh,2));\\nmid_thresh=above(mid_att,mid_thresh)*2 + (1-above(mid_att,mid_thresh))*((mid_thresh-1.3)*chaos+1.3);\\nmid_flop=abs(mid_flop-equal(mid_thresh,2));\\nbass_changed=bnot(equal(old_bass_flop,bass_flop));\\nmid_changed=bnot(equal(old_mid_flop,mid_flop));\\ntreb_changed=bnot(equal(old_treb_flop,treb_flop));\\nbass_residual = bass_changed*sin(pulse*.1*entropy) + bnot(bass_changed)*bass_residual;\\ntreb_residual = treb_changed*sin(pulse*.1*entropy) + bnot(treb_changed)*treb_residual;\\nmid_residual = mid_changed*sin(pulse*.1*entropy) + bnot(mid_changed)*mid_residual;\\npulse=if(above(abs(pulse),20),-20,pulse+(bass_thresh+mid_thresh+treb_thresh)*.032);\\nq1=mid_residual;\\nq2=bass_residual;\\nq3=treb_residual;\\nq4=sin(pulse);\\nq5=cos(pulse/2+q1);\\n\\nq6=sin(q3*q1+q7*q2);\\nq7=above(q1,0)+above(q2,0)+above(q3,0)+above(q3,0)*treb_flop+above(q2,0)*bass_flop+above(q1,0)*mid_flop;\\nq8=entropy;\\n\\nvol=(bass+mid+treb_att)*.3333;\\n\\nredsine=.5+.15*bass*sin(time*3);\\ngreensine=.5+.15*mid*sin(time*2);\\nbluesine=.5+.15*treb*sin(time);\\n\\nredif=if(above(bass,1.2),redsine,if(above(redif,.95),.0,redif*.95));\\ngreenif=if(above(mid,1.2),greensine,if(above(greenif,.95),.0,greenif*.95));\\nblueif=if(above(treb,1.2),bluesine,if(above(blueif,.95),.0,blueif*.95));\\n\\nr=redif;\\ng=greenif;\\nb=blueif;\\n\\nq9=r;\\nq10=g;\\nq11=b;\\n\\nwave_r=wave_r*(sin(redif*cos(b+g)));\\nwave_g=wave_g*(sin(greenif*cos(r+b)));\\nwave_b=wave_b*(sin(blueif*cos(r+g)));\\n\\nib_r=r;\\nib_g=g;\\nib_b=b;\\n\\nob_r=wave_r*redif;\\nob_g=wave_g*greenif;\\nob_b=wave_b*blueif;","pixel_eqs_eel":"//xy transform code\\nxv = sin(time*.333)*x -cos(time*.667)*x;\\nyv = cos(time*.233)*y +sin(time*.567)*y;\\nx = xv; y = yv;\\n//end x/y transform code\\n\\nsx=sx+.075*sin(x*3+q7*x);\\nsy=sy+.075*sin(y*3.1+q7*y);\\n\\ndx=dx+.005*cos(y*20+.1*cos(time*.11)+(q2*q6));\\ndy=dy+.005*sin(x*20+.1*sin(time*.09)+(q3*q6));","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = texture (sampler_main, uv).xyz;\\n  ret = tmpvar_1.xyz;\\n }","comp":" shader_body { \\n  vec2 uvv_1;\\n  vec2 uvm_2;\\n  uvm_2.x = ((0.5 * texture (sampler_noise_hq, uv.xx)) + (0.5 * texture (sampler_main, uv.xx))).x;\\n  uvm_2.y = ((0.5 * texture (sampler_main, uv.yy)) + (0.5 * texture (sampler_noise_hq, uv.yy))).x;\\n  uvv_1 = (uv * uvm_2);\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur1, uv).xyz * scale1) + bias1) - ((texture (sampler_blur3, texture (sampler_noise_hq, \\n    ((texture (sampler_blur3, uvv_1).xyz * scale3) + bias3)\\n  .xy).xy).xyz * scale3) + bias3));\\n  vec2 tmpvar_4;\\n  tmpvar_4 = fract((tmpvar_3.xy + uvm_2));\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = ((2.0 * tmpvar_3) * texture (sampler_main, (tmpvar_4 * (uvv_1 - tmpvar_4))).xyz);\\n  ret = tmpvar_5.xyz;\\n }"}')},3246:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":2.4,"decay":1,"echo_zoom":0.997,"echo_alpha":0.5,"echo_orient":3,"wave_mode":2,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":0.001,"wave_scale":0.28,"wave_smoothing":0.9,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":2.599,"warpscale":0.01,"zoomexp":0.99817,"zoom":0.86978,"warp":0.01,"sy":1.0017,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0.04,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0.5,"mv_r":0.35,"mv_g":0.35,"mv_b":0.35,"mv_a":0.2},"shapes":[{"baseVals":{"enabled":1,"sides":20,"additive":1,"textured":1,"rad":1.99867,"tex_zoom":0.49486,"g":1,"b":1,"a":0.75,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"thickoutline":1,"textured":1,"y":0.85,"rad":0.4404,"g":1,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"thickoutline":1,"textured":1,"x":0.8,"rad":0.44044,"tex_zoom":0.99991,"g":1,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":40,"additive":1,"thickoutline":1,"textured":1,"y":0.51,"rad":0.36457,"tex_ang":1.88496,"tex_zoom":1.00182,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0.2,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"bass_mod=max(x+abs(bass_att),x+sin(time));\\n\\ny=.5+.5*sin(time);\\nx=bass_mod*pow(y,2);\\n\\na=if(above(x,y),0,a);\\na2=a;\\nborder_a=.1*a;\\n\\ntex_zoom=bass+mid;\\n\\nr=bass*.5;\\ng=mid*.6;\\nb=treb*.7;"}],"waves":[{"baseVals":{"thick":1,"smoothing":1,"a":0,"enabled":0},"init_eqs_eel":"t1 = 1","frame_eqs_eel":"","point_eqs_eel":"y=rand(10000)*(.0001)+.5;\\nx=.5+.85*sin(time)*(.48-y);\\n\\nvol=(bass+mid+treb)*.333;\\n\\na=above((.35*bass),x);\\n\\nr=bass*.75;\\ng=mid*.3;\\nb=treb*.25;"},{"baseVals":{"thick":1,"smoothing":1,"enabled":0},"init_eqs_eel":"t1 = 1","frame_eqs_eel":"","point_eqs_eel":"y=rand(10000)*(.0001)+.5;\\nx=.5+.5*sin(time)*(.48-y);\\n\\nvol=(bass+mid+treb)*.333;\\n\\na=above((.35*mid),x);\\n\\nr=bass*.3;\\ng=mid*.75;\\nb=treb*.2;"},{"baseVals":{"thick":1,"smoothing":1,"enabled":0},"init_eqs_eel":"t1 = 1","frame_eqs_eel":"","point_eqs_eel":"y=rand(10000)*(.0001)+.5;\\nx=.5+.25*sin(time)*(.48-y);\\n\\nvol=(bass+mid+treb)*.333;\\n\\na=above((.35*treb),x);\\n\\nr=bass*.2;\\ng=mid*.3;\\nb=treb*.75;"},{"baseVals":{"thick":1,"additive":1,"smoothing":1,"a":0.05,"enabled":0},"init_eqs_eel":"t1 = 1","frame_eqs_eel":"","point_eqs_eel":"y=rand(10000)*(.0001)+.5;\\nx=.5-(pow(sin(time),y)+(.55-y));\\nx=if(above(x,y),y+sin(time)+(1-y),x);\\n\\nvol=(bass+mid+treb)*.333;\\n\\nr=bass*.5;\\ng=mid*.5;\\nb=treb*.5;"}],"init_eqs_eel":"decay=0.1;","frame_eqs_eel":"sx=1;\\nsy=1;\\n\\nredsine=.5+.15*bass*sin(time*3);\\ngreensine=.5+.15*mid*sin(time*2);\\nbluesine=.5+.15*treb*sin(time);\\n\\nredif=.9*if(above(bass,1.2),redsine,if(above(redif,.95),0,redif*.98));\\ngreenif=.8*if(above(mid,1.2),greensine,if(above(greenif,.95),0,greenif*.8));\\nblueif=.8*if(above(treb,1.2),bluesine,if(above(blueif,.95),0,blueif*.8));\\n\\nib_r=redif;\\nib_g=greenif;\\nib_b=blueif;","pixel_eqs_eel":"ang2=sin(ang*3+time+(.05*sin(time*above(mid_att,1.2))));\\n\\nrot=1.2*(ang2);","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (((texture (sampler_blur1, uv).xyz * scale1) + bias1) - texture (sampler_main, uv).xyz);\\n  ret = tmpvar_1.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  ret_1 = (mix (texture (sampler_main, uv).xyz, texture (sampler_main, (\\n    (vec2(-1.003, 1.003) * (uv - 0.5))\\n   + 0.5)).xyz, vec3(0.5, 0.5, 0.5)) * 2.4);\\n  ret_1 = (ret_1 * ret_1);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ret_1;\\n  ret = tmpvar_2.xyz;\\n }"}')},3498:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":1,"wave_mode":6,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_a":4.619,"wave_scale":0.286,"wave_smoothing":0,"modwavealphastart":1.9,"modwavealphaend":1.9,"warpanimspeed":0.01,"warpscale":0.01,"zoomexp":2.11299,"zoom":1.01,"warp":0.01,"wave_r":0.48,"wave_g":0.61,"wave_b":0.79,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":3,"additive":1,"thickoutline":1,"num_inst":1024,"rad":0.01,"r2":1,"g2":0.86,"a2":0.7,"border_a":0},"init_eqs_eel":"n=1024;\\ndir=1;","frame_eqs_eel":"\\ndir*=if(above(bass,1.3),-1,1);\\nd=0.2*instance/n;//bass*0.4;\\nr=mid*time*3.1824*treb; \\nx=.5+dir*cos(r)*d*.005-dir*sin(-d+0.5*mid*time)*d*10;\\ny=.5+dir*sin(r)*d*.005+dir*cos(-d+0.5*mid*time)*d*10;"},{"baseVals":{"enabled":1,"sides":36,"thickoutline":1,"textured":1,"rad":1.21524,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"a=bass;\\nrad=(bass+mid+treb)/3;\\nx=if(below(bass,1.2),rand(10)*0.1*treb,0.5);\\ny=if(below(bass,1.2),rand(10)*0.1*mid,0.5);\\n\\nr=1-(0.7+0.5*abs(sin(0.05*time+0.5*bass)));\\ng=1-(0.5+0.5*abs(cos(0.05*time-0.4*mid)));\\nb=1-(0.5+0.5*abs(sin(0.05*time+0.6*treb)));"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"//init\\nct=0;\\nn=400;\\nr=0.5;\\nmx=0;\\nmy=0;\\nmz=0;\\ndst=2;\\nrx=0;\\nry=0;\\nrz=0;\\nrdx=1;\\nrdy=1;\\nrdz=1;\\np=3.14159265;\\np2=2.0*p;\\np3=180/p;\\n\\n\\ndir=1;","frame_eqs_eel":"//dx-=0.0125*sin(0.02*time+treb);\\n//dy-=0.0125*cos(0.02*time+mid);\\n\\nrot-=0.0125*(bass)*sin(time+bass);","pixel_eqs_eel":"//pixel\\nvt=sin(i*p2*4)*(v+1)/2;\\nx1=sin(i*p2*2);\\ny1=if(below(i,0.5),vt,0);\\nz1=if(above(i,0.5),vt,0);\\ny2=y1*xc-z1*xs;\\nz2=y1*xs+z1*xc;\\nx2=z2*ys+x1*yc;\\nz3=z2*yc-x1*ys;\\nx3=x2*zc-y2*zs;\\ny3=y2*zc+x2*zs;\\nx4=mx+x3;y4=my+y3;\\nz4=mz+z3;x=x4/(1+z4/dst);\\ny=y4/(1+z4/dst);","warp":"","comp":""}')},7485:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1,"decay":0.99,"echo_zoom":1,"echo_alpha":0.5,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"darken_center":1,"darken":1,"invert":1,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":2.853,"zoomexp":3.6,"zoom":1.02109,"rot":-0.16,"warp":0.309,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"sides":39,"additive":1,"num_inst":126,"rad":0.06989,"tex_ang":0.62832,"a":0,"r2":1,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));"},{"baseVals":{"sides":41,"additive":1,"num_inst":239,"rad":0.06989,"tex_ang":0.62832,"r":0,"g":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));"},{"baseVals":{"sides":43,"additive":1,"num_inst":32,"rad":0.06989,"tex_ang":0.62832,"r":0,"b":1,"g2":0,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));"},{"baseVals":{"enabled":1,"sides":14,"rad":0.15964,"tex_ang":0.62832,"a":0,"r2":1,"b2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));"}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.400*( 0.60*sin(0.933*time) + 0.40*sin(1.045*time) );\\nwave_g = wave_g + 0.400*( 0.60*sin(0.900*time) + 0.40*sin(0.956*time) );\\nwave_b = wave_b + 0.400*( 0.60*sin(0.910*time) + 0.40*sin(0.920*time) );\\nq8 = oldq8+if(above(bass+bass_att,1.8),q8+0.0005*pow((bass+bass_att-1),9),0);\\noldq8 = q8;\\nmonitor = q8;\\nzoom = zoom + 0.023*( 0.60*sin(0.339*q8) + 0.40*sin(0.276*q8) );\\nrot = rot + 0.030*( 0.60*sin(0.381*q8) + 0.40*sin(0.579*q8) );\\n//decay = decay - 0.02*equal(frame%40,0);\\nmv_r = wave_r;\\nmv_b = wave_b;\\nmv_g = wave_g;\\nmv_x = 1.25;\\nmv_y = 1.25;\\nmv_dx = 0.1*sin(1.1*time);\\nmv_dy = 0.1*cos(1.112*time);","pixel_eqs_eel":"rot=rot+1/(10*(rad+0.2+0.1*sin(q8)));","warp":" shader_body { \\n  vec2 my_uv_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (vec2(1280.0, 1024.0) * texsize.zw);\\n  float tmpvar_4;\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (uv + vec2(0.005, 0.0));\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv - vec2(0.005, 0.0));\\n  tmpvar_4 = (((\\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_6).xyz * scale2)\\n   + bias2)).x * tmpvar_3.x);\\n  float tmpvar_7;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (uv + vec2(0.0, 0.005));\\n  vec2 tmpvar_9;\\n  tmpvar_9 = (uv - vec2(0.0, 0.005));\\n  tmpvar_7 = (((\\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_9).xyz * scale2)\\n   + bias2)).x * tmpvar_3.y);\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = tmpvar_4;\\n  tmpvar_10.y = tmpvar_7;\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = (((\\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_6).xyz * scale2)\\n   + bias2)).x * tmpvar_3.x);\\n  tmpvar_11.y = (((\\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_9).xyz * scale2)\\n   + bias2)).x * tmpvar_3.y);\\n  ret_2.x = texture (sampler_fw_main, ((uv - (tmpvar_10 * 0.01)) + (tmpvar_11 * 0.003))).x;\\n  vec4 tmpvar_12;\\n  tmpvar_12 = texture (sampler_blur3, uv);\\n  ret_2.x = (ret_2.x + ((ret_2.x - \\n    ((tmpvar_12.xyz * scale3) + bias3)\\n  .x) * 0.1));\\n  ret_2.x = (ret_2.x + 0.004);\\n  vec2 tmpvar_13;\\n  tmpvar_13.x = tmpvar_7;\\n  tmpvar_13.y = -(tmpvar_4);\\n  my_uv_1 = (uv + ((tmpvar_13 * 0.05) * (1.2 - \\n    ((tmpvar_12.xyz * scale3) + bias3)\\n  .y)));\\n  ret_2.z = texture (sampler_fw_main, my_uv_1).z;\\n  vec2 x_14;\\n  x_14 = (my_uv_1 - uv);\\n  ret_2.z = (ret_2.z + ((\\n    ((ret_2.z - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).z) * sqrt(dot (x_14, x_14)))\\n   * 180.0) / sqrt(\\n    dot (tmpvar_3, tmpvar_3)\\n  )));\\n  ret_2.z = (ret_2.z * 0.8);\\n  ret_2.z = (ret_2.z + 0.004);\\n  vec2 tmpvar_15;\\n  tmpvar_15.x = -(tmpvar_7);\\n  tmpvar_15.y = tmpvar_4;\\n  my_uv_1 = (tmpvar_15 * 0.045);\\n  vec2 tmpvar_16;\\n  tmpvar_16.x = (((\\n    (texture (sampler_blur2, (uv + vec2(0.01, 0.0))).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, (uv - vec2(0.01, 0.0))).xyz * scale2)\\n   + bias2)).y * tmpvar_3.x);\\n  tmpvar_16.y = (((\\n    (texture (sampler_blur2, (uv + vec2(0.0, 0.01))).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, (uv - vec2(0.0, 0.01))).xyz * scale2)\\n   + bias2)).y * tmpvar_3.y);\\n  my_uv_1 = (my_uv_1 + (uv - (tmpvar_16 * 0.03)));\\n  ret_2.y = texture (sampler_fw_main, my_uv_1).y;\\n  ret_2.y = (ret_2.y + ((\\n    (ret_2.y - ((texture (sampler_blur3, my_uv_1).xyz * scale3) + bias3).y)\\n   * 0.1) + 0.01));\\n  vec4 tmpvar_17;\\n  tmpvar_17.w = 1.0;\\n  tmpvar_17.xyz = ret_2;\\n  ret = tmpvar_17.xyz;\\n }","comp":" shader_body { \\n  vec2 uv2_1;\\n  float blur_2;\\n  float crisp_3;\\n  vec3 ret_4;\\n  vec4 tmpvar_5;\\n  tmpvar_5 = texture (sampler_main, uv);\\n  vec4 tmpvar_6;\\n  tmpvar_6 = texture (sampler_blur1, uv);\\n  ret_4 = (tmpvar_5.xyz + ((\\n    (tmpvar_6.xyz * scale1)\\n   + bias1) * 3.0));\\n  uv2_1 = (((uv - 0.5) * 0.8) + 0.5);\\n  crisp_3 = texture (sampler_main, uv2_1).y;\\n  blur_2 = ((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1).y;\\n  ret_4 = (ret_4 * (1.0 - (blur_2 * 1.15)));\\n  vec3 tmpvar_7;\\n  tmpvar_7 = max (ret_4, vec3(crisp_3));\\n  uv2_1 = uv;\\n  crisp_3 = tmpvar_5.x;\\n  blur_2 = ((tmpvar_6.xyz * scale1) + bias1).x;\\n  ret_4 = (tmpvar_7 * (1.0 - (blur_2 * 1.15)));\\n  vec3 tmpvar_8;\\n  tmpvar_8 = max (ret_4, tmpvar_5.xxx);\\n  ret_4 = tmpvar_8;\\n  vec4 tmpvar_9;\\n  tmpvar_9.w = 1.0;\\n  tmpvar_9.xyz = tmpvar_8;\\n  ret = tmpvar_9.xyz;\\n }"}')},376:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"additivewave":1,"wave_dots":1,"wave_thick":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.527,"wave_smoothing":0,"wave_mystery":0.6,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_g":0.49,"ob_a":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b2x":0.6,"b3x":0.4,"b1ed":0},"shapes":[{"baseVals":{"sides":8,"additive":1,"num_inst":256,"rad":0.03632,"tex_ang":1.00531,"tex_zoom":1.53117,"g":1,"b":1,"a":0,"g2":0,"border_r":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":5,"additive":1,"num_inst":256,"x":0.26,"y":0.2,"rad":0.39317,"tex_zoom":0.9355,"g2":0,"a2":0.2,"border_g":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"n = (instance);\\nFLen = reg00;\\nSLen = reg00/2;\\n\\nz0 = 10;\\ny0 = gmegabuf(2000+n+FLen)/z0;\\nx0 = gmegabuf(2000+n)/z0;\\n\\na0 = (gmegabuf(n+10000));\\n\\nk1 = instance/num_inst-.5;\\nx = .5 + x0 + sin(k1*8*sin(q12*.07)) * sin(q11*.13)*q3*.7; \\ny = .5 + q32*(y0 + sin(k1*8*sin(q14*.1)) * sin(q13*.2)*q3*.7); \\n\\narg = q2/8;\\nhigh = exp(-500*pow(arg+.5-instance/num_inst,2));\\nhigh += exp(-500*pow(-arg+.5-instance/num_inst,2));\\n\\nexc = sqrt((pow(x-.5,2)+pow(y-.5,2)));\\nrad0 = above(z0,0)*min (.1, a0/60)+.005;\\nrad0 = rad0 * (1+2*exc) * (1+high);\\n\\np1 = .5 + sin(q12)/2;\\np2 = .5 + sin(q13*1.4)/2;\\n//p1 = rand(1)-.5;\\n//p2 = rand(1)-.5;\\nexc = ((pow(x-p1,2)+pow(y-p2,2)));\\nrad = min(rad0 * (1 + .004*q3/abs(exc)),1) ;\\n\\na = min(a0*8+.4,1);\\n\\nk1 = instance/num_inst*5 + high;\\nw = 1-exp(-treb_att/2-.5);\\ng = w + (1-w)*sin(k1);\\nr = w + (1-w)*sin(k1-6.28/3);\\nb = w + (1-w)*sin(k1-6.28*2/3);\\n\\na2 = a/4;\\ng2 = g*0; b2 = b*0; r2 = r*0;"},{"baseVals":{"sides":13,"additive":1,"num_inst":5,"x":0.65,"y":0.38,"rad":0.57049,"tex_zoom":0.73678,"a":0.7,"g2":0,"border_r":0.5,"border_g":0.5,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"k1 = instance/num_inst;\\nx = .5 + .3*sin(instance*k1*413);\\ny = .5 + .3 * sin(instance*k1*113);\\n\\nrad = .1 + .4*sin(k1*333);\\n\\nr =  .5*sin(k1*234);\\nb =  .5*sin(k1*534);\\ng =  .5*sin(k1*34);"},{"baseVals":{"sides":14,"additive":1,"thickoutline":1,"textured":1,"x":0.6,"y":0.55,"rad":0.97237,"ang":1.25664,"tex_zoom":0.34933,"g":0.6,"g2":0,"b2":1,"border_r":0.2,"border_g":0.7,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"sep":120,"spectrum":1,"additive":1,"scaling":7.52386,"smoothing":0,"r":0,"a":0.7},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"FLen = reg00;\\n\\nn = int(sample*FLen);\\nvol = (value1+value2) * (1+ .1 / (sample+.03));\\n\\nchg = min(max(vol- gmegabuf(n),-1),1);\\ndec = if (chg>0, 1-chg*0.3, 1+chg*0.2);\\n\\nchg = q1 -q2;\\ndec = .94 - abs(chg) * if (chg> 0, .2,.1);\\n\\ndec = min(max(dec,0),1);\\ngmegabuf(n) = gmegabuf(n)*dec + vol*(1-dec);\\n\\ndec = q2/4;\\n//dec = .90;\\ndec = max(min(dec,1),.1);\\n\\ngmegabuf(n) = gmegabuf(n)*dec + gmegabuf(n+(q2<.8))*(1-dec);\\ngmegabuf(n+10000) = gmegabuf(n+10000)*.2 + .8* vol/3;\\na = .0;\\nx = sample;\\ny = .2 + gmegabuf(n+0)*.23;"},{"baseVals":{"samples":256,"usedots":1,"scaling":0.89152,"smoothing":0.82,"a":0.9,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"samples":32,"thick":1,"scaling":0.89152,"smoothing":0.82,"r":0,"g":0.2,"b":0.6,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"n = 0;\\nloop (50000,\\ngmegabuf(n) = 0;\\nmegabuf(n) = 0;\\nn = n+1;\\n);\\n\\nsw1 = rand(8);\\nsw2 = rand(8);\\nsw3 = rand(8);\\nsw4 = rand(8);","frame_eqs_eel":"flen = 512; //Wave Punkte\\nreg00 = FLen;\\nSLen = FLen/2;\\ndec_m = pow(.94, 30/fps);\\n\\n//Volume\\nn = 0; vol = 0;\\nloop (SLen,\\n  vol = vol + pow(gmegabuf(n),2)/FLen;  \\n  n = n+1;\\n);\\nvol = sqrt(vol)/2;\\nvol_ = vol_*dec_m + (1-dec_m)* (vol);\\n\\n//switches\\nlev1 = lev1 * dec_m + (1-dec_m) * gmegabuf(1);\\nlev2 = lev2 * dec_m + (1-dec_m) * gmegabuf(20);\\nlev3 = lev3 * dec_m + (1-dec_m) * gmegabuf(50);\\nlev4 = lev4 * dec_m + (1-dec_m) * gmegabuf(100);\\nsw1 = sw1 + (lev1-gmegabuf(1)>0)/fps;\\nsw2 = sw2 + (lev2-gmegabuf(20)>0)/fps;\\nsw3 = sw3 + (lev3-gmegabuf(50)>0)/fps;\\nsw4 = sw4 + (lev4-gmegabuf(100)>0)/fps;\\n\\ndif = (1+sin(sw3/4))*16+2;\\nofs = sin(sw2/3)*8;\\nn = 0; k1 = frame*0; \\nloop (SLen,\\n      m1 = (n)%SLen;\\n      m2 = (n+ofs)%SLen;\\n\\n      k = (m1+dif)%SLen;\\n      i = (SLen+m2-dif)%SLen;\\n\\n      in1 = (gmegabuf(m1)-gmegabuf(k))/pow(vol_+.03,.8)*1.2;\\n      in2 = (gmegabuf(m2)-gmegabuf(i))/pow(vol_+.03,.8)*1.2;\\n\\n      dec = if (pow(gmegabuf(2000+n),2) + pow(gmegabuf(2000+FLen+n),2)> in1*in1+in2*in2,.8,.94) ;\\n      dec = pow (dec, 30/fps); \\n\\n      gmegabuf(2000+n) =       gmegabuf(2000+n)*dec      +(1-dec)* in1;\\n      gmegabuf(2000+FLen+n) =  gmegabuf(2000+FLen+n)*dec +(1-dec)* in2;\\n      n=n+1;\\n);\\n\\nq1 = (bass+treb+mid)/3;\\nq2 = (bass_att+treb_att+mid_att)/3;\\nq3 = vol_;\\nq11 = sw1;\\nq12 = sw2;\\nq13 = sw3;\\nq14 = sw4;\\n\\nrot = 0; zoom = .98; warp = .3; rot = 0;\\n\\nq32 = aspecty;\\nmonitor = dif;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 uv_1;\\n  uv_1 = uv;\\n  vec2 zz_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (uv - vec2(0.5, 0.5));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (0.016 * texture (sampler_noise_lq, ((uv * 0.3) + (0.01 * rand_frame).xy))).xyz;\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (0.8 * sin((tmpvar_3 * 8.0)));\\n  float tmpvar_6;\\n  tmpvar_6 = clamp ((0.01 / sqrt(\\n    dot (tmpvar_5, tmpvar_5)\\n  )), 0.0, 1.0);\\n  vec2 tmpvar_7;\\n  tmpvar_7 = ((-(tmpvar_3) * texsize.xy) * q26);\\n  zz_2 = tmpvar_7;\\n  if ((q25 == 1.0)) {\\n    zz_2 = (tmpvar_7 * (abs(tmpvar_3.y) / abs(tmpvar_3.x)));\\n  } else {\\n    if ((q25 == 2.0)) {\\n      zz_2 = (zz_2 * (abs(tmpvar_3.y) - abs(tmpvar_3.x)));\\n    };\\n  };\\n  uv_1 = (uv + ((\\n    clamp ((sin(zz_2) / cos(zz_2)), vec2(-20.0, -20.0), vec2(20.0, 20.0))\\n   * texsize.zw) * 4.0));\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = (((\\n    (0.95 * (texture (sampler_main, uv_1) + tmpvar_6).xyz)\\n   + tmpvar_4) - 0.02) - (0.06 * (\\n    (texture (sampler_blur2, uv_1).xyz * scale2)\\n   + bias2).x));\\n  ret = tmpvar_8.xyz;\\n }","comp":"vec3 xlat_mutableblur;\\nvec3 xlat_mutableret1;\\n shader_body { \\n  vec2 uv_1;\\n  vec2 uv2_2;\\n  uv_1 = (uv - 0.5);\\n  uv_1 = (uv_1 * aspect.xy);\\n  float tmpvar_3;\\n  tmpvar_3 = (0.02 * q27);\\n  xlat_mutableblur = ((texture (sampler_blur1, (\\n    (uv_1 + 0.4)\\n   + tmpvar_3)).xyz * scale1) + bias1);\\n  xlat_mutableret1 = max (vec3(0.0, 0.0, 0.0), (texture (sampler_main, (\\n    (uv_1 + 0.4)\\n   + tmpvar_3)).xyz + (xlat_mutableblur * 2.0)));\\n  uv2_2.x = ((uv_1.x * 0.0007962743) - (uv_1.y * 0.9999997));\\n  uv2_2.y = ((uv_1.x * 0.9999997) + (uv_1.y * 0.0007962743));\\n  xlat_mutableblur = ((texture (sampler_blur1, (\\n    (uv2_2 + 0.4)\\n   + tmpvar_3)).xyz * scale1) + bias1);\\n  xlat_mutableret1 = max (xlat_mutableret1, (texture (sampler_main, (\\n    (uv2_2 + 0.4)\\n   + tmpvar_3)).xyz + (xlat_mutableblur * 2.0)));\\n  uv2_2.x = ((uv_1.x * -0.9999987) - (uv_1.y * 0.001592548));\\n  uv2_2.y = ((uv_1.x * 0.001592548) + (uv_1.y * -0.9999987));\\n  xlat_mutableblur = ((texture (sampler_blur1, (\\n    (uv2_2 + 0.4)\\n   + tmpvar_3)).xyz * scale1) + bias1);\\n  xlat_mutableret1 = max (xlat_mutableret1, (texture (sampler_main, (\\n    (uv2_2 + 0.4)\\n   + tmpvar_3)).xyz + (xlat_mutableblur * 2.0)));\\n  uv2_2.x = ((uv_1.x * -0.00238894) - (uv_1.y * -0.9999971));\\n  uv2_2.y = ((uv_1.x * -0.9999971) + (uv_1.y * -0.00238894));\\n  xlat_mutableblur = ((texture (sampler_blur1, (\\n    (uv2_2 + 0.4)\\n   + tmpvar_3)).xyz * scale1) + bias1);\\n  xlat_mutableret1 = max (xlat_mutableret1, (texture (sampler_main, (\\n    (uv2_2 + 0.4)\\n   + tmpvar_3)).xyz + (xlat_mutableblur * 2.0)));\\n  uv2_2.x = ((uv_1.x * 0.9999949) - (uv_1.y * -0.003185092));\\n  uv2_2.y = ((uv_1.x * -0.003185092) + (uv_1.y * 0.9999949));\\n  xlat_mutableblur = ((texture (sampler_blur1, (\\n    (uv2_2 + 0.4)\\n   + tmpvar_3)).xyz * scale1) + bias1);\\n  xlat_mutableret1 = max (xlat_mutableret1, (texture (sampler_main, (\\n    (uv2_2 + 0.4)\\n   + tmpvar_3)).xyz + (xlat_mutableblur * 2.0)));\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = (xlat_mutableret1 * 1.5);\\n  ret = tmpvar_4.xyz;\\n }"}')},6028:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":2,"decay":0.97,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":4.099998,"wave_scale":1.285751,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.03,"ob_r":0.2,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"usedots":1,"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"it = it + 1;\\n\\na = equal(it%20,0);\\na = 1;","point_eqs_eel":"x = int(rand(101))*.01;\\ny = int(rand(101))*.01;"},{"baseVals":{"enabled":1,"sep":51,"additive":1,"scaling":1.32735,"smoothing":0.82,"b":3},"init_eqs_eel":"","frame_eqs_eel":"tm = int(rand(101))*.01*6.24;\\ndt = int(rand(101))*.01;\\n\\n\\nt1 = .5 + .5*sin(tm)*dt;\\nt2 = .5 + .5*cos(tm)*dt;\\n\\nr = .5 + .5*sin(time*1.132);\\ng = .5 + .5*sin(time*1.121);\\nb = .5 + .5*sin(time*1.187);","point_eqs_eel":"sp = int(sample*4);\\nsw = equal(it%2,0);\\nit = if(equal(sample,0),0,it + 1);\\n\\nmod = bass;\\n\\nax = t1 + sin(sample*6.28)*mod*.1;\\nay = t2 + cos(sample*6.28)*mod*.1;\\nbx = t1 + sin(sample*6.28)*mod*.005;\\nby = t2 + cos(sample*6.28)*mod*.005;\\n\\nx = if(sw,bx,ax);\\ny = if(sw,by,ay);\\n\\na = if(sw,equal(int(rand(7)),0)*.1,0);\\n\\na = sw*.2;"},{"baseVals":{"enabled":1,"sep":51,"thick":1,"additive":1,"scaling":1.32735,"smoothing":0.82,"b":3},"init_eqs_eel":"","frame_eqs_eel":"tm = int(rand(101))*.01*6.24;\\ndt = int(rand(101))*.01;\\n\\n\\nt1 = .5 + .5*sin(tm)*dt;\\nt2 = .5 + .5*cos(tm)*dt;\\n\\nr = .5 + .5*sin(time*1.132);\\ng = .5 + .5*sin(time*1.121);\\nb = .5 + .5*sin(time*1.187);","point_eqs_eel":"sp = int(sample*4);\\nsw = equal(it%2,0);\\nit = if(equal(sample,0),0,it + 1);\\n\\nmod = treb;\\n\\nax = t1 + sin(sample*6.28)*mod*.1;\\nay = t2 + cos(sample*6.28)*mod*.1;\\nbx = t1 + sin(sample*6.28)*mod*.005;\\nby = t2 + cos(sample*6.28)*mod*.005;\\n\\nx = if(sw,bx,ax);\\ny = if(sw,by,ay);\\n\\na = if(sw,equal(int(rand(7)),0)*.1,0);\\n\\na = sw*.2;"},{"baseVals":{"enabled":1,"sep":51,"thick":1,"additive":1,"scaling":1.32735,"smoothing":0.82,"b":3},"init_eqs_eel":"","frame_eqs_eel":"tm = int(rand(101))*.01*6.24;\\ndt = int(rand(101))*.01;\\n\\nt1 = .5 + .5*sin(tm)*dt;\\nt2 = .5 + .5*cos(tm)*dt;\\n\\nr = .5 + .5*sin(time*1.132);\\ng = .5 + .5*sin(time*1.121);\\nb = .5 + .5*sin(time*1.187);","point_eqs_eel":"sp = int(sample*4);\\nsw = equal(it%2,0);\\nit = if(equal(sample,0),0,it + 1);\\n\\nax = t1 + sin(sample*6.28)*mid*.1;\\nay = t2 + cos(sample*6.28)*mid*.1;\\nbx = t1 + sin(sample*6.28)*mid*.005;\\nby = t2 + cos(sample*6.28)*mid*.005;\\n\\nx = if(sw,bx,ax);\\ny = if(sw,by,ay);\\n\\na = if(sw,equal(int(rand(7)),0)*.1,0);\\n\\na = sw*.2"}],"init_eqs_eel":"colorcounter = 1;\\ncounter1 = 0;\\ncounter2 = 1;\\ncdelay1 = 0;\\ncdelay2 = 0;\\nrx = .5;\\nry = .5;\\nxm = 0;\\nym =0;\\norx = .5;\\nory = .5;\\nwave_x = .5;\\nwave_y = .5;\\noldx = int(rand(100))*.01;\\noldy = int(rand(100))*.01;","frame_eqs_eel":"warp = 0;\\ncounter1 = if(equal(counter2,1),if(equal(counter1,1),0,counter1+.05),1);\\ncounter2 = if(equal(counter1,1),if(equal(counter2,1),0,counter2+.05),1);\\ncdelay1 = if(equal(cdelay2,1),1,if(equal(colorcounter%2,1),if(equal(counter1,1),2 ,0), if(equal(counter2,1),2,0)));\\ncdelay2 = if(equal(cdelay1,2),1,0);\\ncolorcounter = if(above(colorcounter,7),0,if(equal(cdelay1,1),colorcounter+1,colorcounter));\\noldx = if(equal(colorcounter%2,1),if(equal(counter1,.95),rx,oldx),if(equal(counter2,.95),rx,oldx));\\noldy = if(equal(colorcounter%2,1),if(equal(counter1,.95),ry,oldy),if(equal(counter2,.95),ry,oldy));\\nrx = if(equal(cdelay1,1),int(rand(100))*.01,rx);\\nry = if(equal(cdelay1,1),int(rand(100))*.01,ry);\\nxm = if(equal(cdelay1,1),(rx - oldx)*.05,xm);\\nym = if(equal(cdelay1,1),(ry - oldy)*.05,ym);\\nmonitor = colorcounter;\\nwave_r = bass*.4;\\nwave_g = treb*.4;\\nwave_b = mid*.4;\\nwave_a = bass;\\nwave_mystery = -.5+bass*.1;\\nwave_x = rx - (if(equal(colorcounter%2,1),abs(counter1-1)*(xm*20),abs(counter2-1)*(xm*20)));\\nwave_y = ry - (if(equal(colorcounter%2,1),abs(counter1-1)*(ym*20),abs(counter2-1)*(ym*20)));\\nzoom = .995;","pixel_eqs_eel":"","warp":"","comp":" shader_body { \\n  vec3 orig_1;\\n  vec3 ret_2;\\n  float tmpvar_3;\\n  tmpvar_3 = fract(((\\n    (ang / 6.28)\\n   * 9.0) + (time * 0.05)));\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = cos(tmpvar_3);\\n  tmpvar_4.y = sin(tmpvar_3);\\n  vec4 tmpvar_5;\\n  tmpvar_5 = texture (sampler_main, (0.5 + ((1.75 * \\n    (rad * rad)\\n  ) * tmpvar_4)));\\n  ret_2 = tmpvar_5.xyz;\\n  orig_1 = ret_2;\\n  ret_2.yz = vec2(dot (tmpvar_5.xyz, vec3(0.32, 0.49, 0.29)));\\n  ret_2.x = orig_1.x;\\n  ret_2 = (-0.3 + (1.6 * ret_2));\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = ret_2;\\n  ret = tmpvar_6.xyz;\\n }"}')},6743:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1,"decay":0.94,"echo_zoom":1,"echo_orient":1,"wave_mode":2,"additivewave":1,"wave_dots":1,"wave_brighten":0,"invert":1,"wave_a":4.1,"wave_scale":2.85,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":0.01,"warpscale":0.12,"warp":0.08081,"sx":1.05101,"sy":1.07213,"wave_g":0,"wave_b":0,"ob_size":0.015,"ob_r":0.6,"ob_g":1,"ob_b":1,"ob_a":1,"ib_size":0.005,"ib_r":1,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"sides":100,"textured":1,"y":0.9,"rad":0.15493,"tex_zoom":0.77977,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"textured":1,"rad":0.98608,"tex_ang":3.14159,"tex_zoom":0.75668,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ang = ang + (bass*.2) + (time*.4);"},{"baseVals":{"sides":100,"textured":1,"x":0.9,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = sin(time) * .4 + .5;\\n\\n"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"mv_x=64;mv_y=48;\\nnut=0;\\nstp=0;stq=0;\\nrtp=0;rtq=0;\\nwvr=0;\\ndecay=0;\\ndcsp=0","frame_eqs_eel":"decay=1;\\nzoom=-1.00;\\nms=sin(time*0.6)*0.15;\\nmss=mss+ms*0.001;\\nq1=ms;\\n\\n\\n//rot=sin(time)*0.01;\\n\\n//echo_zoom=1 + ( sin(time*0.6)*0.5+0.5 )*3;\\ndx=0;dy=0","pixel_eqs_eel":"it = 0.3*bass_att;\\nradm = rad*500;\\nrot = -0.02*tan((radm+it)*30)/((rad+0.1)*(bass_att*500));\\nvar=2-atan(bass_att*4);\\nmod = atan(ang*var)+(bass_att*2);\\nmod = mod*cos(rad)-cos(ang);\\nzoom = .89 + abs(0.02*mod)+(bass_att*0.01);","warp":" shader_body { \\n  vec2 my_uv_1;\\n  float dy_2;\\n  float dx_3;\\n  vec3 ret_4;\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (texsize.zw * 12.0);\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = (((texture (sampler_blur2, \\n    ((uv + (vec2(1.0, 0.0) * tmpvar_5)) - floor((uv + (vec2(1.0, 0.0) * tmpvar_5))))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    ((uv - (vec2(1.0, 0.0) * tmpvar_5)) - floor((uv - (vec2(1.0, 0.0) * tmpvar_5))))\\n  ).xyz * scale2) + bias2)).y;\\n  tmpvar_6.y = (((texture (sampler_blur2, \\n    ((uv + (vec2(0.0, 1.0) * tmpvar_5)) - floor((uv + (vec2(0.0, 1.0) * tmpvar_5))))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    ((uv - (vec2(0.0, 1.0) * tmpvar_5)) - floor((uv - (vec2(0.0, 1.0) * tmpvar_5))))\\n  ).xyz * scale2) + bias2)).y;\\n  vec2 tmpvar_7;\\n  tmpvar_7 = (uv - (tmpvar_6 * 0.08));\\n  ret_4.y = texture (sampler_fc_main, (tmpvar_7 - floor(tmpvar_7))).y;\\n  ret_4.y = (ret_4.y + ((\\n    (ret_4.y - ((texture (sampler_blur1, (tmpvar_7 - \\n      floor(tmpvar_7)\\n    )).xyz * scale1) + bias1).y)\\n   * 0.125) + 0.02));\\n  dx_3 = (((\\n    ((texture (sampler_blur2, (uv + vec2(0.01, 0.0))).xyz * scale2) + bias2)\\n   - \\n    ((texture (sampler_blur2, (uv - vec2(0.01, 0.0))).xyz * scale2) + bias2)\\n  ).x * 1280.0) * texsize.z);\\n  dy_2 = (((\\n    ((texture (sampler_blur2, (uv + vec2(0.0, 0.01))).xyz * scale2) + bias2)\\n   - \\n    ((texture (sampler_blur2, (uv - vec2(0.0, 0.01))).xyz * scale2) + bias2)\\n  ).x * 1024.0) * texsize.w);\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = dx_3;\\n  tmpvar_8.y = dy_2;\\n  my_uv_1 = (uv + (tmpvar_8 * 0.01));\\n  ret_4.x = texture (sampler_fw_main, my_uv_1).x;\\n  ret_4.x = (ret_4.x + ((\\n    (ret_4.x - ((texture (sampler_blur3, uv).xyz * scale3) + bias3).x)\\n   - 0.02) * 0.2));\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = dy_2;\\n  tmpvar_9.y = -(dx_3);\\n  my_uv_1 = (uv - (tmpvar_9 * 0.04));\\n  ret_4.z = texture (sampler_fw_main, my_uv_1).z;\\n  ret_4.z = (ret_4.z + (ret_4.z - (\\n    (texture (sampler_blur1, uv).xyz * scale1)\\n   + bias1).z));\\n  ret_4.z = (ret_4.z * (0.9 * (\\n    (ret_4.x + (ret_4.y * 0.64))\\n   - 1.0)));\\n  ret_4.z = (ret_4.z + 0.02);\\n  vec4 tmpvar_10;\\n  tmpvar_10.w = 1.0;\\n  tmpvar_10.xyz = ret_4;\\n  ret = tmpvar_10.xyz;\\n }","comp":""}')},5133:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_orient":2,"wave_a":0.001,"warpanimspeed":2.13,"warpscale":2.498,"zoomexp":0.67288,"zoom":1.025,"warp":0.36146,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0.005,"ob_b":1,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_r":0.8,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"thick":1,"smoothing":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"speed = bass_att*0.6;\\nv = sample*10000 + value2*bass*0.1;\\n\\nxs = xs + sin(v*1)*speed*atan(v*1.51);\\nys = ys + sin(v*1)*speed;\\n\\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + xs);\\ny = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs);\\n\\nx = x*0.6;\\ny*0.9 + 0.05 + bass*0.08;\\n\\ny = y*0.8 + 0.1;\\n\\nr = 0.5 + 0.4*sin(time*1.22 + x);\\ng = 0.5 + 0.4*sin(time*1.307 + y);\\nb = 0.5 + 0.4*sin(time*1.959 + x/y);\\n\\nxs = if(above(xs,1000),0 ,xs);\\nys = if(above(ys,1000),0 ,ys);"},{"baseVals":{"enabled":1,"thick":1,"smoothing":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"speed = bass_att*0.6;\\nv = sample*10000 + value2*bass*0.1;\\n\\nxs = xs + sin(v*1)*speed*atan(v*1.51);\\nys = ys + sin(v*1)*speed;\\n\\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + xs);\\ny = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs);\\n\\nx = -x*0.6 + 1;\\ny = y + bass*0.01;\\n//y = y*0.5 + 0.25;\\ny = y*0.8 + 0.1;\\n\\nr = 0.5 + 0.4*sin(time*1.22 + x);\\ng = 0.5 + 0.4*sin(time*1.307 + y);\\nb = 0.5 + 0.4*sin(time*1.959 + x/y);\\n\\nxs = if(above(xs,1000),0 ,xs);\\nys = if(above(ys,1000),0 ,ys);"},{"baseVals":{"enabled":1,"thick":1,"smoothing":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"speed = bass_att*0.6;\\nv = sample*10000 + value2*bass*0.1;\\n\\nxs = xs + sin(v*1)*speed*atan(v*1.51);\\nys = ys + sin(v*1)*speed;\\n\\n\\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + xs);\\ny = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs);\\n\\nx = x*0.6;\\ny = y*0.9 - 0.05 + bass*0.08;\\ny = y*0.8 + 0.1;\\n\\nr = 0.5 + 0.4*sin(time*1.789 + y);\\ng = 0.5 + 0.4*sin(time*1.478 + x);\\nb = 0.5 + 0.4*sin(time*1.125 + y/x);\\n\\nxs = if(above(xs,1000),0 ,xs);\\nys = if(above(ys,1000),0 ,ys);"},{"baseVals":{"enabled":1,"thick":1,"smoothing":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"speed = bass_att*0.6;\\nv = sample*10000 + value2*bass*0.1;\\n\\nxs = xs + sin(v*1)*speed*atan(v*1.51);\\nys = ys + sin(v*1)*speed;\\n\\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + xs);\\ny = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs);\\n\\nx = -x*0.6 + 1;\\ny = y*0.9 - 0.05 + bass*0.08;\\ny = y*0.8 + 0.1;\\n\\nr = 0.5 + 0.4*sin(time*1.789 + y);\\ng = 0.5 + 0.4*sin(time*1.478 + x);\\nb = 0.5 + 0.4*sin(time*1.125 + y/x);\\n\\nxs = if(above(xs,1000),0 ,xs);\\nys = if(above(ys,1000),0 ,ys);"}],"init_eqs_eel":"","frame_eqs_eel":"wave_a = 0;\\n//warp = 0;\\nr = r*0.9 + (bass-treb)*0.5;\\nrot = r*0.02;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 my_uv_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (vec2(1280.0, 1024.0) * texsize.zw);\\n  float tmpvar_4;\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (uv + vec2(0.005, 0.0));\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv - vec2(0.005, 0.0));\\n  tmpvar_4 = (((\\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_6).xyz * scale2)\\n   + bias2)).x * tmpvar_3.x);\\n  float tmpvar_7;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (uv + vec2(0.0, 0.005));\\n  vec2 tmpvar_9;\\n  tmpvar_9 = (uv - vec2(0.0, 0.005));\\n  tmpvar_7 = (((\\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_9).xyz * scale2)\\n   + bias2)).x * tmpvar_3.y);\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = tmpvar_4;\\n  tmpvar_10.y = tmpvar_7;\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = (((\\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_6).xyz * scale2)\\n   + bias2)).x * tmpvar_3.x);\\n  tmpvar_11.y = (((\\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_9).xyz * scale2)\\n   + bias2)).x * tmpvar_3.y);\\n  ret_2.x = texture (sampler_fw_main, ((uv - (tmpvar_10 * 0.01)) + (tmpvar_11 * 0.003))).x;\\n  vec4 tmpvar_12;\\n  tmpvar_12 = texture (sampler_blur3, uv);\\n  ret_2.x = (ret_2.x + ((ret_2.x - \\n    ((tmpvar_12.xyz * scale3) + bias3)\\n  .x) * 0.1));\\n  ret_2.x = (ret_2.x + 0.004);\\n  vec2 tmpvar_13;\\n  tmpvar_13.x = tmpvar_7;\\n  tmpvar_13.y = -(tmpvar_4);\\n  my_uv_1 = (uv + ((tmpvar_13 * 0.05) * (1.2 - \\n    ((tmpvar_12.xyz * scale3) + bias3)\\n  .y)));\\n  ret_2.z = texture (sampler_fw_main, my_uv_1).z;\\n  vec2 x_14;\\n  x_14 = (my_uv_1 - uv);\\n  ret_2.z = (ret_2.z + ((\\n    ((ret_2.z - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).z) * sqrt(dot (x_14, x_14)))\\n   * 180.0) / sqrt(\\n    dot (tmpvar_3, tmpvar_3)\\n  )));\\n  ret_2.z = (ret_2.z * 0.8);\\n  ret_2.z = (ret_2.z + 0.004);\\n  vec2 tmpvar_15;\\n  tmpvar_15.x = -(tmpvar_7);\\n  tmpvar_15.y = tmpvar_4;\\n  my_uv_1 = (tmpvar_15 * 0.045);\\n  vec2 tmpvar_16;\\n  tmpvar_16.x = (((\\n    (texture (sampler_blur2, (uv + vec2(0.01, 0.0))).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, (uv - vec2(0.01, 0.0))).xyz * scale2)\\n   + bias2)).y * tmpvar_3.x);\\n  tmpvar_16.y = (((\\n    (texture (sampler_blur2, (uv + vec2(0.0, 0.01))).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, (uv - vec2(0.0, 0.01))).xyz * scale2)\\n   + bias2)).y * tmpvar_3.y);\\n  my_uv_1 = (my_uv_1 + (uv - (tmpvar_16 * 0.03)));\\n  ret_2.y = texture (sampler_fw_main, my_uv_1).y;\\n  ret_2.y = (ret_2.y + ((\\n    (ret_2.y - ((texture (sampler_blur3, my_uv_1).xyz * scale3) + bias3).y)\\n   * 0.1) + 0.01));\\n  vec4 tmpvar_17;\\n  tmpvar_17.w = 1.0;\\n  tmpvar_17.xyz = ret_2;\\n  ret = tmpvar_17.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = (1.0 - q4);\\n  tmpvar_2.y = q8;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (tmpvar_2 + ((uv - tmpvar_2) * 0.992));\\n  ret_1 = (mix (mix (vec3(0.0, 0.0, 0.2), vec3(0.3, 0.0, 1.0), texture (sampler_fw_main, tmpvar_3).yyy), vec3(1.0, 1.0, 0.0), vec3(max (\\n    (((texture (sampler_blur1, tmpvar_3).xyz * scale1) + bias1).z * 1.5)\\n  , texture (sampler_main, \\n    (tmpvar_2 + ((uv - tmpvar_2) * 0.996))\\n  ).z))) * (1.0 - (\\n    ((texture (sampler_blur1, tmpvar_3).xyz * scale1) + bias1)\\n  .x * 2.0)));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = mix (ret_1, vec3(1.0, 0.1, 0.4), texture (sampler_fw_main, uv).xxx);\\n  ret_1 = tmpvar_4;\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = tmpvar_4;\\n  ret = tmpvar_5.xyz;\\n }"}')},8264:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":0,"gammaadj":1,"decay":1,"echo_zoom":0.999609,"echo_alpha":0.5,"echo_orient":3,"wave_mode":5,"wave_a":100,"wave_scale":0.029878,"wave_smoothing":0.63,"wave_mystery":-0.62,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoomexp":1.008151,"zoom":1.0003,"rot":1,"warp":0.01,"sx":0.999903,"sy":0.999904,"ob_size":0.0499,"ob_r":0.11,"ob_g":0.5,"ob_b":1,"ob_a":1,"ib_size":0.055,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":1.28,"mv_y":48,"mv_l":0.5,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"vol_att=bass_att+treb_Att+mid_att;\\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.96+1.3);\\ntreb_thresh=above(treb_att,treb_thresh)*2+\\n(1-above(treb_att,treb_thresh))*((treb_thresh-1.3)*0.96+1.3);\\nmid_thresh=above(mid_att,mid_thresh)*2+\\n(1-above(mid_mid_att,mid_thresh))*((mid_thresh-1.3)*0.96+1.3);\\nvol_thresh=bass_thresh+treb_thresh+mid_thresh;\\ntreb_effect=max(max(treb,treb_Att),react);\\nbass_effect=max(max(Bass,bass_Att),react);\\nmid_effect=max(max(mid,mid_att),react);\\nvol_effect=bass_effect+treb_effect+mid_effect;\\nnormal=5;\\nmore=1;\\nless=7;\\nreact=less;\\nnew_bass=if(above(Bass,bass_effect),bass&bass_att,bass_effect+bass_thresh);\\nnew_treb=if(above(treb,treb_effect),treb&treb_att,treb_Effect+treb_thresh);\\nnew_mid=if(above(mid,mid_effect),mid&mid_Att,mid_effect+mid_thresh);\\nnew_vol=new_bass+new_treb+new_mid+.04;\\nchange=bnot(1);\\nq1=new_bass;\\nq2=new_treb;\\nq3=new_mid;\\nq4=new_vol;\\nq5=if(above(q2,q3),above(q1,q3),-above(q1,q3));\\nq6=if(above(q1,q3),above(q2,q4),-above(q2,q3));\\nq7=if(above(q5,q6),q5,-q6);;\\nq8=if(above(q6,q7),q6,-q7);;\\n\\n\\n\\nb_red=if(Above(q1,q2),.2*sin(q3),1*sin(q4));\\nb_blue=if(above(b_red,b_green),.4*sin(q2),.7*sin(q1));\\nb_green=if(above(q1,q3),.2*sin(q1),1*sin(q5));\\ni_red=if(above(q1,q2),.6*sin(q1),1*sin(q6));\\ni_blue=b_red-.2;\\ni_green=if(above(b_blue,i_blue),.2,.6);\\nob_r=b_red;\\nob_b=b_blue;\\nob_g=b_green;\\nib_r=i_red;\\nib_b=i_blue;\\nib_g=i_green;\\n\\n\\nwave_r=i_red;\\nwave_b=b_blue;\\nwave_g=i_green;","pixel_eqs_eel":"swirl=rot*Sin(.4*q1)-rot*sin(rad*q3)*rad*Sin(q1-x*y+rad)-x*.05*sin(q4)-y*.05*sin(q6)\\n-\\nrot*sin(above(q2-(rad*2),q3+(rad*2)))+rot*.25*sin(above(q1+rad,q2-(q5*rad*2)));\\n;\\nzoom=if(above(q1,q2),swirl+1.1-.02,zoom-.1);\\nrot=if(above(q1,q2),swirl,-swirl);","warp":"","comp":""}')},6095:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":5,"gammaadj":1,"decay":0.999,"echo_zoom":1.006596,"echo_alpha":0.5,"echo_orient":3,"wave_mode":2,"additivewave":1,"wave_dots":1,"wave_thick":1,"wave_a":4.099998,"wave_scale":1.18647,"wave_smoothing":0.63,"wave_mystery":-0.2,"modwavealphastart":0.71,"modwavealphaend":1.28,"warpscale":1.331,"zoom":0.999514,"warp":0.01,"wave_r":0.3,"wave_g":0.6,"ob_size":0.005,"ob_r":0.4999,"ob_b":1,"ob_a":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0.2,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"vol_att=(treb_att*.25)+(mid_att*.25)+(bass_att*.25+.5*sin(vol))/vol;\\nvol=bass+treb+mid;\\nnew_bass=(bass*.25+.5*sin(Bass_att*.25));\\nnew_treb=(treb*.25+.5*sin(treb_att*.25));\\nnew_mid=(mid*.25+.4*sin(mid_att*.25));\\nbass_c=q1-1*sin(bass_Att&time*.54);\\ntreb_c=q2-1*sin(treb_att&time*.44);\\nmid_c=q3-1*sin(mid_att&time*.24);\\nvol_c=q4-1*sin(vol_att&time*.64);\\nq1=sin(Bass-new_bass&timE*.63);\\nq2=sin(treb-new_treb&time*.43);\\nq3=sin(mid-new_mid&time*.23);\\nq4=sin(vol&time*.65);\\nq5=bass_c;\\nq6=treb_c;\\nq7=mid_c;\\nq8=vol_c;\\nwave_mystery=bass_Att-1;\\nwave_R=wave_r+.2*sin(time*.43);\\nwave_B=wave_B-.2*sin(time*.54);\\nwave_g=wave_g-.4*sin(time*.34);\\nob_a=0;","pixel_eqs_eel":"rad_cycle=rad*rad*x*60*rad*sin(q6);\\n\\nrote=rot+.1*sin(rad_cycle*sin(rad*3.14))+.01*sin(q1)*tan(rad);\\nzoome=zoom+.1*sin(rad*3.14*sin(ang*3.14)*sin(q2)-rote);\\nzoom=zoome+.05*sin(rad*3.14*q2)*sin(q4);\\nrot=rote*rad+ang/2*sin(Q3)*Sin(Ang*3.14*sin(q3)*sin(Q4))/2+.1*sin(ang*3.14)*sin(Q1);","warp":"","comp":""}')},3345:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":2,"gammaadj":1,"decay":0.9,"echo_zoom":7.524,"echo_alpha":0.6,"wave_mode":6,"additivewave":1,"wave_dots":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"brighten":1,"wave_a":2.518,"wave_scale":3.166,"wave_smoothing":0.18,"modwavealphastart":0.55,"modwavealphaend":2,"warpanimspeed":1.53,"warpscale":1.731,"zoomexp":0.99817,"zoom":1.00022,"warp":0.1401,"sx":1.006,"sy":0.9999,"wave_g":0.5,"wave_b":0.5,"mv_x":64,"mv_y":48,"mv_r":0.5,"mv_g":0.6,"mv_b":0.6},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"warp=0;\\nbass_effect = max(max(bass,bass_effect)-1.3,0);\\nmv_a = bass_effect*10;\\nmv_r =if(above(mid,treb),0,1);\\nmv_x = sin(time*3)*4 + 60;\\nmv_y = sin(time*5)*5 + 43;\\nwave_r = sin(time*5)*0.5+0.5;\\nwave_b = cos(time*12)*0.5+0.5;\\nwave_g = cos(time*14)*0.5+0.5;","pixel_eqs_eel":"sx = sx + rad*0.01;\\nsy = sy +if(above(3.14-ang,0),0.1,-0.1);","warp":"","comp":" shader_body { \\n  vec2 uv2_1;\\n  vec3 ret_2;\\n  uv2_1 = (uv + (vec2(1.0, 0.0) * texsize.zw));\\n  float tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(-1.0, 0.0) * texsize.zw));\\n  float tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(0.0, 1.0) * texsize.zw));\\n  float tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(0.0, -1.0) * texsize.zw));\\n  vec3 tmpvar_6;\\n  tmpvar_6.z = 0.14;\\n  tmpvar_6.x = (tmpvar_3 - tmpvar_4);\\n  tmpvar_6.y = (tmpvar_5 - ((\\n    (texture (sampler_main, uv2_1).xyz + (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4))\\n   + \\n    (((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2) * 0.15)\\n  ) + (\\n    ((texture (sampler_blur3, uv2_1).xyz * scale3) + bias3)\\n   * 0.1)).x);\\n  ret_2 = (0.5 + (0.5 * normalize(tmpvar_6)));\\n  vec2 x_7;\\n  x_7 = (ret_2.xy - 0.5);\\n  ret_2 = (ret_2 * clamp ((\\n    sqrt(dot (x_7, x_7))\\n   * 5.0), 0.0, 1.0));\\n  ret_2 = ret_2.xxy;\\n  ret_2 = (ret_2 + 1.15);\\n  ret_2 = (ret_2 * mix (ret_2, (ret_2 * \\n    (((texture (sampler_blur3, uv).xyz * scale3) + bias3) - ((texture (sampler_blur1, uv).xyz * scale1) + bias1))\\n  ), pow (hue_shader.yzx, ret_2)));\\n  ret_2 = (ret_2 * ret_2);\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = ret_2;\\n  ret = tmpvar_8.xyz;\\n }"}')},1723:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":5,"gammaadj":1.700001,"decay":0.99,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":1,"additivewave":1,"wave_thick":1,"wave_brighten":0,"wrap":0,"wave_a":2.256828,"wave_scale":1.199241,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"fshader":1,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.1,"ob_r":0.01,"ib_size":0.26,"mv_x":12.64,"mv_y":12.84,"mv_l":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"decay=0.5;","frame_eqs_eel":"wave_myster=bass_att-1;\\nmv_r=sin(1.39+time*1.55)*bass_att;\\nmv_g=sin(1.59+time*1.75)*bass_att;\\nmv_b=sin(1.79+time*1.95)*bass_att;\\nwave_r=mv_g;\\nwave_b=mv_r;\\nwave_g=mv_b;\\nrot=rot+(bass_att-1)*.2;\\ndecay=if(time%20,.99,.5)","pixel_eqs_eel":"dx=sin(sqrt(sqr(x*15)*15))*.01;\\ndy=sin(sqrt(sqr(y*15)*15))*.01;","warp":"","comp":""}')},2460:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1,"decay":1,"wave_mode":7,"wave_thick":1,"wave_brighten":0,"wave_a":0.001,"wave_scale":0.01,"wave_smoothing":0.9,"wave_mystery":1,"modwavealphastart":0.5,"modwavealphaend":1,"warpanimspeed":0.162,"warpscale":5.582,"zoomexp":0.32104,"zoom":0.9901,"warp":0.11563,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"wave_y":0.6,"ob_size":0,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":1.5,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"textured":1,"y":1.8},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"textured":1,"y":1.8},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"textured":1,"y":1.8},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"x1 = 0;\\ny1 = 0;","frame_eqs_eel":"zoom = 1.0;\\n\\nq1 = .1*(bass-treb);\\n\\nvvb = if(below(vvb,0),0,vvb);\\nvvm = if(below(vvm,0),0,vvm);\\nvvt = if(below(vvt,0),0,vvt);\\nvb = vb*0.85 + (1-vb)*pow(bass,2)*0.001;\\nvvb = vvb*0.95 + (1-vvb)*vb*0.2;\\nvm = vm*0.85 + (1-vm)*pow(mid,2)*0.01;\\nvvm = vvm*0.95 + (1-vvm)*vm*0.2;\\nvt = vt*0.85 + (1-vt)*pow(treb,2)*0.001;\\nvvt = vvt*0.95 + (1-vvt)*vt*0.2;\\n\\nq1 = (vvb-vvt)*vvm;//0.5 + vb - vvb;\\nq2 = vvm;//0.5 + vm - vvm;\\nq3 = vvt;//0.5 + vt - vvt;\\n\\nv=0.2;\\nd = 0;//v*0.2;\\nbb = bb + vvb*v - d;\\nmm = mm + vvm*v - d;\\ntt = tt + vvt*v - d;\\nq4 = bb;\\nq5 = mm;\\nq6 = tt;\\n\\n\\nq4 = if(above(abs(q1),0.02),0.99,1);\\nq9 = 0.5 + 0.5*sin(time*0.14);","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 tmp_1;\\n  vec3 ret_2;\\n  tmp_1.x = (ang * 3.0);\\n  tmp_1.y = rad;\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (texture (sampler_noise_lq, ((\\n    ((texsize.xy * texsize_noise_lq.zw).x * uv)\\n   / 2.0) + q23)) + 1.0).xyz;\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, uv).xyz * scale1) + bias1) - 0.3);\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = (0.3 * tmpvar_4.x);\\n  tmpvar_5.y = tmpvar_4.y;\\n  ret_2 = ((-0.4 * (\\n    ((texture (sampler_blur1, ((uv / 4.0) + (0.4 * tmpvar_5))).xyz * scale1) + bias1)\\n   - \\n    (tmpvar_3 * 0.1)\\n  )) + (texture (sampler_main, (uv + \\n    (tmpvar_4 * 0.01)\\n  .xy)).xyz + (tmpvar_3 * 0.1)));\\n  vec4 tmpvar_6;\\n  tmpvar_6 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * tmp_1.xyy) * (\\n    (q27 * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\\n  if (((ret_2.x > (q21 * q13)) && (ret_2.x <= (q24 * q11)))) {\\n    ret_2.y = (ret_2.y + (tmpvar_6.x * 0.5));\\n  };\\n  if (((ret_2.y > (q22 * q11)) && (ret_2.y <= (q25 * q12)))) {\\n    ret_2.z = (ret_2.z + (tmpvar_6.y * 0.5));\\n  };\\n  if (((ret_2.z > (q23 * q12)) && (ret_2.z <= (q26 * q13)))) {\\n    ret_2.x = (ret_2.x + (tmpvar_6.z * 0.5));\\n  };\\n  float tmpvar_7;\\n  tmpvar_7 = (1.0 - ((0.01 * q28) * (q28 * rad)));\\n  ret_2 = (ret_2 * (0.98 * (tmpvar_7 * tmpvar_7)));\\n  ret_2 = (ret_2 - 0.04);\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = ret_2;\\n  ret = tmpvar_8.xyz;\\n }","comp":""}')},8465:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":0,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_orient":1,"wave_mode":1,"wave_thick":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":1,"wave_scale":0.535234,"wave_smoothing":0.5,"wave_mystery":-0.5,"modwavealphastart":0.5,"modwavealphaend":1,"fshader":1,"dx":0.00001,"dy":0.00001,"warp":0.01,"ob_size":0.005,"ob_r":0.4,"ob_g":0.3,"ob_a":1,"ib_r":1,"ib_g":0.6,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":2,"mv_dy":-0.1,"mv_l":5,"mv_r":0.2,"mv_a":0.5},"shapes":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"warp = 0;\\nwave_r = 0.5 + 0.3*sin(time*0.894);\\nwave_g = 0.53 + 0.33*sin(time*1.14);\\nwave_b = 0.4 + 0.1*(1-bass);\\nthresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\\ntest = equal(thresh,2);\\ndx_r = test*0.002*sin(5*time)+(1-test)*dx_r;\\ndy_r = test*0.002*sin(6*time)+(1-test)*dy_r;\\nzoom = zoom -0.01*thresh;\\ndx = 1.1* dx_r;\\ndy = 1.1* dy_r;\\ndx = dx + if (above(bass,1.3), 21*dx_r, 0);\\nmv_x = if(test,2,64);\\nmv_y = if(test,64,2);\\nmv_dx = if(test,-0.1,0);\\nmv_dy = if(test,0,-0.1);\\nmv_a = if(test,1,0.5);\\nxpos = xpos + 0.05*(80*dx_r - xpos);\\nypos = ypos + 0.05*(80*dy_r - ypos);\\nwave_x = 0.5 - xpos + 0.1*sin(2*time);\\nwave_y = 0.5 - ypos + 0.1*cos(2*time);\\nq1 = wave_x;\\nq2 = 1 - wave_y;","pixel_eqs_eel":"newx = x - q1;\\nnewy = y - q2;\\nnewrad = sqrt((newx)*(newx)+0.5625*(newy)*(newy))*2;\\nnewzoom = pow(1.03, pow(0.01+sin(newrad*newrad), newrad*2-1));\\ndx = min(5*newrad,1)*dx + max(-newrad*5+1,0)*((newx)*newzoom - newx);\\ndy = min(5*newrad,1)*dy + max(-newrad*5+1,0)*((newy)*newzoom - newy);","warp":"","comp":""}')},7602:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"decay":1,"echo_zoom":1,"wave_mode":1,"wave_brighten":0,"wave_a":1,"wave_scale":0.504,"wave_mystery":0.24,"warpanimspeed":9.861,"warpscale":16.217,"zoomexp":1.50374,"zoom":1.0201,"warp":0.81954,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.005,"ob_a":0.2,"ib_size":0.005,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":0.06,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"dx=-0.0005;\\ndy=-0.0005;\\nvol = (bass+mid+att)/6;\\nxamptarg = if(equal(frame%15,0),min(0.5*vol*bass_att,0.5),xamptarg);\\nxamp = xamp + 0.5*(xamptarg-xamp);\\nxdir = if(above(abs(xpos),xamp),-sign(xpos),if(below(abs(xspeed),0.1),2*above(xpos,0)-1,xdir));\\nxaccel = xdir*xamp - xpos - xspeed*0.055*below(abs(xpos),xamp);\\nxspeed = xspeed + xdir*xamp - xpos - xspeed*0.055*below(abs(xpos),xamp);\\nxpos = xpos + 0.001*xspeed;\\nwave_x = xpos + 0.5;\\nyamptarg = if(equal(frame%15,0),min(0.3*vol*treb_att,0.5),yamptarg);\\nyamp = yamp + 0.5*(yamptarg-yamp);\\nydir = if(above(abs(ypos),yamp),-sign(ypos),if(below(abs(yspeed),0.1),2*above(ypos,0)-1,ydir));\\nyaccel = ydir*yamp - ypos - yspeed*0.055*below(abs(ypos),yamp);\\nyspeed = yspeed + ydir*yamp - ypos - yspeed*0.055*below(abs(ypos),yamp);\\nypos = ypos + 0.001*yspeed;\\nwave_y = ypos + 0.5;\\nwave_r = wave_r + 0.350*( 0.60*sin(0.980*time) + 0.40*sin(1.047*time) );\\nwave_g = wave_g + 0.350*( 0.60*sin(0.835*time) + 0.40*sin(1.081*time) );\\nwave_b = wave_b + 0.350*( 0.60*sin(0.814*time) + 0.40*sin(1.011*time) );\\nrot = rot + 0.030*( 0.60*sin(0.381*time) + 0.40*sin(0.479*time) );\\ncx = cx + 0.410*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\ncy = cy + 0.410*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\\nwave_mystery = wave_mystery + 0.15*( 0.60*sin(0.629*time) + 0.40*sin(1.826*time) );\\nwarp = warp*vol;\\nzoom = zoom - 0.02*zoom*bass_att;\\nzoom_exp = 1.5*( 0.60*sin(0.381*time) + 0.40*sin(0.479*time) );\\nob_a = 1 - 2*vol;\\nmonitor = zoom_exp;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 z_1;\\n  vec3 tmpvar_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (0.1 * texsize.zw);\\n  tmpvar_2 = (0.25 * ((\\n    (texture (sampler_main, (uv + tmpvar_3)).xyz + texture (sampler_main, (uv + (tmpvar_3 * vec2(-1.0, 1.0)))).xyz)\\n   + texture (sampler_main, \\n    (uv + (tmpvar_3 * vec2(1.0, -1.0)))\\n  ).xyz) + texture (sampler_main, (uv - tmpvar_3)).xyz));\\n  float tmpvar_4;\\n  tmpvar_4 = ((tmpvar_2.x * tmpvar_2.y) * tmpvar_2.y);\\n  z_1.x = (tmpvar_2.x + ((\\n    -(tmpvar_4)\\n   + \\n    (0.035 * (1.0 - tmpvar_2.x))\\n  ) * 4.0));\\n  z_1.y = (tmpvar_2.y + ((tmpvar_4 - \\n    (0.095 * tmpvar_2.y)\\n  ) * 4.0));\\n  z_1.z = tmpvar_2.z;\\n  z_1.x = (z_1.x + (0.4 * (\\n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\\n   - texture (sampler_main, uv).xyz)).x);\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = (z_1 + (0.05 * (\\n    (texture (sampler_noise_lq, (((uv * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)).xyz * 2.0)\\n   - 1.0)));\\n  ret = tmpvar_5.xyz;\\n }","comp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = texture (sampler_main, uv).xyz;\\n  ret = tmpvar_1.xyz;\\n }"}')},2155:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":0,"decay":1,"echo_zoom":1,"wave_mode":1,"wave_brighten":0,"wave_a":1,"wave_scale":0.504218,"wave_mystery":0.24,"warpanimspeed":9.8608,"warpscale":16.2174,"zoomexp":1.503744,"zoom":1.0201,"warp":0.819544,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.005,"ob_a":0.2,"ib_size":0.005,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":0.06,"mv_a":0},"shapes":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"dx=-0.0005;\\ndy=-0.0005;\\nvol = (bass+mid+att)/6;\\nxamptarg = if(equal(frame%15,0),min(0.5*vol*bass_att,0.5),xamptarg);\\nxamp = xamp + 0.5*(xamptarg-xamp);\\nxdir = if(above(abs(xpos),xamp),-sign(xpos),if(below(abs(xspeed),0.1),2*above(xpos,0)-1,xdir));\\nxaccel = xdir*xamp - xpos - xspeed*0.055*below(abs(xpos),xamp);\\nxspeed = xspeed + xdir*xamp - xpos - xspeed*0.055*below(abs(xpos),xamp);\\nxpos = xpos + 0.001*xspeed;\\nwave_x = xpos + 0.5;\\nyamptarg = if(equal(frame%15,0),min(0.3*vol*treb_att,0.5),yamptarg);\\nyamp = yamp + 0.5*(yamptarg-yamp);\\nydir = if(above(abs(ypos),yamp),-sign(ypos),if(below(abs(yspeed),0.1),2*above(ypos,0)-1,ydir));\\nyaccel = ydir*yamp - ypos - yspeed*0.055*below(abs(ypos),yamp);\\nyspeed = yspeed + ydir*yamp - ypos - yspeed*0.055*below(abs(ypos),yamp);\\nypos = ypos + 0.001*yspeed;\\nwave_y = ypos + 0.5;\\nwave_r = wave_r + 0.350*( 0.60*sin(0.980*time) + 0.40*sin(1.047*time) );\\nwave_g = wave_g + 0.350*( 0.60*sin(0.835*time) + 0.40*sin(1.081*time) );\\nwave_b = wave_b + 0.350*( 0.60*sin(0.814*time) + 0.40*sin(1.011*time) );\\nrot = rot + 0.030*( 0.60*sin(0.381*time) + 0.40*sin(0.479*time) );\\ncx = cx + 0.410*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\ncy = cy + 0.410*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\\nwave_mystery = wave_mystery + 0.15*( 0.60*sin(0.629*time) + 0.40*sin(1.826*time) );\\nwarp = warp*vol;\\nzoom = zoom - 0.02*zoom*bass_att;\\nzoom_exp = 1.5*( 0.60*sin(0.381*time) + 0.40*sin(0.479*time) );\\nob_a = 1 - 2*vol;\\nmonitor = zoom_exp;","pixel_eqs_eel":"","warp":"","comp":""}')},9309:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":0,"decay":1,"echo_zoom":1,"wave_brighten":0,"wave_a":1,"wave_scale":0.999996,"wave_mystery":-0.4999,"zoom":0.9999,"rot":0.1,"wave_r":0.8,"wave_g":0.2,"wave_b":0.2,"ob_a":0.1,"ib_size":0.5,"ib_r":0,"ib_g":0,"ib_b":0,"mv_a":0},"shapes":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"warp=0;\\nwave_r = wave_r + 0.45*(0.5*sin(time*0.701)+ 0.3*cos(time*0.438));\\nwave_b = wave_b - 0.4*(0.5*sin(time*4.782)+0.5*cos(time*0.522));\\nwave_g = wave_g + 0.4*sin(time*1.731);\\nob_r = above(bass_att,bass)*(bass_att-bass)*4;\\nvolume = 0.3*(bass+mid+att);\\nbeatrate = equal(beatrate,0) + (1-equal(beatrate,0))*(below(volume,0.01) + (1-below(volume,0.01))*beatrate);\\nlastbeat = lastbeat + equal(lastbeat,0)*time;\\nmeanbass_att = 0.1*(meanbass_att*9 + bass_att);\\npeakbass_att = max(bass_att,peakbass_att);\\nbeat = above(volume,0.8)*below(peakbass_att - bass_att, 0.05*peakbass_att)*above(time - lastbeat, 0.1 + 0.5*(beatrate - 0.1));\\nbeatrate = max(if(beat,if(below(time-lastbeat,2*beatrate),0.1*(beatrate*9 + time - lastbeat),beatrate),beatrate),0.1);\\npeakbass_att = beat*bass_att + (1-beat)*peakbass_att*(above(time - lastbeat, 2*beatrate)*0.95 + (1-above(time - lastbeat, 2*beatrate))*0.995);\\nlastbeat = beat*time + (1-beat)*lastbeat;\\npeakbass_att = max(peakbass_att,1.1*meanbass_att);\\nbeatcounter = beatcounter + beat;\\nmode = if(beat*equal(beatcounter%2,0),1-mode,mode);\\nmode2 = if(beat,(mode2 + rand(7) + 1)%8,mode2);\\nmode3 = if(beat,(mode3 + rand(7) + 1)%8,mode3);\\nq1 = 2*mode-1;\\nq2 = mode2 + 2;\\nq3 = 1/q2;\\nq4 = mode3 + 2;\\nq5 = 1/q4;\\nwave_x = (rand(q2)+0.5)*q3;\\nwave_y = (rand(q4)+0.5)*q5;\\ndecay = decay - 0.1*equal(frame%50,0);","pixel_eqs_eel":"cx = ((0&(x*q2-0.5))+0.5)*q3;\\ncy = ((0&(y*q4-0.5))+0.5)*q5;\\nrot = rot*pow(-1,(0&(x*q2-0.5)) + (0&(y*q4-0.5)))*q1;","warp":"","comp":""}')},7653:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.94,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":5,"wave_brighten":0,"wave_a":0.032,"wave_scale":4.778,"wave_smoothing":0,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":30.965,"warpscale":2.572,"zoom":1.00901,"warp":0.00054,"wave_r":0,"wave_g":0,"wave_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"samples":16,"thick":1,"additive":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = 0.85 + 0.25*sin(0.437*time+1);\\nwave_g = 0.85 + 0.25*sin(0.544*time+2);\\nwave_b = 0.85 + 0.25*sin(0.751*time+3);\\nrot = rot + 0.010*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );\\ncx = cx + 0.210*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\ncy = cy + 0.210*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\\ndx = dx + 0.003*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );\\ndy = dy + 0.003*( 0.60*sin(0.284*time) + 0.40*sin(0.247*time) );\\ndecay = decay - 0.01*equal(frame%6,0);\\ndx = dx + dx_residual;\\ndy = dy + dy_residual;\\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.96+1.3);\\ndx_residual = equal(bass_thresh,2.13)*0.016*sin(time*7) + (1-equal(bass_thresh,2.13))*dx_residual;\\ndy_residual = equal(bass_thresh,2.13)*0.012*sin(time*9) + (1-equal(bass_thresh,2.13))*dy_residual;\\nwave_x = wave_x - dx_residual*7;\\nwave_y = wave_y - dy_residual*7;\\nwave_mystery = time*0.03;\\n\\n//zoom = zoom + 0.005*( 0.60*sin(0.1934*time+3) + 0.40*sin(0.307*time+9) );\\n//zoom = zoom + max(0,bass_att-1.1)*0.2;\\n//warp = warp + max(0,treb_att-1.1)*1.0;\\n\\n// this is a great way to respond to beats:\\n// once you get one, let it decay at a constant rate!!\\nrg = max(rg*0.77, 0.02 + 0.5*min(2,max(0,mid_att-1)*1.3));\\nq9 = rg;\\n\\nzoom = zoom + q9*0.1;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (texture (sampler_pw_main, uv).xyz - 0.004);\\n  ret = tmpvar_1.xyz;\\n }","comp":" shader_body { \\n  vec2 uv2_1;\\n  vec3 ret_2;\\n  uv2_1 = (uv + (vec2(1.0, 0.0) * texsize.zw));\\n  float tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(-1.0, 0.0) * texsize.zw));\\n  float tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(0.0, 1.0) * texsize.zw));\\n  float tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(0.0, -1.0) * texsize.zw));\\n  vec3 tmpvar_6;\\n  tmpvar_6.z = 0.14;\\n  tmpvar_6.x = (tmpvar_3 - tmpvar_4);\\n  tmpvar_6.y = (tmpvar_5 - ((\\n    (texture (sampler_main, uv2_1).xyz + (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4))\\n   + \\n    (((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2) * 0.15)\\n  ) + (\\n    ((texture (sampler_blur3, uv2_1).xyz * scale3) + bias3)\\n   * 0.1)).x);\\n  ret_2 = (0.5 + (0.5 * normalize(tmpvar_6)));\\n  vec2 x_7;\\n  x_7 = (ret_2.xy - 0.5);\\n  ret_2 = (ret_2 * clamp ((\\n    sqrt(dot (x_7, x_7))\\n   * 5.0), 0.0, 1.0));\\n  ret_2 = ret_2.xxy;\\n  ret_2 = (ret_2 + 1.15);\\n  ret_2 = (ret_2 * mix (ret_2, (ret_2 * \\n    ((((texture (sampler_blur3, uv).xyz * scale3) + bias3) * 0.3) - ((texture (sampler_blur1, uv).xyz * scale1) + bias1))\\n  ), pow (hue_shader.xzy, ret_2)));\\n  ret_2 = (ret_2 * ret_2);\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = ret_2;\\n  ret = tmpvar_8.xyz;\\n }"}')},6913:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":3,"gammaadj":1.9,"echo_zoom":1.169,"wave_thick":1,"wave_brighten":0,"wave_a":4.1,"wave_scale":0.972,"wave_smoothing":0.9,"wave_mystery":0.094,"modwavealphastart":1,"modwavealphaend":1.3,"warpanimspeed":0.691,"warpscale":2.28,"warp":67.16532,"sx":1.10462,"wave_x":1,"ob_size":0.005,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":40,"thickoutline":1,"textured":1,"rad":0.59957,"tex_zoom":1.3345,"g":1,"b":1,"r2":1,"b2":1,"border_b":0,"border_a":0},"init_eqs_eel":"bob = 1.5;\\nro = 0;\\nred = rand(20);","frame_eqs_eel":"vol = 1 + 0.2*((bass_att+treb_att+mid_att)/3);\\nbob = bob*above(bob,0.01) - 0.01 + 1*(1 - above(bob,0.01));\\nbob = 0.4 + 0.4*sin(time*0.8);\\nbob = bob*vol;\\nrad = bob;\\nborder_1 = 0.4;\\nsides = 30;\\nro = ro + 0.02;\\nang = ro;\\nrad = 0.6;\\n\\nsp = red*0.025;\\nspi = 0.5 - sp;\\ntm = time*0.1;\\nborder_r = 0.5 + sp*sin(tm*0.6) + spi*cos(tm*1.46);\\nborder_g = 0.5 + sp*sin(tm*1.294) + spi*cos(tm*0.87);\\nborder_b = 0.5 + sp*sin(tm*1.418) + spi*cos(tm*0.76);"},{"baseVals":{"enabled":1,"sides":40,"additive":1,"g":1,"b":1,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.5 + 0.5*(sin(time*1.1)*0.3 + 0.7*sin(time*0.5));\\nx = 0.5 + 0.225*sin(time);\\ny = 0.5 + 0.3*cos(time);\\n\\nrad = rad*mid_att;\\nr = 0.5 + 0.5*sin(frame*0.5);\\nb = 0.5 + 0.5*sin(frame*0.5 + 2.094);\\ng = 0.5 + 0.5*sin(frame*0.5 + 4.188);\\n"},{"baseVals":{"enabled":1,"sides":40,"additive":1,"g":1,"b":1,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.5 + 0.5*(sin(time*1.1)*0.3 + 0.7*sin(time*0.5));\\nx = 0.5 + 0.225*sin(time + 2.09);\\ny = 0.5 + 0.3*cos(time + 2.09);\\n\\nrad = rad*bass_att;\\nr = 0.5 + 0.5*sin(frame*0.5);\\nb = 0.5 + 0.5*sin(frame*0.5 + 2.094);\\ng = 0.5 + 0.5*sin(frame*0.5 + 4.188);\\n"},{"baseVals":{"enabled":1,"sides":40,"additive":1,"g":1,"b":1,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.5 + 0.5*(sin(time*1.1)*0.3 + 0.7*sin(time*0.5));\\nx = 0.5 + 0.225*sin(time + 4.19);\\ny = 0.5 + 0.3*cos(time + 4.19);\\n\\nrad = rad*treb_att;\\nr = 0.5 + 0.5*sin(frame*0.5);\\nb = 0.5 + 0.5*sin(frame*0.5 + 2.094);\\ng = 0.5 + 0.5*sin(frame*0.5 + 4.188);\\n"}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"mv_x=64;mv_y=48;\\nnut=0;\\nstp=0;stq=0;\\nrtp=0;rtq=0;\\nwvr=0;\\ndecay=0;\\ndcsp=0;\\nwarp=0","frame_eqs_eel":"//krash\'s beat detection code\\nvolume = 0.3*(bass+mid+att);\\nbeatrate = equal(beatrate,0) + (1-equal(beatrate,0))*(below(volume,0.01) + (1-below(volume,0.01))*beatrate);\\nlastbeat = lastbeat + equal(lastbeat,0)*time;\\nmeanbass_att = 0.1*(meanbass_att*9 + bass_att);\\npeakbass_att = max(bass_att,peakbass_att);\\nbeatrate = max(if(beat,if(below(time-lastbeat,2*beatrate),0.1*(beatrate*9 + time - lastbeat),beatrate),beatrate),0.1);\\npeakbass_att = beat*bass_att + (1-beat)*peakbass_att*(above(time - lastbeat, 2*beatrate)*0.95 + (1-above(time - lastbeat, 2*beatrate))*0.995);\\nlastbeat = beat*time + (1-beat)*lastbeat;\\npeakbass_att = max(peakbass_att,1.1*meanbass_att);\\nbeat = above(volume,0.8)*below(peakbass_att - bass_att, 0.05*peakbass_att)*above(time - lastbeat, 0.1 + 0.5*(beatrate - 0.1));\\nbeatcounter = beatcounter + beat;\\nmode = if(beat*equal(beatcounter%2,0),1-mode,mode);\\nflip = 2*mode-1;\\nmonitor=flip;\\nq8=flip;\\n\\n\\ndecay=1;\\n//zoom=1.002;\\n\\nvol=(bass_att+mid_att+treb_att)*0.25;\\nvol=vol*vol;\\nmtime=mtime+vol*0.05*flip;\\n\\nq1=mtime*0.4;\\n\\n\\nmusictime=musictime+(mid*mid*mid*mid)*0.01*flip;\\n\\nxpos=sin(musictime*0.6)*0.3;\\nypos=sin(musictime*0.4)*0.3;\\nq4=xpos;\\nq5=ypos;\\n\\nwarp=0.0","pixel_eqs_eel":"cx=0.5+q4;\\ncy=0.5-q5;\\nrd=sqrt( sqr( (x-0.5-q4)*2) + sqr( (y-0.5+q5)*1.5 ) );\\nzm=(1-(rd/5));\\nsx=zm;\\nsy=zm;\\n//rot=above(rd,0.7)*(rd-0.7)*sin(time*0.3);\\n\\n\\n\\ntm=time+(sin(time)*rad);\\nvar=tan(tm+time)*treb;\\n\\nzoom=.91+(rd/100)+0.1;\\n//rot=((rad/100)+(var/400))*sin(time);","warp":" shader_body { \\n  vec3 z_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = mix (uv_orig, uv, vec2(0.2, 0.2));\\n  vec4 tmpvar_4;\\n  tmpvar_4 = texture (sampler_main, tmpvar_3);\\n  float tmpvar_5;\\n  tmpvar_5 = ((tmpvar_4.x * tmpvar_4.y) * tmpvar_4.y);\\n  z_1.x = (tmpvar_4.x + ((\\n    (-(tmpvar_5) + (0.035 * (1.0 - tmpvar_4.x)))\\n   + 0.0007) * 9.0));\\n  z_1.y = (tmpvar_4.y + ((tmpvar_5 - \\n    (0.095 * tmpvar_4.y)\\n  ) * 9.0));\\n  z_1.z = (tmpvar_4.z - 0.02);\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (0.3 * texsize.zw);\\n  z_1.x = (z_1.x + (1.8 * (\\n    (0.25 * (((texture (sampler_main, \\n      (tmpvar_3 + tmpvar_6)\\n    ).xyz + texture (sampler_main, \\n      (tmpvar_3 + (tmpvar_6 * vec2(-1.0, 1.0)))\\n    ).xyz) + texture (sampler_main, (tmpvar_3 + \\n      (tmpvar_6 * vec2(1.0, -1.0))\\n    )).xyz) + texture (sampler_main, (tmpvar_3 - tmpvar_6)).xyz))\\n   - texture (sampler_main, tmpvar_3).xyz)).x);\\n  ret_2.yz = z_1.yz;\\n  ret_2.x = (z_1.x + (0.09 * (\\n    (texture (sampler_noise_lq, (((uv * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)).xyz * 2.0)\\n   - 1.0)).x);\\n  vec4 tmpvar_7;\\n  tmpvar_7.w = 1.0;\\n  tmpvar_7.xyz = ret_2;\\n  ret = tmpvar_7.xyz;\\n }","comp":" shader_body { \\n  vec2 uv_1;\\n  vec3 ret_2;\\n  uv_1 = (0.05 + (0.9 * uv));\\n  ret_2 = (abs((\\n    ((texture (sampler_blur2, uv_1).xyz * scale2) + bias2)\\n   - texture (sampler_main, uv_1).xyz)) * 6.0);\\n  ret_2 = (ret_2 * 0.65);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_2;\\n  ret = tmpvar_3.xyz;\\n }"}')},320:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1.78,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_dots":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":100,"wave_scale":28.599,"wave_smoothing":0.5,"wave_mystery":-1,"modwavealphastart":0.4,"modwavealphaend":1,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"ob_size":0,"ob_b":0.2,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_a":1,"mv_l":1.5,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0,"b1x":0.7,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"rad":0.40031,"r":0.5,"g":0.5,"r2":0.5,"g2":0,"border_b":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"sounds=(bass+treb+mid)/3;\\n\\nrad=rad*sounds*0.6;\\n\\nr=r+sin(bass)*g;\\ng=g+sin(mid)*g;\\n\\n\\nx=x+0.207*cos(time*bass*0.1);\\ny=y+0.207*sin(time*bass*0.1);"},{"baseVals":{"enabled":1,"sides":100,"rad":0.13465,"r2":1,"a2":0.3,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"\\ng2=g2+0.09*sin((treb+mid)*1.23);\\ng=g+0.09*cos((bass+mid)*1.37);\\n\\nsounds=(bass+mid+treb)/3;\\n\\nrad=rad*(treb+mid)/3;\\n\\nx=x+0.300*sin(time*bass);\\ny=y+0.317*cos(time*bass);"},{"baseVals":{"enabled":1,"sides":100,"rad":0.20047,"g":1,"b":1,"r2":0.5,"g2":0.5,"b2":1,"border_b":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"sounds=(bass+treb+mid)/3;\\natt=(bass_att+treb_att+mid_att)/3;\\natt=(bass_att+treb_att+mid_att)/3;\\nr2=r2+(0.25*sin(time*6.28))-bass;\\ng2=g2+(0.25*sin(time*6.28))-bass;\\n\\nrad=rad;\\nx=x+0.217*cos(time*2.3)+sounds*0.1;\\ny=y+0.217*sin((time*3.5)+(sounds*0.3));"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"sep":256,"scaling":20.35074,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"r=r+0.5*sin(treb*1.13);\\ng=g+0.5*sin(bass*1.33);\\nb=b+0.5*sin(mid*1.23);","point_eqs_eel":""},{"baseVals":{"sep":256,"usedots":1,"scaling":100,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"dec_med = pow (0.8, 30/fps);\\ndec_slow = pow (0.9, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %16;\\nindex2 = (index2 + is_beat*bnot(index))%5;\\nmonitor = index2;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass + mid + treb;\\n\\nsb = sb*dec_med + q21*(1-dec_med);\\nq29 = sb;\\n\\nk1 =  is_beat*bnot(index)*bnot(index2);\\np1 =  (index2-2);\\n\\np2 = dec_med * p2+ (1-dec_med)*p1;\\np3 = dec_med * p3+ (1-dec_med)*p2;\\nq5 = cos(p3*3.14/2);\\n\\nrott =  rott +  .003*30/fps*p3;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\nmovx = movx + .002*30/fps;\\nq28 = movx;\\n\\nq15 = (1+sin(time/23))*.15;\\nq29 = 4*(.5+sin(time/17));\\nq30 = 5/(1.2+sin(time/50)); \\nq31 = sin(time/38)/3;\\nq32 = 2+sin(time/18);\\n\\nwarp = .06;\\nzoom = .998;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 uv_1;\\n  vec2 uv6_2;\\n  uv_1 = (uv + (vec2(0.0, 0.01) * dot (\\n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\\n  , vec3(0.32, 0.49, 0.29))));\\n  uv6_2 = (0.4 * sin((\\n    (uv_1 * 8.0)\\n   + \\n    (rand_frame * 6.0)\\n  .xy)));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = (((\\n    (texture (sampler_main, uv_1).xyz - (((texture (sampler_blur2, \\n      fract(uv_1)\\n    ).xyz * scale2) + bias2) * 0.03))\\n   + \\n    (0.1 * (vec3((0.1 / sqrt(\\n      dot (uv6_2, uv6_2)\\n    ))) * ((1.0 + roam_cos) / 2.0).xyz))\\n  ) * 0.99) - 0.02);\\n  ret = tmpvar_3.xyz;\\n }","comp":"vec3 xlat_mutableblur;\\nvec3 xlat_mutableret1;\\nvec2 xlat_mutableuv2;\\nvec2 xlat_mutableuv3;\\n shader_body { \\n  vec2 uv_1;\\n  float inten_2;\\n  float dist_3;\\n  float ang2_4;\\n  uv_1 = (uv - 0.5);\\n  uv_1 = (uv_1 * aspect.xy);\\n  float tmpvar_5;\\n  tmpvar_5 = cos(q30);\\n  float tmpvar_6;\\n  tmpvar_6 = sin(q30);\\n  xlat_mutableuv2.x = ((uv_1.x * tmpvar_5) - (uv_1.y * tmpvar_6));\\n  xlat_mutableuv2.y = ((uv_1.x * tmpvar_6) + (uv_1.y * tmpvar_5));\\n  xlat_mutableuv2 = (xlat_mutableuv2 * aspect.yx);\\n  dist_3 = (1.0 - fract(q29));\\n  inten_2 = ((4.0 * dist_3) * (1.0 - (dist_3 * dist_3)));\\n  xlat_mutableuv3 = (((3.0 * xlat_mutableuv2) * dist_3) + 0.5);\\n  xlat_mutableblur = (((texture (sampler_blur1, \\n    fract(xlat_mutableuv3)\\n  ).xyz * scale1) + bias1) * vec3(0.8, 0.9, 1.0));\\n  xlat_mutableret1 = max (vec3(0.0, 0.0, 0.0), ((texture (sampler_main, xlat_mutableuv3).xyz + xlat_mutableblur) * inten_2));\\n  ang2_4 = (2.093333 + q30);\\n  float tmpvar_7;\\n  tmpvar_7 = cos(ang2_4);\\n  float tmpvar_8;\\n  tmpvar_8 = sin(ang2_4);\\n  xlat_mutableuv2.x = ((uv_1.x * tmpvar_7) - (uv_1.y * tmpvar_8));\\n  xlat_mutableuv2.y = ((uv_1.x * tmpvar_8) + (uv_1.y * tmpvar_7));\\n  xlat_mutableuv2 = (xlat_mutableuv2 * aspect.yx);\\n  dist_3 = (1.0 - fract((0.3333333 + q29)));\\n  inten_2 = ((4.0 * dist_3) * (1.0 - (dist_3 * dist_3)));\\n  xlat_mutableuv3 = (((3.0 * xlat_mutableuv2) * dist_3) + 0.5);\\n  xlat_mutableblur = (((texture (sampler_blur1, \\n    fract(xlat_mutableuv3)\\n  ).xyz * scale1) + bias1) * vec3(0.8, 0.9, 1.0));\\n  xlat_mutableret1 = max (xlat_mutableret1, ((texture (sampler_main, xlat_mutableuv3).xyz + xlat_mutableblur) * inten_2));\\n  ang2_4 = (4.186667 + q30);\\n  float tmpvar_9;\\n  tmpvar_9 = cos(ang2_4);\\n  float tmpvar_10;\\n  tmpvar_10 = sin(ang2_4);\\n  xlat_mutableuv2.x = ((uv_1.x * tmpvar_9) - (uv_1.y * tmpvar_10));\\n  xlat_mutableuv2.y = ((uv_1.x * tmpvar_10) + (uv_1.y * tmpvar_9));\\n  xlat_mutableuv2 = (xlat_mutableuv2 * aspect.yx);\\n  dist_3 = (1.0 - fract((0.6666667 + q29)));\\n  inten_2 = ((4.0 * dist_3) * (1.0 - (dist_3 * dist_3)));\\n  xlat_mutableuv3 = (((3.0 * xlat_mutableuv2) * dist_3) + 0.5);\\n  xlat_mutableblur = (((texture (sampler_blur1, \\n    fract(xlat_mutableuv3)\\n  ).xyz * scale1) + bias1) * vec3(0.8, 0.9, 1.0));\\n  xlat_mutableret1 = max (xlat_mutableret1, ((texture (sampler_main, xlat_mutableuv3).xyz + xlat_mutableblur) * inten_2));\\n  ang2_4 = (6.28 + q30);\\n  float tmpvar_11;\\n  tmpvar_11 = cos(ang2_4);\\n  float tmpvar_12;\\n  tmpvar_12 = sin(ang2_4);\\n  xlat_mutableuv2.x = ((uv_1.x * tmpvar_11) - (uv_1.y * tmpvar_12));\\n  xlat_mutableuv2.y = ((uv_1.x * tmpvar_12) + (uv_1.y * tmpvar_11));\\n  xlat_mutableuv2 = (xlat_mutableuv2 * aspect.yx);\\n  dist_3 = (1.0 - fract((1.0 + q29)));\\n  inten_2 = ((4.0 * dist_3) * (1.0 - (dist_3 * dist_3)));\\n  xlat_mutableuv3 = (((3.0 * xlat_mutableuv2) * dist_3) + 0.5);\\n  xlat_mutableblur = (((texture (sampler_blur1, \\n    fract(xlat_mutableuv3)\\n  ).xyz * scale1) + bias1) * vec3(0.8, 0.9, 1.0));\\n  xlat_mutableret1 = max (xlat_mutableret1, ((texture (sampler_main, xlat_mutableuv3).xyz + xlat_mutableblur) * inten_2));\\n  vec4 tmpvar_13;\\n  tmpvar_13.w = 1.0;\\n  tmpvar_13.xyz = (xlat_mutableret1 - 0.1);\\n  ret = tmpvar_13.xyz;\\n }"}')},6104:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":4,"gammaadj":1,"decay":0.955,"echo_zoom":0.997,"echo_alpha":0.5,"echo_orient":1,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":30.965,"warpscale":2.572,"fshader":1,"zoom":1.00901,"warp":0.00054,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"mv_x":64,"mv_y":20.16,"mv_l":0.4,"mv_g":0.4,"mv_a":0},"shapes":[{"baseVals":{"textured":1,"rad":1.20321,"tex_zoom":1.22019,"a":0,"a2":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1},"init_eqs_eel":"ma=.5;\\nmy=.5;\\nmd=0; //direction 0 1 2 3","frame_eqs_eel":"","point_eqs_eel":"oldmd=md;\\nmd=(md+rand(4))%4;\\nmd=if(equal(md,oldmd),(md+1)%4,md);\\n\\nmx=mx+(equal(md,0)*.002*bass);\\nmx=mx-(equal(md,1)*.002*bass);\\nmy=my+(equal(md,2)*.002*treb);\\nmy=my-(equal(md,3)*.002*treb);\\n\\nmx=if(above(mx,.9),.5,mx);\\nmx=if(below(mx,.1),.5,mx);\\nmy=if(above(my,.9),.5,my);\\nmy=if(below(my,.1),.5,my);\\n\\nx=mx;\\ny=my;\\na=bass*.1;\\n\\nr=bass*.5;"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1},"init_eqs_eel":"mx=.5;\\nmy=.5;\\nmd=1;","frame_eqs_eel":"","point_eqs_eel":"oldmd=md;\\nmd=(md+rand(4))%4;\\nmd=if(equal(md,oldmd),(md+1)%4,md);\\n\\nmx=mx+(equal(md,0)*.002*bass);\\nmx=mx-(equal(md,1)*.002*bass);\\nmy=my+(equal(md,2)*.002*treb);\\nmy=my-(equal(md,3)*.002*treb);\\n\\nmx=if(above(mx,.9),.5,mx);\\nmx=if(below(mx,.1),.5,mx);\\nmy=if(above(my,.9),.5,my);\\nmy=if(below(my,.1),.5,my);\\n\\nx=mx;\\ny=my;\\na=bass*.1;\\n\\ng=treb*.5;"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1},"init_eqs_eel":"mx=.5;\\nmy=.5;\\nmd=2;","frame_eqs_eel":"","point_eqs_eel":"oldmd=md;\\nmd=(md+rand(4))%4;\\nmd=if(equal(md,oldmd),(md+1)%4,md);\\n\\nmx=mx+(equal(md,0)*.002*bass);\\nmx=mx-(equal(md,1)*.002*bass);\\nmy=my+(equal(md,2)*.002*treb);\\nmy=my-(equal(md,3)*.002*treb);\\n\\nmx=if(above(mx,.9),.5,mx);\\nmx=if(below(mx,.1),.5,mx);\\nmy=if(above(my,.9),.5,my);\\nmy=if(below(my,.1),.5,my);\\n\\nx=mx;\\ny=my;\\na=bass*.1;"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1},"init_eqs_eel":"mx=.5;\\nmy=.4;\\nmd=3;","frame_eqs_eel":"","point_eqs_eel":"oldmd=md;\\nmd=(md+rand(4))%4;\\nmd=if(equal(md,oldmd),(md+1)%4,md);\\n\\nmx=mx+(equal(md,0)*.002*bass);\\nmx=mx-(equal(md,1)*.002*bass);\\nmy=my+(equal(md,2)*.002*treb);\\nmy=my-(equal(md,3)*.002*treb);\\n\\nmx=if(above(mx,.9),.5,mx);\\nmx=if(below(mx,.1),.5,mx);\\nmy=if(above(my,.9),.5,my);\\nmy=if(below(my,.1),.5,my);\\n\\nx=mx;\\ny=my;\\na=bass*.1;"}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = 0.85 + 0.25*sin(0.437*time+1);\\nwave_g = 0.85 + 0.25*sin(0.544*time+2);\\nwave_b = 0.85 + 0.25*sin(0.751*time+3);\\nrot = rot + 0.010*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );\\ncx = cx + 0.210*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\ncy = cy + 0.210*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\\ndx = dx + 0.003*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );\\ndy = dy + 0.003*( 0.60*sin(0.284*time) + 0.40*sin(0.247*time) );\\ndecay = decay - 0.01*equal(frame%6,0);\\ndx = dx + dx_residual;\\ndy = dy + dy_residual;\\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.96+1.3);\\ndx_residual = equal(bass_thresh,2.13)*0.016*sin(time*7) + (1-equal(bass_thresh,2.13))*dx_residual;\\ndy_residual = equal(bass_thresh,2.13)*0.012*sin(time*9) + (1-equal(bass_thresh,2.13))*dy_residual;\\nwave_x = wave_x - dx_residual*7;\\nwave_y = wave_y - dy_residual*7;\\nwave_mystery = time*0.03;\\n\\n//zoom = zoom + 0.005*( 0.60*sin(0.1934*time+3) + 0.40*sin(0.307*time+9) );\\n//zoom = zoom + max(0,bass_att-1.1)*0.2;\\n//warp = warp + max(0,treb_att-1.1)*1.0;\\n\\n// this is a great way to respond to beats:\\n// once you get one, let it decay at a constant rate!!\\nrg = max(rg*0.77, 0.02 + 0.5*min(2,max(0,mid_att-1)*1.3));\\nq9 = rg;\\n\\nzoom = zoom + q9*0.1;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (texture (sampler_pw_main, uv).xyz - 0.004);\\n  ret = tmpvar_1.xyz;\\n }","comp":" shader_body { \\n  vec2 uv_1;\\n  float ang2_2;\\n  ang2_2 = (fract((0.9549295 * ang)) / 6.0);\\n  ang2_2 = (abs((ang2_2 - 0.08333334)) * 6.283185);\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = cos(ang2_2);\\n  tmpvar_3.y = sin(ang2_2);\\n  uv_1 = (0.5 + ((\\n    (0.4 * (rad * sqrt(dot (texsize.xy, texsize.xy))))\\n   * tmpvar_3) * texsize.zw));\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = (1.4 * pow ((\\n    clamp (((texture (sampler_blur1, uv_1).xyz * scale1) + bias1), 0.0, 1.0)\\n   * \\n    (texture (sampler_pc_main, uv_1).xyz - ((texture (sampler_blur3, uv_1).xyz * scale3) + bias3))\\n  ), vec3(0.5, 0.5, 0.5)));\\n  ret = tmpvar_4.xyz;\\n }"}')},1392:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":4,"gammaadj":1,"decay":0.94,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":20.16,"mv_l":0.4,"mv_g":0.4,"mv_a":0},"shapes":[{"baseVals":{"textured":1,"rad":1.20321,"tex_zoom":1.22019,"a":0,"a2":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1,"scaling":1.12682},"init_eqs_eel":"mx=.5;\\nmy=.4;\\nmd=3;","frame_eqs_eel":"","point_eqs_eel":"oldmd=md;\\nmd=(md+rand(4))%4;\\nmd=if(equal(md,oldmd),(md+1)%4,md);\\n\\nmx=mx+(equal(md,0)*.002*bass);\\nmx=mx-(equal(md,1)*.002*bass);\\nmy=my+(equal(md,2)*.002*treb);\\nmy=my-(equal(md,3)*.002*treb);\\n\\nmx=if(above(mx,.9),.5,mx);\\nmx=if(below(mx,.1),.5,mx);\\nmy=if(above(my,.9),.5,my);\\nmy=if(below(my,.1),.5,my);\\n\\nx=mx;\\ny=my;\\na=cos(tan(treb + bass*.1));"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1,"scaling":1.12682},"init_eqs_eel":"mx=.5;\\nmy=.4;\\nmd=3;","frame_eqs_eel":"","point_eqs_eel":"oldmd=md;\\nmd=(md+rand(4))%4;\\nmd=if(equal(md,oldmd),(md+1)%4,md);\\n\\nmx=mx+(equal(md,0)*.002*bass);\\nmx=mx-(equal(md,1)*.002*bass);\\nmy=my+(equal(md,2)*.002*treb);\\nmy=my-(equal(md,3)*.002*treb);\\n\\nmx=if(above(mx,.9),.5,mx);\\nmx=if(below(mx,.1),.5,mx);\\nmy=if(above(my,.9),.5,my);\\nmy=if(below(my,.1),.5,my);\\n\\nx=mx;\\ny=my;\\na=cos(tan(treb + bass*.1));"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1,"scaling":1.12682},"init_eqs_eel":"mx=.5;\\nmy=.4;\\nmd=3;","frame_eqs_eel":"","point_eqs_eel":"oldmd=md;\\nmd=(md+rand(4))%4;\\nmd=if(equal(md,oldmd),(md+1)%4,md);\\n\\nmx=mx+(equal(md,0)*.002*bass);\\nmx=mx-(equal(md,1)*.002*bass);\\nmy=my+(equal(md,2)*.002*treb);\\nmy=my-(equal(md,3)*.002*treb);\\n\\nmx=if(above(mx,.9),.5,mx);\\nmx=if(below(mx,.1),.5,mx);\\nmy=if(above(my,.9),.5,my);\\nmy=if(below(my,.1),.5,my);\\n\\nx=mx;\\ny=my;\\na=cos(tan(treb + bass*.1));"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1,"scaling":1.12682},"init_eqs_eel":"mx=.5;\\nmy=.4;\\nmd=3;","frame_eqs_eel":"","point_eqs_eel":"oldmd=md;\\nmd=(md+rand(4))%4;\\nmd=if(equal(md,oldmd),(md+1)%4,md);\\n\\nmx=mx+(equal(md,0)*.002*bass);\\nmx=mx-(equal(md,1)*.002*bass);\\nmy=my+(equal(md,2)*.002*treb);\\nmy=my-(equal(md,3)*.002*treb);\\n\\nmx=if(above(mx,.9),.5,mx);\\nmx=if(below(mx,.1),.5,mx);\\nmy=if(above(my,.9),.5,my);\\nmy=if(below(my,.1),.5,my);\\n\\nx=mx;\\ny=my;\\na=cos(tan(treb + bass*.1));"}],"init_eqs_eel":"","frame_eqs_eel":"dec_med = pow (0.9, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .4+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %12;\\nindex2 = (index2 + is_beat*bnot(index))%4;\\nindex3 = (index3 + is_beat*bnot(index)*bnot(index2))%3;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass + mid + treb;\\nq27 = index + 1;\\nq28 = index2;\\n\\nk1 =  is_beat*equal(index%2,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.1416/4;\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\ndrot = (index%4-2) * 30/fps;\\np3 = p3*dec_slow + (1-dec_slow)*30/fps * drot;\\nq30 = p3 ;\\n\\nstag = (q27+index2*1);\\nstag = max(stag,1);\\np4 = dec_med*p4 + (1-dec_med)*stag;\\nq31 = p4;\\n\\nzoom = 1 + .05*q1;\\nrot = -0.007 * index;\\n\\nq32 = pow(0.996, 30/fps); //fade\\n\\nmonitor = index2;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 my_uv_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (vec2(1280.0, 1024.0) * texsize.zw);\\n  float tmpvar_4;\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (uv + vec2(0.005, 0.0));\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv - vec2(0.005, 0.0));\\n  tmpvar_4 = (((\\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_6).xyz * scale2)\\n   + bias2)).x * tmpvar_3.x);\\n  float tmpvar_7;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (uv + vec2(0.0, 0.005));\\n  vec2 tmpvar_9;\\n  tmpvar_9 = (uv - vec2(0.0, 0.005));\\n  tmpvar_7 = (((\\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_9).xyz * scale2)\\n   + bias2)).x * tmpvar_3.y);\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = tmpvar_4;\\n  tmpvar_10.y = tmpvar_7;\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = (((\\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_6).xyz * scale2)\\n   + bias2)).x * tmpvar_3.x);\\n  tmpvar_11.y = (((\\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_9).xyz * scale2)\\n   + bias2)).x * tmpvar_3.y);\\n  ret_2.x = texture (sampler_fw_main, ((uv - (tmpvar_10 * 0.01)) + (tmpvar_11 * 0.003))).x;\\n  vec4 tmpvar_12;\\n  tmpvar_12 = texture (sampler_blur3, uv);\\n  ret_2.x = (ret_2.x + ((ret_2.x - \\n    ((tmpvar_12.xyz * scale3) + bias3)\\n  .x) * 0.1));\\n  ret_2.x = (ret_2.x + 0.004);\\n  vec2 tmpvar_13;\\n  tmpvar_13.x = tmpvar_7;\\n  tmpvar_13.y = -(tmpvar_4);\\n  my_uv_1 = (uv + ((tmpvar_13 * 0.05) * (1.2 - \\n    ((tmpvar_12.xyz * scale3) + bias3)\\n  .y)));\\n  ret_2.z = texture (sampler_fw_main, my_uv_1).z;\\n  vec2 x_14;\\n  x_14 = (my_uv_1 - uv);\\n  ret_2.z = (ret_2.z + ((\\n    ((ret_2.z - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).z) * sqrt(dot (x_14, x_14)))\\n   * 180.0) / sqrt(\\n    dot (tmpvar_3, tmpvar_3)\\n  )));\\n  ret_2.z = (ret_2.z * 0.8);\\n  ret_2.z = (ret_2.z + 0.004);\\n  vec2 tmpvar_15;\\n  tmpvar_15.x = -(tmpvar_7);\\n  tmpvar_15.y = tmpvar_4;\\n  my_uv_1 = (tmpvar_15 * 0.045);\\n  vec2 tmpvar_16;\\n  tmpvar_16.x = (((\\n    (texture (sampler_blur2, (uv + vec2(0.01, 0.0))).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, (uv - vec2(0.01, 0.0))).xyz * scale2)\\n   + bias2)).y * tmpvar_3.x);\\n  tmpvar_16.y = (((\\n    (texture (sampler_blur2, (uv + vec2(0.0, 0.01))).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, (uv - vec2(0.0, 0.01))).xyz * scale2)\\n   + bias2)).y * tmpvar_3.y);\\n  my_uv_1 = (my_uv_1 + (uv - (tmpvar_16 * 0.03)));\\n  ret_2.y = texture (sampler_fw_main, my_uv_1).y;\\n  ret_2.y = (ret_2.y + ((ret_2.y - \\n    ((texture (sampler_blur3, my_uv_1).xyz * scale3) + bias3)\\n  .y) * 0.2));\\n  vec4 tmpvar_17;\\n  tmpvar_17.w = 0.0;\\n  tmpvar_17.xyz = ret_2;\\n  vec3 tmpvar_18;\\n  tmpvar_18 = mix (tmpvar_17, texture (sampler_main, uv_orig), vec4(0.2, 0.2, 0.2, 0.2)).xyz;\\n  ret_2 = tmpvar_18;\\n  vec4 tmpvar_19;\\n  tmpvar_19.w = 1.0;\\n  tmpvar_19.xyz = tmpvar_18;\\n  ret = tmpvar_19.xyz;\\n }","comp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = (texsize.zw * 2.0);\\n  vec3 tmpvar_2;\\n  tmpvar_2 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_1))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_1))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_1))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_1))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = tmpvar_3.z;\\n  tmpvar_4.y = -(tmpvar_2.z);\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (uv + ((tmpvar_4 * texsize.zw) * 64.0));\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = tmpvar_3.z;\\n  tmpvar_6.y = -(tmpvar_2.z);\\n  vec2 tmpvar_7;\\n  tmpvar_7 = (uv - ((tmpvar_6 * texsize.zw) * 32.0));\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = (mix (mix (\\n    (mix (mix (vec3(0.2, 0.02, 0.6), vec3(0.6, 0.6, 0.0), vec3((\\n      ((texture (sampler_blur3, tmpvar_5).xyz * scale3) + bias3)\\n    .y * 8.0))), vec3(1.0, 1.0, 2.0), vec3(((\\n      (texture (sampler_blur1, tmpvar_5).xyz * scale1)\\n     + bias1).y * 6.0))) * (vec3(1.0, 1.0, 1.0) - vec3((texture (sampler_main, tmpvar_5).y * 2.0))))\\n  , vec3(0.0, 1.0, 0.0), vec3(\\n    (((texture (sampler_blur2, uv).xyz * scale2) + bias2).z * 1.2)\\n  )), vec3(1.4, 0.0, 0.0), vec3((\\n    ((texture (sampler_blur1, tmpvar_7).xyz * scale1) + bias1)\\n  .x * 2.0))) * (vec3(1.0, 1.0, 1.0) - vec3((texture (sampler_main, tmpvar_7).x * 2.0))));\\n  ret = tmpvar_8.xyz;\\n }"}')},1659:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":3,"gammaadj":1.78,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":3,"additivewave":1,"wave_dots":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.084,"wave_smoothing":0.36,"wave_mystery":0.2,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0,"wave_b":0,"ob_a":1,"ib_size":0,"mv_x":12.8,"mv_y":9.6,"mv_l":0.05,"mv_b":0.5,"mv_a":0,"b1x":0.7,"b1ed":0},"shapes":[{"baseVals":{"sides":100,"num_inst":22,"rad":0.43,"tex_ang":3.14159,"tex_zoom":1.53117,"g":1,"b":1,"a":0,"r2":0.84,"g2":0.93,"b2":1,"border_r":0.8,"border_g":0,"border_a":0.9,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":63,"additive":1,"rad":1.99863,"tex_zoom":0.49981,"g":1,"b":1,"a":0.1,"r2":1,"b2":1,"a2":0.6,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":63,"textured":1,"x":0.123,"y":0,"rad":0.27319,"tex_zoom":0.49981,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":63,"textured":1,"y":1,"rad":0.54822,"tex_zoom":0.49981,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"samples":382,"thick":1,"additive":1,"scaling":0.89152,"smoothing":0.82,"a":0.05},"init_eqs_eel":"","frame_eqs_eel":"t1 = 1*cos(q30);\\nt2 = 1*sin(q30*4);\\nt3 = q29/3;\\n","point_eqs_eel":"\\nt_abs = sample;\\nt_rel = sample-time/6;\\nampl = abs(sin(t_abs*3)-q28%2)+.5;\\n\\nox = 3*sin (4*q30)+ ampl*(sin (t_rel*500)) ;\\noy = 3*cos (q30) + ampl*(cos (t_rel*(480+4*q28))) ;\\noz = t_abs*3 ;\\n\\nr = q12;\\nb = q13;\\ng = q14;\\n\\nxang = t2+t3/3;\\nyang = t1*t2-t3/4;\\nzang = t3;\\nfov = min(max(0.2*q20,.1),.4);\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = -ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz =  mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\noz = oz - 7;\\nx = ox*fov/oz +0.5 ;\\ny = oy*fov/oz + 0.5 ;\\n"},{"baseVals":{"samples":232,"usedots":1,"thick":1,"additive":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1 = 2*sin(time/15);\\nt2 = 2*sin(time/11);\\nmonitor = time;","point_eqs_eel":""},{"baseVals":{"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"thick":1,"a":0.3,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"trel = rand(10);\\nindex = rand(8);\\nindex2 = rand(8);\\navg = 0;","frame_eqs_eel":"dec_med = pow (0.8, 30/fps);\\ndec_slow = pow (0.98, 30/fps);\\nbeat = (bass + mid + treb)/3;\\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .2+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %8;\\nindex2 = (index2 + is_beat*bnot(index))%8;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = (bass+mid+treb)-(bass_att+mid_att+treb_att);\\nq23 = beat - avg;\\nq24 = is_beat;\\nq27 = index;\\nq28 = index2;\\nq19 = index;\\n\\nk1 =  is_beat*equal(index,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.14159265359/2;\\nq1 = cos(rott);\\nq2 = sin(rott);\\n\\npulse = pulse*dec_slow+ (1-dec_slow)* peak;\\nwinkel = winkel + pulse/fps*30;\\nq29 = winkel;\\n\\ntrel = trel + (bass_+mid_+treb_)/fps/3;\\ntrel_ = trel_*dec_med + (1-dec_med)*trel;\\nq30 = trel_;\\nq31 = sin(trel_/4)*12;\\n\\ndec_slow = pow (0.94, 30/fps);\\nbass_ = bass_*dec_slow + (1-dec_slow)*bass_att;\\nmid_  = mid_*dec_slow + (1-dec_slow)*(mid_att);\\ntreb_ = treb_*dec_slow + (1-dec_slow)*treb_att;\\n\\nq12 = sigmoid((bass_-treb_)*4,1);\\nq13 = sigmoid((mid_-bass_)*4,1);\\nq14 = sigmoid((treb_-mid_)*4,1);\\n\\nq15 = above(q20,1.3); //stopngo\\n\\nrota = rota*dec_med + (1-dec_med)*q22/2;\\nzoom = 1.0 + .04*q1*50/fps;\\ncx = .5+.2*sin(trel_*12) * bnot(q28%3);\\ncy = .5+.4*cos(trel_*6) * bnot(q28%3);\\nrot = (.04*q1+rota/8*q2)*50/fps;\\ndx = .012*q1*50/fps*avg;\\ndy = .012*q2*50/fps*avg;","pixel_eqs_eel":"","warp":"float xlat_mutableq25;\\n shader_body { \\n  vec2 uv_1;\\n  vec3 crisp_2;\\n  float tmpvar_3;\\n  vec4 tmpvar_4;\\n  tmpvar_4 = texture (sampler_blur1, uv_orig);\\n  tmpvar_3 = ((16.0 * dot (\\n    ((tmpvar_4.xyz * scale1) + bias1)\\n  , vec3(0.32, 0.49, 0.29))) * (0.5 + q22));\\n  mat2 tmpvar_5;\\n  tmpvar_5[uint(0)].x = cos(tmpvar_3);\\n  tmpvar_5[uint(0)].y = -(sin(tmpvar_3));\\n  tmpvar_5[1u].x = sin(tmpvar_3);\\n  tmpvar_5[1u].y = cos(tmpvar_3);\\n  uv_1 = (uv + ((0.25 * \\n    dot (((tmpvar_4.xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29))\\n  ) * (\\n    (uv - 0.5)\\n   * tmpvar_5)));\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (((uv_orig * texsize.xy) * 0.02) + time);\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = (cos((tmpvar_6.y * q1)) * sin(-(tmpvar_6.y)));\\n  tmpvar_7.y = (sin(tmpvar_6.x) * cos((tmpvar_6.y * q2)));\\n  uv_1 = (uv_1 + ((tmpvar_7 * texsize.zw) * q31));\\n  crisp_2 = (((\\n    ((texture (sampler_fw_main, uv_1) * 2.0).xyz * 0.98)\\n   / 2.0) - 0.005) - (8.0 * max (\\n    pow ((uv_orig.x - 0.5), 6.0)\\n  , \\n    pow ((uv_orig.y - 0.5), 6.0)\\n  )));\\n  xlat_mutableq25 = (float((q22 >= 1.0)) * q15);\\n  crisp_2 = ((crisp_2 * (1.0 - xlat_mutableq25)) + (xlat_mutableq25 * texture (sampler_main, uv_orig).xyz));\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = mix (crisp_2, vec3(dot (crisp_2, vec3(0.32, 0.49, 0.29))), vec3((0.2 * dot (\\n    ((tmpvar_4.xyz * scale1) + bias1)\\n  , vec3(0.32, 0.49, 0.29)))));\\n  ret = tmpvar_8.xyz;\\n }","comp":"vec3 xlat_mutableback;\\n shader_body { \\n  vec3 ret_1;\\n  xlat_mutableback = ((texture (sampler_blur3, uv_orig).xyz * scale3) + bias3);\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = uv.x;\\n  tmpvar_2.y = ((-(uv.y) * 2.0) + 2.0);\\n  ret_1 = (mix (texture (sampler_main, uv).xyz, (1.5 * \\n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\\n  ), vec3(clamp (\\n    dot (xlat_mutableback, vec3(0.32, 0.49, 0.29))\\n  , 0.0, 1.0))) + ((xlat_mutableback * q22) / 2.0));\\n  ret_1 = (ret_1 + ((\\n    (clamp ((0.5 - (4.0 * \\n      dot (xlat_mutableback, vec3(0.32, 0.49, 0.29))\\n    )), 0.0, 1.0) * (uv.y / 2.0))\\n   * \\n    (1.0 - (dot ((\\n      (texture (sampler_blur2, fract(tmpvar_2)).xyz * scale2)\\n     + bias2), vec3(0.32, 0.49, 0.29)) * clamp ((4.0 - \\n      (4.0 * tmpvar_2.y)\\n    ), 0.0, 1.0)))\\n  ) * (0.5 + \\n    (hue_shader / 2.0)\\n  )));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_1;\\n  ret = tmpvar_3.xyz;\\n }"}')},7011:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":4,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":4,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.527,"wave_smoothing":0.45,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.8,"wave_g":0.49,"ob_size":0.015,"ob_a":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b2x":0.3,"b1ed":0},"shapes":[{"baseVals":{"additive":1,"textured":1,"rad":2.37185,"tex_ang":1.5708,"tex_zoom":0.93101,"r":0,"g":1,"b":1,"a":0.4,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":12,"additive":1,"textured":1,"x":0.3,"y":0.8,"rad":1.06345,"tex_ang":1.63363,"tex_zoom":0.46617,"g":1,"g2":0,"a2":1,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":13,"additive":1,"num_inst":5,"x":0.65,"y":0.38,"rad":0.57049,"tex_zoom":0.73678,"a":0.7,"g2":0,"border_r":0.5,"border_g":0.5,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":14,"additive":1,"thickoutline":1,"textured":1,"x":0.6,"y":0.55,"rad":0.97237,"ang":1.25664,"tex_zoom":0.34933,"g":0.6,"g2":0,"b2":1,"border_r":0.2,"border_g":0.7,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"samples":506,"sep":116,"spectrum":1,"thick":1,"scaling":1.07408,"smoothing":0,"a":0.7},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"\\nn = int((reg00+.5)*sample);\\n\\nm = 30001+n/(reg00/reg01);\\ngmegabuf(m) = (value1+value2);\\n\\nx = gmegabuf(10000+n);\\ny = gmegabuf(15000+n);\\na = gmegabuf(20000+n);\\n\\nb = min(max(gmegabuf(25000+n),0),1);\\nr = 1-b;  \\ng = 0.5;"},{"baseVals":{"enabled":1,"samples":506,"thick":1,"scaling":0.89152,"smoothing":0.82},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n = int((reg00+.5)*sample) +reg00;\\n\\nx = gmegabuf(10000+n);\\ny = gmegabuf(15000+n);\\na = gmegabuf(20000+n);\\n\\nb = min(max(gmegabuf(25000+n),0),1);\\nr = 1-b;  \\ng = 0.5;"},{"baseVals":{"enabled":1,"samples":506,"thick":1,"scaling":0.89152,"smoothing":0.82},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n = int((reg00+.5)*sample)+2*reg00;\\n\\n\\nx = gmegabuf(10000+n);\\ny = gmegabuf(15000+n);\\na = gmegabuf(20000+n);\\n\\nb = min(max(gmegabuf(25000+n),0),1);\\nr = 1-b;  \\ng = 0.5;\\n"},{"baseVals":{"enabled":1,"samples":506,"spectrum":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n = int((reg00-.5)*sample)+3*reg00;\\n\\n\\nx = gmegabuf(10000+n);\\ny = gmegabuf(15000+n);\\na = gmegabuf(20000+n);\\n\\nb = min(max(gmegabuf(25000+n),0),1);\\nr = 1-b;  \\ng = 0.5;"}],"init_eqs_eel":"index = 0;\\nloop (70000,\\n  megabuf(index) = 0;\\n  gmegabuf(index) = 0;\\n  index = index + 1;\\n);\\n\\nzang = 1;\\n\\nyang = 0;\\nzang = 2;","frame_eqs_eel":"xlen = 45; ylen = 45; flen = 30; reg00 = xlen*ylen/4; reg01=reg00/4;\\ndec_med = 1-0.06*30/fps; dec_slow = 1-0.02*30/fps; dec_f = pow (0.8, 30/fps);\\nq30 = dec_slow;\\nsmooth = max(1,pow(6,fps/30)-2); // >= 0; Ausbreitungsgeschwindigkeit\\n\\n//\\"Classic\\" beat reaction\\ncbeat = bass+mid+treb;\\ndecc = if (vol>cbeat,0.8,dec_med);\\nvol  = vol * decc + (1-decc)*cbeat;\\navg = avg*dec_slow + cbeat*(1-dec_slow);\\nis_beat = above(cbeat, 1.5*avg) * above (time, tc0+.2);\\ntc0 = if (bor(is_beat, bd_bt),time,tc0);\\npeak = if (is_beat,cbeat,peak*dec_med);\\n\\n\\n//Gleichanteil entfernen und normalisieren\\nind = 0; sum = 0; amp = 0.01;\\nloop (reg01,\\n  sum = sum + gmegabuf(ind+30000)/(reg01);\\n  amp = amp + pow(gmegabuf(ind+30000),2);\\n  ind = ind+1;\\n); \\nind = 0; amp_= amp_*dec_med + (1-dec_med)*sqrt(amp)/reg01*600;\\nloop (reg01,\\n  megabuf(ind+30000)= (gmegabuf(ind+30000)-sum)/amp_;\\n  ind = ind+1;\\n);\\n \\n// Spectrum of spectrum  !\\nindex2 = 0;\\nloop(flen, //Frequency step\\n  index=0; real= 0; imag = 0;\\n  loop (flen,\\n    real = real + cos(index/flen*6.28*index2)*megabuf(index*reg01/8+30002);\\n    imag = imag + sin(index/flen*6.28*index2)*megabuf(index*reg01/8+30002);\\n    index=index+1;\\n  );\\n  megabuf(10000+index2)= megabuf(10000+index2) * dec_f + real;\\n  megabuf(15000+index2)= megabuf(15000+index2) * dec_f + imag;\\n  index2 = index2+1;\\n );\\n\\n//Anregung\\nind = 1;\\nloop (flen/2,\\n  cx = megabuf(10000+ind);\\n  cy = megabuf(15000+ind);\\n  yind = -1;\\n  loop (3,\\n    xind = -1;\\n    loop (3,\\n      ox = ((cx+.5)*xlen+xind)%xlen;\\n      oy = ((cy+.5)*ylen+yind)%ylen;\\n      amp = (cx*cx+cy*cy)*3;\\n      megabuf (oy*ylen+ox) = megabuf (oy*ylen+ox) \\n                           - 2*30/fps*sqrt(amp)*above(amp,.02)/(1+xind*xind+yind*yind);\\n      xind = xind+1;\\n    );\\n    yind = yind+1;\\n  );\\n  ind = ind+1;\\n);\\n\\n//Simulation\\nyind = 0;\\nloop (ylen,\\n  xind = 0;\\n  loop (xlen,\\n    megabuf(yind*ylen+xind+5000) = //megabuf ab 5000 ist nur Zwischenspeicher\\n    dec_med*((gmegabuf(yind*ylen+(xind+1)%xlen) +\\n    gmegabuf(yind*ylen+(xlen+xind-1)%xlen) + \\n    gmegabuf(((yind+1)%ylen)*ylen+xind) + \\n    gmegabuf(((yind+ylen-1)%ylen)*ylen+xind)\\n    +gmegabuf(yind*ylen+xind)*smooth*4)/(2+2*smooth) - megabuf(yind*ylen+xind)); \\n    xind = xind+1;\\n  );\\n  yind = yind+1;\\n);\\n\\n//Projektionsparameter\\n\\nbindex += is_beat;\\nif (is_beat && (bindex%4==0), ran2 = (rand(100)-30)/60,0 );\\nif (is_beat && (bindex%4==2), ran3 = (rand(100)-30)/60,0 );\\nif (is_beat && (bindex%6==2), ran4 = (rand(100)-30)/60,0 );\\ndec_v = min(max(0, 1-8*vol/fps),dec_slow);\\nran2_ = ran2_ * dec_v + (1-dec_v)*ran2;\\nran3_ = ran3_ * dec_v + (1-dec_v)*ran3;\\nran4_ = ran4_ * dec_v + (1-dec_v)*ran4;\\ntrelx += ran2_/fps/7;\\ntrely += ran3_/fps/2;\\ntrelz += ran4_/fps/6;\\nzang = 6*sin(trelz);\\nxang = 6*sin(zang/5+trelx);\\nyang = 6*sin(zang/3*0+trely);\\n\\nq1 = cos(xang);q2 = sin(xang);q3 = cos(yang);\\nq4 = sin(yang);q5 = cos(zang);q6 = sin(zang);\\nfov = 1;\\n\\n//Umkopieren und Projektion\\nyind = 0;\\nloop (ylen,\\n  xind = 0;\\n  loop (xlen,\\n    ind = yind*ylen+xind;\\n    megabuf(ind) = gmegabuf(ind); \\n    gmegabuf(ind) = megabuf(ind+5000); \\n    oz = yind - ylen/2; //#\\n    ox = if(bnot(yind%2),xind,xlen-xind-1);\\n    oy0a = (oy0+oy0a)/2.5;\\n    oy = gmegabuf(yind*ylen+ox); oy0 = oy;\\n    ox = ox - xlen/2;  \\n    mx = ox*q5 - oy*q6;  my = ox*q6 + oy*q5;\\n    ox = mx; oy = my;  \\n    mx = ox*q3 + oz*q4;  mz = - ox*q4 + oz*q3;\\n    ox = mx; oz = mz;  \\n    my = oy*q1 - oz*q2;  mz = oy*q2 + oz*q1;\\n    z0 = 90+40*sin(trelz*14);\\n    oy = my; oz = mz+z0;\\n    gmegabuf(10000+ind) = fov*ox/(oz)+.5;\\n    gmegabuf(15000+ind) = fov*oy/(oz)+.5;\\n    hell= max(min(.5+oy0/4,1),0.1); //Helligkeit\\n    gmegabuf(20000+ind) = max(min(hell* (.5+ (oy0a-oy0)*0.1),1),0.1) ;\\n    gmegabuf(25000+ind) = oy0/16+.5;;\\n    xind = xind+1;\\n  );\\n  yind = yind+1;\\n);\\n\\nq29 = fov*50/z0;\\nq32 = aspecty;\\nq28 = min (vol/3-0.3,1);\\nmonitor = is_beat;","pixel_eqs_eel":"rot = 0; zoom = 1.1; warp = 0; dy = 0.02;","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = vec3(0.0, 0.0, 0.0);\\n  ret = tmpvar_1.xyz;\\n }","comp":"vec3 xlat_mutablecol;\\n shader_body { \\n  vec2 uv_1;\\n  uv_1 = uv;\\n  int iter_3;\\n  vec3 ret_4;\\n  ret_4 = texture (sampler_main, uv).xyz;\\n  iter_3 = int((clamp (q29, 0.0, 1.0) * 8.0));\\n  for (int n_2 = 1; n_2 < iter_3; n_2++) {\\n    vec2 tmpvar_5;\\n    tmpvar_5.y = 0.0;\\n    tmpvar_5.x = float(n_2);\\n    vec2 tmpvar_6;\\n    tmpvar_6.y = 0.0;\\n    tmpvar_6.x = float(n_2);\\n    ret_4 = max (max (ret_4, texture (sampler_main, (uv_1 - \\n      (texsize.zw * tmpvar_5)\\n    )).xyz), texture (sampler_main, (uv_1 + (texsize.zw * tmpvar_6))).xyz);\\n  };\\n  float tmpvar_7;\\n  tmpvar_7 = clamp ((1.0 - (2.0 * \\n    dot (ret_4, vec3(0.32, 0.49, 0.29))\\n  )), 0.0, 1.0);\\n  float tmpvar_8;\\n  float tmpvar_9;\\n  tmpvar_9 = (uv.x - 0.5);\\n  tmpvar_8 = (0.5 / ((\\n    (uv.y + ((tmpvar_9 * 1.4) * (q5 * q3)))\\n   - 0.4) + (0.3 * q4)));\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = (tmpvar_8 * tmpvar_9);\\n  tmpvar_10.y = tmpvar_8;\\n  vec3 tmpvar_11;\\n  tmpvar_11.x = q2;\\n  tmpvar_11.y = q4;\\n  tmpvar_11.z = q6;\\n  xlat_mutablecol = (0.5 + (0.5 * tmpvar_11));\\n  float x_12;\\n  x_12 = ((uv.x - (\\n    dot (ret_4, vec3(0.32, 0.49, 0.29))\\n   * 5.0)) + 0.5);\\n  ret_4 = (ret_4 * (q28 + (\\n    ((6.0 * (0.05 / sqrt(\\n      (x_12 * x_12)\\n    ))) * (1.0 + xlat_mutablecol))\\n   / 2.0)));\\n  vec2 tmpvar_13;\\n  tmpvar_13.x = q1;\\n  tmpvar_13.y = (q3 + time);\\n  float tmpvar_14;\\n  tmpvar_14 = (((\\n    (texture (sampler_noise_lq, (tmpvar_10 + tmpvar_13)).x * tmpvar_7)\\n   * \\n    float((tmpvar_8 > 0.0))\\n  ) * 0.2) * min (1.0, (1.0/(tmpvar_8))));\\n  ret_4 = (ret_4 + tmpvar_14);\\n  ret_4 = (ret_4 + ((\\n    (sin((12.0 * q2)) * tmpvar_7)\\n   * tmpvar_14) * dot (\\n    (12.0 * ((texture (sampler_blur1, (tmpvar_10 - vec2(-0.5, 0.3))).xyz * scale1) + bias1))\\n  , vec3(0.32, 0.49, 0.29))));\\n  ret_4 = (ret_4 + ((\\n    ((0.5 / abs(tmpvar_8)) * normalize(xlat_mutablecol))\\n   * \\n    float((tmpvar_8 < 0.0))\\n  ) * tmpvar_7));\\n  vec4 tmpvar_15;\\n  tmpvar_15.w = 1.0;\\n  tmpvar_15.xyz = ret_4;\\n  ret = tmpvar_15.xyz;\\n }"}')},378:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.980001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"wave_mode":4,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken_center":1,"darken":1,"wave_a":0.001,"wave_scale":0.527429,"wave_smoothing":0.45,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":0.442,"warpscale":0.498,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.8,"wave_g":0.49,"ob_size":0,"ob_r":1,"ob_g":1,"ob_b":1,"ob_a":0.05,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.4999,"mv_g":0.4999,"mv_b":0.4999,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"rad":0.048958,"tex_ang":1.00531,"tex_zoom":1.531168,"r":0.5,"g":1,"b":0.9,"r2":0.83,"g2":0.93,"b2":0.8,"a2":1,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"\\ntrel = time/3;\\n\\nx = .5+sin(trel*2);\\ny = .5+cos(trel*1.3);\\n\\n\\n\\ncent = sqrt((x-.5)*(x-.5)+(y-.5)*(y-.5));\\n\\nrad = .1*cent;\\na = .8;"},{"baseVals":{"enabled":1,"thickoutline":1,"textured":1,"x":0.26,"y":0.2,"rad":0.393173,"tex_zoom":1.392831,"r":0,"g":0.55,"b":0.5,"a":0.9,"g2":0.4,"b2":0.4,"border_r":0.3,"border_g":0.7,"border_b":0.8,"border_a":0.2},"init_eqs_eel":"","frame_eqs_eel":"trig = q24;\\n\\ntextured = 1;\\n\\nx0 = x0*bnot(trig) + trig*(.2+ rand(100)/200); \\ny0 = y0*bnot(trig) + trig*(.2+ rand(100)/200); \\n\\n\\nx0 = x0 + .03*q1*(3+q26)/fps;\\ny0 = y0 + .03*q2*(3+q26)/fps;\\n\\nx0 = x0 - int(x0);\\ny0 = y0 - int(y0);\\n\\ntex_ang = time;\\n//tex_zoom = q1;\\nang = time*q2;\\nx = x0; y = y0;\\nrad0 = rad0*bnot(trig) + trig*rand(100)/200;\\nrad = rad0;\\n\\n\\nr0 = r0*bnot(trig) + trig * rand(10)/10;\\nb0 = b0*bnot(trig) + trig * rand(10)/10;\\ng0 = g0*bnot(trig) + trig * rand(10)/10;\\n\\nborder_r = r0; border_g = g0; border_b = b0;\\n\\nr = r0; b = b0; g = g0;"},{"baseVals":{"additive":1,"x":0.503,"rad":0.038857,"tex_zoom":0.609857,"g":0.1,"a":0.9,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = rand(50)/50;\\ny = .5 - 0*rand(15)/200;\\n\\nr = .4;\\ng = .6;\\nb = 1;\\nr2 = r;\\ng2 = g;\\nb2 = b;\\n\\na = min(q21/2 ,.9);\\nrad = a * (.1+abs(x-.5))/2 ;"},{"baseVals":{"thickoutline":1,"textured":1,"x":0.26,"y":0.76,"rad":0.39478,"tex_zoom":0.499805,"g":1,"b":1,"r2":1,"b2":1,"a2":0.8,"border_r":0.2,"border_g":0.7,"border_b":0.5,"border_a":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"tex_zoom = q27/2;"}],"waves":[{"baseVals":{"samples":282,"sep":20,"thick":1,"additive":1,"scaling":3.915805,"smoothing":0.1,"r":0.2,"g":0.3,"a":0.6,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t2 = t2 + bass_att;","point_eqs_eel":"\\nx = sample;\\ny = value1 * rand(50)/100 * abs(sample-.5)+ .49;\\n\\na = q26/4 * (.2 + abs(sample-.5)); "},{"baseVals":{"usedots":1,"thick":1,"scaling":0.891519,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"xi = rand(100)/100;\\nyi = rand(100)/100;\\n\\nx = xi; y = yi;\\n\\na = q21/15; "},{"baseVals":{"thick":1,"scaling":0.891519,"smoothing":0.82,"r":0,"g":0.2,"b":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"dirx = 1;","frame_eqs_eel":"dec_med = pow (0.6, 30/fps);\\ndec_slow = pow (0.9, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .2+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %8;\\nindex2 = (index2 + is_beat*bnot(index))%4;\\nindex3 = (index3 + is_beat*bnot(index)*bnot(index2))%3;\\n\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass + mid + treb;\\nava = ava*dec_slow + q26*(1-dec_slow);\\n\\n\\n//k1 =  is_beat*bnot(index)*bnot(index2);\\n\\nk1 =  is_beat*equal(index%2,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.1416/2;\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\nq27 = 8-index;\\nq28 = .5 + sin(time/7)/10;\\n\\nrm = min(q26-1.5*ava,2);\\nmov = is_beat*rm + (1-is_beat)*mov;\\n\\nmovez = movez + .4/fps*mov;\\nq30 = movez;\\n//**************************\\n\\nampl = q26/8;\\n\\nmovex = movex + .2/fps*sin(rott);\\nmovey = movey + .2/fps*cos(rott);\\n\\nq18 = movex; q19 = movey;\\ntrel = trel + 1/fps + q24;\\nq17 = 2*sin(trel/4);","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 uv_1;\\n  vec2 uv6_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = ((uv - 0.5) * aspect.xy);\\n  float tmpvar_4;\\n  tmpvar_4 = (((q28 * 2.0) * sqrt(\\n    dot (tmpvar_3, tmpvar_3)\\n  )) + (rand_frame * 64.0)).x;\\n  uv_1 = (uv + (clamp (\\n    ((sin(tmpvar_4) / cos(tmpvar_4)) * normalize(tmpvar_3))\\n  , vec2(-16.0, -16.0), vec2(16.0, 16.0)) / 20.0));\\n  uv6_2 = (0.4 * sin((tmpvar_3 * 12.0)));\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = (((q24 * \\n    (((texture (sampler_main, uv_1).xyz - (\\n      ((texture (sampler_blur1, fract(uv_1)).xyz * scale1) + bias1)\\n     * 0.04)) + (0.15 * (vec3(\\n      (0.1 / sqrt(dot (uv6_2, uv6_2)))\\n    ) * roam_cos.xyz))) - 0.04)\\n  ) * 0.98) + ((1.0 - q24) * texture (sampler_main, uv_orig).xyz));\\n  ret = tmpvar_5.xyz;\\n }","comp":"vec3 xlat_mutableneu;\\nvec3 xlat_mutableret1;\\nvec2 xlat_mutablers2;\\n shader_body { \\n  vec2 uv_1;\\n  float inten_3;\\n  float dist_4;\\n  float ang2_5;\\n  vec2 uv2_6;\\n  uv_1 = (uv - 0.5);\\n  uv_1 = (uv_1 * aspect.xy);\\n  dist_4 = 1.0;\\n  inten_3 = 1.0;\\n  xlat_mutableret1 = vec3(0.0, 0.0, 0.0);\\n  for (float n_2 = 0.0; n_2 <= 4.0; n_2 += 1.0) {\\n    vec2 uv3_7;\\n    ang2_5 = ((6.28 * n_2) / 4.0);\\n    float tmpvar_8;\\n    tmpvar_8 = cos(ang2_5);\\n    float tmpvar_9;\\n    tmpvar_9 = sin(ang2_5);\\n    uv2_6.x = ((uv_1.x * tmpvar_8) - (uv_1.y * tmpvar_9));\\n    uv2_6.y = ((uv_1.x * tmpvar_9) + (uv_1.y * tmpvar_8));\\n    uv2_6 = (uv2_6 * aspect.yx);\\n    dist_4 = (1.0 - fract((\\n      (0.25 * n_2)\\n     + q30)));\\n    inten_3 = ((sqrt(dist_4) * (1.0 - dist_4)) * 4.0);\\n    vec2 tmpvar_10;\\n    tmpvar_10.x = tmpvar_8;\\n    tmpvar_10.y = tmpvar_9;\\n    uv3_7 = (fract((\\n      ((3.0 * uv2_6) * dist_4)\\n     + \\n      (0.3 * q27)\\n    )) + (q17 * tmpvar_10));\\n    xlat_mutableneu = (texture (sampler_main, uv3_7).xyz - ((texture (sampler_blur2, \\n      ((uv3_7 * 1.02) * q1)\\n    ).xyz * scale2) + bias2));\\n    xlat_mutableneu = (xlat_mutableneu * vec3(greaterThanEqual (xlat_mutableneu, vec3(0.0, 0.0, 0.0))));\\n    xlat_mutableret1 = max (xlat_mutableret1, (xlat_mutableneu * inten_3));\\n  };\\n  xlat_mutablers2 = ((0.4 * cos(\\n    ((uv_1 * 13.0) + time)\\n  )) - dot (xlat_mutableret1, vec3(0.32, 0.49, 0.29)));\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 1.0;\\n  tmpvar_11.xyz = (xlat_mutableret1 + ((\\n    ((0.05 / sqrt(dot (xlat_mutablers2, xlat_mutablers2))) * q26)\\n   / 4.0) * hue_shader));\\n  ret = tmpvar_11.xyz;\\n }"}')},8031:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_brighten":0,"darken":1,"wave_a":0.002,"wave_scale":0.14,"wave_smoothing":0,"wave_mystery":-0.84,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_g":0,"wave_b":0.6,"ob_size":0.015,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":23,"rad":0.19788,"tex_ang":0.62832,"tex_zoom":0.0402,"g":1,"b":1,"a":0.9,"r2":0.9,"b2":1,"a2":0.3,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"a = .3; a2 = 0;\\n\\nk1 = instance/num_inst*6.28;\\nx = .5 + .25*cos(q27*6.28/4);\\ny = .5 + .25*sin(q27*6.28/4);\\n\\nr = .5 + .5*sin(time+q27*6.28/3);\\ng = .5 + .5*sin(time/2+(q27+1)*6.28/3);\\nb = .5 + .5*sin(time/3+(q27+2)*6.28/3);\\n\\nrad = q22/18;"},{"baseVals":{"sides":5,"textured":1,"rad":4.77803,"tex_zoom":1.78051,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_g":0.99,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ang =sin(time/65) ;\\nrad = q24/8;"},{"baseVals":{"sides":5,"additive":1,"num_inst":4,"x":0.9,"rad":0.24732,"tex_zoom":0.40839,"g":0.6,"a":0.4,"g2":0,"b2":0.6,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"steps = q28+1;\\nsteps = 4;\\nampl = .2; //.2 bis .5 praktisch\\n\\nx = .5 + ampl*cos((q27/steps+instance/4)*6.28);\\ny = .5 + ampl*sin((q27/steps+instance/4)*6.28);\\n\\na = .3; a2 = .0;\\n\\n\\ntrig = q24 * bnot(q27%4);\\nred = bnot(trig)*red+ (rand(100)/100)*trig;\\ngreen = bnot(trig)*green+ (rand(100)/100)*trig;\\nblue = bnot(trig)*blue+ (rand(100)/100)*trig;\\n\\nk1 = instance / num_inst;\\n\\nr = red *k1;\\ng = green * (1-k1);\\nb = blue * 4*k1*(1-k1);\\n\\nr = red;\\ng = green;\\nb = blue;\\n\\n\\n\\nr2 = r; b2 = b; g2 = g;"},{"baseVals":{"sides":36,"additive":1,"rad":0.01,"r":0,"g":0.12,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"spectrum":1,"usedots":1,"additive":1,"scaling":0.5033,"r":0.5,"g":0.1,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x = .5 + .5*sample*sin(sample*50);\\ny = .5 + .5*sample*cos(sample*50);\\n\\ntrel = time;\\n\\nx = .5 + .5*sample*sin(time); \\ny = .5 + .5*sample*cos(time); \\n\\nx = rand(100)/100;\\ny = rand(100)/100;\\n\\na=.2;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"step = 0;","frame_eqs_eel":"dec_med = pow (0.9, 30/fps);\\ndec_slow = pow (0.96, 30/fps);\\ndec_fast = pow (0.6, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, 0+avg+peak) * above (time, t0+.1);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %16;\\nindex2 = (index2 + is_beat*bnot(index))%8;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq24 = is_beat;\\nvol = bass_att + mid_att + treb_att;\\nvol_ = dec_med * vol_ + (1-dec_med)* vol;\\nvol__ = dec_med * vol__ + (1-dec_med)* vol_;\\nq27 = index + 1;\\nq28 = index2 + 1;\\nq23 = q22 -0.1/q22;\\nq23 = max(q23,1);\\n\\nk1 =  is_beat*equal(index%8,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_fast * p2+ (1-dec_fast)*p1;\\nrott = p2 * 3.1416/4;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\ntrig = q24 * bnot(index%2);\\nvx = vx*bnot(trig) + trig* (rand(100)/100-.5);\\nvy = vy*bnot(trig) + trig* (rand(100)/100-.5);\\nq10 = 0.2+vy*vy*2;\\nq11 = sin(time/9)/2+.4;\\nmovz = movz-1/fps*(.3+vx);\\nq9 = movz;\\n\\nq12 = min(q22,6)*2;\\nq13 = min(2,1+abs(8*vy*vx));\\n//dir_ = dec_med*dir_ + (1-dec_med)*(index2%2-.5);\\ndir_ =  bass-1;\\n\\ntrig = bnot(index%4) * q24;\\ndir = bnot(trig)*dir + trig*(rand(10)-5);\\n\\ntrel = trel + .1/fps*dir;\\ntrel_ = dec_med*trel_ + (1-dec_med)*trel;\\n\\nq5 = cos(trel_);\\nq6 = sin(trel_+0*q27*(q28%2));\\nq7 = -q6;\\nq8 = q5;\\n\\nzoom = 1.02;\\nrot = .5*sin(bnot(q28%2)*q28) ;\\nrot = .0*sin(time/3);\\ndx = .0;\\n\\nmonitor = q11;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 uv6_1;\\n  vec2 uv1_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (uv - 0.5);\\n  float x_4;\\n  x_4 = (abs(tmpvar_3.x) - abs(tmpvar_3.y));\\n  float tmpvar_5;\\n  tmpvar_5 = (12.0 * sqrt((x_4 * x_4)));\\n  vec2 tmpvar_6;\\n  tmpvar_6 = normalize(tmpvar_3);\\n  uv1_2 = (tmpvar_3 + ((-0.01 * \\n    dot (((texture (sampler_blur1, uv).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29))\\n  ) * tmpvar_6));\\n  uv1_2 = (uv1_2 - (clamp (\\n    ((sin(tmpvar_5) / cos(tmpvar_5)) * tmpvar_6)\\n  , vec2(-2.0, -2.0), vec2(2.0, 2.0)) / 60.0));\\n  uv6_1 = (0.4 * cos((uv1_2 * 6.0)));\\n  vec4 tmpvar_7;\\n  tmpvar_7.w = 1.0;\\n  tmpvar_7.xyz = ((0.5 * (\\n    ((texture (sampler_main, ((uv1_2 * \\n      (0.8 + (0.2 * tmpvar_5))\\n    ) + 0.5)).xyz + (vec3((0.01 / \\n      (sqrt(dot (uv6_1, uv6_1)) - (0.001 * q27))\\n    )) * (0.3 * \\n      (1.0 + roam_cos)\\n    ).xyz)) * 0.96)\\n   - 0.025)) + (0.5 * texture (sampler_main, uv_orig).xyz));\\n  ret = tmpvar_7.xyz;\\n }","comp":"vec3 xlat_mutableneu;\\nvec2 xlat_mutablers0;\\nvec2 xlat_mutablerss;\\nvec2 xlat_mutableuv2;\\n shader_body { \\n  vec2 uv_1;\\n  vec2 ofs_2;\\n  vec3 ret1_3;\\n  uv_1 = ((uv - 0.5) * aspect.xy);\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = q5;\\n  tmpvar_4.y = q6;\\n  uv_1 = (uv_1 + (tmpvar_4 / 4.0));\\n  mat2 tmpvar_5;\\n  tmpvar_5[uint(0)] = _qb.xy;\\n  tmpvar_5[1u] = _qb.zw;\\n  uv_1 = (uv_1 * tmpvar_5);\\n  float tmpvar_6;\\n  float tmpvar_7;\\n  tmpvar_7 = (min (abs(\\n    (uv_1.y / uv_1.x)\\n  ), 1.0) / max (abs(\\n    (uv_1.y / uv_1.x)\\n  ), 1.0));\\n  float tmpvar_8;\\n  tmpvar_8 = (tmpvar_7 * tmpvar_7);\\n  tmpvar_8 = (((\\n    ((((\\n      ((((-0.01213232 * tmpvar_8) + 0.05368138) * tmpvar_8) - 0.1173503)\\n     * tmpvar_8) + 0.1938925) * tmpvar_8) - 0.3326756)\\n   * tmpvar_8) + 0.9999793) * tmpvar_7);\\n  tmpvar_8 = (tmpvar_8 + (float(\\n    (abs((uv_1.y / uv_1.x)) > 1.0)\\n  ) * (\\n    (tmpvar_8 * -2.0)\\n   + 1.570796)));\\n  tmpvar_6 = (tmpvar_8 * sign((uv_1.y / uv_1.x)));\\n  if ((abs(uv_1.x) > (1e-08 * abs(uv_1.y)))) {\\n    if ((uv_1.x < 0.0)) {\\n      if ((uv_1.y >= 0.0)) {\\n        tmpvar_6 += 3.141593;\\n      } else {\\n        tmpvar_6 = (tmpvar_6 - 3.141593);\\n      };\\n    };\\n  } else {\\n    tmpvar_6 = (sign(uv_1.y) * 1.570796);\\n  };\\n  xlat_mutablers0.x = (((tmpvar_6 / 3.1416) * 6.0) * q28);\\n  xlat_mutablers0.y = inversesqrt(dot (uv_1, uv_1));\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = (xlat_mutablers0.x + (q9 * 8.0));\\n  tmpvar_9.y = (xlat_mutablers0.y + ((q9 * q28) * 4.0));\\n  xlat_mutablerss = (tmpvar_9 / 12.0);\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = q5;\\n  tmpvar_10.y = q6;\\n  ofs_2 = (0.1 * tmpvar_10.yx);\\n  float tmpvar_11;\\n  float tmpvar_12;\\n  tmpvar_12 = -(q9);\\n  tmpvar_11 = fract(tmpvar_12);\\n  mat2 tmpvar_13;\\n  tmpvar_13[uint(0)].x = 1.0;\\n  tmpvar_13[uint(0)].y = -0.0;\\n  tmpvar_13[1u].x = 0.0;\\n  tmpvar_13[1u].y = 1.0;\\n  xlat_mutableuv2 = ((uv_1 * (\\n    (q13 * tmpvar_11)\\n   * tmpvar_13)) * aspect.yx);\\n  vec2 tmpvar_14;\\n  tmpvar_14 = fract(((xlat_mutableuv2 + 0.5) + ofs_2));\\n  xlat_mutableneu = (texture (sampler_main, tmpvar_14).xyz + ((texture (sampler_blur1, tmpvar_14).xyz * scale1) + bias1));\\n  ret1_3 = max (vec3(0.0, 0.0, 0.0), ((xlat_mutableneu * \\n    (1.0 - (tmpvar_11 * tmpvar_11))\\n  ) * 2.0));\\n  float tmpvar_15;\\n  tmpvar_15 = fract((tmpvar_12 + 0.3333333));\\n  mat2 tmpvar_16;\\n  tmpvar_16[uint(0)].x = -0.4990803;\\n  tmpvar_16[uint(0)].y = -0.8665558;\\n  tmpvar_16[1u].x = 0.8665558;\\n  tmpvar_16[1u].y = -0.4990803;\\n  xlat_mutableuv2 = ((uv_1 * (\\n    (q13 * tmpvar_15)\\n   * tmpvar_16)) * aspect.yx);\\n  vec2 tmpvar_17;\\n  tmpvar_17 = fract(((xlat_mutableuv2 + 0.5) + ofs_2));\\n  xlat_mutableneu = (texture (sampler_main, tmpvar_17).xyz + ((texture (sampler_blur1, tmpvar_17).xyz * scale1) + bias1));\\n  ret1_3 = max (ret1_3, ((xlat_mutableneu * \\n    (1.0 - (tmpvar_15 * tmpvar_15))\\n  ) * 2.0));\\n  float tmpvar_18;\\n  tmpvar_18 = fract((tmpvar_12 + 0.6666667));\\n  mat2 tmpvar_19;\\n  tmpvar_19[uint(0)].x = -0.5018377;\\n  tmpvar_19[uint(0)].y = 0.8649619;\\n  tmpvar_19[1u].x = -0.8649619;\\n  tmpvar_19[1u].y = -0.5018377;\\n  xlat_mutableuv2 = ((uv_1 * (\\n    (q13 * tmpvar_18)\\n   * tmpvar_19)) * aspect.yx);\\n  vec2 tmpvar_20;\\n  tmpvar_20 = fract(((xlat_mutableuv2 + 0.5) + ofs_2));\\n  xlat_mutableneu = (texture (sampler_main, tmpvar_20).xyz + ((texture (sampler_blur1, tmpvar_20).xyz * scale1) + bias1));\\n  ret1_3 = max (ret1_3, ((xlat_mutableneu * \\n    (1.0 - (tmpvar_18 * tmpvar_18))\\n  ) * 2.0));\\n  float tmpvar_21;\\n  tmpvar_21 = fract((tmpvar_12 + 1.0));\\n  mat2 tmpvar_22;\\n  tmpvar_22[uint(0)].x = 0.9999949;\\n  tmpvar_22[uint(0)].y = 0.003185092;\\n  tmpvar_22[1u].x = -0.003185092;\\n  tmpvar_22[1u].y = 0.9999949;\\n  xlat_mutableuv2 = ((uv_1 * (\\n    (q13 * tmpvar_21)\\n   * tmpvar_22)) * aspect.yx);\\n  vec2 tmpvar_23;\\n  tmpvar_23 = fract(((xlat_mutableuv2 + 0.5) + ofs_2));\\n  xlat_mutableneu = (texture (sampler_main, tmpvar_23).xyz + ((texture (sampler_blur1, tmpvar_23).xyz * scale1) + bias1));\\n  ret1_3 = max (ret1_3, ((xlat_mutableneu * \\n    (1.0 - (tmpvar_21 * tmpvar_21))\\n  ) * 2.0));\\n  vec2 tmpvar_24;\\n  tmpvar_24.x = (ret1_3.x + ret1_3.z);\\n  tmpvar_24.y = (ret1_3.x - ret1_3.y);\\n  vec4 tmpvar_25;\\n  tmpvar_25.w = 1.0;\\n  tmpvar_25.xyz = ((ret1_3 + (\\n    ((bass_att * 0.004) / sqrt(dot (uv_1, uv_1)))\\n   * roam_sin).xyz) + ((2.0 * \\n    (bass_att * ((texture (sampler_blur1, fract(\\n      (xlat_mutablerss + (tmpvar_24 / 2.0))\\n    )).xyz * scale1) + bias1).zxy)\\n  ) * clamp (\\n    (1.0 - (ret1_3 * 4.0))\\n  , 0.0, 1.0)));\\n  ret = tmpvar_25.xyz;\\n }"}')},8180:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.980001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"wave_mode":4,"additivewave":1,"wave_dots":1,"modwavealphabyvolume":1,"darken":1,"wave_a":0.33064,"wave_scale":0.897961,"wave_smoothing":0.108,"wave_mystery":0.1,"modwavealphastart":0.72,"modwavealphaend":1.28,"warpanimspeed":1.4595,"warpscale":2.0067,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0.5,"wave_b":0.5,"wave_y":0.54,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0.26,"mv_x":24.799994,"mv_dy":0.16,"mv_l":1.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"sides":3,"rad":0.312746,"tex_zoom":0.179142,"r":0.82,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"xy=0.5+rand_frame;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"samples":352,"usedots":1,"additive":1,"scaling":0.038558,"smoothing":0.2,"g":0},"init_eqs_eel":"","frame_eqs_eel":"q1=bass_att;","point_eqs_eel":"r = abs (sin (frame /38));\\ng = 0.5*abs (cos (frame /45));\\nb = 0.5*abs (sin (frame / 133));\\na = 0.3;\\nt02 = t02 + q1/10;\\nratio = sin (frame/49);\\n\\nampl = 0.01+0.4*sqr(sin ((frame ) / 18)* cos (frame / 123));\\n\\nx1 = (r-0.5)/15 +0.5 + ampl* sin (sample*6.28);\\ny1 = (b-0.5)/15+0.5 + ampl* cos (sample*6.28);\\n\\nx =  x1+1*0.2*(ampl+ratio )*sin ( sample*6.28 * ratio*7.3);\\ny =  y1+1*0.2*(ampl+ratio )*cos ( sample*6.28*6);\\n"},{"baseVals":{"samples":15,"scaling":2.063781,"smoothing":0.8,"r":0.8,"g":0,"b":0.6,"a":0.9,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"samples":112,"additive":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"clear = 0.5;","frame_eqs_eel":"dec_med = pow (0.96, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .2+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %4;\\nindex2 = (index2 + is_beat*bnot(index))%8;\\nindex3 = (index3 + is_beat*bnot(index)*bnot(index2))%3;\\n\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass + mid + treb;\\n\\n//k1 =  is_beat*bnot(index)*bnot(index2);\\n\\nk1 =  is_beat*equal(index,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\np3 = dec_med * p3+ (1-dec_med)*p2;\\nrott = p3*3.1416/4;\\n\\nrot1 = rot1 + q26;\\nq25 = .01*rot1;\\n\\nq27 = 8-index;\\nq28 = index3;\\n\\ndx1 = dec_med*dx1 + (1-dec_med)*bnot(index2);\\nq29 = dx1;\\nmonitor = q29;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\n\\nq5 = 1.5*cos(time/9);\\nq6 = .5*sin(time/7);\\n\\nclear = clear *dec_med + 1-dec_med;\\nq32 = clear;\\n\\nmov = bnot(q24)*movex + (rand(100)/100-50)*q2;\\nmovex = movex + .2/fps *q2;\\nq18 = movex;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 uv6_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = ((uv - 0.5) * aspect.xy);\\n  float tmpvar_3;\\n  tmpvar_3 = (rand_frame * 64.0).x;\\n  uv6_1 = (0.5 * cos((\\n    ((tmpvar_2 * mat2(0.7, -0.7, 0.7, 0.7)) * 17.0)\\n   + \\n    (rand_frame * 6.0)\\n  .xy)));\\n  float x_4;\\n  x_4 = (uv6_1.x + uv6_1.y);\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = ((0.147 * (\\n    (texture (sampler_main, (uv + clamp ((\\n      (sin(tmpvar_3) / cos(tmpvar_3))\\n     * \\n      normalize(tmpvar_2)\\n    ), vec2(-8.0, -8.0), vec2(8.0, 8.0)))).xyz + (0.15 * (vec3((0.01 / \\n      sqrt((x_4 * x_4))\\n    )) * roam_cos.xyz)))\\n   - 0.02)) + ((0.85 * \\n    (texture (sampler_main, uv_orig).xyz - 0.002)\\n  ) * q32));\\n  ret = tmpvar_5.xyz;\\n }","comp":"vec2 xlat_mutabledz;\\nvec3 xlat_mutableret1;\\nvec2 xlat_mutableuv3;\\nvec2 xlat_mutableuv4;\\n shader_body { \\n  vec2 uv_1;\\n  float inten_2;\\n  float dist_3;\\n  vec3 ret_4;\\n  uv_1 = (uv - 0.5);\\n  float tmpvar_5;\\n  tmpvar_5 = (time / 2.0);\\n  dist_3 = (1.0 - fract(tmpvar_5));\\n  inten_2 = ((sqrt(dist_3) * (1.0 - dist_3)) * 2.0);\\n  vec2 tmpvar_6;\\n  tmpvar_6.y = 0.4;\\n  tmpvar_6.x = q18;\\n  xlat_mutableuv3 = (((2.0 * uv_1) * dist_3) + tmpvar_6);\\n  vec2 tmpvar_7;\\n  tmpvar_7.y = 0.0;\\n  tmpvar_7.x = texsize.z;\\n  vec2 tmpvar_8;\\n  tmpvar_8.y = 0.0;\\n  tmpvar_8.x = texsize.z;\\n  xlat_mutabledz.x = (inten_2 * dot ((texture (sampler_main, \\n    (xlat_mutableuv3 + tmpvar_7)\\n  ).xyz - texture (sampler_main, \\n    (xlat_mutableuv3 - tmpvar_8)\\n  ).xyz), vec3(0.32, 0.49, 0.29)));\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = 0.0;\\n  tmpvar_9.y = texsize.w;\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = 0.0;\\n  tmpvar_10.y = texsize.w;\\n  xlat_mutabledz.y = (inten_2 * dot ((texture (sampler_main, \\n    (xlat_mutableuv3 + tmpvar_9)\\n  ).xyz - texture (sampler_main, \\n    (xlat_mutableuv3 - tmpvar_10)\\n  ).xyz), vec3(0.32, 0.49, 0.29)));\\n  xlat_mutableret1 = max (vec3(0.0, 0.0, 0.0), (texture (sampler_main, xlat_mutableuv3).xyz * inten_2));\\n  dist_3 = (1.0 - fract((0.3333333 + tmpvar_5)));\\n  inten_2 = ((sqrt(dist_3) * (1.0 - dist_3)) * 2.0);\\n  vec2 tmpvar_11;\\n  tmpvar_11.y = 0.4;\\n  tmpvar_11.x = q18;\\n  xlat_mutableuv3 = (((2.0 * uv_1) * dist_3) + tmpvar_11);\\n  vec2 tmpvar_12;\\n  tmpvar_12.y = 0.0;\\n  tmpvar_12.x = texsize.z;\\n  vec2 tmpvar_13;\\n  tmpvar_13.y = 0.0;\\n  tmpvar_13.x = texsize.z;\\n  xlat_mutabledz.x = (xlat_mutabledz.x + (inten_2 * dot (\\n    (texture (sampler_main, (xlat_mutableuv3 + tmpvar_12)).xyz - texture (sampler_main, (xlat_mutableuv3 - tmpvar_13)).xyz)\\n  , vec3(0.32, 0.49, 0.29))));\\n  vec2 tmpvar_14;\\n  tmpvar_14.x = 0.0;\\n  tmpvar_14.y = texsize.w;\\n  vec2 tmpvar_15;\\n  tmpvar_15.x = 0.0;\\n  tmpvar_15.y = texsize.w;\\n  xlat_mutabledz.y = (xlat_mutabledz.y + (inten_2 * dot (\\n    (texture (sampler_main, (xlat_mutableuv3 + tmpvar_14)).xyz - texture (sampler_main, (xlat_mutableuv3 - tmpvar_15)).xyz)\\n  , vec3(0.32, 0.49, 0.29))));\\n  xlat_mutableret1 = max (xlat_mutableret1, (texture (sampler_main, xlat_mutableuv3).xyz * inten_2));\\n  dist_3 = (1.0 - fract((0.6666667 + tmpvar_5)));\\n  inten_2 = ((sqrt(dist_3) * (1.0 - dist_3)) * 2.0);\\n  vec2 tmpvar_16;\\n  tmpvar_16.y = 0.4;\\n  tmpvar_16.x = q18;\\n  xlat_mutableuv3 = (((2.0 * uv_1) * dist_3) + tmpvar_16);\\n  vec2 tmpvar_17;\\n  tmpvar_17.y = 0.0;\\n  tmpvar_17.x = texsize.z;\\n  vec2 tmpvar_18;\\n  tmpvar_18.y = 0.0;\\n  tmpvar_18.x = texsize.z;\\n  xlat_mutabledz.x = (xlat_mutabledz.x + (inten_2 * dot (\\n    (texture (sampler_main, (xlat_mutableuv3 + tmpvar_17)).xyz - texture (sampler_main, (xlat_mutableuv3 - tmpvar_18)).xyz)\\n  , vec3(0.32, 0.49, 0.29))));\\n  vec2 tmpvar_19;\\n  tmpvar_19.x = 0.0;\\n  tmpvar_19.y = texsize.w;\\n  vec2 tmpvar_20;\\n  tmpvar_20.x = 0.0;\\n  tmpvar_20.y = texsize.w;\\n  xlat_mutabledz.y = (xlat_mutabledz.y + (inten_2 * dot (\\n    (texture (sampler_main, (xlat_mutableuv3 + tmpvar_19)).xyz - texture (sampler_main, (xlat_mutableuv3 - tmpvar_20)).xyz)\\n  , vec3(0.32, 0.49, 0.29))));\\n  xlat_mutableret1 = max (xlat_mutableret1, (texture (sampler_main, xlat_mutableuv3).xyz * inten_2));\\n  dist_3 = (1.0 - fract((1.0 + tmpvar_5)));\\n  inten_2 = ((sqrt(dist_3) * (1.0 - dist_3)) * 2.0);\\n  vec2 tmpvar_21;\\n  tmpvar_21.y = 0.4;\\n  tmpvar_21.x = q18;\\n  xlat_mutableuv3 = (((2.0 * uv_1) * dist_3) + tmpvar_21);\\n  vec2 tmpvar_22;\\n  tmpvar_22.y = 0.0;\\n  tmpvar_22.x = texsize.z;\\n  vec2 tmpvar_23;\\n  tmpvar_23.y = 0.0;\\n  tmpvar_23.x = texsize.z;\\n  xlat_mutabledz.x = (xlat_mutabledz.x + (inten_2 * dot (\\n    (texture (sampler_main, (xlat_mutableuv3 + tmpvar_22)).xyz - texture (sampler_main, (xlat_mutableuv3 - tmpvar_23)).xyz)\\n  , vec3(0.32, 0.49, 0.29))));\\n  vec2 tmpvar_24;\\n  tmpvar_24.x = 0.0;\\n  tmpvar_24.y = texsize.w;\\n  vec2 tmpvar_25;\\n  tmpvar_25.x = 0.0;\\n  tmpvar_25.y = texsize.w;\\n  xlat_mutabledz.y = (xlat_mutabledz.y + (inten_2 * dot (\\n    (texture (sampler_main, (xlat_mutableuv3 + tmpvar_24)).xyz - texture (sampler_main, (xlat_mutableuv3 - tmpvar_25)).xyz)\\n  , vec3(0.32, 0.49, 0.29))));\\n  xlat_mutableret1 = max (xlat_mutableret1, (texture (sampler_main, xlat_mutableuv3).xyz * inten_2));\\n  uv_1 = (uv_1 + xlat_mutabledz);\\n  vec2 tmpvar_26;\\n  tmpvar_26.x = q5;\\n  tmpvar_26.y = q6;\\n  xlat_mutableuv4 = (uv_1 - (0.4 * tmpvar_26));\\n  float tmpvar_27;\\n  tmpvar_27 = (0.1 * clamp ((1.0/(\\n    (abs(uv_1.y) + 0.1)\\n  )), 0.0, 12.0));\\n  vec2 tmpvar_28;\\n  tmpvar_28.x = (uv_1.x * tmpvar_27);\\n  tmpvar_28.y = tmpvar_27;\\n  vec3 tmpvar_29;\\n  tmpvar_29.xy = vec2(0.0, 0.0);\\n  tmpvar_29.z = clamp ((1.0 - (3.0 * uv_1.y)), 0.0, 1.0);\\n  ret_4 = (vec3(0.0, 0.1, 0.1) + (0.1 * tmpvar_29));\\n  ret_4 = (ret_4 + (vec3(dot (texture (sampler_noise_hq, \\n    (tmpvar_28 + (0.1 * time))\\n  ), vec4(0.32, 0.49, 0.29, 0.0))) * (\\n    (clamp ((1.0 - (12.0 * uv_1.y)), 0.0, 1.0) * 0.1)\\n   / \\n    (0.05 + sqrt(dot (xlat_mutableuv4, xlat_mutableuv4)))\\n  )));\\n  ret_4 = (ret_4 + ((0.4 * xlat_mutableret1) + (xlat_mutableret1 * q22)));\\n  vec4 tmpvar_30;\\n  tmpvar_30.w = 1.0;\\n  tmpvar_30.xyz = ret_4;\\n  ret = tmpvar_30.xyz;\\n }"}')},75:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.780001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.958178,"wave_smoothing":0.45,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.4595,"warpscale":2.0067,"zoom":0.9999,"warp":0.01,"sx":0.9999,"ob_size":0.06,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0.26,"mv_x":25.599995,"mv_y":9.600006,"mv_l":0,"mv_r":0.4999,"mv_g":0.4999,"mv_b":0.4999,"mv_a":0,"b1x":0.6999,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"rad":0.040123,"tex_ang":1.00531,"tex_zoom":1.531168,"r":0.5,"g":1,"b":0.9,"a":0.5,"r2":0.83,"g2":0.93,"b2":0.8,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = .5+.4*sin(time/3);\\ny = .5+.4*sin(time/4);"},{"baseVals":{"enabled":1,"sides":100,"additive":1,"x":0.26,"y":0.2,"rad":0.393173,"tex_zoom":0.9355,"r":0,"g":0.55,"b":0.5,"g2":0.4,"b2":0.4,"a2":0.07,"border_r":0.3,"border_g":0.7,"border_b":0.8,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"trig = q24;\\n\\nx0 = x0*bnot(trig) + trig*(.5+ rand(100)/200); \\ny0 = y0*bnot(trig) + trig*(.5+ rand(100)/200); \\n\\n\\nx0 = x0 + .3*q1/fps;\\ny0 = y0 + .3*q2/fps;\\n\\nx0 = x0 - int(x0);\\ny0 = y0 - int(y0);\\n\\nx = x0; y = y0;\\nrad0 = rad0*bnot(trig) + trig*(.01+rand(100)/800);\\nrad = rad0;\\n\\n\\nr0 = bnot(trig)*r0 + trig * rand(10)/10;\\ng0 = bnot(trig)*g0 + trig * rand(10)/10;\\nb0 = bnot(trig)*b0 + trig * rand(10)/10;\\n\\nr = r0; b = b0; g = g0;\\nr2 = b; b2 = g; g2 = r;\\na= .4; a2 = .0; "},{"baseVals":{"enabled":1,"sides":44,"additive":1,"x":0.503,"rad":0.038857,"tex_zoom":0.609857,"g":0.1,"a":0.9,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"trig = q24;\\n\\nx0 = x0*bnot(trig) + trig*(.5+ rand(100)/200); \\ny0 = y0*bnot(trig) + trig*(.5+ rand(100)/200); \\n\\n\\nx0 = x0 + .3*q1/fps;\\ny0 = y0 + .3*q2/fps;\\n\\nx0 = x0 - int(x0);\\ny0 = y0 - int(y0);\\n\\nx = x0; y = y0;\\nrad0 = rad0*bnot(trig) + trig*(.04+rand(100)/800);\\nrad = rad0;\\n\\n\\nr0 = bnot(trig)*r0 + trig * rand(10)/10;\\ng0 = bnot(trig)*g0 + trig * rand(10)/10;\\nb0 = bnot(trig)*b0 + trig * rand(10)/10;\\n\\nr = r0; b = b0; g = g0;\\nr2 = 0; b2 = 0; g2 = 0;\\na= .4; a2 = .0; "},{"baseVals":{"sides":100,"rad":0.01,"tex_zoom":0.499805,"r":0,"g2":0,"border_r":0.2,"border_g":0.7,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"rad = q2+.02\\n;"}],"waves":[{"baseVals":{"samples":282,"sep":20,"usedots":1,"thick":1,"additive":1,"scaling":3.915805,"smoothing":0.1,"r":0.2,"g":0.3,"a":0.6,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t2 = t2 + bass_att;","point_eqs_eel":"\\nx = .5 + sample*((100*sample)%2-.5);\\nk1 = (100*sample)%4;\\nx = sample ;\\n\\nval = value1;\\ny = val * (.25-(sample-.5)*(sample-.5)) + .5;\\n\\nk1 = (10*bass_att)%4;\\n\\nr = .8; g = .8; b = 1;\\na = bnot(k1); a=.1;"},{"baseVals":{"usedots":1,"thick":1,"scaling":0.891519,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"xi = rand(100)/100;\\nyi = rand(100)/100;\\n\\nx = xi; y = yi;\\n\\na = q21/15;"},{"baseVals":{"thick":1,"scaling":0.891519,"smoothing":0.82,"r":0,"g":0.2,"b":0,"enabled":0},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"index4 = rand(2);\\nindex3 = rand(4);\\noo = 0;","frame_eqs_eel":"dec_med = pow (0.9, 30/fps);\\ndec_slow = pow (0.96, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %4;\\nindex2 = (index2 + is_beat*bnot(index))%6;\\nindex3 = (index3 + is_beat*bnot(index)*bnot(index2))%4;\\n\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass + mid + treb;\\n\\nready = is_beat * bnot(ready) + bnot(is_beat2)*ready;\\nis_beat2 = ready * above (time, t0+.2);\\nq19 = is_beat2;\\n\\n//k1 =  is_beat*bnot(index)*bnot(index2);\\n\\nk1 =  is_beat*equal(index,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.14159265359/4;\\n\\nq27 = index+1;\\nq28 = index2;\\nq29 = index3*4+1;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\nmovez = movez + .01*30/fps ;\\nq31 = movez;\\n\\nmovex = movex +.01*30/fps * q2;\\nq32 = movex;\\n//q32 = .5 + .02*sin(time/5);\\n\\n\\nuu = dec_slow*uu + (1-dec_slow)*equal(index2,0);\\nrot = .1*uu;\\n\\noo = dec_slow*oo + (1-dec_slow)*below(index2,3);\\nmv_a =.1* oo;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = ((uv * texsize.xy) * (0.01 * q28));\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = (cos((tmpvar_1.y * q1)) * sin(-(tmpvar_1.y)));\\n  tmpvar_2.y = (sin(tmpvar_1.x) * cos((tmpvar_1.y * q2)));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ((texture (sampler_main, (uv - \\n    ((tmpvar_2 * texsize.zw) * 18.0)\\n  )).xyz * 0.99) - 0.01);\\n  ret = tmpvar_3.xyz;\\n }","comp":"vec2 xlat_mutabledz;\\nvec3 xlat_mutableret1;\\nvec2 xlat_mutableuv3;\\nvec2 xlat_mutableuv4;\\n shader_body { \\n  vec2 uv_1;\\n  float inten_2;\\n  float dist_3;\\n  vec3 ret_4;\\n  uv_1 = (uv - 0.5);\\n  float tmpvar_5;\\n  tmpvar_5 = (time / 4.0);\\n  dist_3 = (1.0 - fract(tmpvar_5));\\n  inten_2 = ((sqrt(dist_3) * (1.0 - dist_3)) * 2.0);\\n  vec2 tmpvar_6;\\n  tmpvar_6.y = 0.0;\\n  float tmpvar_7;\\n  tmpvar_7 = (time / 8.0);\\n  tmpvar_6.x = tmpvar_7;\\n  xlat_mutableuv3 = (((\\n    (2.0 * uv_1)\\n   * dist_3) + 0.4) + tmpvar_6);\\n  vec2 tmpvar_8;\\n  tmpvar_8.y = 0.0;\\n  tmpvar_8.x = texsize.z;\\n  vec2 tmpvar_9;\\n  tmpvar_9.y = 0.0;\\n  tmpvar_9.x = texsize.z;\\n  xlat_mutabledz.x = (inten_2 * dot ((texture (sampler_main, \\n    (xlat_mutableuv3 + tmpvar_8)\\n  ).xyz - texture (sampler_main, \\n    (xlat_mutableuv3 - tmpvar_9)\\n  ).xyz), vec3(0.32, 0.49, 0.29)));\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = 0.0;\\n  tmpvar_10.y = texsize.w;\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = 0.0;\\n  tmpvar_11.y = texsize.w;\\n  xlat_mutabledz.y = (inten_2 * dot ((texture (sampler_main, \\n    (xlat_mutableuv3 + tmpvar_10)\\n  ).xyz - texture (sampler_main, \\n    (xlat_mutableuv3 - tmpvar_11)\\n  ).xyz), vec3(0.32, 0.49, 0.29)));\\n  xlat_mutableret1 = max (vec3(0.0, 0.0, 0.0), (texture (sampler_main, xlat_mutableuv3).xyz * inten_2));\\n  dist_3 = (1.0 - fract((0.2 + tmpvar_5)));\\n  inten_2 = ((sqrt(dist_3) * (1.0 - dist_3)) * 2.0);\\n  vec2 tmpvar_12;\\n  tmpvar_12.y = 0.0;\\n  tmpvar_12.x = tmpvar_7;\\n  xlat_mutableuv3 = (((\\n    (2.0 * uv_1)\\n   * dist_3) + 0.4) + tmpvar_12);\\n  vec2 tmpvar_13;\\n  tmpvar_13.y = 0.0;\\n  tmpvar_13.x = texsize.z;\\n  vec2 tmpvar_14;\\n  tmpvar_14.y = 0.0;\\n  tmpvar_14.x = texsize.z;\\n  xlat_mutabledz.x = (xlat_mutabledz.x + (inten_2 * dot (\\n    (texture (sampler_main, (xlat_mutableuv3 + tmpvar_13)).xyz - texture (sampler_main, (xlat_mutableuv3 - tmpvar_14)).xyz)\\n  , vec3(0.32, 0.49, 0.29))));\\n  vec2 tmpvar_15;\\n  tmpvar_15.x = 0.0;\\n  tmpvar_15.y = texsize.w;\\n  vec2 tmpvar_16;\\n  tmpvar_16.x = 0.0;\\n  tmpvar_16.y = texsize.w;\\n  xlat_mutabledz.y = (xlat_mutabledz.y + (inten_2 * dot (\\n    (texture (sampler_main, (xlat_mutableuv3 + tmpvar_15)).xyz - texture (sampler_main, (xlat_mutableuv3 - tmpvar_16)).xyz)\\n  , vec3(0.32, 0.49, 0.29))));\\n  xlat_mutableret1 = max (xlat_mutableret1, (texture (sampler_main, xlat_mutableuv3).xyz * inten_2));\\n  dist_3 = (1.0 - fract((0.4 + tmpvar_5)));\\n  inten_2 = ((sqrt(dist_3) * (1.0 - dist_3)) * 2.0);\\n  vec2 tmpvar_17;\\n  tmpvar_17.y = 0.0;\\n  tmpvar_17.x = tmpvar_7;\\n  xlat_mutableuv3 = (((\\n    (2.0 * uv_1)\\n   * dist_3) + 0.4) + tmpvar_17);\\n  vec2 tmpvar_18;\\n  tmpvar_18.y = 0.0;\\n  tmpvar_18.x = texsize.z;\\n  vec2 tmpvar_19;\\n  tmpvar_19.y = 0.0;\\n  tmpvar_19.x = texsize.z;\\n  xlat_mutabledz.x = (xlat_mutabledz.x + (inten_2 * dot (\\n    (texture (sampler_main, (xlat_mutableuv3 + tmpvar_18)).xyz - texture (sampler_main, (xlat_mutableuv3 - tmpvar_19)).xyz)\\n  , vec3(0.32, 0.49, 0.29))));\\n  vec2 tmpvar_20;\\n  tmpvar_20.x = 0.0;\\n  tmpvar_20.y = texsize.w;\\n  vec2 tmpvar_21;\\n  tmpvar_21.x = 0.0;\\n  tmpvar_21.y = texsize.w;\\n  xlat_mutabledz.y = (xlat_mutabledz.y + (inten_2 * dot (\\n    (texture (sampler_main, (xlat_mutableuv3 + tmpvar_20)).xyz - texture (sampler_main, (xlat_mutableuv3 - tmpvar_21)).xyz)\\n  , vec3(0.32, 0.49, 0.29))));\\n  xlat_mutableret1 = max (xlat_mutableret1, (texture (sampler_main, xlat_mutableuv3).xyz * inten_2));\\n  dist_3 = (1.0 - fract((0.6 + tmpvar_5)));\\n  inten_2 = ((sqrt(dist_3) * (1.0 - dist_3)) * 2.0);\\n  vec2 tmpvar_22;\\n  tmpvar_22.y = 0.0;\\n  tmpvar_22.x = tmpvar_7;\\n  xlat_mutableuv3 = (((\\n    (2.0 * uv_1)\\n   * dist_3) + 0.4) + tmpvar_22);\\n  vec2 tmpvar_23;\\n  tmpvar_23.y = 0.0;\\n  tmpvar_23.x = texsize.z;\\n  vec2 tmpvar_24;\\n  tmpvar_24.y = 0.0;\\n  tmpvar_24.x = texsize.z;\\n  xlat_mutabledz.x = (xlat_mutabledz.x + (inten_2 * dot (\\n    (texture (sampler_main, (xlat_mutableuv3 + tmpvar_23)).xyz - texture (sampler_main, (xlat_mutableuv3 - tmpvar_24)).xyz)\\n  , vec3(0.32, 0.49, 0.29))));\\n  vec2 tmpvar_25;\\n  tmpvar_25.x = 0.0;\\n  tmpvar_25.y = texsize.w;\\n  vec2 tmpvar_26;\\n  tmpvar_26.x = 0.0;\\n  tmpvar_26.y = texsize.w;\\n  xlat_mutabledz.y = (xlat_mutabledz.y + (inten_2 * dot (\\n    (texture (sampler_main, (xlat_mutableuv3 + tmpvar_25)).xyz - texture (sampler_main, (xlat_mutableuv3 - tmpvar_26)).xyz)\\n  , vec3(0.32, 0.49, 0.29))));\\n  xlat_mutableret1 = max (xlat_mutableret1, (texture (sampler_main, xlat_mutableuv3).xyz * inten_2));\\n  uv_1 = (uv_1 + (xlat_mutabledz * 14.0));\\n  xlat_mutableuv4 = (uv_1 - vec2(0.2, -0.1));\\n  float tmpvar_27;\\n  tmpvar_27 = (0.5 * clamp ((1.0/(\\n    (abs(uv_1.y) + 0.1)\\n  )), 0.0, 12.0));\\n  vec2 tmpvar_28;\\n  tmpvar_28.x = (uv_1.x * tmpvar_27);\\n  tmpvar_28.y = tmpvar_27;\\n  vec3 tmpvar_29;\\n  tmpvar_29.xy = vec2(0.0, 0.0);\\n  tmpvar_29.z = clamp ((1.0 - (3.0 * uv_1.y)), 0.0, 1.0);\\n  ret_4 = (vec3(0.0, 0.1, 0.1) + (0.1 * tmpvar_29));\\n  ret_4 = (ret_4 + (vec3(dot (texture (sampler_noise_hq, \\n    (tmpvar_28 + (0.04 * time))\\n  ), vec4(0.32, 0.49, 0.29, 0.0))) * (\\n    (clamp ((1.0 - (12.0 * uv_1.y)), 0.0, 1.0) * 0.1)\\n   / \\n    (0.03 + sqrt(dot (xlat_mutableuv4, xlat_mutableuv4)))\\n  )));\\n  ret_4 = (ret_4 + ((0.4 * xlat_mutableret1) + (xlat_mutableret1 * q22)));\\n  vec4 tmpvar_30;\\n  tmpvar_30.w = 1.0;\\n  tmpvar_30.xyz = ret_4;\\n  ret = tmpvar_30.xyz;\\n }"}')},1618:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":2,"gammaadj":1.980001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"wave_mode":5,"wave_dots":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":1.169162,"wave_smoothing":0,"wave_mystery":0.08,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.4595,"warpscale":2.0067,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0.99,"ob_size":0.015,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0,"mv_r":0.4999,"mv_g":0.4999,"mv_b":0.4999,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":53,"rad":0.024396,"tex_ang":1.00531,"tex_zoom":1.531168,"r":0.2,"g":0.7,"g2":0,"a2":0.2,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"a = min(q22/4,1); a2 = 1;\\n\\n\\nr0 = bnot(q24)*r0 + q24 * rand(10)/10;\\nb0 = bnot(q24)*b0 + q24 * rand(10)/10;\\ng0 = bnot(q24)*g0 + q24 * rand(10)/10;\\nrad = q22/40;\\nr = r0; b = b0; g = g0;\\nr2 = 0; b2 = 0; g2 = 0;"},{"baseVals":{"enabled":1,"sides":44,"textured":1,"x":0.7,"rad":0.2173,"tex_ang":0.628319,"tex_zoom":1.633192,"g":1,"b":1,"r2":0.99,"g2":0.99,"b2":1,"a2":1,"border_r":0.5,"border_g":0.5,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"textured = 1;\\nrot0 = rot0 + 1/fps * q1;\\n\\nposx = (1-q24)*posx + q24*(.3+rand(100)/200);\\nposy = (1-q24)*posy + q24*(.3+rand(100)/200);;\\n\\nrad0  = (1-q24)*rad0 + q24*(.05+rand(100)/300);\\nrad = rad0;\\n\\n\\nx =  posx;\\ny =  posy;\\nang = rot0;"},{"baseVals":{"enabled":1,"sides":63,"x":0.503,"rad":0.038857,"tex_zoom":2.2233,"g":0.1,"r2":1,"b2":1,"a2":0.7,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"textured = 1;\\nrot0 = rot0 + .1/fps * q2;\\n\\n\\nposx = (1-q24)*posx + q24*(.3+rand(100)/200);\\nposy = (1-q24)*posy + q24*(.3+rand(100)/200);;\\n\\nrad0  = (1-q24)*rad0 + q24*(.05+rand(100)/400);\\nrad = rad0;\\n\\n\\nx =  posx+q26;\\ny =  posy;\\nang = rot0;"},{"baseVals":{"sides":63,"textured":1,"y":1,"rad":0.548217,"tex_zoom":0.499805,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"sep":120,"usedots":1,"additive":1,"scaling":0.891519,"smoothing":0.82,"a":0.6,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t2 = t2 + bass_att;","point_eqs_eel":"k1 = (sample*100)%8;\\nk2 = bnot (k1);\\nxi = value1*k2 + xi*(1-k2);\\nyi = value2*(1-k2) + yi*k2;\\n\\ndx = dx*.99 + xi;\\ndy = dy*.99 + yi;\\n\\nx = .5 + xi/2;\\ny = .5 + yi/2;\\n\\na = q22/8; \\na = min(a,.4);"},{"baseVals":{"thick":1,"scaling":0.891519,"smoothing":0.82,"a":0.02,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.891519,"smoothing":0.82,"r":0,"g":0.2,"b":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"step = 0;","frame_eqs_eel":"dec_med = pow (0.7, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, -2+avg+peak) * above (time, t0+.1);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %16;\\nindex2 = (index2 + is_beat*bnot(index))%2;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass_att + mid_att + treb_att;\\nq27 = index + 1;\\nq28 = index2;\\n\\nq29 = ((index%2)-.5)*2;\\n\\nk1 =  is_beat*equal(index%2,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.1416/8;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\n//ds = max ((q26-.2),0);\\n//step = step + ds/10;\\n\\nstep = step + q24 ;\\n\\np3 = p3*dec_slow + (1-dec_slow) * step;\\nq30 = step;\\n\\np4 = dec_slow*p4 + (1-dec_slow)*q27;\\nq31 = p4;\\n\\nq12 = time -t0;\\nmonitor = q12;\\n\\n\\n\\nzoom = 1;\\nrot = -0 ;\\ndx = .00;","pixel_eqs_eel":"zoom = 1.3;","warp":" shader_body { \\n  vec2 uv_1;\\n  vec2 uv6_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = ((uv - 0.5) * aspect.xy);\\n  float tmpvar_4;\\n  tmpvar_4 = (((q29 * 2.0) * sqrt(\\n    dot (tmpvar_3, tmpvar_3)\\n  )) + (rand_frame * 64.0)).x;\\n  uv_1 = (uv + (clamp (\\n    ((sin(tmpvar_4) / cos(tmpvar_4)) * normalize(tmpvar_3))\\n  , vec2(-2.0, -2.0), vec2(2.0, 2.0)) / 20.0));\\n  uv6_2 = (0.4 * sin((tmpvar_3 * 22.0)));\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = (((q24 * \\n    (((texture (sampler_main, uv_1).xyz - (\\n      ((texture (sampler_blur1, fract(uv_1)).xyz * scale1) + bias1)\\n     * 0.04)) + (0.15 * (vec3(\\n      (0.1 / sqrt(dot (uv6_2, uv6_2)))\\n    ) * roam_cos.xyz))) - 0.02)\\n  ) * 0.98) + ((1.0 - q24) * texture (sampler_main, uv_orig).xyz));\\n  ret = tmpvar_5.xyz;\\n }","comp":"vec3 xlat_mutablenoise;\\nvec2 xlat_mutablers;\\n shader_body { \\n  xlat_mutablers.x = ((1.0/(rad)) + (time * 4.0));\\n  xlat_mutablers.y = ang;\\n  vec4 tmpvar_1;\\n  tmpvar_1 = texture (sampler_pw_noise_lq, ((xlat_mutablers / 3.0) / q27));\\n  xlat_mutablenoise = (tmpvar_1.xyz * vec3(greaterThanEqual (tmpvar_1.xyz, vec3(0.8, 0.8, 0.8))));\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = (((1.0 + q22) * texture (sampler_main, (uv + \\n    (xlat_mutablenoise.xy * xlat_mutablers)\\n  )).xyz) - (0.2 * xlat_mutablenoise));\\n  ret = tmpvar_2.xyz;\\n }"}')},6378:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.980001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"wave_mode":4,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.5274,"wave_smoothing":0.45,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.4595,"warpscale":2.0067,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.8,"wave_g":0.49,"ob_size":0,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.4999,"mv_g":0.4999,"mv_b":0.4999,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"additive":1,"rad":0.048958,"tex_ang":1.00531,"tex_zoom":1.531168,"r":0,"g":1,"b":1,"r2":0.83,"g2":0.93,"b2":0.8,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"\\ntrel = time/3;\\n\\nx = .5+sin(trel*2);\\ny = .5+cos(trel*1.3);\\n\\n\\n\\n\\nrad = .1;\\na = .8;"},{"baseVals":{"thickoutline":1,"textured":1,"x":0.26,"y":0.2,"rad":0.393173,"tex_zoom":0.9355,"r":0,"g":0.55,"b":0.5,"g2":0.4,"b2":0.4,"a2":0.07,"border_r":0.3,"border_g":0.7,"border_b":0.8,"border_a":0.4,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"tex_zoom = q27;"},{"baseVals":{"sides":44,"x":0.503,"rad":0.038857,"tex_zoom":0.609857,"g":0.1,"a":0.9,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = rand(50)/50;\\ny = .5;\\n\\nr = .4;\\ng = .6;\\nb = 1;\\nr2 = r;\\ng2 = g;\\nb2 = b;\\n\\na2 = min(q21/2 ,1)/2;\\n\\na = 0;\\n\\nrad = a2 * (.1+abs(x-.5))/2 ;"},{"baseVals":{"thickoutline":1,"textured":1,"x":0.26,"y":0.76,"rad":0.39478,"tex_zoom":0.499805,"g":1,"b":1,"r2":1,"b2":1,"a2":0.8,"border_r":0.2,"border_g":0.7,"border_b":0.5,"border_a":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"tex_zoom = q27/2;"}],"waves":[{"baseVals":{"samples":282,"sep":20,"thick":1,"additive":1,"scaling":7.858,"smoothing":0.1,"r":0.2,"g":0.3,"a":0.6,"enabled":0},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"t2 = t2 + bass_att;","point_eqs_eel":"\\nx = sample;\\ny = value1 * rand(50)/100 * abs(sample-.5)+ .478;\\n\\na = q26/4 * (.2 + abs(sample-.5)); "},{"baseVals":{"usedots":1,"thick":1,"scaling":0.891519,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"xi = rand(100)/100;\\nyi = rand(100)/100;\\n\\nx = xi; y = yi;\\n\\na = q21/15;"},{"baseVals":{"thick":1,"scaling":0.891519,"smoothing":0.82,"r":0,"g":0.2,"b":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"dec_med = pow (0.9, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb); \\n\\nbeat = bass+mid+treb;\\nbeat = beat*beat;\\n\\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .3*avg+peak) * above (time, t0+.1);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %32;\\nindexa = (indexa + is_beat) %5;\\nindex2 = (index2 + is_beat*bnot(index))%2;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass_att + mid_att + treb_att + 1;\\nq27 = index + 1;\\nq28 = -index2 + indexa/5;\\nq29 = index2;\\n\\nk1 =  is_beat*equal(index%16,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrot1 = p2 * 3.1416/2;\\nq8 = cos(rot1);\\n\\nrott = rott + 1/fps * sin(time/3.5);\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\ntrel = trel + .5/fps * (1);\\nq5 = cos(time/6+trel)/3;\\nq6 = sin(trel)/16+.4;\\nq7 = 1.02+.03*sin(rott/3.7);\\n\\nran = ran * (1-q24) + rand(100)/100;\\nq10 = ran -.5;\\n\\n\\nzoom = 1.0;\\nwarp = 0;","pixel_eqs_eel":"","warp":"float xlat_mutableq24;\\n shader_body { \\n  vec2 rs_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (uv_orig - 0.5);\\n  float theta_3;\\n  theta_3 = (q1 * ((q27 * \\n    sqrt(dot (tmpvar_2, tmpvar_2))\\n  ) + (rand_frame * 64.0)).x);\\n  rs_1 = (clamp ((\\n    (sin(theta_3) / cos(theta_3))\\n   * \\n    normalize((1.0/(tmpvar_2)))\\n  ), vec2(-4.0, -4.0), vec2(4.0, 4.0)) * cos((tmpvar_2.yx * q28)));\\n  vec2 x_4;\\n  x_4 = ((rs_1 * tmpvar_2) + 0.01);\\n  xlat_mutableq24 = (q24 + 0.03);\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = ((xlat_mutableq24 * (\\n    ((texture (sampler_main, (uv + (rs_1 / 44.0))).xyz + (vec3((0.002 / \\n      sqrt(dot (x_4, x_4))\\n    )) * roam_cos.xyz)) * 0.98)\\n   - 0.02)) + ((\\n    (1.0 - xlat_mutableq24)\\n   * texture (sampler_main, \\n    ((tmpvar_2 * q7) + 0.5)\\n  ).xyz) * 0.99));\\n  ret = tmpvar_5.xyz;\\n }","comp":"vec3 xlat_mutableret1;\\nvec2 xlat_mutablers;\\nvec2 xlat_mutablers0;\\nvec2 xlat_mutableuv2;\\n shader_body { \\n  vec2 uv_1;\\n  uv_1.x = uv.x;\\n  vec2 uv1_2;\\n  uv_1.y = ((uv.y + q5) - 0.1);\\n  vec2 tmpvar_3;\\n  tmpvar_3 = ((uv_1 - 0.5) * aspect.xy);\\n  float tmpvar_4;\\n  tmpvar_4 = (1.0/((tmpvar_3.y + (tmpvar_3.x * q1))));\\n  xlat_mutablers0.x = (tmpvar_3.x * tmpvar_4);\\n  xlat_mutablers0.y = (tmpvar_4 / 4.0);\\n  xlat_mutablers.x = xlat_mutablers0.x;\\n  xlat_mutablers.y = (xlat_mutablers0.y + (time * 2.0));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = q5;\\n  tmpvar_5.y = q6;\\n  mat2 tmpvar_6;\\n  tmpvar_6[uint(0)] = _qa.xy;\\n  tmpvar_6[1u] = _qa.zw;\\n  uv1_2 = ((tmpvar_3 + tmpvar_5) * tmpvar_6);\\n  float tmpvar_7;\\n  tmpvar_7 = clamp ((4.0 / tmpvar_4), 0.0, 1.0);\\n  xlat_mutableuv2 = ((2.0 * uv1_2) * (sqrt(\\n    dot (uv1_2, uv1_2)\\n  ) + q8));\\n  xlat_mutableuv2 = (xlat_mutableuv2 * aspect.yx);\\n  vec2 tmpvar_8;\\n  tmpvar_8 = fract(((xlat_mutableuv2 + 0.5) - (\\n    (vec3(dot (texture (sampler_pw_noise_lq, (xlat_mutablers / 40.0)), vec4(0.32, 0.49, 0.29, 0.0))) - 0.5)\\n   * tmpvar_7).xy));\\n  xlat_mutableret1 = ((texture (sampler_main, tmpvar_8) * (1.0 - tmpvar_7)).xyz + (tmpvar_7 * (\\n    (texture (sampler_blur1, tmpvar_8).xyz * scale1)\\n   + bias1)));\\n  xlat_mutableret1 = (xlat_mutableret1 * (1.0 + (\\n    (q22 / 16.0)\\n   * xlat_mutableret1)));\\n  vec4 tmpvar_9;\\n  tmpvar_9.w = 1.0;\\n  tmpvar_9.xyz = (xlat_mutableret1 + (clamp (\\n    ((texture (sampler_blur2, vec2(fract((\\n      ((xlat_mutableuv2.y / xlat_mutableuv2.x) * q10)\\n     / 3.0)))).xyz * scale2) + bias2)\\n  , 0.0, 1.0) * clamp (\\n    ((q22 / 24.0) - 0.4)\\n  , 0.0, 1.0)));\\n  ret = tmpvar_9.xyz;\\n }"}')},9556:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.980001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"wave_mode":4,"modwavealphabyvolume":1,"darken":1,"wave_a":0.002705,"wave_scale":1.291486,"wave_smoothing":0.45,"wave_mystery":0.08,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.4595,"warpscale":2.0067,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0.99,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0.11,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.4999,"mv_g":0.4999,"mv_b":0.4999,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":44,"rad":0.108525,"tex_ang":1.00531,"tex_zoom":1.531168,"g":1,"b":1,"r2":0.83,"g2":0.93,"b2":0.8,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"trig = q24 * equal(q27%4,0);\\n\\ndist = bnot(trig)*(dist+q10/fps);\\n\\nx = .5 - ( 1/(dist+1))/2;\\ny = 1-x;\\n\\nr0 = bnot(trig)*r0 + trig*rand(100)/100;\\ng0 = bnot(trig)*g0 + trig*rand(100)/100;\\nb0 = bnot(trig)*b0 + trig*rand(100)/100;\\n\\ncmax = max(max(r0,g0),b0);\\n\\nr = r0/cmax; r2 = r;\\ng = g0/cmax; g2 = g;\\nb = b0/cmax; b2 = b;\\n\\nrad = q9/(dist+1);\\n//rad = .2;\\na = 1 / (1+dist/4) ; a2 = 0;"},{"baseVals":{"enabled":1,"sides":34,"thickoutline":1,"x":0.4,"rad":2.366958,"tex_ang":3.455753,"tex_zoom":0.993053,"r":0.5,"b":1,"a":0.2,"r2":0.7,"g2":0.4,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"trig = q24 * equal(q27%4,2);\\n\\ndist = bnot(trig)*(dist+q10/fps);\\n\\nx = .5 + ( 1/(dist+1))/1.9;\\ny = 1-x;\\n\\nr0 = bnot(trig)*r0 + trig*rand(100)/100;\\ng0 = bnot(trig)*g0 + trig*rand(100)/100;\\nb0 = bnot(trig)*b0 + trig*rand(100)/100;\\n\\ncmax = max(max(r0,g0),b0);\\n\\nr = r0/cmax; r2 = r;\\ng = g0/cmax; g2 = g;\\nb = b0/cmax; b2 = b;\\n\\nrad = q9/(dist+1);\\n//rad = .2;\\na = 1 / (1+dist/4) ; a2 = 0;"},{"baseVals":{"enabled":1,"sides":44,"x":0.503,"rad":0.038857,"tex_zoom":0.609857,"g":0.1,"a":0.9,"r2":1,"b2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"trig = q24 * equal(q27%4,1);\\n\\ndist = bnot(trig)*(dist+q10/fps);\\n\\nx = .5 - ( 1/(dist+1))/1.9;\\ny = x;\\n\\nr0 = bnot(trig)*r0 + trig*rand(100)/100;\\ng0 = bnot(trig)*g0 + trig*rand(100)/100;\\nb0 = bnot(trig)*b0 + trig*rand(100)/100;\\n\\ncmax = max(max(r0,g0),b0);\\n\\nr = r0/cmax; r2 = r;\\ng = g0/cmax; g2 = g;\\nb = b0/cmax; b2 = b;\\n\\nrad = q9/(dist+1);\\n//rad = .2;\\na = 1 / (1+dist/4) ; a2 = 0;"},{"baseVals":{"enabled":1,"sides":63,"y":1,"rad":0.548217,"tex_zoom":2.223327,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"trig = q24 * equal(q27%4,3);\\n\\ndist = bnot(trig)*(dist+q10/fps);\\n\\nx = .5 + ( 1/(dist+1))/1.9;\\ny = x;\\n\\nr0 = bnot(trig)*r0 + trig*rand(100)/100;\\ng0 = bnot(trig)*g0 + trig*rand(100)/100;\\nb0 = bnot(trig)*b0 + trig*rand(100)/100;\\n\\ncmax = max(max(r0,g0),b0);\\n\\nr = r0/cmax; r2 = r;\\ng = g0/cmax; g2 = g;\\nb = b0/cmax; b2 = b;\\n\\nrad = q9/(dist+1);\\n//rad = .2;\\na = 1 / (1+dist/4) ; a2 = 0;"}],"waves":[{"baseVals":{"sep":120,"additive":1,"scaling":0.891519,"smoothing":0.82,"a":0.6,"enabled":0},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"t2 = t2 + bass_att;","point_eqs_eel":"k1 = (sample*100)%8;\\nk2 = bnot (k1);\\nxi = value1*k2 + xi*(1-k2);\\nyi = value2*(1-k2) + yi*k2;\\n\\ndx = dx*.99 + xi;\\ndy = dy*.99 + yi;\\n\\nx = .5 + xi/2;\\ny = .5 + yi/2;\\n\\na = q22/8; \\na = min(a,.4);"},{"baseVals":{"usedots":1,"scaling":0.891519,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x = sample;\\ny = 1-sample;\\na = (q24 * equal(q27%4,0));\\n"},{"baseVals":{"thick":1,"scaling":0.891519,"smoothing":0.82,"r":0,"g":0.2,"b":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"dec_med = pow (0.5, 30/fps);\\ndec_slow = pow (0.9, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .2+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %16;\\nindex2 = (index2 + is_beat*bnot(index))%12;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq24 = is_beat;\\nq26 = bass_att + mid_att + treb_att ;\\nq27 = index + 1;\\nq28 = index2;\\n\\nk1 =  is_beat*equal(index%2,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.1416/4;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\nq10 = 20; //speed shot\\nq9 = .8; //brightness shot\\n\\n\\n\\n//***********************\\ntrig1= q24*bnot(index%4);\\ntrig2= q24*bnot((index+4)%16);\\ntrig3= q24*bnot((index+8)%16);\\n\\n\\nq5 = cos(time/3.7);\\nq6 = .3*sin(time/2);\\nq7 = .3*sin(time/1.5);\\n\\n\\n\\n//**************\\ntrel = trel + (1+q22)/fps;\\nz0 = 4;\\nq11 = .3*sin(trel*2); \\nq12 = .1*cos(trel*1.5); \\nq13 = 2+z0 + 6*sin(trel*1.1);\\n\\nq14 = .3*sin(trel*2.4); \\nq15 = .2*cos(trel*1) ; \\nq16 = 4+z0 + 3*sin(trel*1.6);\\n\\nq17 = .3*sin(trel*1); \\nq18 = .2*cos(trel*1.2); \\nq19 = 3+z0 + sin(trel*.8);","pixel_eqs_eel":"rot = .05 * q1 * (1-rad);","warp":" shader_body { \\n  vec2 uv_1;\\n  vec2 uv6_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = ((uv - 0.5) * aspect.xy);\\n  float x_4;\\n  x_4 = (abs(tmpvar_3.x) - abs(tmpvar_3.y));\\n  float tmpvar_5;\\n  tmpvar_5 = (q31 * sqrt((x_4 * x_4)));\\n  vec2 tmpvar_6;\\n  tmpvar_6 = normalize(tmpvar_3);\\n  uv_1 = (uv + ((0.1 * \\n    dot (((texture (sampler_blur1, uv).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29))\\n  ) * tmpvar_6));\\n  uv_1 = (uv_1 - (clamp (\\n    ((sin(tmpvar_5) / cos(tmpvar_5)) * tmpvar_6)\\n  , vec2(-2.0, -2.0), vec2(2.0, 2.0)) / 20.0));\\n  uv6_2 = (0.4 * sin((\\n    (uv_1 * 14.0)\\n   + rand_frame.xy)));\\n  vec4 tmpvar_7;\\n  tmpvar_7.w = 1.0;\\n  tmpvar_7.xyz = (((texture (sampler_main, \\n    (((uv_1 - 0.5) * (0.95 + (\\n      (0.1 * q28)\\n     * tmpvar_5))) + 0.5)\\n  ).xyz + \\n    (vec3((0.01 / sqrt(dot (uv6_2, uv6_2)))) * (0.3 * (1.0 + roam_cos)).xyz)\\n  ) * 0.99) - 0.025);\\n  ret = tmpvar_7.xyz;\\n }","comp":"vec2 xlat_mutableKugel1;\\nvec2 xlat_mutableKugel2;\\nfloat xlat_mutablerad1;\\nfloat xlat_mutablerad2;\\nfloat xlat_mutablerad3;\\nvec3 xlat_mutableret1;\\nvec2 xlat_mutablers;\\nvec2 xlat_mutablers0;\\nvec2 xlat_mutablersk;\\nvec2 xlat_mutableuv2;\\nvec2 xlat_mutableuv4;\\n shader_body { \\n  vec2 uv1_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = q6;\\n  tmpvar_2.y = q7;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (((uv + tmpvar_2) - 0.5) * aspect.xy);\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = q11;\\n  tmpvar_4.y = q12;\\n  xlat_mutablersk = (tmpvar_3 + tmpvar_4);\\n  xlat_mutablerad1 = ((8.0 * q13) * sqrt(dot (xlat_mutablersk, xlat_mutablersk)));\\n  xlat_mutableuv4 = ((sin(xlat_mutablerad1) / cos(xlat_mutablerad1)) * normalize(xlat_mutablersk));\\n  float tmpvar_5;\\n  tmpvar_5 = clamp ((10.0 - (7.0 * xlat_mutablerad1)), 0.0, 1.0);\\n  xlat_mutableKugel1 = ((xlat_mutableuv4 * tmpvar_5) / (1.0 + q13));\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = q14;\\n  tmpvar_6.y = q15;\\n  xlat_mutablersk = (tmpvar_3 + tmpvar_6);\\n  vec2 x_7;\\n  x_7 = (xlat_mutablersk + 0.1);\\n  float tmpvar_8;\\n  tmpvar_8 = (1.0 + q16);\\n  xlat_mutablerad2 = ((2.0 * tmpvar_8) * sqrt(dot (x_7, x_7)));\\n  xlat_mutableuv4 = ((sin(xlat_mutablerad2) / cos(xlat_mutablerad2)) * normalize(xlat_mutablersk));\\n  float tmpvar_9;\\n  tmpvar_9 = clamp ((10.0 - (7.0 * xlat_mutablerad2)), 0.0, 1.0);\\n  xlat_mutableKugel2 = ((xlat_mutableuv4 * tmpvar_9) / tmpvar_8);\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = q17;\\n  tmpvar_10.y = q18;\\n  xlat_mutablersk = (tmpvar_3 + tmpvar_10);\\n  float tmpvar_11;\\n  tmpvar_11 = (1.0 + q19);\\n  xlat_mutablerad3 = ((4.0 * tmpvar_11) * sqrt(dot (xlat_mutablersk, xlat_mutablersk)));\\n  xlat_mutableuv4 = ((sin(xlat_mutablerad3) / cos(xlat_mutablerad3)) * normalize(xlat_mutablersk));\\n  float tmpvar_12;\\n  tmpvar_12 = clamp ((10.0 - (7.0 * xlat_mutablerad3)), 0.0, 1.0);\\n  uv1_1 = (tmpvar_3 + ((\\n    (xlat_mutableKugel1 + xlat_mutableKugel2)\\n   + \\n    ((xlat_mutableuv4 * tmpvar_12) / tmpvar_11)\\n  ) * 0.5));\\n  float tmpvar_13;\\n  tmpvar_13 = (1.0/((uv1_1.y + (uv1_1.x * q5))));\\n  xlat_mutablers0.x = (uv1_1.x * tmpvar_13);\\n  xlat_mutablers0.y = (tmpvar_13 / 4.0);\\n  xlat_mutablers.x = xlat_mutablers0.x;\\n  xlat_mutablers.y = (xlat_mutablers0.y + (time * 2.0));\\n  float tmpvar_14;\\n  tmpvar_14 = clamp ((4.0 / tmpvar_13), 0.0, 1.0);\\n  xlat_mutableuv2 = ((0.4 * uv1_1) * (sqrt(\\n    dot (uv1_1, uv1_1)\\n  ) + 1.0));\\n  xlat_mutableuv2 = (xlat_mutableuv2 * aspect.yx);\\n  float tmpvar_15;\\n  tmpvar_15 = (0.2 * q22);\\n  xlat_mutableret1 = ((texture (sampler_main, fract(\\n    ((xlat_mutableuv2 + 0.5) - (((vec3(\\n      dot (texture (sampler_noise_lq, (xlat_mutablers / 16.0)), vec4(0.32, 0.49, 0.29, 0.0))\\n    ) - 0.5) * tmpvar_14) * 0.2).xy)\\n  )) * 2.0).xyz + ((\\n    ((tmpvar_15 * (float(mod (q27, 3.0)))) / xlat_mutablerad1)\\n   + \\n    ((tmpvar_15 * (float(mod ((q27 + 1.0), 3.0)))) / xlat_mutablerad2)\\n  ) + (\\n    (tmpvar_15 * (float(mod ((q27 + 2.0), 3.0))))\\n   / xlat_mutablerad3)));\\n  xlat_mutableret1 = (xlat_mutableret1 + ((\\n    ((0.4 * tmpvar_5) * ((texture (sampler_blur1, vec2(0.0, 0.0)).xyz * scale1) + bias1))\\n   + \\n    ((0.4 * tmpvar_9) * ((texture (sampler_blur1, vec2(0.1, 0.1)).xyz * scale1) + bias1))\\n  ) + (\\n    (0.4 * tmpvar_12)\\n   * \\n    ((texture (sampler_blur1, vec2(0.2, 0.2)).xyz * scale1) + bias1)\\n  )));\\n  vec4 tmpvar_16;\\n  tmpvar_16.w = 1.0;\\n  tmpvar_16.xyz = max (xlat_mutableret1, vec3((clamp (\\n    (1.0/((float(mod (((uv.x * 2562.0) * (uv.y * 2562.0)), 13333.0)))))\\n  , 0.0, 1.0) * (1.0 - \\n    (4.0 * tmpvar_14)\\n  ))));\\n  ret = tmpvar_16.xyz;\\n }"}')},2905:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1.780001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"wave_mode":5,"wave_dots":1,"wave_thick":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":5.552,"wave_smoothing":0.504,"wave_mystery":-1,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1.4595,"warpscale":2.0067,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_g":0,"wave_b":0,"ob_size":0.06,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1x":0.6999,"b1ed":0},"shapes":[{"baseVals":{"sides":100,"textured":1,"y":0.9,"rad":0.15493,"tex_zoom":0.77977,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":5,"textured":1,"rad":0.986,"tex_ang":3.14159,"tex_zoom":0.99979,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ang =sin(time/65) ;// ang + (bass*.2) + (time*.4);"},{"baseVals":{"enabled":1,"sides":5,"additive":1,"x":0.9,"rad":0.22613,"g":0.6,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.05 + rand(900)/1000;\\ny = 0.05 + rand(900)/1000;\\nang = rand(320)/100;\\n "},{"baseVals":{"sides":36,"additive":1,"rad":0.18717,"r":0,"g":0.12,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"spectrum":1,"usedots":1,"additive":1,"scaling":0.5033,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"index4 = rand(2);\\nindex3 = rand(4);","frame_eqs_eel":"dec_med = pow (0.9, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %4;\\nindex2 = (index2 + is_beat*bnot(index))%4;\\nindex3 = (index3 + is_beat*bnot(index)*bnot(index2))%4;\\nindex4 = (index4 + is_beat*bnot(index)*bnot(index2)*bnot(index3))%2;\\n\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass + mid + treb;\\n\\nready = is_beat * bnot(ready) + bnot(is_beat2)*ready;\\nis_beat2 = ready * above (time, t0+.2);\\nq19 = is_beat2;\\n\\n//k1 =  is_beat*bnot(index)*bnot(index2);\\n\\nk1 =  is_beat*equal(index,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.14159265359/2;\\n\\nq27 = index+1;\\nq28 = index2+1;\\nq29 = index3*4+1;\\nq30 = index4;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\nsp0 = dec_slow*sp0 + (q24+.05)*(1-dec_slow);\\ngo = go * dec_med + (1-dec_med)*(1-bnot(index2+index3));\\nmovez = movez + .015*30/fps * go ;\\nq31 = movez;\\nq32 = .5 + .02*sin(time/5);\\n\\nq5 = index4%2;\\n\\nzoom = 1.0; rot = 0;\\n\\ndx = .05*max(sin(time/9.7)-.95,0);\\ndy = .002*(1-go);\\nrot = 50*(dx-dy);","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = ((uv * texsize.xy) * 0.03);\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = (cos((tmpvar_1.y * q1)) * sin(-(tmpvar_1.y)));\\n  tmpvar_2.y = (sin(tmpvar_1.x) * cos((tmpvar_1.y * q2)));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ((texture (sampler_main, (uv - \\n    ((tmpvar_2 * texsize.zw) * 18.0)\\n  )).xyz * 0.99) - 0.01);\\n  ret = tmpvar_3.xyz;\\n }","comp":" shader_body { \\n  vec2 uv1_1;\\n  vec3 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv).xyz;\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = (texture (sampler_main, (uv - vec2(0.001, 0.0))).xyz - texture (sampler_main, (uv + vec2(0.001, 0.0))).xyz).x;\\n  tmpvar_3.y = (texture (sampler_main, (uv - vec2(0.0, 0.001))).xyz - texture (sampler_main, (uv + vec2(0.0, 0.001))).xyz).x;\\n  uv1_1 = ((0.3 * cos(\\n    ((uv - 0.5) + 1.8)\\n  )) - (2.0 * tmpvar_3));\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = (0.8 * ((0.3 * \\n    dot (tmpvar_2, vec3(0.32, 0.49, 0.29))\\n  ) + (\\n    (22.0 * clamp ((0.01 / sqrt(\\n      dot (uv1_1, uv1_1)\\n    )), 0.0, 1.0))\\n   * \\n    (tmpvar_2 + 0.1)\\n  )));\\n  ret = tmpvar_4.xyz;\\n }"}')},6790:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":3,"gammaadj":1,"decay":0.965,"echo_zoom":1.101,"wave_mode":7,"additivewave":1,"wave_brighten":0,"wrap":0,"darken_center":1,"brighten":1,"wave_a":0.001,"wave_scale":1.157,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":0.01,"warpscale":1.47,"zoomexp":4.77802,"zoom":0.99816,"warp":0.01,"sx":1.00183,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.05,"ob_a":0.5,"ib_size":0.5,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":1.28,"mv_y":48,"mv_dx":0.4,"mv_l":1,"mv_g":0,"mv_a":0.4},"shapes":[{"baseVals":{"enabled":1,"sides":3,"additive":1,"thickoutline":1,"textured":1,"x":1,"y":0.59,"rad":1.51261,"ang":3.39292,"tex_zoom":100,"r":0,"g":0.9,"b":0.7,"g2":0,"border_r":0,"border_g":0,"border_b":0,"border_a":1},"init_eqs_eel":"","frame_eqs_eel":"x=sin(time/10)*0.1+0.5+(treb_att*0.1);"},{"baseVals":{"enabled":1,"sides":13,"textured":1,"rad":0.66231,"ang":3.07876,"tex_zoom":1.10258,"g":1,"b":1,"g2":0,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"//additive=above(sin(time*50),.95);\\nang=sin(time/20)*6.28;"},{"baseVals":{"enabled":1,"sides":6,"textured":1,"x":0,"y":0.3,"rad":1.46815,"ang":5.02655,"tex_zoom":0.33198,"g":1,"b":1,"r2":1,"b2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"tex_ang=(sin(time/4)*0.5+0.5)*6.28;\\ny=sin(time/2)*0.5+0.5;"},{"baseVals":{"enabled":1,"sides":28,"textured":1,"rad":0.38316,"ang":3.14159,"tex_ang":4.90089,"tex_zoom":2.37657,"r":0,"a":0,"r2":1,"b2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ang=time/10;\\n//tex_zoom=3.4+(bass*0.03);\\nvar=above(bass_att,0.7);\\na=var;\\na2=var;\\nborder_a=var;\\n\\n\\n//This preset fluctuates between 53.2 and 55.44 fps on my box.  Texture size_2048 Meshsize_36*24\\n//On a SuperScan Pro 800 Hitachi\\n//On a Radion_9600\\n//1280*1024_Screen_Resolution\\n//;) hello! I am ATHEN ANDANDA!"}],"waves":[{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1,"r":0,"a":0.06},"init_eqs_eel":"","frame_eqs_eel":"advance=advance+ 0.005;\\nadvance=if( above(advance,2) , 0, advance);\\nt1=advance","point_eqs_eel":"s=sample*6.28;\\n\\n//plot random x position via function of sample pos;\\nxp=sin(s)+sin(s*0.44)+sin(s*14.3)+sin(s*12.8);\\nxp=xp*0.10;\\n\\n//plot random y position via function of sample pos;\\nyp=cos(s)+sin(s*0.29)+cos(s*19.4)+sin(s*37.7);\\nyp=yp*0.10;\\n\\n//plot random z position via function of sample pos;\\nzp=cos(s)+cos(s*6.24)+cos(s*37.4)+cos(s*29.7);\\nzp=zp*0.25;\\n\\n//pull stars toward screen\\nzp=zp + 1 - t1;\\n\\n//correct when below 0\\nzp=if( below(zp,0) , zp+2 , zp );\\n\\n//darken far stars\\na=(1 - zp*0.5);\\n\\nzp=zp*0.7;\\n\\nx_screen=xp/zp + 0.5;\\ny_screen=yp/zp + 0.5;\\n\\nx=x_screen;\\ny=y_screen;\\n\\nr=1;\\ng=1;\\nb=1;\\n\\n"},{"baseVals":{"enabled":1,"thick":1,"additive":1,"r":0.1,"g":0.5},"init_eqs_eel":"","frame_eqs_eel":"t1=q2;","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs*4;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=(flip*0.1-0.05)*(sample);\\nzp=0;\\n\\n//spin;\\nang=tm*20 + sin(tm*76 + time*4)*0.4;\\nsa=sin(ang);ca=cos(ang);\\nxr=xp*sa + yp*ca;\\nyr=xp*ca - yp*sa;\\nzr=zp;\\n\\nxp=xr;\\nyp=yr + 0.05 + (sin(tm)*0.5 + 0.5)*0.2 + 0.05;\\nzp=zr;\\n\\n//wrist movement;\\nang=sin(tm*2);\\n\\nxq=xp;\\nsa=sin(ang);ca=cos(ang);\\nyq=yp*sa + zp*ca;\\nzq=yp*ca - zp*sa;\\n\\n\\nang=tm*8;\\nsa=sin(ang);ca=cos(ang);\\nxp=xq*sa + yq*ca;\\nyp=xq*ca - yq*sa;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*2.5;\\nxq=xp;\\nsa=sin(ang);ca=cos(ang);\\nyq=yp*sa + zp*ca;\\nzq=yp*ca - zp*sa;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3 + 0.5);\\nxp=xq*sa + yq*ca;\\nyp=xq*ca - yq*sa;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*1)*1.75 - 1.05;\\nsa=sin(ang);ca=cos(ang);\\nxq=xp*sa + zp*ca;\\nyq=yp;\\nzq=xp*ca - zp*sa;\\n\\n//upper arm up down;\\nang=cos(tm);\\nxp=xq;\\nsa=sin(ang);ca=cos(ang);\\nyp=yq*ca - zq*sa;\\nzp=yq*sa + zq*ca;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+1.5;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=(1-sample);\\n"},{"baseVals":{"enabled":1,"thick":1,"additive":1,"r":0.7,"g":0},"init_eqs_eel":"","frame_eqs_eel":"t1=q3; //mytime\\nt2=q2;\\nt3=.3*q2;","point_eqs_eel":"t=t1+t2*(1-sample);\\n\\nox=.5+(.3+.05*sample)*cos(t+.65+3.1415*sin(1.7*t+.98))*sin(1.32*t+3.21);\\noy=.5+(.3+.05*sample)*1.25*sin(.78*t+1.71)*cos(.91*t+3.09+3.1415*sin(1.49*t+.43));\\n\\nang=atan2( (py-oy),(px-ox) );\\nl=tan(ang);\\nx2=.5+(.3-.05*sample)*cos(t+.65+3.1415*sin(1.7*t+.98))*sin(1.32*t+3.21);\\ny2=.5+(.3-.05*sample)*1.25*sin(.78*t+1.71)*cos(.91*t+3.09+3.1415*sin(1.49*t+.43));\\nsum = (l*x2-y2+oy-l*ox)*sign(ang)*sign(l);\\ndir=-1+2*above(sum,-.001);\\n\\nxtrudx=(1-counter%2)*t3*sample*cos(ang+dir*1.5707)*abs(value1+value2);\\nxtrudy=(1-counter%2)*t3*sample*sin(ang+dir*1.5707)*abs(value1+value2);\\n\\nx=ox+xtrudx;\\ny=oy+xtrudy;\\n\\npx=ox;\\npy=oy;\\n\\ncounter=counter+1;\\na=sqr(sample);"},{"baseVals":{"enabled":1,"thick":1,"additive":1,"g":0,"b":0.6},"init_eqs_eel":"","frame_eqs_eel":"t1=q3; //mytime\\nt2=q2;\\nt3=.3*q2;","point_eqs_eel":"t=t1+t2*(1-sample);\\n\\nox=.5+(.3-.05*sample)*cos(t+.65+3.1415*sin(1.7*t+.98))*sin(1.32*t+3.21);\\noy=.5+(.3-.05*sample)*1.25*sin(.78*t+1.71)*cos(.91*t+3.09+3.1415*sin(1.49*t+.43));\\n\\nang=atan2( (py-oy),(px-ox) );\\nl=tan(ang);\\nx2=.5+(.3+.05*sample)*cos(t+.65+3.1415*sin(1.7*t+.98))*sin(1.32*t+3.21);\\ny2=.5+(.3+.05*sample)*1.25*sin(.78*t+1.71)*cos(.91*t+3.09+3.1415*sin(1.49*t+.43));\\nsum = (l*x2-y2+oy-l*ox)*sign(ang)*sign(l);\\ndir=-1+2*above(sum,-.001);\\n\\nxtrudx=(counter%2)*t3*sample*cos(ang+dir*1.5707)*abs(value1+value2);\\nxtrudy=(counter%2)*t3*sample*sin(ang+dir*1.5707)*abs(value1+value2);\\n\\nx=ox+xtrudx;\\ny=oy+xtrudy;\\n\\npx=ox;\\npy=oy;\\n\\ncounter=counter+1;\\na=sqr(sample);"}],"init_eqs_eel":"","frame_eqs_eel":"decay=.999;\\nwrap=sin(time*10);\\nmv_dx=bass;\\nib_a=.005;\\n\\n\\nvol=(bass+mid+treb)*0.55;\\nvol=vol*vol;\\n\\nmtime=mtime+vol*0.01*(48/fps);\\n\\nq1=mtime*0.5;\\n\\n\\ndt=1/FPS;\\nmytime=mytime+dt;\\ncontvol=min( max(.5, (1-.5*dt)*contvol+.5*dt*(bass+mid+treb)*.133 ) ,2 ) ;\\nq2=contvol;\\nq3=mytime;\\necho_zoom=1+(vol*0.01);\\nsx=-.99;","pixel_eqs_eel":"zoom=1.005-(rad/100);\\nrot=rad/100;\\n//sy=-1.02;","warp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = (((uv - vec2(0.5, 0.5)) * texsize.xy) * 0.015);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = (((0.995 * texture (sampler_main, \\n    (uv + (((\\n      (clamp ((sin(tmpvar_1) / cos(tmpvar_1)), vec2(-12.0, -12.0), vec2(12.0, 12.0)) * cos(((4.0 * \\n        (q2 + 1.0)\\n      ) * tmpvar_1.yx)))\\n     * texsize.zw) * 4.0) * (2.0 + q1)))\\n  ).xyz) + vec3(0.01, 0.01, 0.01)) - 0.02);\\n  ret = tmpvar_2.xyz;\\n }","comp":" shader_body { \\n  vec3 crisp_1;\\n  vec2 uv3_2;\\n  vec2 uv2_3;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = ((uv - 0.5) * aspect.xy);\\n  float tmpvar_5;\\n  tmpvar_5 = (0.1 / (sqrt(\\n    dot (tmpvar_4, tmpvar_4)\\n  ) + 0.05));\\n  vec2 tmpvar_6;\\n  float tmpvar_7;\\n  tmpvar_7 = (ang / 3.14);\\n  tmpvar_6.x = tmpvar_7;\\n  tmpvar_6.y = (tmpvar_5 * 1.5);\\n  uv2_3.y = (tmpvar_6.y + (0.1 * time));\\n  uv2_3.x = (tmpvar_7 + (0.02 * time));\\n  uv3_2.y = (tmpvar_5 + q30);\\n  uv3_2.x = (tmpvar_7 + (time / 32.0));\\n  crisp_1 = ((texture (sampler_main, fract(uv2_3)).xyz + (2.0 * texture (sampler_main, \\n    fract(uv3_2)\\n  ).xyz)) + ((2.0 * \\n    ((texture (sampler_blur2, fract(uv2_3)).xyz * scale2) + bias2)\\n  ) + (2.0 * \\n    ((texture (sampler_blur2, fract(uv3_2)).xyz * scale2) + bias2)\\n  )));\\n  crisp_1 = ((3.0 * crisp_1) * rad);\\n  float tmpvar_8;\\n  tmpvar_8 = clamp ((1.0 - (4.0 * rad)), 0.0, 1.0);\\n  vec4 tmpvar_9;\\n  tmpvar_9.w = 1.0;\\n  tmpvar_9.xyz = ((crisp_1 + (\\n    ((vec3(1.0, 0.0, 1.0) * uv.y) * pow ((1.0 - rad), 8.0))\\n   * tmpvar_8)) + (tmpvar_8 * texture (sampler_main, fract(uv)).xyz));\\n  ret = tmpvar_9.xyz;\\n }"}')},3815:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":3,"wave_mode":4,"additivewave":1,"wave_dots":1,"modwavealphabyvolume":1,"wave_a":0.331,"wave_scale":0.898,"wave_smoothing":0.108,"wave_mystery":0.1,"modwavealphastart":0.72,"modwavealphaend":1.28,"zoom":1.3345,"wave_r":0,"wave_g":0.5,"wave_b":0.5,"wave_y":0.54,"mv_x":24.8,"mv_dy":0.16,"mv_l":1.5,"mv_a":0},"shapes":[{"baseVals":{"sides":3,"rad":0.31275,"tex_zoom":0.17914,"r":0.82,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"xy=0.5+rand_frame;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"samples":352,"usedots":1,"additive":1,"scaling":0.03856,"smoothing":0.2,"g":0},"init_eqs_eel":"","frame_eqs_eel":"q1=bass_att;","point_eqs_eel":"r = abs (sin (frame /38));\\ng = 0.5*abs (cos (frame /45));\\nb = 0.5*abs (sin (frame / 133));\\na = 0.3;\\nt02 = t02 + q1/10;\\nratio = sin (frame/49);\\n\\nampl = 0.01+0.4*sqr(sin ((frame ) / 18)* cos (frame / 123));\\n\\nx1 = (r-0.5)/15 +0.5 + ampl* sin (sample*6.28);\\ny1 = (b-0.5)/15+0.5 + ampl* cos (sample*6.28);\\n\\nx =  x1+1*0.2*(ampl+ratio )*sin ( sample*6.28 * ratio*7.3);\\ny =  y1+1*0.2*(ampl+ratio )*cos ( sample*6.28*6);\\n"},{"baseVals":{"samples":15,"scaling":2.06378,"smoothing":0.8,"r":0.8,"g":0,"b":0.6,"a":0.9,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"samples":112,"additive":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"dx=0;\\noldshift=shift;\\nnormalframez=normalframez+1;\\nshift=above(bass_att,1)*above(treb_att,0.9);\\ncrash=abs(oldshift-shift);\\nnex=equal(rshift,0)*1+equal(rshift,1)*2;\\nrshift=if(crash,nex,rshift);\\nmonitor=rshift;\\nwave_r=int(rand(200))/200;\\nwave_g=int(rand(200))/200;\\nwave_b=int(rand(200))/200;\\nwarp=0;\\nq1=above(bass_att,1.3);\\nzoom1=zoom+0.15-0.3*(normalframez%2);\\nzoom=if(shift,zoom1,1);\\nrot=rot-0.1+rshift*0.1;","pixel_eqs_eel":"dy=-below(y,0.4)*0.007+above(y,0.6)*0.007;","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = ((texture (sampler_main, (uv_orig + \\n    ((uv - uv_orig) * dot (texture (sampler_main, uv).xyz, vec3(0.32, 0.49, 0.29)))\\n  )).xyz * 0.99) - 0.002);\\n  ret = tmpvar_1.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  ret_1 = (texture (sampler_main, uv).xyz * 2.0);\\n  ret_1 = (ret_1 * (1.0 - ret_1));\\n  ret_1 = (((1.0 - \\n    pow (clamp (ret_1, 0.0, 1.0), vec3(0.5, 0.5, 0.5))\\n  ) * 1.5) - 0.75);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ret_1;\\n  ret = tmpvar_2.xyz;\\n }"}')},5717:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":3,"decay":0.975,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":2,"wave_dots":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":100,"wave_scale":27.455,"wave_smoothing":0.5,"wave_mystery":-1,"modwavealphastart":0.4,"modwavealphaend":1,"warpscale":1.772,"zoomexp":1.001,"zoom":1.007,"warp":0,"mv_y":8.64,"mv_l":1.455,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"x":0.455,"rad":0.43233,"r":0.5,"g":0.5,"r2":0.57,"g2":0,"border_b":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"sounds=(bass+treb+mid)/3;\\n\\nrad=rad*sounds*0.6;\\n\\nr=r+sin(bass)*g;\\ng=g+sin(mid)*g;\\n\\n\\nx=x+0.207*cos(time*bass*0.1);\\ny=y+0.2029*sin(time*bass*0.09);"},{"baseVals":{"enabled":1,"sides":100,"rad":0.13465,"tex_zoom":0.91,"r2":1,"a2":0.318,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"\\ng2=g2+0.09*sin((treb+mid)*1.23);\\ng=g+0.09*cos((bass+mid)*1.37);\\n\\nsounds=(bass+mid+treb)/3;\\n\\nrad=rad*(treb+mid)/3;\\n\\nx=x+0.300*sin(time*bass);\\ny=y+0.317*cos(time*bass);"},{"baseVals":{"enabled":1,"sides":100,"rad":0.20047,"g":1,"b":1,"r2":0.5,"g2":0.445,"b2":0.94,"border_b":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"sounds=(bass+treb+mid)/3;\\natt=(bass_att+treb_att+mid_att)/3;\\natt=(bass_att+treb_att+mid_att)/3;\\nr2=r2+(0.25*sin(time*6.28))-bass;\\ng2=g2+(0.25*sin(time*6.28))-bass;\\n\\nrad=rad;\\nx=x+0.243*cos(time*2.3)+sounds*0.09;\\ny=y+0.217*sin((time*3.5)+(sounds*0.3));"},{"baseVals":{"x":0.475,"border_g":0.9,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"sep":256,"scaling":20.35074,"smoothing":0.435,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"r=r+0.5*sin(treb*1.13);\\ng=g+0.5*sin(bass*1.33);\\nb=b+0.5*sin(mid*1.23);","point_eqs_eel":""},{"baseVals":{"sep":256,"usedots":1,"scaling":100,"smoothing":0.51,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"scaling":0.91,"smoothing":0.45,"b":0.91,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"scaling":1.08,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_x = wave_x + 0.2*( 0.60*sin(2.121*time) + 0.5*sin(1.621*time) );\\nwave_y = wave_y + 0.2*( 0.60*sin(1.742*time) + 0.5*sin(2.322*time) );\\nwave_r = wave_r + 0.200*( 0.60*sin(0.823*time) + 0.40*sin(0.916*time) );\\nwave_g = wave_g + 0.500*( 0.60*sin(0.900*time) + 0.40*sin(1.023*time) );\\nwave_b = wave_b + 0.500*( 0.60*sin(0.808*time) + 0.40*sin(0.949*time) );","pixel_eqs_eel":"zoom = zoom + 0.01 * ( sin(2*cos(3*(sqrt(2)-rad)*ang)) + 1 );","warp":" shader_body { \\n  vec2 my_uv_1;\\n  vec2 d_2;\\n  vec3 ret_3;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (texsize.zw * 4.0);\\n  vec3 tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_blur1, \\n    fract((uv + (vec2(1.0, 0.0) * tmpvar_4)))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    fract((uv - (vec2(1.0, 0.0) * tmpvar_4)))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_6;\\n  tmpvar_6 = (((texture (sampler_blur1, \\n    fract((uv + (vec2(0.0, 1.0) * tmpvar_4)))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    fract((uv - (vec2(0.0, 1.0) * tmpvar_4)))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_7;\\n  tmpvar_7 = ((texture (sampler_blur1, uv).xyz * scale1) + bias1);\\n  d_2 = -(tmpvar_4);\\n  float tmpvar_8;\\n  tmpvar_8 = (d_2 * 4.0).x;\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = tmpvar_5.y;\\n  tmpvar_9.y = tmpvar_6.y;\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = tmpvar_5.x;\\n  tmpvar_10.y = tmpvar_6.x;\\n  vec2 tmpvar_11;\\n  tmpvar_11 = ((uv - (tmpvar_9 * d_2)) - (tmpvar_10 * tmpvar_8));\\n  ret_3.y = texture (sampler_fc_main, (tmpvar_11 - floor(tmpvar_11))).y;\\n  ret_3.y = (ret_3.y + ((\\n    (ret_3.y - tmpvar_7.y)\\n   * 0.042) + -0.0075));\\n  vec2 tmpvar_12;\\n  tmpvar_12.x = tmpvar_5.x;\\n  tmpvar_12.y = tmpvar_6.x;\\n  vec2 tmpvar_13;\\n  tmpvar_13.x = tmpvar_5.z;\\n  tmpvar_13.y = tmpvar_6.z;\\n  my_uv_1 = ((uv - (tmpvar_12 * d_2)) - (tmpvar_13 * tmpvar_8));\\n  ret_3.x = texture (sampler_fc_main, (my_uv_1 - floor(my_uv_1))).x;\\n  ret_3.x = (ret_3.x + ((\\n    (ret_3.x - tmpvar_7.x)\\n   * 0.042) + -0.0075));\\n  vec2 tmpvar_14;\\n  tmpvar_14.x = tmpvar_5.z;\\n  tmpvar_14.y = tmpvar_6.z;\\n  vec2 tmpvar_15;\\n  tmpvar_15.x = tmpvar_5.y;\\n  tmpvar_15.y = tmpvar_6.y;\\n  my_uv_1 = ((uv - (tmpvar_14 * d_2)) - (tmpvar_15 * tmpvar_8));\\n  ret_3.z = texture (sampler_fc_main, (my_uv_1 - floor(my_uv_1))).z;\\n  ret_3.z = (ret_3.z + ((\\n    (ret_3.z - tmpvar_7.z)\\n   * 0.042) + -0.0075));\\n  vec4 tmpvar_16;\\n  tmpvar_16 = texture (sampler_noisevol_hq, (((vec3(0.04, 0.02, 0.02) * my_uv_1.xyy) * (\\n    (q27 * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + ((time * vec3(2.3, 2.3, 1.8)) * q29)));\\n  if (((ret_3.x > (q21 * q13)) && (ret_3.x <= (q24 * q11)))) {\\n    ret_3.y = (ret_3.y - (tmpvar_16.x * 0.5));\\n  };\\n  if (((ret_3.y > (q22 * q11)) && (ret_3.y <= (q25 * q12)))) {\\n    ret_3.z = (ret_3.z - (tmpvar_16.y * 0.5));\\n  };\\n  if (((ret_3.z > (q23 * q12)) && (ret_3.z <= (q26 * q13)))) {\\n    ret_3.x = (ret_3.x - (tmpvar_16.z * 0.5));\\n  };\\n  vec4 tmpvar_17;\\n  tmpvar_17.w = 1.0;\\n  tmpvar_17.xyz = ret_3;\\n  ret = tmpvar_17.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv);\\n  ret_1 = (((vec3(2.8, 2.8, 1.2) * tmpvar_2.x) + (vec3(2.0, 0.4, 2.0) * tmpvar_2.y)) + (vec3(0.1, 1.3, 1.2) * tmpvar_2.z));\\n  ret_1 = (ret_1 * 0.37);\\n  ret_1 = ((ret_1 * ret_1) * (1.0 + (\\n    clamp (((cos(\\n      (((dot (tmpvar_2.xyz, vec3(0.32, 0.49, 0.29)) * 17.0) + 3.0) + (uv.x * 30.0))\\n    ) * 3.0) - 2.7), 0.0, 1.0)\\n   * 4.0)));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_1;\\n  ret = tmpvar_3.xyz;\\n }"}')},7518:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.964,"echo_zoom":1.168,"wave_mode":5,"wave_thick":1,"wave_brighten":0,"wave_a":1.204,"wave_scale":1.99,"wave_smoothing":0.963,"wave_mystery":0.104,"modwavealphastart":0.94,"modwavealphaend":1.287,"warpanimspeed":0.01,"warpscale":0.01,"rot":-0.02,"cx":0.53,"warp":0.01,"wave_r":0.97,"wave_g":1.21,"wave_b":0.88,"wave_x":0.98,"wave_y":0.565,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"ib_r":0.235,"mv_x":10.08,"mv_y":7.47,"mv_l":0.711,"mv_r":1.02,"mv_g":0.79,"mv_b":0.79,"mv_a":0,"b2x":0.85},"shapes":[{"baseVals":{"enabled":1,"sides":40,"thickoutline":1,"textured":1,"x":0.57,"y":0.49,"rad":0.5516,"tex_zoom":0.83,"r":0.82,"g":1.11,"b":0.96,"a":1.21,"r2":0.89,"g2":1.09,"b2":0.89,"a2":0.83,"border_r":0.86,"border_g":0.87,"border_b":0,"border_a":0},"init_eqs_eel":"bob = 1.49;\\nro = 0;\\nred = rand(20);","frame_eqs_eel":"vol = 1 + 0.22*((bass_att+treb_att+mid_att)/3);\\nbob = bob*above(bob,0.0091) - 0.0091 + 1*(1 - above(bob,0.0091));\\nbob = 0.32 + 0.32*sin(time*0.99);\\nbob = bob*vol;\\nrad = bob;\\nborder_1 = 0.46;\\nsides = 30;\\nro = ro + 0.022;\\nang = ro;\\nrad = 0.55;\\n\\nsp = red*0.0253;\\nspi = 0.54 - sp;\\ntm = time*0.12;\\nborder_r = 0.56 + sp*sin(tm*0.68) + spi*cos(tm*1.212);\\nborder_g = 0.48 + sp*sin(tm*1.087) + spi*cos(tm*0.705);\\nborder_b = 0.49 + sp*sin(tm*1.2337) + spi*cos(tm*0.692);"},{"baseVals":{"enabled":1,"sides":40,"additive":1,"x":0.4,"y":0.415,"rad":0.113,"tex_zoom":1.24,"r":1.12,"g":1,"b":0.94,"a":1.06,"g2":0,"border_r":0.98,"border_g":1.15,"border_b":1.23,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.43 + 0.43*(sin(time*1.25)*0.24 + 0.466*sin(time*0.43));\\nx = 0.51 + 0.2543*sin(time);\\ny = 0.59 + 0.31*cos(time);\\n\\nrad = rad*mid_att;\\nr = 0.61 + 0.61*sin(frame*0.61);\\nb = 0.5151 + 0.5151*sin(frame*0.5151 + 2.1778);\\ng = 0.43 + 0.43*sin(frame*0.43 + 3.1829);\\n"},{"baseVals":{"enabled":1,"sides":40,"additive":1,"x":0.38,"y":0.44,"rad":0.084,"tex_zoom":0.95,"r":0.97,"g":0.81,"b":0.78,"a":0.83,"g2":0,"border_r":1.2,"border_g":1.02,"border_b":0.83,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.43 + 0.43*(sin(time*1.05)*0.28 + 0.86*sin(time*0.43));\\nx = 0.4 + 0.2183*sin(time + 1.839);\\ny = 0.41 + 0.25*cos(time + 1.965);\\n\\nrad = rad*bass_att;\\nr = 0.484 + 0.484*sin(frame*0.484);\\nb = 0.41 + 0.41*sin(frame*0.41 + 2.3453);\\ng = 0.61 + 0.61*sin(frame*0.61 + 3.6017);\\n"},{"baseVals":{"enabled":1,"sides":40,"additive":1,"x":0.41,"y":0.555,"rad":0.083,"tex_zoom":0.83,"r":1.12,"g":1,"b":1.17,"a":1.01,"g2":0,"border_r":1.09,"border_g":0.94,"border_b":0.88,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.42 + 0.42*(sin(time*1.1)*0.26 + 0.86*sin(time*0.42));\\nx = 0.52 + 0.2587*sin(time + 4.777);\\ny = 0.51 + 0.34*cos(time + 4.902);\\n\\nrad = rad*treb_att;\\nr = 0.428 + 0.428*sin(frame*0.428);\\nb = 0.46 + 0.46*sin(frame*0.46 + 2.5547);\\ng = 0.411 + 0.411*sin(frame*0.411 + 4.4812);\\n"}],"waves":[{"baseVals":{"scaling":1.11,"smoothing":0.485,"r":1.16,"g":0.84,"b":0.9,"a":1.06,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"scaling":1.1,"smoothing":0.4,"r":0.91,"g":0.77,"b":0.93,"a":0.8,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"scaling":0.78,"smoothing":0.465,"r":0.98,"g":1.05,"b":1.22,"a":0.85,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"scaling":0.79,"smoothing":0.62,"r":1.19,"g":0.85,"b":1.12,"a":0.84,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"mv_r = mv_r + 0.2*( 0.60*sin(0.980*time) + 0.40*sin(1.047*time) );\\nmv_g = mv_g + 0.2*( 0.60*sin(0.835*time) + 0.40*sin(1.081*time) );\\nmv_b = mv_b + 0.2*( 0.60*sin(0.814*time) + 0.40*sin(1.011*time) );\\nq1 = (cx*2-1) + 0.6*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\nq2 = (cy*2-1) + 0.6*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\\nob_r = 1- 0.4*abs(q1);\\nob_g = 0.3*abs(q2);\\nob_b = 0.4*abs(q1);\\nwave_x = 1-abs(q2)-0.05;\\nwave_y = 1-abs(q1)-0.056;\\nwave_r = wave_r + 0.4*( 0.60*sin(0.514*time) + 0.40*sin(1.211*time) );\\nwave_b = wave_b + 0.4*( 0.60*sin(0.714*time) + 0.40*sin(q2) );\\nwave_g = wave_g + 0.4*( 0.60*sin(10*q1) + 0.40*sin(10*q2) );","pixel_eqs_eel":"zoom = zoom + 0.06*sin(rad*12 + ang*3 + time*-3.4)*(1-rad);\\nrot = rot * (1-rad);","warp":" shader_body { \\n  vec2 my_uv_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (vec2(1280.0, 1024.0) * texsize.zw);\\n  float tmpvar_4;\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (uv + vec2(0.005, 0.0));\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv - vec2(0.005, 0.0));\\n  tmpvar_4 = (((\\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_6).xyz * scale2)\\n   + bias2)).x * tmpvar_3.x);\\n  float tmpvar_7;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (uv + vec2(0.0, 0.005));\\n  vec2 tmpvar_9;\\n  tmpvar_9 = (uv - vec2(0.0, 0.005));\\n  tmpvar_7 = (((\\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_9).xyz * scale2)\\n   + bias2)).x * tmpvar_3.y);\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = tmpvar_4;\\n  tmpvar_10.y = tmpvar_7;\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = (((\\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_6).xyz * scale2)\\n   + bias2)).x * tmpvar_3.x);\\n  tmpvar_11.y = (((\\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_9).xyz * scale2)\\n   + bias2)).x * tmpvar_3.y);\\n  ret_2.x = texture (sampler_fw_main, ((uv - (tmpvar_10 * 0.01)) + (tmpvar_11 * 0.003))).x;\\n  vec4 tmpvar_12;\\n  tmpvar_12 = texture (sampler_blur3, uv);\\n  ret_2.x = (ret_2.x + ((ret_2.x - \\n    ((tmpvar_12.xyz * scale3) + bias3)\\n  .x) * 0.1));\\n  ret_2.x = (ret_2.x + 0.004);\\n  vec2 tmpvar_13;\\n  tmpvar_13.x = tmpvar_7;\\n  tmpvar_13.y = -(tmpvar_4);\\n  my_uv_1 = (uv + ((tmpvar_13 * 0.05) * (1.2 - \\n    ((tmpvar_12.xyz * scale3) + bias3)\\n  .y)));\\n  ret_2.z = texture (sampler_fw_main, my_uv_1).z;\\n  vec2 x_14;\\n  x_14 = (my_uv_1 - uv);\\n  ret_2.z = (ret_2.z + ((\\n    ((ret_2.z - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).z) * sqrt(dot (x_14, x_14)))\\n   * 180.0) / sqrt(\\n    dot (tmpvar_3, tmpvar_3)\\n  )));\\n  ret_2.z = (ret_2.z * 0.8);\\n  ret_2.z = (ret_2.z + 0.004);\\n  vec2 tmpvar_15;\\n  tmpvar_15.x = -(tmpvar_7);\\n  tmpvar_15.y = tmpvar_4;\\n  my_uv_1 = (tmpvar_15 * 0.045);\\n  vec2 tmpvar_16;\\n  tmpvar_16.x = (((\\n    (texture (sampler_blur2, (uv + vec2(0.01, 0.0))).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, (uv - vec2(0.01, 0.0))).xyz * scale2)\\n   + bias2)).y * tmpvar_3.x);\\n  tmpvar_16.y = (((\\n    (texture (sampler_blur2, (uv + vec2(0.0, 0.01))).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, (uv - vec2(0.0, 0.01))).xyz * scale2)\\n   + bias2)).y * tmpvar_3.y);\\n  my_uv_1 = (my_uv_1 + (uv - (tmpvar_16 * 0.03)));\\n  ret_2.y = texture (sampler_fw_main, my_uv_1).y;\\n  ret_2.y = (ret_2.y + ((ret_2.y - \\n    ((texture (sampler_blur3, my_uv_1).xyz * scale3) + bias3)\\n  .y) * 0.2));\\n  vec4 tmpvar_17;\\n  tmpvar_17.w = 0.0;\\n  tmpvar_17.xyz = ret_2;\\n  vec3 tmpvar_18;\\n  tmpvar_18 = mix (tmpvar_17, texture (sampler_main, uv_orig), vec4(0.2, 0.2, 0.2, 0.2)).xyz;\\n  ret_2 = tmpvar_18;\\n  vec4 tmpvar_19;\\n  tmpvar_19.w = 1.0;\\n  tmpvar_19.xyz = tmpvar_18;\\n  ret = tmpvar_19.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv);\\n  vec4 tmpvar_3;\\n  tmpvar_3 = texture (sampler_blur1, uv);\\n  ret_1 = (mix (vec3((\\n    ((tmpvar_3.xyz * scale1) + bias1)\\n  .x + \\n    ((texture (sampler_blur3, uv).xyz * scale3) + bias3)\\n  .x)), tmpvar_2.xxx, pow (tmpvar_2.xxx, vec3(0.5, 0.5, 0.5))) * 2.7);\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (((uv - 0.5) * (1.0 - \\n    ((tmpvar_3.xyz * scale1) + bias1)\\n  .zzz).xy) + 0.5);\\n  vec3 tmpvar_5;\\n  tmpvar_5 = (ret_1 + clamp ((\\n    pow (texture (sampler_main, tmpvar_4).zzz, vec3(0.5, 0.5, 0.5))\\n   * \\n    ((1.0 - ((tmpvar_3.xyz * scale1) + bias1).x) - ret_1.x)\\n  ), 0.0, 1.0));\\n  ret_1 = (((\\n    pow ((tmpvar_5 + clamp ((\\n      pow (((texture (sampler_blur1, tmpvar_4).xyz * scale1) + bias1).zzz, vec3(0.5, 0.5, 0.5))\\n     * \\n      ((1.0 - ((tmpvar_3.xyz * scale1) + bias1).x) - tmpvar_5.x)\\n    ), 0.0, 1.0)), vec3(0.9, 0.7, 0.6))\\n   * 1.25) - 0.25) - tmpvar_2.yyy);\\n  ret_1 = (ret_1 * ret_1);\\n  ret_1 = (ret_1 - 0.04);\\n  vec4 tmpvar_6;\\n  tmpvar_6 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * tmpvar_4.xyy) * (\\n    (q28 * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + ((time * vec3(1.0, 0.0, 1.0)) * q30)));\\n  if (((ret_1.x > (q26 * q3)) && (ret_1.x <= (q23 * q1)))) {\\n    ret_1.z = (ret_1.z - (tmpvar_6.x * 0.5));\\n  };\\n  if (((ret_1.y > (q25 * q1)) && (ret_1.y <= (q22 * q2)))) {\\n    ret_1.x = (ret_1.x - (tmpvar_6.y * 0.5));\\n  };\\n  if (((ret_1.z > (q24 * q2)) && (ret_1.z <= (q21 * q3)))) {\\n    ret_1.y = (ret_1.y - (tmpvar_6.z * 0.5));\\n  };\\n  ret_1 = (ret_1 - 0.15);\\n  ret_1 = (ret_1 * normalize(texture (sampler_noise_hq, (\\n    (uv + (q4 / 2.0))\\n   / 6.0))).xyz);\\n  vec4 tmpvar_7;\\n  tmpvar_7.w = 1.0;\\n  tmpvar_7.xyz = ret_1;\\n  ret = tmpvar_7.xyz;\\n }"}')},5549:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":2.7,"decay":0.715,"wrap":0,"solarize":1,"wave_a":0.001,"modwavealphastart":0.848,"warpanimspeed":2.472,"warpscale":3.209,"zoomexp":1.0018,"zoom":1.01,"cx":0.465,"dy":0.00001,"warp":0.01,"wave_r":0,"wave_g":0,"wave_b":0,"wave_x":0,"wave_y":0,"ob_size":0,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_y":9.72,"mv_r":1.19,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":20,"num_inst":410,"rad":0.0082,"r":0,"b":1,"a":1.09,"g2":0,"a2":0.1,"border_b":0.87,"border_a":0.006},"init_eqs_eel":"","frame_eqs_eel":"q1 = time/5;\\nq2 = time/6;\\nrad = 0.005+bass/100;\\nq5 = bass_att/70;\\nb2 = treb*0.79-bass/2;\\nr = instance/num_inst;\\ng = abs(treb_att/5-bass);\\n//b = abs(treb_att/5-bass);\\nsize = 0.3+bass_att/300;\\n\\nnc = sqrt(num_inst);\\nxs=sin(7.662*(instance%nc)/nc)*sin(3.705*int(instance/nc)/nc);\\nys=cos(6.28*(instance%nc)/nc)*sin(3.14*int(instance/nc)/nc);\\nzs=cos(3.14*int(instance/nc)/nc);\\n\\n//modulate to allow rotation\\ny1 = ys*cos(q1)-zs*sin(q1);\\nz1 = ys*sin(q1)+zs*cos(q1);\\nx1 = z1*sin(q2)+xs*cos(q2);\\nz2 = z1*cos(q2)-xs*sin(q2);\\nx2 = x1*cos(q3)-y1*sin(q3);\\ny2 = y1*cos(q3)+x1*sin(q3);\\n\\n//translate shape\\nx3 = x2+q4;\\ny3 = y2;\\nz3 = z2+q5;\\n\\nx = 0.5 + size*(x3/(1+z3*size));\\ny = 0.42 + size*(y3/(1+z3*size));\\na=below(z3,0);"},{"baseVals":{"rad":0.102,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"x":0.53,"rad":0.091,"tex_zoom":0.76,"r":1.16,"a":1.05,"g2":0.86,"border_r":0.87,"border_g":0.89,"border_b":1.22,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"y":0.49,"rad":0.089,"tex_zoom":0.78,"a":0.95,"g2":0.81,"border_a":0.114,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"r":0.8,"g":1.05,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"a":0.93,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"scaling":1.1,"r":1.15,"g":0.92,"b":1.22,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"scaling":0.84,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"q1=sin(.5*time);\\nq2=sin(.2*time);\\nq3=sin(0.34*time);\\nq4=abs(sin(40*time));\\n\\nbt=bt+bass/fps;\\nbt=bt*above(100,bt);\\nq5=sin(bt);\\nq6=bt;\\n\\nq11=int(rand(200)); q11=q11*equal(q11,1);\\nq12=int(rand(100)); q12=q12*equal(q12,1);\\nq13=int(rand(150)); q13=q13*equal(q13,1);\\n\\nrot=rot-0.048*sin(bass_att*0.08)*sin(0.37*time);\\n\\ndy=.002*sin(time*.623)+.002*cos(time*.31);\\ndx=.002*cos(time*.442)+.002*sin(time*.52);","pixel_eqs_eel":"//zoom=10.1242-0.038*above(rad,0.12);\\n//zoom=zoom+0.042*above(rad,0.131);\\n//zoom=zoom-.05*above(rad,.2);\\n//zoom=zoom+.05*above(rad,.21);\\n//zoom=zoom-0.039*above(rad,0.33);\\n//zoom=zoom+.05*above(rad,.31);\\n//zoom=zoom-0.059*above(rad,0.34);\\n//zoom=zoom+.05*above(rad,.41);\\n//zoom=zoom-.05*above(rad,.49);\\n//zoom=zoom+.05*above(rad,.50);\\n//zoom=zoom-.05*above(rad,.6);\\n//zoom=zoom+.05*above(rad,.61);\\n//zoom=zoom-0.055*above(rad,0.61);\\n//zoom=zoom+0.047*above(rad,0.575);\\n//zoom=zoom-0.049*above(rad,0.8);\\n//zoom=zoom+.05*above(rad,.805);\\n//zoom=zoom-.05*above(rad,.9);\\n//zoom=zoom+0.051*above(rad,1.046);\\n\\n\\nzoom=zoom+.15*x*.05*sin(rad*time*2);\\nzoom=zoom+0.142*(1-x)*0.058*sin(rad*time*2);","warp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = mix (uv_orig, uv, vec2(0.469, 0.469));\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 300.0);\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = dot (((\\n    (texture (sampler_blur1, ((tmpvar_1 + vec2(1.0, 2.0)) + tmpvar_2)).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (tmpvar_1 - (vec2(1.0, 0.0) * tmpvar_2))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  tmpvar_3.y = dot (((\\n    (texture (sampler_blur1, (tmpvar_1 + (vec2(0.0, 1.0) * tmpvar_2))).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (tmpvar_1 - (vec2(0.0, 1.0) * tmpvar_2))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = (texture (sampler_fc_main, (tmpvar_1 + (\\n    (tmpvar_3 * texsize.zw)\\n   * 50.0))) - 0.01).xyz;\\n  ret = tmpvar_4.xyz;\\n }","comp":"float xlat_mutablesmask;\\nvec2 xlat_mutableuv1;\\nvec2 xlat_mutableuv3;\\nvec2 xlat_mutableuv4;\\n shader_body { \\n  float dist_1;\\n  float stars_2;\\n  vec3 ret_3;\\n  xlat_mutableuv1 = ((uv - 0.5) * aspect.xy);\\n  float tmpvar_4;\\n  tmpvar_4 = (0.109 * time);\\n  float tmpvar_5;\\n  tmpvar_5 = (0.24 * rad);\\n  dist_1 = ((1.0 - fract(\\n    (0.2425 + tmpvar_4)\\n  )) * (1.0 - tmpvar_5));\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = q1;\\n  tmpvar_6.y = q2;\\n  xlat_mutableuv3 = (xlat_mutableuv1 + tmpvar_6);\\n  xlat_mutableuv4 = ((64.0 * dist_1) * xlat_mutableuv3);\\n  xlat_mutablesmask = (texture (sampler_pw_noise_lq, (xlat_mutableuv4 / 256.0)).y - 0.81);\\n  vec2 tmpvar_7;\\n  tmpvar_7 = abs((fract(xlat_mutableuv4) - 0.5));\\n  stars_2 = max (0.0, clamp ((\\n    (1.0 - dist_1)\\n   * \\n    ((0.1 / sqrt(dot (tmpvar_7, tmpvar_7))) * xlat_mutablesmask)\\n  ), 0.0, 1.0));\\n  dist_1 = ((1.0 - fract(\\n    (0.485 + tmpvar_4)\\n  )) * (1.0 - tmpvar_5));\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = q1;\\n  tmpvar_8.y = q2;\\n  xlat_mutableuv3 = (xlat_mutableuv1 + tmpvar_8);\\n  xlat_mutableuv4 = ((64.0 * dist_1) * xlat_mutableuv3);\\n  xlat_mutablesmask = (texture (sampler_pw_noise_lq, (xlat_mutableuv4 / 256.0)).y - 0.81);\\n  vec2 tmpvar_9;\\n  tmpvar_9 = abs((fract(xlat_mutableuv4) - 0.5));\\n  stars_2 = (stars_2 + max (stars_2, clamp (\\n    ((1.0 - dist_1) * ((0.1 / sqrt(\\n      dot (tmpvar_9, tmpvar_9)\\n    )) * xlat_mutablesmask))\\n  , 0.0, 1.0)));\\n  dist_1 = ((1.0 - fract(\\n    (0.7275 + tmpvar_4)\\n  )) * (1.0 - tmpvar_5));\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = q1;\\n  tmpvar_10.y = q2;\\n  xlat_mutableuv3 = (xlat_mutableuv1 + tmpvar_10);\\n  xlat_mutableuv4 = ((64.0 * dist_1) * xlat_mutableuv3);\\n  xlat_mutablesmask = (texture (sampler_pw_noise_lq, (xlat_mutableuv4 / 256.0)).y - 0.81);\\n  vec2 tmpvar_11;\\n  tmpvar_11 = abs((fract(xlat_mutableuv4) - 0.5));\\n  stars_2 = (stars_2 + max (stars_2, clamp (\\n    ((1.0 - dist_1) * ((0.1 / sqrt(\\n      dot (tmpvar_11, tmpvar_11)\\n    )) * xlat_mutablesmask))\\n  , 0.0, 1.0)));\\n  dist_1 = ((1.0 - fract(\\n    (0.97 + tmpvar_4)\\n  )) * (1.0 - tmpvar_5));\\n  vec2 tmpvar_12;\\n  tmpvar_12.x = q1;\\n  tmpvar_12.y = q2;\\n  xlat_mutableuv3 = (xlat_mutableuv1 + tmpvar_12);\\n  xlat_mutableuv4 = ((64.0 * dist_1) * xlat_mutableuv3);\\n  xlat_mutablesmask = (texture (sampler_pw_noise_lq, (xlat_mutableuv4 / 256.0)).y - 0.81);\\n  vec2 tmpvar_13;\\n  tmpvar_13 = abs((fract(xlat_mutableuv4) - 0.5));\\n  stars_2 = (stars_2 + max (stars_2, clamp (\\n    ((1.0 - dist_1) * ((0.1 / sqrt(\\n      dot (tmpvar_13, tmpvar_13)\\n    )) * xlat_mutablesmask))\\n  , 0.0, 1.0)));\\n  vec3 tmpvar_14;\\n  tmpvar_14 = max ((texture (sampler_main, uv).xyz * 2.0), ((\\n    (texture (sampler_blur2, uv).xyz * scale2)\\n   + bias2) * 2.0));\\n  ret_3 = (ret_3 + clamp ((stars_2 * stars_2), 0.0, 1.0));\\n  ret_3 = (ret_3 * clamp ((1.0 - \\n    (2.0 * dot (tmpvar_14, vec3(0.32, 0.49, 0.29)))\\n  ), 0.0, 1.0));\\n  ret_3 = (ret_3 + tmpvar_14);\\n  vec4 tmpvar_15;\\n  tmpvar_15.w = 1.0;\\n  tmpvar_15.xyz = ret_3;\\n  ret = tmpvar_15.xyz;\\n }"}')},8074:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1.98,"decay":0.5,"echo_zoom":0.952,"echo_alpha":0.5,"echo_orient":3,"wave_mode":5,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":1.136,"wave_scale":1.951,"wave_smoothing":0.9,"wave_mystery":0.094,"modwavealphastart":1.14,"modwavealphaend":1.3,"zoomexp":4.57482,"zoom":1.00778,"rot":0.02,"warp":0.01,"sx":0.96,"wave_g":0.83,"wave_b":1.24,"wave_x":0.86,"ob_size":0.05,"ob_r":0.99,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_b":1.2,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":40,"thickoutline":1,"textured":1,"rad":0.61756,"g":0.98,"b":1.17,"a":0.99,"r2":1,"b2":1,"a2":1,"border_g":0.98,"border_b":0,"border_a":0},"init_eqs_eel":"bob = 1.5;\\nro = 0;\\nred = rand(20);","frame_eqs_eel":"vol = 1 + 0.17*((bass_att+treb_att+mid_att)/3);\\nbob = bob*above(bob,0.008) - 0.008 + 1*(1 - above(bob,0.008));\\nbob = 0.35 + 0.35*sin(time*0.66);\\nbob = bob*vol;\\nrad = bob;\\nborder_1 = 0.4;\\nsides = 30;\\nro = ro + 0.02;\\nang = ro;\\nrad = 0.6;\\n\\nsp = red*0.025;\\nspi = 0.5 - sp;\\ntm = time*0.1;\\nborder_r = 0.5 + sp*sin(tm*0.46) + spi*cos(tm*1.343);\\nborder_g = 0.49 + sp*sin(tm*1.1775) + spi*cos(tm*0.687);\\nborder_b = 0.5 + sp*sin(tm*1.418) + spi*cos(tm*0.76);"},{"baseVals":{"enabled":1,"sides":40,"additive":1,"tex_zoom":0.88,"g":1,"b":1,"g2":0,"border_g":0.92,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.6169 + 0.6169*(sin(time*0.92)*0.29 + 0.82*sin(time*0.6169));\\nx = 0.57 + 0.189*sin(time);\\ny = 0.5 + 0.3*cos(time);\\n\\nrad = rad*mid_att;\\nr = 0.5 + 0.5*sin(frame*0.5);\\nb = 0.5 + 0.5*sin(frame*0.5 + 2.094);\\ng = 0.5 + 0.5*sin(frame*0.5 + 4.188);\\n"},{"baseVals":{"enabled":1,"sides":40,"additive":1,"x":0.435,"y":0.595,"rad":0.103,"r":0.8,"g":1,"b":0.87,"g2":0,"border_g":0.99,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.5 + 0.5*(sin(time*1.1)*0.3 + 0.7*sin(time*0.5));\\nx = 0.5 + 0.225*sin(time + 2.09);\\ny = 0.45 + 0.25*cos(time + 1.797);\\n\\nrad = rad*bass_att;\\nr = 0.4686 + 0.4686*sin(frame*0.4686);\\nb = 0.5 + 0.5*sin(frame*0.5 + 2.094);\\ng = 0.612 + 0.612*sin(frame*0.612 + 3.2666);\\n"},{"baseVals":{"enabled":1,"sides":40,"additive":1,"x":0.595,"rad":0.09,"g":1,"b":1,"g2":0,"border_g":0.97,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.495 + 0.495*(sin(time*0.9)*0.36 + 0.8*sin(time*0.495));\\nx = 0.44 + 0.216*sin(time + 5.154);\\ny = 0.5 + 0.3*cos(time + 4.19);\\n\\nrad = rad*treb_att;\\nr = 0.5 + 0.5*sin(frame*0.5);\\nb = 0.5 + 0.5*sin(frame*0.5 + 2.094);\\ng = 0.5 + 0.5*sin(frame*0.5 + 4.188);\\n"}],"waves":[{"baseVals":{"scaling":1.24,"r":0.77,"g":1.1,"a":1.11,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"scaling":1.12,"smoothing":0.45,"r":1.02,"g":0.89,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"smoothing":0.385,"b":1.18,"a":0.78,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"smoothing":0.4,"r":1.07,"g":1.07,"b":1.11,"a":0.92,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"","pixel_eqs_eel":"cx = if(above(x,0.5+q1),0.3,1-2*q1);\\n//cy = if(above(y,0.5),0.2+q1,0.7);\\ncx = if(above(rad,0.5),cx+0.2*sin(q3),cx-0.1);\\n//cy = if(above(rad,0.5),cy+0.2*cos(q4),cy-0.1);\\ncx = if(above(ang,1.56),cx+0.1,cx-0.2*sin(q4));\\ncx = if(above(ang,3.56),cy-0.1,cy+0.2*sin(q3));\\nrot = 1.5*(1-q1)*(0*rad+ 0.00*cx-0.0*cy);","warp":" shader_body { \\n  vec2 uv_1;\\n  vec2 uv6_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = ((uv - 0.5) * aspect.xy);\\n  float x_4;\\n  x_4 = (tmpvar_3.x * tmpvar_3.y);\\n  float tmpvar_5;\\n  tmpvar_5 = ((q10 * 24.0) * sqrt((x_4 * x_4)));\\n  uv_1 = (uv + (vec2(0.0, 0.01) * dot (\\n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\\n  , vec3(0.32, 0.49, 0.29))));\\n  uv_1 = (uv_1 - (clamp (\\n    ((sin(tmpvar_5) / cos(tmpvar_5)) * normalize(tmpvar_3))\\n  , vec2(-2.0, -2.0), vec2(2.0, 2.0)) / 200.0));\\n  uv6_2 = (0.4 * sin((\\n    (uv_1 * 6.0)\\n   + \\n    (rand_frame * 16.0)\\n  .xy)));\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = (((\\n    (texture (sampler_main, uv_1).xyz - (((texture (sampler_blur2, \\n      fract(uv_1)\\n    ).xyz * scale2) + bias2) * 0.02))\\n   + \\n    (0.1 * (vec3((0.1 / sqrt(\\n      dot (uv6_2, uv6_2)\\n    ))) * (0.5 * (1.0 + roam_cos)).xyz))\\n  ) * 0.99) - 0.025);\\n  ret = tmpvar_6.xyz;\\n }","comp":"float xlat_mutablesmask;\\nvec2 xlat_mutableuv1;\\nvec2 xlat_mutableuv3;\\nvec2 xlat_mutableuv4;\\n shader_body { \\n  float dist_1;\\n  float stars_2;\\n  vec3 ret_3;\\n  float tmpvar_4;\\n  tmpvar_4 = (q4 / 2.0);\\n  ret_3 = (ret_3 * normalize(texture (sampler_noise_hq, (\\n    (uv + tmpvar_4)\\n   / 6.0))).xyz);\\n  xlat_mutableuv1 = ((uv - 0.5) * aspect.xy);\\n  float tmpvar_5;\\n  tmpvar_5 = (0.1 * time);\\n  float tmpvar_6;\\n  tmpvar_6 = (0.2 * rad);\\n  dist_1 = ((1.0 - fract(\\n    (0.25 + tmpvar_5)\\n  )) * (1.0 - tmpvar_6));\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = q1;\\n  tmpvar_7.y = q2;\\n  xlat_mutableuv3 = (xlat_mutableuv1 + tmpvar_7);\\n  xlat_mutableuv4 = ((64.0 * dist_1) * xlat_mutableuv3);\\n  xlat_mutablesmask = (texture (sampler_pw_noise_lq, (xlat_mutableuv4 / 256.0)).y - 0.84);\\n  vec2 tmpvar_8;\\n  tmpvar_8 = abs((fract(xlat_mutableuv4) - 0.5));\\n  stars_2 = max (0.0, clamp ((\\n    (1.0 - dist_1)\\n   * \\n    ((0.1 / sqrt(dot (tmpvar_8, tmpvar_8))) * xlat_mutablesmask)\\n  ), 0.0, 1.0));\\n  dist_1 = ((1.0 - fract(\\n    (0.5 + tmpvar_5)\\n  )) * (1.0 - tmpvar_6));\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = q1;\\n  tmpvar_9.y = q2;\\n  xlat_mutableuv3 = (xlat_mutableuv1 + tmpvar_9);\\n  xlat_mutableuv4 = ((64.0 * dist_1) * xlat_mutableuv3);\\n  xlat_mutablesmask = (texture (sampler_pw_noise_lq, (xlat_mutableuv4 / 256.0)).y - 0.84);\\n  vec2 tmpvar_10;\\n  tmpvar_10 = abs((fract(xlat_mutableuv4) - 0.5));\\n  stars_2 = (stars_2 + max (stars_2, clamp (\\n    ((1.0 - dist_1) * ((0.1 / sqrt(\\n      dot (tmpvar_10, tmpvar_10)\\n    )) * xlat_mutablesmask))\\n  , 0.0, 1.0)));\\n  dist_1 = ((1.0 - fract(\\n    (0.75 + tmpvar_5)\\n  )) * (1.0 - tmpvar_6));\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = q1;\\n  tmpvar_11.y = q2;\\n  xlat_mutableuv3 = (xlat_mutableuv1 + tmpvar_11);\\n  xlat_mutableuv4 = ((64.0 * dist_1) * xlat_mutableuv3);\\n  xlat_mutablesmask = (texture (sampler_pw_noise_lq, (xlat_mutableuv4 / 256.0)).y - 0.84);\\n  vec2 tmpvar_12;\\n  tmpvar_12 = abs((fract(xlat_mutableuv4) - 0.5));\\n  stars_2 = (stars_2 + max (stars_2, clamp (\\n    ((1.0 - dist_1) * ((0.1 / sqrt(\\n      dot (tmpvar_12, tmpvar_12)\\n    )) * xlat_mutablesmask))\\n  , 0.0, 1.0)));\\n  dist_1 = ((1.0 - fract(\\n    (1.0 + tmpvar_5)\\n  )) * (1.0 - tmpvar_6));\\n  vec2 tmpvar_13;\\n  tmpvar_13.x = q1;\\n  tmpvar_13.y = q2;\\n  xlat_mutableuv3 = (xlat_mutableuv1 + tmpvar_13);\\n  xlat_mutableuv4 = ((64.0 * dist_1) * xlat_mutableuv3);\\n  xlat_mutablesmask = (texture (sampler_pw_noise_lq, (xlat_mutableuv4 / 256.0)).y - 0.84);\\n  vec2 tmpvar_14;\\n  tmpvar_14 = abs((fract(xlat_mutableuv4) - 0.5));\\n  stars_2 = (stars_2 + max (stars_2, clamp (\\n    ((1.0 - dist_1) * ((0.1 / sqrt(\\n      dot (tmpvar_14, tmpvar_14)\\n    )) * xlat_mutablesmask))\\n  , 0.0, 1.0)));\\n  vec3 tmpvar_15;\\n  tmpvar_15 = max ((texture (sampler_main, uv).xyz * 2.0), ((\\n    (texture (sampler_blur2, uv).xyz * scale2)\\n   + bias2) * 2.0));\\n  ret_3 = (ret_3 + clamp ((stars_2 * stars_2), 0.0, 1.0));\\n  ret_3 = (ret_3 * clamp ((1.0 - \\n    (2.0 * dot (tmpvar_15, vec3(0.32, 0.49, 0.29)))\\n  ), 0.0, 1.0));\\n  ret_3 = (ret_3 + tmpvar_15);\\n  ret_3 = (ret_3 * normalize(texture (sampler_noise_hq, (\\n    (uv + tmpvar_4)\\n   / 6.0))).xyz);\\n  vec4 tmpvar_16;\\n  tmpvar_16.w = 1.0;\\n  tmpvar_16.xyz = ret_3;\\n  ret = tmpvar_16.xyz;\\n }"}')},4999:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"wave_mode":7,"wrap":0,"invert":1,"wave_a":0.001,"warpanimspeed":0.01,"warpscale":100,"zoomexp":0.32104,"warp":0.01,"wave_r":0,"wave_g":0.4,"wave_b":0,"ob_size":0.005,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":44.8,"mv_y":24,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"textured":1,"rad":2.6671,"tex_zoom":0.27425,"g":1,"b":1,"a":0.1,"r2":1,"g2":0,"a2":0.4,"border_r":0,"border_g":0,"border_b":0},"init_eqs_eel":"","frame_eqs_eel":"tex_capture  = q1;\\n\\nsaw = saw - 0.001*bass;\\nsaw = if(below(saw,0.2),0.6,saw);\\n\\ntex_zoom = saw;\\n\\n\\n"},{"baseVals":{"enabled":1,"textured":1,"rad":2.6671,"tex_zoom":0.27425,"g":1,"b":1,"a":0.1,"r2":1,"g2":0,"a2":0.4,"border_r":0,"border_g":0,"border_b":0},"init_eqs_eel":"","frame_eqs_eel":"tex_capture  = q1;\\n\\nsaw = saw - 0.001*bass;\\nsaw = if(below(saw,0.1),0.6,saw);\\n\\ntex_zoom = saw;"},{"baseVals":{"enabled":1,"textured":1,"rad":2.66718,"tex_zoom":0.36964,"g":1,"b":1,"a":0.1,"a2":0.4,"border_g":0,"border_b":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"textured":1,"rad":2.66718,"tex_zoom":0.30294,"g":1,"b":1,"a":0.1,"a2":0.4,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"thick":1,"smoothing":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//q1 = state;\\n//q2 = basstime;\\n\\nq1 = 0;\\nspeed = bass_att*0.2;\\nv = sample*100000 + value2*bass*0.1;\\n\\n//state 0 elipse\\nxs = xs + sin(v*0.1 + sin(v)*0.1)*speed*atan(v*1.51);\\nys = ys + sin(v*0.1 + cos(v)*0.1)*speed*atan(v);\\n\\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + ys);\\ny = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs);\\n\\nx = x;\\ny = y;\\ny = y;\\n\\n//r = 0.5 + 0.5*sin(time*1.22) + 0.1;\\ng = 1;//0.4 + 0.4*sin(time*1.307) + x;\\n//b = 0.4 + 0.4*sin(time*1.959);\\n\\n\\nxs = if(above(xs,1000),0 ,xs);\\nys = if(above(ys,1000),0 ,ys);"},{"baseVals":{"enabled":1,"thick":1,"smoothing":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//q1 = state;\\n//q2 = basstime;\\n\\nq1 = 0;\\nspeed = bass_att*0.2;\\nv = sample*100000 + value2*bass*0.1;\\n\\n//state 0 elipse\\nxs = xs + sin(v*0.1 + sin(v)*0.1)*speed*atan(v*1.51);\\nys = ys + sin(v*0.1 + cos(v)*0.1)*speed*atan(v);\\n\\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + ys + 0.7);\\ny = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs + 0.7);\\n\\nx = x;\\ny = y;\\ny = y;\\n\\n//r = 0.5 + 0.5*sin(time*1.4) + 0.1;\\ng = 1;//0.4 + 0.4*sin(time*1.307) + x;\\n//b = 0.4 + 0.4*sin(time*1.259);\\n\\n\\nxs = if(above(xs,1000),0 ,xs);\\nys = if(above(ys,1000),0 ,ys);"},{"baseVals":{"enabled":1,"thick":1,"smoothing":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//q1 = state;\\n//q2 = basstime;\\n\\nq1 = 0;\\nspeed = bass_att*0.2;\\nv = sample*100000 + value2*bass*0.1;\\n\\n//state 0 elipse\\nxs = xs + sin(v*0.1 + sin(v)*0.1)*speed*atan(v*1.51);\\nys = ys + sin(v*0.1 + cos(v)*0.1)*speed*atan(v);\\n\\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + ys + 1.4);\\ny = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs + 1.4);\\n\\nx = x;\\ny = y;\\ny = y;\\n\\n//r = 0.5 + 0.5*sin(time*1.4674) + 0.1;\\ng = 1;//0.4 + 0.4*sin(time*1.807) + x;\\n//b = 0.4 + 0.4*sin(time*1.359);\\n\\n\\nxs = if(above(xs,1000),0 ,xs);\\nys = if(above(ys,1000),0 ,ys);"},{"baseVals":{"smoothing":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"speed = bass*0.1;\\nv = sample*10000 + value2*bass*0.1;\\n\\n//state 0 elipse\\nxs = xs + (equal(0,q1))*sin(v*1)*speed*atan(v*1.51);\\nys = ys + (equal(0,q1))*sin(v*1)*speed;\\n\\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + xs);\\ny = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs);\\n\\ny = y - sample*0.1;\\n\\nx = x*0.6 + 0.2;\\ny = y + bass*0.1;\\ny = y*0.8;\\n\\nr = 0.5 + 0.5*sin(time*6.22) + 0.1;\\ng = 0.4 + 0.4*sin(time*5.307);\\nb = 0.4 + 0.4*sin(time*4.959)*x;\\n\\nxs = if(above(xs,1000),0 ,xs);\\nys = if(above(ys,1000),0 ,ys);"}],"init_eqs_eel":"x1 = 0;\\ny1 = 0;","frame_eqs_eel":"decay = 0.25;\\nxx1 = xx1*0.9 + (bass)*0.01;\\nxx2 = xx2*0.9 + (treb)*0.01;\\nyy1 = yy1*0.94 + (treb+bass)*0.0075;\\n\\nx1 = 0.5 + (xx1-xx2)*2;\\ny1 = 0.4 + yy1;\\n\\nx1 = max(0,min(1,x1));\\ny1 = max(0,min(1,y1));\\n//x2 = 0;y2 = 0;x3 = 0;y3 = 0;x4 = 0;y4 = 0;\\n\\nspring = 50;\\ngrav = 2;\\nresist = 5;\\nbounce = 0.75;\\ndt = 0.0005;\\n\\nspx2 = (x1+x3-2*x2)*spring;\\nspy2 = (y1+y3-2*y2)*spring;\\nspx3 = (x2+x4-2*x3)*spring;\\nspy3 = (y2+y4-2*y3)*spring;\\nspx4 = (x3-x4)*spring;\\nspy4 = (y3-y4)*spring;\\n\\nvx2 = vx2*(1-resist*dt) + dt*(spx2);\\nvy2 = vy2*(1-resist*dt) + dt*(spy2-grav);\\nvx3 = vx3*(1-resist*dt) + dt*(spx3);\\nvy3 = vy3*(1-resist*dt) + dt*(spy3-grav);\\nvx4 = vx4*(1-resist*dt) + dt*(spx4);\\nvy4 = vy4*(1-resist*dt) + dt*(spy4-grav);\\n\\nx2 = x2 + vx2;\\ny2 = y2 + vy2;\\nx3 = x3 + vx3;\\ny3 = y3 + vy3;\\nx4 = x4 + vx4;\\ny4 = y4 + vy4;\\n\\nvx2 = if(above(x2,0.1),vx2,abs(vx2)*bounce);\\nvx2 = if(below(x2,0.9),vx2,-abs(vx2)*bounce);\\nvx3 = if(above(x3,0.1),vx3,abs(vx3)*bounce);\\nvx3 = if(below(x3,0.9),vx3,-abs(vx3)*bounce);\\nvx4 = if(above(x4,0.1),vx4,abs(vx4)*bounce);\\nvx4 = if(below(x4,0.9),vx4,-abs(vx4)*bounce);\\n\\nvy2 = if(above(y2,0),vy2,abs(vy2)*bounce);\\nvy2 = if(below(y2,1),vy2,-abs(vy2)*bounce);\\nvy3 = if(above(y3,0),vy3,abs(vy3)*bounce);\\nvy3 = if(below(y3,1),vy3,-abs(vy3)*bounce);\\nvy4 = if(above(y4,0),vy4,abs(vy4)*bounce);\\nvy4 = if(below(y4,1),vy4,-abs(vy4)*bounce);\\n\\n\\nq1 = x1;\\nq2 = x2;\\nq3 = x3;\\nq4 = x4;\\n\\nq5 = y1;\\nq6 = y2;\\nq7 = y3;\\nq8 = y4;\\n\\nmonitor = ry4;\\n\\nzoom = 1;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  ret_1 = texture (sampler_main, uv).xyz;\\n  ret_1 = (ret_1 + ((ret_1 - \\n    ((texture (sampler_blur2, uv).xyz * scale2) + bias2)\\n  ) * 0.3));\\n  ret_1 = (ret_1 * 0.9);\\n  ret_1 = (ret_1 + ((\\n    ((texture (sampler_noise_lq, ((\\n      (uv_orig * texsize.xy)\\n     * \\n      (texsize_noise_lq.zw * 0.4)\\n    ) + rand_frame.xy)).xyz - 0.5) / 256.0)\\n   * 122.0) * clamp (\\n    (treb_att - 1.0)\\n  , 0.0, 1.0)));\\n  ret_1 = mix (ret_1, vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))), vec3(0.2, 0.2, 0.2));\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ret_1;\\n  ret = tmpvar_2.xyz;\\n }","comp":" shader_body { \\n  vec2 uv_1;\\n  vec2 uv3_2;\\n  vec2 uv2_3;\\n  uv_1 = (uv - 0.5);\\n  uv_1 = (uv_1 * aspect.xy);\\n  uv2_3.x = ((uv_1.x * -0.497265) - (uv_1.y * 0.8675987));\\n  uv2_3.y = ((uv_1.x * 0.8675987) + (uv_1.y * -0.497265));\\n  uv3_2.x = ((uv_1.x * -0.5000263) - (uv_1.y * -0.8660102));\\n  uv3_2.y = ((uv_1.x * -0.8660102) + (uv_1.y * -0.5000263));\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = max (max (texture (sampler_main, (uv_1 + 0.5)).xyz, texture (sampler_main, (uv2_3 + 0.5)).xyz), texture (sampler_main, (uv3_2 + 0.5)).xyz);\\n  ret = tmpvar_4.xyz;\\n }"}')},4839:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1.9,"echo_zoom":1.169,"wave_thick":1,"wave_brighten":0,"wrap":0,"darken_center":1,"wave_a":4.1,"wave_scale":0.972,"wave_smoothing":0.9,"wave_mystery":0.094,"modwavealphastart":1,"modwavealphaend":1.3,"warpscale":2.853,"zoomexp":3.6,"zoom":1.02109,"rot":-0.16,"warp":0.309,"wave_x":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":40,"thickoutline":1,"textured":1,"rad":0.59957,"tex_zoom":1.3345,"g":1,"b":1,"r2":1,"b2":1,"border_b":0,"border_a":0},"init_eqs_eel":"bob = 1.5;\\nro = 0;\\nred = int(rand(20));","frame_eqs_eel":"vol = 1 + 0.2*((bass_att+treb_att+mid_att)/3);\\nbob = bob*above(bob,0.01) - 0.01 + 1*(1 - above(bob,0.01));\\nbob = 0.4 + 0.4*sin(time*0.8);\\nbob = bob*vol;\\nrad = bob;\\nborder_1 = 0.4;\\nsides = 30;\\nro = ro + 0.02;\\nang = ro;\\nrad = 0.6;\\n\\nsp = red*0.025;\\nspi = 0.5 - sp;\\ntm = time*0.1;\\nborder_r = 0.5 + sp*sin(tm*0.6) + spi*cos(tm*1.46);\\nborder_g = 0.5 + sp*sin(tm*1.294) + spi*cos(tm*0.87);\\nborder_b = 0.5 + sp*sin(tm*1.418) + spi*cos(tm*0.76);"},{"baseVals":{"enabled":1,"sides":40,"additive":1,"g":1,"b":1,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.5 + 0.5*(sin(time*1.1)*0.3 + 0.7*sin(time*0.5));\\nx = 0.5 + 0.225*sin(time);\\ny = 0.5 + 0.3*cos(time);\\n\\nrad = rad*mid_att;\\nr = 0.5 + 0.5*sin(frame*0.5);\\nb = 0.5 + 0.5*sin(frame*0.5 + 2.094);\\ng = 0.5 + 0.5*sin(frame*0.5 + 4.188);\\n"},{"baseVals":{"enabled":1,"sides":40,"additive":1,"g":1,"b":1,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.5 + 0.5*(sin(time*1.1)*0.3 + 0.7*sin(time*0.5));\\nx = 0.5 + 0.225*sin(time + 2.09);\\ny = 0.5 + 0.3*cos(time + 2.09);\\n\\nrad = rad*bass_att;\\nr = 0.5 + 0.5*sin(frame*0.5);\\nb = 0.5 + 0.5*sin(frame*0.5 + 2.094);\\ng = 0.5 + 0.5*sin(frame*0.5 + 4.188);\\n"},{"baseVals":{"enabled":1,"sides":40,"additive":1,"g":1,"b":1,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.5 + 0.5*(sin(time*1.1)*0.3 + 0.7*sin(time*0.5));\\nx = 0.5 + 0.225*sin(time + 4.19);\\ny = 0.5 + 0.3*cos(time + 4.19);\\n\\nrad = rad*treb_att;\\nr = 0.5 + 0.5*sin(frame*0.5);\\nb = 0.5 + 0.5*sin(frame*0.5 + 2.094);\\ng = 0.5 + 0.5*sin(frame*0.5 + 4.188);\\n"}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.400*( 0.60*sin(0.933*time) + 0.40*sin(1.045*time) );\\nwave_g = wave_g + 0.400*( 0.60*sin(0.900*time) + 0.40*sin(0.956*time) );\\nwave_b = wave_b + 0.400*( 0.60*sin(0.910*time) + 0.40*sin(0.920*time) );\\nq8 = oldq8+if(above(bass+bass_att,1.8),q8+0.0005*pow((bass+bass_att-1),9),0);\\noldq8 = q8;\\nmonitor = q8;\\nzoom = zoom + 0.023*( 0.60*sin(0.339*q8) + 0.40*sin(0.276*q8) );\\nrot = rot + 0.030*( 0.60*sin(0.381*q8) + 0.40*sin(0.579*q8) );\\n//decay = decay - 0.02*equal(frame%40,0);\\nmv_r = wave_r;\\nmv_b = wave_b;\\nmv_g = wave_g;\\nmv_x = 1.25;\\nmv_y = 1.25;\\nmv_dx = 0.1*sin(1.1*time);\\nmv_dy = 0.1*cos(1.112*time);","pixel_eqs_eel":"rot=rot+1/(10*(rad+0.2+0.1*sin(q8)));","warp":" shader_body { \\n  vec3 ret_1;\\n  ret_1 = texture (sampler_main, uv).xyz;\\n  ret_1 = (ret_1 + ((\\n    (ret_1 - mix (((texture (sampler_blur2, uv).xyz * scale2) + bias2), ((texture (sampler_blur1, uv).xyz * scale1) + bias1), uv_orig.xxx))\\n   * 0.3) - (0.00666 * \\n    (((bass + treb) + mid) - 0.5)\\n  )));\\n  ret_1 = (ret_1 * 0.95);\\n  ret_1 = (ret_1 + ((\\n    ((texture (sampler_noise_lq, ((\\n      (uv_orig * texsize.xy)\\n     * \\n      (texsize_noise_lq.zw * 0.4)\\n    ) + rand_frame.xy)).xyz - 0.5) / 256.0)\\n   * 122.0) * clamp (\\n    (treb_att - 1.0)\\n  , 0.0, 1.0)));\\n  ret_1 = mix (ret_1, vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))), vec3(0.2, 0.2, 0.2));\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ret_1;\\n  ret = tmpvar_2.xyz;\\n }","comp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = max (texture (sampler_main, uv).xyz, texture (sampler_main, ((vec2(-0.5, 0.5) * \\n    (uv - 0.5)\\n  ) + 0.5)).xyz);\\n  ret = tmpvar_1.xyz;\\n }"}')},3261:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":0,"decay":0.95,"echo_zoom":1,"echo_alpha":0.2,"echo_orient":3,"wave_a":0.001,"zoom":0.96,"warp":0.00052,"wave_r":0,"wave_g":0,"wave_b":0,"ob_a":1,"mv_x":64,"mv_y":4.8,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"textured":1,"x":0.25,"y":0.25,"rad":1.10444,"tex_zoom":0.22746,"g":1,"b":1,"r2":1,"b2":1,"border_r":0,"border_g":0,"border_a":0},"init_eqs_eel":"tex_saw = 0.4;","frame_eqs_eel":"ang = q1*0.2;\\n//x = 0.5 + 0.2*sin(q2);\\n//y = 0.5 + (0.3*sin(q2));\\n\\ntex_capture = 1;//above(q3,2);\\ntex_zoom = q8;"},{"baseVals":{"enabled":1,"textured":1,"x":0.75,"y":0.75,"rad":0.99983,"tex_zoom":0.22746,"g":1,"b":1,"r2":1,"b2":1,"border_r":0,"border_g":0,"border_a":0},"init_eqs_eel":"tex_saw = 0.4;","frame_eqs_eel":"ang = q1*0.2;\\n//x = 0.5 + 0.2*sin(q2);\\n//y = 0.5 + (0.3*sin(q2));\\n\\ntex_capture = above(q3,2);\\ntex_zoom = 0.6;"},{"baseVals":{"enabled":1,"textured":1,"x":0.4,"y":0.75,"rad":0.7418,"tex_zoom":0.22746,"g":1,"b":1,"r2":1,"b2":1,"border_r":0,"border_g":0,"border_a":0},"init_eqs_eel":"tex_saw = 0.4;","frame_eqs_eel":"ang = q1*0.2;\\n//x = 0.5 + 0.2*sin(q2);\\n//y = 0.5 + (0.3*sin(q2));\\n\\ntex_capture = above(q3,1);\\ntex_zoom = 0.4;"},{"baseVals":{"enabled":1,"sides":100,"rad":0.98608,"r":0,"a":0,"g2":0,"a2":0.2,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.5 +  0.4*sin(q1*0.45);\\ny = 0.5 +  0.4*sin(q1*0.5);\\n\\nr2 = 0.5 + 0.5*sin(q1 *0.458);\\ng2 = 0.5 + 0.5*sin(q1 *0.858);\\nb2 = 0.5 + 0.5*sin(q1 *0.658);"}],"waves":[{"baseVals":{"usedots":1,"thick":1,"additive":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"a":0.5,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//init\\nzs = if(below(zs,1),9,zs);\\n\\nzs = if(above(zs, 1300),1, zs);\\n\\nspeed = bass*0.002;\\n\\nxcoef = equal(q4,0)*2 + equal(q4,1)*2.1  + equal(q4,2)*2.2 + equal(q4,3)*2.3 + equal(q4,4)*2.4 + equal(q4,5)*2.5;\\n\\n//sum\\nzs = zs + tan(q1*0.015)*speed;\\n\\n\\ncount = count + 0.0001;\\ncount = if(above(count,6.24),0,count);\\n\\n//project\\nx = 0.1*cos(q1*zs*2 + 0.1);\\ny = 0.1*sin(q1*zs*1 + 0.1);\\n\\n//rotate\\nx = x*cos(-q1*3)*0.8 - y*sin(-q1*3)*0.8;\\ny = x*sin(-q1*3) + y*cos(-q1*3);\\n\\n//move\\nx = x + q6 + 0.5;\\ny = y + q7 + 0.5;\\n\\nr = 0.5 + 0.5*sin(q1*1.2 + x + x);\\ng = 0.5 + 0.5*sin(q1*1.5 + x + y);\\nb = 0.5 + 0.5*sin(q1*1.36 + y + y);"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"zoomy = 1;","frame_eqs_eel":"basstime = basstime + bass*0.03;\\nq1 = basstime;\\n\\n//start in most active range\\nbasstime = if(below(basstime,450),450,basstime);\\nbasstime = if(above(basstime,495),450,basstime);\\n\\nbasstime = basstime + bass_att*0.03;\\nvol = pow(bass+mid+treb,2);\\nbasssum = vol;\\n\\nstickybit = time%2;\\n\\n//avg vol\\n//buffer 1\\nvolAvg = volAvg + vol*equal(stickybit,1);\\n//number of samples 1 or framerate\\nsample1 = sample1 + equal(stickybit,1);\\n//buffer 2\\nvolAvg2 = volAvg2 + vol*equal(stickybit,0);\\n//number of samples 2\\nsample2 = sample2 + equal(stickybit,0);\\n\\n//transision\\nedge = bnot(equal(bit2,stickybit));\\n\\nvolAvg = volAvg - volAvg*edge*stickybit;\\nvolAvg2 = volAvg2 - volAvg2*edge*equal(stickybit,0);\\n\\nsample1 = sample1  - sample1*edge*stickybit;\\nsample2 = sample2  - sample2*edge*equal(stickybit,0);\\n\\n//test vol against avg buffer lvl\\ndiff = if(equal(stickybit,1), (basssum/(volAvg2/sample2)) , 0);\\ndiff = if(equal(stickybit,0), (basssum/(volAvg/sample1)), diff);\\n\\nq3 = diff;\\n\\nbit2 = time%2;\\n\\nstate = if(above(state,5),0,state);\\nstate =  state + above(diff,3);\\nq4 = state;\\n\\ndifftime = difftime + diff*0.03;\\nq2 = difftime;\\n\\n//fix a strange error\\ndifftime = if(above(difftime,2000),0, difftime);\\n\\n//toggle zoom in and out\\nzoom_in = zoom_in + above(diff,4);\\nzoom_in = if(above(zoom_in,2),0,zoom_in);\\nq5 = zoom_in;\\n\\n\\ntex_saw = tex_saw - 0.002*diff;\\nflag = below(tex_saw,0.1);\\ntex_saw = if(below(tex_saw,0.1),0.6,tex_saw);\\nstate_echo = state_echo + flag;\\n\\nq8 = tex_saw;\\nmonitor = tex_saw;\\n\\n\\n//obtain lock while zooming out\\nlock = if(equal(lock,0),bnot(equal(flag, prev_edge)),1);\\n\\n//gradient zoom out\\nlock = if(equal(state_echo,0),0,lock);\\nlock = if(equal(state_echo,1),0,lock);\\nlock = if(equal(state_echo,2)*(below(zoomy,0.3505)),0,lock);\\nlock = if(equal(state_echo,3)*(below(zoomy,0.205)),0,lock);\\n\\nzoomy = zoomy - zoomy*0.02*lock;\\n\\nzoomy = equal(state_echo,4)*1.05 + bnot(equal(state_echo,4))*zoomy;\\necho_zoom = zoomy;\\n\\nmonitor  = tex_saw;\\n\\nstate_echo = if(above(state_echo,3),0,state_echo);\\n//for edge detection\\nprev_edge = flag;","pixel_eqs_eel":"zoom = 1 - equal(q5,0)*0.1*q3 + equal(q5,1)*0.1*q3;\\n\\nsaw_r = saw_r + 0.0001*bass;\\nsaw_r =  if(above(saw_r,1),0,saw_r);\\n\\nsaw_g = saw_g + 0.00012*bass;\\nsaw_g =  if(above(saw_g,1),0,saw_g);\\n\\nsaw_b = saw_b + 0.00011*bass;\\nsaw_b =  if(above(saw_b,1),0,saw_b);\\n\\n\\ndecay_r = 5 - x*y*saw_r;\\ndecay_g = 5 - y*x*saw_g;\\ndecay_b = 5 - x*y*saw_b;\\n\\nrot = 0;\\nzoom = 1;","warp":"","comp":""}')},3237:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":4,"decay":0.9,"echo_zoom":1.006596,"echo_alpha":0.5,"echo_orient":1,"wave_mode":1,"wrap":0,"brighten":1,"wave_a":0.001,"zoom":0.96,"rot":-6.279995,"warp":0.000521,"wave_r":0,"wave_g":0,"wave_b":0,"ob_r":1,"ob_g":1,"ob_b":1,"mv_x":64,"mv_y":48,"mv_l":4.95,"mv_r":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"textured":1,"rad":2.667177,"tex_zoom":0.451117,"g":1,"a":0.15,"g2":0,"a2":0.05},"init_eqs_eel":"","frame_eqs_eel":"r = 0.1 + 0.5*sin(q1);\\ng = 0.1 + 0.5*sin(q1*0.9878);\\nb = 0.1 + 0.5*sin(q1*0.897);"},{"baseVals":{"sides":100,"textured":1,"rad":2.380961,"tex_zoom":0.424973,"r":0,"b":1,"a":0.4,"g2":0,"a2":0.9,"border_a":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"r = 0.1 + 0.5*sin(q1);\\ng = 0.1 + 0.5*sin(q1*0.9878);\\nb = 0.1 + 0.5*sin(q1*0.897);"},{"baseVals":{"sides":100,"x":1,"rad":0.102009,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.5 + 0.02*sin(time);\\ny = 0.5 + 0.02*cos(time);\\n\\nr = 0.1 + 0.5*sin(q1*0.01);\\ng = 0.1 + 0.5*sin(q1*0.09878);\\nb = 0.1 + 0.5*sin(q1*0.0897);\\n\\nr2 = 0.1 + 0.5*sin(q1*0.035);\\ng2 = 0.1 + 0.5*sin(q1*0.09878);\\nb2 = 0.1 + 0.5*sin(q1*0.0897);"},{"baseVals":{"enabled":1,"sides":100,"g":1,"b":1,"r2":1,"g2":0,"b2":1,"a2":1},"init_eqs_eel":"","frame_eqs_eel":"x = 0.5 + 0.02*sin(time*0.5 + 1.68);\\ny = 0.5 + 0.02*cos(time*0.5 + 1.68);\\n\\n\\nr = 0.1 + 0.5*sin(q1*0.0144);\\ng = 0.1 + 0.5*sin(q1*0.05878);\\nb = 0.1 + 0.5*sin(q1*0.0797);\\n\\nr2 = 0.1 + 0.5*sin(q1*0.065);\\ng2 = 0.1 + 0.5*sin(q1*0.07878);\\nb2 = 0.1 + 0.5*sin(q1*0.0897);"}],"waves":[{"baseVals":{"enabled":1,"spectrum":1,"thick":1,"additive":1,"a":0.1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"u = abs(cos(q1*0.1))*3.14159;\\nv = abs(cos(q1*0.015))*3.14159*2;\\ns = sample*3.14*100;\\nss = sample*6.28*1000;\\n\\n//draw\\nxs = 0.3*sin(s)*cos(ss);\\nys = 0.3*sin(s)*sin(ss);\\nzs = 0.3*cos(s);\\n\\n\\n//rotate x axis\\nangle = sin(q1*0.027)*6.28;\\nyx = ys*cos(angle) - zs*sin(angle);\\nzx = ys*sin(angle) + zs*cos(angle);\\nxx = xs;\\n\\n//rotate y axis\\nangle2 = sin(q1*0.03)*6.28;\\nxd = xx*cos(angle2) - zx*sin(angle2);\\nzd = xx*sin(angle2) + zx*cos(angle2);\\nyd = yx;\\n\\n//rotaye z axis\\nangle3 = sin(q1*0.028)*6.28;\\nxn = xd*cos(angle3) - yd*sin(angle3);\\nyn = xd*sin(angle3) + yd*cos(angle3);\\n\\nzd = zd + 2;\\n\\nx = xn*zd*0.3 + 0.5;\\ny = yn*zd*0.3*1.2 + 0.5;\\n\\n\\nr = 0.5 + 0.5*sin(q1*0.2 + x + x) + xn;\\ng = 0.5 + 0.5*sin(q1*0.5 + x + y) + yn;\\nb = 0.5 + 0.5*sin(q1*0.36 + y + y) + zn;"},{"baseVals":{"enabled":1,"spectrum":1,"usedots":1,"thick":1,"additive":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//apply zoom burst on beat\\nflag = above(q3,2);\\n//state zero is ready state\\nstate = state + flag*equal(state,0);\\n\\n//upwards flight\\nyval = if(equal(state,0),0, yval);\\nyval = yval + 0.00004*equal(state,1);\\nymax = if(equal(state,0),int(rand(100))*0.004,ymax);\\n\\n//hit apogee\\nstate = if(above(yval,0.5+ymax),2,state);\\n\\n//reset variable\\nyval = if(equal(state,0),0, yval);\\nburst = if(equal(state,0),0.001,burst);\\nalphax = if(equal(state,0),1,alphax);\\nxdriftinc = if(equal(state,0),0,xdriftinc);\\n\\nburstspeed = if(equal(state,0),int(rand(10)),burstspeed);\\nxdrift = if(equal(state,0),int(rand(20)),xdrift);\\n//to get the numbers small enough have to use constants\\nxdriftinc = xdriftinc\\n+ equal(xdrift,0)*equal(state,1)*0.00002\\n+ equal(xdrift,1)*equal(state,1)*0.000018\\n+ equal(xdrift,2)*equal(state,1)*0.000016\\n+ equal(xdrift,3)*equal(state,1)*0.000014\\n+ equal(xdrift,4)*equal(state,1)*0.000012\\n+ equal(xdrift,5)*equal(state,1)*0.00001\\n+ equal(xdrift,6)*equal(state,1)*0.000008\\n+ equal(xdrift,7)*equal(state,1)*0.000006\\n+ equal(xdrift,8)*equal(state,1)*0.000004\\n+ equal(xdrift,9)*equal(state,1)*0.000002\\n+ equal(xdrift,11)*equal(state,1)*-0.000002\\n+ equal(xdrift,12)*equal(state,1)*-0.000004\\n+ equal(xdrift,13)*equal(state,1)*-0.000006\\n+ equal(xdrift,14)*equal(state,1)*-0.000008\\n+ equal(xdrift,15)*equal(state,1)*-0.00001\\n+ equal(xdrift,16)*equal(state,1)*-0.000012\\n+ equal(xdrift,17)*equal(state,1)*-0.000014\\n+ equal(xdrift,18)*equal(state,1)*-0.000016\\n+ equal(xdrift,19)*equal(state,1)*-0.000018;\\n\\nburst = burst\\n+ equal(burstspeed,0)*equal(state,2)*0.000024\\n+ equal(burstspeed,1)*equal(state,2)*0.000022\\n+ equal(burstspeed,2)*equal(state,2)*0.00002\\n+ equal(burstspeed,3)*equal(state,2)*0.000018\\n+ equal(burstspeed,4)*equal(state,2)*0.000016\\n+ equal(burstspeed,5)*equal(state,2)*0.000014\\n+ equal(burstspeed,6)*equal(state,2)*0.000012\\n+ equal(burstspeed,7)*equal(state,2)*0.00001\\n+ equal(burstspeed,8)*equal(state,2)*0.000008\\n+ equal(burstspeed,9)*equal(state,2)*0.000008;\\n\\nalphax = alphax - 0.00004*equal(state,2);\\nstate = if(below(alphax,0),0,state);\\n\\n\\ns = sample*3.14*100;\\nss = sample*6.28*1000;\\n\\n//draw torus\\nxs = (burst + 0.0001*cos(s))*cos(ss);\\nys = (burst + 0.0001*cos(s))*sin(ss);\\nzs = 0.1*burst*sin(s);\\n\\n\\n//rotate x axis\\nangle = sin(-q1*0.035)*6.28;\\nyx = ys*cos(angle) - zs*sin(angle);\\nzx = ys*sin(angle) + zs*cos(angle);\\nxx = xs;\\n\\n//rotate y axis\\nangle2 = sin(q1*0.03)*6.28;\\nxd = xx*cos(angle2) - zx*sin(angle2);\\nzd = xx*sin(angle2) + zx*cos(angle2);\\nyd = yx;\\n\\n//rotaye z axis\\nangle3 = sin(-q1*0.032)*6.28;\\nxn = xd*cos(angle3) - yd*sin(angle3);\\nyn = xd*sin(angle3) + yd*cos(angle3);\\n\\nzd = zd + 2;\\n\\nx = xn*zd*0.3 + 0.5;\\ny = yn*zd*0.3*1.2;\\n\\n\\nx = x + xdriftinc;\\ny = y + sin(yval*1.5) - 0.18;\\n\\n\\nr = 0.5 + 0.5*sin(q1*1.7 + x + x);\\ng = 0.5 + 0.5*sin(q1*1.5 + x + y);\\nb = 0.5 + 0.5*sin(q1*1.16 + y + y);"},{"baseVals":{"enabled":1,"spectrum":1,"usedots":1,"thick":1,"additive":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//apply zoom burst on beat\\nflag = above(q3,2);\\n//state zero is ready state\\nstate = state + flag*equal(state,0);\\n\\n//upwards flight\\nyval = if(equal(state,0),0, yval);\\nyval = yval + 0.00004*equal(state,1);\\nymax = if(equal(state,0),int(rand(100))*0.004,ymax);\\n\\n//hit apogee\\nstate = if(above(yval,0.5+ymax),2,state);\\n\\n//reset variable\\nyval = if(equal(state,0),0, yval);\\nburst = if(equal(state,0),0.001,burst);\\nalphax = if(equal(state,0),1,alphax);\\nxdriftinc = if(equal(state,0),0,xdriftinc);\\n\\nburstspeed = if(equal(state,0),int(rand(10)),burstspeed);\\nxdrift = if(equal(state,0),int(rand(20)),xdrift);\\n//to get the numbers small enough have to use constants\\nxdriftinc = xdriftinc\\n+ equal(xdrift,0)*equal(state,1)*0.00002\\n+ equal(xdrift,1)*equal(state,1)*0.000018\\n+ equal(xdrift,2)*equal(state,1)*0.000016\\n+ equal(xdrift,3)*equal(state,1)*0.000014\\n+ equal(xdrift,4)*equal(state,1)*0.000012\\n+ equal(xdrift,5)*equal(state,1)*0.00001\\n+ equal(xdrift,6)*equal(state,1)*0.000008\\n+ equal(xdrift,7)*equal(state,1)*0.000006\\n+ equal(xdrift,8)*equal(state,1)*0.000004\\n+ equal(xdrift,9)*equal(state,1)*0.000002\\n+ equal(xdrift,11)*equal(state,1)*-0.000002\\n+ equal(xdrift,12)*equal(state,1)*-0.000004\\n+ equal(xdrift,13)*equal(state,1)*-0.000006\\n+ equal(xdrift,14)*equal(state,1)*-0.000008\\n+ equal(xdrift,15)*equal(state,1)*-0.00001\\n+ equal(xdrift,16)*equal(state,1)*-0.000012\\n+ equal(xdrift,17)*equal(state,1)*-0.000014\\n+ equal(xdrift,18)*equal(state,1)*-0.000016\\n+ equal(xdrift,19)*equal(state,1)*-0.000018;\\n\\nburst = burst\\n+ equal(burstspeed,0)*equal(state,2)*0.000024\\n+ equal(burstspeed,1)*equal(state,2)*0.000022\\n+ equal(burstspeed,2)*equal(state,2)*0.00002\\n+ equal(burstspeed,3)*equal(state,2)*0.000018\\n+ equal(burstspeed,4)*equal(state,2)*0.000016\\n+ equal(burstspeed,5)*equal(state,2)*0.000014\\n+ equal(burstspeed,6)*equal(state,2)*0.000012\\n+ equal(burstspeed,7)*equal(state,2)*0.00001\\n+ equal(burstspeed,8)*equal(state,2)*0.000008\\n+ equal(burstspeed,9)*equal(state,2)*0.000008;\\n\\nalphax = alphax - 0.00004*equal(state,2);\\nstate = if(below(alphax,0),0,state);\\n\\n\\ns = sample*3.14*100;\\nss = sample*6.28*1000;\\n\\n//draw torus\\nxs = (burst*0.8 + 0.4*burst*cos(s))*cos(ss);\\nys = (burst*0.8 + 0.4*burst*cos(s))*sin(ss);\\nzs = 0.4*burst*sin(s);\\n\\n\\n//rotate x axis\\nangle = sin(-q1*0.015)*6.28;\\nyx = ys*cos(angle) - zs*sin(angle);\\nzx = ys*sin(angle) + zs*cos(angle);\\nxx = xs;\\n\\n//rotate y axis\\nangle2 = sin(q1*0.01579)*6.28;\\nxd = xx*cos(angle2) - zx*sin(angle2);\\nzd = xx*sin(angle2) + zx*cos(angle2);\\nyd = yx;\\n\\n//rotaye z axis\\nangle3 = sin(q1*0.022)*6.28;\\nxn = xd*cos(angle3) - yd*sin(angle3);\\nyn = xd*sin(angle3) + yd*cos(angle3);\\n\\nzd = zd + 2;\\n\\nx = xn*zd*0.3 + 0.5;\\ny = yn*zd*0.3*1.2;\\n\\n\\nx = x + xdriftinc;\\ny = y + sin(yval*1.5) - 0.18;\\n\\n\\nr = 0.5 + 0.5*sin(q1*1.27 + x + x);\\ng = 0.5 + 0.5*sin(q1*1.5 + x + y);\\nb = 0.5 + 0.5*sin(q1*1.346 + y + y);"},{"baseVals":{"enabled":1,"spectrum":1,"usedots":1,"thick":1,"additive":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//apply zoom burst on beat\\nflag = above(q3,2);\\n//state zero is ready state\\nstate = state + flag*equal(state,0);\\n\\n//upwards flight\\nyval = if(equal(state,0),0, yval);\\nyval = yval + 0.00004*equal(state,1);\\nymax = if(equal(state,0),int(rand(100))*0.004,ymax);\\n\\n//hit apogee\\nstate = if(above(yval,0.5+ymax),2,state);\\n\\n//reset variable\\nyval = if(equal(state,0),0, yval);\\nburst = if(equal(state,0),0.001,burst);\\nalphax = if(equal(state,0),1,alphax);\\nxdriftinc = if(equal(state,0),0,xdriftinc);\\n\\nburstspeed = if(equal(state,0),int(rand(10)),burstspeed);\\nxdrift = if(equal(state,0),int(rand(20)),xdrift);\\n//to get the numbers small enough have to use constants\\nxdriftinc = xdriftinc\\n+ equal(xdrift,0)*equal(state,1)*0.00002\\n+ equal(xdrift,1)*equal(state,1)*0.000018\\n+ equal(xdrift,2)*equal(state,1)*0.000016\\n+ equal(xdrift,3)*equal(state,1)*0.000014\\n+ equal(xdrift,4)*equal(state,1)*0.000012\\n+ equal(xdrift,5)*equal(state,1)*0.00001\\n+ equal(xdrift,6)*equal(state,1)*0.000008\\n+ equal(xdrift,7)*equal(state,1)*0.000006\\n+ equal(xdrift,8)*equal(state,1)*0.000004\\n+ equal(xdrift,9)*equal(state,1)*0.000002\\n+ equal(xdrift,11)*equal(state,1)*-0.000002\\n+ equal(xdrift,12)*equal(state,1)*-0.000004\\n+ equal(xdrift,13)*equal(state,1)*-0.000006\\n+ equal(xdrift,14)*equal(state,1)*-0.000008\\n+ equal(xdrift,15)*equal(state,1)*-0.00001\\n+ equal(xdrift,16)*equal(state,1)*-0.000012\\n+ equal(xdrift,17)*equal(state,1)*-0.000014\\n+ equal(xdrift,18)*equal(state,1)*-0.000016\\n+ equal(xdrift,19)*equal(state,1)*-0.000018;\\n\\nburst = burst\\n+ equal(burstspeed,0)*equal(state,2)*0.000024\\n+ equal(burstspeed,1)*equal(state,2)*0.000022\\n+ equal(burstspeed,2)*equal(state,2)*0.00002\\n+ equal(burstspeed,3)*equal(state,2)*0.000018\\n+ equal(burstspeed,4)*equal(state,2)*0.000016\\n+ equal(burstspeed,5)*equal(state,2)*0.000014\\n+ equal(burstspeed,6)*equal(state,2)*0.000012\\n+ equal(burstspeed,7)*equal(state,2)*0.00001\\n+ equal(burstspeed,8)*equal(state,2)*0.000008\\n+ equal(burstspeed,9)*equal(state,2)*0.000008;\\n\\nalphax = alphax - 0.00004*equal(state,2);\\nstate = if(below(alphax,0),0,state);\\n\\n\\ns = sample*3.14*100;\\nss = sample*6.28*1000;\\n\\n//draw torus\\nxs = (burst + 0.1*cos(s))*cos(ss);\\nys = (burst + 0.1*cos(s))*sin(ss);\\nzs = 0.1*burst*sin(s);\\n\\n\\n//rotate x axis\\nangle = sin(-q1*0.035)*6.28;\\nyx = ys*cos(angle) - zs*sin(angle);\\nzx = ys*sin(angle) + zs*cos(angle);\\nxx = xs;\\n\\n//rotate y axis\\nangle2 = sin(-q1*0.03)*6.28;\\nxd = xx*cos(angle2) - zx*sin(angle2);\\nzd = xx*sin(angle2) + zx*cos(angle2);\\nyd = yx;\\n\\n//rotaye z axis\\nangle3 = sin(-q1*0.022)*6.28;\\nxn = xd*cos(angle3) - yd*sin(angle3);\\nyn = xd*sin(angle3) + yd*cos(angle3);\\n\\nzd = zd + 2;\\n\\nx = xn*zd*0.3 + 0.5;\\ny = yn*zd*0.3*1.2;\\n\\n\\nx = x + xdriftinc;\\ny = y + sin(yval*1.5) - 0.18;\\n\\n\\nr = 0.5 + 0.5*sin(q1*1.3 + x + x);\\ng = 0.5 + 0.5*sin(q1*1.1 + x + y);\\nb = 0.5 + 0.5*sin(q1*1.66 + y + y);"}],"init_eqs_eel":"state = 0;","frame_eqs_eel":"basstime = basstime + bass*0.06;\\nq1 = basstime;\\n\\nq9 = basstime * 0.000005;\\n\\nbasstime = if(below(basstime,1000),1000,basstime);\\n\\nvol = pow(bass+mid+treb,2);\\nbasssum = vol;\\n\\nstickybit = time%2;\\n\\n//avg vol\\n//buffer 1\\nvolAvg = volAvg + vol*equal(stickybit,1);\\n//number of samples 1 or framerate\\nsample1 = sample1 + equal(stickybit,1);\\n//buffer 2\\nvolAvg2 = volAvg2 + vol*equal(stickybit,0);\\n//number of samples 2\\nsample2 = sample2 + equal(stickybit,0);\\n\\n//transision\\nedge = bnot(equal(bit2,stickybit));\\n\\nvolAvg = volAvg - volAvg*edge*stickybit;\\nvolAvg2 = volAvg2 - volAvg2*edge*equal(stickybit,0);\\n\\nsample1 = sample1  - sample1*edge*stickybit;\\nsample2 = sample2  - sample2*edge*equal(stickybit,0);\\n\\n//test vol against avg buffer lvl\\ndiff = if(equal(stickybit,1), (basssum/(volAvg2/sample2)) , 0);\\ndiff = if(equal(stickybit,0), (basssum/(volAvg/sample1)), diff);\\n\\nq3 = diff;\\n\\nbit2 = time%2;\\n\\ndifftime = difftime + diff*0.03;\\nq2 = difftime;\\n\\n//fix a strange error\\ndifftime = if(above(difftime,2000),0, difftime);\\n\\n\\n\\nmonitor = q1;","pixel_eqs_eel":"zoom = 1;","warp":" shader_body { \\n  float final_noise_1;\\n  vec3 tmpvar_2;\\n  tmpvar_2.xy = uv;\\n  tmpvar_2.z = (q1 * 0.1);\\n  final_noise_1 = ((texture (sampler_noisevol_lq, tmpvar_2) * 2.0) - 1.0).x;\\n  final_noise_1 = (final_noise_1 + (0.5 * (\\n    (texture (sampler_noisevol_hq, (tmpvar_2 * 2.0)) * 2.0)\\n   - 1.0)).x);\\n  final_noise_1 = (final_noise_1 + (0.25 * (\\n    (texture (sampler_noisevol_lq, (tmpvar_2 * 4.0)) * 2.0)\\n   - 1.0)).x);\\n  final_noise_1 = (final_noise_1 + (0.125 * (\\n    (texture (sampler_noisevol_hq, (tmpvar_2 * 8.0)) * 2.0)\\n   - 1.0)).x);\\n  final_noise_1 = (1.0 + (final_noise_1 * 0.02));\\n  mat2 tmpvar_3;\\n  float tmpvar_4;\\n  tmpvar_4 = cos(q9);\\n  tmpvar_3[uint(0)].x = tmpvar_4;\\n  float tmpvar_5;\\n  tmpvar_5 = sin(q9);\\n  tmpvar_3[uint(0)].y = -(tmpvar_5);\\n  tmpvar_3[1u].x = tmpvar_5;\\n  tmpvar_3[1u].y = tmpvar_4;\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = texture (sampler_main, (((\\n    ((uv - 0.5) * (tmpvar_3 * final_noise_1))\\n   * \\n    (1.0 - ((rad * 0.05) * (0.9 + (bass * 0.1))))\\n  ) * final_noise_1) + 0.5)).xyz;\\n  ret = tmpvar_6.xyz;\\n }","comp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (mix (texture (sampler_main, uv).xyz, texture (sampler_main, (\\n    (vec2(-0.993, 0.993) * (uv - 0.5))\\n   + 0.5)).xyz, vec3(0.5, 0.5, 0.5)) * 2.0);\\n  ret = tmpvar_1.xyz;\\n }"}')},5072:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":0,"decay":1,"echo_zoom":0.9996,"echo_orient":3,"wave_mode":1,"wave_a":0.001,"warpscale":0.033004,"zoom":0.97,"rot":-6.279995,"warp":0.931,"wave_r":0,"wave_g":0,"wave_b":0,"ob_r":1,"ob_g":1,"ob_b":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"textured":1,"tex_capture":1,"tex_cx":0.5,"tex_cy":0.5,"rad":1.0003,"g":1,"b":1,"r2":1,"g2":0,"b2":1,"a2":1,"border_a":1},"init_eqs_eel":"","frame_eqs_eel":"r2 = 0.5 + 0.5*sin(q2*0.45);\\ng2 = 0.5 + 0.5*sin(q2*0.578);\\nb2 = 0.5 + 0.5*sin(q2*0.789);\\n\\n\\nx = 0.5 + 0.2*sin(q2*1.2);\\ny = 0.5 + 0.2*sin(q2*0.78);\\n\\nang = q2*0.899;\\ntex_capture = above(q3,2);"},{"baseVals":{"enabled":1,"sides":100,"textured":1,"tex_capture":0,"tex_cx":0.5,"tex_cy":0.5,"rad":0.742182,"g":1,"b":1,"r2":1,"g2":0,"b2":1,"a2":1,"border_a":1},"init_eqs_eel":"","frame_eqs_eel":"r2 = 0.5 + 0.5*sin(q2*0.45);\\ng2 = 0.5 + 0.5*sin(q2*0.678);\\nb2 = 0.5 + 0.5*sin(q2*0.689);\\n\\n\\nx = 0.5 + 0.2*sin(q2*0.899);\\ny = 0.5 + 0.2*sin(q2*0.95);\\n\\n\\n\\nang = -q2*1.05;\\ntex_capture = above(q3,2);"},{"baseVals":{"enabled":1,"sides":100,"textured":1,"tex_capture":0,"tex_cx":0.5,"tex_cy":0.5,"rad":0.498489,"g":1,"b":1,"r2":1,"g2":0,"b2":1,"a2":1,"border_a":1},"init_eqs_eel":"","frame_eqs_eel":"r2 = 0.5 + 0.5*sin(q2*0.35);\\ng2 = 0.5 + 0.5*sin(q2*0.578);\\nb2 = 0.5 + 0.5*sin(q2*0.689);\\n\\nx = 0.5 + 0.2*sin(q2);\\ny = 0.5 + 0.2*sin(q2*0.89);\\n\\n\\nang = q2;\\ntex_capture = above(q3,2);"},{"baseVals":{"enabled":1,"textured":1,"tex_capture":1,"tex_cx":0.5,"tex_cy":0.5,"rad":3.254462,"g":1,"b":1,"a":0.3,"r2":1,"b2":1,"a2":0.4,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"\\ntex_capture = above(q3,2);"}],"waves":[{"baseVals":{"enabled":1,"sep":1,"spectrum":1,"thick":1,"bdrawback":0,"additive":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"u = (cos(q1*0.1))*3.14159;\\nv = (cos(q1*0.015))*3.14159*2;\\ns = sample*3.14*100;\\nss = sample*6.28*1000;\\n\\n//draw\\nxs = (0.3 + 0.1*cos(s))*cos(ss)*0.2*cos(v);\\nys = (0.3 + 0.1*cos(s))*sin(ss)*6*u;\\nzs = 0.5*sin(s)*0.2*sin(v);\\n\\n//rotate x axis\\nangle = q1*0.1;\\nyx = ys*cos(angle) - zs*sin(angle);\\nzx = ys*sin(angle) + zs*cos(angle);\\nxx = xs;\\n\\n//rotate y axis\\nangle2 = q1*0.11;\\nxd = xx*cos(angle2) - zx*sin(angle2);\\nzd = xx*sin(angle2) + zx*cos(angle2);\\nyd = yx;\\n\\n//rotaye z axis\\nangle3 = q1*0.15;\\nxn = xd*cos(angle3) - yd*sin(angle3);\\nyn = xd*sin(angle3) + yd*cos(angle3);\\n\\nzd = zd;\\n\\nx = xn*zd*0.3 + 0.5;\\ny = yn*zd*0.3*1.2 + 0.5;\\n\\nr = 0.5 + 0.5*sin(q1*1.2 + x + x);\\ng = 0.5 + 0.5*sin(q1*1.5 + x + y);\\nb = 0.5 + 0.5*sin(q1*1.36 + y + y);"},{"baseVals":{"enabled":1,"sep":1,"spectrum":1,"thick":1,"bdrawback":0,"additive":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"u = (cos(q1*0.1))*3.14159;\\nv = (cos(q1*0.015))*3.14159*2;\\ns = sample*3.14*100;\\nss = sample*6.28*1000;\\n\\n//draw\\nxs = (0.3 + 0.1*cos(s))*cos(ss)*0.2*cos(v);\\nys = (0.3 + 0.1*cos(s))*sin(ss)*6*u;\\nzs = 0.5*sin(s)*0.2*sin(v);\\n\\n//rotate x axis\\nangle = q1*0.1;\\nyx = ys*cos(angle) - zs*sin(angle);\\nzx = ys*sin(angle) + zs*cos(angle);\\nxx = xs;\\n\\n//rotate y axis\\nangle2 = q1*0.13;\\nxd = xx*cos(angle2) - zx*sin(angle2);\\nzd = xx*sin(angle2) + zx*cos(angle2);\\nyd = yx;\\n\\n//rotaye z axis\\nangle3 = q1*0.16;\\nxn = xd*cos(angle3) - yd*sin(angle3);\\nyn = xd*sin(angle3) + yd*cos(angle3);\\n\\nzd = zd;\\n\\nx = xn*zd*0.3 + 0.5;\\ny = yn*zd*0.3*1.2 + 0.5;\\n\\nr = 0.5 + 0.5*sin(q1*1.2 + x + x);\\ng = 0.5 + 0.5*sin(q1*1.5 + x + y);\\nb = 0.5 + 0.5*sin(q1*1.36 + y + y);"},{"baseVals":{"enabled":1,"sep":1,"spectrum":1,"thick":1,"bdrawback":0,"additive":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"u = (cos(q1*0.1))*3.14159;\\nv = (cos(q1*0.015))*3.14159*2;\\ns = sample*3.14*100;\\nss = sample*6.28*1000;\\n\\n//draw\\nxs = (0.3 + 0.1*cos(s))*cos(ss)*0.2*cos(v);\\nys = (0.3 + 0.1*cos(s))*sin(ss)*6*u;\\nzs = 0.5*sin(s)*0.2*sin(v);\\n\\n//rotate x axis\\nangle = q1*0.1;\\nyx = ys*cos(angle) - zs*sin(angle);\\nzx = ys*sin(angle) + zs*cos(angle);\\nxx = xs;\\n\\n//rotate y axis\\nangle2 = q1*0.16;\\nxd = xx*cos(angle2) - zx*sin(angle2);\\nzd = xx*sin(angle2) + zx*cos(angle2);\\nyd = yx;\\n\\n//rotaye z axis\\nangle3 = q1*0.16;\\nxn = xd*cos(angle3) - yd*sin(angle3);\\nyn = xd*sin(angle3) + yd*cos(angle3);\\n\\nzd = zd;\\n\\nx = xn*zd*0.3 + 0.5;\\ny = yn*zd*0.3*1.2 + 0.5;\\n\\nr = 0.5 + 0.5*sin(q1*1.2 + x + x);\\ng = 0.5 + 0.5*sin(q1*1.5 + x + y);\\nb = 0.5 + 0.5*sin(q1*1.36 + y + y);"},{"baseVals":{"sep":1,"spectrum":1,"usedots":1,"bdrawback":0,"additive":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"u = abs(cos(q1*0.1))*3.14159;\\nv = abs(cos(q1*0.015))*3.14159*2;\\ns = sample*3.14*100;\\nss = sample*6.28*1000;\\n\\n//draw\\nxs = (0.5 + 0.01*cos(s))*cos(ss);\\nys = (0.5 + 0.01*cos(s))*sin(ss);\\nzs = 0.5*sin(s);\\n\\n//rotate x axis\\nangle = q1*0.1;\\nyx = ys*cos(angle) - zs*sin(angle);\\nzx = ys*sin(angle) + zs*cos(angle);\\nxx = xs;\\n\\n//rotate y axis\\nangle2 = q1*0.14;\\nxd = xx*cos(angle2) - zx*sin(angle2);\\nzd = xx*sin(angle2) + zx*cos(angle2);\\nyd = yx;\\n\\n//rotaye z axis\\nangle3 = q1*0.15;\\nxn = xd*cos(angle3) - yd*sin(angle3);\\nyn = xd*sin(angle3) + yd*cos(angle3);\\n\\nzd = zd + 2;\\n\\nx = xn*zd*0.3 + 0.5;\\ny = yn*zd*0.3*1.2 + 0.5;\\n\\nr = 0.5 + 0.5*sin(q1*1.2 + x + x);\\ng = 0.5 + 0.5*sin(q1*1.5 + x + y);\\nb = 0.5 + 0.5*sin(q1*1.66 + y + y);"}],"init_eqs_eel":"","frame_eqs_eel":"basstime = basstime + bass*0.03;\\nq1 = basstime*4;\\n\\n//start in most active range\\nbasstime = if(below(basstime,1000),1000,basstime);\\n//basstime = if(above(basstime,495),450,basstime);\\n\\nbasstime = basstime + bass_att*0.03;\\nvol = pow(bass+mid+treb,2);\\nbasssum = vol;\\n\\nstickybit = time%2;\\n\\n//avg vol\\n//buffer 1\\nvolAvg = volAvg + vol*equal(stickybit,1);\\n//number of samples 1 or framerate\\nsample1 = sample1 + equal(stickybit,1);\\n//buffer 2\\nvolAvg2 = volAvg2 + vol*equal(stickybit,0);\\n//number of samples 2\\nsample2 = sample2 + equal(stickybit,0);\\n\\n//transision\\nedge = bnot(equal(bit2,stickybit));\\n\\nvolAvg = volAvg - volAvg*edge*stickybit;\\nvolAvg2 = volAvg2 - volAvg2*edge*equal(stickybit,0);\\n\\nsample1 = sample1  - sample1*edge*stickybit;\\nsample2 = sample2  - sample2*edge*equal(stickybit,0);\\n\\n//test vol against avg buffer lvl\\ndiff = if(equal(stickybit,1), (basssum/(volAvg2/sample2)) , 0);\\ndiff = if(equal(stickybit,0), (basssum/(volAvg/sample1)), diff);\\n\\nq3 = diff;\\n\\nbit2 = time%2;\\n\\ndifftime = difftime + diff*0.03;\\nq2 = difftime;\\n\\n//fix a strange error\\ndifftime = if(above(difftime,2000),0, difftime);\\n\\nmonitor = q3;","pixel_eqs_eel":"zoom = 1;// + 0.05*q3*rad;\\n\\ndecay_r =1;// 0.2*x*y*sin(q2*0.35) + 0.85 + 0.1*sin(q2);\\ndecay_g = 1;//0.2*y*sin(q2*0.5) + 0.85 + 0.1*sin(0.7*q2);\\ndecay_b = 1;//0.2*x*sin(q2*0.4) + 0.85 + 0.1*sin(0.8*q2);\\n\\nwarp = 1;\\n\\nrot = 0;","warp":"","comp":""}')},9880:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"decay":0.9,"echo_zoom":1.007,"echo_alpha":0.5,"echo_orient":1,"wave_mode":1,"brighten":1,"wave_a":0.001,"zoom":0.96,"rot":-0.02,"warp":0.00052,"wave_r":0,"wave_g":0,"wave_b":0,"ob_r":1,"ob_g":1,"ob_b":1,"mv_x":64,"mv_y":48,"mv_a":0},"shapes":[{"baseVals":{"textured":1,"rad":2.66718,"tex_zoom":0.45112,"g":1,"a":0.2,"g2":0,"a2":0.2,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"textured":1,"rad":2.38096,"tex_zoom":0.42497,"r":0,"b":1,"a":0.4,"g2":0,"a2":0.4,"border_a":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"r = 0.1 + 0.5*sin(q1);\\ng = 0.1 + 0.5*sin(q1*0.9878);\\nb = 0.1 + 0.5*sin(q1*0.897);"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"spectrum":1,"additive":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//q1 = state;\\n//q2 = basstime;\\n\\nq1 = 0;\\nspeed = bass_att*0.050;\\nv = sample*100000 + value2*bass*0.1;\\n\\n//state 0 elipse\\nxs = xs + sin(v*0.1 + sin(v)*0.1)*speed*atan(v*1.51);\\nys = ys + sin(v*0.1 + cos(v)*0.1)*speed*atan(v);\\n\\nx = 0.5 + 0.5*sin(xs*0.1)*cos((time+0.5)*2 + ys);\\ny = 0.5 + 0.5*sin(ys*0.1)*cos((time+0.5)*2.1 + xs);\\n\\nx = x;\\ny = y;\\ny = y;\\n\\nr = 0.5 + 0.5*sin(time*0.22) + 0.1;\\ng = 0.4 + 0.4*sin(time*0.307) + x;\\nb = 0.4 + 0.4*sin(time*0.959);\\n\\n\\nxs = if(above(xs,1000),0 ,xs);\\nys = if(above(ys,1000),0 ,ys);"},{"baseVals":{"enabled":1,"spectrum":1,"usedots":1,"additive":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//q1 = state;\\n//q2 = basstime;\\n\\nq1 = 0;\\nspeed = bass_att*0.05;\\nv = sample*100000 + value2*bass*0.1;\\n\\n//state 0 elipse\\nxs = xs + sin(v*0.1 + sin(v)*0.1)*speed*atan(v*1.51);\\nys = ys + sin(v*0.1 + cos(v)*0.1)*speed*atan(v);\\n\\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + ys);\\ny = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs);\\n\\nx = x;\\ny = y;\\ny = y;\\n\\nr = 0.5 + 0.5*sin(time*0.22) + 0.1;\\ng = 0.4 + 0.4*sin(time*0.307) + x;\\nb = 0.4 + 0.4*sin(time*0.959);\\n\\n\\nxs = if(above(xs,1000),0 ,xs);\\nys = if(above(ys,1000),0 ,ys);"},{"baseVals":{"enabled":1,"spectrum":1,"usedots":1,"additive":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//q1 = state;\\n//q2 = basstime;\\n\\nq1 = 0;\\nspeed = bass_att*0.05;\\nv = sample*100000 + value2*bass*0.1;\\n\\n//state 0 elipse\\nxs = xs + sin(v*0.1 + sin(v)*0.1)*speed*atan(v*1.51);\\nys = ys + sin(v*0.1 + cos(v)*0.1)*speed*atan(v);\\n\\nx = 0.5 + 0.5*sin(xs*0.1)*cos((time-0.5)*2 + ys);\\ny = 0.5 + 0.5*sin(ys*0.1)*cos((time-0.5)*2.1 + xs);\\n\\nx = x;\\ny = y;\\ny = y;\\n\\nr = 0.5 + 0.5*sin(time*0.22) + 0.1;\\ng = 0.4 + 0.4*sin(time*0.307) + x;\\nb = 0.4 + 0.4*sin(time*0.959);\\n\\n\\nxs = if(above(xs,1000),0 ,xs);\\nys = if(above(ys,1000),0 ,ys);"},{"baseVals":{"spectrum":1,"usedots":1,"additive":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//apply zoom burst on beat\\nflag = above(q3,2);\\n//state zero is ready state\\nstate = state + flag*equal(state,0);\\n\\n//upwards flight\\nyval = if(equal(state,0),0, yval);\\nyval = yval + 0.00004*equal(state,1);\\nymax = if(equal(state,0),rand(100)*0.004,ymax);\\n\\n//hit apogee\\nstate = if(above(yval,0.5+ymax),2,state);\\n\\n//reset variable\\nyval = if(equal(state,0),0, yval);\\nburst = if(equal(state,0),0.001,burst);\\nalphax = if(equal(state,0),1,alphax);\\nxdriftinc = if(equal(state,0),0,xdriftinc);\\n\\nburstspeed = if(equal(state,0),rand(10),burstspeed);\\nxdrift = if(equal(state,0),rand(20),xdrift);\\n//to get the numbers small enough have to use constants\\nxdriftinc = xdriftinc\\n+ equal(xdrift,0)*equal(state,1)*0.00002\\n+ equal(xdrift,1)*equal(state,1)*0.000018\\n+ equal(xdrift,2)*equal(state,1)*0.000016\\n+ equal(xdrift,3)*equal(state,1)*0.000014\\n+ equal(xdrift,4)*equal(state,1)*0.000012\\n+ equal(xdrift,5)*equal(state,1)*0.00001\\n+ equal(xdrift,6)*equal(state,1)*0.000008\\n+ equal(xdrift,7)*equal(state,1)*0.000006\\n+ equal(xdrift,8)*equal(state,1)*0.000004\\n+ equal(xdrift,9)*equal(state,1)*0.000002\\n+ equal(xdrift,11)*equal(state,1)*-0.000002\\n+ equal(xdrift,12)*equal(state,1)*-0.000004\\n+ equal(xdrift,13)*equal(state,1)*-0.000006\\n+ equal(xdrift,14)*equal(state,1)*-0.000008\\n+ equal(xdrift,15)*equal(state,1)*-0.00001\\n+ equal(xdrift,16)*equal(state,1)*-0.000012\\n+ equal(xdrift,17)*equal(state,1)*-0.000014\\n+ equal(xdrift,18)*equal(state,1)*-0.000016\\n+ equal(xdrift,19)*equal(state,1)*-0.000018;\\n\\nburst = burst\\n+ equal(burstspeed,0)*equal(state,2)*0.000024\\n+ equal(burstspeed,1)*equal(state,2)*0.000022\\n+ equal(burstspeed,2)*equal(state,2)*0.00002\\n+ equal(burstspeed,3)*equal(state,2)*0.000018\\n+ equal(burstspeed,4)*equal(state,2)*0.000016\\n+ equal(burstspeed,5)*equal(state,2)*0.000014\\n+ equal(burstspeed,6)*equal(state,2)*0.000012\\n+ equal(burstspeed,7)*equal(state,2)*0.00001\\n+ equal(burstspeed,8)*equal(state,2)*0.000008\\n+ equal(burstspeed,9)*equal(state,2)*0.000008;\\n\\nalphax = alphax - 0.00004*equal(state,2);\\nstate = if(below(alphax,0),0,state);\\n\\n\\ns = sample*3.14*100;\\nss = sample*6.28*1000;\\n\\n//draw torus\\nxs = (burst + 0.0001*cos(s))*cos(ss);\\nys = (burst + 0.0001*cos(s))*sin(ss);\\nzs = 0.1*burst*sin(s);\\n\\n\\n//rotate x axis\\nangle = sin(-q1*0.035)*6.28;\\nyx = ys*cos(angle) - zs*sin(angle);\\nzx = ys*sin(angle) + zs*cos(angle);\\nxx = xs;\\n\\n//rotate y axis\\nangle2 = sin(-q1*0.03)*6.28;\\nxd = xx*cos(angle2) - zx*sin(angle2);\\nzd = xx*sin(angle2) + zx*cos(angle2);\\nyd = yx;\\n\\n//rotaye z axis\\nangle3 = sin(-q1*0.022)*6.28;\\nxn = xd*cos(angle3) - yd*sin(angle3);\\nyn = xd*sin(angle3) + yd*cos(angle3);\\n\\nzd = zd + 2;\\n\\nx = xn*zd*0.3 + 0.5;\\ny = yn*zd*0.3*1.2;\\n\\n\\nx = x + xdriftinc;\\ny = y + sin(yval*1.5) - 0.18;\\n\\n\\nr = 0.5 + 0.5*sin(q1*1.3 + x + x);\\ng = 0.5 + 0.5*sin(q1*1.1 + x + y);\\nb = 0.5 + 0.5*sin(q1*1.66 + y + y);"}],"init_eqs_eel":"state = 0;","frame_eqs_eel":"basstime = basstime + bass*0.06;\\nq1 = basstime;\\n\\nbasstime = if(below(basstime,1000),1000,basstime);\\n\\nvol = pow(bass+mid+treb,2);\\nbasssum = vol;\\n\\nstickybit = time%2;\\n\\n//avg vol\\n//buffer 1\\nvolAvg = volAvg + vol*equal(stickybit,1);\\n//number of samples 1 or framerate\\nsample1 = sample1 + equal(stickybit,1);\\n//buffer 2\\nvolAvg2 = volAvg2 + vol*equal(stickybit,0);\\n//number of samples 2\\nsample2 = sample2 + equal(stickybit,0);\\n\\n//transision\\nedge = bnot(equal(bit2,stickybit));\\n\\nvolAvg = volAvg - volAvg*edge*stickybit;\\nvolAvg2 = volAvg2 - volAvg2*edge*equal(stickybit,0);\\n\\nsample1 = sample1  - sample1*edge*stickybit;\\nsample2 = sample2  - sample2*edge*equal(stickybit,0);\\n\\n//test vol against avg buffer lvl\\ndiff = if(equal(stickybit,1), (basssum/(volAvg2/sample2)) , 0);\\ndiff = if(equal(stickybit,0), (basssum/(volAvg/sample1)), diff);\\n\\nq3 = diff;\\n\\nbit2 = time%2;\\n\\ndifftime = difftime + diff*0.03;\\nq2 = difftime;\\n\\n//fix a strange error\\ndifftime = if(above(difftime,2000),0, difftime);\\n\\n\\n\\nq10 = cos(q1*0.00001);\\nq11 = sin(q1*0.00001);","pixel_eqs_eel":"zoom = 1  + (rad*rad-0.5)*0.05  + cos(x*3.14)*0.05 + sin(y*3.14)*0.05;","warp":" shader_body { \\n  float tmpvar_1;\\n  tmpvar_1 = (texsize.zw * 8.0).x;\\n  vec3 tmpvar_2;\\n  tmpvar_2 = ((texture (sampler_main, (uv + \\n    (vec2(1.0, 0.0) * tmpvar_1)\\n  )).xyz + texture (sampler_main, (uv + \\n    (vec2(1.0, 0.0) * tmpvar_1)\\n  )).xyz) * 0.5);\\n  vec3 tmpvar_3;\\n  tmpvar_3 = ((texture (sampler_main, (uv + \\n    (vec2(0.0, 1.0) * tmpvar_1)\\n  )).xyz + texture (sampler_main, (uv + \\n    (vec2(0.0, 1.0) * tmpvar_1)\\n  )).xyz) * 0.5);\\n  vec3 tmpvar_4;\\n  tmpvar_4.xy = uv;\\n  tmpvar_4.z = q2;\\n  float tmpvar_5;\\n  tmpvar_5 = ((tmpvar_2 + (tmpvar_3 * texture (sampler_main, \\n    ((uv + tmpvar_2.xy) + tmpvar_3.xy)\\n  ).xyz)).xy - texture (sampler_noisevol_lq, tmpvar_4).xy).x;\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = 0.0;\\n  tmpvar_6.y = (tmpvar_5 * texsize.z);\\n  vec4 tmpvar_7;\\n  tmpvar_7.w = 1.0;\\n  tmpvar_7.xyz = (texture (sampler_fc_main, ((\\n    (((uv - 0.5) * (1.0 - (tmpvar_5 * 0.01))) * (0.99 - (bass * 0.001)))\\n   + tmpvar_6) + 0.5)).xyz - 0.02);\\n  ret = tmpvar_7.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  vec3 tmpvar_2;\\n  tmpvar_2.xy = uv;\\n  tmpvar_2.z = q2;\\n  vec2 tmpvar_3;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (uv - 0.5);\\n  tmpvar_3 = ((tmpvar_4 * vec2(-1.0, 1.0)) + 0.5);\\n  ret_1 = (((\\n    (mix (texture (sampler_main, ((tmpvar_4 * 0.98) + 0.5)).xyz, texture (sampler_main, ((\\n      (tmpvar_3 - 0.5)\\n     * 0.98) + 0.5)).xyz, vec3(0.5, 0.5, 0.5)) + ((texture (sampler_blur3, uv).xyz * scale3) + bias3))\\n   + \\n    ((texture (sampler_blur3, tmpvar_3).xyz * scale3) + bias3)\\n  ) + (\\n    (texture (sampler_blur1, uv).xyz * scale1)\\n   + bias1)) + ((texture (sampler_blur1, tmpvar_3).xyz * scale1) + bias1));\\n  ret_1 = (ret_1 * texture (sampler_noisevol_hq, tmpvar_2).xyz);\\n  ret_1 = (ret_1 * 10.0);\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = ret_1;\\n  ret = tmpvar_5.xyz;\\n }"}')},2471:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"solarize":1,"wave_a":0.001,"warpanimspeed":2.007,"warpscale":3.749,"zoomexp":1.0741,"zoom":1.0004,"warp":38.6131,"wave_r":0,"wave_g":0.4,"wave_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"textured":1,"rad":2.66718,"tex_zoom":0.37409,"g":1,"b":1,"a":0.8,"r2":1,"b2":1,"a2":0.4},"init_eqs_eel":"","frame_eqs_eel":"ang = basstime;\\ntex_ang = sin(basstime);\\n\\nob_r = 0.5 * sin(basstime*1.12);\\nob_g = 0.5 * sin(basstime*1.5);\\nob_b = 0.5 * sin(basstime*2.12);"},{"baseVals":{"enabled":1,"textured":1,"rad":2.66718,"tex_zoom":0.37713,"g":1,"b":1,"a":0.7,"r2":0.8,"b2":1,"a2":0.5},"init_eqs_eel":"","frame_eqs_eel":"tex_capture = above(bass,1);"},{"baseVals":{"enabled":1,"sides":100,"g2":0.8,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"b2 = sin(q5*0.4);"},{"baseVals":{"x":0.54,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"spectrum":1,"smoothing":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"smoothing":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"smoothing":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"smoothing":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"basstime  = basstime + bass*0.006;\\nq2 = basstime;\\nq1 = basstime*0.001;\\n\\n\\nq4 = cos(basstime);\\nq5 = sin(basstime);\\n\\n//Transision detection\\nvol = pow(bass+mid+treb,2);\\nbasssum = vol;\\n\\nstickybit = time%2;\\n\\n//avg vol\\n//buffer 1\\nvolAvg = volAvg + vol*equal(stickybit,1);\\n//number of samples 1 or framerate\\nsample1 = sample1 + equal(stickybit,1);\\n//buffer 2\\nvolAvg2 = volAvg2 + vol*equal(stickybit,0);\\n//number of samples 2\\nsample2 = sample2 + equal(stickybit,0);\\n\\n//transision\\nedge = bnot(equal(bit2,stickybit));\\n\\nvolAvg = volAvg - volAvg*edge*stickybit;\\nvolAvg2 = volAvg2 - volAvg2*edge*equal(stickybit,0);\\n\\nsample1 = sample1  - sample1*edge*stickybit;\\nsample2 = sample2  - sample2*edge*equal(stickybit,0);\\n\\n//test vol against avg buffer lvl\\ndiff = if(equal(stickybit,1), (basssum/(volAvg2/sample2)) , 0);\\ndiff = if(equal(stickybit,0), (basssum/(volAvg/sample1)), diff);\\n\\nq3 = 0;//(diff-0.5)*5;\\nq6 = diff;\\nbit2 = time%2;\\n\\nmonitor = (diff-1)*5;","pixel_eqs_eel":"zoom = 0.2;\\nrot = 0;","warp":" shader_body { \\n  float final_noise_1;\\n  mat2 tmpvar_2;\\n  tmpvar_2[uint(0)].x = q5;\\n  tmpvar_2[uint(0)].y = -(q4);\\n  tmpvar_2[1u].x = q4;\\n  tmpvar_2[1u].y = q5;\\n  vec3 tmpvar_3;\\n  tmpvar_3.xy = uv;\\n  tmpvar_3.z = q2;\\n  final_noise_1 = ((texture (sampler_noisevol_hq, (tmpvar_3 * \\n    pow (q3, 0.0)\\n  )) * 2.0) - 1.0).x;\\n  final_noise_1 = (final_noise_1 + (0.5 * (\\n    (texture (sampler_noisevol_hq, (tmpvar_3 * q3)) * 2.0)\\n   - 1.0)).x);\\n  final_noise_1 = (final_noise_1 + (0.25 * (\\n    (texture (sampler_noisevol_hq, (tmpvar_3 * (q3 * q3))) * 2.0)\\n   - 1.0)).x);\\n  final_noise_1 = (final_noise_1 + (0.125 * (\\n    (texture (sampler_noisevol_hq, (tmpvar_3 * pow (q3, 3.0))) * 2.0)\\n   - 1.0)).x);\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = (texture (sampler_main, ((\\n    (((uv - 0.5) * tmpvar_2) * (1.0 - ((rad * 3.7) * (1.0 - \\n      (bass_att * 0.3)\\n    ))))\\n   * final_noise_1) + 0.5)).xyz - 0.08);\\n  ret = tmpvar_4.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  mat2 tmpvar_2;\\n  tmpvar_2[uint(0)].x = q4;\\n  tmpvar_2[uint(0)].y = -(q5);\\n  tmpvar_2[1u].x = q5;\\n  tmpvar_2[1u].y = q4;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (uv - 0.5);\\n  ret_1 = (mix (texture (sampler_main, fract(\\n    (((tmpvar_3 * tmpvar_2) * 0.9) + 0.5)\\n  )).xyz, texture (sampler_main, fract(\\n    ((((\\n      (-(tmpvar_3) + 0.5)\\n     - 0.5) * -(tmpvar_2)) * 0.9) + 0.5)\\n  )).xyz, vec3(0.5, 0.5, 0.5)) * 2.0);\\n  vec3 tmpvar_4;\\n  tmpvar_4.x = (ret_1.x * 10.0);\\n  tmpvar_4.y = ret_1.y;\\n  tmpvar_4.z = -(ret_1.z);\\n  ret_1 = tmpvar_4;\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = tmpvar_4;\\n  ret = tmpvar_5.xyz;\\n }"}')},3072:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"decay":0.9,"echo_zoom":1.007,"echo_alpha":0.5,"echo_orient":1,"wave_mode":1,"wrap":0,"brighten":1,"wave_a":0.001,"zoom":0.96,"rot":-18.84024,"warp":0.00052,"wave_r":0,"wave_g":0,"wave_b":0,"ob_r":0.9,"ob_g":0.5,"ob_a":0.1,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":0.1,"mv_x":64,"mv_y":48,"mv_l":4.95,"mv_r":0,"mv_a":0},"shapes":[{"baseVals":{"textured":1,"rad":2.66718,"tex_zoom":0.45112,"g":1,"a":0.15,"g2":0,"a2":0.05,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"x":0.35,"y":0,"rad":0.09959,"tex_zoom":0.42497,"r":0,"b":1,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"y":0,"rad":0.10201,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"x":0.65,"y":0,"g":1,"b":1,"r2":1,"g2":0,"b2":1,"a2":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"spectrum":1,"thick":1,"additive":1,"r":0,"g":0,"b":0,"a":0.1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//q1 = state;\\n//q2 = basstime;\\n\\nq1 = 0;\\nspeed = bass_att*0.3;\\nv = sample*10000 + value2*bass*0.1;\\n\\n//state 0 elipse\\nxs = xs + sin(v*0.1 + sin(v)*0.1)*speed*atan(v*1.51);\\nys = ys + sin(v*0.1 + cos(v)*0.1)*speed*atan(v);\\n\\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*1 + ys);\\ny = 0.5 + 0.5*sin(ys*0.1)*cos(time*1.1 + xs);\\n\\n\\nr = 0.5 + 0.5*sin(q1*0.22);\\ng = 0.5 + 0.5*sin(q1*0.307) + x;\\n//b = 0.4 + 0.4*sin(time*0.959);\\n\\n\\nxs = if(above(xs,1000),0 ,xs);\\nys = if(above(ys,1000),0 ,ys);"},{"baseVals":{"spectrum":1,"usedots":1,"thick":1,"additive":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"thick":1,"additive":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"thick":1,"additive":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//apply zoom burst on beat\\nflag = above(q3,2);\\n//state zero is ready state\\nstate = state + flag*equal(state,0);\\n\\n//upwards flight\\nyval = if(equal(state,0),0, yval);\\nyval = yval + 0.00004*equal(state,1);\\nymax = if(equal(state,0),rand(100)*0.004,ymax);\\n\\n//hit apogee\\nstate = if(above(yval,0.5+ymax),2,state);\\n\\n//reset variable\\nyval = if(equal(state,0),0, yval);\\nburst = if(equal(state,0),0.001,burst);\\nalphax = if(equal(state,0),1,alphax);\\nxdriftinc = if(equal(state,0),0,xdriftinc);\\n\\nburstspeed = if(equal(state,0),rand(10),burstspeed);\\nxdrift = if(equal(state,0),rand(20),xdrift);\\n//to get the numbers small enough have to use constants\\nxdriftinc = xdriftinc\\n+ equal(xdrift,0)*equal(state,1)*0.00002\\n+ equal(xdrift,1)*equal(state,1)*0.000018\\n+ equal(xdrift,2)*equal(state,1)*0.000016\\n+ equal(xdrift,3)*equal(state,1)*0.000014\\n+ equal(xdrift,4)*equal(state,1)*0.000012\\n+ equal(xdrift,5)*equal(state,1)*0.00001\\n+ equal(xdrift,6)*equal(state,1)*0.000008\\n+ equal(xdrift,7)*equal(state,1)*0.000006\\n+ equal(xdrift,8)*equal(state,1)*0.000004\\n+ equal(xdrift,9)*equal(state,1)*0.000002\\n+ equal(xdrift,11)*equal(state,1)*-0.000002\\n+ equal(xdrift,12)*equal(state,1)*-0.000004\\n+ equal(xdrift,13)*equal(state,1)*-0.000006\\n+ equal(xdrift,14)*equal(state,1)*-0.000008\\n+ equal(xdrift,15)*equal(state,1)*-0.00001\\n+ equal(xdrift,16)*equal(state,1)*-0.000012\\n+ equal(xdrift,17)*equal(state,1)*-0.000014\\n+ equal(xdrift,18)*equal(state,1)*-0.000016\\n+ equal(xdrift,19)*equal(state,1)*-0.000018;\\n\\nburst = burst\\n+ equal(burstspeed,0)*equal(state,2)*0.000024\\n+ equal(burstspeed,1)*equal(state,2)*0.000022\\n+ equal(burstspeed,2)*equal(state,2)*0.00002\\n+ equal(burstspeed,3)*equal(state,2)*0.000018\\n+ equal(burstspeed,4)*equal(state,2)*0.000016\\n+ equal(burstspeed,5)*equal(state,2)*0.000014\\n+ equal(burstspeed,6)*equal(state,2)*0.000012\\n+ equal(burstspeed,7)*equal(state,2)*0.00001\\n+ equal(burstspeed,8)*equal(state,2)*0.000008\\n+ equal(burstspeed,9)*equal(state,2)*0.000008;\\n\\nalphax = alphax - 0.00004*equal(state,2);\\nstate = if(below(alphax,0),0,state);\\n\\n\\ns = sample*3.14*100;\\nss = sample*6.28*1000;\\n\\n//draw torus\\nxs = (burst + 0.0001*cos(s))*cos(ss);\\nys = (burst + 0.0001*cos(s))*sin(ss);\\nzs = 0.1*burst*sin(s);\\n\\n\\n//rotate x axis\\nangle = sin(-q1*0.035)*6.28;\\nyx = ys*cos(angle) - zs*sin(angle);\\nzx = ys*sin(angle) + zs*cos(angle);\\nxx = xs;\\n\\n//rotate y axis\\nangle2 = sin(-q1*0.03)*6.28;\\nxd = xx*cos(angle2) - zx*sin(angle2);\\nzd = xx*sin(angle2) + zx*cos(angle2);\\nyd = yx;\\n\\n//rotaye z axis\\nangle3 = sin(-q1*0.022)*6.28;\\nxn = xd*cos(angle3) - yd*sin(angle3);\\nyn = xd*sin(angle3) + yd*cos(angle3);\\n\\nzd = zd + 2;\\n\\nx = xn*zd*0.3 + 0.5;\\ny = yn*zd*0.3*1.2;\\n\\n\\nx = x + xdriftinc;\\ny = y + sin(yval*1.5) - 0.18;\\n\\n\\nr = 0.5 + 0.5*sin(q1*1.3 + x + x);\\ng = 0.5 + 0.5*sin(q1*1.1 + x + y);\\nb = 0.5 + 0.5*sin(q1*1.66 + y + y);"}],"init_eqs_eel":"","frame_eqs_eel":"basstime = basstime + bass*0.06;\\nq1 = basstime;\\n\\nbasstime = if(below(basstime,1000),1000,basstime);\\n\\nvol = pow(bass+mid+treb,2);\\nbasssum = vol;\\n\\nstickybit = time%2;\\n\\n//avg vol\\n//buffer 1\\nvolAvg = volAvg + vol*equal(stickybit,1);\\n//number of samples 1 or framerate\\nsample1 = sample1 + equal(stickybit,1);\\n//buffer 2\\nvolAvg2 = volAvg2 + vol*equal(stickybit,0);\\n//number of samples 2\\nsample2 = sample2 + equal(stickybit,0);\\n\\n//transision\\nedge = bnot(equal(bit2,stickybit));\\n\\nvolAvg = volAvg - volAvg*edge*stickybit;\\nvolAvg2 = volAvg2 - volAvg2*edge*equal(stickybit,0);\\n\\nsample1 = sample1  - sample1*edge*stickybit;\\nsample2 = sample2  - sample2*edge*equal(stickybit,0);\\n\\n//test vol against avg buffer lvl\\ndiff = if(equal(stickybit,1), (basssum/(volAvg2/sample2)) , 0);\\ndiff = if(equal(stickybit,0), (basssum/(volAvg/sample1)), diff);\\n\\nq3 = diff;\\n\\nbit2 = time%2;\\n\\ndifftime = difftime + diff*0.03;\\nq2 = difftime;\\n\\n//fix a strange error\\ndifftime = if(above(difftime,2000),0, difftime);\\n\\n\\nmonitor = q1;","pixel_eqs_eel":"zoom = 0.98;\\nrot = 0;","warp":" shader_body { \\n  vec2 uv_1;\\n  vec3 color_2;\\n  vec2 uv2_3;\\n  uv2_3 = (uv + q3);\\n  color_2 = ((texture (sampler_noise_lq, uv2_3) - 0.5).xyz + (texture (sampler_noise_mq, uv2_3) - 0.5).xyz);\\n  color_2 = (color_2 + (texture (sampler_noise_hq, uv2_3) - 0.5).xyz);\\n  uv_1 = (uv + (color_2 * 0.01).xy);\\n  uv_1.y = (uv_1.y + (abs(\\n    (color_2 * 0.01)\\n  ) + (bass_att * 0.01)).x);\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = (texture (sampler_main, ((uv_1 * 0.95) + (\\n    ((texture (sampler_blur1, ((\\n      (uv_1 - 0.5)\\n     * 0.9) + 0.5)).xyz * scale1) + bias1)\\n   * 0.1).xy)).xyz - 0.01);\\n  ret = tmpvar_4.xyz;\\n }","comp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (texture (sampler_main, uv).xyz * 2.0);\\n  ret = tmpvar_1.xyz;\\n }"}')},4381:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"decay":0.9,"echo_zoom":1.007,"echo_alpha":0.5,"echo_orient":1,"wave_mode":1,"wrap":0,"brighten":1,"wave_a":0.001,"zoom":0.96,"rot":-18.84024,"warp":0.00052,"wave_r":0,"wave_g":0,"wave_b":0,"ob_r":0.9,"ob_g":0.5,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":0.1,"mv_x":64,"mv_y":48,"mv_l":4.95,"mv_g":0.3,"mv_b":0.2,"mv_a":0},"shapes":[{"baseVals":{"textured":1,"rad":2.66718,"tex_zoom":0.45112,"g":1,"a":0.15,"g2":0,"a2":0.05,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"r = 0.1 + 0.5*sin(q1);\\ng = 0.1 + 0.5*sin(q1*0.9878);\\nb = 0.1 + 0.5*sin(q1*0.897);"},{"baseVals":{"sides":100,"x":0.35,"y":0,"rad":0.09959,"tex_zoom":0.42497,"r":0,"b":1,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"r = 0.1 + 0.5*sin(q1*0.01);\\ng = 0.1 + 0.5*sin(q1*0.09878);\\nb = 0.1 + 0.5*sin(q1*0.0897);\\n\\nr2 = 0.1 + 0.5*sin(q1*0.035);\\ng2 = 0.1 + 0.5*sin(q1*0.09878);\\nb2 = 0.1 + 0.5*sin(q1*0.0897);"},{"baseVals":{"sides":100,"y":0,"rad":0.10201,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"r = 0.1 + 0.5*sin(q1*0.01);\\ng = 0.1 + 0.5*sin(q1*0.03878);\\nb = 0.1 + 0.5*sin(q1*0.0497);\\n\\nr2 = 0.1 + 0.5*sin(q1*0.065);\\ng2 = 0.1 + 0.5*sin(q1*0.07878);\\nb2 = 0.1 + 0.5*sin(q1*0.0597);"},{"baseVals":{"sides":100,"x":0.65,"y":0,"g":1,"b":1,"r2":1,"g2":0,"b2":1,"a2":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"//x = 0.5 + 0.02*sin(time*0.5 + 1.68);\\n//y = 0.5 + 0.02*cos(time*0.5 + 1.68);\\n\\n\\nr = 0.1 + 0.5*sin(q1*0.0144);\\ng = 0.1 + 0.5*sin(q1*0.05878);\\nb = 0.1 + 0.5*sin(q1*0.0797);\\n\\nr2 = 0.1 + 0.5*sin(q1*0.065);\\ng2 = 0.1 + 0.5*sin(q1*0.07878);\\nb2 = 0.1 + 0.5*sin(q1*0.0897);"}],"waves":[{"baseVals":{"enabled":1,"spectrum":1,"additive":1,"r":0,"g":0,"b":0},"init_eqs_eel":"time_delta = 2;","frame_eqs_eel":"","point_eqs_eel":"fire = above(q3, 3);\\n\\nexplode_time = 1.5;\\n\\nstate = if(below((timestart+explode_time) -(time*fire), 0), 0,  1);\\ntimestart = if(below((timestart+explode_time) -(time*fire), 0), time,  timestart);\\n\\nxpos = if(equal(state, 0), 0.5 + 0.3*sin(rand(1000)), xpos);\\nypos = if(equal(state, 0), 0.5 + 0.3*sin(rand(1000)), ypos);\\nexplode = if(equal(state, 0), rand(100)*0.0000001, explode);\\n\\nsize = if(equal(state,1),size + 0.00001 + explode, 0);\\n\\n\\nx =  xpos  + size*cos(sample*10);\\ny =  ypos  + size*sin(sample*10);\\n\\nr = 0.5 + 0.5*sin(q2*1.2 + x + x);\\ng = 0.5 + 0.5*sin(q2*1.5 + x + y);\\nb = 0.5 + 0.5*sin(q2*1.36 + y + y);"},{"baseVals":{"enabled":1,"spectrum":1,"additive":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"fire = above(q3, 2.9);\\n\\nexplode_time = 1;\\n\\nstate = if(below((timestart+explode_time) -(time*fire), 0), 0,  1);\\ntimestart = if(below((timestart+explode_time) -(time*fire), 0), time,  timestart);\\n\\nxpos = if(equal(state, 0), 0.5 + 0.3*sin(rand(1000)), xpos);\\nypos = if(equal(state, 0), 0.5 + 0.3*sin(rand(1000)), ypos);\\nexplode = if(equal(state, 0), rand(100)*0.0000001, explode);\\n\\nsize = if(equal(state,1),size + 0.00001 + explode, 0);\\n\\n\\nx =  xpos  + size*cos(sample*10);\\ny =  ypos  + size*sin(sample*10);\\n\\nr = 0.5 + 0.5*sin(q2*1.24 + x + x);\\ng = 0.5 + 0.5*sin(q2*1.35 + x + y);\\nb = 0.5 + 0.5*sin(q2*1.4666 + y + y);"},{"baseVals":{"enabled":1,"spectrum":1,"thick":1,"additive":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"fire = above(q3, 1.5);\\n\\nexplode_time = 1;\\n\\nstate = if(below((timestart+explode_time) -(time*fire), 0), 0,  1);\\ntimestart = if(below((timestart+explode_time) -(time*fire), 0), time,  timestart);\\n\\nxpos = if(equal(state, 0), 0.5 + 0.3*sin(rand(1000)), xpos);\\nypos = if(equal(state, 0), 0.5 + 0.3*sin(rand(1000)), ypos);\\nexplode = if(equal(state, 0), rand(100)*0.0000001, explode);\\n\\nsize = if(equal(state,1),size + 0.00001 + explode, 0);\\n\\n\\nx =  xpos  + size*cos(sample*10);\\ny =  ypos  + size*sin(sample*10);\\n\\nr = 0.5 + 0.5*sin(q2*1.14 + x + x);\\ng = 0.5 + 0.5*sin(q2*1.55 + x + y);\\nb = 0.5 + 0.5*sin(q2*1.7666 + y + y);"},{"baseVals":{"spectrum":1,"usedots":1,"thick":1,"additive":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"fire = above(q3, 1);\\n\\nexplode_time = 1;\\n\\nstate = if(below((timestart+explode_time) -(time*fire), 0), 0,  1);\\ntimestart = if(below((timestart+explode_time) -(time*fire), 0), time,  timestart);\\n\\nxpos = if(equal(state, 0), 0.5 + 0.3*sin(rand(1000)), xpos);\\nypos = if(equal(state, 0), 0.5 + 0.3*sin(rand(1000)), ypos);\\nexplode = if(equal(state, 0), rand(100)*0.0000001, explode);\\n\\nsize = if(equal(state,1),size + 0.00001 + explode, 0);\\n\\n\\nx =  xpos  + size*cos(sample*10);\\ny =  ypos  + size*sin(sample*10);\\n\\nr = 0.5 + 0.5*sin(q2*1.24 + x + x);\\ng = 0.5 + 0.5*sin(q2*1.35 + x + y);\\nb = 0.5 + 0.5*sin(q2*1.4666 + y + y);"}],"init_eqs_eel":"state = 0;","frame_eqs_eel":"basstime = basstime + bass*0.06;\\nq1 = basstime;\\n\\nq9 = basstime * 0.000005;\\n\\nbasstime = if(below(basstime,1000),1000,basstime);\\n\\nvol = pow(bass+mid+treb,2);\\nbasssum = vol;\\n\\nstickybit = time%2;\\n\\n//avg vol\\n//buffer 1\\nvolAvg = volAvg + vol*equal(stickybit,1);\\n//number of samples 1 or framerate\\nsample1 = sample1 + equal(stickybit,1);\\n//buffer 2\\nvolAvg2 = volAvg2 + vol*equal(stickybit,0);\\n//number of samples 2\\nsample2 = sample2 + equal(stickybit,0);\\n\\n//transision\\nedge = bnot(equal(bit2,stickybit));\\n\\nvolAvg = volAvg - volAvg*edge*stickybit;\\nvolAvg2 = volAvg2 - volAvg2*edge*equal(stickybit,0);\\n\\nsample1 = sample1  - sample1*edge*stickybit;\\nsample2 = sample2  - sample2*edge*equal(stickybit,0);\\n\\n//test vol against avg buffer lvl\\ndiff = if(equal(stickybit,1), (basssum/(volAvg2/sample2)) , 0);\\ndiff = if(equal(stickybit,0), (basssum/(volAvg/sample1)), diff);\\n\\nq3 = diff;\\n\\nbit2 = time%2;\\n\\ndifftime = difftime + diff*0.03;\\nq2 = difftime;\\n\\n//fix a strange error\\ndifftime = if(above(difftime,2000),0, difftime);\\n\\n//circle 1","pixel_eqs_eel":"zoom = 0.98;\\nrot = 0;","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (uv - 0.5);\\n  tmpvar_1.xyz = (texture (sampler_main, ((\\n    ((((tmpvar_2 * \\n      (0.97 + (rad * 0.02))\\n    ) + 0.5) + ((\\n      (texture (sampler_blur1, ((tmpvar_2 * 0.9) + 0.5)).xyz * scale1)\\n     + bias1) * 0.1).xy) - 0.5)\\n   * 0.98) + 0.5)).xyz - 0.002);\\n  ret = tmpvar_1.xyz;\\n }","comp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (texture (sampler_main, uv).xyz * 2.0);\\n  ret = tmpvar_1.xyz;\\n }"}')},707:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"decay":0.9,"echo_zoom":1.007,"echo_alpha":0.5,"echo_orient":1,"wave_mode":7,"wrap":0,"brighten":1,"wave_a":0.002,"zoom":0.96,"rot":-18.84024,"warp":0.00052,"wave_r":0,"wave_g":0.1,"wave_b":0,"ob_a":1,"ib_r":0.2,"ib_g":0.1,"ib_b":0,"mv_x":64,"mv_y":48,"mv_l":4.95,"mv_r":0.5,"mv_g":0.4,"mv_b":0.3,"mv_a":0},"shapes":[{"baseVals":{"textured":1,"rad":2.66718,"tex_zoom":0.45112,"g":1,"a":0.15,"g2":0,"a2":0.05,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"r = 0.1 + 0.5*sin(q1);\\ng = 0.1 + 0.5*sin(q1*0.9878);\\nb = 0.1 + 0.5*sin(q1*0.897);"},{"baseVals":{"sides":100,"x":0.35,"y":0,"rad":0.09959,"tex_zoom":0.42497,"r":0,"b":1,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"r = 0.1 + 0.5*sin(q1*0.01);\\ng = 0.1 + 0.5*sin(q1*0.09878);\\nb = 0.1 + 0.5*sin(q1*0.0897);\\n\\nr2 = 0.1 + 0.5*sin(q1*0.035);\\ng2 = 0.1 + 0.5*sin(q1*0.09878);\\nb2 = 0.1 + 0.5*sin(q1*0.0897);"},{"baseVals":{"sides":100,"y":0,"rad":0.10201,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"r = 0.1 + 0.5*sin(q1*0.01);\\ng = 0.1 + 0.5*sin(q1*0.03878);\\nb = 0.1 + 0.5*sin(q1*0.0497);\\n\\nr2 = 0.1 + 0.5*sin(q1*0.065);\\ng2 = 0.1 + 0.5*sin(q1*0.07878);\\nb2 = 0.1 + 0.5*sin(q1*0.0597);"},{"baseVals":{"sides":100,"x":0.65,"y":0,"g":1,"b":1,"r2":1,"g2":0,"b2":1,"a2":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"//x = 0.5 + 0.02*sin(time*0.5 + 1.68);\\n//y = 0.5 + 0.02*cos(time*0.5 + 1.68);\\n\\n\\nr = 0.1 + 0.5*sin(q1*0.0144);\\ng = 0.1 + 0.5*sin(q1*0.05878);\\nb = 0.1 + 0.5*sin(q1*0.0797);\\n\\nr2 = 0.1 + 0.5*sin(q1*0.065);\\ng2 = 0.1 + 0.5*sin(q1*0.07878);\\nb2 = 0.1 + 0.5*sin(q1*0.0897);"}],"waves":[{"baseVals":{"enabled":1,"spectrum":1,"thick":1,"additive":1,"r":0,"g":0,"b":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"speed = sqrt(bass_att*0.005);\\nv = sample*10000 + value2*bass*0.1;\\n\\n//state 0 elipse\\nxs = xs + sin(v*1)*speed*atan(v*1.51);\\nys = ys + sin(v*1)*speed;\\nzs = zs + cos(v*1.1)*speed;\\n\\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + xs)*atan(basstime + zs*0.1);\\ny = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs)*sin(basstime*0.4 + zs*0.12);\\nz = 0.5 + 0.5*sin(zs*0.1)*cos(time*2.1 + zs);\\n\\nx = x + sample*0.5*sin(basstime)*bass;\\ny = y + sample*0.5*sin(basstime*1.2)*bass;\\n\\n\\nz = cos(z*sample)*value1*sample*10 + 2;\\n\\nx_int = x*0.6 + 0.2;\\ny_int = y;\\n\\nx = x_int*z*0.5;\\ny = y_int*z*0.5;\\n\\n\\nr = 0.5 + 0.5*sin(time*6.22)*x_int + 0.1;\\ng = 0.4 + 0.4*sin(time*5.307)*x_int;\\nb = 0.4 + 0.4*sin(time*4.959)*y_int;\\n\\nxs = if(above(xs,1000),0 ,xs);\\nys = if(above(ys,1000),0 ,ys);"},{"baseVals":{"spectrum":1,"usedots":1,"thick":1,"additive":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"thick":1,"additive":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"thick":1,"additive":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//apply zoom burst on beat\\nflag = above(q3,2);\\n//state zero is ready state\\nstate = state + flag*equal(state,0);\\n\\n//upwards flight\\nyval = if(equal(state,0),0, yval);\\nyval = yval + 0.00004*equal(state,1);\\nymax = if(equal(state,0),rand(100)*0.004,ymax);\\n\\n//hit apogee\\nstate = if(above(yval,0.5+ymax),2,state);\\n\\n//reset variable\\nyval = if(equal(state,0),0, yval);\\nburst = if(equal(state,0),0.001,burst);\\nalphax = if(equal(state,0),1,alphax);\\nxdriftinc = if(equal(state,0),0,xdriftinc);\\n\\nburstspeed = if(equal(state,0),rand(10),burstspeed);\\nxdrift = if(equal(state,0),rand(20),xdrift);\\n//to get the numbers small enough have to use constants\\nxdriftinc = xdriftinc\\n+ equal(xdrift,0)*equal(state,1)*0.00002\\n+ equal(xdrift,1)*equal(state,1)*0.000018\\n+ equal(xdrift,2)*equal(state,1)*0.000016\\n+ equal(xdrift,3)*equal(state,1)*0.000014\\n+ equal(xdrift,4)*equal(state,1)*0.000012\\n+ equal(xdrift,5)*equal(state,1)*0.00001\\n+ equal(xdrift,6)*equal(state,1)*0.000008\\n+ equal(xdrift,7)*equal(state,1)*0.000006\\n+ equal(xdrift,8)*equal(state,1)*0.000004\\n+ equal(xdrift,9)*equal(state,1)*0.000002\\n+ equal(xdrift,11)*equal(state,1)*-0.000002\\n+ equal(xdrift,12)*equal(state,1)*-0.000004\\n+ equal(xdrift,13)*equal(state,1)*-0.000006\\n+ equal(xdrift,14)*equal(state,1)*-0.000008\\n+ equal(xdrift,15)*equal(state,1)*-0.00001\\n+ equal(xdrift,16)*equal(state,1)*-0.000012\\n+ equal(xdrift,17)*equal(state,1)*-0.000014\\n+ equal(xdrift,18)*equal(state,1)*-0.000016\\n+ equal(xdrift,19)*equal(state,1)*-0.000018;\\n\\nburst = burst\\n+ equal(burstspeed,0)*equal(state,2)*0.000024\\n+ equal(burstspeed,1)*equal(state,2)*0.000022\\n+ equal(burstspeed,2)*equal(state,2)*0.00002\\n+ equal(burstspeed,3)*equal(state,2)*0.000018\\n+ equal(burstspeed,4)*equal(state,2)*0.000016\\n+ equal(burstspeed,5)*equal(state,2)*0.000014\\n+ equal(burstspeed,6)*equal(state,2)*0.000012\\n+ equal(burstspeed,7)*equal(state,2)*0.00001\\n+ equal(burstspeed,8)*equal(state,2)*0.000008\\n+ equal(burstspeed,9)*equal(state,2)*0.000008;\\n\\nalphax = alphax - 0.00004*equal(state,2);\\nstate = if(below(alphax,0),0,state);\\n\\n\\ns = sample*3.14*100;\\nss = sample*6.28*1000;\\n\\n//draw torus\\nxs = (burst + 0.0001*cos(s))*cos(ss);\\nys = (burst + 0.0001*cos(s))*sin(ss);\\nzs = 0.1*burst*sin(s);\\n\\n\\n//rotate x axis\\nangle = sin(-q1*0.035)*6.28;\\nyx = ys*cos(angle) - zs*sin(angle);\\nzx = ys*sin(angle) + zs*cos(angle);\\nxx = xs;\\n\\n//rotate y axis\\nangle2 = sin(-q1*0.03)*6.28;\\nxd = xx*cos(angle2) - zx*sin(angle2);\\nzd = xx*sin(angle2) + zx*cos(angle2);\\nyd = yx;\\n\\n//rotaye z axis\\nangle3 = sin(-q1*0.022)*6.28;\\nxn = xd*cos(angle3) - yd*sin(angle3);\\nyn = xd*sin(angle3) + yd*cos(angle3);\\n\\nzd = zd + 2;\\n\\nx = xn*zd*0.3 + 0.5;\\ny = yn*zd*0.3*1.2;\\n\\n\\nx = x + xdriftinc;\\ny = y + sin(yval*1.5) - 0.18;\\n\\n\\nr = 0.5 + 0.5*sin(q1*1.3 + x + x);\\ng = 0.5 + 0.5*sin(q1*1.1 + x + y);\\nb = 0.5 + 0.5*sin(q1*1.66 + y + y);"}],"init_eqs_eel":"state = 0;","frame_eqs_eel":"basstime = basstime + bass*0.06;\\nq1 = basstime;\\n\\nq9 = basstime * 0.000005;\\n\\nbasstime = if(below(basstime,1000),1000,basstime);\\n\\nvol = pow(bass+mid+treb,2);\\nbasssum = vol;\\n\\nstickybit = time%2;\\n\\n//avg vol\\n//buffer 1\\nvolAvg = volAvg + vol*equal(stickybit,1);\\n//number of samples 1 or framerate\\nsample1 = sample1 + equal(stickybit,1);\\n//buffer 2\\nvolAvg2 = volAvg2 + vol*equal(stickybit,0);\\n//number of samples 2\\nsample2 = sample2 + equal(stickybit,0);\\n\\n//transision\\nedge = bnot(equal(bit2,stickybit));\\n\\nvolAvg = volAvg - volAvg*edge*stickybit;\\nvolAvg2 = volAvg2 - volAvg2*edge*equal(stickybit,0);\\n\\nsample1 = sample1  - sample1*edge*stickybit;\\nsample2 = sample2  - sample2*edge*equal(stickybit,0);\\n\\n//test vol against avg buffer lvl\\ndiff = if(equal(stickybit,1), (basssum/(volAvg2/sample2)) , 0);\\ndiff = if(equal(stickybit,0), (basssum/(volAvg/sample1)), diff);\\n\\nq3 = diff;\\n\\nbit2 = time%2;\\n\\ndifftime = difftime + diff*0.03;\\nq2 = difftime;\\n\\n//fix a strange error\\ndifftime = if(above(difftime,2000),0, difftime);\\n\\n\\n\\nmonitor = q1;\\n\\n//mv_a = q3 - 2;","pixel_eqs_eel":"zoom = 0.98;\\nrot = 0;","warp":" shader_body { \\n  vec3 xlat_varoutput_1;\\n  vec3 color_2;\\n  vec2 uv2_3;\\n  uv2_3 = (uv + q3);\\n  color_2 = ((texture (sampler_noise_lq, uv2_3) - 0.5).xyz + (texture (sampler_noise_mq, uv2_3) - 0.5).xyz);\\n  color_2 = (color_2 + (texture (sampler_noise_hq, uv2_3) - 0.5).xyz);\\n  mat2 tmpvar_4;\\n  float tmpvar_5;\\n  tmpvar_5 = cos(q9);\\n  tmpvar_4[uint(0)].x = tmpvar_5;\\n  float tmpvar_6;\\n  tmpvar_6 = sin(q9);\\n  tmpvar_4[uint(0)].y = -(tmpvar_6);\\n  tmpvar_4[1u].x = tmpvar_6;\\n  tmpvar_4[1u].y = tmpvar_5;\\n  vec2 tmpvar_7;\\n  float tmpvar_8;\\n  tmpvar_8 = (1.0/(texsize.x));\\n  tmpvar_7.x = -(tmpvar_8);\\n  float tmpvar_9;\\n  tmpvar_9 = (1.0/(texsize.y));\\n  tmpvar_7.y = 0.0;\\n  xlat_varoutput_1 = (0.05 * texture (sampler_main, (uv + tmpvar_7))).xyz;\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = tmpvar_8;\\n  tmpvar_10.y = 0.0;\\n  xlat_varoutput_1 = (xlat_varoutput_1 + (0.05 * texture (sampler_main, (uv + tmpvar_10))).xyz);\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = 0.0;\\n  tmpvar_11.y = tmpvar_9;\\n  xlat_varoutput_1 = (xlat_varoutput_1 + (0.05 * texture (sampler_main, (uv + tmpvar_11))).xyz);\\n  vec2 tmpvar_12;\\n  tmpvar_12.x = 0.0;\\n  tmpvar_12.y = -(tmpvar_9);\\n  xlat_varoutput_1 = (xlat_varoutput_1 + (0.05 * texture (sampler_main, (uv + tmpvar_12))).xyz);\\n  vec4 tmpvar_13;\\n  tmpvar_13.w = 1.0;\\n  float tmpvar_14;\\n  tmpvar_14 = (rad * 0.02);\\n  tmpvar_13.xyz = (texture (sampler_main, ((\\n    ((((\\n      ((uv - 0.5) * (tmpvar_4 - (rad * 0.01)))\\n     * \\n      (0.97 + tmpvar_14)\\n    ) + 0.5) + ((\\n      (texture (sampler_blur1, (((\\n        (xlat_varoutput_1 + color_2)\\n       - 0.5) * 0.9) + 0.5).xy).xyz * scale1)\\n     + bias1) * 0.02).xy) - 0.5)\\n   * \\n    (1.0 - tmpvar_14)\\n  ) + 0.5)).xyz - 0.03);\\n  ret = tmpvar_13.xyz;\\n }","comp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (mix (texture (sampler_main, uv).xyz, texture (sampler_main, (\\n    (0.5 - uv)\\n   + 0.5)).xyz, vec3(0.5, 0.5, 0.5)) * 2.0);\\n  ret = tmpvar_1.xyz;\\n }"}')},3571:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":5,"decay":0.95,"echo_zoom":1.071,"echo_alpha":0.5,"echo_orient":3,"darken":1,"wave_a":0.001,"warpanimspeed":100,"warpscale":0.01,"warp":0.01,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0,"ob_r":1,"ob_g":1,"ob_b":1,"ib_r":1,"ib_g":1,"ib_b":1,"mv_x":64,"mv_y":48,"mv_l":5,"mv_r":0.8,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"textured":1,"rad":0.3696,"tex_zoom":0.22746,"g":1,"b":1,"r2":1,"b2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0.5},"init_eqs_eel":"tex_saw = 0.4;","frame_eqs_eel":"ang = -q1*0.2;\\n\\ntex_capture = above(q3,1);\\ntex_zoom = 1.2;"},{"baseVals":{"textured":1,"x":0.25,"y":0.75,"rad":0.7418,"tex_zoom":0.22746,"g":1,"b":1,"r2":1,"b2":1,"border_r":0,"border_g":0,"border_a":0,"enabled":0},"init_eqs_eel":"tex_saw = 0.4;","frame_eqs_eel":"ang = q1*0.2;\\n//x = 0.5 + 0.2*sin(q2);\\n//y = 0.5 + (0.3*sin(q2));\\n\\ntex_capture = above(q3,2);\\ntex_zoom = 0.6;"},{"baseVals":{"enabled":1,"textured":1,"rad":1.81639,"tex_zoom":0.22746,"g":1,"b":1,"r2":1,"b2":1,"border_r":0,"border_g":0,"border_a":0},"init_eqs_eel":"tex_saw = 0.4;","frame_eqs_eel":"ang = q1*0.2;\\ntex_capture = 1;//above(q3,1);\\ntex_zoom = 0.6;"},{"baseVals":{"sides":100,"rad":1.08922,"g":1,"b":1,"r2":1,"b2":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.5 + 0.5*sin(q1*1.5);\\ny = 0.5 + 0.5*sin(q1*1.7);"}],"waves":[{"baseVals":{"enabled":1,"thick":1,"smoothing":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//q1 = state;\\n//q2 = basstime;\\n\\nq1 = 0;\\nspeed = bass_att*0.6;\\nv = sample*1000000 + value2*bass*0.1;\\n\\n//state 0 elipse\\nxs = xs + sin(v)*speed*atan(v*1.51);\\nys = ys + sin(v)*speed*atan((v));\\n\\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + xs);\\ny = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs);\\n\\nx = x*0.6 + 0.3;\\ny = y;\\ny = y*0.8;\\n\\nr = 0.5 + 0.5*sin(time*1.22 + x*2) + 0.1;\\ng = 0.4 + 0.4*sin(time*1.307 + y*2);\\nb = 0.4 + 0.4*sin(time*1.959 + x*y);\\n\\nxs = if(above(xs,1000),0 ,xs);\\nys = if(above(ys,1000),0 ,ys);"},{"baseVals":{"enabled":1,"thick":1,"smoothing":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//q1 = state;\\n//q2 = basstime;\\n\\nq1 = 0;\\nspeed = bass_att*0.6;\\nv = sample*1000000 + value2*bass*0.1;\\n\\n//state 0 elipse\\nxs = xs + sin(v)*speed*atan(v*1.51);\\nys = ys + sin(v)*speed*atan((v));\\n\\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + xs);\\ny = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs);\\n\\nx = x*0.6 + 0.3;\\nx = -x + 1;\\ny = y;\\ny = y*0.8;\\n\\nr = 0.5 + 0.5*sin(time*1.22 + x*x) + 0.1;\\ng = 0.4 + 0.4*sin(time*1.107 + y*2);\\nb = 0.4 + 0.4*sin(time*1.959 + x*y);\\n\\nxs = if(above(xs,1000),0 ,xs);\\nys = if(above(ys,1000),0 ,ys);"},{"baseVals":{"thick":1,"additive":1,"smoothing":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//q1 = state;\\n//q2 = basstime;\\n\\nq1 = 0;\\nspeed = bass_att*0.8;\\nv = sample*10000 + value2*bass*0.1;\\n\\n//state 0 elipse\\nxs = xs + (equal(0,q1))*sin(v*1)*speed*atan(v*1.51);\\nys = ys + (equal(0,q1))*sin(v*1)*speed;\\n\\n\\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + xs);\\ny = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs);\\n\\nx = x*0.6;\\ny = y*0.9 + 0.05 + bass*0.08;\\ny = y*0.8;\\n\\nr = 0.5 + 0.5*sin(time*1.789) + 0.1;\\ng = 0.4 + 0.4*sin(time*1.478);\\nb = 0.4 + 0.4*sin(time*1.125);\\n\\nxs = if(above(xs,1000),0 ,xs);\\nys = if(above(ys,1000),0 ,ys);"},{"baseVals":{"thick":1,"additive":1,"smoothing":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//q1 = state;\\n//q2 = basstime;\\n\\nq1 = 0;\\nspeed = bass_att*0.8;\\nv = sample*10000 + value2*bass*0.1;\\n\\n//state 0 elipse\\nxs = xs + (equal(0,q1))*sin(v*1)*speed*atan(v*1.51);\\nys = ys + (equal(0,q1))*sin(v*1)*speed;\\n\\n\\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + xs);\\ny = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs);\\n\\nx = -x*0.6 + 1;\\ny = y*0.9 + 0.05 + bass*0.08;\\ny = y*0.8;\\n\\nr = 0.5 + 0.5*sin(time*1.789) + 0.1;\\ng = 0.4 + 0.4*sin(time*1.478);\\nb = 0.4 + 0.4*sin(time*1.125);\\n\\nxs = if(above(xs,1000),0 ,xs);\\nys = if(above(ys,1000),0 ,ys);"}],"init_eqs_eel":"state = 0;","frame_eqs_eel":"//warp = bass*3;\\ndecay_r = 0.65 + 0.2*(abs(cos(difftime*1.56+rarr)));\\ndecay_g = 0.5 + 0.2*(abs(cos(difftime*1.36+rarr)));\\ndecay_b = 0.5 + 0.2*(abs(cos(difftime*1.2+rarr)));\\n//dy = 0.98;\\n\\nbasstime = basstime + bass*0.03;\\nbasstime2 = basstime + bass*0.03;\\nq1 = basstime2;\\n\\n//start in most active range\\nbasstime = if(below(basstime,1000),1000,basstime);\\n//basstime = if(above(basstime,495),450,basstime);\\n\\nbasstime = basstime + bass_att*0.03;\\nvol = pow(bass+mid+treb,2);\\nbasssum = vol;\\n\\nstickybit = time%2;\\n\\n//avg vol\\n//buffer 1\\nvolAvg = volAvg + vol*equal(stickybit,1);\\n//number of samples 1 or framerate\\nsample1 = sample1 + equal(stickybit,1);\\n//buffer 2\\nvolAvg2 = volAvg2 + vol*equal(stickybit,0);\\n//number of samples 2\\nsample2 = sample2 + equal(stickybit,0);\\n\\n//transision\\nedge = bnot(equal(bit2,stickybit));\\n\\nvolAvg = volAvg - volAvg*edge*stickybit;\\nvolAvg2 = volAvg2 - volAvg2*edge*equal(stickybit,0);\\n\\nsample1 = sample1  - sample1*edge*stickybit;\\nsample2 = sample2  - sample2*edge*equal(stickybit,0);\\n\\n//test vol against avg buffer lvl\\ndiff = if(equal(stickybit,1), (basssum/(volAvg2/sample2)) , 0);\\ndiff = if(equal(stickybit,0), (basssum/(volAvg/sample1)), diff);\\n\\nq3 = diff;\\n\\nbit2 = time%2;\\n\\ndifftime = difftime + diff*0.03;\\nq2 = difftime;","pixel_eqs_eel":"saw_r = saw_r + 0.0001*bass;\\nsaw_r =  if(above(saw_r,1),0,saw_r);\\n\\nsaw_g = saw_g + 0.00012*bass;\\nsaw_g =  if(above(saw_g,1),0,saw_g);\\n\\nsaw_b = saw_b + 0.00011*bass;\\nsaw_b =  if(above(saw_b,1),0,saw_b);\\n\\n\\ndecay_r = 2 - y*saw_r;\\ndecay_g = 2 - y*saw_g;\\ndecay_b = 2 - y*saw_b;\\n\\n\\nrot =0;\\nzoom = 1.02;","warp":"","comp":""}')},5790:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"decay":1,"echo_zoom":1,"echo_orient":3,"wave_mode":1,"wrap":0,"darken_center":1,"wave_a":0.001,"zoom":0.97,"rot":-6.27999,"warp":0.00052,"wave_r":0,"wave_g":0,"wave_b":0,"ob_r":1,"ob_g":1,"ob_b":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"textured":1,"rad":0.49849,"g":1,"b":1,"a":0.7,"r2":1,"g2":0,"b2":1,"a2":0.7,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"r2 = 0.5 + 0.5*sin(q2*0.35);\\ng2 = 0.5 + 0.5*sin(q2*0.578);\\nb2 = 0.5 + 0.5*sin(q2*0.689);\\n\\nang = q2;\\ntex_capture = above(q3,2);"},{"baseVals":{"enabled":1,"sides":100,"textured":1,"rad":0.74218,"g":1,"b":1,"a":0.6,"r2":1,"g2":0,"b2":1,"a2":0.6,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"r2 = 0.5 + 0.5*sin(q2*0.45);\\ng2 = 0.5 + 0.5*sin(q2*0.678);\\nb2 = 0.5 + 0.5*sin(q2*0.689);\\n\\nang = -q2*1.05;\\ntex_capture = above(q3,2);"},{"baseVals":{"enabled":1,"sides":100,"textured":1,"rad":1.00035,"g":1,"b":1,"a":0.5,"r2":1,"g2":0,"b2":1,"a2":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"r2 = 0.5 + 0.5*sin(q2*0.45);\\ng2 = 0.5 + 0.5*sin(q2*0.578);\\nb2 = 0.5 + 0.5*sin(q2*0.789);\\n\\nang = q2*0.899;\\ntex_capture = above(q3,2);"},{"baseVals":{"textured":1,"rad":3.25446,"g":1,"b":1,"a":0.3,"r2":1,"b2":1,"a2":0.4,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"r = 0.5 + 0.5*sin(q2*0.45);\\ng = 0.5 + 0.5*sin(q2*0.578);\\nb = 0.5 + 0.5*sin(q2*0.689);\\n\\nr2 = 0.5 + 0.5*sin(q2*0.45);\\ng2 = 0.5 + 0.5*sin(q2*0.578);\\nb2 = 0.5 + 0.5*sin(q2*0.689);\\n\\ntex_capture = above(q3,2);"}],"waves":[{"baseVals":{"enabled":1,"sep":1,"spectrum":1,"thick":1,"additive":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"u = (cos(q1*0.1))*3.14159;\\nv = (cos(q1*0.015))*3.14159*2;\\ns = sample*3.14*100;\\nss = sample*6.28*1000;\\n\\n//draw\\nxs = (0.3 + 0.1*cos(s))*cos(ss)*0.2*cos(v);\\nys = (0.3 + 0.1*cos(s))*sin(ss)*6*u;\\nzs = 0.5*sin(s)*0.2*sin(v);\\n\\n//rotate x axis\\nangle = q1*0.1;\\nyx = ys*cos(angle) - zs*sin(angle);\\nzx = ys*sin(angle) + zs*cos(angle);\\nxx = xs;\\n\\n//rotate y axis\\nangle2 = q1*0.11;\\nxd = xx*cos(angle2) - zx*sin(angle2);\\nzd = xx*sin(angle2) + zx*cos(angle2);\\nyd = yx;\\n\\n//rotaye z axis\\nangle3 = q1*0.15;\\nxn = xd*cos(angle3) - yd*sin(angle3);\\nyn = xd*sin(angle3) + yd*cos(angle3);\\n\\nzd = zd;\\n\\nx = xn*zd*0.3 + 0.5;\\ny = yn*zd*0.3*1.2 + 0.5;\\n\\nr = 0.5 + 0.5*sin(q1*1.2 + x + x);\\ng = 0.5 + 0.5*sin(q1*1.5 + x + y);\\nb = 0.5 + 0.5*sin(q1*1.36 + y + y);"},{"baseVals":{"enabled":1,"sep":1,"spectrum":1,"thick":1,"additive":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"u = (cos(q1*0.1))*3.14159;\\nv = (cos(q1*0.015))*3.14159*2;\\ns = sample*3.14*100;\\nss = sample*6.28*1000;\\n\\n//draw\\nxs = (0.3 + 0.1*cos(s))*cos(ss)*0.2*cos(v);\\nys = (0.3 + 0.1*cos(s))*sin(ss)*6*u;\\nzs = 0.5*sin(s)*0.2*sin(v);\\n\\n//rotate x axis\\nangle = q1*0.1;\\nyx = ys*cos(angle) - zs*sin(angle);\\nzx = ys*sin(angle) + zs*cos(angle);\\nxx = xs;\\n\\n//rotate y axis\\nangle2 = q1*0.13;\\nxd = xx*cos(angle2) - zx*sin(angle2);\\nzd = xx*sin(angle2) + zx*cos(angle2);\\nyd = yx;\\n\\n//rotaye z axis\\nangle3 = q1*0.16;\\nxn = xd*cos(angle3) - yd*sin(angle3);\\nyn = xd*sin(angle3) + yd*cos(angle3);\\n\\nzd = zd;\\n\\nx = xn*zd*0.3 + 0.5;\\ny = yn*zd*0.3*1.2 + 0.5;\\n\\nr = 0.5 + 0.5*sin(q1*1.2 + x + x);\\ng = 0.5 + 0.5*sin(q1*1.5 + x + y);\\nb = 0.5 + 0.5*sin(q1*1.36 + y + y);"},{"baseVals":{"enabled":1,"sep":1,"spectrum":1,"thick":1,"additive":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"u = (cos(q1*0.1))*3.14159;\\nv = (cos(q1*0.015))*3.14159*2;\\ns = sample*3.14*100;\\nss = sample*6.28*1000;\\n\\n//draw\\nxs = (0.3 + 0.1*cos(s))*cos(ss)*0.2*cos(v);\\nys = (0.3 + 0.1*cos(s))*sin(ss)*6*u;\\nzs = 0.5*sin(s)*0.2*sin(v);\\n\\n//rotate x axis\\nangle = q1*0.1;\\nyx = ys*cos(angle) - zs*sin(angle);\\nzx = ys*sin(angle) + zs*cos(angle);\\nxx = xs;\\n\\n//rotate y axis\\nangle2 = q1*0.16;\\nxd = xx*cos(angle2) - zx*sin(angle2);\\nzd = xx*sin(angle2) + zx*cos(angle2);\\nyd = yx;\\n\\n//rotaye z axis\\nangle3 = q1*0.16;\\nxn = xd*cos(angle3) - yd*sin(angle3);\\nyn = xd*sin(angle3) + yd*cos(angle3);\\n\\nzd = zd;\\n\\nx = xn*zd*0.3 + 0.5;\\ny = yn*zd*0.3*1.2 + 0.5;\\n\\nr = 0.5 + 0.5*sin(q1*1.2 + x + x);\\ng = 0.5 + 0.5*sin(q1*1.5 + x + y);\\nb = 0.5 + 0.5*sin(q1*1.36 + y + y);"},{"baseVals":{"sep":1,"spectrum":1,"usedots":1,"additive":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"u = abs(cos(q1*0.1))*3.14159;\\nv = abs(cos(q1*0.015))*3.14159*2;\\ns = sample*3.14*100;\\nss = sample*6.28*1000;\\n\\n//draw\\nxs = (0.5 + 0.0000001*cos(s))*cos(ss);\\nys = (0.5 + 0.0000001*cos(s))*sin(ss);\\nzs = 0.5*sin(s);\\n\\n//rotate x axis\\nangle = q1*0.1;\\nyx = ys*cos(angle) - zs*sin(angle);\\nzx = ys*sin(angle) + zs*cos(angle);\\nxx = xs;\\n\\n//rotate y axis\\nangle2 = q1*0.14;\\nxd = xx*cos(angle2) - zx*sin(angle2);\\nzd = xx*sin(angle2) + zx*cos(angle2);\\nyd = yx;\\n\\n//rotaye z axis\\nangle3 = q1*0.15;\\nxn = xd*cos(angle3) - yd*sin(angle3);\\nyn = xd*sin(angle3) + yd*cos(angle3);\\n\\nzd = zd + 2;\\n\\nx = xn*zd*0.3 + 0.5;\\ny = yn*zd*0.3*1.2 + 0.5;\\n\\nr = 0.5 + 0.5*sin(q1*1.2 + x + x);\\ng = 0.5 + 0.5*sin(q1*1.5 + x + y);\\nb = 0.5 + 0.5*sin(q1*1.66 + y + y);"}],"init_eqs_eel":"","frame_eqs_eel":"basstime = basstime + bass*0.03;\\nq1 = basstime*4;\\n\\n//start in most active range\\nbasstime = if(below(basstime,1000),1000,basstime);\\n//basstime = if(above(basstime,495),450,basstime);\\n\\nbasstime = basstime + bass_att*0.03;\\nvol = pow(bass+mid+treb,2);\\nbasssum = vol;\\n\\nstickybit = time%2;\\n\\n//avg vol\\n//buffer 1\\nvolAvg = volAvg + vol*equal(stickybit,1);\\n//number of samples 1 or framerate\\nsample1 = sample1 + equal(stickybit,1);\\n//buffer 2\\nvolAvg2 = volAvg2 + vol*equal(stickybit,0);\\n//number of samples 2\\nsample2 = sample2 + equal(stickybit,0);\\n\\n//transision\\nedge = bnot(equal(bit2,stickybit));\\n\\nvolAvg = volAvg - volAvg*edge*stickybit;\\nvolAvg2 = volAvg2 - volAvg2*edge*equal(stickybit,0);\\n\\nsample1 = sample1  - sample1*edge*stickybit;\\nsample2 = sample2  - sample2*edge*equal(stickybit,0);\\n\\n//test vol against avg buffer lvl\\ndiff = if(equal(stickybit,1), (basssum/(volAvg2/sample2)) , 0);\\ndiff = if(equal(stickybit,0), (basssum/(volAvg/sample1)), diff);\\n\\nq3 = diff;\\n\\nbit2 = time%2;\\n\\ndifftime = difftime + diff*0.03;\\nq2 = difftime;\\n\\n//fix a strange error\\ndifftime = if(above(difftime,2000),0, difftime);\\n\\nmonitor = abs(cos(time))*3.14;\\n\\n\\nmv_a = above(diff,10);","pixel_eqs_eel":"zoom = 1 + 0.05*q3*rad;\\n\\ndecay_r = 0.2*rad*sin(q2*0.35) + 0.85 + 0.1*sin(q2);\\ndecay_g = 0.2*rad*sin(q2*0.5) + 0.85 + 0.1*sin(0.7*q2);\\ndecay_b = 0.2*rad*sin(q2*0.4) + 0.85 + 0.1*sin(0.8*q2);\\n\\nrot = 0;","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (texture (sampler_fc_main, uv).xyz * (0.8 + (q3 * 0.1)));\\n  ret = tmpvar_1.xyz;\\n }","comp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (texture (sampler_main, uv).xyz * 2.0);\\n  ret = tmpvar_1.xyz;\\n }"}')},262:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":0,"gammaadj":1,"decay":0.925,"echo_zoom":1.001827,"echo_alpha":0.5,"echo_orient":1,"wave_mode":2,"additivewave":1,"wave_dots":1,"wave_brighten":0,"red_blue":1,"wave_a":4.099998,"wave_scale":2.850136,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.999514,"warp":0.01,"wave_g":0,"wave_b":0,"ob_size":0,"ob_r":0.01,"ob_a":1,"ib_size":0.005,"ib_a":1,"mv_x":12.799995,"mv_y":38.400002,"mv_l":0.800001,"mv_r":0.44,"mv_g":0.65,"mv_b":0.81,"mv_a":0},"shapes":[{"baseVals":{"sides":23,"additive":1,"textured":1,"y":0.7,"rad":0.15493,"tex_zoom":0.01,"g":1,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"y=bass_att*0.5+0.2;\\nx=cos(time*2)*0.5+0.5;"},{"baseVals":{"textured":1,"rad":1.801999,"tex_ang":3.141593,"tex_zoom":0.572684,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"//ang = ang + (bass*.2) + (time*.4);\\n//rad=1.781+(bass*0.025);\\nang=above(0.5,treb_att)*.063;"},{"baseVals":{"sides":100,"additive":1,"textured":1,"x":0.9,"tex_zoom":0.01,"g":1,"b":1,"r2":1,"b2":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = sin(time*5) * .4 + .5;\\ny=treb_att*0.5;\\n"},{"baseVals":{"sides":100,"textured":1,"rad":0.033004,"tex_zoom":0.01,"g":1,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x=.5+(bass*0.07);"}],"waves":[{"baseVals":{"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"basstime=basstime+(bass*bass);\\nt1=basstime*0.003;\\n","point_eqs_eel":"//plot x,y,z to point on circle\\nsmp=sample*6.283;\\nxp=sin(smp )*0.35;\\nyp=cos(smp )*0.35;\\nzp=0;\\n\\n\\n//alter shape;\\nangy=sin(sample*6.28*4 +t1 )*6.28;\\nxq=xp*cos(angy) - zp*sin(angy);\\nzq=xp*sin(angy) + zp*cos(angy);\\nxp=xq;\\nzp=zq;\\n\\n\\n//rotate on y axis;\\nangy=t1*0.1;\\nxq=xp*cos(angy) - zp*sin(angy);\\nzq=xp*sin(angy) + zp*cos(angy);\\nxp=xq;\\nzp=zq;\\n\\n//rotate on x axis\\naxs1 = sin(t1*0.15) + 1.6;\\nyq= yp*cos(axs1) - zp*sin(axs1);\\nzq= yp*sin(axs1) + zp*cos(axs1);\\nyp=yq;\\nzp=zq;\\n\\n//rotate on y axis again\\naxs2 = sin(t1*0.1)*3.3;\\nxq=xp*cos(axs2) - zp*sin(axs2);\\nzq=xp*sin(axs2) + zp*cos(axs2);\\nxp=xq;\\nzp=zq;\\n\\n//stretch y axis to compensate for aspect ratio\\nyp=yp*1.2;\\n\\n//push forward into viewpace\\nzp=zp+2.1;\\n\\n//project x,y,z into screenspace\\nxs=xp/zp;\\nys=yp/zp;\\n\\n//center 0,0 in middle of screen\\nx=xs+0.5+q4;\\ny=ys+0.5+q5;\\n\\nr=1-q1;\\ng=1-q2;\\nb=1-q3;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_a = 0;\\n\\n\\n\\n//Thanks to Zylot for rainbow generator\\ncounter1 = if(equal(counter2,1),if(equal(counter1,1),0,counter1+.2),1);\\ncounter2 = if(equal(counter1,1),if(equal(counter2,1),0,counter2+.2),1);\\ncdelay1 = if(equal(cdelay2,1),1,if(equal(colorcounter%2,1),if(equal(counter1,1),2 ,0), if(equal(counter2,1),2,0)));\\ncdelay2 = if(equal(cdelay1,2),1,0);\\ncolorcounter = if(above(colorcounter,7),0,if(equal(cdelay1,1),colorcounter+1,colorcounter));\\nib_r = .5*if(equal(colorcounter,1),1, if(equal(colorcounter,2),1, if(equal(colorcounter,3),1, if(equal(colorcounter,4),sin(counter2+2.1), if(equal(colorcounter,5),0, if(equal(colorcounter,6),0,sin(counter1)))))));\\nib_g = .5*if(equal(colorcounter,1),0, if(equal(colorcounter,2),sin(counter2*.5), if(equal(colorcounter,3),sin((counter1+1.75)*.4), if(equal(colorcounter,4),1, if(equal(colorcounter,5),1, if(equal(colorcounter,6),sin(counter2+2),0))))));\\nib_b = if(equal(colorcounter,1),sin(counter1+2.1), if(equal(colorcounter,2),0, if(equal(colorcounter,3),0, if(equal(colorcounter,4),0, if(equal(colorcounter,5),sin(counter1), if(equal(colorcounter,6),1,1))))));\\n\\n\\n\\nob_r=ib_r-0.5;\\nob_g=ib_g-0.5;\\nob_b=ib_b-0.5;\\nq1=ib_r;\\nq2=ib_g;\\nq3=ib_b;\\n\\n\\n\\ndecay =1;\\n\\n\\n//echo_orient=((bass_att+mid_att+treb_att)/3)*3;\\n//solarize=above(0.5,bass);\\n//darken=above(0.4,treb);\\n\\nmusictime=musictime+(mid*mid*mid)*0.02*(75/fps);\\n\\nxpos=cos(musictime*0.6)*0.6;\\nypos=sin(musictime*0.4)*0.6;\\nq4=xpos;\\nq5=ypos","pixel_eqs_eel":"//flip= (-2 * above(sin(time),-0.9) )+1;\\n//var=(bass+mid+treb)/3;\\n//rot=((ang&rad/rad)/(var*20))/10;\\n//sx=.99-(var*0.01);\\n//cx=var*0.1*(ang/12);\\n//sy=sx;\\n\\n//zoom=-1;\\nsx=-1+(bass*0.2);\\nsy=-1-(treb*0.2);\\n\\ncx=0.5+q4;\\ncy=0.5-q5;\\nrd=sqrt( sqr( (x-0.5-q4)*2) + sqr( (y-0.5+q5)*1.5 ) );\\n//zm=(1.1-(rd/4));\\nzm=1;\\n\\nag=atan( (y-0.5+q5)/(x-0.5-q4) );\\nstar=sin(ag*6+time)*((2-rd)-ag)/5;\\nzm=zm+star/20;\\nsx=zm*rd;\\nsy=zm*rd;\\n//rot=above(rd,0.7)*(rd-0.7)*sin(time*0.3)","warp":"","comp":""}')},3476:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":5,"gammaadj":1,"decay":0.965,"echo_zoom":1.483827,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"additivewave":1,"wave_brighten":0,"wrap":0,"darken_center":1,"darken":1,"wave_a":0.001,"wave_scale":1.285751,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":0.01,"warpscale":1.470245,"zoomexp":4.778023,"zoom":0.998162,"warp":0.01,"sx":1.001828,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.005,"ob_r":1,"ob_g":0.5,"ob_b":0.5,"ob_a":1,"ib_size":0.5,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":4.800001,"mv_dx":0.4,"mv_l":1,"mv_r":0,"mv_g":0.5,"mv_a":0.1},"shapes":[{"baseVals":{"enabled":1,"sides":3,"additive":1,"thickoutline":1,"textured":1,"x":1,"y":0.59,"rad":0.559231,"ang":3.39292,"tex_zoom":100,"r":0,"g":1,"b":1,"g2":0,"border_r":0,"border_g":0,"border_b":0,"border_a":1},"init_eqs_eel":"","frame_eqs_eel":"x=sin(time/10)*0.1+0.5+(treb_att*0.1);"},{"baseVals":{"sides":13,"additive":1,"x":0.9,"y":0.84,"rad":0.364567,"ang":3.078761,"tex_zoom":4.141463,"r":0.25,"g":0.05,"a":0.2,"g2":0,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"//additive=above(sin(time*50),.95);"},{"baseVals":{"enabled":1,"sides":6,"textured":1,"x":0.3,"y":0.7,"rad":1.089252,"ang":0.816814,"tex_ang":3.141592,"tex_zoom":0.504215,"g":1,"b":1,"r2":1,"b2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"//tex_ang=(sin(time/4)*0.5+0.5)*6.28;"},{"baseVals":{"enabled":1,"sides":3,"textured":1,"rad":0.284278,"ang":3.141593,"tex_ang":4.900885,"tex_zoom":2.987755,"g":1,"b":1,"r2":0.95,"b2":1,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":1},"init_eqs_eel":"","frame_eqs_eel":"ang=time/10;\\ntex_zoom=3.4+(bass*0.03);\\nvar=above(bass_att,0.7);\\na=var;\\na2=var;\\nborder_a=var;\\n\\n\\n//This preset fluctuates between 53.2 and 55.44 fps on my box.  Texture size_2048 Meshsize_36*24\\n//On a SuperScan Pro 800 Hitachi\\n//On a Radion_9600\\n//1280*1024_Screen_Resolution\\n//;) hello! I am ATHEN ANDANDA!"}],"waves":[{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1,"r":0,"a":0.06},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"xspout=.5;\\nyspout=-.01;\\n\\npphase=9999*sample*sample*.0001;\\npphase2=.1+((sample*3349*sample)%100)*.01;\\npheight=((sample*9893)%100)*.002;\\nyheight=((sample*1231*sample)%100)*.01;\\n\\nr=((sample*5454)%100)*.01*abs(sin(time*.25));\\ng=((sample*9954)%100)*.01;\\n\\nxoffset1=(cos((time*pphase2)+pphase)*pheight);\\nxoffset2=-1*(cos((time*pphase2)+pphase)*pheight);\\n\\nlrorient=if(below(cos((time*pphase2)+pphase),cos(((time-.1)*pphase2)+pphase)),0,1);\\n\\npx=if(equal(lrorient,0),xspout-pheight+xoffset1,xspout+pheight-xoffset2);\\n\\npy=yspout+(abs(sin((time*pphase2)+pphase))*yheight);\\n\\nx=px;\\ny=py;"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1,"r":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"pphase=(sample*5671*cos(time*.0001));\\npheight=((sample*7654)%100)*.005*sin(time*.2);\\n\\n//xspout=.5;\\nxspout=if(below(abs(sin(time*.2)),.005),.3+(rand(40)*.01),xspout);\\n//yspout=.5;\\nyspout=if(below(abs(sin(time*.2)),.005),.3+(rand(40)*.01),yspout);\\n\\npx=xspout+(cos(time+pphase)*pheight);\\npy=yspout+(sin(time+pphase)*pheight);\\n\\nx=px;\\ny=py;\\na=abs(sin(time*.2)*.3+(treb_att*.1));\\n\\nr=treb*2;"},{"baseVals":{"enabled":1,"thick":1,"additive":1,"b":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs*4;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=(flip*0.1-0.05)*(sample);\\nzp=0;\\n\\n//spin;\\nang=tm*20 + sin(tm*76 + time*4)*0.4;\\nsa=sin(ang);ca=cos(ang);\\nxr=xp*sa + yp*ca;\\nyr=xp*ca - yp*sa;\\nzr=zp;\\n\\nxp=xr;\\nyp=yr + 0.05 + (sin(tm)*0.5 + 0.5)*0.2 + 0.05;\\nzp=zr;\\n\\n//wrist movement;\\nang=sin(tm*2);\\n\\nxq=xp;\\nsa=sin(ang);ca=cos(ang);\\nyq=yp*sa + zp*ca;\\nzq=yp*ca - zp*sa;\\n\\n\\nang=tm*8;\\nsa=sin(ang);ca=cos(ang);\\nxp=xq*sa + yq*ca;\\nyp=xq*ca - yq*sa;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*2.5;\\nxq=xp;\\nsa=sin(ang);ca=cos(ang);\\nyq=yp*sa + zp*ca;\\nzq=yp*ca - zp*sa;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3 + 0.5);\\nxp=xq*sa + yq*ca;\\nyp=xq*ca - yq*sa;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*1)*1.75 - 1.05;\\nsa=sin(ang);ca=cos(ang);\\nxq=xp*sa + zp*ca;\\nyq=yp;\\nzq=xp*ca - zp*sa;\\n\\n//upper arm up down;\\nang=cos(tm);\\nxp=xq;\\nsa=sin(ang);ca=cos(ang);\\nyp=yq*ca - zq*sa;\\nzp=yq*sa + zq*ca;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+1.5;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=(1-sample);\\n"},{"baseVals":{"usedots":1,"thick":1,"smoothing":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1=q1;\\n\\nt7=.0;\\nt8=.45;\\n\\nddx=.25*cos(5.7119*t1)+2.5963*t1*sin(5.7119*t1);\\nddy=.3125*sin(5.7119*t1)-3.2453*t1*cos(5.7119*t1);\\nddtan=atan2(ddy,ddx);\\nt2=-ddtan;\\n\\nval1=((-.5*cos(5.7119*t1))*cos(t2)-(-.625*sin(5.7119*t1))*sin(t2));\\nval2=((-.5*cos(5.7119*t1))*sin(t2)+(-.625*sin(5.7119*t1))*cos(t2));\\n\\nt6=-sign(t1);\\nt7=t7-val1;\\nt8=t8-val2;\\n\\nt3=q2;","point_eqs_eel":"sample=pow(sample,.85);\\n\\nc1=6.2831*t1/(1.1-sample);\\nc=cos(c1);\\ns=sin(c1);\\nc2=sqrt(1-sample);\\n\\nox=t7-.5*c2*c;\\noy=t8-.625*c2*s;\\n\\nx=t7+((ox-t7)*cos(t2)-(oy-t8)*sin(t2));\\ny=t8+((ox-t7)*sin(t2)+(oy-t8)*cos(t2));\\n\\ninv=1/sqr(1.1-sample);\\nfdx=-.25*pow(1-sample,-.5)*c-c2*s*3.1415*t1*inv;\\nfdy=-.3125*c2*s+3.9268*c2*c*t1*inv;\\ninvMag=1/sqrt(sqr(fdx)+sqr(fdy));\\nfdx=fdx*invMag;\\nfdy=fdy*invMag;\\n\\nrdx=fdx*cos(1.5707+t2)-fdy*sin(1.5707+t2);\\nrdy=fdx*sin(1.5707+t2)+fdx*cos(1.5707+t2);\\ntt=rand(100)/100;\\nx=x+rdx*(.15*tt)*(1-sample);\\ny=y+rdy*(.15*tt)*(1-sample);\\n\\nx=x*.55;\\ny=(y-.5)*.55+.5;\\n\\nr=sample;\\ng=1-sample;\\nb=1;\\na=below(sample,.995);\\n\\n\\ny=y+t3;"}],"init_eqs_eel":"","frame_eqs_eel":"decay=.999;\\nwrap=sin(time*10);\\nmv_dx=bass;\\nib_a=.005;\\n\\n\\nvol=(bass+mid+treb)*0.25;\\nvol=vol*vol;\\n\\nmtime=mtime+vol*0.01*(55/fps);\\n\\nq1=time*0.5;","pixel_eqs_eel":"zoom=1.005-(rad/100);\\nrot=rad/600;\\nsy=-1;","warp":"","comp":""}')},5254:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":3,"gammaadj":1,"decay":0.925,"echo_zoom":1.001829,"echo_alpha":0.5,"echo_orient":2,"wave_mode":2,"additivewave":1,"wave_dots":1,"wave_brighten":0,"invert":1,"wave_a":4.099998,"wave_scale":2.850136,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.999514,"warp":0.01,"wave_g":0,"wave_b":0,"ob_size":0,"ob_r":0.01,"ob_a":1,"ib_size":0.005,"ib_a":1,"mv_x":12.799995,"mv_y":38.400002,"mv_l":0.800001,"mv_r":0.44,"mv_g":0.65,"mv_b":0.81,"mv_a":0},"shapes":[{"baseVals":{"sides":23,"additive":1,"textured":1,"y":0.7,"rad":0.15493,"tex_zoom":0.01,"g":1,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"y=bass_att*0.5+0.2;\\nx=cos(time*2)*0.5+0.5;"},{"baseVals":{"textured":1,"rad":1.801999,"tex_ang":3.141593,"tex_zoom":0.572684,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"//ang = ang + (bass*.2) + (time*.4);\\n//rad=1.781+(bass*0.025);\\nang=above(0.5,treb_att)*.063;"},{"baseVals":{"sides":100,"additive":1,"textured":1,"x":0.9,"tex_zoom":0.01,"g":1,"b":1,"r2":1,"b2":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = sin(time*5) * .4 + .5;\\ny=treb_att*0.5;\\n"},{"baseVals":{"sides":100,"textured":1,"rad":0.033004,"tex_zoom":0.01,"g":1,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x=.5+(bass*0.07);"}],"waves":[{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"basstime=basstime+(bass*bass);\\nt1=basstime*0.003;\\n","point_eqs_eel":"//plot x,y,z to point on circle\\nsmp=sample*6.283;\\nxp=sin(smp )*0.20;\\nyp=cos(smp )*0.20;\\nzp=0;\\n\\n\\n//alter shape;\\nangy=sin(sample*6.28*4 +t1 )*6.28;\\nxq=xp*cos(angy) - zp*sin(angy);\\nzq=xp*sin(angy) + zp*cos(angy);\\nxp=xq;\\nzp=zq;\\n\\n\\n//rotate on y axis;\\nangy=t1*0.1;\\nxq=xp*cos(angy) - zp*sin(angy);\\nzq=xp*sin(angy) + zp*cos(angy);\\nxp=xq;\\nzp=zq;\\n\\n//rotate on x axis\\naxs1 = sin(t1*0.15) + 1.6;\\nyq= yp*cos(axs1) - zp*sin(axs1);\\nzq= yp*sin(axs1) + zp*cos(axs1);\\nyp=yq;\\nzp=zq;\\n\\n//rotate on y axis again\\naxs2 = sin(t1*0.1)*3.3;\\nxq=xp*cos(axs2) - zp*sin(axs2);\\nzq=xp*sin(axs2) + zp*cos(axs2);\\nxp=xq;\\nzp=zq;\\n\\n//stretch y axis to compensate for aspect ratio\\nyp=yp*1.2;\\n\\n//push forward into viewpace\\nzp=zp+2.1;\\n\\n//project x,y,z into screenspace\\nxs=xp/zp;\\nys=yp/zp;\\n\\n//center 0,0 in middle of screen\\nx=xs+0.5+q4;\\ny=ys+0.5+q5;\\n\\nr=1-q1;\\ng=1-q2;\\nb=1-q3;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_a = 0;\\n\\n\\n\\n//Thanks to Zylot for rainbow generator\\ncounter1 = if(equal(counter2,1),if(equal(counter1,1),0,counter1+.2),1);\\ncounter2 = if(equal(counter1,1),if(equal(counter2,1),0,counter2+.2),1);\\ncdelay1 = if(equal(cdelay2,1),1,if(equal(colorcounter%2,1),if(equal(counter1,1),2 ,0), if(equal(counter2,1),2,0)));\\ncdelay2 = if(equal(cdelay1,2),1,0);\\ncolorcounter = if(above(colorcounter,7),0,if(equal(cdelay1,1),colorcounter+1,colorcounter));\\nib_r = .5*if(equal(colorcounter,1),1, if(equal(colorcounter,2),1, if(equal(colorcounter,3),1, if(equal(colorcounter,4),sin(counter2+2.1), if(equal(colorcounter,5),0, if(equal(colorcounter,6),0,sin(counter1)))))));\\nib_g = .5*if(equal(colorcounter,1),0, if(equal(colorcounter,2),sin(counter2*.5), if(equal(colorcounter,3),sin((counter1+1.75)*.4), if(equal(colorcounter,4),1, if(equal(colorcounter,5),1, if(equal(colorcounter,6),sin(counter2+2),0))))));\\nib_b = if(equal(colorcounter,1),sin(counter1+2.1), if(equal(colorcounter,2),0, if(equal(colorcounter,3),0, if(equal(colorcounter,4),0, if(equal(colorcounter,5),sin(counter1), if(equal(colorcounter,6),1,1))))));\\n\\n\\n\\nob_r=ib_r-0.5;\\nob_g=ib_g-0.5;\\nob_b=ib_b-0.5;\\nq1=ib_r;\\nq2=ib_g;\\nq3=ib_b;\\n\\n\\n\\ndecay = 0.9999;\\n\\n\\n//echo_orient=((bass_att+mid_att+treb_att)/3)*3;\\n//solarize=above(0.5,bass);\\n//darken=above(0.4,treb);\\n\\nmusictime=musictime+(mid*mid*mid)*0.01;\\n\\nxpos=sin(musictime*0.4)*0.2;\\nypos=sin(musictime*0.4)*0.2;\\nq4=xpos;\\nq5=ypos","pixel_eqs_eel":"//flip= (-2 * above(sin(time),-0.9) )+1;\\n//var=(bass+mid+treb)/3;\\n//rot=((ang&rad/rad)/(var*20))/10;\\n//sx=.99-(var*0.01);\\n//cx=var*0.1*(ang/12);\\n//sy=sx;\\n\\nzoom=1;\\n\\ncx=0.5+q4;\\ncy=0.5-q5;\\nrd=sqrt( sqr( (x-0.5-q4)*2) + sqr( (y-0.5+q5)*1.5 ) );\\n//zm=(1.1-(rd/4));\\nzm=.99;\\n\\nag=atan( (y-0.5+q5)/(x-0.5-q4) );\\nstar=sin(ag/5)*(2-rd-ag);\\nzm=zm+star/20;\\nsx=zm;\\nsy=zm;\\nrot=above(rd,0.7)/(rd+7)*(bass_att*0.1)/rd;\\ndx=sin(y*140)*(bass*0.005);\\ndy=cos(x*140)*(bass*0.005);","warp":"","comp":""}')},3167:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":2,"gammaadj":1,"decay":0.925,"echo_zoom":1.001829,"echo_alpha":0.5,"echo_orient":1,"wave_mode":2,"additivewave":1,"wave_dots":1,"wave_brighten":0,"wave_a":4.099998,"wave_scale":2.850136,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.999514,"warp":0.01,"wave_g":0,"wave_b":0,"ob_size":0.005,"ob_r":0.01,"ob_a":1,"ib_size":0.005,"ib_a":1,"mv_x":12.799995,"mv_y":38.400002,"mv_l":0.800001,"mv_r":0.44,"mv_g":0.65,"mv_b":0.81,"mv_a":0},"shapes":[{"baseVals":{"sides":23,"additive":1,"textured":1,"y":0.7,"rad":0.15493,"tex_zoom":0.01,"g":1,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"y=bass_att*0.5+0.2;\\nx=cos(time*2)*0.5+0.5;"},{"baseVals":{"textured":1,"rad":1.801999,"tex_ang":3.141593,"tex_zoom":0.572684,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"//ang = ang + (bass*.2) + (time*.4);\\n//rad=1.781+(bass*0.025);\\nang=above(0.5,treb_att)*.063;"},{"baseVals":{"sides":100,"additive":1,"textured":1,"x":0.9,"tex_zoom":0.01,"g":1,"b":1,"r2":1,"b2":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = sin(time*5) * .4 + .5;\\ny=treb_att*0.5;\\n"},{"baseVals":{"sides":100,"textured":1,"rad":0.033004,"tex_zoom":0.01,"g":1,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x=.5+(bass*0.07);"}],"waves":[{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"basstime=basstime+(bass*bass);\\nt1=basstime*0.003;\\n","point_eqs_eel":"//plot x,y,z to point on circle\\nsmp=sample*6.283;\\nxp=sin(smp )*0.20;\\nyp=cos(smp )*0.20;\\nzp=0;\\n\\n\\n//alter shape;\\nangy=sin(sample*6.28*4 +t1 )*6.28;\\nxq=xp*cos(angy) - zp*sin(angy);\\nzq=xp*sin(angy) + zp*cos(angy);\\nxp=xq;\\nzp=zq;\\n\\n\\n//rotate on y axis;\\nangy=t1*0.1;\\nxq=xp*cos(angy) - zp*sin(angy);\\nzq=xp*sin(angy) + zp*cos(angy);\\nxp=xq;\\nzp=zq;\\n\\n//rotate on x axis\\naxs1 = sin(t1*0.15) + 1.6;\\nyq= yp*cos(axs1) - zp*sin(axs1);\\nzq= yp*sin(axs1) + zp*cos(axs1);\\nyp=yq;\\nzp=zq;\\n\\n//rotate on y axis again\\naxs2 = sin(t1*0.1)*3.3;\\nxq=xp*cos(axs2) - zp*sin(axs2);\\nzq=xp*sin(axs2) + zp*cos(axs2);\\nxp=xq;\\nzp=zq;\\n\\n//stretch y axis to compensate for aspect ratio\\nyp=yp*1.2;\\n\\n//push forward into viewpace\\nzp=zp+2.1;\\n\\n//project x,y,z into screenspace\\nxs=xp/zp;\\nys=yp/zp;\\n\\n//center 0,0 in middle of screen\\nx=xs+0.5+q4;\\ny=ys+0.5+q5;\\n\\nr=1-q1;\\ng=1-q2;\\nb=1-q3;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_a = 0;\\n\\n\\n\\n//Thanks to Zylot for rainbow generator\\ncounter1 = if(equal(counter2,1),if(equal(counter1,1),0,counter1+.2),1);\\ncounter2 = if(equal(counter1,1),if(equal(counter2,1),0,counter2+.2),1);\\ncdelay1 = if(equal(cdelay2,1),1,if(equal(colorcounter%2,1),if(equal(counter1,1),2 ,0), if(equal(counter2,1),2,0)));\\ncdelay2 = if(equal(cdelay1,2),1,0);\\ncolorcounter = if(above(colorcounter,7),0,if(equal(cdelay1,1),colorcounter+1,colorcounter));\\nib_r = .5*if(equal(colorcounter,1),1, if(equal(colorcounter,2),1, if(equal(colorcounter,3),1, if(equal(colorcounter,4),sin(counter2+2.1), if(equal(colorcounter,5),0, if(equal(colorcounter,6),0,sin(counter1)))))));\\nib_g = .5*if(equal(colorcounter,1),0, if(equal(colorcounter,2),sin(counter2*.5), if(equal(colorcounter,3),sin((counter1+1.75)*.4), if(equal(colorcounter,4),1, if(equal(colorcounter,5),1, if(equal(colorcounter,6),sin(counter2+2),0))))));\\nib_b = if(equal(colorcounter,1),sin(counter1+2.1), if(equal(colorcounter,2),0, if(equal(colorcounter,3),0, if(equal(colorcounter,4),0, if(equal(colorcounter,5),sin(counter1), if(equal(colorcounter,6),1,1))))));\\n\\n\\n\\nob_r=ib_r-0.5;\\nob_g=ib_g-0.5;\\nob_b=ib_b-0.5;\\n//ib_r=1-ob_r;\\n//ib_g=1-ob_g;\\n//ib_b=1-ob_b;\\nq1=ib_r;\\nq2=ib_g;\\nq3=ib_b;\\n\\n\\n\\ndecay = 0.9999;\\n\\n\\n//echo_orient=((bass_att+mid_att+treb_att)/3)*3;\\n//solarize=above(0.5,bass);\\n//darken=above(0.4,treb);\\n\\nmusictime=musictime+(mid*mid*mid)*0.02;\\n\\nxpos=sin(musictime*0.6)*0.3;\\nypos=sin(musictime*0.4)*0.3;\\nq4=xpos;\\nq5=ypos","pixel_eqs_eel":"//flip= (-2 * above(sin(time),-0.9) )+1;\\n//var=(bass+mid+treb)/3;\\n//rot=((ang&rad/rad)/(var*20))/10;\\n//sx=.99-(var*0.01);\\n//cx=var*0.1*(ang/12);\\n//sy=sx;\\n\\nzoom=.99;\\n\\ncx=0.5+q4;\\ncy=0.5-q5;\\nrd=sqrt( sqr( (x-0.5-q4)*2) + sqr( (y-0.5+q5)*1.5 ) );\\n//zm=(1.1-(rd/4));\\nzm=.99;\\n\\nag=atan( (y-0.5+q5)/(x-0.5-q4) );\\nstar=sin(ag/5)*(2-rd);\\nzm=zm+star/20;\\nsx=zm;\\nsy=zm;\\nrot=above(rd,0.7)/(rd+7)*(bass_att*0.1)/rd;\\ndx=sin(x*50)*(bass*0.005)*ag/(rd*5);\\ndy=cos(y*50)*(bass*0.005)*ag/(rd*5);","warp":"","comp":""}')},5618:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":0,"gammaadj":1,"decay":0.9059,"echo_zoom":2.003071,"echo_alpha":0.5,"echo_orient":3,"wave_mode":5,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":1.924157,"wave_scale":0.653091,"wave_smoothing":0,"wave_mystery":-0.48,"modwavealphastart":0.8,"modwavealphaend":1.1,"warpscale":0.01,"zoomexp":1.008148,"zoom":1.0018,"warp":0.01,"sx":1.001829,"sy":1.008151,"wave_g":0.65,"wave_b":0,"ob_size":0,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":31.999994,"mv_y":24.000004,"mv_l":5,"mv_r":0,"mv_g":0,"mv_b":0},"shapes":[{"baseVals":{"enabled":1,"thickoutline":1,"textured":1,"rad":0.746302,"tex_zoom":0.942039,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ang=sin(time)*.5+.5;\\nval=3;\\na2=val*.33;\\na=val*.33;\\nrad=cos(time*.3)*.4+0.65;\\nx=sin(time*.25)*.25+.5;\\ny=cos(time*.45)*.25+.5;\\n\\n\\n"},{"baseVals":{"thickoutline":1,"textured":1,"rad":0.746302,"tex_zoom":0.942039,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ang=cos(time*.3)*.5+.5;\\nval=3;\\na2=val*.33;\\na=val*.33;\\nrad=sin(time*.3)*.4+0.65;\\nx=cos(time*.25)*.25+.5;\\ny=sin(time*.45)*.25+.5;\\n\\n\\n"},{"baseVals":{"enabled":1,"sides":6,"thickoutline":1,"rad":0.364564,"r":0,"g2":0,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"\\nh2=h2+(above(treb,1.32)*0.8)*.9;\\nvr=sin(h2*.8)*.5+.5;\\nvg=sin(h2*.5)*.5+.5;\\nvb=sin(h2*.1)*.5+.5;\\n\\ng=vg;\\nr=vr;\\nb=vb;\\ng2=g;\\nr2=r;\\nb2=b;\\ndist=(frame%100)*.01;\\nmaat=maat+(above(bass_att,1.5));\\nmaat=below(maat,16)*maat;\\nx=if(below(maat,8),if(below(maat,4),dist,1-dist),x);\\ny=if(above(maat,8),if(above(maat,4),dist,1-dist),y);\\n"},{"baseVals":{"enabled":1,"additive":1,"thickoutline":1,"textured":1,"rad":0.364564,"g":0.5,"b":0.5,"g2":0,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"samples":38,"thick":1,"additive":1,"scaling":1.254862,"smoothing":0,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"r=1;\\ng=1;\\nb=1;\\na=0.1;","point_eqs_eel":"\\ny=sample;\\nx=value1;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"decay=1;\\nbeatvol=1.04;","frame_eqs_eel":"zoom=1;\\ndecay=0.995;\\n\\nmaat=maat+(above(bass_att,1.5));\\nmaat=below(maat,16)*maat;\\n\\nval=if(above(maat,8),1,val);\\nval=if(above(val,0.6),val*.99,0.3);\\necho_zoom=val+0.7;\\n\\nzoom=1;\\n\\nob_size=0;\\nob_g=0;\\nob_r=0;\\nob_b=0;\\nob_a=1;\\n\\nzoomin=bass+(zoomin*10)*.001;\\nzoomi=above(zoomin,2)+zoomi*.975;\\nzval=cos(time*.3)*(above(zoomi,2));\\nzuse=(zval)*.05+1;\\nmonitor=zoomi;\\nzoom=zuse;\\n\\n//echo_orient=((maat*.5)%4)+1;\\n\\n//monitor=val;\\nr=above(bass,1.3)+r*.95;\\nt=below(r,5);\\nq1=t*val*.5;\\nmv_dx=sin(time)*.5+.5;\\nmv_dy=cos(time)*.5+.5;\\nob_r=0;\\nob_g=0;\\nob_b=0;\\nib_r=0;\\nib_g=0;\\nib_b=0;\\nib_a=0.375;\\nob_a=0.475;\\nob_size=bass*.1;\\nib_size=treb*.1;\\n\\n\\nwave_r=1;","pixel_eqs_eel":"dx=(dx-0.05*sin(x*32))*(cos(time*8)*q1);\\ndy=(dy-0.05*sin(y*18))*(sin(time*8)*q1);","warp":"","comp":""}')},6311:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":0,"gammaadj":1,"decay":0.9559,"echo_zoom":2.003071,"echo_alpha":0.5,"echo_orient":3,"wave_brighten":0,"wave_a":0.001,"wave_scale":0.535239,"wave_smoothing":0,"wave_mystery":-0.48,"modwavealphastart":1,"modwavealphaend":1.1,"warpscale":0.01,"zoomexp":1.008148,"zoom":1.0018,"warp":0.01,"sx":1.001829,"sy":1.008151,"wave_g":0.65,"wave_b":0,"ob_size":0,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":6.4,"mv_y":48,"mv_dx":0.5,"mv_dy":0.5,"mv_l":5,"mv_r":0.013716,"mv_g":0.872347,"mv_b":0.522466,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"thickoutline":1,"textured":1,"rad":0.746302,"tex_zoom":0.942039,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ang=sin(time)*.5+.5;\\nval=3;\\na2=val*.33;\\na=val*.33;\\nrad=cos(time*.3)*.4+0.65;\\nx=sin(time*.25)*.25+.5;\\ny=cos(time*.45)*.25+.5;\\n\\n\\n"},{"baseVals":{"enabled":1,"thickoutline":1,"textured":1,"rad":0.746302,"tex_zoom":0.942039,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ang=cos(time*.3)*.5+.5;\\nval=3;\\na2=val*.33;\\na=val*.33;\\nrad=sin(time*.3)*.4+0.65;\\nx=cos(time*.25)*.25+.5;\\ny=sin(time*.45)*.25+.5;\\n\\n\\n"},{"baseVals":{"enabled":1,"thickoutline":1,"rad":0.364564,"r":0,"g2":0,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"\\nh2=h2+(above(treb,1.32)*0.8)*.9;\\nvr=sin(h2*.8)*.5+.5;\\nvg=sin(h2*.5)*.5+.5;\\nvb=sin(h2*.1)*.5+.5;\\n\\ng=vg;\\nr=vr;\\nb=vb;\\ng2=g;\\nr2=r;\\nb2=b;\\ndist=(frame%100)*.01;\\nmaat=maat+(above(bass_att,1.5));\\nmaat=below(maat,16)*maat;\\nx=if(below(maat,8),if(below(maat,4),dist,1-dist),x);\\ny=if(above(maat,8),if(above(maat,4),dist,1-dist),y);"},{"baseVals":{"thickoutline":1,"textured":1,"rad":0.364564,"r":0,"g2":0,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"\\nh2=h2+(above(treb,1.32)*0.8)*.9;\\nvr=sin(h2*.8)*.5+.5;\\nvg=sin(h2*.5)*.5+.5;\\nvb=sin(h2*.1)*.5+.5;\\n\\ng=vg;\\nr=vr;\\nb=vb;\\ng2=g;\\nr2=r;\\nb2=b;\\ndist=(frame%100)*.01;\\nmaat=maat+(above(bass_att,1.5));\\nmaat=below(maat,16)*maat;\\ny=if(below(maat,8),if(below(maat,4),dist,1-dist),y);\\nx=if(above(maat,8),if(above(maat,4),dist,1-dist),x);"}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"decay=1;\\nbeatvol=1.04;","frame_eqs_eel":"zoom=1;\\ndecay=1;\\n\\nmaat=maat+(above(bass_att,1.5));\\nmaat=below(maat,16)*maat;\\n\\nval=if(above(maat,8),1,val);\\nval=if(above(val,0.6),val*.99,0.3);\\necho_zoom=val+0.7;\\n\\nzoom=1;\\n\\nob_size=0;\\nob_g=0;\\nob_r=0;\\nob_b=0;\\nob_a=1;\\n\\nzoomin=(sin(time)*.5+.5)%2;\\nzval=cos(time*.3)*zoomin;\\nzuse=(zval)*.05+1;\\nmonitor=zuse;\\nzoom=zuse;\\n\\n//echo_orient=((maat*.5)%4)+1;\\n\\n//monitor=val;\\nr=above(bass,1.3)+r*.95;\\nt=below(r,5);\\nq1=t*val*.5;","pixel_eqs_eel":"dx=(dx-0.05*sin(x*32))*(cos(time*8)*q1);\\ndy=(dy-0.05*sin(y*18))*(sin(time*8)*q1);","warp":"","comp":""}')},2393:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":0,"gammaadj":1,"decay":0.925,"echo_zoom":1.006593,"echo_orient":3,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":4.099998,"wave_scale":1.285751,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.999514,"warp":0.01,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0.005,"ob_r":0.01,"ob_a":0.5,"ib_size":0.26,"mv_a":0},"shapes":[{"baseVals":{"sides":100,"thickoutline":1,"textured":1,"rad":0.090528,"g":1,"b":1,"a":0.5,"r2":1,"b2":1,"a2":0.5,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x=q6;\\ny=q7;"},{"baseVals":{"enabled":1,"g":1,"b":1,"r2":1,"b2":1,"a2":1},"init_eqs_eel":"","frame_eqs_eel":"rad=q2*.3;\\nx=.2;\\ny=.2;"},{"baseVals":{"additive":1,"thickoutline":1,"rad":0.436055,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"rad=q5*.33;\\ny=.75;\\nx=.2;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"sep":256,"usedots":1,"thick":1,"a":0.5},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x=q6+value1*.2;\\ny=q7+value2*.2;\\n\\nr=sin(q2+sample*3.14*treb)*.4+.5;\\ng=cos(q2+sample*3.14*bass)*.3+.4;\\nb=sin(q2+sample*3.14*mid)*.3+.6;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"db=.01;\\nbeatrate=1;\\navgbeatrate=2;\\nlbbtime=time;\\navgdb=.01;\\nvol=1;\\navgvol=.2;\\nphase=0;\\nbool=0;\\nconst=.02;\\nmtime=150+bass_att*1000;\\nt3=200+treb_att*1000;\\nt4=100+mid_att*1000;","frame_eqs_eel":"db=(bass-lbass)*fps;\\nlbass=bass;\\navgdb=avgdb*.99+abs(db)*.01;\\navgvol=avgvol*.99+(bass+mid+treb)*.0033;\\n\\n//beatdection\\nrawbeatb=above(abs(db),avgdb*avgvol*4);\\nbeatb=rawbeatb*above(time-lbbtime,avgbeatrate*.5);\\nbeathard=beatb*(abs(db)-avgdb*4);\\n//beatrate calc\\nbeatrate=beatb*(time-lbbtime)+(1-beatb)*beatrate;\\navgbeatrate=beatb*(avgbeatrate*.9+beatrate*.1)+(1-beatb)*avgbeatrate;\\nlbbtime=time*beatb+(1-beatb)*lbbtime;\\n\\nph=(time-lbbtime)*(60/avgbeatrate)*const;\\nphase=max(min( ph, 1 ),0);\\n\\n//const=beatb*( bool*(const-.001)+(1-bool)*(const+.001) ) + (1-beatb)*const;\\nconst=const*(1-beatb)+beatb*( const+ (.01*bool) );\\n\\nbool=below(phase,.98)*(.99-ph)-above(phase,.98)*(ph*.5);\\nmonitor=const;\\nbc=bc+beatb;\\n\\nvol=(rawbeatb*(db-(avgdb))*.01);\\navgvol=avgvol*.999+vol*.01;\\n\\nmtime=mtime+min(avgvol*.5,.25)*(60/fps);\\n\\ndecay=.9999;\\nwarp=0;\\nwrap=1;\\n\\n\\n// This is the version you should use...\\n// ----------- start copying -----------\\nhue=(mtime*.01+phase*.5); // change this\\nh=6*(hue-int(hue));\\nsw1=below(h,1); sw2=(1-sw1)*below(h,2); sw3=(1-sw1)*(1-sw2)*below(h,3); sw4=(1-sw1)*(1-sw2)*(1-sw3)*below(h,4);\\nsw6=above(h,5); sw5=(1-sw1)*(1-sw2)*(1-sw3)*(1-sw4)*(1-sw6);\\nob_r=sw1+sw2*(2-h)+sw5*(h-4)+sw6;  // resulting Red value, assign it to q1\\nob_g=sw1*h+sw2+sw3+sw4*(4-h);      // resulting Green value, assign it to q2\\nob_b=sw3*(h-2)+sw4+sw5+sw6*(6-h);  // resulting Blue value, assign it to q3\\n// ----------- end ----------------\\nob_a=.3+phase*.6;\\n\\nq8=phase;\\nt3=t3+min(avgvol*.0005*treb*(60/avgbeatrate),.3)*(60/fps);\\nt4=t4+min(avgvol*.0005*bass*(60/avgbeatrate),.3)*(60/fps);\\nq3=t3;\\nq4=t4;\\ncx=sin((t3+t4)*.01)*.4+.5;\\ncy=sin((mtime+t3)*.01)*.4+.5;\\n\\nq6=cx;\\nq7=cy;\\n\\nq5=mtime;","pixel_eqs_eel":"pi=3.1415;\\nzmx=1+sin(q3+mtime)*.05;\\nzmy=1+sin(q4-mtime)*.05;\\n\\nsx=zmx;\\nsy=zmy;\\n\\nax=ang;\\nay=ang;\\n\\nmrot=sin(q5*.01)*.5;\\n//rot=(1-mrot);\\ndx= sin(ax)*mrot*zmx*.1;\\ndy= (cos(ay)*mrot)*zmy*.1;","warp":"","comp":""}')},313:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1.998,"decay":0.993,"wave_mode":1,"additivewave":1,"darken":1,"wave_a":5.9,"wave_scale":0.75,"wave_smoothing":0.9,"warpanimspeed":5.003,"warpscale":0.01,"zoom":0.96194,"rot":-0.01,"warp":0.39986,"wave_r":0.9,"wave_g":0.45,"wave_b":0,"ob_a":1,"ib_r":1,"ib_g":1,"mv_x":63.936,"mv_y":19.2,"mv_l":5,"mv_r":0.5,"mv_g":0,"mv_a":0.1},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.1*(0.6*sin(0.933*time) + 0.4*sin(1.072*time));\\nwave_g = wave_g + 0.05*(0.6*sin(0.888*time) + 0.4*sin(0.918*time));\\nwave_b = wave_b + 0.2*(0.6*sin(0.335*time) + 0.4*sin(0.4*time));\\nwave_mystery = 0.5*sin(0.35*bass);\\ndecay = decay - 0.01*equal(frame%50,0);","pixel_eqs_eel":"obj = 0.05 + 0.05*sin(0.2*time);\\nzoom = zoom + (obj*rad);\\nrot = rot - 0.15*sin(ang);","warp":" shader_body { \\n  vec2 my_uv_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (vec2(1280.0, 1024.0) * texsize.zw);\\n  float tmpvar_4;\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (uv + vec2(0.005, 0.0));\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv - vec2(0.005, 0.0));\\n  tmpvar_4 = (((\\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_6).xyz * scale2)\\n   + bias2)).x * tmpvar_3.x);\\n  float tmpvar_7;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (uv + vec2(0.0, 0.005));\\n  vec2 tmpvar_9;\\n  tmpvar_9 = (uv - vec2(0.0, 0.005));\\n  tmpvar_7 = (((\\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_9).xyz * scale2)\\n   + bias2)).x * tmpvar_3.y);\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = tmpvar_4;\\n  tmpvar_10.y = tmpvar_7;\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = (((\\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_6).xyz * scale2)\\n   + bias2)).x * tmpvar_3.x);\\n  tmpvar_11.y = (((\\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_9).xyz * scale2)\\n   + bias2)).x * tmpvar_3.y);\\n  ret_2.x = texture (sampler_fw_main, ((uv - (tmpvar_10 * 0.01)) + (tmpvar_11 * 0.003))).x;\\n  vec4 tmpvar_12;\\n  tmpvar_12 = texture (sampler_blur3, uv);\\n  ret_2.x = (ret_2.x + ((ret_2.x - \\n    ((tmpvar_12.xyz * scale3) + bias3)\\n  .x) * 0.1));\\n  ret_2.x = (ret_2.x + 0.004);\\n  vec2 tmpvar_13;\\n  tmpvar_13.x = tmpvar_7;\\n  tmpvar_13.y = -(tmpvar_4);\\n  my_uv_1 = (uv + ((tmpvar_13 * 0.05) * (1.2 - \\n    ((tmpvar_12.xyz * scale3) + bias3)\\n  .y)));\\n  ret_2.z = texture (sampler_fw_main, my_uv_1).z;\\n  vec2 x_14;\\n  x_14 = (my_uv_1 - uv);\\n  ret_2.z = (ret_2.z + ((\\n    ((ret_2.z - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).z) * sqrt(dot (x_14, x_14)))\\n   * 180.0) / sqrt(\\n    dot (tmpvar_3, tmpvar_3)\\n  )));\\n  ret_2.z = (ret_2.z * 0.8);\\n  ret_2.z = (ret_2.z + 0.004);\\n  vec2 tmpvar_15;\\n  tmpvar_15.x = -(tmpvar_7);\\n  tmpvar_15.y = tmpvar_4;\\n  my_uv_1 = (tmpvar_15 * 0.045);\\n  vec2 tmpvar_16;\\n  tmpvar_16.x = (((\\n    (texture (sampler_blur2, (uv + vec2(0.01, 0.0))).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, (uv - vec2(0.01, 0.0))).xyz * scale2)\\n   + bias2)).y * tmpvar_3.x);\\n  tmpvar_16.y = (((\\n    (texture (sampler_blur2, (uv + vec2(0.0, 0.01))).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, (uv - vec2(0.0, 0.01))).xyz * scale2)\\n   + bias2)).y * tmpvar_3.y);\\n  my_uv_1 = (my_uv_1 + (uv - (tmpvar_16 * 0.03)));\\n  ret_2.y = texture (sampler_fw_main, my_uv_1).y;\\n  ret_2.y = (ret_2.y + ((\\n    (ret_2.y - ((texture (sampler_blur3, my_uv_1).xyz * scale3) + bias3).y)\\n   * 0.1) + 0.01));\\n  vec4 tmpvar_17;\\n  tmpvar_17.w = 1.0;\\n  tmpvar_17.xyz = ret_2;\\n  ret = tmpvar_17.xyz;\\n }","comp":""}')},3259:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":0,"gammaadj":1,"decay":1,"echo_zoom":0.999514,"echo_alpha":0.5,"echo_orient":1,"wave_mode":7,"additivewave":1,"wave_brighten":0,"wrap":0,"wave_a":1,"wave_scale":0.591236,"wave_smoothing":0,"wave_mystery":1,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoomexp":0.01,"zoom":1.0003,"warp":0.01,"wave_r":0.4,"wave_b":0.6,"wave_y":1,"ob_size":0.005,"ob_r":1,"ob_g":1,"ob_b":0.41,"ob_a":1,"ib_size":0.005,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":12.799995,"mv_y":2.8799,"mv_l":3,"mv_r":0,"mv_g":0.7,"mv_a":0.4},"shapes":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"zoom=zoom+0.028*(bass+bass_att) -0.05;\\nrot=rot+0.10*sin(time);\\nmv_r=0.5 +0.5*sin(time*1.23);\\nmv_b=0.5 + 0.5*sin(time*1.26);\\nmv_g=0.5+ 0.5*sin(time*1.19);\\nwave_g=wave_g+.20*sin(time*.13);\\nwave_r=wave_r+.13*sin(time);\\nwave_b=wave_b*sin(time);\\nwave_x=wave_x-.5*sin(time*.13);\\nob_a = if(above(mid+treb,2.6),1,0);\\nob_r = 0.5 + 0.4*sin(time*2.87);\\nob_b = 0.5 + 0.4*sin(time*2.914);\\nob_g = 0.5 + 0.4*sin(time*2.768);\\nmv_y = 3.25;","pixel_eqs_eel":"","warp":"","comp":""}')},284:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":0,"gammaadj":1,"decay":1,"echo_zoom":1.006752,"echo_alpha":0.5,"echo_orient":1,"additivewave":1,"modwavealphabyvolume":1,"wave_a":0.080487,"wave_scale":100,"wave_smoothing":0.9,"modwavealphastart":0,"modwavealphaend":1.1,"zoom":0.999902,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"ob_size":0.0065,"ib_size":0.26,"mv_x":57.599998,"mv_y":44.16,"mv_dx":0.002,"mv_dy":0.002,"mv_l":5,"mv_r":0.7,"mv_g":0.4,"mv_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":3,"x":0.37,"rad":6.811289,"ang":3.644249,"r":0,"a":0.5,"g2":0,"a2":0.5,"border_a":1},"init_eqs_eel":"t1 = rand(100)*0.01;\\nt2 = rand(100)*0.01;","frame_eqs_eel":"ang = q1*(0.03 + 0.01*t1);\\nr = min(1,max(0,0+ 0.1*sin(time*0.417 + 1)));\\ng = min(1,max(0,0 + 0.1*sin(time*0.391 + 2)));\\nb = min(1,max(0,0 + 0.1*sin(time*0.432 + 4)));\\nr2 = min(1,max(0,r2 + 0.02*sin(time*0.657 + 3)));\\ng2 = min(1,max(0,g2 + 0.02*sin(time*0.737 + 5)));\\nb2 = min(1,max(0,b2 + 0.02*sin(time*0.884 + 6)));\\nadditive =.65+0.15*(bass+bass_att);"},{"baseVals":{"enabled":1,"sides":100,"additive":1,"textured":1,"x":0.37,"rad":0.897961,"ang":3.644249,"g":1,"b":1,"a":0.5,"g2":0,"a2":1,"border_a":0},"init_eqs_eel":"t1 = rand(100)*0.01;\\nt2 = rand(100)*0.01;","frame_eqs_eel":"x = x + 0.05*sin(q1*0.15+3);\\ny = y + 0.03*sin(q1*0.19+1);\\ntex_ang = q1*(0.01 + 0.0001*t1);\\nr = min(1,max(0,r + 0.01*sin(time*0.0417 + 1)));\\ng = min(1,max(0,g + 0.01*sin(time*0.391 + 2)));\\nb = min(1,max(0,b + 0.01*sin(time*0.432 + 4)));\\nr2 = min(1,max(0,r2 + 0.01*sin(time*0.457 + 3)));\\ng2 = min(1,max(0,g2 + 0.01*sin(time*0.0437 + 5)));\\nb2 = min(1,max(0,b2 + 0.01*sin(time*0.484 + 6)));"},{"baseVals":{"enabled":1,"sides":100,"additive":1,"textured":1,"x":0.67,"y":0.43,"rad":0.513861,"ang":4.209736,"g":1,"b":1,"g2":0,"a2":1,"border_a":0},"init_eqs_eel":"t1 = rand(100)*0.01;\\nt2 = rand(100)*0.01;","frame_eqs_eel":"x = x + 0.05*sin(q1*0.017);\\ny = y + 0.03*sin(q1*0.013);\\ntex_ang = q1*(0.02 + 0.0001*t1);\\nrad = rad * (0.9 + 0.2*t2);\\nr = min(1,max(0,r + 0.01*sin(time*0.417 + 1)));\\ng = min(1,max(0,g + 0.01*sin(time*0.391 + 2)));\\nb = min(1,max(0,b + 0.01*sin(time*0.432 + 4)));\\nr2 = min(1,max(0,r2 + 0.01*sin(time*0.457 + 3)));\\ng2 = min(1,max(0,g2 + 0.01*sin(time*0.437 + 5)));\\nb2 = min(1,max(0,b2 + 0.01*sin(time*0.484 + 6)));"},{"baseVals":{"enabled":1,"sides":100,"additive":1,"textured":1,"rad":0.222979,"r":0.6,"g":0.8,"b":1,"g2":0,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = x + 0.2*sin(q1*0.25);\\ny = y + 0.1*sin(q1*0.5+2);"}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"movement = movement + 0.01*(bass+bass_att) + 0.001*pow(bass+1,3);\\nq1 = movement;\\nmonitor =q1;","pixel_eqs_eel":"zoom = 1;\\nzoom = zoom + 0&pow(rad*6+(bass)*sin(ang*4+time*10),x*y);","warp":"","comp":""}')},209:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_orient":1,"wave_mode":2,"wave_thick":1,"modwavealphabyvolume":1,"darken_center":1,"wave_a":1,"wave_scale":0.5,"wave_smoothing":0,"modwavealphastart":1.5,"modwavealphaend":1,"warp":0,"wave_r":0.23,"wave_g":0.2,"wave_b":0.2,"ob_size":0.005,"ob_a":0.4,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0.3,"mv_x":0,"mv_y":0,"mv_dy":0.33,"mv_l":5,"mv_g":0.3,"mv_b":0.1},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.350*( 0.60*sin(0.825*time) + 0.40*sin(0.915*time) );\\nwave_g = wave_g + 0.350*( 0.60*sin(0.900*time) + 0.40*sin(1.025*time) );\\nwave_b = wave_b + 0.350*( 0.60*sin(0.810*time) + 0.40*sin(0.950*time) );\\nwave_x = 0.5-cos(time+dx_residual)/3.5;\\nwave_y = 0.5-cos(time+dy_residual)/2.5;\\ncx = cx + 0.225*( 0.60*sin(0.350*time) + 0.40*sin(0.350*time) );\\ncy = cy + 0.225*( 0.60*sin(0.350*time) + 0.40*sin(0.350*time) );\\ndx = 0.005 + 0.002*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );\\ndy = 0.005 + 0.002*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );\\ndx_residual=max(bass, bass_att)-1;\\ndy_residual=min(bass, bass_att)-1;\\ndx = if(above(bass_att+bass,2.8),6*dx,dx);\\n// timed sidon sensor\\n// le = signal level; desired average value = 2\\nle=1.4*bass_att+.1*bass+.5*treb;\\npulse=above(le,th);\\n// pulsefreq = running average of interval between last 5 pulses\\npulsefreq=if(equal(pulsefreq,0),2,\\nif(pulse,.8*pulsefreq+.2*(time-lastpulse),pulsefreq));\\nlastpulse=if(pulse,time,lastpulse);\\n// bt = relative time; 0 = prev beat; 1 = expected beat\\nbt=(time-lastbeat)/(.5*beatfreq+.5*pulsefreq);\\n// hccp = handcicap for th driven by bt\\nhccp=(.03/(bt+.2))+.5*if(band(above(bt,.8),below(bt,1.2)),\\n(pow(sin((bt-1)*7.854),4)-1),0);\\nbeat=band(above(le,th+hccp),btblock);\\nbtblock=1-above(le,th+hccp);\\nlastbeat=if(beat,time,lastbeat);\\nbeatfreq=if(equal(beatfreq,0),2,\\nif(beat,.8*beatfreq+.2*(time-lastbeat),beatfreq));\\n// th = threshold\\nth=if(above(le,th),le+114/(le+10)-7.407,\\nth+th*.07/(th-12)+below(th,2.7)*.1*(2.7-th));\\nth=if(above(th,6),6,th);\\nq3=30/fps;\\nccl=ccl+beat;\\nminorccl=minorccl+.01*le;\\nq4=beat;\\nwave_r=.5+.15*sin(12*ccl)+.35*sin(3.62*minorccl);\\nwave_g=.5+.15*sin(14*ccl)+.35*sin(7.38*minorccl);\\nwave_b=.5+.15*sin(16*ccl)+.35*sin(5.21*minorccl);\\nq1=.5+.25*sin(17*ccl+minorccl);\\ncx=if(beat,.5+.5*sin(38*ccl),q1);\\nq2=.5+.25*sin(17*ccl+minorccl);\\ncy=if(beat,.5+.5*sin(46*ccl),q2);\\nmv_x = 1.25;\\nmv_y = 1.25;\\nmv_dx =q1-0.5;\\nmv_dy = -1*(q2-0.5);","pixel_eqs_eel":"myrot = 0.03*sin(0.84*time)-0.013*cos(0.784*time)+0.02*sin(1-rad);\\nrot = myrot;\\n// coordinates transfomation\\n// q1,q2 = position; q3 = 1/zoom; q4 = rotation\\naang=atan2(y-q2,x-q1)-1.57;\\narad=sqrt(sqr(y-q2)+sqr(x-q1));\\natx=cos(aang)*arad;\\naty=sin(aang)*arad;\\n\\nsound=if(below(x,.5),2*x*mid+(1-(2*x))*bass,\\n(x-.5)*2*treb+(1-(x-.5)*2)*mid);\\nsound=sound*q3;\\nzone=below(abs(x-q1),.15)*below(abs(y-q2),.15);\\nrot=if(zone,bass*bass_att*0.2*pow(arad,arad),myrot);\\ndx = if(zone,0,dx+0.01*rad*sound);","warp":"","comp":""}')},6647:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_orient":3,"wave_mode":1,"wave_thick":1,"wrap":0,"darken_center":1,"wave_a":0.3,"wave_scale":0.881,"wave_smoothing":0.5,"wave_mystery":-1,"warpscale":2.853,"zoomexp":3.6,"zoom":1.02109,"rot":-0.16,"warp":0.309,"wave_r":0.6,"wave_g":0.6,"wave_b":0.6,"wave_y":0.47,"mv_l":1.75},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.400*( 0.60*sin(0.933*time) + 0.40*sin(1.045*time) );\\nwave_g = wave_g + 0.400*( 0.60*sin(0.900*time) + 0.40*sin(0.956*time) );\\nwave_b = wave_b + 0.400*( 0.60*sin(0.910*time) + 0.40*sin(0.920*time) );\\nq8 = oldq8+if(above(bass+bass_att,1.8),q8+0.0005*pow((bass+bass_att-1),9),0);\\noldq8 = q8;\\nmonitor = q8;\\nzoom = zoom + 0.023*( 0.60*sin(0.339*q8) + 0.40*sin(0.276*q8) );\\nrot = rot + 0.030*( 0.60*sin(0.381*q8) + 0.40*sin(0.579*q8) );\\n//decay = decay - 0.02*equal(frame%40,0);\\nmv_r = wave_r;\\nmv_b = wave_b;\\nmv_g = wave_g;\\nmv_x = 1.25;\\nmv_y = 1.25;\\nmv_dx = 0.1*sin(1.1*time);\\nmv_dy = 0.1*cos(1.112*time);\\n\\n// the m�bius transformation\\n// z -> (az+b)/(cz-d); where a,b,c,d are complex numbers and z will be the uv-vector\\n// (az+b)/(cz-d) = a/c + mu/(cz+d), with mu = (bc-ad)/c\\n// so a/c and mu can be calculated outside of the shader\\n\\n//before inversion\\n\\nscale = 1;\\nangle = time*.2;\\ntranslation_x = 0;\\ntranslation_y = 0.12;\\n\\na_r = cos(angle)*scale;\\na_i = sin(angle)*scale;\\nb_r = translation_x;\\nb_i = translation_y;\\n\\n//complex inverted\\nscale = 1;\\nangle = sin(time*0.1337)*0.3;\\ntranslation_u = 0;\\ntranslation_v = -0.2;\\n\\n// c\\nq15 = cos(angle)*scale;\\nq16 = sin(angle)*scale;\\n\\n// d\\nq17 = translation_u;\\nq18 = translation_v;\\n\\n// c^(-1)\\nc_inv_r = q15/(q15*q15+q16*q16);\\nc_inv_i = q16/(q15*q15+q16*q16);\\n\\n// a*c^(-1)\\nq11 = (a_r*c_inv_r - a_i*c_inv_i);\\nq12 = (a_r*c_inv_i - a_i*c_inv_r);\\n\\n// (bc-ad)\\nbcad_r = (b_r*q15 - b_i*q16)-(a_r*q17-a_i*q18);\\nbcad_i = (b_r*q16 - b_i*q15)-(a_r*q18-a_i*q17);\\n\\n// mu*c^(-1)\\nq13 = bcad_r*c_inv_r - bcad_i*c_inv_i;\\nq14 = bcad_r*c_inv_i - bcad_i*c_inv_r;","pixel_eqs_eel":"rot=rot+1/(10*(rad+0.2+0.1*sin(q8)));","warp":"","comp":" shader_body { \\n  vec2 uv_1;\\n  vec2 moebius_2;\\n  vec2 d_3;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = q11;\\n  tmpvar_4.y = q12;\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = q17;\\n  tmpvar_5.y = q18;\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv - 0.5);\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = ((tmpvar_6.x * q15) - (tmpvar_6.y * q16));\\n  tmpvar_7.y = ((tmpvar_6.x * q16) - (tmpvar_6.y * q15));\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (tmpvar_7 + tmpvar_5);\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = ((q13 * tmpvar_8.x) + (q14 * tmpvar_8.y));\\n  tmpvar_9.y = ((q14 * tmpvar_8.x) - (q13 * tmpvar_8.y));\\n  moebius_2 = (0.5 + ((\\n    (1.0 - abs(((\\n      fract((((tmpvar_9 / \\n        ((tmpvar_8.x * tmpvar_8.x) + (tmpvar_8.y * tmpvar_8.y))\\n      ) + tmpvar_4) * 0.5))\\n     * 2.0) - 1.0)))\\n   - 0.5) * 0.99));\\n  d_3 = (texsize.zw * 8.0);\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = dot (((\\n    (texture (sampler_blur1, (moebius_2 + (vec2(1.0, 0.0) * d_3))).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (moebius_2 - (vec2(1.0, 0.0) * d_3))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  tmpvar_10.y = dot (((\\n    (texture (sampler_blur1, (moebius_2 + (vec2(0.0, 1.0) * d_3))).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (moebius_2 - (vec2(0.0, 1.0) * d_3))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  uv_1 = (moebius_2 - ((tmpvar_10 * texsize.zw) * 32.0));\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 1.0;\\n  tmpvar_11.xyz = abs(((\\n    ((texture (sampler_blur3, (uv_1 + (\\n      (((texture (sampler_noise_lq, (rand_frame.xy + \\n        ((moebius_2 * texsize.xy) * texsize_noise_lq.zw)\\n      )) * 2.0) - 1.0).xy * texsize.zw)\\n     * 5.0))).xyz * scale3) + bias3)\\n   * 2.0) - texture (sampler_main, uv_1).xyz));\\n  ret = tmpvar_11.xyz;\\n }"}')},2458:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":0,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_orient":1,"wave_mode":2,"wave_thick":1,"modwavealphabyvolume":1,"darken_center":1,"wave_a":1,"wave_scale":0.5,"wave_smoothing":0,"modwavealphastart":1.5,"modwavealphaend":1,"warp":0,"wave_r":0.23,"wave_g":0.2,"wave_b":0.2,"ob_size":0.005,"ob_a":0.2,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0.3,"mv_l":5,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.350*( 0.60*sin(0.825*time) + 0.40*sin(0.915*time) );\\nwave_g = wave_g + 0.350*( 0.60*sin(0.900*time) + 0.40*sin(1.025*time) );\\nwave_b = wave_b + 0.350*( 0.60*sin(0.810*time) + 0.40*sin(0.950*time) );\\nwave_x = 0.5-cos(time+dx_residual)/3.5;\\nwave_y = 0.5-cos(time+dy_residual)/2.5;\\ncx = cx + 0.225*( 0.60*sin(0.350*time) + 0.40*sin(0.350*time) );\\ncy = cy + 0.225*( 0.60*sin(0.350*time) + 0.40*sin(0.350*time) );\\ndx = 0.005 + 0.002*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );\\ndy = 0.005 + 0.002*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );\\ndx_residual=max(bass, bass_att)-1;\\ndy_residual=min(bass, bass_att)-1;\\ndx = if(above(bass_att+bass,2.8),5*dx,dx);","pixel_eqs_eel":"rot = 0.03*sin(0.84*time)-0.013*cos(0.784*time)+0.02*sin(1-rad);","warp":"","comp":""}')},2119:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_orient":3,"wave_mode":1,"wave_thick":1,"wrap":0,"darken_center":1,"wave_a":0.3,"wave_scale":0.881,"wave_smoothing":0.5,"wave_mystery":-1,"warpscale":2.853,"zoomexp":3.6,"zoom":1.02109,"rot":-0.16,"warp":0.309,"wave_r":0.6,"wave_g":0.6,"wave_b":0.6,"wave_y":0.47,"mv_l":1.75},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.400*( 0.60*sin(0.933*time) + 0.40*sin(1.045*time) );\\nwave_g = wave_g + 0.400*( 0.60*sin(0.900*time) + 0.40*sin(0.956*time) );\\nwave_b = wave_b + 0.400*( 0.60*sin(0.910*time) + 0.40*sin(0.920*time) );\\nq8 = oldq8+if(above(bass+bass_att,1.8),q8+0.0005*pow((bass+bass_att-1),9),0);\\noldq8 = q8;\\nmonitor = q8;\\nzoom = zoom + 0.023*( 0.60*sin(0.339*q8) + 0.40*sin(0.276*q8) );\\nrot = rot + 0.030*( 0.60*sin(0.381*q8) + 0.40*sin(0.579*q8) );\\n//decay = decay - 0.02*equal(frame%40,0);\\nmv_r = wave_r;\\nmv_b = wave_b;\\nmv_g = wave_g;\\nmv_x = 1.25;\\nmv_y = 1.25;\\nmv_dx = 0.1*sin(1.1*time);\\nmv_dy = 0.1*cos(1.112*time);","pixel_eqs_eel":"rot=rot+1/(10*(rad+0.2+0.1*sin(q8)));","warp":"","comp":" shader_body { \\n  vec3 ret_1;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv);\\n  ret_1 = (((vec3(1.1, 0.8, 0.7) * tmpvar_2.x) + (vec3(0.4, 0.6, 0.55) * tmpvar_2.y)) + (vec3(0.7, 0.6, 0.3) * tmpvar_2.z));\\n  ret_1 = (ret_1 * 0.4);\\n  ret_1 = ((ret_1 * ret_1) * (1.0 + (\\n    clamp (((cos(\\n      (((dot (tmpvar_2.xyz, vec3(0.32, 0.49, 0.29)) * 17.0) + 3.0) + (uv.x * 30.0))\\n    ) * 3.0) - 2.7), 0.0, 1.0)\\n   * 4.0)));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_1;\\n  ret = tmpvar_3.xyz;\\n }"}')},6982:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_orient":3,"wave_mode":1,"wave_thick":1,"wrap":0,"darken_center":1,"wave_a":0.3,"wave_scale":0.881,"wave_smoothing":0.5,"wave_mystery":-1,"warpscale":2.853,"zoomexp":3.6,"zoom":1.02109,"rot":-0.16,"warp":0.309,"wave_r":0.6,"wave_g":0.6,"wave_b":0.6,"wave_y":0.47,"mv_l":1.75},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.400*( 0.60*sin(0.933*time) + 0.40*sin(1.045*time) );\\nwave_g = wave_g + 0.400*( 0.60*sin(0.900*time) + 0.40*sin(0.956*time) );\\nwave_b = wave_b + 0.400*( 0.60*sin(0.910*time) + 0.40*sin(0.920*time) );\\nq8 = oldq8+if(above(bass+bass_att,1.8),q8+0.0005*pow((bass+bass_att-1),9),0);\\noldq8 = q8;\\nmonitor = q8;\\nzoom = zoom + 0.023*( 0.60*sin(0.339*q8) + 0.40*sin(0.276*q8) );\\nrot = rot + 0.030*( 0.60*sin(0.381*q8) + 0.40*sin(0.579*q8) );\\n//decay = decay - 0.02*equal(frame%40,0);\\nmv_r = wave_r;\\nmv_b = wave_b;\\nmv_g = wave_g;\\nmv_x = 1.25;\\nmv_y = 1.25;\\nmv_dx = 0.1*sin(1.1*time);\\nmv_dy = 0.1*cos(1.112*time);","pixel_eqs_eel":"rot=rot+1/(10*(rad+0.2+0.1*sin(q8)));","warp":"","comp":" shader_body { \\n  vec2 uv2_1;\\n  uv2_1 = (uv + (vec2(1.0, 0.0) * texsize.zw));\\n  float tmpvar_2;\\n  tmpvar_2 = ((texture (sampler_main, uv2_1).x + (\\n    ((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1)\\n  .x * 0.3)) + ((\\n    (texture (sampler_blur2, uv2_1).xyz * scale2)\\n   + bias2).x * 0.1));\\n  uv2_1 = (uv + (vec2(-1.0, 0.0) * texsize.zw));\\n  float tmpvar_3;\\n  tmpvar_3 = ((texture (sampler_main, uv2_1).x + (\\n    ((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1)\\n  .x * 0.3)) + ((\\n    (texture (sampler_blur2, uv2_1).xyz * scale2)\\n   + bias2).x * 0.1));\\n  uv2_1 = (uv + (vec2(0.0, 1.0) * texsize.zw));\\n  float tmpvar_4;\\n  tmpvar_4 = ((texture (sampler_main, uv2_1).x + (\\n    ((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1)\\n  .x * 0.3)) + ((\\n    (texture (sampler_blur2, uv2_1).xyz * scale2)\\n   + bias2).x * 0.1));\\n  uv2_1 = (uv + (vec2(0.0, -1.0) * texsize.zw));\\n  vec3 tmpvar_5;\\n  tmpvar_5.z = 0.06;\\n  tmpvar_5.x = (tmpvar_2 - tmpvar_3);\\n  tmpvar_5.y = (tmpvar_4 - ((texture (sampler_main, uv2_1).x + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1).x * 0.3)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n  .x * 0.1)));\\n  vec3 tmpvar_6;\\n  tmpvar_6 = normalize(tmpvar_5);\\n  vec4 tmpvar_7;\\n  tmpvar_7.w = 1.0;\\n  tmpvar_7.xyz = ((vec3(0.9, 1.17, 0.8099999) * clamp (\\n    dot (tmpvar_6, vec3(0.804518, 0.5229367, 0.2815813))\\n  , 0.0, 1.0)) + (vec3(0.54, 0.63, 0.8099999) * clamp (\\n    dot (tmpvar_6, vec3(0.3137279, -0.9411837, 0.1254912))\\n  , 0.0, 1.0)));\\n  ret = tmpvar_7.xyz;\\n }"}')},3353:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":0,"gammaadj":1,"decay":1,"echo_zoom":0.999609,"echo_orient":3,"wave_mode":1,"wave_thick":1,"wrap":0,"darken_center":1,"wave_a":0.3,"wave_scale":0.881381,"wave_smoothing":0.5,"wave_mystery":-1,"warpscale":2.853,"zoomexp":3.6,"zoom":1.021087,"rot":-0.16,"warp":0.309,"wave_r":0.6,"wave_g":0.6,"wave_b":0.6,"wave_y":0.47,"mv_l":1.75},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.400*( 0.60*sin(0.933*time) + 0.40*sin(1.045*time) );\\nwave_g = wave_g + 0.400*( 0.60*sin(0.900*time) + 0.40*sin(0.956*time) );\\nwave_b = wave_b + 0.400*( 0.60*sin(0.910*time) + 0.40*sin(0.920*time) );\\nq8 = oldq8+if(above(bass+bass_att,1.8),q8+0.0005*pow((bass+bass_att-1),9),0);\\noldq8 = q8;\\nmonitor = q8;\\nzoom = zoom + 0.023*( 0.60*sin(0.339*q8) + 0.40*sin(0.276*q8) );\\nrot = rot + 0.030*( 0.60*sin(0.381*q8) + 0.40*sin(0.579*q8) );\\n//decay = decay - 0.02*equal(frame%40,0);\\nmv_r = wave_r;\\nmv_b = wave_b;\\nmv_g = wave_g;\\nmv_x = 1.25;\\nmv_y = 1.25;\\nmv_dx = 0.1*sin(1.1*time);\\nmv_dy = 0.1*cos(1.112*time);","pixel_eqs_eel":"rot=rot+1/(10*(rad+0.2+0.1*sin(q8)));","warp":"","comp":""}')},2220:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"decay":0.973,"echo_zoom":1.047,"wave_mode":3,"wave_dots":1,"wrap":0,"darken_center":1,"darken":1,"wave_a":0.9,"wave_scale":2.905,"wave_smoothing":0.627,"wave_mystery":-0.3,"warpscale":2.853,"zoomexp":1.23219,"zoom":1.08017,"warp":0.01678,"wave_r":0.6,"wave_g":0.6,"wave_b":0.6,"ob_size":0,"mv_x":64,"mv_y":48,"mv_l":0,"mv_r":0.35,"mv_g":0.35,"mv_b":0.35,"b1n":0.67},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.400*( 0.60*sin(0.933*time) + 0.40*sin(1.045*time) );\\nwave_g = wave_g + 0.100*( 0.60*sin(0.900*time) + 0.40*sin(0.956*time) );\\nwave_b = wave_b + 0.100*( 0.60*sin(0.910*time) + 0.40*sin(0.920*time) );\\nmv_r = wave_r;\\nmv_b = wave_b;\\nmv_g = wave_g;\\nq1 = 0.05*(pow(1+1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6)/fps);\\n//q1 = 0.6*(bass+bass_att);\\nmv_a = if(above(bass-1.2,1),1,bass-1.2);\\nq2 = oldq2 + 0.05*(pow(1+1.2*treb+0.4*treb_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6)/fps);\\n\\n//q2 = oldq2 +q1;\\noldq2 = q2 ;\\nmonitor = q2;","pixel_eqs_eel":"zoom = zoom + rad*0.1*q1;","warp":" shader_body { \\n  vec3 ret_1;\\n  ret_1 = texture (sampler_main, uv).xyz;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (normalize((uv - uv_orig)) * texsize.zw);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 0.0;\\n  tmpvar_3.xyz = ret_1;\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 0.0;\\n  tmpvar_4.xyz = max (tmpvar_3, (texture (sampler_main, (uv + tmpvar_2)) * 0.97)).xyz;\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 0.0;\\n  tmpvar_5.xyz = max (tmpvar_4, (texture (sampler_main, (uv - tmpvar_2)) * 0.97)).xyz;\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 0.0;\\n  tmpvar_6.xyz = max (tmpvar_5, (texture (sampler_main, (uv + \\n    (tmpvar_2 * 2.0)\\n  )) * 0.9)).xyz;\\n  ret_1 = (max (tmpvar_6, (texture (sampler_main, \\n    (uv - (tmpvar_2 * 2.0))\\n  ) * 0.9)).xyz * 0.95);\\n  vec4 tmpvar_7;\\n  tmpvar_7.w = 1.0;\\n  tmpvar_7.xyz = ret_1;\\n  ret = tmpvar_7.xyz;\\n }","comp":" shader_body { \\n  vec2 uv2_1;\\n  vec3 ret_2;\\n  uv2_1 = (uv + (vec2(1.0, 0.0) * texsize.zw));\\n  float tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(-1.0, 0.0) * texsize.zw));\\n  float tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(0.0, 1.0) * texsize.zw));\\n  float tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(0.0, -1.0) * texsize.zw));\\n  vec3 tmpvar_6;\\n  tmpvar_6.z = 0.14;\\n  tmpvar_6.x = (tmpvar_3 - tmpvar_4);\\n  tmpvar_6.y = (tmpvar_5 - ((\\n    (texture (sampler_main, uv2_1).xyz + (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4))\\n   + \\n    (((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2) * 0.15)\\n  ) + (\\n    ((texture (sampler_blur3, uv2_1).xyz * scale3) + bias3)\\n   * 0.1)).x);\\n  ret_2 = (0.5 + (0.5 * normalize(tmpvar_6)));\\n  vec2 x_7;\\n  x_7 = (ret_2.xy - 0.5);\\n  ret_2 = (ret_2 * clamp ((\\n    sqrt(dot (x_7, x_7))\\n   * 5.0), 0.0, 1.0));\\n  ret_2 = ret_2.xxy;\\n  ret_2 = (ret_2 + 1.15);\\n  ret_2 = (ret_2 * mix (ret_2, (ret_2 * \\n    (((texture (sampler_blur3, uv).xyz * scale3) + bias3) - ((texture (sampler_blur1, uv).xyz * scale1) + bias1))\\n  ), pow (hue_shader.zyx, ret_2)));\\n  ret_2 = (ret_2 * ret_2);\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = ret_2;\\n  ret = tmpvar_8.xyz;\\n }"}')},554:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"decay":0.973,"echo_zoom":1.047463,"wave_mode":4,"wave_dots":1,"wrap":0,"darken_center":1,"darken":1,"wave_a":0.9,"wave_scale":2.905229,"wave_smoothing":0.6,"wave_mystery":-0.3,"warpscale":2.853,"zoomexp":0.999835,"zoom":0.799682,"warp":0.016779,"wave_r":0.6,"wave_g":0.6,"wave_b":0.6,"ob_size":0,"mv_x":64,"mv_y":48,"mv_l":0,"mv_r":0.35,"mv_g":0.35,"mv_b":0.35},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.400*( 0.60*sin(0.933*time) + 0.40*sin(1.045*time) );\\nwave_g = wave_g + 0.100*( 0.60*sin(0.900*time) + 0.40*sin(0.956*time) );\\nwave_b = wave_b + 0.100*( 0.60*sin(0.910*time) + 0.40*sin(0.920*time) );\\nmv_r = wave_r;\\nmv_b = wave_b;\\nmv_g = wave_g;\\nq1 = 0.05*(pow(1+1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6)/fps);\\n//q1 = 0.6*(bass+bass_att);\\nmv_a = if(above(bass-1.2,1),1,bass-1.2);","pixel_eqs_eel":"zoom = 1.01 + rad*0.15*q1;","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (texture (sampler_main, uv).xyz - 0.008);\\n  ret = tmpvar_1.xyz;\\n }","comp":" shader_body { \\n  float ang2_1;\\n  ang2_1 = ((ang * 0.1591549) + (time * 0.025));\\n  ang2_1 = (cos((50.26548 * ang2_1)) * 0.023);\\n  ang2_1 = (ang2_1 * 6.283185);\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = cos(ang2_1);\\n  tmpvar_2.y = sin(ang2_1);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = texture (sampler_main, (0.5 + ((\\n    (0.375 * (rad * sqrt(dot (texsize.xy, texsize.xy))))\\n   * tmpvar_2) * texsize.zw))).xyz;\\n  ret = tmpvar_3.xyz;\\n }"}')},3444:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"decay":0.981,"echo_zoom":1.047,"wave_mode":3,"wave_dots":1,"wave_thick":1,"wrap":0,"darken":1,"wave_a":0.9,"wave_scale":2.905,"wave_smoothing":0.6,"wave_mystery":-0.3,"warpscale":2.853,"zoomexp":2.63006,"zoom":1.031,"warp":0,"wave_r":0.6,"wave_g":0.6,"wave_b":0.6,"ob_size":0,"ob_a":1,"mv_x":24.986,"mv_y":20.031,"mv_dx":0.065,"mv_dy":0.109,"mv_l":0.036,"mv_r":0.816,"mv_g":0.099,"mv_b":0.816,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.400*( 0.60*sin(0.933*time) + 0.40*sin(1.045*time) );\\nwave_g = wave_g + 0.100*( 0.60*sin(0.900*time) + 0.40*sin(0.956*time) );\\nwave_b = wave_b + 0.100*( 0.60*sin(0.910*time) + 0.40*sin(0.920*time) );\\nmv_r = wave_r;\\nmv_b = wave_b;\\nmv_g = wave_g;\\nq8 =oldq8+ 0.0003*(pow(1+1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6)/fps);\\noldq8 = q8;\\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.96+1.3);\\nq5_residual = equal(bass_thresh,2)*0.0064*sin(q8*5) + (1-equal(bass_thresh,2))*q5_residual;\\nq6_residual = equal(bass_thresh,2)*0.0048*sin(q8*6) + (1-equal(bass_thresh,2))*q6_residual;\\ndx=q5_residual ;\\ndy=q6_residual ;\\nq1 = 0.03*(pow(1+1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6)/fps);\\nmonitor = q1;\\nmv_a = bass-1.2;","pixel_eqs_eel":"zoom = 0.9 + 0.1*q1 + rad*0.1;\\nzoomexp = 2*zoom;","warp":"","comp":" shader_body { \\n  vec3 ret_1;\\n  vec3 tmpvar_2;\\n  tmpvar_2.z = 0.0;\\n  tmpvar_2.xy = texsize.zw;\\n  ret_1 = -(texture (sampler_main, uv).xyz);\\n  ret_1 = (ret_1 + (clamp (\\n    ((dot (texture (sampler_main, (uv + tmpvar_2.xz)).xyz, vec3(0.32, 0.49, 0.29)) - dot (texture (sampler_main, (uv - tmpvar_2.xz)).xyz, vec3(0.32, 0.49, 0.29))) * 64.0)\\n  , 0.0, 1.0) * vec3(1.0, 0.6, 0.1)));\\n  ret_1 = (ret_1 + (clamp (\\n    ((dot (texture (sampler_main, (uv + tmpvar_2.zy)).xyz, vec3(0.32, 0.49, 0.29)) - dot (texture (sampler_main, (uv - tmpvar_2.zy)).xyz, vec3(0.32, 0.49, 0.29))) * 64.0)\\n  , 0.0, 1.0) * vec3(0.2, 0.5, 0.7)));\\n  ret_1 = (ret_1 - clamp ((\\n    (((texture (sampler_blur1, uv).xyz * scale1) + bias1) * 4.0)\\n   - 1.0), 0.0, 1.0));\\n  ret_1 = (ret_1 * 1.5);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_1;\\n  ret = tmpvar_3.xyz;\\n }"}')},1738:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1,"decay":1,"echo_zoom":1.007,"echo_alpha":0.5,"echo_orient":1,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_a":0.1,"wave_scale":3.815,"wave_smoothing":0.9,"modwavealphastart":0,"modwavealphaend":1.1,"zoom":1.0099,"warp":0.04177,"wave_r":0.65,"wave_g":0.65,"ob_size":0.007,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":3,"x":0.37,"rad":6.81129,"ang":3.64425,"r":0,"a":0.5,"g2":0,"a2":0.5,"border_a":1},"init_eqs_eel":"t1 = rand(100)*0.01;\\nt2 = rand(100)*0.01;","frame_eqs_eel":"ang = q1*(0.303 + 0.01*t1);\\nr = min(1,max(0,0+ 0.1*sin(time*0.417 + 1)));\\ng = min(1,max(0,0 + 0.1*sin(time*0.391 + 2)));\\nb = min(1,max(0,0 + 0.1*sin(time*0.432 + 4)));\\nr2 = min(1,max(0,r2 + 0.02*sin(time*0.657 + 3)));\\ng2 = min(1,max(0,g2 + 0.02*sin(time*0.737 + 5)));\\nb2 = min(1,max(0,b2 + 0.02*sin(time*0.884 + 6)));\\nadditive =0.5+0.15*(bass+bass_att);"},{"baseVals":{"enabled":1,"sides":100,"additive":1,"textured":1,"x":0.37,"rad":0.89796,"ang":3.64425,"g":1,"b":1,"a":0.5,"g2":0,"a2":1,"border_a":0},"init_eqs_eel":"t1 = rand(100)*0.01;\\nt2 = rand(100)*0.01;","frame_eqs_eel":"x = x + 0.07*sin(q1*0.15+3);\\ny = y + 0.03*sin(q1*0.19+1);\\ntex_ang = q1*(0.01 + 0.0001*t1);\\nr = min(1,max(0,r + 0.01*sin(time*0.0417 + 1)));\\ng = min(1,max(0,g + 0.01*sin(time*0.391 + 2)));\\nb = min(1,max(0,b + 0.01*sin(time*0.432 + 4)));\\nr2 = min(1,max(0,r2 + 0.01*sin(time*0.457 + 3)));\\ng2 = min(1,max(0,g2 + 0.01*sin(time*0.0437 + 5)));\\nb2 = min(1,max(0,b2 + 0.01*sin(time*0.484 + 6)));"},{"baseVals":{"enabled":1,"sides":100,"additive":1,"textured":1,"x":0.67,"y":0.43,"rad":0.51386,"ang":4.20974,"g":1,"b":1,"g2":0,"a2":1,"border_a":0},"init_eqs_eel":"t1 = rand(100)*0.01;\\nt2 = rand(100)*0.01;","frame_eqs_eel":"x = x + 0.05*sin(q1*0.017);\\ny = y + 0.09*sin(q1*0.013);\\ntex_ang = q1*(0.02 + 0.0001*t1);\\nrad = rad * (0.9 + 0.2*t2);\\nr = min(1,max(0,r + 0.01*sin(time*0.417 + 1)));\\ng = min(1,max(0,g + 0.01*sin(time*0.391 + 2)));\\nb = min(1,max(0,b + 0.01*sin(time*0.432 + 4)));\\nr2 = min(1,max(0,r2 + 0.01*sin(time*0.457 + 3)));\\ng2 = min(1,max(0,g2 + 0.01*sin(time*0.437 + 5)));\\nb2 = min(1,max(0,b2 + 0.01*sin(time*0.484 + 6)));"},{"baseVals":{"enabled":1,"sides":100,"additive":1,"textured":1,"rad":0.22298,"r":0.6,"g":0.8,"b":1,"g2":0,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = x + 0.08*sin(q1*0.25);\\ny = y + 0.1*sin(q1*0.5+2);\\nang = time;"}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"movement = movement + 0.1*max(0,bass+bass_att-2) + 0.15*pow(bass,3) + 0.005;\\nq1 = movement;\\nmonitor =q1;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv);\\n  ret_1 = (tmpvar_2.xyz + ((tmpvar_2.xyz - \\n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\\n  ) * 0.5));\\n  ret_1 = (ret_1 * 0.9);\\n  ret_1 = (ret_1 + ((\\n    ((texture (sampler_noise_lq, ((\\n      (uv_orig * texsize.xy)\\n     * \\n      (texsize_noise_lq.zw * 0.4)\\n    ) + rand_frame.xy)).xyz - 0.5) / 256.0)\\n   * 12.0) * clamp (\\n    (treb_att - 1.0)\\n  , 0.0, 1.0)));\\n  vec3 tmpvar_3;\\n  tmpvar_3 = mix (ret_1, vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))), vec3(0.08, 0.08, 0.08));\\n  ret_1 = tmpvar_3;\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = tmpvar_3;\\n  ret = tmpvar_4.xyz;\\n }","comp":" shader_body { \\n  vec2 uv_1;\\n  vec2 uv3_2;\\n  vec2 uv2_3;\\n  uv_1 = (uv - 0.5);\\n  uv_1 = (uv_1 * aspect.xy);\\n  uv2_3.x = ((uv_1.x * -0.497265) - (uv_1.y * 0.8675987));\\n  uv2_3.y = ((uv_1.x * 0.8675987) + (uv_1.y * -0.497265));\\n  uv3_2.x = ((uv_1.x * -0.5000263) - (uv_1.y * -0.8660102));\\n  uv3_2.y = ((uv_1.x * -0.8660102) + (uv_1.y * -0.5000263));\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = max (max (texture (sampler_main, (uv_1 + 0.5)).xyz, texture (sampler_main, (uv2_3 + 0.5)).xyz), texture (sampler_main, (uv3_2 + 0.5)).xyz);\\n  ret = tmpvar_4.xyz;\\n }"}')},5744:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1,"decay":1,"echo_zoom":1.006752,"echo_alpha":0.5,"echo_orient":1,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_a":0.1,"wave_scale":3.815202,"wave_smoothing":0.9,"modwavealphastart":0,"modwavealphaend":1.1,"zoom":1.029902,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"ob_size":0.0065,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.4999,"mv_g":0.4999,"mv_b":0.4999,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":3,"x":0.37,"rad":6.811289,"ang":3.644249,"r":0,"a":0.5,"g2":0,"a2":0.5,"border_a":1},"init_eqs_eel":"t1 = rand(100)*0.01;\\nt2 = rand(100)*0.01;","frame_eqs_eel":"ang = q1*(0.303 + 0.01*t1);\\nr = min(1,max(0,0+ 0.1*sin(time*0.417 + 1)));\\ng = min(1,max(0,0 + 0.1*sin(time*0.391 + 2)));\\nb = min(1,max(0,0 + 0.1*sin(time*0.432 + 4)));\\nr2 = min(1,max(0,r2 + 0.02*sin(time*0.657 + 3)));\\ng2 = min(1,max(0,g2 + 0.02*sin(time*0.737 + 5)));\\nb2 = min(1,max(0,b2 + 0.02*sin(time*0.884 + 6)));\\nadditive =0.5+0.15*(bass+bass_att);"},{"baseVals":{"enabled":1,"sides":100,"additive":1,"textured":1,"x":0.37,"rad":0.897961,"ang":3.644249,"g":1,"b":1,"a":0.5,"g2":0,"a2":1,"border_a":0},"init_eqs_eel":"t1 = rand(100)*0.01;\\nt2 = rand(100)*0.01;","frame_eqs_eel":"x = x + 0.07*sin(q1*0.15+3);\\ny = y + 0.03*sin(q1*0.19+1);\\ntex_ang = q1*(0.01 + 0.0001*t1);\\nr = min(1,max(0,r + 0.01*sin(time*0.0417 + 1)));\\ng = min(1,max(0,g + 0.01*sin(time*0.391 + 2)));\\nb = min(1,max(0,b + 0.01*sin(time*0.432 + 4)));\\nr2 = min(1,max(0,r2 + 0.01*sin(time*0.457 + 3)));\\ng2 = min(1,max(0,g2 + 0.01*sin(time*0.0437 + 5)));\\nb2 = min(1,max(0,b2 + 0.01*sin(time*0.484 + 6)));"},{"baseVals":{"enabled":1,"sides":100,"additive":1,"textured":1,"x":0.67,"y":0.43,"rad":0.513861,"ang":4.209736,"g":1,"b":1,"g2":0,"a2":1,"border_a":0},"init_eqs_eel":"t1 = rand(100)*0.01;\\nt2 = rand(100)*0.01;","frame_eqs_eel":"x = x + 0.05*sin(q1*0.017);\\ny = y + 0.09*sin(q1*0.013);\\ntex_ang = q1*(0.02 + 0.0001*t1);\\nrad = rad * (0.9 + 0.2*t2);\\nr = min(1,max(0,r + 0.01*sin(time*0.417 + 1)));\\ng = min(1,max(0,g + 0.01*sin(time*0.391 + 2)));\\nb = min(1,max(0,b + 0.01*sin(time*0.432 + 4)));\\nr2 = min(1,max(0,r2 + 0.01*sin(time*0.457 + 3)));\\ng2 = min(1,max(0,g2 + 0.01*sin(time*0.437 + 5)));\\nb2 = min(1,max(0,b2 + 0.01*sin(time*0.484 + 6)));"},{"baseVals":{"enabled":1,"sides":100,"additive":1,"textured":1,"rad":0.222979,"r":0.6,"g":0.8,"b":1,"g2":0,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = x + 0.08*sin(q1*0.25);\\ny = y + 0.1*sin(q1*0.5+2);\\nang = time;"}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"movement = movement + 0.1*max(0,bass+bass_att-2) + 0.15*pow(bass,3) + 0.005;\\nq1 = movement;\\nmonitor =q1;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv);\\n  ret_1 = (tmpvar_2.xyz + ((tmpvar_2.xyz - \\n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\\n  ) * 0.5));\\n  ret_1 = (ret_1 * 0.9);\\n  ret_1 = (ret_1 + ((\\n    ((texture (sampler_noise_lq, ((\\n      (uv_orig * texsize.xy)\\n     * \\n      (texsize_noise_lq.zw * 0.4)\\n    ) + rand_frame.xy)).xyz - 0.5) / 256.0)\\n   * 12.0) * clamp (\\n    (treb_att - 1.0)\\n  , 0.0, 1.0)));\\n  vec3 tmpvar_3;\\n  tmpvar_3 = mix (ret_1, vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))), vec3(0.08, 0.08, 0.08));\\n  ret_1 = tmpvar_3;\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = tmpvar_3;\\n  ret = tmpvar_4.xyz;\\n }","comp":" shader_body { \\n  vec2 uv_1;\\n  vec2 uv3_2;\\n  vec2 uv2_3;\\n  uv_1 = (uv - 0.5);\\n  uv_1 = (uv_1 * aspect.xy);\\n  uv2_3.x = ((uv_1.x * -0.497265) - (uv_1.y * 0.8675987));\\n  uv2_3.y = ((uv_1.x * 0.8675987) + (uv_1.y * -0.497265));\\n  uv3_2.x = ((uv_1.x * -0.5000263) - (uv_1.y * -0.8660102));\\n  uv3_2.y = ((uv_1.x * -0.8660102) + (uv_1.y * -0.5000263));\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = max (max (texture (sampler_main, (uv_1 + 0.5)).xyz, texture (sampler_main, (uv2_3 + 0.5)).xyz), texture (sampler_main, (uv3_2 + 0.5)).xyz);\\n  ret = tmpvar_4.xyz;\\n }"}')},6577:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":5,"gammaadj":1.98,"decay":1,"echo_zoom":1.006596,"wave_mode":5,"wave_thick":1,"wave_brighten":0,"wrap":0,"wave_a":4.099998,"wave_scale":0.660126,"wave_smoothing":0,"wave_mystery":0.3,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.005,"ob_a":1,"ib_size":0.005,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0.5,"mv_r":0.15,"mv_g":0.45,"mv_b":0.65,"mv_a":0.2},"shapes":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"q8=0;","frame_eqs_eel":"warp=0;\\nib_a =0.2*bass;\\nwave_r = wave_r + 0.45*(0.5*sin(time*0.701)+ 0.3*cos(time*0.438));\\nwave_b = wave_b - 0.4*(0.5*sin(time*4.782)+0.5*cos(time*0.522));\\nwave_g = wave_g + 0.4*sin(time*1.731);\\ndecay = decay - equal(frame%100,0)*0.1;\\nvol = 0.167*(bass+mid);\\nxamptarg = if(equal(frame%15,0),min(0.5*vol*bass_att,0.5),xamptarg);\\nxamp = xamp + 0.5*(xamptarg-xamp);\\nxdir = if(above(abs(xpos),xamp),-sign(xpos),if(below(abs(xspeed),0.1),2*above(xpos,0)-1,xdir));\\nxspeed = xspeed + xdir*xamp - xpos - xspeed*0.055*below(abs(xpos),xamp);\\nxpos = xpos + 0.001*xspeed;\\nwave_x = 1.5*xpos + 0.5;\\nyamptarg = if(equal(frame%15,0),min(0.3*vol*treb_att,0.5),yamptarg);\\nyamp = yamp + 0.5*(yamptarg-yamp);\\nydir = if(above(abs(ypos),yamp),-sign(ypos),if(below(abs(yspeed),0.1),2*above(ypos,0)-1,ydir));\\nyspeed = yspeed + ydir*yamp - ypos - yspeed*0.055*below(abs(ypos),yamp);\\nypos = ypos + 0.001*yspeed;\\nwave_y = 1.5*ypos + 0.5;\\nzoom = .995;\\n\\n\\n\\n\\n\\n\\n\\nframetest = frame%2;\\nwave_x = if(frametest,1-wave_x,wave_x);\\nwave_y = if(frametest,1-wave_y,wave_y);\\nwave_r = if(frametest,wave_r,wave_g);\\nwave_g = if(frametest,wave_g,wave_b);\\nwave_b = if(frametest,wave_b,wave_r);\\nmonitor = green;\\nq8 =  oldq8+ 0.0005*(pow(1+1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6)/fps);\\noldq8 = q8;\\n\\nmv_g=0.5+bass_att*.1;\\nbeat=if(above(bass*bass_att,4.5),1-beat,beat);\\nq1=beat*2-1;\\n\\namp =amp*.8+.2*(bass_att+mid_att+treb_att)*.3;\\nq2 = min(amp,1);\\ntrebcap=trebcap*.7+.16*treb;\\nq3=trebcap*2;\\nmonitor = q3;","pixel_eqs_eel":"dx=dx+0.008*sin((y*2-1)*(48+12*sin(0.412*q8)))+0.008*sin(((y+sin(time*0.163))*2-1)* (3+sin(0.241*q8)));\\ndy=dy+0.008*cos((x*2-1)*(64+18*sin(0.376*q8)))+0.008*sin(((x+sin(q8*0.282))*2-1) *(3+sin(0.349*q8)));\\nwang = (3+q3)*x+time*1.7+bass*.1;\\nin = 0;\\nin = in + below(abs(x-.25),.05)*below(abs(y-.5),.25);\\nin = below(abs(y-(.5+.5*sin(wang)*q2)),.1);\\nin=bnot(bnot(in));\\ndx = dx+.02*in;\\ndy = dy+.08*cos(wang)*q2*in;\\n\\ndx = dx+bnot(in)*.005*q1;\\ndy = dy+bnot(in)*cos(wang)*-.01*q1;","warp":"","comp":""}')},7294:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":0,"gammaadj":1,"decay":1,"echo_zoom":1,"wave_mode":7,"additivewave":1,"wave_thick":1,"wave_brighten":0,"darken":1,"wave_a":1,"wave_scale":0.438649,"wave_smoothing":0.5,"modwavealphastart":0.5,"modwavealphaend":1,"zoomexp":0.999996,"fshader":1,"dx":0.00001,"dy":0.00001,"warp":0.01,"wave_y":0.976,"ob_size":0.005,"ob_r":0.4,"ob_g":0.3,"ob_a":1,"ib_r":1,"ib_g":0.6,"ib_b":0,"ib_a":1,"mv_x":0,"mv_y":0,"mv_l":1,"mv_a":0},"shapes":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"warp = 0;\\nwave_r = 0.5 + 0.3*sin(time*0.894);\\nwave_g = 0.53 + 0.33*sin(time*1.14);\\nwave_b = 0.2 + 0.2*(1-bass);\\nthresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\\ndx_r = equal(thresh,2)*0.004*sin(5*time)+(1-equal(thresh,2))*dx_r;\\ndy_r = equal(thresh,2)*0.004*sin(6*time)+(1-equal(thresh,2))*dy_r;\\nq1 = thresh;\\ndx = 1.1* dx_r;\\ndy = 1.1* dy_r;\\ndx = dx + if (above(bass,1.35), 31*dx_r, 0);\\ndy = if(above(bass,1.3), 0, dy);","pixel_eqs_eel":"zoom = zoom -0.01*q1*rad;\\nzoomexp = 1+0.2*(rad-0.2*q1);","warp":"","comp":""}')},3687:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":0,"decay":1,"echo_zoom":0.999608,"echo_alpha":0.5,"echo_orient":2,"wave_thick":1,"wave_brighten":0,"wrap":0,"darken_center":1,"wave_scale":0.011046,"wave_mystery":-0.42,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_r":1,"ob_a":0.9,"mv_x":1.28,"mv_y":1.248,"mv_dx":-0.06,"mv_dy":-0.026,"mv_l":5,"mv_a":0},"shapes":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"warp = 0;\\nwave_r = bass_att*.3;\\nwave_g = treb_att*.3;\\nwave_b = mid_att*.3;\\nob_r = 0.5+0.5*sin(time*5.12);\\nob_b = 0.5+0.5*sin(time*6.112);\\nob_g = 0.5+0.5*sin(time*7.212);\\nq1 = zoom + pow((bass+bass_att),3)*.005-.02;","pixel_eqs_eel":"zoom =q1+ rad*sin(ang*25)*.05;","warp":"","comp":""}')},9190:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_alpha":1,"echo_orient":1,"wave_thick":1,"wave_a":7.015,"wave_scale":0.01,"wave_smoothing":0.27,"wave_mystery":-0.4,"warpanimspeed":5.996,"warpscale":1.331,"zoomexp":1.01,"zoom":0.99853,"rot":0.002,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"wave_x":0.1,"wave_y":0.9,"ob_g":0.9,"ob_b":0.2,"ob_a":1,"ib_size":0,"ib_r":0.201,"ib_g":0.5,"ib_b":0.5,"ib_a":1,"mv_x":63.936,"mv_y":48,"mv_l":1,"mv_r":0.63,"mv_g":0.2,"mv_b":0.3,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"beatcounter =0;","frame_eqs_eel":"ob_r = 0.21 - 0.2*(0.5*sin(time*0.701)+ 0.3*cos(time*0.438));\\nob_g = 0.5 - 0.46*sin(time*1.724);\\nob_b = 0.65 - 0.3*cos(time*1.816);\\nwarp =0;\\nib_size = 0.025;\\nib_r = ib_r + 0.2*(0.6*sin(time*3.034)+0.4*cos(time*2.14));\\nib_g = ib_g + 0.5*(0.6*sin(time*3.147)+0.4*cos(time*2.015));\\nib_b = ib_b - 0.5*(0.6*sin(time*3.431)+0.4*cos(time*1.842));\\ndx = dx +0.001+abs(0.003*(0.6*sin(time*0.234) + 0.4*cos(time*0.437)));\\ndy = dy + abs(0.003*(0.7*sin(time*0.213) + 0.3*cos(time*0.315)));\\nvolume = 0.15*(bass+bass_att+treb+treb_att+mid+mid_att);\\nxamptarg = if(equal((frame+.5)%15,0),min(0.5*volume*bass_att,0.5),xamptarg);\\nxamp = xamp + 0.5*(xamptarg-xamp);\\nxdir = if(above(abs(xpos),xamp),-sign(xpos),if(below(abs(xspeed),0.1),2*above(xpos,0)-1,xdir));\\nxaccel = xdir*xamp - xpos - xspeed*0.055*below(abs(xpos),xamp);\\nxspeed = xspeed + xdir*xamp - xpos - xspeed*0.055*below(abs(xpos),xamp);\\nxpos = xpos + 0.001*xspeed;\\nq2 = xpos;\\nyamptarg = if(equal((frame+.5)%15,0),min(0.3*volume*treb_att,0.5),yamptarg);\\nyamp = yamp + 0.5*(yamptarg-yamp);\\nydir = if(above(abs(ypos),yamp),-sign(ypos),if(below(abs(yspeed),0.1),2*above(ypos,0)-1,ydir));\\nyaccel = ydir*yamp - ypos - yspeed*0.055*below(abs(ypos),yamp);\\nyspeed = yspeed + ydir*yamp - ypos - yspeed*0.055*below(abs(ypos),yamp);\\nypos = ypos + 0.001*yspeed;\\nq4 = ypos;\\nbass_effect = max(max(bass,bass_att)-1.2,0);\\necho_zoom = 1.32 + 0.3*(0.59*sin(q4+time*0.865) + 0.41*cos(q2+time*1.192)) + 0.05*bass_effect;\\nvolume = 0.15*(bass_att+bass+mid+mid_att);\\nbeatrate = if(equal(beatrate,0),1,if(below(volume,0.01),1,beatrate));\\nlastbeat = if(equal(lastbeat,0),time,lastbeat);\\nmeanbass_att = 0.1*(meanbass_att*9 + bass_att);\\npeakbass_att = if(above(bass_att,peakbass_att),bass_att,peakbass_att);\\nbeat = if(above(volume,0.8),if(below(peakbass_att - bass_att, 0.05*peakbass_att),if(above(time - lastbeat,0.1+0.5*(beatrate-0.1)),1,0),0),0);\\nbeatrate = max(if(beat,if(below(time-lastbeat,2*beatrate),0.1*(beatrate*9 + time - lastbeat),beatrate),beatrate),0.1);\\npeakbass_att = if(equal(beat,0),if(above(time - lastbeat,2*beatrate),peakbass_att*0.95,peakbass_att*0.995),bass_att);\\nlastbeat = if(beat,time,lastbeat);\\npeakbass_att = max(if(beat,bass_att,peakbass_att),1.1*meanbass_att);\\nbeatcounter = if(above(beat,0),beatcounter +1, beatcounter);\\nbeatcounter = if(above(beatcounter,7), 0, beatcounter);\\nbeateven = (beatcounter+.5)%2;\\nmode = if(beat,(mode+(int(rand(3))+1)+.5)%4,mode);\\necho_orient = mode;\\nwave_a = if(beat,1,0);\\nwave_r = wave_r + 0.2*sin(time*0.7854) - 0.2*beateven;\\nwave_b = wave_b + 0.1*sin(time*0.8254) + 0.2*beateven;\\nwave_g = wave_g + 0.1*sin(time*0.854) + 0.2*beateven;\\nq6 = beat;\\nwave_mode = if(beateven,7,0);\\nmv_a = if(beat,if(equal(beatcounter,6),1,0),0);\\nmv_r = if(mv_a,int(rand(2)),0);\\nmv_b = if(mv_a,int(rand(2)),0);\\nmv_g= if(mv_a,int(rand(2)),0);","pixel_eqs_eel":"box =0.5+0.8*((2*x+.5)%4+(2*y+.5)%2);\\nq1 = 8.45+0.3*(sin(pow(x,3)+0.177*time)-cos(pow(y,3)+0.223*time));\\nq7 = above(box,1);\\nzoom = if(q7,(q1*.1) + q6*6 ,zoom);\\nrot = if(q7,0.63*sin(0.385*time + 0.12*sin(0.67*time) + 0.1*q4 + 0.12*q2 +q6*50),rot);\\ncx = cx - 0.15*sin(2*q4);\\ncy = cy + 0.14*sin(2*q2);\\nsx = if(q7,sx+q6*18,sx);\\nsy = if(q7,sy+q6*18,sy);","warp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 4.0);\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = tmpvar_3.x;\\n  tmpvar_5.y = tmpvar_4.x;\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv + ((tmpvar_5 * texsize.zw) * 8.0));\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = tmpvar_3.y;\\n  tmpvar_7.y = tmpvar_4.y;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (uv + ((tmpvar_7 * texsize.zw) * 8.0));\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = tmpvar_3.z;\\n  tmpvar_9.y = tmpvar_4.z;\\n  vec2 tmpvar_10;\\n  tmpvar_10 = (uv + ((tmpvar_9 * texsize.zw) * 8.0));\\n  ret_1.x = (texture (sampler_main, tmpvar_6).x - ((texture (sampler_main, tmpvar_6).xyz - \\n    ((texture (sampler_blur3, tmpvar_6).xyz * scale3) + bias3)\\n  ).x * 0.02));\\n  ret_1.y = (texture (sampler_main, tmpvar_8).y - ((texture (sampler_main, tmpvar_8).xyz - \\n    ((texture (sampler_blur3, tmpvar_8).xyz * scale3) + bias3)\\n  ).y * 0.02));\\n  ret_1.z = (texture (sampler_main, tmpvar_10).z - ((texture (sampler_main, tmpvar_10).xyz - \\n    ((texture (sampler_blur3, tmpvar_10).xyz * scale3) + bias3)\\n  ).z * 0.02));\\n  ret_1 = (ret_1 - ((ret_1.yzx * 0.2) - 0.06));\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 1.0;\\n  tmpvar_11.xyz = ret_1;\\n  ret = tmpvar_11.xyz;\\n }","comp":" shader_body { \\n  vec2 uv_1;\\n  vec3 ret_2;\\n  uv_1 = (0.5 + ((uv - 0.5) * 0.98));\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (texsize.zw * 4.0);\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv_1 + (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv_1 - (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_blur1, \\n    (uv_1 + (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv_1 - (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_6;\\n  tmpvar_6.z = 0.0;\\n  tmpvar_6.x = dot (tmpvar_4, vec3(0.32, 0.49, 0.29));\\n  tmpvar_6.y = dot (tmpvar_5, vec3(0.32, 0.49, 0.29));\\n  vec4 tmpvar_7;\\n  tmpvar_7 = texture (sampler_noisevol_hq, ((vec3(0.05, 0.05, 0.0) * (\\n    ((uv_1.xyy + (tmpvar_6 * 0.5)) * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + (vec3(0.0, 0.0, 0.2) * time)));\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = dot (tmpvar_4, vec3(0.32, 0.49, 0.29));\\n  tmpvar_8.y = dot (tmpvar_5, vec3(0.32, 0.49, 0.29));\\n  uv_1 = (uv_1 - (tmpvar_8 * 0.04));\\n  ret_2 = (abs((\\n    ((texture (sampler_main, uv_1).xyz + ((texture (sampler_blur1, uv_1).xyz * scale1) + bias1)) - ((texture (sampler_blur2, uv_1).xyz * scale2) + bias2))\\n   - \\n    ((texture (sampler_blur3, uv_1).xyz * scale3) + bias3)\\n  )) * (dot (tmpvar_7, vec4(0.32, 0.49, 0.29, 0.0)) * 3.0));\\n  ret_2 = (1.0 - pow (ret_2, vec3(0.5, 0.5, 0.5)));\\n  vec4 tmpvar_9;\\n  tmpvar_9.w = 1.0;\\n  tmpvar_9.xyz = ret_2;\\n  ret = tmpvar_9.xyz;\\n }"}')},2423:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":5,"decay":0.973,"echo_zoom":1.047463,"wave_mode":3,"wave_dots":1,"wrap":0,"darken_center":1,"darken":1,"wave_a":0.9,"wave_scale":2.905229,"wave_smoothing":0.6,"wave_mystery":-0.3,"warpscale":2.853,"zoomexp":0.999835,"zoom":0.999682,"warp":0,"wave_r":0.6,"wave_g":0.6,"wave_b":0.6,"ob_size":0,"mv_x":64,"mv_y":48,"mv_l":0,"mv_r":0.35,"mv_g":0.35,"mv_b":0.35},"shapes":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.400*( 0.60*sin(0.933*time) + 0.40*sin(1.045*time) );\\nwave_g = wave_g + 0.100*( 0.60*sin(0.900*time) + 0.40*sin(0.956*time) );\\nwave_b = wave_b + 0.100*( 0.60*sin(0.910*time) + 0.40*sin(0.920*time) );\\nmv_r = wave_r;\\nmv_b = wave_b;\\nmv_g = wave_g;\\nq1 = 0.05*(pow(1+1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6)/fps);\\n//q1 = 0.6*(bass+bass_att);\\nmv_a = if(above(bass-1.2,1),1,bass-1.2);","pixel_eqs_eel":"zoom = 1.01 + rad*0.15*q1;","warp":"","comp":""}')},4254:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":1.006596,"echo_alpha":0.5,"additivewave":1,"wave_thick":1,"wave_brighten":0,"wrap":0,"wave_a":4.099998,"wave_scale":0.01,"wave_smoothing":0.63,"wave_mystery":-0.4,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.999513,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.005,"ob_r":0.01,"ob_a":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0.5,"mv_r":0.35,"mv_g":0.35,"mv_b":0.35,"mv_a":0},"shapes":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"ob_r = 0.5+0.5*sin(2*time);\\nob_g = 0.5+0.5*sin(1.23*time);\\nob_b = 0.5+0.5*sin(time*1.321);\\nwave_a =0;\\nq8 =oldq8+ 0.003*(pow(1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6)/fps);\\noldq8 = q8;\\nwarp=0;","pixel_eqs_eel":"rot = 0.1*(rad+cos((5+5*sin(q8*1.211)*x)-0.5) -sin(((5+5*sin(q8*0.973))*y)-0.5));\\ndx = 0.005*(cos((5+5*sin(q8*1.311)*x)-0.5) -sin(((5+5*sin(q8*0.9431))*y)-0.5));\\ndy = 0.005*(cos((5+5*sin(q8*1.021)*x)-0.5) -sin(((5+5*sin(q8*0.987))*y)-0.5));\\nzoom =1- 0.005*(rad+cos((5+5*sin(q8*0.943)*x)-0.5) -sin(((5+5*sin(q8*1.0961))*y)-0.5));","warp":"","comp":""}')},358:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":3,"gammaadj":1,"decay":1,"echo_zoom":0.999609,"echo_alpha":0.5,"echo_orient":1,"wave_mode":8,"additivewave":1,"wave_brighten":0,"wrap":0,"wave_a":4.099998,"wave_scale":1.285751,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.990099,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.005,"ob_r":0.01,"ob_a":1,"ib_size":0.005,"mv_x":64,"mv_y":48,"mv_l":0.5,"mv_r":0.35,"mv_g":0.35,"mv_b":0.35,"mv_a":0},"shapes":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"q8=0;\\nq1 = rand(2)+2;","frame_eqs_eel":"warp=0;\\nib_r = 0.5+0.50*( 0.60*sin(0.814*time) + 0.40*sin(1.011*time) );\\nib_g = 0.5+0.5*sin(time*1.476);\\nib_b = 0.5+0.5*sin(1.374*time);\\nob_r = ib_r;\\nob_g=ib_g;\\nob_b=ib_b;\\nq8 =oldq8+ 0.001*(pow(1+1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6)/fps);\\noldq8 = q8;\\nwave_a = 0;\\nib_a =1;","pixel_eqs_eel":"dx = sin((1000+sin(q8))/y)/200;\\ndy = cos((1000+sin(q8))/x)/200;\\nrot = dy*100*dx;","warp":"","comp":""}')},1456:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":4,"decay":0.96,"echo_zoom":1.007,"echo_orient":3,"wave_mode":3,"additivewave":1,"modwavealphabyvolume":1,"wave_a":4.1,"wave_scale":0.525,"wave_smoothing":0.36,"wave_mystery":-0.5,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":1.07055,"rot":0.02,"warp":0.19805,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"ff = frame/100;\\nwave_r = sin(5*ff/2)/2+0.5;\\nwave_g = cos(ff/3)/2+0.5;\\nwave_b = cos(3*ff/2)/2+0.5;","pixel_eqs_eel":"rot=0.1*(2*abs((sin(time)-0.5))-ang);","warp":"","comp":" shader_body { \\n  vec2 uv2_1;\\n  vec3 ret_2;\\n  uv2_1 = (uv + (vec2(1.0, 0.0) * texsize.zw));\\n  float tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(-1.0, 0.0) * texsize.zw));\\n  float tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(0.0, 1.0) * texsize.zw));\\n  float tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(0.0, -1.0) * texsize.zw));\\n  vec3 tmpvar_6;\\n  tmpvar_6.z = 0.14;\\n  tmpvar_6.x = (tmpvar_3 - tmpvar_4);\\n  tmpvar_6.y = (tmpvar_5 - ((\\n    (texture (sampler_main, uv2_1).xyz + (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4))\\n   + \\n    (((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2) * 0.15)\\n  ) + (\\n    ((texture (sampler_blur3, uv2_1).xyz * scale3) + bias3)\\n   * 0.1)).x);\\n  ret_2 = (0.5 + (0.5 * normalize(tmpvar_6)));\\n  vec2 x_7;\\n  x_7 = (ret_2.xy - 0.5);\\n  ret_2 = (ret_2 * clamp ((\\n    sqrt(dot (x_7, x_7))\\n   * 5.0), 0.0, 1.0));\\n  ret_2 = ret_2.xxy;\\n  ret_2 = (ret_2 + 1.15);\\n  ret_2 = (ret_2 * mix (ret_2, (ret_2 * \\n    (((texture (sampler_blur3, uv).xyz * scale3) + bias3) - ((texture (sampler_blur1, uv).xyz * scale1) + bias1))\\n  ), pow (hue_shader.zxy, ret_2)));\\n  ret_2 = (ret_2 * ret_2);\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = ret_2;\\n  ret = tmpvar_8.xyz;\\n }"}')},2768:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":4,"decay":0.9,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":1,"wave_dots":1,"wave_brighten":0,"wrap":0,"wave_a":1,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.005,"ob_b":0.2,"ob_a":0.5,"ib_size":0.005,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"textured":1,"x":0.88,"y":0.8,"rad":0.330038,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.5+ 0.4*sin(0.2765*time+0.341*q8);\\ny = 0.5+ 0.4*sin(0.311*time+0.213*q8);\\nang = 3.1415-3.1415*cos(time*0.1389);"},{"baseVals":{"enabled":1,"sides":100,"textured":1,"x":0.88,"y":0.2,"rad":0.330038,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.5+ 0.4*sin(0.212*time+0.1*q8);\\ny = 0.5+ 0.4*sin(0.2891*time+0.121*q8);\\nang = 3.1415+3.1415*sin(time*0.181);"},{"baseVals":{"enabled":1,"sides":100,"textured":1,"x":0.12,"y":0.8,"rad":0.330038,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.5+ 0.4*sin(0.0932*time+0.421*q6);\\ny = 0.5+ 0.4*sin(0.1178*time+0.2135*q6);\\nang = 3.1415-3.1415*cos(time*0.1154);"},{"baseVals":{"enabled":1,"sides":100,"textured":1,"x":0.12,"y":0.2,"rad":0.330038,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.5+ 0.4*sin(0.105*time+0.3*q4);\\ny = 0.5+ 0.4*sin(0.1267*time+0.323*q4);\\nang = 3.1415+3.1415*sin(time*0.2654);"}],"waves":[{"baseVals":{"enabled":1,"spectrum":1,"usedots":1,"thick":1,"scaling":0.463735,"smoothing":0},"init_eqs_eel":"//pi\\nt8=3.14159265/2;\\nt5 = 1;","frame_eqs_eel":"rotx = rotx+bass;\\nroty = roty+mid;\\nrotz = rotz+treb;\\n//rotx = 0;\\n//roty =0;\\n//rotz = 0;\\n\\n//convert rotation values from degrees to radians\\nt1= t8*rotx/180;\\nt2 = t8*roty/180;\\nt3 = t8*rotz/180;\\n\\nt4 = sin(bass+0.86*t8);\\nt5 = 10+8*cos(time+0.56*t8);","point_eqs_eel":"//Define 3D Shape\\n\\n//Sphere\\nfvar = sample*512;\\nsvar = fvar*128;\\ntvar = 0&svar;\\nnsample = tvar*4.5;\\nx1 = -2.5+(1.5)*sin(sample);\\ny1 = (-1)*cos(t8*nsample);\\nz1 = (-1)*sin(t8*nsample);\\n\\n//modulate values to adjust for rotation on multiple axes, convert to world co-ordinates\\ny2 = y1*cos(t1)-z1*sin(t1);\\nz2 = y1*sin(t1)+z1*cos(t1);\\nx2 = z2*sin(t2)+x1*cos(t2);\\nz3 = z2*cos(t2)-x1*sin(t2);\\nx3 = x2*cos(t3)-y2*sin(t3);\\ny3 = y2*cos(t3)+x2*sin(t3);\\n//move resulting shape in 3d space\\nx4 = x3;\\ny4 = y3;\\nz4 = z3+5;\\n//draw 3d shape in 2d\\nx=0.5+0.5*(x4/(1+z4*0.5));\\ny=0.5+0.5*(y4/(1+z4*0.5));\\n\\na = -.9+sin(nsample+time);\\na = if(below(a,0),0,a);\\na=1;\\nr =sin(abs(x2*sin(time)))*0.5 + 0.5;\\nb = sin(abs(y3+sin(0.8765*time)))*0.5 + 0.5;\\ng = x2*z2;"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"scaling":0.463735,"smoothing":0},"init_eqs_eel":"//pi\\nt8=3.14159265;\\nt5 = 1;","frame_eqs_eel":"rotx = rotx+bass;\\nroty = roty+mid;\\nrotz = rotz+treb;\\n//rotx = 0;\\n//roty =0;\\n//rotz = 0;\\n\\n//convert rotation values from degrees to radians\\nt1= t8*rotx/180;\\nt2 = t8*roty/180;\\nt3 = t8*rotz/180;\\n\\nt4 = 3*sin(time+0.776*t8);\\nt5 = 10+8*cos(time+0.56*t8);\\n","point_eqs_eel":"//Define 3D Shape\\n\\n//Sphere\\nfvar = sample*512;\\nsvar = fvar*128;\\ntvar = 0&svar;\\nnsample = tvar*4.5;\\nx1 = -.75+(1.5)*sin(sample);\\ny1 = (1)*cos(t8*nsample);\\nz1 = (1)*sin(t8*nsample);\\n\\n//modulate values to adjust for rotation on multiple axes, convert to world co-ordinates\\ny2 = y1*cos(t1)-z1*sin(t1);\\nz2 = y1*sin(t1)+z1*cos(t1);\\nx2 = z2*sin(t2)+x1*cos(t2);\\nz3 = z2*cos(t2)-x1*sin(t2);\\nx3 = x2*cos(t3)-y2*sin(t3);\\ny3 = y2*cos(t3)+x2*sin(t3);\\n//move resulting shape in 3d space\\nx4 = x3;\\ny4 = y3;\\nz4 = z3+5;\\n//draw 3d shape in 2d\\nx=0.5+0.75*(x4/(1+z4*0.5));\\ny=0.5+0.75*(y4/(1+z4*0.5));\\n\\na = -.9+sin(nsample+time);\\na = if(below(a,0),0,a);\\na=1;\\nr = y2*z2;\\nb = z3+y3;\\ng = z3/x2;"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"scaling":0.463735,"smoothing":0},"init_eqs_eel":"//pi\\nt8=3.14159265*1.56;\\nt5 = 1;","frame_eqs_eel":"rotx = rotx+bass;\\nroty = roty+mid;\\nrotz = rotz+treb;\\n//rotx = 0;\\n//roty =0;\\n//rotz = 0;\\n\\n//convert rotation values from degrees to radians\\nt1= t8*rotx/180;\\nt2 = t8*roty/180;\\nt3 = t8*rotz/180;\\n\\nt4 = 12+13*sin(time+2.46*t8);\\nt5 = 2+8*cos(time+1.66*t8);\\nr = 1;\\nb = 0;\\ng=0;","point_eqs_eel":"//Define 3D Shape\\n\\n//Sphere\\nfvar = sample*512;\\nsvar = fvar*128;\\ntvar = 0&svar;\\nnsample = tvar*4.5;\\nx1 = -.5+(2.5)*sin(sample);\\ny1 = (1)*cos(t8*nsample);\\nz1 = (1)*sin(t8*nsample);\\n\\n//modulate values to adjust for rotation on multiple axes, convert to world co-ordinates\\ny2 = y1*cos(t1)-z1*sin(t1);\\nz2 = y1*sin(t1)+z1*cos(t1);\\nx2 = z2*sin(t2)+x1*cos(t2);\\nz3 = z2*cos(t2)-x1*sin(t2);\\nx3 = x2*cos(t3)-y2*sin(t3);\\ny3 = y2*cos(t3)+x2*sin(t3);\\n//move resulting shape in 3d space\\nx4 = x3;\\ny4 = y3;\\nz4 = z3+5;\\n//draw 3d shape in 2d\\nx=0.5-1*(x4/(1+z4*0.5));\\ny=0.5-1*(y4/(1+z4*0.5));\\n\\na = -.9+sin(nsample+time);\\na = if(below(a,0),0,a);\\na=1;\\ng=y2;\\nb=x2;\\nr= z2+z3;"},{"baseVals":{"enabled":1,"spectrum":1,"usedots":1,"thick":1,"scaling":0.463735,"smoothing":0},"init_eqs_eel":"//pi\\nt8=3.14159265*0.15;\\nt5 = 1;","frame_eqs_eel":"rotx = rotx+bass;\\nroty = roty+mid;\\nrotz = rotz+treb;\\n//rotx = 0;\\n//roty =0;\\n//rotz = 0;\\n\\n//convert rotation values from degrees to radians\\nt1= t8*rotx/180;\\nt2 = t8*roty/180;\\nt3 = t8*rotz/180;\\n\\nt4 = 3*sin(time+0.66*t8);\\nt5 = 10+8*cos(time+0.66*t8);\\n","point_eqs_eel":"//Define 3D Shape\\n\\n//Sphere\\nfvar = sample*512;\\nsvar = fvar*128;\\ntvar = 0&svar;\\nnsample = tvar*4.5;\\nx1 = -.75+(1.5)*sin(sample);\\ny1 = (1)*cos(t8*nsample);\\nz1 = (1)*sin(t8*nsample);\\n\\n//modulate values to adjust for rotation on multiple axes, convert to world co-ordinates\\ny2 = y1*cos(t1)-z1*sin(t1);\\nz2 = y1*sin(t1)+z1*cos(t1);\\nx2 = z2*sin(t2)+x1*cos(t2);\\nz3 = z2*cos(t2)-x1*sin(t2);\\nx3 = x2*cos(t3)-y2*sin(t3);\\ny3 = y2*cos(t3)+x2*sin(t3);\\n//move resulting shape in 3d space\\nx4 = x3;\\ny4 = y3;\\nz4 = z3+5;\\n//draw 3d shape in 2d\\nx=0.5+0.8*(x4/(1+z4*0.5));\\ny=0.5+0.8*(y4/(1+z4*0.5));\\n\\na = -.9+sin(nsample+time);\\na = if(below(a,0),0,a);\\na=1;\\n\\nb = z4;\\nr=z2-x1;\\ng=y2+z2;"}],"init_eqs_eel":"","frame_eqs_eel":"warp=0;\\nwave_a=0;\\ndecay = 0.976;\\ndecay=0.99;\\n//q8 - bass tracking\\nq8 =  oldq8+ 0.0002*(pow(1+1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6)/fps);\\noldq8 = q8;\\nq7 = 0.00004*(pow(1+1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6)/fps);\\n//q6 = treble tracking\\nq6 =  oldq6+ 0.0002*(pow(1+0.1*bass+0.1*bass_att+1.2*treb+0.4*treb_att+0.1*mid+0.1*mid_att,6)/fps);\\noldq6 = q6;\\n//q4 = midrage tracking\\nq4 =  oldq4+ 0.0002*(pow(1+0.1*bass+0.1*bass_att+0.1*treb+0.1*treb_att+1.2*mid+0.4*mid_att,6)/fps);\\noldq4 = q4;\\n\\nq8 =  oldq8+ 0.0002*(pow(1+1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6)/fps);\\noldq8 = q8;\\n\\nq8 =  oldq8+ 0.0002*(pow(1+1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6)/fps);\\noldq8 = q8;\\n\\nob_size = min(max(0,q7-0.3)+0.005,0.9);\\nob_b = max(0,sin(q8*0.2542)*0.2 +0.1);\\nob_r = max(0,sin(q8*0.985)*0.4 + 0.2);\\nob_g = max(0,sin(q8*0.8711)*0.3 + 0.1);\\nob_a =max(0,0.3*(q7-0.2))+0.1;\\nib_r = 1-if(ob_size-0.005,0,1);\\nib_g = ib_r*(0.21*0.2*sin(time*0.643));\\nib_b = ib_r*(0.21*0.2*sin(time*0.853));\\nib_a =1;\\nmonitor = ob_a;\\n//q6 = max(0.0005*(pow(1+1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6)/fps),1)-1;\\n//oldq6 = q6;\\nmonitor =q6;","pixel_eqs_eel":"dx=dx+0.008*sin((y*2-1)*meshx)+0.008*sin((y*2-1)*meshx*1.3333);\\ndy=dy+0.008*cos((x*2-1)*meshx*1.3333)+0.008*cos((x*2-1)*meshx);","warp":"","comp":""}')},4467:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":4,"echo_zoom":0.998169,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"wave_a":7.74,"wave_scale":0.656,"wave_smoothing":0.8,"warpscale":1.772,"zoomexp":1.96,"fshader":0.19,"zoom":0.999698,"warp":0.513,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_a":0.58,"ib_size":0.015,"ib_r":0.55,"ib_g":1,"ib_b":0.4999,"ib_a":0.23,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"samples":302,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"ti=if(above(bass,1.3),.3,ti*.9);\\ntt1=tt1+.01+ti*.1;\\nt8=tt1;\\nt7=cos(time*.1+1)*sin(time*.1-6);\\nrx=atan2(sin(time*.1)*cos(t8),sqr(sin(t8)+1)+sqr(t7))/4+(sin(t8)+1)/2;\\nry=atan2(sin(time*.1)*cos(t8),t7);\\nrz=0;\\n\\nt1=sin(rx);t2=cos(rx);\\nt3=sin(ry);t4=cos(ry);\\nt5=sin(rz);t6=cos(rz);","point_eqs_eel":"sample=sample*6.283185*.5;value1=(value1+1)*.3;\\nx1=sin(sample)*sin(sample*40)*value1;\\ny1=cos(sample)*value1;\\nz1=sin(sample)*cos(sample*40)*value1;\\nx1=x1+(sin(time*.1)*cos(t8));\\ny1=y1+(sin(t8)+1);\\nz1=z1+t7;\\nx2=x1*t4-z1*t3;z2=x1*t3+z1*t4;\\ny2=y1*t2-z2*t1;z3=y1*t1+z2*t2+1.4;\\nx3=x2*t6-y2*t5;y3=x2*t5+y2*t6;\\nz3=if(above(z3,.1),.5/z3,0);\\nx=if(z3,x3*z3,x)+.5;\\ny=if(z3,-y3*z3,y)+.5;\\nhu=sample+sin(time);\\nr=sin(hu)*.5+.5;\\ng=sin(hu+6.283185*.33)*.5+.5;\\nb=sin(hu+6.283185*.66)*.5+.5;\\na=z3*.8;"},{"baseVals":{"enabled":1,"samples":302,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"ti=if(above(bass,1.3),.3,ti*.9);\\ntt1=tt1+.01+ti*.1;\\nt8=tt1;\\nt7=cos(time*.1+1)*sin(time*.1-6);\\nrx=atan2(sin(time*.1)*cos(t8),sqr(sin(t8)+1)+sqr(t7))/4+(sin(t8)+1)/2;\\nry=atan2(sin(time*.1)*cos(t8),t7);\\nrz=0;\\n\\nt1=sin(rx);t2=cos(rx);\\nt3=sin(ry);t4=cos(ry);\\nt5=sin(rz);t6=cos(rz);\\n","point_eqs_eel":"cp=bnot(cp);\\nr=sample*6.283185*10;\\ni1=(sample*6)%2;\\nrt=if(cp,1,.5);\\nsample=sample*6.283185*.5;\\n\\nx1=sin(r)*rt;\\nz1=cos(r)*rt;\\ny1=-sin(i1)+.5;\\nx1=x1+(sin(time*.1)*cos(t8));\\ny1=y1+(sin(t8)+1);\\nz1=z1+t7;\\nx2=x1*t4-z1*t3;z2=x1*t3+z1*t4;\\ny2=y1*t2-z2*t1;z3=y1*t1+z2*t2+1.4;\\nx3=x2*t6-y2*t5;y3=x2*t5+y2*t6;\\nz3=if(above(z3,.1),.5/z3,0);\\nx=if(z3,x3*z3,x)+.5;\\ny=if(z3,-y3*z3,y)+.5;\\nhu=sample+sin(time/6.283185)*6.283185;\\nr=sin(hu)*.5+.5;\\ng=sin(hu+6.283185*.33)*.5+.5;\\nb=sin(hu+6.283185*.66)*.5+.5;\\na=z3*.8;"},{"baseVals":{"enabled":1,"usedots":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"ti=if(above(bass,1.3),.3,ti*.9);\\ntt1=tt1+.01+ti*.1;\\nt8=tt1;\\nt7=cos(time*.1+1)*sin(time*.1-6);\\nrx=atan2(sin(time*.1)*cos(t8),sqr(sin(t8)+1)+sqr(t7))/4+(sin(t8)+1)/2;\\nry=atan2(sin(time*.1)*cos(t8),t7);\\nrz=0;\\n\\nt1=sin(rx);t2=cos(rx);\\nt3=sin(ry);t4=cos(ry);\\nt5=sin(rz);t6=cos(rz);","point_eqs_eel":"sample=sample*6.283185*134;\\nx1=sin(sample*543)*2+(sin(time*.1)*cos(t8));\\ny1=cos(sample*4232)*2+(sin(t8)+1);\\nz1=sin(sample*90)*2+t7;\\n\\nx2=x1*t4-z1*t3;z2=x1*t3+z1*t4;\\ny2=y1*t2-z2*t1;z3=y1*t1+z2*t2+1;\\nx3=x2*t6-y2*t5;y3=x2*t5+y2*t6;\\nz3=if(above(z3,.1),.5/z3,0);\\nx=if(z3,x3*z3,x)+.5;\\ny=if(z3,-y3*z3,y)+.5;\\na=z3*.8;"},{"baseVals":{"enabled":1,"samples":142,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"ti=if(above(bass,1.3),.3,ti*.9);\\ntt1=tt1+.01+ti*.1;\\nt8=tt1;\\nt7=cos(time*.1+1)*sin(time*.1-6);\\nrx=atan2(sin(time*.1)*cos(t8),sqr(sin(t8)+1)+sqr(t7))/4+(sin(t8)+1)/2;\\nry=atan2(sin(time*.1)*cos(t8),t7);\\nry1=ry1+bass_att*.2;\\nt1=sin(rx);t2=cos(rx);\\nt3=sin(ry);t4=cos(ry);\\nt5=ry1;\\n","point_eqs_eel":"cp=bnot(cp);\\nr=sample*62.83185;\\ni1=(sample*6)%2;\\nrt=if(cp,.7,.2);\\nsample=sample*3.14159;\\n\\nx1=sin(r)*rt;\\nz1=cos(r)*rt;\\ny1=-.5;\\nx2=x1*cos(t5)-z1*sin(t5);z2=x1*sin(t5)+z1*cos(t5);\\nx1=x2+(sin(time*.1)*cos(t8));\\ny1=y1+(sin(t8)+1);\\nz1=z2+t7;\\nx2=x1*t4-z1*t3;z2=x1*t3+z1*t4;\\ny2=y1*t2-z2*t1;z3=y1*t1+z2*t2+1.4;\\nx3=x2;y3=y2;\\nz3=if(above(z3,.1),.5/z3,0);\\nx=if(z3,x3*z3,x)+.5;\\ny=if(z3,-y3*z3,y)+.5;\\nhu=sample+cos(time/6.283185)*6.283185;\\nr=sin(hu)*.5+.5;\\ng=sin(hu+6.283185*.33)*.5+.5;\\nb=sin(hu+6.283185*.66)*.5+.5;\\na=z3*.8;\\n\\n"}],"init_eqs_eel":"","frame_eqs_eel":"warp=0;\\nold_bass_flop=bass_flop;\\nold_treb_flop=treb_flop;\\nold_mid_flop=mid_flop;\\nchaos=.9+.1*sin(pulse);\\nentropy=if(bnot(entropy),2,if(equal(pulse,-20),1+int(rand(3)),entropy));\\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*chaos+1.3);\\nbass_flop=abs(bass_flop-equal(bass_thresh,2));\\ntreb_thresh=above(treb_att,treb_thresh)*2 + (1-above(treb_att,treb_thresh))*((treb_thresh-1.3)*chaos+1.3);\\ntreb_flop=abs(treb_flop-equal(treb_thresh,2));\\nmid_thresh=above(mid_att,mid_thresh)*2 + (1-above(mid_att,mid_thresh))*((mid_thresh-1.3)*chaos+1.3);\\nmid_flop=abs(mid_flop-equal(mid_thresh,2));\\nbass_changed=bnot(equal(old_bass_flop,bass_flop));\\nmid_changed=bnot(equal(old_mid_flop,mid_flop));\\ntreb_changed=bnot(equal(old_treb_flop,treb_flop));\\nbass_residual = bass_changed*sin(pulse*bass_thresh*.1*entropy) + bnot(bass_changed)*bass_residual;\\ntreb_residual = treb_changed*sin(pulse*treb_thresh*.1*entropy) + bnot(treb_changed)*treb_residual;\\nmid_residual = mid_changed*sin(pulse*mid_thresh*.1*entropy) + bnot(mid_changed)*mid_residual;\\npulse=if(above(abs(pulse),20),-20,pulse+.2*bor(bor(bass_changed*bnot(treb_changed),treb_changed*bnot(bass_changed))*bnot(mid_changed),mid_changed)+(mid+bass+treb)*entropy*.025);\\nq1=mid_residual;\\nq2=bass_residual;\\nq3=treb_residual;\\nq4=sin(pulse);\\nq5=sin(pulse/2);\\nwave_r=wave_r+.5*bass_residual;\\nwave_r=wave_g+.5*mid_residual;\\nwave_r=wave_b+.5*treb_residual;\\nwave_mystery=mid_residual;\\nob_r=if(bass_flop,treb_flop,wave_r);\\nob_b=if(treb_flop,mid_flop,wave_b);\\nob_g=if(mid_flop,bass_flop,wave_g);\\nob_a=.03+.02*wave_r;\\nob_size=.05+.04*treb_residual;\\nib_r=if(bass_flop,ob_b,ob_g);\\nib_b=if(treb_flop,ob_g,ob_r);\\nib_g=if(mid_flop,ob_r,ob_b);\\nib_a=.03+.02*wave_g;\\nib_size=.05+.04*bass_residual;","pixel_eqs_eel":"radix=if(above(q3,0),min(x,y),max(x,y));\\nradix=if(above(q2,0),min(radix,rad),max(radix,rad));\\nrot=if(above(q4,0),rad*.2*q5,0);\\nzoom=if(above(q2,0),zoom,if(above(q3,0),1+q1*.05,1+.07*cos(radix*10*q1)));","warp":"","comp":""}')},984:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"gammaadj":2.7,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":4,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wrap":0,"darken":1,"wave_a":0.865,"wave_scale":3.75,"wave_smoothing":0,"modwavealphastart":0.4,"modwavealphaend":1.3,"warpanimspeed":0.01,"warpscale":100,"zoomexp":0.32545,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.005,"ob_a":1,"ib_size":0,"ib_r":1,"ib_g":1,"ib_b":1,"ib_a":1,"mv_x":64,"mv_y":9.6,"mv_l":5,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0.3},"shapes":[{"baseVals":{"enabled":1,"sides":100,"textured":1,"x":0.37,"rad":100,"ang":3.64425,"r":0,"a":0.1,"g2":0,"a2":0.13,"border_a":1},"init_eqs_eel":"t1 = rand(100)*0.01;\\nt2 = rand(100)*0.01;","frame_eqs_eel":"tex_ang = time*(0.3 + 0.1*t1);\\nrad = rad * (0.9 + 0.2*t2);\\nr = min(1,max(0,r + 0.2*sin(time*0.417 + 1)));\\ng = min(1,max(0,g + 0.2*sin(time*0.391 + 2)));\\nb = min(1,max(0,b + 0.2*sin(time*0.432 + 4)));\\nr2 = min(1,max(0,r2 + 0.2*sin(time*0.657 + 3)));\\ng2 = min(1,max(0,g2 + 0.2*sin(time*0.737 + 5)));\\nb2 = min(1,max(0,b2 + 0.2*sin(time*0.884 + 6)));\\n//a1 = (bass_att);\\na1 = 0.3 + 0.1 * sin(treb_att * .55);\\nmv_l = 3 + 1 * (treb_att * .25);\\n"},{"baseVals":{"enabled":1,"sides":100,"additive":1,"textured":1,"x":0.37,"rad":0.89796,"ang":3.64425,"r":0,"a":0.1,"g2":0,"border_a":0},"init_eqs_eel":"t1 = rand(100)*0.01;\\nt2 = rand(100)*0.01;","frame_eqs_eel":"x = x + 0.05*sin(mid_att*0.15+3);\\ny = y + 0.03*sin(mid_att*0.19+1);\\ntex_ang = bass_att*(0.1 + 0.1*treb_att);\\nrad = rad * (0.9 + 0.6*treb_att);\\n\\n\\n\\nx = x + sin(treb_att * .005);\\ny = y + sin(mid_att * .013);\\na = 0 + (treb * .1);"},{"baseVals":{"enabled":1,"sides":13,"additive":1,"textured":1,"x":0.77,"y":0.43,"rad":0.51386,"ang":4.20974,"g":1,"b":1,"g2":0,"a2":1,"border_a":0},"init_eqs_eel":"t1 = rand(100)*0.01;\\nt2 = rand(100)*0.01;","frame_eqs_eel":"x = x + 0.05*(bass_att*0.07);\\ny = y + 0.03*(bass_att*0.03);\\ntex_ang = mid_att*(0.8 + 0.1*t1);\\nrad = rad * (0.9 + 0.2*mid_att);\\nr = min(1,max(0,r + 0.1*(bass_att*0.417 + 1)));\\ng = min(1,max(0,g + 0.1*(mid_att*0.391 + 2)));\\nb = min(1,max(0,b + 0.1*(treb_att*0.432 + 4)));\\nr2 = min(1,max(0,r2 + 0.1*sin(bass_att*0.457 + 3)));\\ng2 = min(1,max(0,g2 + 0.1*sin(mid_att*0.437 + 5)));\\nb2 = min(1,max(0,b2 + 0.1*sin(treb_att*0.484 + 6)));\\nsides = treb_att;\\n\\nx = x + sin(mid_att * .019);\\ny = y + sin(treb_att * .015);\\nnum_inst = sin(mid_att * .25);\\n\\nr = 0.5 + 0.5*sin(frame*2.5);\\nb = 0.5 + 0.5*sin(frame*0.5 + 2.094);\\ng = 0.5 + 0.5*sin(frame*0.5 + 1.188);"},{"baseVals":{"enabled":1,"sides":3,"additive":1,"textured":1,"y":0.7,"rad":1.33692,"r":0,"g":0.8,"b":1,"a":0.1,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = x + 0.2*sin(treb_att*0.25);\\ny = y + 0.1*sin(treb_att*0.5+2);\\nrot = mid_att * .45;\\n\\nr = min(1,max(0,r + 0.1*(bass_att*0.417 + 1)));\\ng = min(1,max(0,g + 0.1*(mid_att*0.391 + 2)));\\nb = min(1,max(0,b + 0.1*(treb_att*0.432 + 4)));\\nr2 = min(1,max(0,r2 + 0.1*sin(bass_att*0.457 + 3)));\\ng2 = min(1,max(0,g2 + 0.1*sin(mid_att*0.437 + 5)));\\nb2 = min(1,max(0,b2 + 0.1*sin(treb_att*0.484 + 6)));\\nang = sin(treb_att);\\n\\nx = x + sin(mid_att * .016);\\ny = x + sin(treb_att * .015);\\nnum_inst = sin(treb_att * .35);\\n\\nr = 0.5 + 0.5*sin(frame*2.5);\\nb = 0.5 + 0.5*sin(frame*0.5 + 2.094);\\ng = 0.5 + 0.5*sin(frame*0.5 + 1.188);\\n\\n\\nrad = rad + (treb * .001);"}],"waves":[{"baseVals":{"enabled":1,"spectrum":1,"thick":1,"additive":1,"scaling":9.86086},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass_att,1)*3.1415*.01*bass_att);\\nma=ma-(above(treb_att,1)*3.1415*.01*treb_att);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\n//a=(above(bass+mid+treb,.8));\\n//a = bass_att * .35;\\n\\nr = sin(treb+att * .45);\\nb = sin(treb+att * .65);\\ng = sin(treb+att * .25);\\n\\n"},{"baseVals":{"enabled":1,"spectrum":1,"thick":1,"additive":1,"scaling":27.42973},"init_eqs_eel":"","frame_eqs_eel":"//r = min(1,max(0,r + 0.1*(bass_att*0.217 + 1)));\\n//g = min(1,max(0,g + 0.1*(treb_att*0.191 + 2)));\\n//b = min(1,max(0,b + 0.1*sin(mid_att*0.232 + 4)));\\n//r2 = min(1,max(0,r2 + 0.1*sin(bass_att*0.257 + 3)));\\n//g2 = min(1,max(0,g2 + 0.1*sin(treb_att*0.237 + 5)));\\n//b2 = min(1,max(0,b2 + 0.1*sin(mid_att*0.284 + 6)));\\n\\n\\na1 = treb_att * .25;\\na2 = mid_att * .15;\\na3 = treb_att * .25;\\n\\n\\nr = sin(treb_att);\\nb = sin(treb_att);\\ng = sin(treb_att);","point_eqs_eel":"ma=ma+(above(bass_att,1)*3.1415*.01*bass_att);\\nma=ma-(above(treb_att,1)*3.1415*.01*treb_att);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\n//a=(above(bass+mid+treb,.8));\\n//a = bass_att * .35;\\n\\nr = sin(treb+att * .45);\\nb = sin(treb+att * .65);\\ng = sin(treb+att * .25);\\n\\n"},{"baseVals":{"enabled":1,"thick":1,"additive":1,"scaling":6.62306,"r":0.5,"g":0.5,"b":0.5},"init_eqs_eel":"","frame_eqs_eel":"//r = min(1,max(0,r + 0.1*(bass_att*0.217 + 1)));\\n//g = min(1,max(0,g + 0.1*(treb_att*0.191 + 2)));\\n//b = min(1,max(0,b + 0.1*(mid_att*0.232 + 4)));\\nr2 = min(1,max(0,r2 + 0.1*sin(bass_att*0.257 + 3)));\\ng2 = min(1,max(0,g2 + 0.1*sin(treb_att*0.237 + 5)));\\nb2 = min(1,max(0,b2 + 0.1*sin(mid_att*0.284 + 6)));\\na1 = treb_att * .25;\\na2 = mid_att * .15;\\na3 = treb_att * .25;\\n","point_eqs_eel":"ma=ma+(above(bass_att,1)*3.1415*.01*bass_att);\\nma=ma-(above(treb_att,1)*3.1415*.01*treb_att);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\n//a=(above(bass+mid+treb,.8));\\n//a = bass_att * .35;\\n\\nr = sin(treb+att * .45);\\nb = sin(treb+att * .65);\\ng = sin(treb+att * .25);\\n\\n"},{"baseVals":{"enabled":1,"samples":142,"thick":1,"scaling":8.9269,"r":0.6,"g":0},"init_eqs_eel":"","frame_eqs_eel":"//r = min(1,max(0,r + 0.1*(bass_att*0.217 + 1)));\\n//g = min(1,max(0,g + 0.1*(treb_att*0.191 + 2)));\\n//b = min(1,max(0,b + 0.1*(mid_att*0.232 + 4)));\\nr2 = min(1,max(0,r2 + 0.1*sin(bass_att*0.257 + 3)));\\ng2 = min(1,max(0,g2 + 0.1*sin(treb_att*0.237 + 5)));\\nb2 = min(1,max(0,b2 + 0.1*sin(mid_att*0.284 + 6)));\\n\\n\\nr = 255;\\nb = 255;\\ng = 255;","point_eqs_eel":"ma=ma+(above(bass_att,1)*3.1415*.01*bass_att);\\nma=ma-(above(treb_att,1)*3.1415*.01*treb_att);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\n//a=(above(bass+mid+treb,.8));\\n//a = bass_att * .35;\\n\\nr = sin(treb+att * .45);\\nb = sin(treb+att * .65);\\ng = sin(treb+att * .25);\\n\\n"}],"init_eqs_eel":"","frame_eqs_eel":"//Variables controling the glitch effect////////////////////////////////////////\\ndecayrate = 0.09;   //How fast the glitch effect decays back to original image\\ntrebresp = 2.8;    //Level of treb needed for effect to take place\\n////////////////////////////////////////////////////////////////////////////////\\n\\n\\ncdecay = pow(decayrate, 30/fps);\\ncount = above(treb, trebresp)*1 + (1-above(treb, 3))*count;\\ncount = count - above(count, cdecay)*cdecay;\\nq29=count;\\nmonitor = q29;\\n\\n\\n\\ndecay = 0;\\n\\ndt = 0.02;\\n\\nh = h + v*dt;\\n\\nv = v*0.986 + a*dt;\\na = -(h - 0.5)*0.4 + sqrt(- min(0,(w1v+w2v)*0.1)) - .175;\\n\\nmonitor = w2;\\n\\n\\nw1 = w1 + w1v*dt;\\nw1v = w1v*0.98 + w1a*dt;\\nw1a = -(w1)*20 - w2a*0.1   + av*30;\\n\\nw2 = w2 + w2v*dt;\\nw2v = w2v*0.98 + w2a*dt;\\nw2a = -(w2-w1)*20;\\n\\nbb = bb*0.99 + bass*0.02;\\nmm = mm*0.99 + mid*0.02;\\ntt = tt*0.99 + treb*0.02;\\n\\nmi = min(min(bb,mm),tt);\\nma = max(max(bb,mm),tt);\\nav = (bb+mm+tt-mi-ma);\\nq5 = av;\\navn = (av-mi)/(ma-mi);\\nav = abs(avo-avn);\\navo = avn;\\n\\nq1 = h*0.8 + 0.12;\\nq2 = (w1);\\nq3 = (w2 + w1);\\nq4 = 0.1+ avo*0.1;\\n\\n\\n\\nwave_r = 0.5 + 0.5*sin(frame*2.5);\\nwave_b = 0.5 + 0.5*sin(frame*0.5 + 1.094);\\nwave_g = 0.5 + 0.5*sin(frame*0.5 + 1.188);","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 uv_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = ((uv * texsize.xy) * 0.08);\\n  uv_1 = (uv - ((\\n    (sin(tmpvar_3) / cos(tmpvar_3))\\n   * texsize.zw) * (treb * 3.0)));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (texture (sampler_main, uv_1).xyz + (vec3(dot (texture (sampler_noise_lq, \\n    ((((texsize.xy * texsize_noise_lq.zw).x * uv) * 0.02) + (0.1 * rand_frame).xy)\\n  ), vec4(0.32, 0.49, 0.29, 0.0))) / 30.0));\\n  ret_2 = ((mix (tmpvar_4, \\n    (1.0 - tmpvar_4.zyx)\\n  , vec3(0.01, 0.01, 0.01)) - 0.03) - (0.2 * pow (\\n    (1.0 - rad)\\n  , \\n    (treb * 90.0)\\n  )));\\n  ret_2 = (ret_2 + (ret_2 * (vol * 0.001)));\\n  ret_2 = (ret_2 + (ret_2 * (treb * 0.025)));\\n  ret_2 = (ret_2 + 0.001);\\n  uv_1 = (uv_1 + ((treb_att * 0.001) * texture (sampler_main, uv_1)).xy);\\n  ret_2 = (ret_2 + ((\\n    (texture (sampler_blur3, uv_1).xyz * scale3)\\n   + bias3) * 0.05));\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = ret_2;\\n  ret = tmpvar_5.xyz;\\n }","comp":" shader_body { \\n  vec2 uv_1;\\n  vec3 crisp_2;\\n  vec2 uv3_3;\\n  vec2 uv2_4;\\n  vec3 ret_5;\\n  vec2 tmpvar_6;\\n  vec2 tmpvar_7;\\n  tmpvar_7 = (uv - 0.5);\\n  tmpvar_6 = (tmpvar_7 * aspect.xy);\\n  float tmpvar_8;\\n  tmpvar_8 = (0.1 / (sqrt(\\n    dot (tmpvar_6, tmpvar_6)\\n  ) + 0.05));\\n  vec2 tmpvar_9;\\n  float tmpvar_10;\\n  tmpvar_10 = (ang / 3.14);\\n  tmpvar_9.x = tmpvar_10;\\n  tmpvar_9.y = (tmpvar_8 * 1.5);\\n  uv2_4.y = (tmpvar_9.y + (0.1 * time));\\n  uv2_4.x = (tmpvar_10 + (0.02 * time));\\n  uv3_3.y = (tmpvar_8 + q30);\\n  uv3_3.x = (tmpvar_10 + (time / 32.0));\\n  crisp_2 = ((texture (sampler_main, fract(uv2_4)).xyz + (2.0 * texture (sampler_main, \\n    fract(uv3_3)\\n  ).xyz)) + ((2.0 * \\n    ((texture (sampler_blur2, fract(uv2_4)).xyz * scale2) + bias2)\\n  ) + (2.0 * \\n    ((texture (sampler_blur2, fract(uv3_3)).xyz * scale2) + bias2)\\n  )));\\n  crisp_2 = ((3.0 * crisp_2) * rad);\\n  float tmpvar_11;\\n  tmpvar_11 = clamp ((1.0 - (4.0 * rad)), 0.0, 1.0);\\n  ret_5 = ((crisp_2 + (\\n    ((vec3(1.0, 0.0, 1.0) * uv.y) * pow ((1.0 - rad), 8.0))\\n   * tmpvar_11)) + (tmpvar_11 * texture (sampler_main, fract(uv)).xyz));\\n  uv_1 = ((tmpvar_7 * aspect.xy) + 0.5);\\n  vec2 tmpvar_12;\\n  tmpvar_12 = (1.0 - uv_1);\\n  vec3 tmpvar_13;\\n  tmpvar_13 = (texture (sampler_main, uv_1).xyz + (2.0 * (\\n    (texture (sampler_blur2, uv_1).xyz * scale2)\\n   + bias2)));\\n  vec3 tmpvar_14;\\n  tmpvar_14 = (texture (sampler_main, tmpvar_12).xyz + (2.0 * (\\n    (texture (sampler_blur2, tmpvar_12).xyz * scale2)\\n   + bias2)));\\n  vec3 tmpvar_15;\\n  tmpvar_15 = mix (ret_5, mix ((tmpvar_13 * tmpvar_14), (tmpvar_13 + tmpvar_14), vec3((q29 * 0.16))), vec3((q29 * 0.5)));\\n  vec3 tmpvar_16;\\n  tmpvar_16 = mix (tmpvar_15, (1.0 - tmpvar_15), ((q29 * tmpvar_15) * (rad * \\n    (2.0 - q29)\\n  )));\\n  ret_5 = (tmpvar_16 * (tmpvar_16 + (treb * 0.001)));\\n  vec4 tmpvar_17;\\n  tmpvar_17.w = 1.0;\\n  tmpvar_17.xyz = ret_5;\\n  ret = tmpvar_17.xyz;\\n }"}')},5087:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":2,"gammaadj":1.14,"decay":1,"echo_zoom":1.002,"echo_orient":1,"wave_mode":4,"wave_thick":1,"wave_a":1.577,"wave_scale":0.01,"wave_smoothing":0,"wave_mystery":-0.24,"modwavealphastart":0.5,"modwavealphaend":1,"warpanimspeed":32.544,"warpscale":9.738,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"wave_y":0,"ob_size":0.005,"ob_r":0.01,"ob_a":0.6,"ib_size":0.26,"mv_x":16,"mv_y":16.8,"mv_l":0.15,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"//decay = 0.94","frame_eqs_eel":"dy = dy -0.0085;\\n//bass_effect = max(max(bass,bass_effect)-1.4,0);\\n//warp = if(above(bass_effect,0),10,0);\\nred_rand = rand(100);\\nblue_rand = rand(100);\\nwave_r = 0.01*red_rand + 0.2*sin(time*1.311);\\nwave_b = 0.01*blue_rand - 0.2*sin(time*1.46);\\nwave_g = 1-0.5*(wave_r+wave_b)+ 0.2*cos(time*0.789);","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 tmpvar_1;\\n  tmpvar_1 = max (texture (sampler_fc_main, uv).xyz, (texture (sampler_fc_main, mix (uv, uv_orig, vec2(0.33, 0.33))).xyz * 0.95));\\n  vec2 x_2;\\n  x_2 = (uv - uv_orig);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = (((\\n    mix (tmpvar_1, (floor((\\n      (tmpvar_1 * vec3(7.0, 6.0, 8.0))\\n     + 0.25)) / vec3(7.0, 6.0, 8.0)), vec3(0.1, 0.1, 0.1))\\n   * 0.995) - 0.001) - ((1.0 - \\n    clamp ((sqrt(dot (x_2, x_2)) * 40.0), 0.0, 1.0)\\n  ) * 0.002));\\n  ret = tmpvar_3.xyz;\\n }","comp":" shader_body { \\n  vec2 uv2_1;\\n  vec3 ret_2;\\n  uv2_1 = (uv + (vec2(1.0, 0.0) * texsize.zw));\\n  float tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(-1.0, 0.0) * texsize.zw));\\n  float tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(0.0, 1.0) * texsize.zw));\\n  float tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(0.0, -1.0) * texsize.zw));\\n  vec3 tmpvar_6;\\n  tmpvar_6.z = 0.14;\\n  tmpvar_6.x = (tmpvar_3 - tmpvar_4);\\n  tmpvar_6.y = (tmpvar_5 - ((\\n    (texture (sampler_main, uv2_1).xyz + (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4))\\n   + \\n    (((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2) * 0.15)\\n  ) + (\\n    ((texture (sampler_blur3, uv2_1).xyz * scale3) + bias3)\\n   * 0.1)).x);\\n  ret_2 = (0.5 + (0.5 * normalize(tmpvar_6)));\\n  vec2 x_7;\\n  x_7 = (ret_2.xy - 0.5);\\n  ret_2 = (ret_2 * clamp ((\\n    sqrt(dot (x_7, x_7))\\n   * 5.0), 0.0, 1.0));\\n  ret_2 = ret_2.xxy;\\n  ret_2 = (ret_2 + 1.15);\\n  ret_2 = (ret_2 * mix (ret_2, (ret_2 * \\n    (((texture (sampler_blur3, uv).xyz * scale3) + bias3) - ((texture (sampler_blur1, uv).xyz * scale1) + bias1))\\n  ), pow (hue_shader.zxy, ret_2)));\\n  ret_2 = (ret_2 * ret_2);\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = ret_2;\\n  ret = tmpvar_8.xyz;\\n }"}')},555:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1.14,"decay":1,"echo_zoom":1.002,"echo_orient":1,"wave_mode":4,"wave_thick":1,"wave_a":1.577,"wave_scale":0.01,"wave_smoothing":0,"wave_mystery":-0.24,"modwavealphastart":0.5,"modwavealphaend":1,"warpanimspeed":32.544,"warpscale":9.738,"dy":0.008,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"wave_y":0,"ob_size":0.005,"ob_r":0.01,"ob_a":0.6,"ib_size":0.26,"mv_x":16,"mv_y":16.8,"mv_l":0.15,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"//decay = 0.94","frame_eqs_eel":"dy = dy -0.01;\\n//bass_effect = max(max(bass,bass_effect)-1.4,0);\\n//warp = if(above(bass_effect,0),10,0);\\nred_rand = int(rand(100));\\nblue_rand = int(rand(100));\\nwave_r = 0.01*red_rand + 0.2*sin(time*1.311);\\nwave_b = 0.01*blue_rand - 0.2*sin(time*1.46);\\nwave_g = 1-0.5*(wave_r+wave_b)+ 0.2*cos(time*0.789);","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 z_1;\\n  vec3 tmpvar_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (0.1 * texsize.zw);\\n  tmpvar_2 = (0.25 * ((\\n    (texture (sampler_main, (uv + tmpvar_3)).xyz + texture (sampler_main, (uv + (tmpvar_3 * vec2(-1.0, 1.0)))).xyz)\\n   + texture (sampler_main, \\n    (uv + (tmpvar_3 * vec2(1.0, -1.0)))\\n  ).xyz) + texture (sampler_main, (uv - tmpvar_3)).xyz));\\n  float tmpvar_4;\\n  tmpvar_4 = ((tmpvar_2.x * tmpvar_2.y) * tmpvar_2.y);\\n  z_1.x = (tmpvar_2.x + ((\\n    -(tmpvar_4)\\n   + \\n    (0.035 * (1.0 - tmpvar_2.x))\\n  ) * 4.0));\\n  z_1.y = (tmpvar_2.y + ((tmpvar_4 - \\n    (0.095 * tmpvar_2.y)\\n  ) * 4.0));\\n  z_1.z = tmpvar_2.z;\\n  z_1.x = (z_1.x + (0.4 * (\\n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\\n   - texture (sampler_main, uv).xyz)).x);\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = (z_1 + (0.05 * (\\n    (texture (sampler_noise_lq, (((uv * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)).xyz * 2.0)\\n   - 1.0)));\\n  ret = tmpvar_5.xyz;\\n }","comp":" shader_body { \\n  vec2 uv2_1;\\n  float blur_2;\\n  float crisp_3;\\n  vec3 ret_4;\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (uv - 0.5);\\n  uv2_1 = ((tmpvar_5 * 0.8) + 0.5);\\n  crisp_3 = texture (sampler_main, uv2_1).y;\\n  blur_2 = ((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1).y;\\n  ret_4 = (texture (sampler_main, ((tmpvar_5 * 0.6) + 0.5)).zzz * (1.0 - (blur_2 * 1.15)));\\n  vec3 tmpvar_6;\\n  tmpvar_6 = max (ret_4, vec3(crisp_3));\\n  uv2_1 = uv;\\n  crisp_3 = texture (sampler_main, uv).x;\\n  blur_2 = ((texture (sampler_blur1, uv).xyz * scale1) + bias1).x;\\n  ret_4 = (tmpvar_6 * (1.0 - (blur_2 * 1.15)));\\n  vec3 tmpvar_7;\\n  tmpvar_7 = max (ret_4, vec3(crisp_3));\\n  ret_4 = tmpvar_7;\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = tmpvar_7;\\n  ret = tmpvar_8.xyz;\\n }"}')},2726:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.9,"echo_zoom":1.169,"wave_mode":6,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":4.224,"wave_scale":3.672,"wave_smoothing":0.666,"wave_mystery":0.1,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":0.037,"warpscale":0.015,"warp":0.033,"wave_r":0.1,"wave_g":0.1,"wave_b":0.1,"ob_size":0.005,"ob_a":1,"ib_size":0.005,"ib_r":0,"ib_g":1,"ib_b":0,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"x":0.37,"rad":3,"ang":3.64425,"r":0,"a":0.5,"g2":0,"a2":0.3,"border_a":1},"init_eqs_eel":"t1 = rand(100)*0.01;\\nt2 = rand(100)*0.01;","frame_eqs_eel":"ang = time*(0.3 + 0.1*t1);\\nrad = rad * (0.9 + 0.2*t2);\\nr = min(1,max(0,r + 0.2*sin(time*0.417 + 1)));\\ng = min(1,max(0,g + 0.2*sin(time*0.391 + 2)));\\nb = min(1,max(0,b + 0.2*sin(time*0.432 + 4)));\\nr2 = min(1,max(0,r2 + 0.2*sin(time*0.657 + 3)));\\ng2 = min(1,max(0,g2 + 0.2*sin(time*0.737 + 5)));\\nb2 = min(1,max(0,b2 + 0.2*sin(time*0.884 + 6)));"},{"baseVals":{"enabled":1,"sides":5,"additive":1,"textured":1,"x":0.37,"rad":0.70653,"ang":3.64425,"g":1,"b":1,"a":0.8,"r2":1,"b2":1,"border_a":0},"init_eqs_eel":"t1 = rand(100)*0.01;\\nt2 = rand(100)*0.01;","frame_eqs_eel":"x = x + 0.05*sin(time*1.25+3);\\ny = y + 0.03*sin(time*1.49+1);\\nang = time*(0.3 + 0.1*t1);\\nrad = rad * (0.9 + 0.2*t2);\\nr = min(1,max(0,r + 0.1*sin(time*0.417 + 1)));\\ng = min(1,max(0,g + 0.1*sin(time*0.391 + 2)));\\nb = min(1,max(0,b + 0.1*sin(time*0.432 + 4)));\\nr2 = min(1,max(0,r2 + 0.1*sin(time*0.457 + 3)));\\ng2 = min(1,max(0,g2 + 0.1*sin(time*0.437 + 5)));\\nb2 = min(1,max(0,b2 + 0.1*sin(time*0.484 + 6)));"},{"baseVals":{"enabled":1,"sides":5,"additive":1,"textured":1,"x":0.67,"y":0.43,"rad":0.70653,"ang":4.20974,"g":1,"b":1,"a":0.8,"r2":1,"b2":1,"border_a":0},"init_eqs_eel":"t1 = rand(100)*0.01;\\nt2 = rand(100)*0.01;","frame_eqs_eel":"x = x + 0.05*sin(time*2.17);\\ny = y + 0.03*sin(time*1.83);\\nang = time*(0.3 + 0.1*t1);\\nrad = rad * (0.9 + 0.2*t2);\\nr = min(1,max(0,r + 0.1*sin(time*0.417 + 1)));\\ng = min(1,max(0,g + 0.1*sin(time*0.391 + 2)));\\nb = min(1,max(0,b + 0.1*sin(time*0.432 + 4)));\\nr2 = min(1,max(0,r2 + 0.1*sin(time*0.457 + 3)));\\ng2 = min(1,max(0,g2 + 0.1*sin(time*0.437 + 5)));\\nb2 = min(1,max(0,b2 + 0.1*sin(time*0.484 + 6)));"},{"baseVals":{"enabled":1,"sides":6,"rad":0.16122,"r":0.56,"g":1,"g2":0,"b2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":1},"init_eqs_eel":"","frame_eqs_eel":"x = x + 0.2*sin(time*1.14);\\ny = y + 0.1*sin(time*0.93+2);"}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"mv_x=64;mv_y=48;\\nnut=0;\\nstp=0;stq=0;\\nrtp=0;rtq=0;\\nwvr=0;\\ndecay=0;\\ndcsp=0;\\nwarp=0","frame_eqs_eel":"zoom=1;\\n//krash\'s beat detection code\\nvolume = 0.3*(bass+mid+att);\\nbeatrate = equal(beatrate,0) + (1-equal(beatrate,0))*(below(volume,0.01) + (1-below(volume,0.01))*beatrate);\\nlastbeat = lastbeat + equal(lastbeat,0)*time;\\nmeanbass_att = 0.1*(meanbass_att*9 + bass_att);\\npeakbass_att = max(bass_att,peakbass_att);\\nbeatrate = max(if(beat,if(below(time-lastbeat,2*beatrate),0.1*(beatrate*9 + time - lastbeat),beatrate),beatrate),0.1);\\npeakbass_att = beat*bass_att + (1-beat)*peakbass_att*(above(time - lastbeat, 2*beatrate)*0.95 + (1-above(time - lastbeat, 2*beatrate))*0.995);\\nlastbeat = beat*time + (1-beat)*lastbeat;\\npeakbass_att = max(peakbass_att,1.1*meanbass_att);\\nbeat = above(volume,0.8)*below(peakbass_att - bass_att, 0.05*peakbass_att)*above(time - lastbeat, 0.1 + 0.5*(beatrate - 0.1));\\nbeatcounter = beatcounter + beat;\\nmode = if(beat*equal(beatcounter%2,0),1-mode,mode);\\nflip = 2*mode-1;\\nmonitor=flip;\\nq8=flip;\\n\\nangadv=angadv+beat;\\nangadv=if( above(angadv,5) , 2 , angadv );\\nq7=angadv;\\n\\n\\ndecay=0.95;\\nzoom=1.002;\\n\\nvol=(bass_att+mid_att+treb_att)*0.25;\\nvol=vol*vol;\\nmtime=mtime+vol*0.1*flip*(37/fps);\\n\\nq1=mtime*0.4;\\n\\nwarp=0.0;\\n\\ncx=sin(mtime*0.2)*0.4 + 0.5;\\ncy=sin(mtime*0.33);\\ncys=sign(cy);\\ncy=cy*cy*cys;\\ncy=cy*0.4+0.5;\\n\\n//cx=sin(time)*0.5+0.5;\\n//cy=cos(time)*0.5+0.5;\\n//cx=0.5;\\n//cy=0.5;\\nrot=sin(time*0.25)*0.31;\\n\\n\\nq23 = rand(1000)/1000;\\nq24 = rand(1000)/1000;\\nq25 = (rand(1000)/1000)*6.28;\\nq26 = q25 - 3.14;\\nq27 = (rand(1000)/8000)+0.1;\\n\\nq28 = rand(1000)/1000;\\nq29 = rand(1000)/1000;\\nq30 = (rand(1000)/1000)*6.28;\\nq31 = q30 - 3.14;\\nq32 = (rand(1000)/8000)+0.1;","pixel_eqs_eel":"//tm=time+(sin(time)*rad);\\n//var=tan(time)*treb;\\ntbr=0.7+treb*0.3;\\nvar=-2*tbr*0.75;\\n\\nag=atan( (y-0.5-(cy-0.5))/(x-0.5-(cx-0.5)) )*1.75;\\nstar=sin(ang*q7)*tbr;\\n\\nrdd=max( abs(x-0.5) , abs(y-0.5) )*4 ;\\nzm=1+(rdd/40)+(var/40)+star*0.003 ;\\n\\n//sx=zm;\\n//sy=zm;\\n//sx=1+star*0.1;sy=1+star*0.1;\\nsx=0.8;sy=sx;\\n//rot=star*0.01*tbr","warp":" shader_body { \\n  vec2 my_uv_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = ((uv - 0.5) * vec2((1.0 + q1)));\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = ((tmpvar_2.x * tmpvar_2.x) - (tmpvar_2.y * tmpvar_2.y));\\n  tmpvar_3.y = ((2.0 * tmpvar_2.x) * tmpvar_2.y);\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = ((tmpvar_3.x * -0.12) - (tmpvar_3.y * 0.74));\\n  tmpvar_4.y = ((tmpvar_3.x * 0.74) + (-0.12 * tmpvar_3.y));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = ((tmpvar_3.x * (tmpvar_4.x + 1.0)) + (tmpvar_3.y * tmpvar_4.y));\\n  tmpvar_5.y = ((tmpvar_3.y * (tmpvar_4.x + 1.0)) - (tmpvar_3.x * tmpvar_4.y));\\n  my_uv_1 = (tmpvar_5 * (1.0/((\\n    ((tmpvar_4.x + 1.0) * (tmpvar_4.x + 1.0))\\n   + \\n    (tmpvar_4.y * tmpvar_4.y)\\n  ))));\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = (texture (sampler_fc_main, (my_uv_1 - floor(my_uv_1))) * 0.94).xyz;\\n  ret = tmpvar_6.xyz;\\n }","comp":""}')},5274:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.7,"decay":0.955,"modwavealphabyvolume":1,"wrap":0,"darken":1,"solarize":1,"wave_a":1.059,"wave_scale":0.706,"wave_smoothing":0.126,"wave_mystery":-0.28,"modwavealphastart":0.81,"modwavealphaend":1.35,"warpanimspeed":5.278,"warpscale":0.01,"zoomexp":0.29999,"zoom":1.05101,"warp":0.01,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0.005,"ob_a":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":32,"additive":1,"thickoutline":1,"num_inst":22,"rad":0.12953,"r":0,"g":0.5,"g2":0.5,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"trans = if(equal(q3,3),.15,0);\\na = trans;\\na2 = trans;\\nborder_a = 0;\\n\\ninstance_counter = 3.14*instance*(2/(num_instance));\\nx = q1 + (.1+0.1*treb_att) * (1/q5) * sin(instance_counter);\\ny = q2 + (.1+0.1*treb_att) * (1/q4) * cos(instance_counter);"},{"baseVals":{"enabled":1,"sides":32,"additive":1,"thickoutline":1,"num_inst":22,"rad":0.12953,"r":0,"b":0.5,"g2":0,"b2":0.5,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"trans = if(equal(q3,6),.15,0);\\na = trans;\\na2 = trans;\\nborder_a = 0;\\n\\ninstance_counter = 3.14*instance*(2/(num_instance));\\nx = q1 + (.1+0.1*mid_att) * (1/q5) * sin(instance_counter);\\ny = q2 + (.1+0.1*mid_att) * (1/q4) * cos(instance_counter);"},{"baseVals":{"enabled":1,"sides":32,"additive":1,"thickoutline":1,"num_inst":22,"rad":0.12953,"r":0.5,"r2":0.5,"g2":0,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"trans = if(equal(q3,9),.15,0);\\na = trans;\\na2 = trans;\\nborder_a = 0;\\n\\ninstance_counter = 3.14*instance*(2/(num_instance));\\nx = q1 + (.1+0.1*bass_att) * (1/q5) * sin(instance_counter);\\ny = q2 + (.1+0.1*bass_att) * (1/q4) * cos(instance_counter);"},{"baseVals":{"enabled":1,"sides":100,"textured":1,"rad":0.25481,"g":1,"b":1,"r2":1,"b2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"count = if(below(count,9),count+1,0);\\n\\nq1 = .5;\\nq2 = .5;\\nq3 = count;\\nq4 = aspectx;\\nq5 = aspecty;\\n//zoom = .99 + 0.1*bass_att+0.05*bass;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = (((texture (sampler_blur2, \\n    (uv + vec2(0.0009, 0.0))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    (uv - vec2(0.0009, 0.0))\\n  ).xyz * scale2) + bias2)).y;\\n  tmpvar_2.y = (((texture (sampler_blur2, \\n    (uv + vec2(0.0, 0.0009))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    (uv - vec2(0.0, 0.0009))\\n  ).xyz * scale2) + bias2)).y;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (uv - (tmpvar_2 * 0.01));\\n  ret_1.y = texture (sampler_fc_main, (tmpvar_3 - floor(tmpvar_3))).y;\\n  ret_1.y = (ret_1.y + ((ret_1.y - \\n    ((texture (sampler_blur3, (tmpvar_3 - floor(tmpvar_3))).xyz * scale3) + bias3)\\n  .y) * 0.1));\\n  ret_1.y = (ret_1.y + 0.006);\\n  ret_1.y = ret_1.y;\\n  ret_1.x = ret_1.y;\\n  ret_1.z = ret_1.y;\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = ret_1;\\n  ret = tmpvar_4.xyz;\\n }","comp":" shader_body { \\n  vec2 uv1_1;\\n  vec3 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv).xyz;\\n  vec2 tmpvar_3;\\n  tmpvar_3.y = 0.0;\\n  tmpvar_3.x = texsize.z;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = 0.0;\\n  tmpvar_4.y = texsize.w;\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = (texture (sampler_main, (uv - tmpvar_3)).xyz - texture (sampler_main, (uv + tmpvar_3)).xyz).x;\\n  tmpvar_5.y = (texture (sampler_main, (uv - tmpvar_4)).xyz - texture (sampler_main, (uv + tmpvar_4)).xyz).x;\\n  uv1_1 = ((0.3 * cos(\\n    (((uv - 0.5) * 2.0) + 1.7)\\n  )) - (2.0 * tmpvar_5));\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = (dot ((\\n    (-(tmpvar_2) / 4.0)\\n   + \\n    ((6.0 * vec3(clamp ((0.03 / \\n      sqrt(dot (uv1_1, uv1_1))\\n    ), 0.0, 1.0))) * (-0.08 + tmpvar_2))\\n  ), vec3(0.32, 0.49, 0.29)) * rand_preset).xyz;\\n  ret = tmpvar_6.xyz;\\n }"}')},609:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1.65,"decay":0.985,"echo_zoom":1.069,"echo_alpha":0.5,"wrap":0,"brighten":1,"invert":1,"wave_a":0.001,"warpanimspeed":5.278,"warpscale":0.01,"zoomexp":1.12682,"zoom":1.0406,"warp":0.01,"ob_size":0.005,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"thickoutline":1,"num_inst":13,"r":0,"b":1,"a":0.6,"g2":0,"b2":0.5,"a2":0.5,"border_a":0.6},"init_eqs_eel":"","frame_eqs_eel":"x = q1 + rand(15)*bass_att*0.02;\\ny = q2 + rand(15)*mid_att*0.02;\\nrad = 0.076 + 0.004*rand(11);\\n\\nb = .35+.2*sin(time*0.73)+rand(100)*0.001;\\nb2 = .35+.2*sin(time*0.73)+rand(100)*0.001;\\ng = .55+.125*sin(time*.43)+rand(100)*0.001;\\ng2 = .55+.125*sin(time*.43)+rand(100)*0.001;"},{"baseVals":{"enabled":1,"thickoutline":1,"num_inst":14,"rad":0.0999,"r":0,"a":0.6,"g2":0,"a2":0.5,"border_a":0.6},"init_eqs_eel":"","frame_eqs_eel":"x = q2 + rand(15)*mid_att*0.02;\\ny = 1-q1 + rand(15)*treb_att*0.02;\\nrad = 0.076 + 0.004*rand(11);\\n\\nr = .4 +.2*sin(time*.53)+rand(100)*0.001;\\nr2 = .4 +.2*sin(time*.53)+rand(100)*0.001;\\nb  = .55 +.12*sin(time*.63)+rand(100)*0.001;\\nb2  = .55 +.12*sin(time*.63)+rand(100)*0.001;"},{"baseVals":{"textured":1,"rad":2.29737,"tex_zoom":0.42077,"g":1,"b":1,"a":0.2,"r2":1,"b2":1,"a2":0.2,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"q1 = rand(1000)*0.001;\\nq2 = rand(1000)*0.001;","pixel_eqs_eel":"","warp":"","comp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 8.0);\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1)).y;\\n  tmpvar_3.y = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1)).y;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (uv + (tmpvar_3 * 0.55));\\n  vec3 tmpvar_5;\\n  tmpvar_5 = mix (ret_1, (1.0 - ret_1), ((0.7 * \\n    ((texture (sampler_blur1, tmpvar_4).xyz * scale1) + bias1)\\n  ) + (0.2 * texture (sampler_main, uv).xyz)));\\n  vec3 tmpvar_6;\\n  tmpvar_6 = mix (tmpvar_5, ((\\n    (tmpvar_5 - (0.1 * ((texture (sampler_blur3, tmpvar_4).xyz * scale3) + bias3)))\\n   + \\n    (0.1 * ((texture (sampler_blur1, (\\n      (tmpvar_4 * 1.25)\\n     - 0.125)).xyz * scale1) + bias1))\\n  ) + (0.42 * texture (sampler_main, tmpvar_4).xyz)), vec3(0.25, 0.25, 0.25));\\n  vec3 x_7;\\n  x_7 = (tmpvar_6 - 0.5);\\n  ret_1 = (tmpvar_6 * clamp ((\\n    sqrt(dot (x_7, x_7))\\n   * 5.0), 0.0, 1.0));\\n  ret_1 = (vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))) + 1.25);\\n  ret_1 = (ret_1 * (ret_1 * 0.45));\\n  ret_1 = (ret_1 * mix (ret_1, (\\n    (1.3 * ret_1)\\n   * \\n    ((((texture (sampler_blur3, uv).xyz * scale3) + bias3) - ((texture (sampler_blur1, uv).xyz * scale1) + bias1)) - (0.25 * ((texture (sampler_blur2, tmpvar_4).xyz * scale2) + bias2)))\\n  ), pow (hue_shader.zxy, ret_1)));\\n  ret_1 = (ret_1 + 0.03);\\n  ret_1 = (ret_1 * ret_1);\\n  ret_1 = (ret_1 * hue_shader.zxy);\\n  ret_1 = (ret_1 * 1.75);\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = ret_1;\\n  ret = tmpvar_8.xyz;\\n }"}')},8729:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":0,"gammaadj":1,"decay":0.983,"echo_zoom":0.998169,"echo_alpha":0.5,"echo_orient":3,"wave_mode":4,"bmotionvectorson":0,"wave_a":7.74,"wave_scale":0.372036,"wave_smoothing":0.387,"wave_mystery":-0.36,"warpanimspeed":1.334503,"warpscale":1.327831,"zoomexp":1.026514,"fshader":1,"zoom":1.374512,"rot":0.02,"cx":0.17,"cy":0.830001,"warp":1.779457,"sx":0.990099,"wave_r":0.27,"wave_g":0.27,"wave_b":0.27,"ob_size":0.005,"ob_r":0.36,"ob_g":0.36,"ob_b":0.36,"ob_a":0.58,"ib_r":0.45,"ib_g":0.450001,"ib_b":0.4499,"ib_a":0.53},"shapes":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"warp=0;\\nold_bass_flop=bass_flop;\\nold_treb_flop=treb_flop;\\nold_mid_flop=mid_flop;\\nchaos=.9+.1*sin(pulse);\\nentropy=if(bnot(entropy),2,if(equal(pulse,-20),1+rand(3),entropy));\\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*chaos+1.3);\\nbass_flop=abs(bass_flop-equal(bass_thresh,2));\\ntreb_thresh=above(treb_att,treb_thresh)*2 + (1-above(treb_att,treb_thresh))*((treb_thresh-1.3)*chaos+1.3);\\ntreb_flop=abs(treb_flop-equal(treb_thresh,2));\\nmid_thresh=above(mid_att,mid_thresh)*2 + (1-above(mid_att,mid_thresh))*((mid_thresh-1.3)*chaos+1.3);\\nmid_flop=abs(mid_flop-equal(mid_thresh,2));\\nbass_changed=bnot(equal(old_bass_flop,bass_flop));\\nmid_changed=bnot(equal(old_mid_flop,mid_flop));\\ntreb_changed=bnot(equal(old_treb_flop,treb_flop));\\nbass_residual = bass_changed*sin(pulse*bass_thresh*.1*entropy) + bnot(bass_changed)*bass_residual;\\ntreb_residual = treb_changed*sin(pulse*treb_thresh*.1*entropy) + bnot(treb_changed)*treb_residual;\\nmid_residual = mid_changed*sin(pulse*mid_thresh*.1*entropy) + bnot(mid_changed)*mid_residual;\\npulse=if(above(abs(pulse),20),-20,pulse+.2*bor(bor(bass_changed*bnot(treb_changed),treb_changed*bnot(bass_changed))*bnot(mid_changed),mid_changed)+(mid+bass+treb)*entropy*.025);\\nq1=mid_residual;\\nq2=bass_residual;\\nq3=treb_residual;\\nq4=sin(pulse);\\nq5=sin(pulse/2);\\nwave_r=wave_r+.5*bass_residual;\\nwave_r=wave_g+.5*mid_residual;\\nwave_r=wave_b+.5*treb_residual;\\nwave_mystery=mid_residual;\\nob_r=if(bass_flop,treb_flop,wave_r);\\nob_b=if(treb_flop,mid_flop,wave_b);\\nob_g=if(mid_flop,bass_flop,wave_g);\\nob_a=.03+.02*wave_r;\\nob_size=.05+.04*treb_residual;\\nib_r=if(bass_flop,ob_b,ob_g);\\nib_b=if(treb_flop,ob_g,ob_r);\\nib_g=if(mid_flop,ob_r,ob_b);\\nib_a=.03+.02*wave_g;\\nib_size=.05+.04*bass_residual;\\nib_r = ib_r + 0.2*sin(time*0.5413);\\nib_g = ib_g + 0.2*sin(time*0.6459);\\nib_b = ib_b + 0.2*sin(time*0.4354);\\nrot = rot + 0.040*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );\\nzoom=max(0.98, min(0.15+0.8*bass_att, 1.75 ));","pixel_eqs_eel":"radix=if(above(q3,0),min(x,y),max(x,y));\\nradix=if(above(q2,0),min(radix,rad),max(radix,rad));\\nrot=if(above(q4,0),rad*.2*q5,0);\\nzoom=if(above(q2,0),zoom,if(above(q3,0),1+q1*.05,1+.07*cos(radix*10*q1)));","warp":"","comp":""}')},9523:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":0,"gammaadj":1,"decay":0.985,"echo_zoom":1.000224,"echo_alpha":0.5,"echo_orient":1,"wave_mode":1,"wave_dots":1,"wave_brighten":0,"wrap":0,"darken_center":1,"wave_a":1.0031,"wave_scale":1.004873,"wave_smoothing":0,"wave_mystery":-0.5,"modwavealphastart":1,"modwavealphaend":1.01,"warpanimspeed":0.999994,"warpscale":1.002076,"zoomexp":1.00183,"fshader":1,"zoom":1.077494,"warp":0.01,"wave_r":0,"wave_g":0.5,"wave_b":0.8,"ob_size":0,"ib_size":0.03,"ib_r":0.38,"ib_g":0.27,"ib_b":0.03,"ib_a":0.3,"mv_x":10.879999,"mv_y":11.52,"mv_l":5,"mv_r":0,"mv_b":0,"mv_a":0.25},"shapes":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_mystery=abs(sin(time*0.51))*-1;\\ncx=cx+(sin(time)*if(above(sin(time),0),(-1+bass),1.3))*0.5;\\ncy=cy+(cos(time)*if(below(sin(time),0),(-1+bass),1.3))*0.6;\\nmv_x=mv_x+sin(time/1.8)*3;\\nmv_y=mv_x-sin(time/2)*3.5;\\nwave_r=bass;\\nwave_g=wave_g+sin(time*0.74)*0.3;\\nwave_b=wave_b+sin(time*0.83)*0.2;\\nmv_g=mv_g*abs(sin(time));\\nmv_r=bass;\\nmv_b=treb;\\nib_size=ib_size+bass*0.15;\\nrot=sin(time)*0.03;\\nib_r=abs(sin(time*1.5))*0.4;\\nib_g=abs(sin(time*1.53))*0.5 ;\\nib_b=abs(sin(time*1.51))*0.45 ;","pixel_eqs_eel":"zoom=zoom+rad*0.1;","warp":"","comp":""}')},7001:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":0,"gammaadj":1.916999,"decay":1,"echo_zoom":0.999609,"echo_alpha":0.5,"echo_orient":3,"additivewave":1,"wave_thick":1,"darken":1,"wave_a":1,"wave_scale":1.028413,"wave_smoothing":0.45,"wave_mystery":-0.6,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":0.07316,"warpscale":0.543568,"zoom":0.999514,"warp":0.01,"wave_b":0.65,"wave_x":0.7499,"wave_y":0.7199,"ob_size":0.02,"ob_a":0.007,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":0.006,"mv_a":0},"shapes":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"warp = 0;\\nzoom = 1;\\nrot = 0.01;","frame_eqs_eel":"wave_b = if(below(treb, 2),1,0);\\ndecay = if(equal(frame % 20,0),.99,1);\\ndx = if(equal(frame % 100,0),.001,0);\\n\\nrot = .05 *cos(time*.4);\\nwave_x = (wave_x-.45)*sin(time*.4) + wave_x;\\nwave_y = (wave_y-.45)*sin(time*.4) + wave_y;\\nzoom = 1- cos(time*.4)*.05;\\n//rot = -0.005;\\nwave_x = .5+(wave_x-.5)*cos(time*5);\\nwave_y = .5+(wave_y-.5)*sin(time*5);\\nib_a = cos(time*.4)*-.5+.5;\\nob_a = ib_a;\\nob_r = cos(time)*.5+.5;\\nob_b = .5;","pixel_eqs_eel":"","warp":"","comp":""}')},5899:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":2,"gammaadj":1,"echo_zoom":1,"echo_orient":3,"wave_mode":6,"additivewave":1,"wave_thick":1,"wave_brighten":0,"wave_a":4.099998,"wave_scale":0.430333,"wave_smoothing":0.63,"wave_mystery":1,"modwavealphastart":0.71,"modwavealphaend":1.3,"warp":0.001,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"wave_x":0.97,"ob_size":0.005,"ib_size":0.26,"mv_x":33.152,"mv_y":28.799997,"mv_dx":0.006,"mv_l":1,"mv_b":0,"mv_a":0.4},"shapes":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"mv_g=1-bass_att*.4;\\nbeat=if(above(bass*bass_att,4.5),1-beat,beat);\\nq1=beat*2-1;\\n\\namp =amp*.8+.2*(bass_att+mid_att+treb_att)*.3;\\nq2 = min(amp,1);\\ntrebcap=trebcap*.7+.16*treb;\\nq3=trebcap*2;\\nmonitor = q3;","pixel_eqs_eel":"wang = (3+q3)*x+time*1.7+bass*.1;\\nin = 0;\\nin = in + below(abs(x-.25),.05)*below(abs(y-.5),.25);\\nin = below(abs(y-(.5+.5*sin(wang)*q2)),.1);\\nin=bnot(bnot(in));\\ndx = .02*in;\\ndy = .08*cos(wang)*q2*in;\\n\\ndx = dx+bnot(in)*.005*q1;\\ndy = dy+bnot(in)*cos(wang)*-.01*q1;","warp":"","comp":""}')},9835:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1,"decay":1,"echo_zoom":1,"wave_mode":1,"wave_dots":1,"wave_thick":1,"modwavealphabyvolume":1,"wrap":0,"wave_a":0.001,"wave_scale":2.346,"wave_smoothing":0.45,"wave_mystery":0.08,"modwavealphastart":0,"modwavealphaend":1.32,"warpscale":1.331,"zoom":0.99951,"warp":0.0101,"wave_r":0,"wave_g":0.99,"ob_size":0.005,"ob_a":0.1,"ib_size":0,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"rad":0.04896,"tex_ang":1.00531,"tex_zoom":1.53117,"r":0.5,"g":1,"b":0.9,"r2":0.83,"g2":0.93,"b2":0.8,"a2":1,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"xi = xi - dx*q22/200;\\nyi = yi - dy*q23/200;\\n\\nlow = 0; \\nhigh = 1;\\n\\nk0x = below(xi,low);\\nk1x = above(xi,high);\\nk0y = below(yi,low);\\nk1y = above(yi,high);\\n\\ndx = k0x*1 + k1x*-1;\\ndy = k0y*1 + k1y*-1;\\n\\n//xi = 0; yi = 0;\\nx = xi;\\ny = yi;\\n\\ntrel = time/2+q20;\\n\\nx = .5+sin(trel*2);\\ny = .5+cos(trel*1.3 +q28/3);\\n\\na = q26/4+.2; \\n//a = 1;"},{"baseVals":{"thickoutline":1,"x":0.4,"rad":2.36696,"tex_ang":3.45575,"tex_zoom":0.99305,"r":0.5,"b":1,"a":0.2,"r2":0.7,"g2":0.4,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"a2 =0;a = 0;\\na = q24/2;"},{"baseVals":{"enabled":1,"x":0.503,"rad":0.03886,"tex_zoom":0.60986,"g":0.1,"a":0.9,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = rand(10)/10;\\ny = rand(10)/10;\\n\\nr = rand(4)/3;\\ng = rand(4)/3;\\nb = rand(4)/3;\\n\\na = min(q21/2 ,.9);\\nrad = a *a/3 ;\\n"},{"baseVals":{"sides":63,"textured":1,"y":1,"rad":0.54822,"tex_zoom":0.49981,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"sep":120,"additive":1,"scaling":0.89152,"smoothing":0.82,"a":0.6,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t2 = t2 + bass_att;","point_eqs_eel":"k1 = (sample*100)%2;\\nk2 = (sample*100)%4;\\nxi = value1*k1 + xi*(1-k1);\\nyi = value2*(1-k1) + yi*k1;\\n\\nx = .5 + xi;\\ny = .5 + yi;\\n\\na = q22/8; \\na = min(a,.2);"},{"baseVals":{"usedots":1,"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"tm = time*.1;\\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\\n\\ntic = min(time - tin,1);\\ntin = time;\\n\\ntva = (tic*q1*.5);\\ntvb = (tic*q2*.5);\\ntvc = (tic*q3*.5);\\n\\nq1 = tva;\\nq2 = tvb;\\nq3 = tvc;\\n\\nsz = .5;\\nlen = q4;\\nt4 = len;","point_eqs_eel":"xi = rand(100)/100;\\nyi = rand(100)/100;\\n\\nx = xi; y = yi;\\n\\na = q21/15;"},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"r":0,"g":0.2,"b":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"tm = time*.1;\\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\\n\\ntic = min(time - tin,1);\\ntin = time;\\n\\ntva = (tic*q1*.5);\\ntvb = (tic*q2*.5);\\ntvc = (tic*q3*.5);\\n\\nq1 = tva;\\nq2 = tvb;\\nq3 = tvc;\\n\\nsz = .5;\\nlen = 1;\\nt4 = len;","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.5*sin(time*1.13);\\nwave_g = wave_g + 0.5*sin(time*1.23);\\nwave_b = wave_b + 0.5*sin(time*1.33);\\n\\nwave_x = wave_x + 0.2*sin(0.32*time);\\nwave_y = wave_y + 0.2*cos(0.32*time);\\n\\nob_r = wave_r;\\nob_g = wave_g;\\nob_b = wave_b;\\n// the m�bius transformation\\n// z -> (az+b)/(cz-d); where a,b,c,d are complex numbers and z will be the uv-vector\\n// (az+b)/(cz-d) = a/c + mu/(cz+d), with mu = (bc-ad)/c\\n// so a/c and mu can be calculated outside of the shader\\n\\n//before inversion\\n\\nscale = 1;\\nangle = time*.2;\\ntranslation_x = 0;\\ntranslation_y = 0.12;\\n\\na_r = cos(angle)*scale;\\na_i = sin(angle)*scale;\\nb_r = translation_x;\\nb_i = translation_y;\\n\\n//complex inverted\\nscale = 1;\\nangle = sin(time*0.1337)*0.3;\\ntranslation_u = 0;\\ntranslation_v = -0.2;\\n\\n// c\\nq15 = cos(angle)*scale;\\nq16 = sin(angle)*scale;\\n\\n// d\\nq17 = translation_u;\\nq18 = translation_v;\\n\\n// c^(-1)\\nc_inv_r = q15/(q15*q15+q16*q16);\\nc_inv_i = q16/(q15*q15+q16*q16);\\n\\n// a*c^(-1)\\nq11 = (a_r*c_inv_r - a_i*c_inv_i);\\nq12 = (a_r*c_inv_i - a_i*c_inv_r);\\n\\n// (bc-ad)\\nbcad_r = (b_r*q15 - b_i*q16)-(a_r*q17-a_i*q18);\\nbcad_i = (b_r*q16 - b_i*q15)-(a_r*q18-a_i*q17);\\n\\n// mu*c^(-1)\\nq13 = bcad_r*c_inv_r - bcad_i*c_inv_i;\\nq14 = bcad_r*c_inv_i - bcad_i*c_inv_r;","pixel_eqs_eel":"thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\\ndx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;\\ndy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;\\nzoom = zoom + 0.0095*(sin(10*ang) + sin(sin(time*2*sin(time)*rad))*0.3 - cos(rad)*0.1);\\nrot = rot + 0.08*abs(0.746-rad)*sin(2.2*(0.5-rad)+5.7*sin(0.1*time));\\nsx = sx + 0.01*(0.99*1-rad)*sin(0.733*time)*below(sin(time),0);\\nsy = sy + 0.01*(0.99*1-rad)*cos(0.953*time)*above(sin(time),0);\\nzoom = zoom - 0.015*(0.5*abs(3)-rad)*below(rad,1.5);","warp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 8.0);\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = tmpvar_3.x;\\n  tmpvar_5.y = tmpvar_4.x;\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv + ((tmpvar_5 * texsize.zw) * 4.0));\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = tmpvar_3.y;\\n  tmpvar_7.y = tmpvar_4.y;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (uv + ((tmpvar_7 * texsize.zw) * 4.0));\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = tmpvar_3.z;\\n  tmpvar_9.y = tmpvar_4.z;\\n  vec2 tmpvar_10;\\n  tmpvar_10 = (uv + ((tmpvar_9 * texsize.zw) * 4.0));\\n  ret_1.x = (texture (sampler_main, tmpvar_6).x - ((texture (sampler_main, tmpvar_6).xyz - \\n    ((texture (sampler_blur3, tmpvar_6).xyz * scale3) + bias3)\\n  ).x * 0.02));\\n  ret_1.y = (texture (sampler_main, tmpvar_8).y - ((texture (sampler_main, tmpvar_8).xyz - \\n    ((texture (sampler_blur3, tmpvar_8).xyz * scale3) + bias3)\\n  ).y * 0.02));\\n  ret_1.z = (texture (sampler_main, tmpvar_10).z - ((texture (sampler_main, tmpvar_10).xyz - \\n    ((texture (sampler_blur3, tmpvar_10).xyz * scale3) + bias3)\\n  ).z * 0.02));\\n  ret_1 = (ret_1 + ((\\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 0.3)) + rand_frame.xy)).xyz - 0.5)\\n   * 0.1) * (bass - treb)));\\n  ret_1 = (ret_1 - ((ret_1.yzx * 0.1) - 0.04));\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 1.0;\\n  tmpvar_11.xyz = ret_1;\\n  ret = tmpvar_11.xyz;\\n }","comp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = (texsize.zw * 4.0);\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_1))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_1))\\n  ).xyz * scale1) + bias1)).y;\\n  tmpvar_2.y = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_1))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_1))\\n  ).xyz * scale1) + bias1)).y;\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = mix ((texture (sampler_fc_main, (uv - \\n    (tmpvar_2 * 0.4)\\n  )).x * pow (hue_shader.zxy, vec3(4.0, 4.0, 4.0))), (mix (\\n    (pow (hue_shader, vec3(6.0, 6.0, 6.0)) * 1.2)\\n  , \\n    pow (hue_shader, vec3(8.0, 8.0, 8.0))\\n  .yzx, texture (sampler_main, uv).yyy) * 2.0), vec3(((\\n    (texture (sampler_blur1, uv).xyz * scale1)\\n   + bias1).z * 0.7)));\\n  ret = tmpvar_3.xyz;\\n }"}')},8492:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":3,"echo_zoom":1,"wave_mode":1,"wave_thick":1,"wrap":0,"invert":1,"wave_scale":0.5,"wave_smoothing":0.45,"warpanimspeed":2.217,"warpscale":100,"zoomexp":100,"zoom":1.01,"warp":1.25946,"wave_r":0,"wave_g":0,"wave_b":0,"ob_r":1,"ob_g":1,"ob_b":1,"ob_a":1,"ib_r":1,"ib_g":1,"ib_b":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"q1 = 0.0003*(pow(1.2+1*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6));\\nmonitor = q1;\\nwave_r = wave_r + 0.5*sin(time*1.13);\\nwave_g = wave_g + 0.5*sin(time*1.23);\\nwave_b = wave_b + 0.5*sin(time*1.33);\\nob_r = ob_r + 1*sin(time*2.26);\\nob_g = ob_g + 1*sin(time*2.46);\\nob_b = ob_b + 1*sin(time*2.66);","pixel_eqs_eel":"zoom = zoom + 0.125*sin(q1);\\nrot = rot + 0.25*sin(fps*100)*q1/2;\\nzoom = zoom - 0.05*sin(rad);\\nrot = rot + 0.05*sin(fps*5);","warp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = fract(uv);\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy);\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (texsize.zw * 12.0);\\n  vec3 tmpvar_5;\\n  tmpvar_5 = (((2.0 * \\n    ((texture (sampler_blur3, (uv_orig + (vec2(1.0, 0.0) * tmpvar_4))).xyz * scale3) + bias3)\\n  ) - (2.0 * \\n    ((texture (sampler_blur3, (uv_orig - (vec2(1.0, 0.0) * tmpvar_4))).xyz * scale3) + bias3)\\n  )) * 0.5);\\n  vec3 tmpvar_6;\\n  tmpvar_6 = (((2.0 * \\n    ((texture (sampler_blur3, (uv_orig + (vec2(0.0, 1.0) * tmpvar_4))).xyz * scale3) + bias3)\\n  ) - (2.0 * \\n    ((texture (sampler_blur3, (uv_orig - (vec2(0.0, 1.0) * tmpvar_4))).xyz * scale3) + bias3)\\n  )) * 0.5);\\n  ret_1.x = ((texture (sampler_fc_main, tmpvar_2).x - (\\n    (((texture (sampler_blur3, tmpvar_2).xyz * scale3) + bias3) - texture (sampler_fc_main, tmpvar_2).xyz)\\n  .x * 0.1)) - 0.035);\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = tmpvar_5.x;\\n  tmpvar_7.y = tmpvar_6.x;\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = tmpvar_5.y;\\n  tmpvar_8.y = tmpvar_6.y;\\n  ret_1.y = (((texture (sampler_fc_main, \\n    (((uv_orig + (\\n      ((texture (sampler_noise_lq, tmpvar_3).xy - 0.5) * texsize.zw)\\n     * 4.0)) - ((tmpvar_7 * texsize.zw) * 4.0)) + ((tmpvar_8 * texsize.zw) * 8.0))\\n  ).y + \\n    ((texture (sampler_noise_lq, tmpvar_3).xyz - 0.5) * 0.1)\\n  ) - 0.012) + (texture (sampler_pc_main, uv_orig).z * 0.2)).x;\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = tmpvar_6.x;\\n  tmpvar_9.y = -(tmpvar_5.x);\\n  vec2 tmpvar_10;\\n  tmpvar_10 = ((uv_orig + (\\n    ((texture (sampler_noise_lq, tmpvar_3).xy - 0.5) * texsize.zw)\\n   * 2.0)) + ((tmpvar_9 * texsize.zw) * 64.0));\\n  ret_1.z = (((\\n    (texture (sampler_fc_main, tmpvar_10).z + ((texture (sampler_fc_main, tmpvar_10).z - (\\n      (texture (sampler_blur2, tmpvar_10).xyz * scale2)\\n     + bias2).z) * 0.2))\\n   + \\n    (texture (sampler_noise_lq, tmpvar_3).xyz * 0.1)\\n  ) - (\\n    (texture (sampler_blur3, uv_orig).xyz * scale3)\\n   + bias3).x) - (clamp (\\n    (1.0 - ((texture (sampler_blur2, uv_orig).xyz * scale2) + bias2).x)\\n  , 0.0, 1.0) * 0.04)).x;\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 1.0;\\n  tmpvar_11.xyz = ret_1;\\n  ret = tmpvar_11.xyz;\\n }","comp":"vec2 xlat_mutabled;\\nvec3 xlat_mutabledx;\\nvec3 xlat_mutabledy;\\n shader_body { \\n  vec3 ret_1;\\n  xlat_mutabled = (texsize.zw * 1.5);\\n  xlat_mutabledx = (texture (sampler_main, (uv_orig + (vec2(1.0, 0.0) * xlat_mutabled))).xyz - texture (sampler_main, (uv_orig - (vec2(1.0, 0.0) * xlat_mutabled))).xyz);\\n  xlat_mutabledy = (texture (sampler_main, (uv_orig + (vec2(0.0, 1.0) * xlat_mutabled))).xyz - texture (sampler_main, (uv_orig - (vec2(0.0, 1.0) * xlat_mutabled))).xyz);\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = xlat_mutabledx.y;\\n  tmpvar_2.y = xlat_mutabledy.y;\\n  vec2 x_3;\\n  x_3 = (tmpvar_2 * 8.0);\\n  ret_1 = (((texture (sampler_main, uv).x * \\n    (1.0 - sqrt(dot (x_3, x_3)))\\n  ) * pow (hue_shader, vec3(6.0, 6.0, 6.0))) * 1.4);\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = xlat_mutabledx.z;\\n  tmpvar_4.y = xlat_mutabledy.z;\\n  vec2 x_5;\\n  x_5 = (tmpvar_4 * 4.0);\\n  vec3 tmpvar_6;\\n  tmpvar_6 = mix (ret_1, vec3(1.0, 1.0, 1.0), vec3(sqrt(dot (x_5, x_5))));\\n  ret_1 = tmpvar_6;\\n  vec4 tmpvar_7;\\n  tmpvar_7.w = 1.0;\\n  tmpvar_7.xyz = tmpvar_6;\\n  ret = tmpvar_7.xyz;\\n }"}')},5127:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":3,"gammaadj":1.3,"decay":1,"echo_zoom":1.75,"echo_alpha":0.15,"echo_orient":3,"wave_mode":1,"wave_dots":1,"darken":1,"wave_scale":0.5,"wave_smoothing":0.9,"warp":0.01,"mv_l":5},"shapes":[{"baseVals":{"enabled":1,"sides":100,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"r = r + 1*sin(time*0.339);\\ng = g + 1*sin(time*0.369);\\nb = b + 1*sin(time*0.399);\\nr2 = r2 + 1*sin(time*0.113);\\ng2 = g2 + 1*sin(time*0.123);\\nb2 = b2 + 1*sin(time*0.133);\\nrad = q1/3;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"q1 = 0.0003*(pow(1+1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6));\\nmv_a = q1;\\nmv_x = mv_x + 1*sin(time);\\nmv_y = mv_y + 1*cos(time);\\nmv_dx = mv_dx + 1.25*sin(fps*8);\\nmv_dy = mv_dy + 1.35*sin(fps*8);\\nmv_r = mv_r + 1*sin(time*0.565);\\nmv_g = mv_g + 1*sin(time*0.615);\\nmv_b = mv_b + 1*sin(time*0.665);\\nwave_r = wave_r + 0.5*sin(time*1.13);\\nwave_g = wave_g + 0.5*sin(time*1.23);\\nwave_b = wave_b + 0.5*sin(time*1.33);","pixel_eqs_eel":"zoom = zoom + 0.0125*q1;\\nrot = rot + 0.025*sin(fps*10)*q1;\\nwarp = 0;","warp":"vec2 xlat_mutabled;\\nvec3 xlat_mutabledx;\\nvec3 xlat_mutabledy;\\n shader_body { \\n  vec3 ret_1;\\n  vec3 tmpvar_2;\\n  tmpvar_2 = (texture (sampler_noise_lq, ((\\n    (uv_orig * texsize.xy)\\n   * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5);\\n  xlat_mutabled = (texsize.zw * 16.0);\\n  xlat_mutabledx = (((texture (sampler_blur2, \\n    (uv_orig + (vec2(1.0, 0.0) * xlat_mutabled))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    (uv_orig - (vec2(1.0, 0.0) * xlat_mutabled))\\n  ).xyz * scale2) + bias2));\\n  xlat_mutabledy = (((texture (sampler_blur2, \\n    (uv_orig + (vec2(0.0, 1.0) * xlat_mutabled))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    (uv_orig - (vec2(0.0, 1.0) * xlat_mutabled))\\n  ).xyz * scale2) + bias2));\\n  xlat_mutabled = uv;\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = xlat_mutabledx.y;\\n  tmpvar_3.y = xlat_mutabledy.y;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = xlat_mutabledx.z;\\n  tmpvar_4.y = xlat_mutabledy.z;\\n  vec4 tmpvar_5;\\n  tmpvar_5 = texture (sampler_main, uv_orig);\\n  ret_1.y = ((texture (sampler_main, (uv - \\n    ((tmpvar_3 * texsize.zw) * 16.0)\\n  )).y - 0.006) + ((1.0 - tmpvar_5.x) * 0.018));\\n  ret_1.z = ((texture (sampler_main, (uv - \\n    ((tmpvar_4 * texsize.zw) * 16.0)\\n  )).z - 0.006) + (tmpvar_5.x * 0.018));\\n  ret_1.x = texture (sampler_fc_main, (uv + ((tmpvar_2.xy * texsize.zw) * 0.5))).x;\\n  ret_1.x = (ret_1.x + ((\\n    (ret_1.x - ((texture (sampler_blur3, uv).xyz * scale3) + bias3).x)\\n   * 0.2) + (tmpvar_2 * 0.01)).x);\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = ret_1;\\n  ret = tmpvar_6.xyz;\\n }","comp":" shader_body { \\n  vec2 dz_1;\\n  vec3 dy_2;\\n  vec3 dx_3;\\n  vec2 d_4;\\n  vec3 ret_5;\\n  vec2 tmpvar_6;\\n  vec2 tmpvar_7;\\n  tmpvar_7 = (vec2(1.0, 0.0) * texsize.zw);\\n  tmpvar_6.x = (texture (sampler_main, (uv + tmpvar_7)).xyz - texture (sampler_main, (uv - tmpvar_7)).xyz).y;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (vec2(0.0, 1.0) * texsize.zw);\\n  tmpvar_6.y = (texture (sampler_main, (uv + tmpvar_8)).xyz - texture (sampler_main, (uv - tmpvar_8)).xyz).y;\\n  d_4 = (texsize.zw * 2.0);\\n  dx_3 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * d_4))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * d_4))\\n  ).xyz * scale1) + bias1));\\n  dy_2 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * d_4))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * d_4))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = dx_3.y;\\n  tmpvar_9.y = dy_2.y;\\n  dz_1 = ((tmpvar_6 * 3.0) + tmpvar_9);\\n  ret_5 = (vec3(((\\n    pow ((sqrt(dot (dz_1, dz_1)) * 0.8), 0.7)\\n   * 2.0) + (\\n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\\n  .y * 2.0))) * vec3(0.2, 0.3, 0.6));\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = q19;\\n  tmpvar_10.y = q20;\\n  vec2 tmpvar_11;\\n  tmpvar_11 = fract(((0.5 + \\n    (uv - 0.5)\\n  ) + (tmpvar_10 * vec2(-1.0, 1.0))));\\n  vec2 tmpvar_12;\\n  tmpvar_12.x = dx_3.y;\\n  tmpvar_12.y = dy_2.y;\\n  vec3 tmpvar_13;\\n  tmpvar_13 = ((mix (ret_5, vec3(3.0, 2.0, 1.0), \\n    ((texture (sampler_blur3, (tmpvar_11 - tmpvar_12)).xyz * scale3) + bias3)\\n  .xxx) * (vec3(1.0, 1.0, 1.0) - \\n    ((texture (sampler_blur2, (tmpvar_11 - dz_1)).xyz * scale2) + bias2)\\n  .xxx)) * (vec3(1.0, 1.0, 1.0) - vec3((1.5 * texture (sampler_main, tmpvar_11).x))));\\n  ret_5 = tmpvar_13;\\n  vec4 tmpvar_14;\\n  tmpvar_14.w = 1.0;\\n  tmpvar_14.xyz = tmpvar_13;\\n  ret = tmpvar_14.xyz;\\n }"}')},4415:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":3,"gammaadj":1.3,"decay":1,"echo_zoom":1.75,"echo_alpha":0.15,"echo_orient":3,"wave_mode":1,"wave_dots":1,"darken":1,"wave_scale":0.5,"wave_smoothing":0.9,"warp":0.01,"mv_l":5},"shapes":[{"baseVals":{"enabled":1,"sides":100,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"r = r + 1*sin(time*0.339);\\ng = g + 1*sin(time*0.369);\\nb = b + 1*sin(time*0.399);\\nr2 = r2 + 1*sin(time*0.113);\\ng2 = g2 + 1*sin(time*0.123);\\nb2 = b2 + 1*sin(time*0.133);\\nrad = q1/3;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"q1 = 0.0003*(pow(1+1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6));\\nmv_a = q1;\\nmv_x = mv_x + 1*sin(time);\\nmv_y = mv_y + 1*cos(time);\\nmv_dx = mv_dx + 1.25*sin(fps*8);\\nmv_dy = mv_dy + 1.35*sin(fps*8);\\nmv_r = mv_r + 1*sin(time*0.565);\\nmv_g = mv_g + 1*sin(time*0.615);\\nmv_b = mv_b + 1*sin(time*0.665);\\nwave_r = wave_r + 0.5*sin(time*1.13);\\nwave_g = wave_g + 0.5*sin(time*1.23);\\nwave_b = wave_b + 0.5*sin(time*1.33);","pixel_eqs_eel":"zoom = zoom + 0.0125*q1;\\nrot = rot + 0.025*sin(fps*10)*q1;\\nwarp = 0;","warp":" shader_body { \\n  vec2 my_uv_1;\\n  vec3 ret_2;\\n  vec3 tmpvar_3;\\n  tmpvar_3 = ((640.0 * texsize.z) * ((2.0 * \\n    ((texture (sampler_blur2, (uv + vec2(0.01, 0.0))).xyz * scale2) + bias2)\\n  ) - (2.0 * \\n    ((texture (sampler_blur2, (uv - vec2(0.01, 0.0))).xyz * scale2) + bias2)\\n  )));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = ((512.0 * texsize.w) * ((2.0 * \\n    ((texture (sampler_blur2, (uv + vec2(0.0, 0.01))).xyz * scale2) + bias2)\\n  ) - (2.0 * \\n    ((texture (sampler_blur2, (uv - vec2(0.0, 0.01))).xyz * scale2) + bias2)\\n  )));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = tmpvar_3.y;\\n  tmpvar_5.y = tmpvar_4.y;\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = tmpvar_3.x;\\n  tmpvar_6.y = tmpvar_4.x;\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = tmpvar_4.y;\\n  tmpvar_7.y = -(tmpvar_3.y);\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (uv - ((\\n    ((tmpvar_5 * 0.3) + (tmpvar_6 * 0.1))\\n   + \\n    (tmpvar_7 * 0.01)\\n  ) * 0.01));\\n  ret_2.x = texture (sampler_fw_main, (tmpvar_8 - floor(tmpvar_8))).x;\\n  ret_2.x = (ret_2.x + ((\\n    (2.0 * ret_2.x)\\n   - \\n    (2.0 * ((texture (sampler_blur1, tmpvar_8).xyz * scale1) + bias1).x)\\n  ) * 0.25));\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = tmpvar_3.y;\\n  tmpvar_9.y = tmpvar_4.y;\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = tmpvar_4.x;\\n  tmpvar_10.y = -(tmpvar_3.y);\\n  my_uv_1 = ((uv - (tmpvar_9 * 0.01)) + (tmpvar_10 * 0.001));\\n  ret_2.y = texture (sampler_fw_main, (my_uv_1 - floor(my_uv_1))).y;\\n  ret_2.y = (ret_2.y + ((\\n    ((2.0 * ret_2.y) - (2.0 * ((texture (sampler_blur3, my_uv_1).xyz * scale3) + bias3).y))\\n   * 0.025) + 0.01));\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 1.0;\\n  tmpvar_11.xyz = ret_2;\\n  ret = tmpvar_11.xyz;\\n }","comp":"vec2 xlat_mutablefactorA;\\n shader_body { \\n  vec2 uv_1;\\n  vec2 dz_2;\\n  vec3 dy_3;\\n  vec3 dx_4;\\n  vec2 d_5;\\n  vec3 ret_6;\\n  xlat_mutablefactorA = (uv - vec2(0.5, 0.5));\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = -((xlat_mutablefactorA.y * -1024.0));\\n  tmpvar_7.y = (xlat_mutablefactorA.x * -1024.0);\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = tmpvar_7.x;\\n  tmpvar_8.y = -(tmpvar_7.y);\\n  uv_1 = (vec2(-100.0, 100.0) * (tmpvar_8 / (\\n    (tmpvar_7.x * tmpvar_7.x)\\n   + \\n    (tmpvar_7.y * tmpvar_7.y)\\n  )).yx);\\n  uv_1 = (0.5 + ((\\n    (1.0 - abs(((\\n      fract((mix ((0.5 + \\n        (((0.5 + (\\n          (uv - 0.5)\\n         * vec2(1.1, 0.81))) - 0.5) * 2.0)\\n      ), (uv_1 + 0.5), vec2(0.5, 0.5)) * 0.5))\\n     * 2.0) - 1.0)))\\n   - 0.5) * 0.98));\\n  vec2 tmpvar_9;\\n  vec2 tmpvar_10;\\n  tmpvar_10 = (vec2(1.0, 0.0) * texsize.zw);\\n  tmpvar_9.x = (texture (sampler_main, (uv_1 + tmpvar_10)).xyz - texture (sampler_main, (uv_1 - tmpvar_10)).xyz).y;\\n  vec2 tmpvar_11;\\n  tmpvar_11 = (vec2(0.0, 1.0) * texsize.zw);\\n  tmpvar_9.y = (texture (sampler_main, (uv_1 + tmpvar_11)).xyz - texture (sampler_main, (uv_1 - tmpvar_11)).xyz).y;\\n  d_5 = (texsize.zw * 2.0);\\n  dx_4 = (((2.0 * \\n    ((texture (sampler_blur1, (uv_1 + (vec2(1.0, 0.0) * d_5))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv_1 - (vec2(1.0, 0.0) * d_5))).xyz * scale1) + bias1)\\n  )) * 0.5);\\n  dy_3 = (((2.0 * \\n    ((texture (sampler_blur1, (uv_1 + (vec2(0.0, 1.0) * d_5))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv_1 - (vec2(0.0, 1.0) * d_5))).xyz * scale1) + bias1)\\n  )) * 0.5);\\n  vec2 tmpvar_12;\\n  tmpvar_12.x = dx_4.y;\\n  tmpvar_12.y = dy_3.y;\\n  dz_2 = ((tmpvar_9 * 3.0) + tmpvar_12);\\n  ret_6 = (vec3(((\\n    pow ((sqrt(dot (dz_2, dz_2)) * 0.8), 0.7)\\n   + \\n    (((texture (sampler_blur2, uv_1).xyz * scale2) + bias2).y * 0.4)\\n  ) - 0.1)) * vec3(0.3, 0.5, 0.7));\\n  vec2 tmpvar_13;\\n  tmpvar_13.x = dx_4.x;\\n  tmpvar_13.y = dy_3.x;\\n  vec3 tmpvar_14;\\n  tmpvar_14 = mix (mix (ret_6, vec3(0.2, 0.1, 0.0), vec3((texture (sampler_main, \\n    (uv_1 + ((tmpvar_13 * texsize.zw) * 18.0))\\n  ).x * 6.0))), vec3(1.0, 1.0, 1.0), texture (sampler_main, uv_1).zzz);\\n  ret_6 = tmpvar_14;\\n  vec4 tmpvar_15;\\n  tmpvar_15.w = 1.0;\\n  tmpvar_15.xyz = tmpvar_14;\\n  ret = tmpvar_15.xyz;\\n }"}')},7849:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":0,"gammaadj":1,"decay":1,"echo_zoom":1,"wave_mode":7,"additivewave":1,"wave_thick":1,"wave_brighten":0,"darken":1,"wave_a":100,"wave_scale":0.438649,"wave_smoothing":0.5,"modwavealphastart":0.5,"modwavealphaend":1,"zoomexp":0.999996,"fshader":1,"dx":0.00001,"dy":0.00001,"warp":0.01,"wave_y":0.976,"ob_size":0.005,"ob_r":0.4,"ob_g":0.3,"ob_a":1,"ib_r":1,"ib_g":0.6,"ib_b":0,"ib_a":1,"mv_x":24.959999,"mv_y":19.199999,"mv_l":0.85,"mv_r":0.4999,"mv_g":0.4999,"mv_b":0.4999,"mv_a":0},"shapes":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"warp = 0;\\nwave_r = 0.5 + 0.5*sin(time*0.894);\\nwave_g = 0.5 + 0.5*sin(time*1.14);\\nwave_b = 0.5 + 0.5*sin(3-bass_att);\\nthresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*(0.9+.1*sin(time*2.8))+1.3);\\ndx_r = equal(thresh,2)*0.004*sin(5*time)+(1-equal(thresh,2))*dx_r;\\ndy_r = equal(thresh,2)*0.004*sin(6*time)+(1-equal(thresh,2))*dy_r;\\nq1 = thresh;\\ndx = 1.1* dx_r;\\ndy = 1.1* dy_r;\\ndx = dx + if (above(bass,1.35), 31*dx_r, 0);\\ndy = if(above(bass,1.3), 0, dy);\\ndecay=.995+.004*sin(time*.369)+.001*sin(time*1.54);","pixel_eqs_eel":"zoom = zoom -0.01*q1*rad;\\nzoomexp = 1+0.2*(rad-0.2*q1);\\nsx=sx-cos(y*(6.28+3.14*sin(time)))*(.009+.003*sin(time*2.18))*sin(time*.3);\\nrot=sin(x*3.14)*.001*sin(time*.67);","warp":"","comp":""}')},772:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":0,"decay":0.981,"echo_zoom":1.00644,"echo_alpha":0.5,"echo_orient":3,"wave_mode":5,"additivewave":1,"wave_brighten":0,"bmotionvectorson":0,"wave_a":1.868299,"wave_scale":1.136001,"wave_smoothing":0.54,"wave_mystery":0.2,"modwavealphastart":0.95,"modwavealphaend":0.75,"zoomexp":1.008151,"fshader":0.2,"zoom":0.9998,"cx":0.47,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0,"ob_r":0.5,"ob_g":0.5,"ob_b":0.5,"ib_size":0,"ib_r":0.5,"ib_g":0.5,"ib_b":0.5},"shapes":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"warp=0;\\nchaos=.9+.1*sin(pulse);\\nentropy=if(bnot(entropy),2,if(equal(pulse,-20),1+rand(5),entropy));\\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*chaos+1.3);\\nbass_changed=abs(bass_changed-equal(bass_thresh,2));\\ntreb_thresh=above(treb_att,treb_thresh)*2 + (1-above(treb_att,treb_thresh))*((treb_thresh-1.3)*chaos+1.3);\\ntreb_changed=abs(treb_changed-equal(treb_thresh,2));\\nmid_thresh=above(mid_att,mid_thresh)*2 + (1-above(mid_att,mid_thresh))*((mid_thresh-1.3)*chaos+1.3);\\nmid_changed=abs(mid_changed-equal(mid_thresh,2));\\npulse=if(above(abs(pulse),20),-20,pulse+.1*chaos*bor(bor(bass_changed,treb_changed),mid_changed)+(mid+bass+treb)*.025);\\nq3=sin(pulse);\\nq2=(pulse/entropy)*.5*chaos;\\nq4=sin(q2);\\nq5=entropy;\\nq1=(1+1*above(q4,0))*(1+2*above(q3,0))*(1+4*mid_changed*above(q3,0))*(1+6*above(pulse,0));\\nwave_r=if(treb_changed,.5+.5*q3,if(bass_changed,.5+.5*q4,1));\\nwave_g=.5+.2*bnot(q1%2)-.2*bnot(q1%3)+.2*bnot(q1%5)-.2*bnot(q1%7);\\nwave_b=if(bnot(q1%6),.8+.2*q4,bass_changed*mid_changed);\\nob_r=ob_r+.2*q4+.3*bnot(q1%7)*q3;\\nob_b=ob_b-.1*bnot(q1%105)-.4*sin(q2*.8);\\nob_g=ob_g+.5*sin(pulse*.4*entropy);\\nob_a=.07+.05*q3;\\nob_size=.01*entropy*bnot(q1%6);\\nib_r=ib_r+.2*q1-.3*bnot(q1%3)*q4;\\nib_b=ib_b-.1*bnot(q1%42)-.4*sin(q2*.7);\\nib_g=ib_g+.5*sin(pulse*.5*entropy);\\nib_a=.07+.05*q3*q4;\\nib_size=.005+.005*q3;\\nzoom_fade=if(above(q3,0),if(above(q4,0),zoom_fade-.0013,zoom_fade+.002),1+.04*q4);\\nzoom=zoom_fade;","pixel_eqs_eel":"g1=sin(q2*.04*q5);\\ng2=sin(q2*.05*q5);\\ng3=sin(q2*.06*q5);\\nx_shift=pow(x,2)+x*g1*2+sqr(g1);\\ny_shift=pow(y,2)+y*g2*2+sqr(g2);\\nr_shift=pow(rad,2)+rad*g3*2+sqr(g3);\\nzoom=zoom -sin(x_shift*bnot(q1%10)+y_shift*bnot(q1%14)+r_shift*bnot(q1%21))*q3*(.1+.1*bnot(q1%30)+.1*bnot(q1%7));\\ndx=dx+bnot(q1%35)*(rad-.5*g3)*g2-cos(y*1.68)*.1*bnot(q1%21);\\ndy=dy-cos(x*1.68)*bnot(q1%10);\\nrot=if(above(sin(q2*4.3),0),.3*above(abs(zoom-1),.05),.3*g3);","warp":"","comp":""}')},6278:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":0,"gammaadj":1,"decay":1,"echo_zoom":0.999786,"echo_alpha":0.4999,"echo_orient":3,"wave_mode":2,"additivewave":1,"wave_dots":1,"wave_thick":1,"wave_brighten":0,"wave_a":0.842588,"wave_scale":0.44582,"wave_smoothing":0,"zoomexp":1.759877,"zoom":0.991498,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.005,"ob_r":1,"ob_a":1,"ib_size":0.005,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":0.7,"mv_x":64,"mv_y":48,"mv_l":0.2,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0.8},"shapes":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"warp=0;\\nle=1+.5+2*sin(bass_att);\\nbpulse=band(above(le,bth),above(le-bth,bblock));\\nbblock=le-bth;\\nbth=if(above(le,bth),le+114/(le+10)-7.407,\\nbth+bth*.07/(bth-12)+below(bth,2.7)*.1*(2.7-bth));\\nbth=if(above(bth,6),6,bth);\\nbres=bpulse*sin(pulse+le*.5) + bnot(bpulse)*bres;\\n\\nle=1+.5+2*sin(treb_att);\\ntpulse=band(above(le,tth),above(le-tth,tblock));\\ntblock=le-tth;\\ntth=if(above(le,tth),le+114/(le+10)-7.407,\\ntth+tth*.07/(tth-12)+below(tth,2.7)*.1*(2.7-tth));\\ntth=if(above(tth,6),6,tth);\\ntres=tpulse*sin(pulse+le*.5) + bnot(tpulse)*tres;\\n\\nle=1+.5+2*sin(mid_att);\\nmpulse=band(above(le,mth),above(le-mth,mblock));\\nmblock=le-mth;\\nmth=if(above(le,mth),le+114/(le+10)-7.407,\\nmth+mth*.07/(mth-12)+below(mth,2.7)*.1*(2.7-mth));\\nmth=if(above(mth,6),6,mth);\\nmres=mpulse*sin(pulse+le*.5) + bnot(mpulse)*mres;\\n\\n\\n\\npulse=if(above(abs(pulse),3.14),-3.14,pulse+(bth+mth+tth)*.003);\\nq1=bres;\\nq2=tres;\\nq3=mres;\\nq4=sin(pulse);\\nmod_state=(above(q1,0)+above(q2,0)+above(q3,0))*(1+above(q4,0));\\nccl=ccl+tpulse+mpulse-bpulse;\\nq5=cos(pulse*(.5+.1*mod_state));\\nq6=sin(pulse*(.5+pow(.25,mod_state)));\\nq7=mod_state;\\nq8=ccl;\\nob_r=.5+.5*cos(q1+q7);\\nob_g=.5+.5*cos(q2*3.14+q7);\\nob_b=.5+.5*cos(q3*2+sin(time*.0816));\\nib_size=.025+.02*q2;\\nob_size=.03+.02*q3-.002*q7;\\nwave_r=.5+.5*sin(q1*q7+time*2.183);\\nwave_g=.5+.5*sin(q2*3+time*1.211);\\nwave_b=.5+.5*cos(q3+time*1.541);\\n\\n\\nob_a=.8+.2*q2;\\nzoom=zoom+.02*q4;\\ndecay=.997+.003*q3;\\nwave_mode=q7%4;","pixel_eqs_eel":"snee=bnot(above(sin(ang)-x,.5)*above(q2,0)+above(y-cos(ang),.5)*above(q1,0));\\nsnur=bnot(below(x,.5)*above(q3,0)+below(y,.5)*below(q7,4));\\ngrid=sin(sigmoid(sin(y*6.28*q2),sin(x*6.28*q6))*(10+q7));\\nrot=bnot(above(x,.5)+((y*20*q2)%q7))\\n*cos(rad*q2+3.14*if(above(grid,0),snur,bnot(snur))*(.5+.5*sin(rad*3.14*q1)))*q4*.1;\\nzoom=zoom-.5*cos(ang*3*q6+q2)*sign(if(q8%4,bnot(snee),snee))*q5;\\nrot=if(rot,rot*sign(if(above(q3,0),snur,bnot(snur))),q6);\\ncx=if(below(x,.5+.5*q4)*below(y,.5),.5+.2*q1,.5);\\ncy=if(below(x,.5)*below(y,.5+.5*q5),.5+.2*q3,.5);\\nrot=rot*(1-.2*above(.5+q3+q5*2,0)-.2*grid*above(.5+q2+q6,0))*bnot(q8%q7);\\nzoom=if(above(.5+q1+q2+q4*2,0),zoom-.02*snur,zoom-.05*cos(rad*6*q2+q4*3+q5*x+q6*y));","warp":"","comp":""}')},1888:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":5,"gammaadj":1.560001,"decay":1,"echo_zoom":0.9998,"echo_alpha":0.5,"echo_orient":3,"wave_mode":2,"wave_thick":1,"wave_brighten":0,"wrap":0,"wave_a":0.419996,"wave_scale":0.972362,"wave_smoothing":0.09,"wave_mystery":0.02,"zoomexp":2.468457,"zoom":1.001789,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.005,"ob_r":1,"ob_a":1,"ib_size":0.005,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":0,"mv_y":0,"mv_l":0.85,"mv_r":0.4999,"mv_g":0.4999,"mv_b":0.4999,"mv_a":0},"shapes":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"warp=0;\\nle=1+.5+2*sin(bass_att);\\nbpulse=band(above(le,bth),above(le-bth,bblock));\\nbblock=le-bth;\\nbth=if(above(le,bth),le+114/(le+10)-7.407,\\nbth+bth*.07/(bth-12)+below(bth,2.7)*.1*(2.7-bth));\\nbth=if(above(bth,6),6,bth);\\nbres=bpulse*sin(pulse+le*.5) + bnot(bpulse)*bres;\\n\\nle=1+.5+2*sin(treb_att);\\ntpulse=band(above(le,tth),above(le-tth,tblock));\\ntblock=le-tth;\\ntth=if(above(le,tth),le+114/(le+10)-7.407,\\ntth+tth*.07/(tth-12)+below(tth,2.7)*.1*(2.7-tth));\\ntth=if(above(tth,6),6,tth);\\ntres=tpulse*sin(pulse+le*.5) + bnot(tpulse)*tres;\\n\\nle=1+.5+2*sin(mid_att);\\nmpulse=band(above(le,mth),above(le-mth,mblock));\\nmblock=le-mth;\\nmth=if(above(le,mth),le+114/(le+10)-7.407,\\nmth+mth*.07/(mth-12)+below(mth,2.7)*.1*(2.7-mth));\\nmth=if(above(mth,6),6,mth);\\nmres=mpulse*sin(pulse+le*.5) + bnot(mpulse)*mres;\\n\\n\\n\\npulse=if(above(abs(pulse),3.14),-3.14,pulse+(bth+mth+tth)*.003);\\nq1=bres;\\nq2=tres;\\nq3=mres;\\nq4=sin(pulse);\\n\\nmod_state=(above(q1,0)+above(q2,0)+above(q3,0))*(1+above(q4,0));\\nccl=ccl+tpulse+mpulse-bpulse;\\nq5=cos(pulse*(.5+.1*mod_state));\\nq6=sin(pulse*(.5+pow(.25,mod_state)));\\nq7=mod_state;\\nq8=ccl;\\nob_r=.5+.5*cos(q1+q7);\\nob_g=.5+.5*cos(q2*3.14+q7);\\nob_b=.5+.5*cos(q3*2+sin(time*.0816));\\nib_size=.025+.02*q2;\\nob_size=.03+.02*q3-.002*q7;\\nwave_r=.5+.5*sin(q1*q7+time*2.183);\\nwave_g=.5+.5*sin(q2*3+time*1.211);\\nwave_b=.5+.5*sin(q3+time*1.541);\\n\\ndecay=.997+.0015*q3+.0015*q1;\\nob_a=.5+.5*q2;","pixel_eqs_eel":"snee=bnot(above(sin(ang)-x,.5)*above(q2,0)+above(y-cos(ang),.5)*above(q1,0));\\nsnur=bnot(below(x,.5)*above(q3,0)+below(y,.5)*below(q7,4));\\ngrid=sin(sigmoid(sin(y*6.28*q2),sin(x*6.28*q6))*(10+q7));\\nrot=(1-snee*if(above(grid,0),snur,bnot(snur))*(.5+.5*sin(rad*3.14*q1)))*q6*.13;\\nzoom=zoom+.01*sin(rad*(q7%2+q5)*2*q2+1.6*q1+q8)*bnot(snee)*if(snur,-1,q3);\\nsx=sx-bor(bnot(snee),bnot(snur))*cos(y*3.14*q4)*.04;\\nsy=sy-bor(bnot(snee),snur)*cos(x*3.14*q6)*.04;\\ncx=cx+sin(rad*3.14*q4)*.26;\\ncy=cx+sin(3.14*q5)*.1816;","warp":"","comp":""}')},5014:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":0.9998,"echo_alpha":0.4999,"echo_orient":3,"wave_mode":1,"additivewave":1,"wave_dots":1,"wave_brighten":0,"wave_a":1.254574,"wave_scale":0.45029,"wave_smoothing":0,"zoomexp":1.00183,"zoom":1.001507,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.005,"ob_r":1,"ob_a":1,"ib_size":0.005,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":0.9,"mv_x":0,"mv_y":0,"mv_l":0.85,"mv_r":0.4999,"mv_g":0.4999,"mv_b":0.4999,"mv_a":0},"shapes":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"warp=0;\\nle=1+.5+2*sin(bass_att);\\nbpulse=band(above(le,bth),above(le-bth,bblock));\\nbblock=le-bth;\\nbth=if(above(le,bth),le+114/(le+10)-7.407,\\nbth+bth*.07/(bth-12)+below(bth,2.7)*.1*(2.7-bth));\\nbth=if(above(bth,6),6,bth);\\nbres=bpulse*sin(pulse+le*.5) + bnot(bpulse)*bres;\\n\\nle=1+.5+2*sin(treb_att);\\ntpulse=band(above(le,tth),above(le-tth,tblock));\\ntblock=le-tth;\\ntth=if(above(le,tth),le+114/(le+10)-7.407,\\ntth+tth*.07/(tth-12)+below(tth,2.7)*.1*(2.7-tth));\\ntth=if(above(tth,6),6,tth);\\ntres=tpulse*sin(pulse+le*.5) + bnot(tpulse)*tres;\\n\\nle=1+.5+2*sin(mid_att);\\nmpulse=band(above(le,mth),above(le-mth,mblock));\\nmblock=le-mth;\\nmth=if(above(le,mth),le+114/(le+10)-7.407,\\nmth+mth*.07/(mth-12)+below(mth,2.7)*.1*(2.7-mth));\\nmth=if(above(mth,6),6,mth);\\nmres=mpulse*sin(pulse+le*.5) + bnot(mpulse)*mres;\\n\\n\\n\\npulse=if(above(abs(pulse),3.14),-3.14,pulse+(bth+mth+tth)*.003);\\nq1=bres;\\nq2=tres;\\nq3=mres;\\nq4=sin(pulse);\\n\\nmod_state=(above(q1,0)+above(q2,0)+above(q3,0))*(1+above(q4,0));\\nccl=ccl+tpulse+mpulse-bpulse;\\nq5=cos(pulse*(.5+.1*mod_state));\\nq6=sin(pulse*(.5+pow(.25,mod_state)));\\nq7=mod_state;\\nq8=ccl;\\nob_r=.5+.5*cos(q1+q7);\\nob_g=.5+.5*cos(q2*3.14+q7);\\nob_b=.5+.5*cos(q3*2+sin(time*.0816));\\nib_size=.025+.02*q2;\\nob_size=.03+.02*q3-.002*q7;\\nwave_r=.5+.5*sin(q1*q7+time*2.183);\\nwave_g=.5+.5*sin(q2*3+time*1.211);\\nwave_b=.5+.5*sin(q3+time*1.541);\\n\\nob_a=.8+.2*q2;\\nzoom=zoom+.04*q4;","pixel_eqs_eel":"snee=bnot(above(sin(ang)-x,.5)*above(q2,0)+above(y-cos(ang),.5)*above(q1,0));\\nsnur=bnot(below(x,.5)*above(q3,0)+below(y,.5)*below(q7,4));\\ngrid=sin(sigmoid(sin(y*6.28*q2),sin(x*6.28*q6))*(10+q7));\\nrot=bnot(above(x,.5)+((y*q8)%q7))\\n *cos(rad+3.14*if(above(grid,0),snur,bnot(snur))*(.5+.5*sin(rad*3.14*q1)))*q4;\\nzoom=zoom+.03*sin(rad*3.14*q2+q5)*sign(snee);\\nrot=if(rot,rot*sign(snur),q6);\\ncx=if(below(x,.5)*below(y,.5),.5+.2*q1,.5);\\ncy=if(below(x,.5)*below(y,.5),.5+.2*q3,.5);","warp":"","comp":""}')},2158:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":5,"gammaadj":1,"decay":0.94,"echo_zoom":0.9998,"echo_alpha":0.4999,"echo_orient":3,"wave_mode":1,"additivewave":1,"wave_dots":1,"wave_brighten":0,"wave_a":1.254574,"wave_scale":0.45029,"wave_smoothing":0,"zoomexp":1.008151,"zoom":0.659411,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.005,"ob_r":1,"ob_a":1,"ib_size":0.005,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":0.9,"mv_x":64,"mv_y":48,"mv_l":0,"mv_r":0,"mv_g":0.7,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"warp=0;\\nle=1+.5+2*sin(bass_att);\\nbpulse=band(above(le,bth),above(le-bth,bblock));\\nbblock=le-bth;\\nbth=if(above(le,bth),le+114/(le+10)-7.407,\\nbth+bth*.07/(bth-12)+below(bth,2.7)*.1*(2.7-bth));\\nbth=if(above(bth,6),6,bth);\\nbres=bpulse*sin(pulse+le*.5) + bnot(bpulse)*bres;\\n\\nle=1+.5+2*sin(treb_att);\\ntpulse=band(above(le,tth),above(le-tth,tblock));\\ntblock=le-tth;\\ntth=if(above(le,tth),le+114/(le+10)-7.407,\\ntth+tth*.07/(tth-12)+below(tth,2.7)*.1*(2.7-tth));\\ntth=if(above(tth,6),6,tth);\\ntres=tpulse*sin(pulse+le*.5) + bnot(tpulse)*tres;\\n\\nle=1+.5+2*sin(mid_att);\\nmpulse=band(above(le,mth),above(le-mth,mblock));\\nmblock=le-mth;\\nmth=if(above(le,mth),le+114/(le+10)-7.407,\\nmth+mth*.07/(mth-12)+below(mth,2.7)*.1*(2.7-mth));\\nmth=if(above(mth,6),6,mth);\\nmres=mpulse*sin(pulse+le*.5) + bnot(mpulse)*mres;\\n\\n\\n\\npulse=if(above(abs(pulse),3.14),-3.14,pulse+(bth+mth+tth)*.003);\\nq1=bres;\\nq2=tres;\\nq3=mres;\\nq4=sin(pulse);\\n\\nmod_state=(above(q1,0)+above(q2,0)+above(q3,0))*(1+above(q4,0));\\nccl=ccl+tpulse+mpulse-bpulse;\\nq5=cos(pulse*(.5+.1*mod_state));\\nq6=sin(pulse*(.5+pow(.25,mod_state)));\\nq7=mod_state;\\nq8=ccl;\\nob_r=.5+.5*cos(q1+q7);\\nob_g=.5+.5*cos(q2*3.14+q7);\\nob_b=.5+.5*cos(q3*2+sin(time*.0816));\\nib_size=.025+.02*q2;\\nob_size=.03+.02*q3-.002*q7;\\nwave_r=.5+.5*sin(q1*q7+time*2.183);\\nwave_g=.5+.5*sin(q2*3+time*1.211);\\nwave_b=.5+.5*sin(q3+time*1.541);\\n\\nob_a=.8+.2*q2;\\nzoom=zoom+.01*q4;","pixel_eqs_eel":"grid=pow(sin(rad*q6*q2+x*y*q6*q3)*2,1+q7%5)%2;\\nrot=bnot(grid)+grid*q4;\\nsx=sx+sin((q2+.5)*x)*.003;\\nsy=sy+sin((q1+3.4)*y)*.003;\\nzoom=zoom+.11*cos(rad*3.14)*q4;","warp":"","comp":""}')},48:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":0,"gammaadj":1,"decay":0.96,"echo_zoom":2.216266,"echo_alpha":0.78,"wave_mode":5,"additivewave":1,"wave_dots":1,"wave_brighten":0,"brighten":1,"wave_a":1.254574,"wave_scale":0.931011,"wave_smoothing":0,"zoomexp":1.0081,"fshader":0.4,"zoom":0.820774,"cx":0.4999,"warp":0.01,"sx":0.999998,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.005,"ob_r":1,"ob_a":1,"ib_size":0.005,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":0.9,"mv_x":0,"mv_y":0,"mv_l":0.85,"mv_r":0.4999,"mv_g":0.4999,"mv_b":0.4999,"mv_a":0},"shapes":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"warp=0;\\nle=1+.5+2*sin(bass_att);\\nbpulse=band(above(le,bth),above(le-bth,bblock));\\nbblock=le-bth;\\nbth=if(above(le,bth),le+114/(le+10)-7.407,\\nbth+bth*.07/(bth-12)+below(bth,2.7)*.1*(2.7-bth));\\nbth=if(above(bth,6),6,bth);\\nbres=bpulse*sin(pulse+le*.5) + bnot(bpulse)*bres;\\n\\nle=1+.5+2*sin(treb_att);\\ntpulse=band(above(le,tth),above(le-tth,tblock));\\ntblock=le-tth;\\ntth=if(above(le,tth),le+114/(le+10)-7.407,\\ntth+tth*.07/(tth-12)+below(tth,2.7)*.1*(2.7-tth));\\ntth=if(above(tth,6),6,tth);\\ntres=tpulse*sin(pulse+le*.5) + bnot(tpulse)*tres;\\n\\nle=1+.5+2*sin(mid_att);\\nmpulse=band(above(le,mth),above(le-mth,mblock));\\nmblock=le-mth;\\nmth=if(above(le,mth),le+114/(le+10)-7.407,\\nmth+mth*.07/(mth-12)+below(mth,2.7)*.1*(2.7-mth));\\nmth=if(above(mth,6),6,mth);\\nmres=mpulse*sin(pulse+le*.5) + bnot(mpulse)*mres;\\n\\n\\n\\npulse=if(above(abs(pulse),3.14),-3.14,pulse+(bth+mth+tth)*.003);\\nq1=bres;\\nq2=tres;\\nq3=mres;\\nq4=sin(pulse);\\n\\nmod_state=(above(q1,0)+above(q2,0)+above(q3,0))*(1+above(q4,0));\\nccl=ccl+tpulse+mpulse-bpulse;\\nq5=cos(pulse*(.5+.1*mod_state));\\nq6=sin(pulse*(.5+pow(.25,mod_state)));\\nq7=mod_state;\\nq8=ccl;\\nob_r=.5+.5*cos(q1+q7);\\nob_g=.5+.5*cos(q2*3.14+q7);\\nob_b=.5+.5*cos(q3*2+sin(time*.0816));\\nib_size=.025+.02*q2;\\nob_size=.03+.02*q3-.002*q7;\\nwave_r=.5+.5*sin(q1*q7+time*2.183);\\nwave_g=.5+.5*sin(q2*3+time*1.211);\\nwave_b=.5+.5*sin(q3+time*1.541);\\n\\nob_a=.8+.2*q2;\\nrot=1;\\ncx=cx+.05*q4;\\ncy=cy+.05*q5;\\nzoom=.95+.05*q6;","pixel_eqs_eel":"snee=bnot(above(sin(ang)-x,.5)*above(q2,0)+above(y-cos(ang),.5)*above(q1,0));\\nsnur=bnot(below(x,.5)*above(q3,0)+below(y,.5)*below(q7,4));\\ngrid=sin(sigmoid(sin(y*6.28*q2),sin(x*6.28*q6))*(10+q7));\\nzoom=zoom+.02*cos(rad*2+rad*q2)*sign(snee)-.04*sin(rad*3.14*q3-3.14*cos(rad*3.14*snur-3.14*q6));\\nsx=if(below(x,.5)*below(y,.5),sx+.2*q4*snur,1+.1*q2*grid);\\nsy=if(below(x,.5)*below(y,.5),sy+.2*q5*snee,1+.1*q2*grid);","warp":"","comp":""}')},1815:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1.5,"wave_mode":4,"additivewave":1,"wave_dots":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_a":0.331,"wave_scale":0.898,"wave_smoothing":0.108,"wave_mystery":0.1,"modwavealphastart":0.72,"modwavealphaend":1.28,"warpscale":1.178,"zoomexp":0.56609,"zoom":1.031,"rot":0.003,"dx":-0.004,"warp":0.20798,"sx":0.99405,"sy":1.09369,"wave_r":0,"wave_g":0.5,"wave_b":0.5,"wave_y":0.54,"mv_x":24.8,"mv_dy":0.16,"mv_l":1.5,"mv_a":0},"shapes":[{"baseVals":{"sides":3,"rad":0.31275,"tex_zoom":0.17914,"r":0.82,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"xy=0.5+rand_frame;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"samples":352,"usedots":1,"thick":1,"additive":1,"scaling":0.03856,"smoothing":0.2,"g":0},"init_eqs_eel":"","frame_eqs_eel":"q1=bass_att;","point_eqs_eel":"r = abs (sin (frame /38));\\ng = 0.5*abs (cos (frame /45));\\nb = 0.5*abs (sin (frame / 133));\\na = 0.3;\\nt02 = t02 + q1/10;\\nratio = sin (frame/49);\\n\\nampl = 0.01+0.4*sqr(sin ((frame ) / 18)* cos (frame / 123));\\n\\nx1 = (r-0.5)/15 +0.5 + ampl* sin (sample*6.28);\\ny1 = (b-0.5)/15+0.5 + ampl* cos (sample*6.28);\\n\\nx =  x1+1*0.2*(ampl+ratio )*sin ( sample*6.28 * ratio*7.3);\\ny =  y1+1*0.2*(ampl+ratio )*cos ( sample*6.28*6);\\n"},{"baseVals":{"samples":15,"scaling":2.06378,"smoothing":0.8,"r":0.8,"g":0,"b":0.6,"a":0.9,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"samples":112,"additive":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = min(1,max(0,(bass_att-1)*1.3));\\nwave_g = wave_r*0.7;\\nwave_b = wave_r*0.1;\\nrot = rot + 0.010*( 0.60*sin(0.038*time) + 0.40*sin(0.054*time) );\\ndx = dx + 0.002*( 0.60*sin(0.434*time) + 0.40*sin(0.277*time) );\\ndy = dy + 0.002*( 0.60*sin(0.384*time) + 0.40*sin(0.477*time) );","pixel_eqs_eel":"","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  float tmpvar_2;\\n  tmpvar_2 = dot (texsize.zw, texsize.zw);\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (uv - 0.5);\\n  tmpvar_1.xyz = (max (max (texture (sampler_main, uv).xyz, texture (sampler_main, \\n    ((tmpvar_3 * (1.0 - (8.0 * \\n      sqrt(tmpvar_2)\\n    ))) + 0.5)\\n  ).xyz), texture (sampler_main, (\\n    (tmpvar_3 * (1.0 + (8.0 * sqrt(tmpvar_2))))\\n   + 0.5)).xyz) - 0.03);\\n  ret = tmpvar_1.xyz;\\n }","comp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = (texsize.zw * 4.0);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = (pow ((\\n    (abs(((\\n      ((texture (sampler_blur3, uv).xyz * scale3) + bias3)\\n     * 2.0) - texture (sampler_main, uv).xyz)) * 1.8)\\n   + 0.12), vec3(1.8, 1.8, 1.8)) * ((\\n    dot ((((\\n      (texture (sampler_blur2, (uv + (vec2(1.0, 0.0) * tmpvar_1))).xyz * scale2)\\n     + bias2) - (\\n      (texture (sampler_blur2, (uv - (vec2(1.0, 0.0) * tmpvar_1))).xyz * scale2)\\n     + bias2)) + ((\\n      (texture (sampler_blur2, (uv + (vec2(0.0, 1.0) * tmpvar_1))).xyz * scale2)\\n     + bias2) - (\\n      (texture (sampler_blur2, (uv - (vec2(0.0, 1.0) * tmpvar_1))).xyz * scale2)\\n     + bias2))), vec3(0.32, 0.49, 0.29))\\n   * 4.0) + 1.0));\\n  ret = tmpvar_2.xyz;\\n }"}')},6457:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":0.16,"decay":0.96,"echo_zoom":0.997,"echo_alpha":0.5,"echo_orient":1,"wave_mode":6,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.004,"wave_scale":1.666,"wave_smoothing":0.81,"modwavealphastart":1.4,"modwavealphaend":1.4,"zoom":1.0299,"warp":0.01,"ob_size":0.007,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0.3},"shapes":[{"baseVals":{"enabled":1,"sides":24,"additive":1,"num_inst":3,"x":0.48,"rad":0.01,"tex_zoom":4.36077,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = rand(1000)/1000;\\ny = rand(1000)/1000;\\n\\nr = rand(1200)/1000;\\ng = rand(1200)/1000;\\nb = rand(1200)/1000;\\n\\nr2 = r;\\ng2 = g;\\nb2 = b;"},{"baseVals":{"sides":5,"textured":1,"rad":0.986,"tex_ang":3.14159,"tex_zoom":0.99979,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ang =sin(time/65) ;// ang + (bass*.2) + (time*.4);"},{"baseVals":{"sides":100,"textured":1,"x":0.9,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = sin(time) * .4 + .5;\\n\\n\\npow( (bass*.15),2);"},{"baseVals":{"sides":36,"textured":1,"rad":0.63647,"tex_zoom":1.5339,"r2":1,"g2":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"thick":1,"additive":1,"r":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"q1 = below(rand(100),4 + 10*(treb+mid+bass));","point_eqs_eel":"it = (it + 1)*above(sample,0)*below(it,53);\\nita = (ita + equal(it,0))*above(sample,0);\\n\\nsw = 1-equal(it,0)*equal(ita,0);\\nswi = (equal(lr,9) + equal(lr,5))*equal(it,0)*equal(ita,4);\\nxv = if(sw - swi,xv,rand(1001)*.001*.8);\\nmx = xv + ita*.025;\\nmy = if(sw - swi,my,rand(1001)*.001*.975);\\n\\nsz = .01;\\nvx = above(it,1)*below(it,39) + above(it,12)*below(it,28) - equal(it,20) + equal(it,46) + equal(it,51) + equal(it,41) - equal(it,15) - equal(it,25) + equal(it,10) + equal(it,30) - equal(it,4) - equal(it,36);\\nvy = above(it,17)*below(it,49) + above(it,22)*below(it,44) - equal(it,33) + equal(it,7) + equal(it,51) + equal(it,15) - equal(it,41) - equal(it,25) + equal(it,4) + equal(it,10) - equal(it,36) - equal(it,30);\\n\\nsa = equal(ita,0)*13 + equal(ita,1)*9 + equal(ita,2)*12 + equal(ita,3)*11 + equal(ita,4)*4 + equal(ita,5)*18 + equal(ita,6)*15 + equal(ita,7)*16;\\nsb = equal(ita,0)*11 + equal(ita,1)*9 + equal(ita,2)*12 + equal(ita,3)*12;\\nsc = equal(ita,0)*4 + equal(ita,1)*15 + equal(ita,3)*4 + equal(ita,4)*18 + equal(ita,5)*21 + equal(ita,6)*7 + equal(ita,7)*19;\\nsd = equal(ita,0)*12 + equal(ita,1)*15 + equal(ita,2)*22 + equal(ita,3)*5;\\nse = equal(ita,0)*8 + equal(ita,1)*1 + equal(ita,2)*20 + equal(ita,3)*5;\\nsf = equal(ita,0)*6 + equal(ita,1)*5 + equal(ita,2)*1 + equal(ita,3)*18 + equal(ita,5)*10 + equal(ita,6)*15 + equal(ita,7)*25;\\nsg = equal(ita,0)*1 + equal(ita,1)*14 + equal(ita,2)*7 + equal(ita,3)*5 + equal(ita,4)*18;\\nsh = equal(ita,0)*19 + equal(ita,1)*21 + equal(ita,2)*18 + equal(ita,3)*16 + equal(ita,4)*18 + equal(ita,5)*9 + equal(ita,6)*19 + equal(ita,7)*5;\\nsi = equal(ita,0)*8 + equal(ita,1)*1 + equal(ita,2)*16 + equal(ita,3)*16 + equal(ita,4)*25;\\nsj = equal(ita,0)*25 + equal(ita,1)*5 + equal(ita,2)*19 + equal(ita,6)*14 + equal(ita,7)*15;\\n\\nlr = if(sw,lr,rand(10));\\nlet = equal(lr,0)*sa + equal(lr,1)*sb + equal(lr,2)*sc + equal(lr,3)*sd + equal(lr,4)*se + equal(lr,5)*sf + equal(lr,6)*sg + equal(lr,7)*sh + equal(lr,8)*si + equal(lr,9)*sj;\\n\\nva = equal(let,23) + equal(let,24) + equal(let,26);\\nvb = above(let,0)*below(let,9) + above(let,10)*below(let,19) + equal(let,21) + equal(let,23);\\nvc = equal(let,1) + equal(let,2) + equal(let,5) + equal(let,6) + equal(let,8) + equal(let,11) + equal(let,16) + equal(let,18) + equal(let,19);\\nvd = above(let,1)*below(let,9) + above(let,10)*below(let,24) - equal(let,20);\\nve = equal(let,13) + equal(let,14) + equal(let,24) + equal(let,25);\\nvf = above(let,1)*below(let,8) + equal(let,9) + above(let,14)*below(let,21) + equal(let,26);\\nvg = equal(let,1);\\nvh = equal(let,9) + equal(let,20);\\nvi = above(let,0)*below(let,5) - equal(let,3) + equal(let,18);\\nvj = above(let,2)*below(let,8) - equal(let,4) + equal(let,9) + above(let,14)*below(let,21) - equal(let,18) + equal(let,26);\\nvk = equal(let,11) + equal(let,13) + above(let,23)*below(let,27);\\nvl = equal(let,8) + equal(let,10) + above(let,12)*below(let,18) + above(let,20)*below(let,24);\\nvm = equal(let,1) + equal(let,2) + equal(let,8) + equal(let,16) + equal(let,18) + equal(let,19);\\nvn = equal(let,1) + equal(let,7) + equal(let,8) + equal(let,10) + above(let,12)*below(let,24) - equal(let,16) - equal(let,18) - equal(let,20) - equal(let,22);\\nvo = equal(let,11) + equal(let,14) + equal(let,17) + equal(let,18) + equal(let,23) + equal(let,24);\\nvp = equal(let,3) + equal(let,5) + equal(let,7) + equal(let,9) + equal(let,10) + equal(let,12) + equal(let,15) + equal(let,17) + equal(let,19) + equal(let,21) + equal(let,26);\\nvq = equal(let,2) + equal(let,4) + equal(let,22);\\nvr = equal(let,9) + equal(let,20) + equal(let,25);\\nvs = equal(let,22);\\nvt = above(let,1)*below(let,13) - equal(let,6) - equal(let,8) - equal(let,11) + equal(let,15) + equal(let,17) + equal(let,19) + equal(let,21) + equal(let,26);\\n\\na = if(above(it,51),0,if(above(it,49),va,if(above(it,47),vb,if(above(it,44),vc,if(above(it,42),vd,if(above(it,39),ve, if(above(it,37),vf,if(above(it,34),vg,if(above(it,31),vh,if(above(it,28),vi,if(above(it,26),vj,if(above(it,23),vk, if(above(it,21),vl,if(above(it,18),vm,if(above(it,16),vn,if(above(it,13),vo,if(above(it,11),vp,if(above(it,8),vq, if(above(it,5),vr,if(above(it,2),vs,if(it,vt,0)))))))))))))))))))));\\n\\na = a*below(ita,8)*q1;\\n\\nx = mx + vx*sz*.75;\\ny = my + vy*sz*1.5;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"movement = movement + 0.1*max(0,bass+bass_att-2) + 0.15*pow(bass,3) + 0.005;\\nq1 = movement;\\nmonitor =q1;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 8.0);\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 1.2)) + rand_frame.xy);\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1)).x;\\n  tmpvar_4.y = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1)).x;\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (mix (uv_orig, uv, vec2(0.4, 0.4)) + ((tmpvar_4 * texsize.zw) * 2.0));\\n  ret_1.x = (((texture (sampler_main, tmpvar_5).x - \\n    ((texture (sampler_main, tmpvar_5).x - ((texture (sampler_blur3, tmpvar_5).xyz * scale3) + bias3).x) * 0.02)\\n  ) - 0.004) + ((texture (sampler_noise_lq, tmpvar_3).xyz - 0.5) * 0.12)).x;\\n  ret_1.y = (texture (sampler_main, (mix (uv_orig, uv, vec2(0.3, 0.3)) + (\\n    ((texture (sampler_noise_lq, tmpvar_3).xyz - 0.5).xy * texsize.zw)\\n   * 3.0))).y - 0.004);\\n  ret_1.z = texture (sampler_main, uv).z;\\n  ret_1.z = (ret_1.z + ((\\n    (ret_1.z - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).z)\\n   * 0.1) - 0.015));\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = ret_1;\\n  ret = tmpvar_6.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = (1.0 - uv.x);\\n  tmpvar_2.y = uv.y;\\n  vec3 tmpvar_3;\\n  tmpvar_3 = vec3((texture (sampler_main, uv).x + texture (sampler_main, tmpvar_2).x));\\n  vec2 tmpvar_4;\\n  vec4 tmpvar_5;\\n  tmpvar_5 = texture (sampler_blur1, uv);\\n  tmpvar_4 = (((uv - 0.5) * (1.0 - \\n    ((tmpvar_5.xyz * scale1) + bias1)\\n  .zzz).xy) + 0.5);\\n  vec3 tmpvar_6;\\n  tmpvar_6 = (tmpvar_3 + clamp ((\\n    pow (texture (sampler_main, tmpvar_4).zzz, vec3(0.5, 0.5, 0.5))\\n   * \\n    (1.0 - (tmpvar_3.x * 2.0))\\n  ), 0.0, 1.0));\\n  vec3 tmpvar_7;\\n  tmpvar_7 = (tmpvar_6 + clamp ((\\n    pow (((texture (sampler_blur1, tmpvar_4).xyz * scale1) + bias1).zzz, vec3(0.5, 0.5, 0.5))\\n   * \\n    (1.0 - (tmpvar_6.x * 2.0))\\n  ), 0.0, 1.0));\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = uv.x;\\n  tmpvar_8.y = (1.0 - uv.y);\\n  ret_1 = (pow (mix (\\n    (vec3((((tmpvar_5.xyz * scale1) + bias1).x + ((texture (sampler_blur3, uv).xyz * scale3) + bias3).x)) + (((texture (sampler_blur1, tmpvar_2).xyz * scale1) + bias1).x + ((texture (sampler_blur3, tmpvar_2).xyz * scale3) + bias3).x))\\n  , tmpvar_7, tmpvar_7), vec3(5.0, 1.0, 0.5)) + pow ((texture (sampler_main, tmpvar_8).yyy + texture (sampler_main, \\n    (1.0 - uv)\\n  ).yyy), vec3(0.6, 0.95, 5.0)));\\n  vec4 tmpvar_9;\\n  tmpvar_9 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * tmpvar_4.xyy) * (\\n    (q28 * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q31)));\\n  if (((ret_1.x > (q26 * q13)) && (ret_1.x <= (q23 * q11)))) {\\n    ret_1.z = (ret_1.z - (tmpvar_9.x * 0.5));\\n  };\\n  if (((ret_1.y > (q25 * q11)) && (ret_1.y <= (q22 * q12)))) {\\n    ret_1.x = (ret_1.x - (tmpvar_9.y * 0.5));\\n  };\\n  if (((ret_1.z > (q24 * q12)) && (ret_1.z <= (q21 * q13)))) {\\n    ret_1.y = (ret_1.y - (tmpvar_9.z * 0.5));\\n  };\\n  ret_1 = (ret_1 - ((slow_roam_sin.xyz * roam_cos.zxy) * 0.5));\\n  vec4 tmpvar_10;\\n  tmpvar_10.w = 1.0;\\n  tmpvar_10.xyz = ret_1;\\n  ret = tmpvar_10.xyz;\\n }"}')},13:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1.84,"decay":0.95,"echo_zoom":1,"wave_mode":5,"wave_dots":1,"wave_thick":1,"wave_a":0.303,"wave_scale":1.936,"wave_smoothing":0.9,"wave_mystery":0.66,"modwavealphastart":0.66,"modwavealphaend":0.86,"fshader":1,"zoom":1.0299,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.8,"ob_size":0.007,"ib_size":0.26,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"movement = movement + 0.1*max(0,bass+bass_att-2) + 0.15*pow(bass,3) + 0.005;\\nq1 = movement;\\nmonitor =q1;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 8.0);\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = tmpvar_3.z;\\n  tmpvar_5.y = tmpvar_4.z;\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv + ((tmpvar_5 * texsize.zw) * 4.0));\\n  ret_1.z = (((texture (sampler_main, tmpvar_6).z - \\n    ((texture (sampler_main, tmpvar_6).z - ((texture (sampler_blur3, tmpvar_6).xyz * scale3) + bias3).z) * 0.02)\\n  ) - 0.008) + ((texture (sampler_noise_lq, \\n    (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)\\n  ).xyz - 0.5) * 0.1)).x;\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = tmpvar_3.x;\\n  tmpvar_7.y = tmpvar_4.x;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = ((0.5 + (uv - 0.5)) - (tmpvar_7 * texsize.zw));\\n  ret_1.x = texture (sampler_main, tmpvar_8).x;\\n  ret_1.x = (ret_1.x + ((\\n    (ret_1.x - ((texture (sampler_blur3, tmpvar_8).xyz * scale3) + bias3))\\n  .x * 0.4) + 0.006));\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = tmpvar_3.x;\\n  tmpvar_9.y = tmpvar_4.x;\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = tmpvar_3.y;\\n  tmpvar_10.y = tmpvar_4.y;\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = tmpvar_3.z;\\n  tmpvar_11.y = tmpvar_4.z;\\n  ret_1.y = texture (sampler_fc_main, (((uv - \\n    ((tmpvar_9 * texsize.zw) * 8.0)\\n  ) + (\\n    (tmpvar_10 * texsize.zw)\\n   * 4.0)) + ((tmpvar_11 * texsize.zw) * 8.0))).y;\\n  ret_1.y = (ret_1.y * (1.0 + (ret_1.x * 0.1)));\\n  ret_1.y = (ret_1.y - (0.004 + (\\n    clamp (ret_1.z, 0.0, 1.0)\\n   * 0.012)));\\n  vec4 tmpvar_12;\\n  tmpvar_12.w = 1.0;\\n  tmpvar_12.xyz = ret_1;\\n  ret = tmpvar_12.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = (1.0 - uv.x);\\n  tmpvar_2.y = uv.y;\\n  vec3 tmpvar_3;\\n  tmpvar_3 = vec3((texture (sampler_main, uv).x + texture (sampler_main, tmpvar_2).x));\\n  vec2 tmpvar_4;\\n  vec4 tmpvar_5;\\n  tmpvar_5 = texture (sampler_blur1, uv);\\n  tmpvar_4 = (((uv - 0.5) * (1.0 - \\n    ((tmpvar_5.xyz * scale1) + bias1)\\n  .zzz).xy) + 0.5);\\n  vec3 tmpvar_6;\\n  tmpvar_6 = (tmpvar_3 + clamp ((\\n    pow (texture (sampler_main, tmpvar_4).zzz, vec3(0.5, 0.5, 0.5))\\n   * \\n    (1.0 - (tmpvar_3.x * 2.0))\\n  ), 0.0, 1.0));\\n  vec3 tmpvar_7;\\n  tmpvar_7 = (tmpvar_6 + clamp ((\\n    pow (((texture (sampler_blur1, tmpvar_4).xyz * scale1) + bias1).zzz, vec3(0.5, 0.5, 0.5))\\n   * \\n    (1.0 - (tmpvar_6.x * 2.0))\\n  ), 0.0, 1.0));\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = uv.x;\\n  tmpvar_8.y = (1.0 - uv.y);\\n  ret_1 = (pow (mix (\\n    (vec3((((tmpvar_5.xyz * scale1) + bias1).x + ((texture (sampler_blur3, uv).xyz * scale3) + bias3).x)) + (((texture (sampler_blur1, tmpvar_2).xyz * scale1) + bias1).x + ((texture (sampler_blur3, tmpvar_2).xyz * scale3) + bias3).x))\\n  , tmpvar_7, tmpvar_7), vec3(5.0, 1.0, 0.5)) + pow ((texture (sampler_main, tmpvar_8).yyy + texture (sampler_main, \\n    (1.0 - uv)\\n  ).yyy), vec3(0.6, 0.95, 5.0)));\\n  vec4 tmpvar_9;\\n  tmpvar_9 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * tmpvar_4.xyy) * (\\n    (q28 * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q31)));\\n  if (((ret_1.x > (q26 * q13)) && (ret_1.x <= (q23 * q11)))) {\\n    ret_1.z = (ret_1.z - (tmpvar_9.x * 0.5));\\n  };\\n  if (((ret_1.y > (q25 * q11)) && (ret_1.y <= (q22 * q12)))) {\\n    ret_1.x = (ret_1.x - (tmpvar_9.y * 0.5));\\n  };\\n  if (((ret_1.z > (q24 * q12)) && (ret_1.z <= (q21 * q13)))) {\\n    ret_1.y = (ret_1.y - (tmpvar_9.z * 0.5));\\n  };\\n  ret_1 = (ret_1 - ((slow_roam_sin.xyz * roam_cos.zxy) * 0.5));\\n  vec4 tmpvar_10;\\n  tmpvar_10.w = 1.0;\\n  tmpvar_10.xyz = ret_1;\\n  ret = tmpvar_10.xyz;\\n }"}')},2931:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1.78,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_dots":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":100,"wave_scale":28.599,"wave_smoothing":0.5,"wave_mystery":-1,"modwavealphastart":0.4,"modwavealphaend":1,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"ob_size":0,"ob_b":0.2,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_a":1,"mv_l":1.5,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0,"b1x":0.7,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"rad":0.40031,"r":0.5,"g":0.5,"r2":0.5,"g2":0,"border_b":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"sounds=(bass+treb+mid)/3;\\n\\nrad=rad*sounds*0.6;\\n\\nr=r+sin(bass)*g;\\ng=g+sin(mid)*g;\\n\\n\\nx=x+0.207*cos(time*bass*0.1);\\ny=y+0.207*sin(time*bass*0.1);"},{"baseVals":{"enabled":1,"sides":100,"rad":0.13465,"r2":1,"a2":0.3,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"\\ng2=g2+0.09*sin((treb+mid)*1.23);\\ng=g+0.09*cos((bass+mid)*1.37);\\n\\nsounds=(bass+mid+treb)/3;\\n\\nrad=rad*(treb+mid)/3;\\n\\nx=x+0.300*sin(time*bass);\\ny=y+0.317*cos(time*bass);"},{"baseVals":{"enabled":1,"sides":100,"rad":0.20047,"g":1,"b":1,"r2":0.5,"g2":0.5,"b2":1,"border_b":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"sounds=(bass+treb+mid)/3;\\natt=(bass_att+treb_att+mid_att)/3;\\natt=(bass_att+treb_att+mid_att)/3;\\nr2=r2+(0.25*sin(time*6.28))-bass;\\ng2=g2+(0.25*sin(time*6.28))-bass;\\n\\nrad=rad;\\nx=x+0.217*cos(time*2.3)+sounds*0.1;\\ny=y+0.217*sin((time*3.5)+(sounds*0.3));"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"sep":256,"scaling":20.35074,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"r=r+0.5*sin(treb*1.13);\\ng=g+0.5*sin(bass*1.33);\\nb=b+0.5*sin(mid*1.23);","point_eqs_eel":""},{"baseVals":{"sep":256,"usedots":1,"scaling":100,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"dec_med = pow (0.8, 30/fps);\\ndec_slow = pow (0.9, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %16;\\nindex2 = (index2 + is_beat*bnot(index))%5;\\nmonitor = index2;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass + mid + treb;\\n\\nsb = sb*dec_med + q21*(1-dec_med);\\nq29 = sb;\\n\\nk1 =  is_beat*bnot(index)*bnot(index2);\\np1 =  (index2-2);\\n\\np2 = dec_med * p2+ (1-dec_med)*p1;\\np3 = dec_med * p3+ (1-dec_med)*p2;\\nq5 = cos(p3*3.14/2);\\n\\nrott =  rott +  .003*30/fps*p3;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\nmovx = movx + .002*30/fps;\\nq28 = movx;\\n\\nq15 = (1+sin(time/23))*.15;\\nq29 = 4*(.5+sin(time/17));\\nq30 = 5/(1.2+sin(time/50)); \\nq31 = sin(time/38)/3;\\nq32 = 2+sin(time/18);\\n\\nwarp = .06;\\nzoom = .998;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = ((uv * texsize.xy) * 0.08);\\n  vec3 tmpvar_2;\\n  tmpvar_2 = (texture (sampler_main, (uv - (\\n    ((sin(tmpvar_1) / cos(tmpvar_1)) * texsize.zw)\\n   * 3.0))).xyz + (vec3(dot (texture (sampler_noise_lq, \\n    ((((texsize.xy * texsize_noise_lq.zw).x * uv) * 0.02) + (0.1 * rand_frame).xy)\\n  ), vec4(0.32, 0.49, 0.29, 0.0))) / 30.0));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ((mix (tmpvar_2, \\n    (1.0 - tmpvar_2.zyx)\\n  , vec3(0.01, 0.01, 0.01)) - 0.03) - (0.2 * pow (\\n    (1.0 - rad)\\n  , 18.0)));\\n  ret = tmpvar_3.xyz;\\n }","comp":"vec3 xlat_mutableblur;\\nvec3 xlat_mutableret1;\\nvec2 xlat_mutableuv2;\\nvec2 xlat_mutableuv3;\\n shader_body { \\n  vec2 uv_1;\\n  float inten_2;\\n  float dist_3;\\n  float ang2_4;\\n  uv_1 = (uv - 0.5);\\n  uv_1 = (uv_1 * aspect.xy);\\n  float tmpvar_5;\\n  tmpvar_5 = cos(q30);\\n  float tmpvar_6;\\n  tmpvar_6 = sin(q30);\\n  xlat_mutableuv2.x = ((uv_1.x * tmpvar_5) - (uv_1.y * tmpvar_6));\\n  xlat_mutableuv2.y = ((uv_1.x * tmpvar_6) + (uv_1.y * tmpvar_5));\\n  xlat_mutableuv2 = (xlat_mutableuv2 * aspect.yx);\\n  dist_3 = (1.0 - fract(q29));\\n  inten_2 = ((4.0 * dist_3) * (1.0 - (dist_3 * dist_3)));\\n  xlat_mutableuv3 = (((3.0 * xlat_mutableuv2) * dist_3) + 0.5);\\n  xlat_mutableblur = (((texture (sampler_blur1, \\n    fract(xlat_mutableuv3)\\n  ).xyz * scale1) + bias1) * vec3(0.8, 0.9, 1.0));\\n  xlat_mutableret1 = max (vec3(0.0, 0.0, 0.0), ((texture (sampler_main, xlat_mutableuv3).xyz + xlat_mutableblur) * inten_2));\\n  ang2_4 = (2.093333 + q30);\\n  float tmpvar_7;\\n  tmpvar_7 = cos(ang2_4);\\n  float tmpvar_8;\\n  tmpvar_8 = sin(ang2_4);\\n  xlat_mutableuv2.x = ((uv_1.x * tmpvar_7) - (uv_1.y * tmpvar_8));\\n  xlat_mutableuv2.y = ((uv_1.x * tmpvar_8) + (uv_1.y * tmpvar_7));\\n  xlat_mutableuv2 = (xlat_mutableuv2 * aspect.yx);\\n  dist_3 = (1.0 - fract((0.3333333 + q29)));\\n  inten_2 = ((4.0 * dist_3) * (1.0 - (dist_3 * dist_3)));\\n  xlat_mutableuv3 = (((3.0 * xlat_mutableuv2) * dist_3) + 0.5);\\n  xlat_mutableblur = (((texture (sampler_blur1, \\n    fract(xlat_mutableuv3)\\n  ).xyz * scale1) + bias1) * vec3(0.8, 0.9, 1.0));\\n  xlat_mutableret1 = max (xlat_mutableret1, ((texture (sampler_main, xlat_mutableuv3).xyz + xlat_mutableblur) * inten_2));\\n  ang2_4 = (4.186667 + q30);\\n  float tmpvar_9;\\n  tmpvar_9 = cos(ang2_4);\\n  float tmpvar_10;\\n  tmpvar_10 = sin(ang2_4);\\n  xlat_mutableuv2.x = ((uv_1.x * tmpvar_9) - (uv_1.y * tmpvar_10));\\n  xlat_mutableuv2.y = ((uv_1.x * tmpvar_10) + (uv_1.y * tmpvar_9));\\n  xlat_mutableuv2 = (xlat_mutableuv2 * aspect.yx);\\n  dist_3 = (1.0 - fract((0.6666667 + q29)));\\n  inten_2 = ((4.0 * dist_3) * (1.0 - (dist_3 * dist_3)));\\n  xlat_mutableuv3 = (((3.0 * xlat_mutableuv2) * dist_3) + 0.5);\\n  xlat_mutableblur = (((texture (sampler_blur1, \\n    fract(xlat_mutableuv3)\\n  ).xyz * scale1) + bias1) * vec3(0.8, 0.9, 1.0));\\n  xlat_mutableret1 = max (xlat_mutableret1, ((texture (sampler_main, xlat_mutableuv3).xyz + xlat_mutableblur) * inten_2));\\n  ang2_4 = (6.28 + q30);\\n  float tmpvar_11;\\n  tmpvar_11 = cos(ang2_4);\\n  float tmpvar_12;\\n  tmpvar_12 = sin(ang2_4);\\n  xlat_mutableuv2.x = ((uv_1.x * tmpvar_11) - (uv_1.y * tmpvar_12));\\n  xlat_mutableuv2.y = ((uv_1.x * tmpvar_12) + (uv_1.y * tmpvar_11));\\n  xlat_mutableuv2 = (xlat_mutableuv2 * aspect.yx);\\n  dist_3 = (1.0 - fract((1.0 + q29)));\\n  inten_2 = ((4.0 * dist_3) * (1.0 - (dist_3 * dist_3)));\\n  xlat_mutableuv3 = (((3.0 * xlat_mutableuv2) * dist_3) + 0.5);\\n  xlat_mutableblur = (((texture (sampler_blur1, \\n    fract(xlat_mutableuv3)\\n  ).xyz * scale1) + bias1) * vec3(0.8, 0.9, 1.0));\\n  xlat_mutableret1 = max (xlat_mutableret1, ((texture (sampler_main, xlat_mutableuv3).xyz + xlat_mutableblur) * inten_2));\\n  vec4 tmpvar_13;\\n  tmpvar_13.w = 1.0;\\n  tmpvar_13.xyz = (xlat_mutableret1 - 0.1);\\n  ret = tmpvar_13.xyz;\\n }"}')},794:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":3,"wrap":0,"wave_scale":0.133,"wave_mystery":-0.38,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"rad":0.1644,"g":1,"b":1,"a":0,"r2":1,"b2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"a = if(above(bass,1.2),1,0);\\nx = rand(100)*.01;\\ny = rand(100)*.01;\\nrad = .1+rand(50)*.01;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"warp = 0;\\nwave_r = wave_r + .4*sin(time*.333)+bass_att*.2;\\nwave_g = wave_g + .4*sin(time*.555)+treb_att*.2;\\nwave_b = wave_b + .4*sin(time*.444)+mid_att*.2;\\ndx = .0002*sin(time);\\ndy = .0002*sin(time*.999);","pixel_eqs_eel":"zoom = 1+(rad*(.15+(bass*.05)));","warp":" shader_body { \\n  vec3 ret_1;\\n  ret_1 = (texture (sampler_fc_main, uv).xyz + ((\\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5)\\n   / 256.0) * 5.0));\\n  ret_1 = (ret_1 + ((ret_1 - \\n    ((texture (sampler_blur2, uv).xyz * scale2) + bias2)\\n  ) * 0.3));\\n  ret_1 = (ret_1 * 0.9);\\n  ret_1 = (ret_1 * 0.96);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ret_1;\\n  ret = tmpvar_2.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  ret_1 = (texture (sampler_main, uv).xyz * 2.0);\\n  ret_1 = (ret_1 * 2.0);\\n  ret_1 = (ret_1 + abs((ret_1 - 0.2)));\\n  ret_1 = (ret_1 - 0.2);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ret_1;\\n  ret = tmpvar_2.xyz;\\n }"}')},7598:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":3,"wave_mode":3,"wave_dots":1,"modwavealphabyvolume":1,"wave_scale":16.217,"wave_mystery":-0.44,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"additive":1,"textured":1,"rad":0.59958,"g":1,"b":1,"r2":1,"b2":1,"border_r":0,"border_g":0,"border_b":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"warp = 0; \\nwave_r = wave_r + .2*sin(time*1.33)+bass*.3; \\nwave_g = wave_g + .2*sin(time)+treb*.3; \\nwave_b = wave_b + .2*sin(time*.988)+mid*.3; \\nzoom = 1+bass*.01;","pixel_eqs_eel":"zoom = zoom + (rad*.01)*treb;","warp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (uv - 0.5);\\n  ret_1.x = texture (sampler_main, (tmpvar_2 + 0.5)).x;\\n  ret_1.y = texture (sampler_main, ((tmpvar_2 * 0.98) + 0.5)).y;\\n  ret_1.z = texture (sampler_main, ((tmpvar_2 * 0.96) + 0.5)).z;\\n  ret_1 = (ret_1 - (ret_1 * 0.5));\\n  ret_1 = ((ret_1 * abs(\\n    (((texture (sampler_blur2, uv).xyz * scale2) + bias2) - 0.5)\\n  )) * 5.0);\\n  ret_1 = (ret_1 - 0.01);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_1;\\n  ret = tmpvar_3.xyz;\\n }","comp":" shader_body { \\n  vec2 uv2_1;\\n  vec3 ret_2;\\n  uv2_1 = (uv + (vec2(1.0, 0.0) * texsize.zw));\\n  float tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(-1.0, 0.0) * texsize.zw));\\n  float tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(0.0, 1.0) * texsize.zw));\\n  float tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(0.0, -1.0) * texsize.zw));\\n  vec3 tmpvar_6;\\n  tmpvar_6.z = 0.14;\\n  tmpvar_6.x = (tmpvar_3 - tmpvar_4);\\n  tmpvar_6.y = (tmpvar_5 - ((\\n    (texture (sampler_main, uv2_1).xyz + (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4))\\n   + \\n    (((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2) * 0.15)\\n  ) + (\\n    ((texture (sampler_blur3, uv2_1).xyz * scale3) + bias3)\\n   * 0.1)).x);\\n  ret_2 = (0.5 + (0.5 * normalize(tmpvar_6)));\\n  vec2 x_7;\\n  x_7 = (ret_2.xy - 0.5);\\n  ret_2 = (ret_2 * clamp ((\\n    sqrt(dot (x_7, x_7))\\n   * 5.0), 0.0, 1.0));\\n  ret_2 = ret_2.xxy;\\n  ret_2 = (ret_2 + 1.15);\\n  ret_2 = (ret_2 * mix (ret_2, (ret_2 * \\n    (((texture (sampler_blur3, uv).xyz * scale3) + bias3) - ((texture (sampler_blur1, uv).xyz * scale1) + bias1))\\n  ), pow (hue_shader.yxz, ret_2)));\\n  ret_2 = (ret_2 * ret_2);\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = ret_2;\\n  ret = tmpvar_8.xyz;\\n }"}')},4523:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"wave_mode":3,"wave_dots":1,"modwavealphabyvolume":1,"wave_scale":16.217468,"wave_mystery":-0.44,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"additive":1,"textured":1,"rad":0.599579,"g":1,"b":1,"r2":1,"b2":1,"border_r":0,"border_g":0,"border_b":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"warp = 0; \\nwave_r = wave_r + .2*sin(time*1.33)+bass*.3; \\nwave_g = wave_g + .2*sin(time)+treb*.3; \\nwave_b = wave_b + .2*sin(time*.988)+mid*.3; \\nzoom = 1+bass*.01;","pixel_eqs_eel":"zoom = zoom + (rad*.01)*treb;","warp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (uv - 0.5);\\n  ret_1.x = texture (sampler_main, (tmpvar_2 + 0.5)).x;\\n  ret_1.y = texture (sampler_main, ((tmpvar_2 * 0.98) + 0.5)).y;\\n  ret_1.z = texture (sampler_main, ((tmpvar_2 * 0.96) + 0.5)).z;\\n  ret_1 = (ret_1 - (ret_1 * 0.5));\\n  ret_1 = ((ret_1 * abs(\\n    (((texture (sampler_blur2, uv).xyz * scale2) + bias2) - 0.5)\\n  )) * 5.0);\\n  ret_1 = (ret_1 - 0.01);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_1;\\n  ret = tmpvar_3.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv);\\n  ret_1 = (tmpvar_2.xyz * 5.0);\\n  ret_1 = (ret_1 + 1.2);\\n  vec3 tmpvar_3;\\n  tmpvar_3.x = (1.0 + (0.2 * sin(time)));\\n  tmpvar_3.y = (1.0 + (0.2 * sin(\\n    (time * 0.2233333)\\n  )));\\n  tmpvar_3.z = (1.0 + (0.2 * sin(\\n    (time * 0.733467)\\n  )));\\n  vec4 tmpvar_4;\\n  tmpvar_4 = texture (sampler_blur1, uv);\\n  ret_1 = ((ret_1 * (\\n    (tmpvar_4.xyz * scale1)\\n   + bias1).x) * tmpvar_3);\\n  vec3 tmpvar_5;\\n  tmpvar_5 = mix ((mix (\\n    (mix ((ret_1 * (\\n      (tmpvar_4.xyz * scale1)\\n     + bias1)), (tmpvar_2.xyz * 3.0), tmpvar_2.xxx) * ((tmpvar_4.xyz * scale1) + bias1))\\n  , \\n    (tmpvar_2.xyz * 1.5)\\n  , tmpvar_2.yyy) * (\\n    (tmpvar_4.xyz * scale1)\\n   + bias1)), tmpvar_2.xyz, tmpvar_2.zzz);\\n  ret_1 = tmpvar_5;\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = tmpvar_5;\\n  ret = tmpvar_6.xyz;\\n }"}')},7927:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":3,"wave_mode":2,"wrap":0,"wave_a":0.001,"wave_scale":5.819,"wave_mystery":-0.38,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"sides":100,"rad":0.16446,"g":1,"b":1,"a":0,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"a = if(above(bass,2.5),1,0);"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"y = sample;\\nx = (value1+value2)*.003;\\na = (value1+value2)*.1;\\nr = .5+.3*sin(sample*10+time);\\ng = .5+.3*cos(sample*10-time*1.334);\\nb = .5+.3*sin(sample*10+time*.998);"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"warp = 0;\\nwave_r = wave_r + .4*sin(time*.333)+bass_att*.2;\\nwave_g = wave_g + .4*sin(time*.555)+treb_att*.2;\\nwave_b = wave_b + .4*sin(time*.444)+mid_att*.2;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 muv_1;\\n  vec3 ret_2;\\n  float tmpvar_3;\\n  tmpvar_3 = (2.0 * bass_att);\\n  muv_1.x = (uv.x - ((\\n    ((0.01 * cos((\\n      (uv.x * (5.0 + tmpvar_3))\\n     + time))) + (0.01 * cos((\\n      (uv.y * (5.0 + tmpvar_3))\\n     + time))))\\n   * 0.5) * treb_att));\\n  float tmpvar_4;\\n  tmpvar_4 = (2.0 * mid_att);\\n  muv_1.y = (uv.y + ((\\n    ((0.01 * sin((\\n      (uv.x * (5.0 + tmpvar_4))\\n     + time))) - (0.01 * cos((\\n      (uv.y * (5.0 + tmpvar_4))\\n     + time))))\\n   * 0.5) * bass_att));\\n  vec3 tmpvar_5;\\n  tmpvar_5 = ((texture (sampler_blur2, muv_1).xyz * scale2) + bias2);\\n  vec4 tmpvar_6;\\n  tmpvar_6 = texture (sampler_pw_main, muv_1);\\n  ret_2.x = (tmpvar_6.x + (tmpvar_5.x * (bass_att * 0.05)));\\n  ret_2.y = (tmpvar_6.y + (tmpvar_5.y * (treb_att * 0.05)));\\n  ret_2.z = (tmpvar_6.z + (tmpvar_5.z * (mid_att * 0.05)));\\n  if ((ret_2.x > 0.9)) {\\n    ret_2.x = 0.0;\\n  };\\n  if ((ret_2.y > 0.9)) {\\n    ret_2.y = 0.0;\\n  };\\n  if ((ret_2.z > 0.9)) {\\n    ret_2.z = 0.0;\\n  };\\n  vec4 tmpvar_7;\\n  tmpvar_7.w = 1.0;\\n  tmpvar_7.xyz = ret_2;\\n  ret = tmpvar_7.xyz;\\n }","comp":" shader_body { \\n  vec3 ret1_1;\\n  vec2 uv1_2;\\n  vec3 ret_3;\\n  vec4 tmpvar_4;\\n  tmpvar_4 = texture (sampler_main, uv);\\n  ret_3 = (tmpvar_4.xyz * (0.6 + (0.3 * \\n    sin(((uv.x * 10.0) + time))\\n  )));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = (texture (sampler_main, (uv - vec2(0.001, 0.0))).xyz - texture (sampler_main, (uv + vec2(0.001, 0.0))).xyz).x;\\n  tmpvar_5.y = (texture (sampler_main, (uv - vec2(0.0, 0.001))).xyz - texture (sampler_main, (uv + vec2(0.0, 0.001))).xyz).x;\\n  uv1_2 = ((0.5 * cos(\\n    (((uv - 0.5) * 1.5) + 1.6)\\n  )) - (3.0 * tmpvar_5));\\n  ret1_1 = ((0.3 * dot (tmpvar_4.xyz, vec3(0.32, 0.49, 0.29))) + ((\\n    clamp ((0.01 / sqrt(dot (uv1_2, uv1_2))), 0.0, 1.0)\\n   * \\n    mix (vec3(dot (((texture (sampler_blur2, uv).xyz * scale2) + bias2), vec3(0.32, 0.49, 0.29))), ret_3, pow (ret_3, vec3((0.05 + (mid_att * 0.03)))))\\n  ) * (\\n    (4.0 + bass)\\n   + \\n    (mid + treb_att)\\n  )));\\n  ret_3 = ret1_1;\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = ret1_1;\\n  ret = tmpvar_6.xyz;\\n }"}')},103:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":0,"gammaadj":1,"decay":0.997,"echo_zoom":0.996629,"echo_orient":1,"wave_thick":1,"wave_brighten":0,"darken":1,"wave_a":0.001185,"wave_scale":0.01,"wave_smoothing":0.27,"wave_mystery":-0.38,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.999514,"warp":0.01,"ob_size":0,"ob_r":0.01,"ob_a":1,"ib_size":0,"ib_r":1,"ib_g":1,"ib_b":1,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.4999,"mv_g":0.4999,"mv_b":0.4999,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":3,"rad":0.34,"ang":0.53,"r":0.56,"g":0.36,"r2":0.9,"a2":0.5,"border_a":0},"init_eqs_eel":"bassspin = 0;\\nangle = 0;","frame_eqs_eel":"ang = angle;\\nbassspin = if(above(bass*.05,bassspin),bassspin+.001,bassspin-.001);\\nbassspin = bassspin*above(bassspin,0);\\nangle = angle + bassspin;\\n\\nr = bass*.3;\\ng = treb*.3;\\nb = mid*.3;\\nr2 = .8+.2*sin(time*1.2);\\ng2 = .8+.2*sin(time*.9777);\\nb2 = .8+.2*sin(time*.7005);\\n\\nborder_a = 1*above(bass+treb+mid,5);\\n\\nx = .5 + q1;\\ny = .5 + q2;"},{"baseVals":{"enabled":1,"sides":100,"additive":1,"textured":1,"rad":0.108073,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"bassspin = 0;\\nxpos = .25;\\nypos = .25;","frame_eqs_eel":"bassspin = if(above(bass*.05,bassspin),bassspin+.001,bassspin-.001);\\nbassspin = bassspin*above(bassspin,0);\\nxpos = xpos + bassspin;\\nypos = ypos + bassspin;\\nx = .5 + q1 + .13*sin(xpos);\\ny = .5 + q2 + .18*cos(ypos);"},{"baseVals":{"enabled":1,"sides":29,"additive":1,"textured":1,"rad":0.105693,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"bassspin = 0;\\nxpos = 2.3;\\nypos = 2.3;","frame_eqs_eel":"bassspin = if(above(bass*.05,bassspin),bassspin+.001,bassspin-.001);\\nbassspin = bassspin*above(bassspin,0);\\nxpos = xpos + bassspin;\\nypos = ypos + bassspin;\\nx = .5 + q1 +.13*sin(xpos);\\ny = .5 + q2 + .18*cos(ypos);"},{"baseVals":{"enabled":1,"sides":100,"additive":1,"textured":1,"rad":0.091434,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"bassspin = 0;\\nxpos = 4.5;\\nypos = 4.5;","frame_eqs_eel":"bassspin = if(above(bass*.05,bassspin),bassspin+.001,bassspin-.001);\\nbassspin = bassspin*above(bassspin,0);\\nxpos = xpos + bassspin;\\nypos = ypos + bassspin;\\nx = .5 + q1 + .13*sin(xpos);\\ny = .5 + q2 + .18*cos(ypos);"}],"waves":[{"baseVals":{"scaling":0.010576,"enabled":0},"init_eqs_eel":"pulse = 0;","frame_eqs_eel":"pulse = if(above(bass*.05,pulse),pulse+.001,pulse-.001);\\npulse = pulse*above(pulse,0);\\nt1 = pulse;","point_eqs_eel":"x = sqrt(sample*mid*.05);\\ny = .5 + (.1+t1)*cos(sample*20);"},{"baseVals":{"enabled":0},"init_eqs_eel":"pulse = 0;","frame_eqs_eel":"pulse = if(above(bass*.05,pulse),pulse+.001,pulse-.001);\\npulse = pulse*above(pulse,0);\\nt1 = pulse;","point_eqs_eel":"x = sqrt(sample*mid*.05);\\ny = .5 + -(.1+t1)*cos(sample*20);"},{"baseVals":{"enabled":0},"init_eqs_eel":"pulse = 0;","frame_eqs_eel":"pulse = if(above(bass*.05,pulse),pulse+.001,pulse-.001);\\npulse = pulse*above(pulse,0);\\nt1 = pulse;","point_eqs_eel":"x = 1 - sqrt(sample*mid*.05);\\ny = .5 + (.1+t1)*cos(sample*20);"},{"baseVals":{"enabled":0},"init_eqs_eel":"pulse = 0;","frame_eqs_eel":"pulse = if(above(bass*.05,pulse),pulse+.001,pulse-.001);\\npulse = pulse*above(pulse,0);\\nt1 = pulse;","point_eqs_eel":"x = 1 - sqrt(sample*mid*.05);\\ny = .5 + -(.1+t1)*cos(sample*20);"}],"init_eqs_eel":"","frame_eqs_eel":"warp = 0;\\ndecay = .92;\\n\\nvol = (bass+mid+att)/6;\\nxamptarg = if(equal(frame%15,0),min(0.5*vol*bass_att,0.5),xamptarg);\\nxamp = xamp + 0.5*(xamptarg-xamp);\\nxdir = if(above(abs(xpos),xamp),-sign(xpos),if(below(abs(xspeed),0.1),2*above(xpos,0)-1,xdir));\\nxaccel = xdir*xamp - xpos - xspeed*0.055*below(abs(xpos),xamp);\\nxspeed = xspeed + xdir*xamp - xpos - xspeed*0.055*below(abs(xpos),xamp);\\nxpos = xpos + 0.001*xspeed;\\nyamptarg = if(equal(frame%15,0),min(0.3*vol*treb_att,0.5),yamptarg);\\nyamp = yamp + 0.5*(yamptarg-yamp);\\nydir = if(above(abs(ypos),yamp),-sign(ypos),if(below(abs(yspeed),0.1),2*above(ypos,0)-1,ydir));\\nyaccel = ydir*yamp - ypos - yspeed*0.055*below(abs(ypos),yamp);\\nyspeed = yspeed + ydir*yamp - ypos - yspeed*0.055*below(abs(ypos),yamp);\\nypos = ypos + 0.001*yspeed;\\n\\nq1 = ypos;\\nq2 = xpos;","pixel_eqs_eel":"zoom = zoom + (q1*q2)*2;\\nrot = 10+(rad*treb*.1);","warp":"","comp":""}')},5816:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":3,"gammaadj":1,"decay":0.997,"echo_zoom":0.997,"echo_orient":1,"wave_thick":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.01,"wave_smoothing":0.27,"wave_mystery":-0.38,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.99951,"warp":0.01,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"ib_r":1,"ib_g":1,"ib_b":1,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"sides":3,"rad":0.34,"ang":0.53,"r":0.56,"g":0.36,"r2":0.9,"border_r":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ang = ang + time;"},{"baseVals":{"sides":3,"rad":0.41,"r":0,"g":0.8,"b":0.7,"g2":0.4,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ang = ang - time*.333;"},{"baseVals":{"sides":3,"rad":0.21,"r":0.84,"r2":1,"g2":0.58,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ang = ang + time*4;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x = .5 + (bass*.2)*sin(sample*2*(time*10*treb));\\ny = .5 + (bass*.2)*cos(sample*2*(time*10*treb));\\nr = 1 + .5*sin(sample*.10+(time*10*bass));\\ng = 1 + .5*sin(sample*2+(time*50*treb));\\nb = 1 + .5*sin(sample*5+(time*20*mid));\\na = r;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"warp = 0;\\ndecay = .92;","pixel_eqs_eel":"zoom = zoom + (.03*(bass_att*bass_att))*rad;\\nrot = rot + rad*(-2.5&(cos(time)*5))*.01;","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = texture (sampler_main, uv).xyz;\\n  ret = tmpvar_1.xyz;\\n }","comp":" shader_body { \\n  vec2 uv1_1;\\n  vec3 ret_2;\\n  vec3 tmpvar_3;\\n  tmpvar_3 = texture (sampler_main, uv).xyz;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = (texture (sampler_main, (uv - vec2(0.001, 0.0))).xyz - texture (sampler_main, (uv + vec2(0.001, 0.0))).xyz).x;\\n  tmpvar_4.y = (texture (sampler_main, (uv - vec2(0.0, 0.001))).xyz - texture (sampler_main, (uv + vec2(0.0, 0.001))).xyz).x;\\n  uv1_1 = ((0.5 * cos(\\n    (((uv - 0.5) * 1.5) + 1.6)\\n  )) - (3.0 * tmpvar_4));\\n  ret_2 = (0.8 * ((0.3 * \\n    dot (tmpvar_3, vec3(0.32, 0.49, 0.29))\\n  ) + (\\n    (clamp ((0.01 / sqrt(\\n      dot (uv1_1, uv1_1)\\n    )), 0.0, 1.0) * tmpvar_3)\\n   * \\n    ((4.0 + bass) + (mid + treb_att))\\n  )));\\n  ret_2 = (ret_2 * 0.77);\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = ret_2;\\n  ret = tmpvar_5.xyz;\\n }"}')},629:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":3,"gammaadj":1,"decay":0.997,"echo_zoom":0.997,"echo_orient":1,"wave_thick":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.01,"wave_smoothing":0.27,"wave_mystery":-0.38,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.99951,"warp":0.01,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"ib_r":1,"ib_g":1,"ib_b":1,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"sides":3,"rad":0.34,"ang":0.53,"r":0.56,"g":0.36,"r2":0.9,"border_r":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ang = ang + time;"},{"baseVals":{"sides":3,"rad":0.41,"r":0,"g":0.8,"b":0.7,"g2":0.4,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ang = ang - time*.333;"},{"baseVals":{"sides":3,"rad":0.21,"r":0.84,"r2":1,"g2":0.58,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ang = ang + time*4;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x = .5 + (bass*.2)*sin(sample*2*(time*10*treb));\\ny = .5 + (bass*.2)*cos(sample*2*(time*10*treb));\\nr = 1 + .5*sin(sample*.10+(time*10*bass));\\ng = 1 + .5*sin(sample*2+(time*50*treb));\\nb = 1 + .5*sin(sample*5+(time*20*mid));\\na = r;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"warp = 0;\\ndecay = .92;","pixel_eqs_eel":"zoom = zoom + (.03*(bass_att*bass_att))*rad;\\nrot = rot + rad*(-2.5&(cos(time)*5))*.01;","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (texture (sampler_main, uv).xyz - 0.04);\\n  ret = tmpvar_1.xyz;\\n }","comp":" shader_body { \\n  vec3 ret1_1;\\n  vec2 uv1_2;\\n  vec3 tmpvar_3;\\n  tmpvar_3 = texture (sampler_main, uv).xyz;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = (texture (sampler_main, (uv - vec2(0.001, 0.0))).xyz - texture (sampler_main, (uv + vec2(0.001, 0.0))).xyz).x;\\n  tmpvar_4.y = (texture (sampler_main, (uv - vec2(0.0, 0.001))).xyz - texture (sampler_main, (uv + vec2(0.0, 0.001))).xyz).x;\\n  uv1_2 = ((0.5 * cos(\\n    (((uv - 0.5) * 1.5) + 1.6)\\n  )) - (3.0 * tmpvar_4));\\n  ret1_1 = ((0.3 * dot (tmpvar_3, vec3(0.32, 0.49, 0.29))) + ((\\n    (clamp ((0.01 / sqrt(\\n      dot (uv1_2, uv1_2)\\n    )), 0.0, 1.0) * tmpvar_3)\\n   * \\n    (4.0 * (bass + mid))\\n  ) * treb_att));\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 0.0;\\n  tmpvar_5.xyz = ret1_1;\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 0.0;\\n  tmpvar_6.xyz = abs((ret1_1 - 1.0));\\n  vec4 tmpvar_7;\\n  tmpvar_7 = mix (texture (sampler_noise_lq, ((\\n    (uv_orig * texsize.xy)\\n   * texsize_noise_lq.zw) + rand_frame.xy)), tmpvar_5, tmpvar_6);\\n  ret1_1 = tmpvar_7.xyz;\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = (0.8 * tmpvar_7.xyz);\\n  ret = tmpvar_8.xyz;\\n }"}')},9047:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.995,"echo_zoom":1,"echo_orient":1,"wave_mode":5,"wave_brighten":0,"wrap":0,"wave_a":100,"wave_scale":0.721,"wave_smoothing":0.5,"modwavealphastart":0.5,"modwavealphaend":1,"fshader":1,"dx":0.00001,"dy":0.00001,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":0,"mv_y":0,"mv_l":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = 0.5 + 0.5*sin(6*time);\\nwave_g = 0.5 + 0.5*sin(4.1*time);\\nwave_b = -1 + (1-wave_r + 1-wave_g);\\nwarp = 0;","pixel_eqs_eel":"thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\\ndx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;\\ndy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;\\n\\n\\nxs = above(sin(12*dx_r*bass),0)*(dy_r*sin(2*rad)) + \\nbelow(sin(12*dx_r*bass),0)*(cos(time)*dx_r*sin(0.6*rad));\\n\\nzoom = zoom + abs(12*xs);\\nrot = rot + 5*xs*cos(1-xs*rad*12*dx_r);\\ndx = dx + dx_r;\\ndy = dy + dy_r;","warp":" shader_body { \\n  vec2 my_uv_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (vec2(1280.0, 1024.0) * texsize.zw);\\n  float tmpvar_4;\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (uv + vec2(0.005, 0.0));\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv - vec2(0.005, 0.0));\\n  tmpvar_4 = (((\\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_6).xyz * scale2)\\n   + bias2)).x * tmpvar_3.x);\\n  float tmpvar_7;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (uv + vec2(0.0, 0.005));\\n  vec2 tmpvar_9;\\n  tmpvar_9 = (uv - vec2(0.0, 0.005));\\n  tmpvar_7 = (((\\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_9).xyz * scale2)\\n   + bias2)).x * tmpvar_3.y);\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = tmpvar_4;\\n  tmpvar_10.y = tmpvar_7;\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = (((\\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_6).xyz * scale2)\\n   + bias2)).x * tmpvar_3.x);\\n  tmpvar_11.y = (((\\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_9).xyz * scale2)\\n   + bias2)).x * tmpvar_3.y);\\n  ret_2.x = texture (sampler_fw_main, ((uv - (tmpvar_10 * 0.01)) + (tmpvar_11 * 0.003))).x;\\n  vec4 tmpvar_12;\\n  tmpvar_12 = texture (sampler_blur3, uv);\\n  ret_2.x = (ret_2.x + ((ret_2.x - \\n    ((tmpvar_12.xyz * scale3) + bias3)\\n  .x) * 0.1));\\n  ret_2.x = (ret_2.x + 0.004);\\n  vec2 tmpvar_13;\\n  tmpvar_13.x = tmpvar_7;\\n  tmpvar_13.y = -(tmpvar_4);\\n  my_uv_1 = (uv + ((tmpvar_13 * 0.05) * (1.2 - \\n    ((tmpvar_12.xyz * scale3) + bias3)\\n  .y)));\\n  ret_2.z = texture (sampler_fw_main, my_uv_1).z;\\n  vec2 x_14;\\n  x_14 = (my_uv_1 - uv);\\n  ret_2.z = (ret_2.z + ((\\n    ((ret_2.z - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).z) * sqrt(dot (x_14, x_14)))\\n   * 180.0) / sqrt(\\n    dot (tmpvar_3, tmpvar_3)\\n  )));\\n  ret_2.z = (ret_2.z * 0.8);\\n  ret_2.z = (ret_2.z + 0.004);\\n  vec2 tmpvar_15;\\n  tmpvar_15.x = -(tmpvar_7);\\n  tmpvar_15.y = tmpvar_4;\\n  my_uv_1 = (tmpvar_15 * 0.045);\\n  vec2 tmpvar_16;\\n  tmpvar_16.x = (((\\n    (texture (sampler_blur2, (uv + vec2(0.01, 0.0))).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, (uv - vec2(0.01, 0.0))).xyz * scale2)\\n   + bias2)).y * tmpvar_3.x);\\n  tmpvar_16.y = (((\\n    (texture (sampler_blur2, (uv + vec2(0.0, 0.01))).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, (uv - vec2(0.0, 0.01))).xyz * scale2)\\n   + bias2)).y * tmpvar_3.y);\\n  my_uv_1 = (my_uv_1 + (uv - (tmpvar_16 * 0.03)));\\n  ret_2.y = texture (sampler_fw_main, my_uv_1).y;\\n  ret_2.y = (ret_2.y + ((\\n    (ret_2.y - ((texture (sampler_blur3, my_uv_1).xyz * scale3) + bias3).y)\\n   * 0.1) + 0.01));\\n  vec4 tmpvar_17;\\n  tmpvar_17.w = 1.0;\\n  tmpvar_17.xyz = ret_2;\\n  ret = tmpvar_17.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  ret_1 = texture (sampler_main, uv).xyz;\\n  ret_1 = (ret_1 * hue_shader);\\n  vec3 tmpvar_2;\\n  tmpvar_2 = mix (ret_1, vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))), vec3(0.5, 1.0, 0.1));\\n  ret_1 = tmpvar_2;\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = tmpvar_2;\\n  ret = tmpvar_3.xyz;\\n }"}')},4923:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.96,"echo_zoom":1.007,"echo_orient":1,"wave_mode":2,"wave_dots":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":0.001,"wave_scale":0.012,"wave_smoothing":0.9,"warpanimspeed":0.037,"warpscale":0.015,"warp":0.033,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"ob_size":0,"ob_r":0.11,"ob_b":0.1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":3,"mv_y":2,"mv_dx":0.02,"mv_dy":-0.02,"mv_l":0.15,"mv_r":0.49,"mv_g":0.48,"mv_b":0.3,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":5,"textured":1,"rad":1.06779,"ang":0.75398,"tex_zoom":0.77977,"g":1,"b":1,"r2":1,"b2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"thick":1,"r":0.1,"b":0.7},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2)*0.5 +0.5;\\n\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8;\\nxp=xq*sin(ang) + yq*cos(ang);\\nyp=xq*cos(ang) - yq*sin(ang);\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3 + 0.5);\\nxp=xq*sin(ang) + yq*cos(ang);\\nyp=xq*cos(ang) - yq*sin(ang);\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2)*0.75 - 1.05;\\nxq=xp*sin(ang) + zp*cos(ang);\\nyq=yp;\\nzq=xp*cos(ang) - zp*sin(ang);\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nxp=xq;\\nyp=yq*cos(ang) - zq*sin(ang);\\nzp=yq*sin(ang) + zq*cos(ang);\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=(1-sample)*flip;\\n\\nb=b+pow(1-sample,2)*0.3"},{"baseVals":{"enabled":1,"thick":1,"r":0.2,"b":0.6},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2;\\nyp=-yp;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2)*0.5 +0.5;\\n\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8;\\nxp=xq*sin(ang) + yq*cos(ang);\\nyp=xq*cos(ang) - yq*sin(ang);\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3 + 0.5);\\nxp=xq*sin(ang) + yq*cos(ang);\\nyp=xq*cos(ang) - yq*sin(ang);\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2)*0.75 - 1.05;\\nxq=xp*sin(ang) + zp*cos(ang);\\nyq=yp;\\nzq=xp*cos(ang) - zp*sin(ang);\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nxp=xq;\\nyp=yq*cos(ang) - zq*sin(ang);\\nzp=yq*sin(ang) + zq*cos(ang);\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=(1-sample)*flip;\\n\\n\\nb=b+pow(1-sample,2)*0.3\\n"},{"baseVals":{"thick":1,"additive":1,"g":0.6,"b":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\\ntm=q1;\\nphs=-sample*0.5;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2+phs - 2)*0.5 +0.5 + 2;\\n\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\n\\nang=cos(tm*2+phs - 2)*1.5 ;\\nxp=xq*sin(ang) + yq*cos(ang);\\nyp=xq*cos(ang) - yq*sin(ang);\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2+phs - 0.5)*1.5;\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3 + 0.5 +phs + 0.5);\\nxp=xq*sin(ang) + yq*cos(ang);\\nyp=xq*cos(ang) - yq*sin(ang);\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2+phs)*0.75 - 1.05;\\nxq=xp*sin(ang) + zp*cos(ang);\\nyq=yp;\\nzq=xp*cos(ang) - zp*sin(ang);\\n\\n//upper arm up down;\\nang=cos(tm+phs)*0.5 - 0.5;\\nxp=xq;\\nyp=yq*cos(ang) - zq*sin(ang);\\nzp=yq*sin(ang) + zq*cos(ang);\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=(1-sample)*0.05\\n"},{"baseVals":{"thick":1,"additive":1,"g":0.3,"b":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\\ntm=q1 ;\\nphs=-sample*0.5;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2+phs-2)*0.5 +0.5 + 2;\\n\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\n\\nang=cos(tm*2+phs-2)*1.5;\\nxp=xq*sin(ang) + yq*cos(ang);\\nyp=xq*cos(ang) - yq*sin(ang);\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2+phs-0.5)*1.5;\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3 + 0.5 +phs);\\nxp=xq*sin(ang) + yq*cos(ang);\\nyp=xq*cos(ang) - yq*sin(ang);\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2+phs)*0.75 - 1.05;\\nxq=xp*sin(ang) + zp*cos(ang);\\nyq=yp;\\nzq=xp*cos(ang) - zp*sin(ang);\\n\\n//upper arm up down;\\nang=cos(tm+phs)*0.5 - 0.5;\\nxp=xq;\\nyp=yq*cos(ang) - zq*sin(ang);\\nzp=yq*sin(ang) + zq*cos(ang);\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=-xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=(1-sample)*0.05;\\n"}],"init_eqs_eel":"mv_x=64;mv_y=48;\\nnut=0;\\nstp=0;stq=0;\\nrtp=0;rtq=0;\\nwvr=0;\\ndecay=0;\\ndcsp=0","frame_eqs_eel":"decay=0.98;\\nzoom=1.002;\\n\\nq1=time*0.9;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  ret_1 = (mix (texture (sampler_fc_main, uv).xyz, (\\n    (texture (sampler_blur1, uv).xyz * scale1)\\n   + bias1), vec3(-0.25, -0.25, -0.25)) * 0.93);\\n  ret_1 = (ret_1 * 0.96);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ret_1;\\n  ret = tmpvar_2.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  ret_1 = texture (sampler_main, uv).xyz;\\n  ret_1 = (ret_1 * ret_1);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ret_1;\\n  ret = tmpvar_2.xyz;\\n }"}')},4395:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.56,"decay":1,"echo_zoom":0.362,"echo_orient":1,"wave_thick":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":1.599,"wave_smoothing":0,"wave_mystery":-0.5,"modwavealphastart":2,"modwavealphaend":2,"warpscale":0.107,"zoomexp":0.1584,"fshader":1,"warp":0.01,"wave_r":0.51,"wave_g":0.5,"ob_size":0,"ob_a":1,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0.5,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"sides":100,"thickoutline":1,"rad":0.50126,"tex_zoom":0.99996,"g":1,"b":1,"r2":1,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.5+sin(time*0.618)*0.2;\\ny = 0.5+cos(time*1.618)*0.2;\\nrad = bass*0.05;\\nborder_r = 1-(sin(time*1.25)*0.3+0.7);\\nborder_g = 1-(sin(time)*0.3+0.3);\\nborder_b = 1-(sin(time/3)*0.5+0.5);"},{"baseVals":{"sides":100,"thickoutline":1,"rad":0.50126,"g":1,"b":1,"g2":0,"b2":1,"border_g":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.5+sin(time*2.618)*0.3;\\ny = 0.5+cos(time*3.14)*0.3;\\nrad = bass*0.05;\\nborder_r = 1-(sin(time*1.25)*0.3+0.7);\\nborder_g = 1-(sin(time)*0.3+0.3);\\nborder_b = 1-(sin(time/3)*0.5+0.5);\\n"},{"baseVals":{"sides":100,"thickoutline":1,"rad":0.50126,"tex_zoom":0.9998,"g":1,"b":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.5+sin(-time*2.618)*0.4;\\ny = 0.5+cos(-time*1.14)*0.4;\\nrad = bass*0.05;\\nborder_r = 1-(sin(time*1.25)*0.3+0.7);\\nborder_g = 1-(sin(time)*0.3+0.3);\\nborder_b = 1-(sin(time/3)*0.5+0.5);"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"scaling":0.16188,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"additive":1,"scaling":25.12601,"smoothing":1,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"//zoom = 0.99;\\nib_r = sin(time*1.25*4)*0.3+0.7;\\nib_g = sin(time*4)*0.3+0.3;\\nib_b = sin(time/3*4)*0.5+0.5;\\nwave_r = 1- ib_r;\\nwave_g = 1- ib_g;\\nwave_b = 1- ib_b;\\n//wave_mystery = -1+bass/2;\\nwave_x = 0.5+sin(time*3)*0.3;\\nwave_y = 0.5+cos(time*2.187)*0.3;\\n\\nq6 = cos(time*0.77);\\nq7 = cos(time*0.57);","pixel_eqs_eel":"r = bass/4;\\ncx1 = 0.5+sin(time*0.618)*0.2;\\ncy1 = 0.5+cos(time*1.618)*0.2;\\nd = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));\\ndir = (bass)*(r*r-d*d)*0.3;\\nx1 = if( above(d,r),0,  sin(y-cy1)*dir);\\ny1 = if( above(d,r),0, -sin(x-cx1)*dir);\\n\\n\\ncx1 = 0.5+sin(time*2.618)*0.3;\\ncy1 = 0.5+cos(time*3.14)*0.3;\\nd = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));\\ndir = -(mid)*(r*r-d*d)*0.3;\\nx2 = if( above(d,r),0,  sin(y-cy1)*dir);\\ny2 = if( above(d,r),0, -sin(x-cx1)*dir);\\n\\ncx1 = 0.5+sin(-time*2.618)*0.4;\\ncy1 = 0.5+cos(-time*1.14)*0.4;\\nd = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));\\ndir = -(treb)*(r*r-d*d)*0.3;\\nx3 = if( above(d,r),0,  sin(y-cy1)*dir);\\ny3 = if( above(d,r),0, -sin(x-cx1)*dir);\\n\\n\\ndx = x1+x2+x3;\\ndy = y1+y2+y3;","warp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1.x = bass;\\n  tmpvar_1.y = treb;\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = (texture (sampler_main, (uv + (\\n    (texture (sampler_main, (mix (uv, uv_orig, vec2(-1.0, -1.0)) + texsize.zw)).xy - 0.37)\\n   * \\n    (0.005 + (0.045 * clamp ((tmpvar_1 - 1.0), 0.0, 1.0)))\\n  ))).xyz - 0.001);\\n  ret = tmpvar_2.xyz;\\n }","comp":" shader_body { \\n  vec3 N_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (texsize.zw * 4.0);\\n  N_1.x = (((\\n    (texture (sampler_blur2, (uv + (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, (uv - (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale2)\\n   + bias2)).x * 0.7);\\n  N_1.y = (((\\n    (texture (sampler_blur2, (uv + (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, (uv - (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale2)\\n   + bias2)).x * 0.7);\\n  N_1.x = (N_1.x + ((\\n    ((texture (sampler_blur1, (uv + (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1) + bias1)\\n   - \\n    ((texture (sampler_blur1, (uv - (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1) + bias1)\\n  ).x * 0.3));\\n  N_1.y = (N_1.y + ((\\n    ((texture (sampler_blur1, (uv + (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1) + bias1)\\n   - \\n    ((texture (sampler_blur1, (uv - (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1) + bias1)\\n  ).x * 0.3));\\n  N_1.z = -0.05;\\n  vec3 tmpvar_4;\\n  tmpvar_4 = normalize(N_1);\\n  N_1 = tmpvar_4;\\n  vec3 tmpvar_5;\\n  tmpvar_5.z = -0.8;\\n  tmpvar_5.x = q6;\\n  tmpvar_5.y = q7;\\n  vec3 tmpvar_6;\\n  tmpvar_6.z = 0.0;\\n  tmpvar_6.xy = ((uv_orig * 2.0) - 1.0);\\n  vec3 tmpvar_7;\\n  tmpvar_7 = normalize((tmpvar_5 - tmpvar_6));\\n  vec3 tmpvar_8;\\n  tmpvar_8 = normalize((tmpvar_6 - vec3(0.0, 0.0, 1.0)));\\n  ret_2 = (vec3(clamp (dot (tmpvar_4, tmpvar_7), 0.0, 1.0)) * normalize((\\n    ((texture (sampler_blur3, uv_orig).xyz * scale3) + bias3)\\n   + 0.05)));\\n  ret_2 = (ret_2 + (pow (\\n    clamp (dot (normalize((tmpvar_8 + \\n      ((2.0 * tmpvar_4) * dot (tmpvar_8, tmpvar_4))\\n    )), tmpvar_7), 0.0, 1.0)\\n  , 16.0) * 0.5));\\n  vec4 tmpvar_9;\\n  tmpvar_9.w = 1.0;\\n  tmpvar_9.xyz = ret_2;\\n  ret = tmpvar_9.xyz;\\n }"}')},6415:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1.998,"echo_zoom":1.421,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"darken_center":1,"wave_a":1.193,"wave_scale":1.489,"wave_smoothing":0,"modwavealphastart":0.87,"modwavealphaend":1.09,"warpscale":3.138,"zoom":1.003,"warp":0.09218,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"wave_x":0.6,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.3650*( 0.60*sin(4.437*time) + 0.40*sin(3.970*time) );\\nwave_g = wave_g + 0.3650*( 0.60*sin(4.344*time) + 0.40*sin(3.841*time) );\\nwave_b = wave_b + 0.3650*( 0.60*sin(4.251*time) + 0.40*sin(3.055*time) );\\nrot = rot + 0.02*( 0.60*sin(0.181*time) + 0.09*sin(-0.279*time) );\\nzoom = zoom + 0.025*( 0.60*sin(0.3131*time+2) + 0.4*sin(-0.479*time+4) );\\n//cx = cx + 0.10*( 0.60*sin(0.374*time) + 0.10*sin(0.294*time) );\\n//cy = cy + 0.10*( 0.60*sin(0.393*time) + 0.10*sin(0.223*time) );\\n//dx = dx + 0.0040*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );\\n//dy = dy + 0.0040*( 0.60*sin(0.284*time) + 0.40*sin(0.247*time) );\\ndecay = decay - 0.01*equal(frame%6,0);\\n\\n//wave_x = 0.1 + rand(80)*0.01;\\n//wave_y = 0.1 + rand(80)*0.01;\\nt2 = time*6;\\nwave_x = 0.5 + 0.2*( 0.60*sin(0.374*t2) + 0.40*sin(0.294*t2) );\\nwave_y = 0.5 + 0.2*( 0.60*sin(0.393*t2) + 0.40*sin(0.223*t2) );","pixel_eqs_eel":"dx = 0;\\ndy = 0;\\ndx = dx + cos(y*29.37 - time*1.9) * 1.0/pixelsx * 2;\\ndy = dy + cos(x*33.21 - time*1.7) * 1.0/pixelsy * 2;\\ndx = dx + cos(y*77.55 - time*2.1) * 1.0/pixelsx * 1.5;\\ndy = dy + cos(x*78.32 - time*2.4) * 1.0/pixelsy * 1.5;","warp":" shader_body { \\n  vec2 dxy_1;\\n  dxy_1.x = cos(((154.56 * uv_orig.y) - time));\\n  dxy_1.y = cos(((154.56 * uv_orig.x) - time));\\n  float tmpvar_2;\\n  tmpvar_2 = (time * 5.0);\\n  dxy_1.x = (dxy_1.x + cos((\\n    (412.16 * uv_orig.y)\\n   - tmpvar_2)));\\n  dxy_1.y = (dxy_1.y + cos((\\n    (412.16 * uv_orig.x)\\n   - tmpvar_2)));\\n  dxy_1.y = (dxy_1.y + 0.15);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = (max (texture (sampler_fw_main, (uv + \\n    (dxy_1 * texsize.zw)\\n  )).xyz, (texture (sampler_main, uv_orig).xyz * 0.8)) - 0.004);\\n  ret = tmpvar_3.xyz;\\n }","comp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = ((texture (sampler_main, uv).xyz * 0.8) + ((\\n    (texture (sampler_blur1, uv).xyz * scale1)\\n   + bias1) * 0.7));\\n  ret = tmpvar_1.xyz;\\n }"}')},7303:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1.998,"echo_zoom":1.421,"wave_mode":1,"additivewave":1,"modwavealphabyvolume":1,"darken_center":1,"wave_a":1.193,"wave_scale":1.489,"wave_smoothing":0,"wave_mystery":-0.4,"modwavealphastart":0.87,"modwavealphaend":1.09,"warpanimspeed":1.348,"warpscale":1.16,"zoom":1.002,"warp":0.08979,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"wave_x":0.6,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.650*( 0.60*sin(1.437*time) + 0.40*sin(0.970*time) );\\nwave_g = wave_g + 0.650*( 0.60*sin(1.344*time) + 0.40*sin(0.841*time) );\\nwave_b = wave_b + 0.650*( 0.60*sin(1.251*time) + 0.40*sin(1.055*time) );\\n//wave_mystery = time*0.3;\\nrot = rot + 0.02*( 0.60*sin(0.181*time) + 0.09*sin(-0.279*time) );\\nzoom = zoom + 0.025*( 0.60*sin(0.3131*time+2) + 0.4*sin(-0.479*time+4) );\\n//cx = cx + 0.10*( 0.60*sin(0.374*time) + 0.10*sin(0.294*time) );\\n//cy = cy + 0.10*( 0.60*sin(0.393*time) + 0.10*sin(0.223*time) );\\n//dx = dx + 0.0040*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );\\n//dy = dy + 0.0040*( 0.60*sin(0.284*time) + 0.40*sin(0.247*time) );\\ndecay = decay - 0.01*equal(frame%6,0);\\n\\n//wave_x = 0.1 + rand(80)*0.01;\\n//wave_y = 0.1 + rand(80)*0.01;\\nt2 = time*6;\\nwave_x = 0.5 + 0.2*( 0.60*sin(0.374*t2) + 0.40*sin(0.294*t2) );\\nwave_y = 0.5 + 0.2*( 0.60*sin(0.393*t2) + 0.40*sin(0.223*t2) );","pixel_eqs_eel":"dx = 0;\\ndy = 0;\\ndx = dx + cos(y*29.37 - time*1.9) * 1.0/pixelsx * 2;\\ndy = dy + cos(x*33.21 - time*1.7) * 1.0/pixelsy * 2;\\ndx = dx + cos(y*77.55 - time*2.1) * 1.0/pixelsx * 1.5;\\ndy = dy + cos(x*78.32 - time*2.4) * 1.0/pixelsy * 1.5;","warp":" shader_body { \\n  vec2 dxy_1;\\n  dxy_1.x = cos(((154.56 * uv_orig.y) - time));\\n  dxy_1.y = cos(((154.56 * uv_orig.x) - time));\\n  float tmpvar_2;\\n  tmpvar_2 = (time * 5.0);\\n  dxy_1.x = (dxy_1.x + cos((\\n    (412.16 * uv_orig.y)\\n   - tmpvar_2)));\\n  dxy_1.y = (dxy_1.y + cos((\\n    (412.16 * uv_orig.x)\\n   - tmpvar_2)));\\n  dxy_1.y = (dxy_1.y + 0.15);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = (max (texture (sampler_fw_main, (uv + \\n    (dxy_1 * texsize.zw)\\n  )).xyz, (texture (sampler_main, uv_orig).xyz * 0.8)) - 0.004);\\n  ret = tmpvar_3.xyz;\\n }","comp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = ((texture (sampler_main, uv).xyz * 0.8) + ((\\n    (texture (sampler_blur1, uv).xyz * scale1)\\n   + bias1) * 0.7));\\n  ret = tmpvar_1.xyz;\\n }"}')},9088:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.9,"echo_zoom":1.169,"wave_mode":2,"wave_a":0.027,"wave_scale":1.015,"wave_smoothing":0.522,"modwavealphastart":0.83,"modwavealphaend":1.31,"warpscale":3.138,"zoom":1.033,"warp":0.14837,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = 0.85 + 0.35*sin(0.437*time+1) + 0.55*sin(0.197*time+4);\\nwave_g = 0.85 + 0.35*sin(0.544*time+2) + 0.55*sin(0.143*time+5);\\nwave_b = 0.85 + 0.35*sin(0.751*time+3) + 0.55*sin(0.117*time+6);\\nwave_r = sqrt(wave_r);\\nwave_g = sqrt(wave_g);\\nwave_b = sqrt(wave_b);\\nrot = rot + 0.010*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );\\ncx = cx + 0.210*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\ncy = cy + 0.210*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\\ndx = dx + 0.003*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );\\ndy = dy + 0.003*( 0.60*sin(0.284*time) + 0.40*sin(0.247*time) );\\ndecay = decay - 0.01*equal(frame%6,0);\\ndx = dx + dx_residual;\\ndy = dy + dy_residual;\\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.96+1.3);\\ndx_residual = equal(bass_thresh,2.13)*0.016*sin(time*7) + (1-equal(bass_thresh,2.13))*dx_residual;\\ndy_residual = equal(bass_thresh,2.13)*0.012*sin(time*9) + (1-equal(bass_thresh,2.13))*dy_residual;\\nwave_x = wave_x - dx_residual*7;\\nwave_y = wave_y - dy_residual*7;\\nwave_mystery = time*0.03;\\n\\nq6 = 0.6*cos(time*0.83);\\nq7 = 0.6*cos(time*0.70);","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  ret_1 = (texture (sampler_main, uv).xyz + ((\\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5)\\n   / 256.0) * 3.0));\\n  vec3 tmpvar_2;\\n  tmpvar_2 = fract((ret_1 - 0.005));\\n  ret_1 = tmpvar_2;\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = tmpvar_2;\\n  ret = tmpvar_3.xyz;\\n }","comp":" shader_body { \\n  vec3 N_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (texsize.zw * 4.0);\\n  N_1.x = (((\\n    (texture (sampler_blur2, (uv + (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, (uv - (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale2)\\n   + bias2)).x * 0.7);\\n  N_1.y = (((\\n    (texture (sampler_blur2, (uv + (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, (uv - (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale2)\\n   + bias2)).x * 0.7);\\n  N_1.x = (N_1.x + ((\\n    ((texture (sampler_blur1, (uv + (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1) + bias1)\\n   - \\n    ((texture (sampler_blur1, (uv - (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1) + bias1)\\n  ).x * 0.3));\\n  N_1.y = (N_1.y + ((\\n    ((texture (sampler_blur1, (uv + (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1) + bias1)\\n   - \\n    ((texture (sampler_blur1, (uv - (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1) + bias1)\\n  ).x * 0.3));\\n  N_1.z = -0.07;\\n  vec3 tmpvar_4;\\n  tmpvar_4 = normalize(N_1);\\n  N_1 = tmpvar_4;\\n  vec3 tmpvar_5;\\n  tmpvar_5.z = -0.8;\\n  tmpvar_5.x = q6;\\n  tmpvar_5.y = q7;\\n  vec3 tmpvar_6;\\n  tmpvar_6.z = 0.0;\\n  tmpvar_6.xy = ((uv_orig * 2.0) - 1.0);\\n  vec3 tmpvar_7;\\n  tmpvar_7 = normalize((tmpvar_5 - tmpvar_6));\\n  vec3 tmpvar_8;\\n  tmpvar_8 = normalize((tmpvar_6 - vec3(0.0, 0.0, 1.0)));\\n  ret_2 = (vec3(clamp (dot (tmpvar_4, tmpvar_7), 0.0, 1.0)) * normalize((\\n    ((texture (sampler_blur3, uv_orig).xyz * scale3) + bias3)\\n  .yzx + 0.05)));\\n  ret_2 = (ret_2 + (pow (\\n    clamp (dot (normalize((tmpvar_8 + \\n      ((2.0 * tmpvar_4) * dot (tmpvar_8, tmpvar_4))\\n    )), tmpvar_7), 0.0, 1.0)\\n  , 32.0) * 0.5));\\n  vec4 tmpvar_9;\\n  tmpvar_9.w = 1.0;\\n  tmpvar_9.xyz = ret_2;\\n  ret = tmpvar_9.xyz;\\n }"}')},2565:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1.9,"echo_zoom":1.169,"wave_mode":2,"additivewave":1,"wave_dots":1,"wave_thick":1,"wave_a":0.274,"wave_scale":2.827,"wave_smoothing":0.09,"modwavealphastart":0.83,"modwavealphaend":1.31,"warpscale":3.138,"zoom":0.993,"warp":0.00054,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = 0.85 + 0.25*sin(0.437*time+1);\\nwave_g = 0.85 + 0.25*sin(0.544*time+2);\\nwave_b = 0.85 + 0.25*sin(0.751*time+3);\\nrot = rot + 0.010*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );\\ncx = cx + 0.210*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\ncy = cy + 0.210*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\\ndx = dx + 0.003*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );\\ndy = dy + 0.003*( 0.60*sin(0.284*time) + 0.40*sin(0.247*time) );\\ndecay = decay - 0.01*equal(frame%6,0);\\ndx = dx + dx_residual;\\ndy = dy + dy_residual;\\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.96+1.3);\\ndx_residual = equal(bass_thresh,2.13)*0.016*sin(time*7) + (1-equal(bass_thresh,2.13))*dx_residual;\\ndy_residual = equal(bass_thresh,2.13)*0.012*sin(time*9) + (1-equal(bass_thresh,2.13))*dy_residual;\\nwave_x = wave_x - dx_residual*7;\\nwave_y = wave_y - dy_residual*7;\\nwave_mystery = time*0.03;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv);\\n  ret_1 = (tmpvar_2.xyz + ((tmpvar_2.xyz - \\n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\\n  ) * 0.2));\\n  ret_1 = (ret_1 - 0.02);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_1;\\n  ret = tmpvar_3.xyz;\\n }","comp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (texture (sampler_main, uv).xyz * 1.15);\\n  ret = tmpvar_1.xyz;\\n }"}')},7828:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.9,"echo_zoom":1.169,"wave_mode":7,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":0,"wave_scale":2.122,"wave_smoothing":0.783,"modwavealphastart":0.99,"modwavealphaend":1.49,"warpanimspeed":0.55,"warpscale":1.66,"zoom":1.003,"warp":0.06621,"wave_r":0.81,"wave_g":0.79,"wave_b":0.77,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":16,"rad":0.80814,"ang":1.25664,"g":1,"b":1,"a":0,"r2":0.42,"g2":0.6,"b2":0.5,"a2":0.01,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = 0.85 + 0.35*sin(0.437*time+1) + 0.55*sin(0.197*time+4);\\nwave_g = 0.85 + 0.35*sin(0.544*time+2) + 0.55*sin(0.143*time+5);\\nwave_b = 0.85 + 0.35*sin(0.751*time+3) + 0.55*sin(0.117*time+6);\\nwave_r = sqrt(wave_r);\\nwave_g = sqrt(wave_g);\\nwave_b = sqrt(wave_b);\\nrot = rot + 0.010*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );\\ncx = cx + 0.210*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\ncy = cy + 0.210*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\\ndx = dx + 0.003*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );\\ndy = dy + 0.003*( 0.60*sin(0.284*time) + 0.40*sin(0.247*time) );\\ndecay = decay - 0.01*equal(frame%6,0);\\ndx = dx + dx_residual;\\ndy = dy + dy_residual;\\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.96+1.3);\\ndx_residual = equal(bass_thresh,2.13)*0.016*sin(time*7) + (1-equal(bass_thresh,2.13))*dx_residual;\\ndy_residual = equal(bass_thresh,2.13)*0.012*sin(time*9) + (1-equal(bass_thresh,2.13))*dy_residual;\\nwave_x = wave_x - dx_residual*7;\\nwave_y = wave_y - dy_residual*7;\\nwave_mystery = time*0.03;\\n\\nzoom = zoom + 0.008*(0.35*sin(0.844*time+2) + 0.55*sin(1.743*time+5));\\n//zoom = zoom + max(0,treb-1.2)*0.1;\\n\\nq1 = 0.03;// + 0.09*pow( 0.5 + 0.25*sin(0.437*time+1) + 0.15*sin(0.197*time+4), 8 );","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, (uv + ((texture (sampler_main, \\n    (mix (uv, uv_orig, vec2(-1.0, -1.0)) + (texsize.zw * vec2(1.0, 3.0)))\\n  ).xy - 0.5) * q1)));\\n  ret_1 = (tmpvar_2.xyz - (vec3(0.001, 0.001, 0.0) * (\\n    (clamp (((tmpvar_2.xyz - 0.5) * 99.0), 0.0, 1.0) * 2.0)\\n   - 1.0)));\\n  ret_1 = (ret_1 + ((\\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5)\\n   / 256.0) * 15.0));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_1;\\n  ret = tmpvar_3.xyz;\\n }","comp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1 = texture (sampler_main, uv);\\n  vec3 tmpvar_2;\\n  tmpvar_2.x = (((tmpvar_1.x * tmpvar_1.y) * 5.0) - 1.0);\\n  tmpvar_2.y = ((tmpvar_1.y * tmpvar_1.z) * 5.0);\\n  tmpvar_2.z = ((tmpvar_1.z * tmpvar_1.x) * 6.0);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = (tmpvar_2.zyx * 0.37);\\n  ret = tmpvar_3.xyz;\\n }"}')},8759:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"additivewave":1,"wave_brighten":0,"wave_a":0.001,"wave_scale":0.01,"wave_smoothing":0.63,"wave_mystery":-1,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":30.965,"warpscale":2.572,"zoom":1.00901,"warp":0.00054,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"mv_x":12.8,"mv_y":9.6,"mv_l":1,"mv_g":0.91,"mv_b":0.71,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"additive":1,"rad":0.49138,"r":0,"g":1,"b":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x=.5+q4;y=.5+q5;\\na=bass_att+mid_att+treb_att;\\na=a*0.25;\\na=a*a*1.5;"},{"baseVals":{"sides":24,"rad":0.01842,"tex_zoom":0.81954,"g":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"tex_ang=0.01;\\nx=.5-q4;\\ny=.5-q5;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = 0.85 + 0.25*sin(0.437*time+1);\\nwave_g = 0.85 + 0.25*sin(0.544*time+2);\\nwave_b = 0.85 + 0.25*sin(0.751*time+3);\\nrot = rot + 0.010*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );\\ncx = cx + 0.210*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\ncy = cy + 0.210*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\\ndx = dx + 0.003*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );\\ndy = dy + 0.003*( 0.60*sin(0.284*time) + 0.40*sin(0.247*time) );\\ndecay = decay - 0.01*equal(frame%6,0);\\ndx = dx + dx_residual;\\ndy = dy + dy_residual;\\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.96+1.3);\\ndx_residual = equal(bass_thresh,2.13)*0.016*sin(time*7) + (1-equal(bass_thresh,2.13))*dx_residual;\\ndy_residual = equal(bass_thresh,2.13)*0.012*sin(time*9) + (1-equal(bass_thresh,2.13))*dy_residual;\\nwave_x = wave_x - dx_residual*7;\\nwave_y = wave_y - dy_residual*7;\\nwave_mystery = time*0.03;\\n\\nzoom = zoom + 0.005*( 0.60*sin(0.1934*time+3) + 0.40*sin(0.307*time+9) );\\nzoom = zoom + max(0,bass_att-1.1)*0.2;\\nwarp = warp + max(0,treb-1.1)*0.5;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv);\\n  ret_1 = (tmpvar_2.xyz + ((tmpvar_2.xyz - \\n    ((texture (sampler_blur2, uv).xyz * scale2) + bias2)\\n  ) * 0.6));\\n  ret_1 = (ret_1 * 0.9);\\n  ret_1 = (ret_1 + ((\\n    ((texture (sampler_noise_lq, ((\\n      (uv_orig * texsize.xy)\\n     * \\n      (texsize_noise_lq.zw * 0.4)\\n    ) + rand_frame.xy)).xyz - 0.5) / 256.0)\\n   * 12.0) * clamp (\\n    (treb_att - 1.0)\\n  , 0.0, 1.0)));\\n  vec3 tmpvar_3;\\n  tmpvar_3 = mix (ret_1, vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))), vec3(0.04, 0.04, 0.04));\\n  ret_1 = tmpvar_3;\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = tmpvar_3;\\n  ret = tmpvar_4.xyz;\\n }","comp":" shader_body { \\n  vec3 N_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (vec2(1.0, 0.0) * texsize.zw);\\n  N_1.x = ((texture (sampler_main, (uv_orig + tmpvar_3)).xyz - texture (sampler_main, (uv_orig - tmpvar_3)).xyz).x * 0.8);\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (vec2(0.0, 1.0) * texsize.zw);\\n  N_1.y = ((texture (sampler_main, (uv_orig + tmpvar_4)).xyz - texture (sampler_main, (uv_orig - tmpvar_4)).xyz).x * 0.8);\\n  N_1.x = (N_1.x + ((\\n    ((texture (sampler_blur1, (uv_orig + tmpvar_3)).xyz * scale1) + bias1)\\n   - \\n    ((texture (sampler_blur1, (uv_orig - tmpvar_3)).xyz * scale1) + bias1)\\n  ).x * 0.2));\\n  N_1.y = (N_1.y + ((\\n    ((texture (sampler_blur1, (uv_orig + tmpvar_4)).xyz * scale1) + bias1)\\n   - \\n    ((texture (sampler_blur1, (uv_orig - tmpvar_4)).xyz * scale1) + bias1)\\n  ).x * 0.2));\\n  N_1.z = -0.077;\\n  vec3 tmpvar_5;\\n  tmpvar_5 = normalize(N_1);\\n  N_1 = tmpvar_5;\\n  vec3 tmpvar_6;\\n  tmpvar_6.z = -0.8;\\n  tmpvar_6.x = q9;\\n  tmpvar_6.y = q10;\\n  vec3 tmpvar_7;\\n  tmpvar_7.z = 0.0;\\n  tmpvar_7.xy = ((uv_orig * 2.0) - 1.0);\\n  vec3 tmpvar_8;\\n  tmpvar_8 = normalize((tmpvar_6 - tmpvar_7));\\n  vec3 tmpvar_9;\\n  tmpvar_9 = normalize((tmpvar_7 - vec3(0.0, 0.0, 1.0)));\\n  ret_2 = (vec3(clamp (dot (tmpvar_5, tmpvar_8), 0.0, 1.0)) * vec3(1.2, 0.9, 0.7));\\n  ret_2 = (ret_2 * normalize((\\n    (texture (sampler_blur3, uv_orig).xyz * scale3)\\n   + bias3).yzx));\\n  ret_2 = (ret_2 + (pow (\\n    clamp (dot (normalize((tmpvar_9 + \\n      ((2.0 * tmpvar_5) * dot (tmpvar_9, tmpvar_5))\\n    )), tmpvar_8), 0.0, 1.0)\\n  , 32.0) * 0.5));\\n  vec4 tmpvar_10;\\n  tmpvar_10.w = 1.0;\\n  tmpvar_10.xyz = ret_2;\\n  ret = tmpvar_10.xyz;\\n }"}')},6339:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"decay":0.99,"echo_zoom":1,"wave_brighten":0,"wrap":0,"wave_a":1,"wave_scale":0.608,"wave_mystery":-0.4,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.005,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":64,"mv_y":48,"mv_l":0,"mv_r":0,"mv_g":0.7,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"textured":1,"rad":0.47221,"tex_zoom":0.5033,"g":0.7,"r2":1,"g2":0.7},"init_eqs_eel":"","frame_eqs_eel":"xpos = if(q1,(rand(4)+1)*0.25-0.125,xpos);\\nypos = if(q1,(rand(3)+1)*0.333-0.166,ypos);\\nx = xpos;\\ny = ypos;\\nflash = if(q1,0.8,flash-0.1);\\ntextured = below(flash,0.5);\\na = above(flash,0);\\na2 = above(flash,0);\\nborder_a = 0.5*above(flash,0);\\nr = if(above(flash,0.5),0.5*flash,0.6+0.1*rand(200));\\ng = if(above(flash,0.5),0.5*flash,0.6+0.1*rand(200));\\nb = if(above(flash,0.5),0.5*flash,0.6+0.1*rand(200));\\nr2 = if(above(flash,0.5),0.5*flash,0.6+0.1*rand(200));\\ng2 = if(above(flash,0.5),0.5*flash,0.6+0.1*rand(200));\\nb2 = if(above(flash,0.5),0.5*flash,0.6+0.1*rand(200));\\nborder_r = 0.5*above(flash,0);\\nborder_g = 0.5*above(flash,0);\\nborder_b = 0.5*above(flash,0);"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"usedots":1,"thick":1,"b":0.7},"init_eqs_eel":"","frame_eqs_eel":"h=q5;\\ns = 0.7;\\nl= 0.8;\\n///////////////////////////////////////////////////////////////////////////////////////////////\\n//\\n//                            HSL to RGB by PieturP\\n//\\n// hue         h ( 0 - 0.9 )                          rr ( 0 - 1 )\\n// saturation  s ( 0 - 1 )            - >             gg ( 0 - 1 )\\n// luminance   l ( 0 - 1 )                            bb ( 0 - 1 )\\n//\\ncc=(6*h);\\ncc=if(below(cc,1),0,if(below(cc,2),1,if(below(cc,3),2,if(below(cc,4),3,if(below(cc,5),4,5)))));\\nzf=(6*h)-cc;\\nzm=l;\\nzp=l*(1-s);\\nzq=l*(1-s*zf);\\nzt=l*(1-s*(1-zf));\\nmonitor=zq;\\nrr=if(equal(cc,0),zm,if(equal(cc,1),zq,if(equal(cc,2),zp,if(equal(cc,3),zp,if(equal(cc,4),zt,zm)))));\\ngg=if(equal(cc,0),zt,if(equal(cc,1),zm,if(equal(cc,2),zm,if(equal(cc,3),zq,if(equal(cc,4),zp,zp)))));\\nbb=if(equal(cc,0),zp,if(equal(cc,1),zp,if(equal(cc,2),zt,if(equal(cc,3),zm,if(equal(cc,4),zm,zq)))));\\nrr=if(equal(s,0),l,rr);\\ngg=if(equal(s,0),l,gg);\\nbb=if(equal(s,0),l,bb);\\n\\n///////////////////////////////////////////////////////////////////////////////////////////////\\nr=rr;\\ng=gg;\\nb=bb;","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q4 + phs*4;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=(flip*0.1-0.05)*(sample);\\nzp=0;\\n\\n//spin;\\nang=tm*20 + sin(tm*76 + time*4)*0.4;\\nsa=sin(ang);ca=cos(ang);\\nxr=xp*sa + yp*ca;\\nyr=xp*ca - yp*sa;\\nzr=zp;\\n\\nxp=xr;\\nyp=yr + 0.05 + (sin(tm)*0.5 + 0.5)*0.2 + 0.05;\\nzp=zr;\\n\\n//wrist movement;\\nang=0.5*(sin(tm*2)+sin(tm*1.248));\\n\\nxq=xp;\\nsa=sin(ang);ca=cos(ang);\\nyq=yp*sa + zp*ca;\\nzq=yp*ca - zp*sa;\\n\\n\\nang=tm*8;\\nsa=sin(ang);ca=cos(ang);\\nxp=xq*sa + yq*ca;\\nyp=xq*ca - yq*sa;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + (sin(tm*2 - 0.5)+sin(tm*1.237))*1.25;\\nxq=xp;\\nsa=sin(ang);ca=cos(ang);\\nyq=yp*sa + zp*ca;\\nzq=yp*ca - zp*sa;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3 + 0.5);\\nxp=xq*sa + yq*ca;\\nyp=xq*ca - yq*sa;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=(cos(tm*1)+cos(tm*0.653))*0.875 - 1.05;\\nsa=sin(ang);ca=cos(ang);\\nxq=xp*sa + zp*ca;\\nyq=yp;\\nzq=xp*ca - zp*sa;\\n\\n//upper arm up down;\\nang=0.5*(cos(tm*1.273)+cos(tm));\\nxp=xq;\\nsa=sin(ang);ca=cos(ang);\\nyp=yq*ca - zq*sa;\\nzp=yq*sa + zq*ca;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+1.5;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=(1-sample);\\n"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"g":0.9,"b":0.8},"init_eqs_eel":"","frame_eqs_eel":"h=q5;\\ns = 0.7;\\nl= 0.6;\\n///////////////////////////////////////////////////////////////////////////////////////////////\\n//\\n//                            HSL to RGB by PieturP\\n//\\n// hue         h ( 0 - 0.9 )                          rr ( 0 - 1 )\\n// saturation  s ( 0 - 1 )            - >             gg ( 0 - 1 )\\n// luminance   l ( 0 - 1 )                            bb ( 0 - 1 )\\n//\\ncc=(6*h);\\ncc=if(below(cc,1),0,if(below(cc,2),1,if(below(cc,3),2,if(below(cc,4),3,if(below(cc,5),4,5)))));\\nzf=(6*h)-cc;\\nzm=l;\\nzp=l*(1-s);\\nzq=l*(1-s*zf);\\nzt=l*(1-s*(1-zf));\\nmonitor=zq;\\nrr=if(equal(cc,0),zm,if(equal(cc,1),zq,if(equal(cc,2),zp,if(equal(cc,3),zp,if(equal(cc,4),zt,zm)))));\\ngg=if(equal(cc,0),zt,if(equal(cc,1),zm,if(equal(cc,2),zm,if(equal(cc,3),zq,if(equal(cc,4),zp,zp)))));\\nbb=if(equal(cc,0),zp,if(equal(cc,1),zp,if(equal(cc,2),zt,if(equal(cc,3),zm,if(equal(cc,4),zm,zq)))));\\nrr=if(equal(s,0),l,rr);\\ngg=if(equal(s,0),l,gg);\\nbb=if(equal(s,0),l,bb);\\n\\n///////////////////////////////////////////////////////////////////////////////////////////////\\nr=rr;\\ng=gg;\\nb=bb;","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.4 ;\\ntm=q4 + phs*2 - 0.01;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=(flip*0.2-0.1)*(sample);\\nzp=0;\\n\\n//spin;\\nang=-tm*29 + sin(tm*76 + time*4)*0.4;;\\nsa=sin(ang);ca=cos(ang);\\nxr=xp*sa + yp*ca;\\nyr=xp*ca - yp*sa;\\nzr=zp;\\n\\nxp=xr;\\nyp=yr + 0.05 + (sin(tm)*0.5 + 0.5)*0.2 + 0.05;\\nzp=zr;\\n\\n//wrist movement;\\nang=0.5*(sin(tm*2)+sin(tm*1.248));\\n\\nxq=xp;\\nsa=sin(ang);ca=cos(ang);\\nyq=yp*sa + zp*ca;\\nzq=yp*ca - zp*sa;\\n\\n\\nang=tm*8;\\nsa=sin(ang);ca=cos(ang);\\nxp=xq*sa + yq*ca;\\nyp=xq*ca - yq*sa;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + (sin(tm*2 - 0.5)+sin(tm*1.237))*1.25;\\nxq=xp;\\nsa=sin(ang);ca=cos(ang);\\nyq=yp*sa + zp*ca;\\nzq=yp*ca - zp*sa;\\n\\n//upper arm twist\\nang=-1.0 + 0.5*(cos(tm*3 + 0.5)+cos(tm*0.867));\\nxp=xq*sa + yq*ca;\\nyp=xq*ca - yq*sa;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=(cos(tm*1)+cos(tm*0.653))*0.875 - 1.05;\\nsa=sin(ang);ca=cos(ang);\\nxq=xp*sa + zp*ca;\\nyq=yp;\\nzq=xp*ca - zp*sa;\\n\\n//upper arm up down;\\nang=0.5*(cos(tm*1.273)+cos(tm));\\nxp=xq;\\nsa=sin(ang);ca=cos(ang);\\nyp=yq*ca - zq*sa;\\nzp=yq*sa + zq*ca;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+1.5;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=(1-sample);\\n"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"g":0.72,"b":0.1},"init_eqs_eel":"","frame_eqs_eel":"h=q5;\\ns = 0.8;\\nl= 0.5;\\n///////////////////////////////////////////////////////////////////////////////////////////////\\n//\\n//                            HSL to RGB by PieturP\\n//\\n// hue         h ( 0 - 0.9 )                          rr ( 0 - 1 )\\n// saturation  s ( 0 - 1 )            - >             gg ( 0 - 1 )\\n// luminance   l ( 0 - 1 )                            bb ( 0 - 1 )\\n//\\ncc=(6*h);\\ncc=if(below(cc,1),0,if(below(cc,2),1,if(below(cc,3),2,if(below(cc,4),3,if(below(cc,5),4,5)))));\\nzf=(6*h)-cc;\\nzm=l;\\nzp=l*(1-s);\\nzq=l*(1-s*zf);\\nzt=l*(1-s*(1-zf));\\nmonitor=zq;\\nrr=if(equal(cc,0),zm,if(equal(cc,1),zq,if(equal(cc,2),zp,if(equal(cc,3),zp,if(equal(cc,4),zt,zm)))));\\ngg=if(equal(cc,0),zt,if(equal(cc,1),zm,if(equal(cc,2),zm,if(equal(cc,3),zq,if(equal(cc,4),zp,zp)))));\\nbb=if(equal(cc,0),zp,if(equal(cc,1),zp,if(equal(cc,2),zt,if(equal(cc,3),zm,if(equal(cc,4),zm,zq)))));\\nrr=if(equal(s,0),l,rr);\\ngg=if(equal(s,0),l,gg);\\nbb=if(equal(s,0),l,bb);\\n\\n///////////////////////////////////////////////////////////////////////////////////////////////\\nr=rr;\\ng=gg;\\nb=bb;","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.4 ;\\ntm=q4 + phs*2 - 0.02;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=(flip*0.4-0.2)*(sample);\\nzp=0;\\n\\n//spin;\\nang=tm*23 + sin(tm*76 + time*4)*0.3;;\\nsa=sin(ang);ca=cos(ang);\\nxr=xp*sa + yp*ca;\\nyr=xp*ca - yp*sa;\\nzr=zp;\\n\\nxp=xr;\\nyp=yr + 0.05 + (sin(tm)*0.5 + 0.5)*0.2 + 0.05;\\nzp=zr;\\n\\n//wrist movement;\\nang=0.5*(sin(tm*2)+sin(tm*1.248));\\n\\nxq=xp;\\nsa=sin(ang);ca=cos(ang);\\nyq=yp*sa + zp*ca;\\nzq=yp*ca - zp*sa;\\n\\n\\nang=tm*8;\\nsa=sin(ang);ca=cos(ang);\\nxp=xq*sa + yq*ca;\\nyp=xq*ca - yq*sa;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + (sin(tm*2 - 0.5)+sin(tm*1.237))*1.25;\\nxq=xp;\\nsa=sin(ang);ca=cos(ang);\\nyq=yp*sa + zp*ca;\\nzq=yp*ca - zp*sa;\\n\\n//upper arm twist\\nang=-1.0 + 0.5*(cos(tm*3 + 0.5)+cos(tm*0.867));\\nxp=xq*sa + yq*ca;\\nyp=xq*ca - yq*sa;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=(cos(tm*1)+cos(tm*0.653))*0.875 - 1.05;\\nsa=sin(ang);ca=cos(ang);\\nxq=xp*sa + zp*ca;\\nyq=yp;\\nzq=xp*ca - zp*sa;\\n\\n//upper arm up down;\\nang=0.5*(cos(tm*1.273)+cos(tm));\\nxp=xq;\\nsa=sin(ang);ca=cos(ang);\\nyp=yq*ca - zq*sa;\\nzp=yq*sa + zq*ca;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+1.5;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=(1-sample);"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"g":0.7,"b":0.5},"init_eqs_eel":"","frame_eqs_eel":"h=q5;\\ns = 0.75;\\nl= 0.4;\\n///////////////////////////////////////////////////////////////////////////////////////////////\\n//\\n//                            HSL to RGB by PieturP\\n//\\n// hue         h ( 0 - 0.9 )                          rr ( 0 - 1 )\\n// saturation  s ( 0 - 1 )            - >             gg ( 0 - 1 )\\n// luminance   l ( 0 - 1 )                            bb ( 0 - 1 )\\n//\\ncc=(6*h);\\ncc=if(below(cc,1),0,if(below(cc,2),1,if(below(cc,3),2,if(below(cc,4),3,if(below(cc,5),4,5)))));\\nzf=(6*h)-cc;\\nzm=l;\\nzp=l*(1-s);\\nzq=l*(1-s*zf);\\nzt=l*(1-s*(1-zf));\\nmonitor=zq;\\nrr=if(equal(cc,0),zm,if(equal(cc,1),zq,if(equal(cc,2),zp,if(equal(cc,3),zp,if(equal(cc,4),zt,zm)))));\\ngg=if(equal(cc,0),zt,if(equal(cc,1),zm,if(equal(cc,2),zm,if(equal(cc,3),zq,if(equal(cc,4),zp,zp)))));\\nbb=if(equal(cc,0),zp,if(equal(cc,1),zp,if(equal(cc,2),zt,if(equal(cc,3),zm,if(equal(cc,4),zm,zq)))));\\nrr=if(equal(s,0),l,rr);\\ngg=if(equal(s,0),l,gg);\\nbb=if(equal(s,0),l,bb);\\n\\n///////////////////////////////////////////////////////////////////////////////////////////////\\nr=rr;\\ng=gg;\\nb=bb;","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.4 ;\\ntm=q4 + phs*2 - 0.03;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=(flip*0.6-0.3)*(sample);\\nzp=0;\\n\\n//spin;\\nang=-tm*4 + sin(tm*76 + time*4)*0.2;;\\nsa=sin(ang);ca=cos(ang);\\nxr=xp*sa + yp*ca;\\nyr=xp*ca - yp*sa;\\nzr=zp;\\n\\nxp=xr;\\nyp=yr + 0.05 + (sin(tm)*0.5 + 0.5)*0.2 + 0.05;\\nzp=zr;\\n\\n//wrist movement;\\nang=0.5*(sin(tm*2)+sin(tm*1.248));\\n\\nxq=xp;\\nsa=sin(ang);ca=cos(ang);\\nyq=yp*sa + zp*ca;\\nzq=yp*ca - zp*sa;\\n\\n\\nang=tm*8;\\nsa=sin(ang);ca=cos(ang);\\nxp=xq*sa + yq*ca;\\nyp=xq*ca - yq*sa;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + (sin(tm*2 - 0.5)+sin(tm*1.237))*1.25;\\nxq=xp;\\nsa=sin(ang);ca=cos(ang);\\nyq=yp*sa + zp*ca;\\nzq=yp*ca - zp*sa;\\n\\n//upper arm twist\\nang=-1.0 + 0.5*(cos(tm*3 + 0.5)+cos(tm*0.867));\\nxp=xq*sa + yq*ca;\\nyp=xq*ca - yq*sa;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=(cos(tm*1)+cos(tm*0.653))*0.875 - 1.05;\\nsa=sin(ang);ca=cos(ang);\\nxq=xp*sa + zp*ca;\\nyq=yp;\\nzq=xp*ca - zp*sa;\\n\\n//upper arm up down;\\nang=0.5*(cos(tm*1.273)+cos(tm));\\nxp=xq;\\nsa=sin(ang);ca=cos(ang);\\nyp=yq*ca - zq*sa;\\nzp=yq*sa + zq*ca;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+1.5;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=(1-sample);"}],"init_eqs_eel":"","frame_eqs_eel":"warp=0;\\nwave_a = 0;\\n\\n//begin beat code\\nvolume = 0.3*(bass+mid);\\nbeatrate = equal(beatrate,0) + (1-equal(beatrate,0))*(below(volume,0.01) + (1-below(volume,0.01))*beatrate);\\nlastbeat = lastbeat + equal(lastbeat,0)*time;\\nmeanbass_att = 0.05*(meanbass_att*19 + bass_att);\\npeakbass_att = max(bass_att,peakbass_att);\\nbeat = above(volume,0.8)*below(peakbass_att - bass_att, 0.05*peakbass_att)*above(time - lastbeat, 0.1 + 0.5*(beatrate - 0.1));\\nbeatrate = max(if(beat,if(below(time-lastbeat,2*beatrate),0.1*(beatrate*9 + time - lastbeat),beatrate),beatrate),0.1);\\n//Adjust responsiveness: To increase responsiveness, set the \\"0.96 and \\"0.996\\" on the next line to slightly lower values. Higher values decrease responsiveness.\\npeakbass_att = beat*bass_att + (1-beat)*peakbass_att*(above(time - lastbeat, 2*beatrate)*0.96 + (1-above(time - lastbeat, 2*beatrate))*0.996);\\nlastbeat = beat*time + (1-beat)*lastbeat;\\npeakbass_att = max(peakbass_att,1.1*meanbass_att);\\n//end beat code\\n\\nxamptarg = if(equal(frame%15,0),min(0.25*volume*bass_att,0.5),xamptarg);\\nxamp = xamp + 0.5*(xamptarg-xamp);\\nxdir = if(above(abs(xpos),xamp),-sign(xpos),if(below(abs(xspeed),0.1),2*above(xpos,0)-1,xdir));\\nxspeed = xspeed + xdir*xamp - xpos - xspeed*0.055*below(abs(xpos),xamp);\\nxpos = xpos + 0.001*xspeed;\\nyamptarg = if(equal(frame%15,0),min(0.15*volume*treb_att,0.5),yamptarg);\\nyamp = yamp + 0.5*(yamptarg-yamp);\\nydir = if(above(abs(ypos),yamp),-sign(ypos),if(below(abs(yspeed),0.1),2*above(ypos,0)-1,ydir));\\nyspeed = yspeed + ydir*yamp - ypos - yspeed*0.055*below(abs(ypos),yamp);\\nypos = ypos + 0.001*yspeed;\\nq1 = beat;\\nq2 = xpos;\\nq3 = ypos;\\nq4 = time*0.5;\\n\\nq5 = 0.25*(sin(time*0.15)+sin(time*0.85))+0.5;\\n\\nmonitor = q5;","pixel_eqs_eel":"","warp":"uniform sampler2D sampler_cells;\\n shader_body { \\n  vec3 ret_1;\\n  ret_1 = (texture (sampler_main, uv).xyz + ((texture (sampler_noise_lq, \\n    (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)\\n  ).xyz - 0.5) / 256.0));\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_cells, (uv_orig * aspect.xy));\\n  vec2 x_3;\\n  x_3 = (uv - uv_orig);\\n  ret_1 = (mix (ret_1, tmpvar_2.xyz, vec3((\\n    clamp ((1.0 - (abs(\\n      (((dot (tmpvar_2.xyz, vec3(0.32, 0.49, 0.29)) * 0.8) + 0.1) - (0.5 + (roam_cos.y * 0.25)))\\n    ) * 43.0)), 0.0, 1.0)\\n   * 0.07))) * (0.97 + (0.03 * \\n    clamp ((sqrt(dot (x_3, x_3)) * 200.0), 0.0, 1.0)\\n  )));\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = ret_1;\\n  ret = tmpvar_4.xyz;\\n }","comp":""}')},5703:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":1.007,"echo_alpha":0.5,"echo_orient":1,"wave_mode":2,"wave_dots":1,"wave_brighten":0,"wave_a":0.001,"wave_scale":0.012,"wave_smoothing":0.9,"warpscale":2.853,"zoomexp":0.99983,"zoom":0.99752,"warp":0.01565,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"ob_size":0,"mv_x":0,"mv_y":43.2,"mv_l":1,"mv_g":0.91,"mv_b":0.71,"mv_a":0},"shapes":[{"baseVals":{"sides":5,"textured":1,"rad":1.06779,"ang":0.75398,"tex_zoom":0.77977,"g":1,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ang=sin(q1*0.15);\\nx=sin(q1*0.5) * 0.05 + 0.5;\\ny=cos(q1*0.63)* 0.05 + 0.5"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":5,"additive":1,"rad":0.03809,"g":1,"b":1,"g2":0.6,"b2":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"tm=q1;\\n\\nxp=0;\\nyp=0.1;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2 )*0.5 +0.5;\\n\\nxq=xp;\\nsinang=sin(ang);cosang=cos(ang);\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3.1 + 0.5);\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2.3)*1.75 - 1.05;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp*sinang + zp*cosang;\\nyq=yp;\\nzq=xp*cosang - zp*sinang;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq;\\nyp=yq*cosang - zq*sinang;\\nzp=yq*sinang + zq*cosang;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\n\\n"}],"waves":[{"baseVals":{"enabled":1,"r":0.1,"b":0.7},"init_eqs_eel":"","frame_eqs_eel":"t1=sin(time)*0.5+0.5;\\nt2=sin(time+2.1)*0.5+0.5;\\nt3=sin(time+4.2)*0.5+0.5;\\n\\nt4=sin(time+1.1)*0.5+0.5;\\nt5=sin(time+3.1)*0.5+0.5;\\nt6=sin(time+5.2)*0.5+0.5;","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2 )*0.5 +0.5;\\n\\nxq=xp;\\nsinang=sin(ang);cosang=cos(ang);\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3.1 + 0.5);\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2.3)*1.75 - 1.05;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp*sinang + zp*cosang;\\nyq=yp;\\nzq=xp*cosang - zp*sinang;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq;\\nyp=yq*cosang - zq*sinang;\\nzp=yq*sinang + zq*cosang;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=if( equal(q8,1) , (1-sample) , sample);\\na=a*a;\\n\\nb=b+pow(1-sample,2)*0.3;\\n\\n\\n\\nr1=t1;\\ng1=t2;\\nb1=t3;\\nr2=t4;\\ng2=t5;\\nb2=t6;\\n\\nr=r1*flip + r2*(1-flip);\\ng=g1*flip + g2*(1-flip);\\nb=b1*flip + b2*(1-flip);"},{"baseVals":{"enabled":1,"r":0.2,"b":0.6},"init_eqs_eel":"","frame_eqs_eel":"t1=sin(time)*0.5+0.5;\\nt2=sin(time+2.1)*0.5+0.5;\\nt3=sin(time+4.2)*0.5+0.5;\\n\\nt4=sin(time+1.1)*0.5+0.5;\\nt5=sin(time+3.1)*0.5+0.5;\\nt6=sin(time+5.2)*0.5+0.5;","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2 +0.1;\\nyp=-yp;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2)*0.5 +0.5;\\n\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3.1 + 0.5);\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2.3)*1.75 - 1.05;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp*sinang + zp*cosang;\\nyq=yp;\\nzq=xp*cosang - zp*sinang;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq;\\nyp=yq*cosang - zq*sinang;\\nzp=yq*sinang + zq*cosang;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=if( equal(q8,1) , (1-sample) , sample);\\na=a*a;\\n\\n\\nb=b+pow(1-sample,2)*0.3;\\n\\nr1=t1;\\ng1=t2;\\nb1=t3;\\nr2=t4;\\ng2=t5;\\nb2=t6;\\n\\nr=r1*flip + r2*(1-flip);\\ng=g1*flip + g2*(1-flip);\\nb=b1*flip + b2*(1-flip);"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1,"g":0.6,"b":0.1},"init_eqs_eel":"","frame_eqs_eel":"t1=sin(time)*0.5+0.5;\\nt2=sin(time+2.1)*0.5+0.5;\\nt3=sin(time+4.2)*0.5+0.5;\\n\\nt4=sin(time+1.1)*0.5+0.5;\\nt5=sin(time+3.1)*0.5+0.5;\\nt6=sin(time+5.2)*0.5+0.5;\\n\\n\\nt8= int( sin(time*2)*2 + 3);","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2)*0.5 +0.5;\\n\\nxq=xp;\\nsinang=sin(ang);cosang=cos(ang);\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8 + 1;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3.1 + 0.5);\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2.3)*1.75 - 1.05;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp*sinang + zp*cosang;\\nyq=yp;\\nzq=xp*cosang - zp*sinang;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq;\\nyp=yq*cosang - zq*sinang;\\nzp=yq*sinang + zq*cosang;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\na=if( equal(q8,1) , (1-sample) , sample);\\n\\n\\na=a* above( sin(tm*128*t8) , 0 );\\n\\n\\nr=t4;\\ng=t5;\\nb=t6;\\n"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1,"g":0.3,"b":0.1},"init_eqs_eel":"","frame_eqs_eel":"t1=sin(time)*0.5+0.5;\\nt2=sin(time+2.1)*0.5+0.5;\\nt3=sin(time+4.2)*0.5+0.5;\\n\\nt4=sin(time+1.1)*0.5+0.5;\\nt5=sin(time+3.1)*0.5+0.5;\\nt6=sin(time+5.2)*0.5+0.5;\\n\\n\\nt8= int( sin(time*2)*2 + 3);","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2 +0.1;\\nyp=-yp;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2)*0.5 +0.5;\\n\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8+1;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3.1 + 0.5);\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2.3)*1.75 - 1.05;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp*sinang + zp*cosang;\\nyq=yp;\\nzq=xp*cosang - zp*sinang;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq;\\nyp=yq*cosang - zq*sinang;\\nzp=yq*sinang + zq*cosang;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=if( equal(q8,1) , (1-sample) , sample);\\na=a*a;\\n\\na=a* above( sin(tm*128*t8) , 0 );\\n\\n\\nr=t4;\\ng=t5;\\nb=t6;"}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.400*( 0.60*sin(0.933*time) + 0.40*sin(1.045*time) );\\nwave_g = wave_g + 0.100*( 0.60*sin(0.900*time) + 0.40*sin(0.956*time) );\\nwave_b = wave_b + 0.100*( 0.60*sin(0.910*time) + 0.40*sin(0.920*time) );\\nmv_r = wave_r;\\nmv_b = wave_b;\\nmv_g = wave_g;\\nq1 = 0.05*(pow(1+1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6)/fps);\\n//q1 = 0.6*(bass+bass_att);\\nmv_a = if(above(bass-1.2,1),1,bass-1.2);\\nq2 = oldq2 + 0.05*(pow(1+1.2*treb+0.4*treb_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6)/fps);\\n\\n//q2 = oldq2 +q1;\\noldq2 = q2 ;\\nmonitor = q2;","pixel_eqs_eel":"zoom = zoom + rad*0.1*q1;","warp":" shader_body { \\n  vec3 ret_1;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv);\\n  ret_1 = (tmpvar_2.xyz + ((tmpvar_2.xyz - \\n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\\n  ) * 0.2));\\n  ret_1 = (ret_1 * 0.9);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_1;\\n  ret = tmpvar_3.xyz;\\n }","comp":" shader_body { \\n  float ang2_1;\\n  ang2_1 = ((ang * 0.1591549) + (time * 0.025));\\n  float tmpvar_2;\\n  tmpvar_2 = (3.0 + floor((rand_preset.z * 5.95)));\\n  ang2_1 = (fract((ang2_1 * tmpvar_2)) / tmpvar_2);\\n  ang2_1 = (abs((ang2_1 - \\n    (0.5 / tmpvar_2)\\n  )) * 6.283185);\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = cos(ang2_1);\\n  tmpvar_3.y = sin(ang2_1);\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = (texture (sampler_main, (0.5 + (\\n    ((0.4 * (rad * sqrt(\\n      dot (texsize.xy, texsize.xy)\\n    ))) * tmpvar_3)\\n   * texsize.zw))).xyz * 1.333);\\n  ret = tmpvar_4.xyz;\\n }"}')},4716:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"decay":0.987,"echo_zoom":1.006,"echo_alpha":0.5,"echo_orient":3,"wave_mode":1,"additivewave":1,"wave_dots":1,"darken":1,"wave_a":2.782,"wave_scale":0.59,"wave_smoothing":0.36,"warpanimspeed":1.489,"warpscale":0.733,"fshader":0.1,"zoom":0.99971,"dx":-0.005,"warp":0.13291,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"mv_x":64,"mv_y":48,"mv_l":0,"mv_r":0.35,"mv_g":0.35,"mv_b":0.35,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.350*( 0.60*sin(0.980*time) + 0.40*sin(1.047*time) );\\nwave_g = wave_g + 0.350*( 0.60*sin(0.835*time) + 0.40*sin(1.081*time) );\\nwave_b = wave_b + 0.350*( 0.60*sin(0.814*time) + 0.40*sin(1.011*time) );\\ncx = cx + 0.110*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\ncy = cy + 0.110*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\\ndecay = decay - 0.01*equal(frame%20,0);\\n//zoom = 1;\\n//warp = 0;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (texture (sampler_main, uv).xyz * 0.98);\\n  ret = tmpvar_1.xyz;\\n }","comp":" shader_body { \\n  vec2 uv_1;\\n  vec3 ret_2;\\n  uv_1 = (0.05 + (0.9 * uv));\\n  ret_2 = (abs((\\n    ((texture (sampler_blur1, uv_1).xyz * scale1) + bias1)\\n   - texture (sampler_main, uv_1).xyz)) * 6.0);\\n  ret_2 = (ret_2 * 1.333);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_2;\\n  ret = tmpvar_3.xyz;\\n }"}')},2585:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1.9,"echo_zoom":1.16936,"wave_mode":2,"wave_dots":1,"wave_brighten":0,"wave_a":0.001,"wave_scale":0.011726,"wave_smoothing":0.9,"warpanimspeed":0.037492,"warpscale":0.014889,"warp":0.033004,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"ob_size":0.05,"ob_a":0.2999,"ib_size":0.09,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":3,"mv_y":2,"mv_dx":0.02,"mv_dy":-0.02,"mv_l":0.15,"mv_r":0.49,"mv_g":0.48,"mv_b":0.300001,"mv_a":0},"shapes":[{"baseVals":{"sides":5,"textured":1,"rad":3.998815,"tex_ang":1.570796,"tex_zoom":0.250054,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":5,"textured":1,"rad":1.06779,"ang":0.753982,"tex_zoom":0.741858,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ang=sin(q1*0.15);\\nx=sin(q1*0.5) * 0.05 + 0.5;\\ny=cos(q1*0.63)* 0.05 + 0.5"},{"baseVals":{"enabled":1,"sides":5,"textured":1,"rad":1.06779,"ang":0.753982,"tex_zoom":0.779769,"g":1,"b":1,"r2":1,"b2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ang=sin(q1*0.15);\\nx=sin(q1*0.5) * 0.05 + 0.5;\\ny=cos(q1*0.63)* 0.05 + 0.5"},{"baseVals":{"sides":5,"textured":1,"rad":1.0677,"ang":0.753982,"tex_zoom":0.779769,"g":1,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ang=sin(q1*0.15);\\nx=sin(q1*0.5) * 0.05 + 0.5;\\ny=cos(q1*0.63)* 0.05 + 0.5"}],"waves":[{"baseVals":{"enabled":1,"thick":1,"r":0.1,"g":0,"b":0.3},"init_eqs_eel":"","frame_eqs_eel":"t1=sin(time)*0.5+0.5;\\nt2=sin(time+2.1)*0.5+0.5;\\nt3=sin(time+4.2)*0.5+0.5;\\n\\nt4=sin(-time+1.1)*0.5+0.5;\\nt5=sin(-time+3.1)*0.5+0.5;\\nt6=sin(-time+5.2)*0.5+0.5;","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=(flip+1)*below(flip,1);\\n\\nxp=0;\\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2)*0.5 +0.5;\\n\\nxq=xp;\\nsinang=sin(ang);cosang=cos(ang);\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3.1 + 0.5);\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2.3)*1.75 - 1.05;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp*sinang + zp*cosang;\\nyq=yp;\\nzq=xp*cosang - zp*sinang;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq;\\nyp=yq*cosang - zq*sinang;\\nzp=yq*sinang + zq*cosang;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\ndx = if(flip,x,dx-x);\\ndy = if(flip,y,dy-y);\\ndz = pow(dx*dx+dy*dy,.5);\\nang = abs(asin(dx/dz));\\ncang = if(flip,cang,if(below(dx,0),if(below(dy,0),-ang,3.141592654 + ang),if(below(dy,0),ang,3.141592654 - ang)));\\nr = .5 + .5*sin(cang);\\ng = .5 + .5*sin(cang + 1.047197);\\nb = .5 + .5*sin(cang + 2.094395);\\n\\na=(1-sample)*above(sample,0);\\n"},{"baseVals":{"enabled":1,"thick":1,"r":0.2,"b":0.6},"init_eqs_eel":"","frame_eqs_eel":"t1=sin(time)*0.5+0.5;\\nt2=sin(time+2.1)*0.5+0.5;\\nt3=sin(time+4.2)*0.5+0.5;\\n\\nt4=sin(-time+1.1)*0.5+0.5;\\nt5=sin(-time+3.1)*0.5+0.5;\\nt6=sin(-time+5.2)*0.5+0.5;","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2 +0.1;\\nyp=-yp;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2)*0.5 +0.5;\\n\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3.1 + 0.5);\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2.3)*1.75 - 1.05;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp*sinang + zp*cosang;\\nyq=yp;\\nzq=xp*cosang - zp*sinang;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq;\\nyp=yq*cosang - zq*sinang;\\nzp=yq*sinang + zq*cosang;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\ndx = if(flip,x,dx-x);\\ndy = if(flip,y,dy-y);\\ndz = pow(dx*dx+dy*dy,.5);\\nang = abs(asin(dx/dz));\\ncang = if(flip,cang,if(below(dx,0),if(below(dy,0),-ang,3.141592654 + ang),if(below(dy,0),ang,3.141592654 - ang)));\\nr = .5 + .5*sin(cang);\\ng = .5 + .5*sin(cang + 1.047197);\\nb = .5 + .5*sin(cang + 2.094395);\\n\\na=(1-sample)*above(sample,0);"},{"baseVals":{"thick":1,"additive":1,"g":0.6,"b":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\\ntm=q1;\\nphs=-sample*0.5;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2+phs - 2)*0.5 +0.5 + 2;\\n\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\n\\nang=cos(tm*2+phs - 2)*1.5 ;\\nxp=xq*sin(ang) + yq*cos(ang);\\nyp=xq*cos(ang) - yq*sin(ang);\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2+phs - 0.5)*1.5;\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3 + 0.5 +phs + 0.5);\\nxp=xq*sin(ang) + yq*cos(ang);\\nyp=xq*cos(ang) - yq*sin(ang);\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2+phs)*0.75 - 1.05;\\nxq=xp*sin(ang) + zp*cos(ang);\\nyq=yp;\\nzq=xp*cos(ang) - zp*sin(ang);\\n\\n//upper arm up down;\\nang=cos(tm+phs)*0.5 - 0.5;\\nxp=xq;\\nyp=yq*cos(ang) - zq*sin(ang);\\nzp=yq*sin(ang) + zq*cos(ang);\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=(1-sample)*0.05\\n"},{"baseVals":{"thick":1,"additive":1,"g":0.3,"b":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\\ntm=q1 ;\\nphs=-sample*0.5;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2+phs-2)*0.5 +0.5 + 2;\\n\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\n\\nang=cos(tm*2+phs-2)*1.5;\\nxp=xq*sin(ang) + yq*cos(ang);\\nyp=xq*cos(ang) - yq*sin(ang);\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2+phs-0.5)*1.5;\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3 + 0.5 +phs);\\nxp=xq*sin(ang) + yq*cos(ang);\\nyp=xq*cos(ang) - yq*sin(ang);\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2+phs)*0.75 - 1.05;\\nxq=xp*sin(ang) + zp*cos(ang);\\nyq=yp;\\nzq=xp*cos(ang) - zp*sin(ang);\\n\\n//upper arm up down;\\nang=cos(tm+phs)*0.5 - 0.5;\\nxp=xq;\\nyp=yq*cos(ang) - zq*sin(ang);\\nzp=yq*sin(ang) + zq*cos(ang);\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=-xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=(1-sample)*0.05;\\n"}],"init_eqs_eel":"mv_x=64;mv_y=48;\\nnut=0;\\nstp=0;stq=0;\\nrtp=0;rtq=0;\\nwvr=0;\\ndecay=0;\\ndcsp=0","frame_eqs_eel":"decay=1;\\nzoom=1.1;\\n\\nwarp = 0;\\n\\nvol=(bass_att+mid_att+treb_att)*0.25;\\nvol=vol*vol;\\nmtime=mtime+vol*0.1;\\n\\nq1=mtime*0.4;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = ((texture (sampler_noise_lq, (rand_frame.xy + \\n    ((uv * texsize_noise_lq.zw) * texsize.xy)\\n  )) * 2.0) - 1.0);\\n  ret_1 = (texture (sampler_pw_main, (uv + (\\n    (tmpvar_2.zw * texsize.zw)\\n   * 0.5))).xyz + ((0.59 - \\n    (0.2 * rad)\\n  ) * tmpvar_2.xyz));\\n  vec3 tmpvar_3;\\n  tmpvar_3 = clamp (((\\n    (ret_1 - 0.5)\\n   * 3.0) + 0.25), 0.0, 1.0);\\n  ret_1.x = tmpvar_3.x;\\n  ret_1.yz = tmpvar_3.xx;\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = ret_1;\\n  ret = tmpvar_4.xyz;\\n }","comp":" shader_body { \\n  vec2 uv_1;\\n  vec3 ret_2;\\n  uv_1 = (0.05 + (0.9 * uv));\\n  ret_2 = (abs((\\n    ((texture (sampler_blur1, uv_1).xyz * scale1) + bias1)\\n   - texture (sampler_main, uv_1).xyz)) * 6.0);\\n  ret_2 = (ret_2 * 1.333);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_2;\\n  ret = tmpvar_3.xyz;\\n }"}')},8334:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":0.999997,"wave_mode":5,"modwavealphabyvolume":1,"wave_a":11.202061,"wave_scale":1.772913,"wave_smoothing":0.9,"wave_mystery":-0.5,"warpanimspeed":24.831774,"warpscale":0.419995,"zoom":0.999514,"warp":55.044964,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"smoothing":0.8,"r":0.5,"g":0,"b":0,"a":0.5},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"warp = 0;\\n\\nwave_b = if(below(treb, 1.8),1-.025*rand(10),0);\\nwave_g = wave_g*sqr(.01*rand(100));\\ndecay = .9999+.0001+0*if(equal(frame % 10,0),.95,1);\\nmonitor = wave_g;\\ncx=.5+.3*cos(time*.21);\\ncy=.5+.3*sin(time*.1);\\ncx=cx+(bass-1.2)*.1;\\ncy=cy+(treb_att-1)*.1;\\nmv_r=bass_att*.4;\\nwave_x = cx;\\nwave_y=1-cy;\\n\\nq1=cx;\\nq2=cy;","pixel_eqs_eel":"near=below(sqr(q1-x)+sqr(q2-y),.04);\\nnotnear = 1- near;\\nsy=max(0.3,pow(bass_att,.2))*near + notnear;\\nsx=1/sy*near + notnear;\\nrot = .02*sin(x*5+time)*notnear-.03;\\nzoom = 1+ notnear*.001*(.5+sin(ang*5+time));","warp":" shader_body { \\n  vec3 ret_1;\\n  ret_1 = texture (sampler_main, uv).xyz;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (normalize((uv - uv_orig)) * texsize.zw);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 0.0;\\n  tmpvar_3.xyz = ret_1;\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 0.0;\\n  tmpvar_4.xyz = max (tmpvar_3, (texture (sampler_main, (uv - tmpvar_2)) * 0.9)).xyz;\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 0.0;\\n  tmpvar_5.xyz = max (tmpvar_4, (texture (sampler_main, (uv + tmpvar_2)) * 0.97)).xyz;\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 0.0;\\n  tmpvar_6.xyz = max (tmpvar_5, (texture (sampler_main, (uv + \\n    (tmpvar_2 * 2.0)\\n  )) * 0.97)).xyz;\\n  ret_1 = (max (tmpvar_6, (texture (sampler_main, \\n    (uv + (tmpvar_2 * 3.0))\\n  ) * 0.9)).xyz * 0.92);\\n  vec4 tmpvar_7;\\n  tmpvar_7.w = 1.0;\\n  tmpvar_7.xyz = ret_1;\\n  ret = tmpvar_7.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  ret_1 = (abs((\\n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\\n   - texture (sampler_main, uv).xyz)) * 6.0);\\n  ret_1 = (ret_1 * 1.333);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ret_1;\\n  ret = tmpvar_2.xyz;\\n }"}')},7472:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.977,"echo_zoom":1.006596,"echo_alpha":0.5,"echo_orient":3,"wave_mode":5,"additivewave":1,"wave_dots":1,"wave_thick":1,"modwavealphabyvolume":1,"wrap":0,"darken_center":1,"wave_a":1.193337,"wave_scale":1.000291,"wave_smoothing":0.9,"modwavealphastart":0.73,"modwavealphaend":1.07,"warpscale":2.853,"zoomexp":0.999835,"zoom":0.999682,"warp":0,"wave_g":0.8,"wave_b":0.2,"ob_size":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.400*( 0.60*sin(0.933*time) + 0.40*sin(1.045*time) );\\nwave_g = wave_g + 0.100*( 0.60*sin(0.900*time) + 0.40*sin(0.956*time) );\\nwave_b = wave_b + 0.100*( 0.60*sin(0.910*time) + 0.40*sin(0.920*time) );\\nmv_r = wave_r;\\nmv_b = wave_b;\\nmv_g = wave_g;\\nq1 = 0.05*(pow(1+1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6)/fps);\\n//q1 = 0.6*(bass+bass_att);\\nmv_a = if(above(bass-1.2,1),1,bass-1.2);","pixel_eqs_eel":"zoom = 1.01 + rad*0.15*q1;","warp":"","comp":" shader_body { \\n  vec2 uv_1;\\n  vec3 ret_2;\\n  uv_1 = (0.05 + (0.9 * uv));\\n  ret_2 = (abs((\\n    ((texture (sampler_blur1, uv_1).xyz * scale1) + bias1)\\n   - texture (sampler_main, uv_1).xyz)) * 6.0);\\n  ret_2 = (ret_2 * 1.333);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_2;\\n  ret = tmpvar_3.xyz;\\n }"}')},8843:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1,"decay":1,"echo_zoom":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.535239,"wave_smoothing":0,"wave_mystery":-0.48,"modwavealphastart":1,"modwavealphaend":1.1,"warpscale":3.138,"fshader":1,"zoom":1.023,"warp":0.122616,"wave_g":0.65,"wave_b":0,"mv_x":6.4,"mv_y":48,"mv_dx":0.5,"mv_dy":0.5,"mv_l":5,"mv_r":0.013716,"mv_g":0.872347,"mv_b":0.522466,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"thickoutline":1,"textured":1,"rad":0.746302,"tex_zoom":0.942039,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ang=sin(time)*.5+.5;\\nval=3;\\na2=val*.33;\\na=val*.33;\\nrad=cos(time*.3)*.4+0.65;\\nx=sin(time*.25)*.25+.5;\\ny=cos(time*.45)*.25+.5;\\n\\n\\n"},{"baseVals":{"enabled":1,"thickoutline":1,"textured":1,"rad":0.746302,"tex_zoom":0.942039,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ang=cos(time*.3)*.5+.5;\\nval=3;\\na2=val*.33;\\na=val*.33;\\nrad=sin(time*.3)*.4+0.65;\\nx=cos(time*.25)*.25+.5;\\ny=sin(time*.45)*.25+.5;\\n\\n\\n"},{"baseVals":{"enabled":1,"thickoutline":1,"rad":0.364564,"r":0,"g2":0,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"\\nh2=h2+(above(treb,1.32)*0.8)*.9;\\nvr=sin(h2*.8)*.5+.5;\\nvg=sin(h2*.5)*.5+.5;\\nvb=sin(h2*.1)*.5+.5;\\n\\ng=vg;\\nr=vr;\\nb=vb;\\ng2=g;\\nr2=r;\\nb2=b;\\ndist=(frame%100)*.01;\\nmaat=maat+(above(bass_att,1.5));\\nmaat=below(maat,16)*maat;\\nx=if(below(maat,8),if(below(maat,4),dist,1-dist),x);\\ny=if(above(maat,8),if(above(maat,4),dist,1-dist),y);"},{"baseVals":{"thickoutline":1,"textured":1,"rad":0.364564,"r":0,"g2":0,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"\\nh2=h2+(above(treb,1.32)*0.8)*.9;\\nvr=sin(h2*.8)*.5+.5;\\nvg=sin(h2*.5)*.5+.5;\\nvb=sin(h2*.1)*.5+.5;\\n\\ng=vg;\\nr=vr;\\nb=vb;\\ng2=g;\\nr2=r;\\nb2=b;\\ndist=(frame%100)*.01;\\nmaat=maat+(above(bass_att,1.5));\\nmaat=below(maat,16)*maat;\\ny=if(below(maat,8),if(below(maat,4),dist,1-dist),y);\\nx=if(above(maat,8),if(above(maat,4),dist,1-dist),x);"}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = 1;//0.85 + 0.35*sin(0.437*time+1) + 0.55*sin(0.197*time+4);\\nwave_g = 0;//0.85 + 0.35*sin(0.544*time+2) + 0.55*sin(0.143*time+5);\\nwave_b = 0;//0.85 + 0.35*sin(0.751*time+3) + 0.55*sin(0.117*time+6);\\nwave_r = sqrt(wave_r);\\nwave_g = sqrt(wave_g);\\nwave_b = sqrt(wave_b);\\nrot = rot + 0.010*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );\\ncx = cx + 0.210*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\ncy = cy + 0.210*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\\ndx = dx + 0.003*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );\\ndy = dy + 0.003*( 0.60*sin(0.284*time) + 0.40*sin(0.247*time) );\\ndecay = decay - 0.01*equal(frame%6,0);\\ndx = dx + dx_residual;\\ndy = dy + dy_residual;\\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.96+1.3);\\ndx_residual = equal(bass_thresh,2.13)*0.016*sin(time*7) + (1-equal(bass_thresh,2.13))*dx_residual;\\ndy_residual = equal(bass_thresh,2.13)*0.012*sin(time*9) + (1-equal(bass_thresh,2.13))*dy_residual;\\nwave_x = wave_x - dx_residual*7;\\nwave_y = wave_y - dy_residual*7;\\nwave_mystery = time*0.03;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (texture (sampler_main, (uv + (\\n    (texture (sampler_main, (uv + texsize.zw)).xy - 0.37)\\n   * 0.03))).xyz - 0.004);\\n  ret = tmpvar_1.xyz;\\n }","comp":" shader_body { \\n  vec2 uv_1;\\n  vec3 ret_2;\\n  uv_1 = (0.05 + (0.9 * uv));\\n  ret_2 = (abs((\\n    ((texture (sampler_blur1, uv_1).xyz * scale1) + bias1)\\n   - texture (sampler_main, uv_1).xyz)) * 6.0);\\n  ret_2 = (ret_2 * 1.333);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_2;\\n  ret = tmpvar_3.xyz;\\n }"}')},4654:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"decay":1,"wave_mode":3,"wave_thick":1,"wave_brighten":0,"wave_a":11.94,"wave_scale":0.387,"wave_smoothing":0.7,"warpscale":1.772,"zoomexp":4.401,"zoom":1.031,"rot":0.003,"warp":0,"wave_r":0.49,"wave_g":0.49,"wave_b":0.49,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"t = time*2.3;\\nwave_x = wave_x + 0.350*( 0.70*sin(2.221*time) + 0.30*sin(1.821*time) );\\nwave_y = wave_y + 0.350*( 0.30*sin(1.942*time) + 0.70*sin(2.522*time) );\\nwave_r = wave_r + 0.790*( 0.60*sin(0.823*t) + 0.40*sin(0.916*t) );\\nwave_g = wave_g + 0.790*( 0.60*sin(0.900*t) + 0.40*sin(1.023*t) );\\nwave_b = wave_b + 0.790*( 0.60*sin(0.808*t) + 0.40*sin(0.949*t) );\\nrot = rot + 0.010*( 0.60*sin(0.038*time) + 0.40*sin(0.054*time) );\\ndx = dx + 0.002*( 0.60*sin(0.434*time) + 0.40*sin(0.277*time) );\\ndy = dy + 0.002*( 0.60*sin(0.384*time) + 0.40*sin(0.477*time) );","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  ret_1 = (texture (sampler_main, uv).xyz + ((\\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)).xxx - 0.5)\\n   / 256.0) * 2.0));\\n  vec2 x_2;\\n  x_2 = (uv - uv_orig);\\n  ret_1 = (ret_1 * (0.97 + (0.03 * \\n    clamp ((sqrt(dot (x_2, x_2)) * 200.0), 0.0, 1.0)\\n  )));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_1;\\n  ret = tmpvar_3.xyz;\\n }","comp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (((\\n    (texture (sampler_main, uv).xyz * -2.0)\\n   + \\n    (((texture (sampler_blur1, uv).xyz * scale1) + bias1) * 2.0)\\n  ) + (\\n    ((texture (sampler_blur2, uv).xyz * scale2) + bias2)\\n   * 2.0)) - 0.7);\\n  ret = tmpvar_1.xyz;\\n }"}')},1774:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1.9,"echo_zoom":1.169,"wave_mode":3,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_a":0.207,"wave_scale":1.074,"wave_smoothing":0,"wave_mystery":0.24,"modwavealphaend":1.17,"warpanimspeed":0.335,"warpscale":3.521,"zoomexp":2.1,"zoom":1.00002,"warp":0.92753,"ob_size":0,"ob_a":0.5,"ib_size":0.029,"ib_r":0.34,"ib_g":0.34,"ib_b":0.34,"ib_a":0.1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_r":0.35,"mv_g":0.35,"mv_b":0.35,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_x = wave_x + 0.2900*( 0.60*sin(2.121*time) + 0.40*sin(1.621*time) );\\nwave_y = wave_y + 0.2900*( 0.60*sin(1.742*time) + 0.40*sin(2.322*time) );\\nwave_r = wave_r + 0.350*( 0.60*sin(0.823*time) + 0.40*sin(0.916*time) );\\nwave_g = wave_g + 0.350*( 0.60*sin(0.900*time) + 0.40*sin(1.023*time) );\\nwave_b = wave_b + 0.350*( 0.60*sin(0.808*time) + 0.40*sin(0.949*time) );\\nblah = 0.5/(wave_r+wave_g+wave_b);\\nwave_r = wave_r*blah; wave_g = wave_g*blah; wave_b = wave_b*blah;\\nrot = rot + 0.035*( 0.60*sin(0.21*time) + 0.30*sin(0.339*time) );\\ncx = cx + 0.30*( 0.60*sin(0.374*time) + 0.14*sin(0.194*time) );\\ncy = cy + 0.37*( 0.60*sin(0.274*time) + 0.10*sin(0.394*time) );\\ndx = dx + 0.01*( 0.60*sin(0.324*time) + 0.40*sin(0.234*time) );\\ndy = dy + 0.01*( 0.60*sin(0.244*time) + 0.40*sin(0.264*time) );\\nib_r = ib_r + 0.2*sin(time*0.5413);\\nib_g = ib_g + 0.2*sin(time*0.6459);\\nib_b = ib_b + 0.2*sin(time*0.7354);\\nblah = 12.4/(ib_r+ib_g+ib_b)*3;\\nib_r = ib_r*blah; ib_g = ib_g*blah; ib_b = ib_b*blah;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (texture (sampler_main, (uv + (\\n    (texture (sampler_main, (uv + texsize.zw)).xy - 0.37)\\n   * 0.03))).xyz - 0.004);\\n  ret = tmpvar_1.xyz;\\n }","comp":" shader_body { \\n  vec2 uv_1;\\n  vec3 ret_2;\\n  uv_1 = (0.05 + (0.9 * uv));\\n  ret_2 = (abs((\\n    ((texture (sampler_blur1, uv_1).xyz * scale1) + bias1)\\n   - texture (sampler_main, uv_1).xyz)) * 6.0);\\n  ret_2 = (ret_2 * 1.333);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_2;\\n  ret = tmpvar_3.xyz;\\n }"}')},2813:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1.7,"echo_zoom":1.16936,"wave_mode":2,"wave_dots":1,"wave_brighten":0,"wave_a":0.001,"wave_scale":0.011726,"wave_smoothing":0.9,"zoom":0.999902,"warp":0.01,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"ob_size":0.0065,"ib_size":0.26,"mv_x":0,"mv_y":43.199997,"mv_l":1,"mv_g":0.91,"mv_b":0.71,"mv_a":0},"shapes":[{"baseVals":{"sides":5,"textured":1,"rad":1.06779,"ang":0.753982,"tex_zoom":0.779769,"g":1,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ang=sin(q1*0.15);\\nx=sin(q1*0.5) * 0.05 + 0.5;\\ny=cos(q1*0.63)* 0.05 + 0.5"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":5,"additive":1,"rad":0.038091,"g":1,"b":1,"g2":0.6,"b2":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"tm=q1;\\n\\nxp=0;\\nyp=0.1;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2 )*0.5 +0.5;\\n\\nxq=xp;\\nsinang=sin(ang);cosang=cos(ang);\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3.1 + 0.5);\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2.3)*1.75 - 1.05;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp*sinang + zp*cosang;\\nyq=yp;\\nzq=xp*cosang - zp*sinang;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq;\\nyp=yq*cosang - zq*sinang;\\nzp=yq*sinang + zq*cosang;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\n\\n"}],"waves":[{"baseVals":{"enabled":1,"r":0.1,"b":0.7},"init_eqs_eel":"","frame_eqs_eel":"t1=sin(time)*0.5+0.5;\\nt2=sin(time+2.1)*0.5+0.5;\\nt3=sin(time+4.2)*0.5+0.5;\\n\\nt4=sin(time+1.1)*0.5+0.5;\\nt5=sin(time+3.1)*0.5+0.5;\\nt6=sin(time+5.2)*0.5+0.5;","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2 )*0.5 +0.5;\\n\\nxq=xp;\\nsinang=sin(ang);cosang=cos(ang);\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3.1 + 0.5);\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2.3)*1.75 - 1.05;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp*sinang + zp*cosang;\\nyq=yp;\\nzq=xp*cosang - zp*sinang;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq;\\nyp=yq*cosang - zq*sinang;\\nzp=yq*sinang + zq*cosang;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=if( equal(q8,1) , (1-sample) , sample);\\na=a*a;\\n\\nb=b+pow(1-sample,2)*0.3;\\n\\n\\n\\nr1=t1;\\ng1=t2;\\nb1=t3;\\nr2=t4;\\ng2=t5;\\nb2=t6;\\n\\nr=r1*flip + r2*(1-flip);\\ng=g1*flip + g2*(1-flip);\\nb=b1*flip + b2*(1-flip);"},{"baseVals":{"enabled":1,"r":0.2,"b":0.6},"init_eqs_eel":"","frame_eqs_eel":"t1=sin(time)*0.5+0.5;\\nt2=sin(time+2.1)*0.5+0.5;\\nt3=sin(time+4.2)*0.5+0.5;\\n\\nt4=sin(time+1.1)*0.5+0.5;\\nt5=sin(time+3.1)*0.5+0.5;\\nt6=sin(time+5.2)*0.5+0.5;","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2 +0.1;\\nyp=-yp;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2)*0.5 +0.5;\\n\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3.1 + 0.5);\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2.3)*1.75 - 1.05;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp*sinang + zp*cosang;\\nyq=yp;\\nzq=xp*cosang - zp*sinang;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq;\\nyp=yq*cosang - zq*sinang;\\nzp=yq*sinang + zq*cosang;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=if( equal(q8,1) , (1-sample) , sample);\\na=a*a;\\n\\n\\nb=b+pow(1-sample,2)*0.3;\\n\\nr1=t1;\\ng1=t2;\\nb1=t3;\\nr2=t4;\\ng2=t5;\\nb2=t6;\\n\\nr=r1*flip + r2*(1-flip);\\ng=g1*flip + g2*(1-flip);\\nb=b1*flip + b2*(1-flip);"},{"baseVals":{"r":0.1,"b":0.7,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1=sin(time)*0.5+0.5;\\nt2=sin(time+2.1)*0.5+0.5;\\nt3=sin(time+4.2)*0.5+0.5;\\n\\nt4=sin(time+1.1)*0.5+0.5;\\nt5=sin(time+3.1)*0.5+0.5;\\nt6=sin(time+5.2)*0.5+0.5;","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2 )*0.5 +0.5;\\n\\nxq=xp;\\nsinang=sin(ang);cosang=cos(ang);\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3.1 + 0.5);\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2.3)*1.75 - 1.05;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp*sinang + zp*cosang;\\nyq=yp;\\nzq=xp*cosang - zp*sinang;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq;\\nyp=yq*cosang - zq*sinang;\\nzp=yq*sinang + zq*cosang;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=-xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=if( equal(q8,1) , (1-sample) , sample);\\na=a*a;\\n\\nb=b+pow(1-sample,2)*0.3;\\n\\n\\n\\nr1=t1;\\ng1=t2;\\nb1=t3;\\nr2=t4;\\ng2=t5;\\nb2=t6;\\n\\nr=r1*flip + r2*(1-flip);\\ng=g1*flip + g2*(1-flip);\\nb=b1*flip + b2*(1-flip);"},{"baseVals":{"r":0.2,"b":0.6,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1=sin(time)*0.5+0.5;\\nt2=sin(time+2.1)*0.5+0.5;\\nt3=sin(time+4.2)*0.5+0.5;\\n\\nt4=sin(time+1.1)*0.5+0.5;\\nt5=sin(time+3.1)*0.5+0.5;\\nt6=sin(time+5.2)*0.5+0.5;","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2 +0.1;\\nyp=-yp;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2)*0.5 +0.5;\\n\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3.1 + 0.5);\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2.3)*1.75 - 1.05;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp*sinang + zp*cosang;\\nyq=yp;\\nzq=xp*cosang - zp*sinang;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq;\\nyp=yq*cosang - zq*sinang;\\nzp=yq*sinang + zq*cosang;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=-xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=if( equal(q8,1) , (1-sample) , sample);\\na=a*a;\\n\\n\\nb=b+pow(1-sample,2)*0.3;\\n\\nr1=t1;\\ng1=t2;\\nb1=t3;\\nr2=t4;\\ng2=t5;\\nb2=t6;\\n\\nr=r1*flip + r2*(1-flip);\\ng=g1*flip + g2*(1-flip);\\nb=b1*flip + b2*(1-flip);"}],"init_eqs_eel":"","frame_eqs_eel":"movement = movement + 0.01*(bass+bass_att) + 0.001*pow(bass+1,3);\\nq1 = movement;\\nmonitor =q1;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  ret_1 = texture (sampler_main, uv).xyz;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (normalize((uv - uv_orig)) * texsize.zw);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 0.0;\\n  tmpvar_3.xyz = ret_1;\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 0.0;\\n  tmpvar_4.xyz = max (tmpvar_3, (texture (sampler_main, (uv - tmpvar_2)) * 0.9)).xyz;\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 0.0;\\n  tmpvar_5.xyz = max (tmpvar_4, (texture (sampler_main, (uv + tmpvar_2)) * 0.97)).xyz;\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 0.0;\\n  tmpvar_6.xyz = max (tmpvar_5, (texture (sampler_main, (uv + \\n    (tmpvar_2 * 2.0)\\n  )) * 0.97)).xyz;\\n  ret_1 = (max (tmpvar_6, (texture (sampler_main, \\n    (uv + (tmpvar_2 * 3.0))\\n  ) * 0.9)).xyz * 0.92);\\n  vec4 tmpvar_7;\\n  tmpvar_7.w = 1.0;\\n  tmpvar_7.xyz = ret_1;\\n  ret = tmpvar_7.xyz;\\n }","comp":" shader_body { \\n  vec2 uv_1;\\n  vec3 ret_2;\\n  uv_1 = (0.05 + (0.9 * uv));\\n  ret_2 = (abs((\\n    ((texture (sampler_blur1, uv_1).xyz * scale1) + bias1)\\n   - texture (sampler_main, uv_1).xyz)) * 6.0);\\n  ret_2 = (ret_2 * 1.333);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_2;\\n  ret = tmpvar_3.xyz;\\n }"}')},6304:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1,"decay":1,"additivewave":1,"wave_brighten":0,"wave_a":0.001,"wave_scale":0.01,"wave_smoothing":0.63,"wave_mystery":-1,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":30.965099,"warpscale":2.571729,"zoom":1.009006,"warp":0.000536,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"mv_x":12.799995,"mv_y":9.600006,"mv_l":1,"mv_g":0.91,"mv_b":0.71,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"additive":1,"rad":0.491382,"r":0,"g":1,"b":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x=.5+q4;y=.5+q5;\\na=bass_att+mid_att+treb_att;\\na=a*0.25;\\na=a*a*1.5;"},{"baseVals":{"sides":24,"rad":0.018423,"tex_zoom":0.819541,"g":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"tex_ang=0.01;\\nx=.5-q4;\\ny=.5-q5;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = 0.85 + 0.25*sin(0.437*time+1);\\nwave_g = 0.85 + 0.25*sin(0.544*time+2);\\nwave_b = 0.85 + 0.25*sin(0.751*time+3);\\nrot = rot + 0.010*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );\\ncx = cx + 0.210*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\ncy = cy + 0.210*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\\ndx = dx + 0.003*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );\\ndy = dy + 0.003*( 0.60*sin(0.284*time) + 0.40*sin(0.247*time) );\\ndecay = decay - 0.01*equal(frame%6,0);\\ndx = dx + dx_residual;\\ndy = dy + dy_residual;\\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.96+1.3);\\ndx_residual = equal(bass_thresh,2.13)*0.016*sin(time*7) + (1-equal(bass_thresh,2.13))*dx_residual;\\ndy_residual = equal(bass_thresh,2.13)*0.012*sin(time*9) + (1-equal(bass_thresh,2.13))*dy_residual;\\nwave_x = wave_x - dx_residual*7;\\nwave_y = wave_y - dy_residual*7;\\nwave_mystery = time*0.03;\\n\\nzoom = zoom + 0.005*( 0.60*sin(0.1934*time+3) + 0.40*sin(0.307*time+9) );\\nzoom = zoom + max(0,bass_att-1.1)*0.2;\\nwarp = warp + max(0,treb-1.1)*0.5;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv);\\n  ret_1 = (tmpvar_2.xyz + ((tmpvar_2.xyz - \\n    ((texture (sampler_blur2, uv).xyz * scale2) + bias2)\\n  ) * 0.6));\\n  ret_1 = (ret_1 * 0.9);\\n  ret_1 = (ret_1 + ((\\n    ((texture (sampler_noise_lq, ((\\n      (uv_orig * texsize.xy)\\n     * \\n      (texsize_noise_lq.zw * 0.4)\\n    ) + rand_frame.xy)).xyz - 0.5) / 256.0)\\n   * 12.0) * clamp (\\n    (treb_att - 1.0)\\n  , 0.0, 1.0)));\\n  vec3 tmpvar_3;\\n  tmpvar_3 = mix (ret_1, vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))), vec3(0.08, 0.08, 0.08));\\n  ret_1 = tmpvar_3;\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = tmpvar_3;\\n  ret = tmpvar_4.xyz;\\n }","comp":" shader_body { \\n  vec2 uv_1;\\n  vec3 ret_2;\\n  uv_1 = (0.05 + (0.9 * uv));\\n  ret_2 = (abs((\\n    ((texture (sampler_blur1, uv_1).xyz * scale1) + bias1)\\n   - texture (sampler_main, uv_1).xyz)) * 6.0);\\n  ret_2 = (ret_2 * 1.333);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_2;\\n  ret = tmpvar_3.xyz;\\n }"}')},3834:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1.21,"decay":0.96,"echo_zoom":0.99663,"echo_orient":1,"wave_mode":6,"wave_thick":1,"wave_brighten":0,"darken":1,"wave_a":11.94,"wave_scale":7.394711,"wave_smoothing":0.7,"warpscale":1.772,"zoomexp":4.401,"zoom":1.000678,"rot":0.003,"warp":0,"wave_r":0.49,"wave_g":0.49,"wave_b":0.49,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"t = time*2.3;\\nwave_x = wave_x + 0.350*( 0.70*sin(2.221*time) + 0.30*sin(1.821*time) );\\nwave_y = wave_y + 0.350*( 0.30*sin(1.942*time) + 0.70*sin(2.522*time) );\\nwave_r = wave_r + 0.790*( 0.60*sin(0.823*t) + 0.40*sin(0.916*t) );\\nwave_g = wave_g + 0.790*( 0.60*sin(0.900*t) + 0.40*sin(1.023*t) );\\nwave_b = wave_b + 0.790*( 0.60*sin(0.808*t) + 0.40*sin(0.949*t) );\\nrot = rot + 0.010*( 0.60*sin(0.038*time) + 0.40*sin(0.054*time) );\\ndx = dx + 0.002*( 0.60*sin(0.434*time) + 0.40*sin(0.277*time) );\\ndy = dy + 0.002*( 0.60*sin(0.384*time) + 0.40*sin(0.477*time) );","pixel_eqs_eel":"","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (vec2(1.0, 0.0) * texsize.zw);\\n  tmpvar_1.xyz = (max (max (texture (sampler_main, uv).xyz, texture (sampler_main, \\n    (uv + tmpvar_2)\\n  ).xyz), texture (sampler_main, (uv - tmpvar_2)).xyz) - 0.035);\\n  ret = tmpvar_1.xyz;\\n }","comp":" shader_body { \\n  vec2 uv_1;\\n  vec3 ret_2;\\n  uv_1 = (0.05 + (0.9 * uv));\\n  ret_2 = (abs((\\n    ((texture (sampler_blur1, uv_1).xyz * scale1) + bias1)\\n   - texture (sampler_main, uv_1).xyz)) * 6.0);\\n  ret_2 = (ret_2 * 1.333);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_2;\\n  ret = tmpvar_3.xyz;\\n }"}')},7905:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_orient":3,"wave_mode":1,"wave_thick":1,"wrap":0,"darken_center":1,"wave_a":0.3,"wave_scale":0.881,"wave_smoothing":0.5,"wave_mystery":-1,"warpscale":2.853,"zoomexp":3.6,"zoom":1.02109,"rot":-0.16,"warp":0.309,"wave_r":0.6,"wave_g":0.6,"wave_b":0.6,"wave_y":0.47,"mv_l":1.75},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.400*( 0.60*sin(0.933*time) + 0.40*sin(1.045*time) );\\nwave_g = wave_g + 0.400*( 0.60*sin(0.900*time) + 0.40*sin(0.956*time) );\\nwave_b = wave_b + 0.400*( 0.60*sin(0.910*time) + 0.40*sin(0.920*time) );\\nq8 = oldq8+if(above(bass+bass_att,1.8),q8+0.0005*pow((bass+bass_att-1),9),0);\\noldq8 = q8;\\nmonitor = q8;\\nzoom = zoom + 0.023*( 0.60*sin(0.339*q8) + 0.40*sin(0.276*q8) );\\nrot = rot + 0.030*( 0.60*sin(0.381*q8) + 0.40*sin(0.579*q8) );\\n//decay = decay - 0.02*equal(frame%40,0);\\nmv_r = wave_r;\\nmv_b = wave_b;\\nmv_g = wave_g;\\nmv_x = 1.25;\\nmv_y = 1.25;\\nmv_dx = 0.1*sin(1.1*time);\\nmv_dy = 0.1*cos(1.112*time);","pixel_eqs_eel":"rot=rot+1/(10*(rad+0.2+0.1*sin(q8)));","warp":"","comp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1 = texture (sampler_main, uv);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = (tmpvar_1.xyz * (1.0 + (\\n    (abs((fract(\\n      (tmpvar_1.xyz * 8.0)\\n    ) - 0.5)) - 0.25)\\n   * 0.4)));\\n  ret = tmpvar_2.xyz;\\n }"}')},7185:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1,"decay":0.975,"echo_orient":3,"wave_mode":2,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"darken_center":1,"wave_a":0.001,"wave_scale":0.625,"wave_smoothing":0,"modwavealphastart":0,"modwavealphaend":0,"warpanimspeed":0.01,"fshader":0.7,"zoom":1.046,"warp":0.01,"sx":0.99999,"wave_r":0.5,"wave_y":0.47,"mv_x":64,"mv_y":48,"mv_l":0,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":44,"textured":1,"rad":0.80814,"ang":0.75398,"tex_ang":1.3823,"tex_zoom":1.10462,"g":0.9,"b":0.7,"r2":1,"b2":0.8,"a2":1,"border_a":0.4},"init_eqs_eel":"","frame_eqs_eel":"x = x + 0.03*cos(time*0.69 + 2);\\ny = y + 0.02*cos(time*0.73 + 1);"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r*x*bass*1000000 + 0.400*( 0.60*sin(0.933*time) + 0.40*sin(1.045*time) );\\nwave_g = wave_g*200000*treb/x + 0.400*( 0.60*sin(0.900*time) + 0.40*sin(0.956*time) );\\nwave_b = wave_b +0.400*( 0.60*sin(0.910*time) + 0.40*sin(0.920*time) );\\nzoom = zoom + 0.023*( 0.60*sin(0.339*time) + 0.40*sin(0.276*time) );\\nq=rot/5 + 0.030*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );\\ncx = cx + 0.070*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\ncy = cy + 0.070*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\\nzoom=zoom+0.013*(0.60*sin(0.33*time)+0.40*sin(0276*time));\\nx=x+100;","pixel_eqs_eel":"zoom=zoom-max(0.001,(bass-1.2))*sin(time*1.4+rad*6);\\nzoom=zoom+0.07*sin(rad*25+time*2.5);","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (texture (sampler_main, uv).xyz - 0.005);\\n  ret = tmpvar_1.xyz;\\n }","comp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (texture (sampler_main, uv).xyz * 1.333);\\n  ret = tmpvar_1.xyz;\\n }"}')},2246:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1.14,"decay":1,"echo_zoom":1.002,"echo_orient":1,"wave_mode":6,"wave_thick":1,"wave_a":1.577,"wave_scale":1.031,"wave_smoothing":0,"modwavealphastart":0.5,"modwavealphaend":1,"warpanimspeed":32.544,"warpscale":9.738,"dx":-0.005,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"wave_x":0,"wave_y":1,"ob_size":0.005,"ob_r":0.01,"ob_a":0.6,"ib_size":0.26,"mv_x":16,"mv_y":16.8,"mv_l":0.15,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"//decay = 0.94","frame_eqs_eel":"dy = dy -0.0085;\\n//bass_effect = max(max(bass,bass_effect)-1.4,0);\\n//warp = if(above(bass_effect,0),10,0);\\nred_rand = rand(100);\\nblue_rand = rand(100);\\nwave_r = 0.01*red_rand + 0.2*sin(time*1.311);\\nwave_b = 0.01*blue_rand - 0.2*sin(time*1.46);\\nwave_g = 1-0.5*(wave_r+wave_b)+ 0.2*cos(time*0.789);","pixel_eqs_eel":"","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (texture (sampler_main, (uv + (\\n    (texture (sampler_main, (uv + texsize.zw)).xy - 0.37)\\n   * 0.03))).xyz - 0.004);\\n  ret = tmpvar_1.xyz;\\n }","comp":" shader_body { \\n  vec2 uv2_1;\\n  vec3 ret_2;\\n  uv2_1 = (uv + (vec2(1.0, 0.0) * texsize.zw));\\n  float tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(-1.0, 0.0) * texsize.zw));\\n  float tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(0.0, 1.0) * texsize.zw));\\n  float tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(0.0, -1.0) * texsize.zw));\\n  vec3 tmpvar_6;\\n  tmpvar_6.z = 0.14;\\n  tmpvar_6.x = (tmpvar_3 - tmpvar_4);\\n  tmpvar_6.y = (tmpvar_5 - ((\\n    (texture (sampler_main, uv2_1).xyz + (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4))\\n   + \\n    (((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2) * 0.15)\\n  ) + (\\n    ((texture (sampler_blur3, uv2_1).xyz * scale3) + bias3)\\n   * 0.1)).x);\\n  ret_2 = (0.5 + (0.5 * normalize(tmpvar_6)));\\n  vec2 x_7;\\n  x_7 = (ret_2.xy - 0.5);\\n  ret_2 = (ret_2 * clamp ((\\n    sqrt(dot (x_7, x_7))\\n   * 5.0), 0.0, 1.0));\\n  ret_2 = ret_2.xxy;\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = ret_2;\\n  ret = tmpvar_8.xyz;\\n }"}')},6246:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":4,"gammaadj":1.78,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":1,"darken":1,"wave_a":0.001,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0.11,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":4.95,"mv_r":0,"mv_a":0,"b1x":0.7,"b1ed":0},"shapes":[{"baseVals":{"textured":1,"rad":2.66718,"tex_zoom":0.45112,"g":1,"a":0.15,"g2":0,"a2":0.05,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"x":0.35,"y":0,"rad":0.09959,"tex_zoom":0.42497,"r":0,"b":1,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"y":0,"rad":0.10201,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"x":0.65,"y":0,"g":1,"b":1,"r2":1,"g2":0,"b2":1,"a2":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"spectrum":1,"thick":1,"additive":1,"r":0,"g":0,"b":0,"a":0.1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//q1 = state;\\n//q2 = basstime;\\n\\nq1 = 0;\\nspeed = bass_att*0.3;\\nv = sample*10000 + value2*bass*0.1;\\n\\n//state 0 elipse\\nxs = xs + sin(v*0.1 + sin(v)*0.1)*speed*atan(v*1.51);\\nys = ys + sin(v*0.1 + cos(v)*0.1)*speed*atan(v);\\n\\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*1 + ys);\\ny = 0.5 + 0.5*sin(ys*0.1)*cos(time*1.1 + xs);\\n\\n\\nr = 0.5 + 0.5*sin(q1*0.22);\\ng = 0.5 + 0.5*sin(q1*0.307) + x;\\n//b = 0.4 + 0.4*sin(time*0.959);\\n\\n\\nxs = if(above(xs,1000),0 ,xs);\\nys = if(above(ys,1000),0 ,ys);"},{"baseVals":{"spectrum":1,"usedots":1,"thick":1,"additive":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"thick":1,"additive":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"thick":1,"additive":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//apply zoom burst on beat\\nflag = above(q3,2);\\n//state zero is ready state\\nstate = state + flag*equal(state,0);\\n\\n//upwards flight\\nyval = if(equal(state,0),0, yval);\\nyval = yval + 0.00004*equal(state,1);\\nymax = if(equal(state,0),int(rand(100))*0.004,ymax);\\n\\n//hit apogee\\nstate = if(above(yval,0.5+ymax),2,state);\\n\\n//reset variable\\nyval = if(equal(state,0),0, yval);\\nburst = if(equal(state,0),0.001,burst);\\nalphax = if(equal(state,0),1,alphax);\\nxdriftinc = if(equal(state,0),0,xdriftinc);\\n\\nburstspeed = if(equal(state,0),int(rand(10)),burstspeed);\\nxdrift = if(equal(state,0),int(rand(20)),xdrift);\\n//to get the numbers small enough have to use constants\\nxdriftinc = xdriftinc\\n+ equal(xdrift,0)*equal(state,1)*0.00002\\n+ equal(xdrift,1)*equal(state,1)*0.000018\\n+ equal(xdrift,2)*equal(state,1)*0.000016\\n+ equal(xdrift,3)*equal(state,1)*0.000014\\n+ equal(xdrift,4)*equal(state,1)*0.000012\\n+ equal(xdrift,5)*equal(state,1)*0.00001\\n+ equal(xdrift,6)*equal(state,1)*0.000008\\n+ equal(xdrift,7)*equal(state,1)*0.000006\\n+ equal(xdrift,8)*equal(state,1)*0.000004\\n+ equal(xdrift,9)*equal(state,1)*0.000002\\n+ equal(xdrift,11)*equal(state,1)*-0.000002\\n+ equal(xdrift,12)*equal(state,1)*-0.000004\\n+ equal(xdrift,13)*equal(state,1)*-0.000006\\n+ equal(xdrift,14)*equal(state,1)*-0.000008\\n+ equal(xdrift,15)*equal(state,1)*-0.00001\\n+ equal(xdrift,16)*equal(state,1)*-0.000012\\n+ equal(xdrift,17)*equal(state,1)*-0.000014\\n+ equal(xdrift,18)*equal(state,1)*-0.000016\\n+ equal(xdrift,19)*equal(state,1)*-0.000018;\\n\\nburst = burst\\n+ equal(burstspeed,0)*equal(state,2)*0.000024\\n+ equal(burstspeed,1)*equal(state,2)*0.000022\\n+ equal(burstspeed,2)*equal(state,2)*0.00002\\n+ equal(burstspeed,3)*equal(state,2)*0.000018\\n+ equal(burstspeed,4)*equal(state,2)*0.000016\\n+ equal(burstspeed,5)*equal(state,2)*0.000014\\n+ equal(burstspeed,6)*equal(state,2)*0.000012\\n+ equal(burstspeed,7)*equal(state,2)*0.00001\\n+ equal(burstspeed,8)*equal(state,2)*0.000008\\n+ equal(burstspeed,9)*equal(state,2)*0.000008;\\n\\nalphax = alphax - 0.00004*equal(state,2);\\nstate = if(below(alphax,0),0,state);\\n\\n\\ns = sample*3.14*100;\\nss = sample*6.28*1000;\\n\\n//draw torus\\nxs = (burst + 0.0001*cos(s))*cos(ss);\\nys = (burst + 0.0001*cos(s))*sin(ss);\\nzs = 0.1*burst*sin(s);\\n\\n\\n//rotate x axis\\nangle = sin(-q1*0.035)*6.28;\\nyx = ys*cos(angle) - zs*sin(angle);\\nzx = ys*sin(angle) + zs*cos(angle);\\nxx = xs;\\n\\n//rotate y axis\\nangle2 = sin(-q1*0.03)*6.28;\\nxd = xx*cos(angle2) - zx*sin(angle2);\\nzd = xx*sin(angle2) + zx*cos(angle2);\\nyd = yx;\\n\\n//rotaye z axis\\nangle3 = sin(-q1*0.022)*6.28;\\nxn = xd*cos(angle3) - yd*sin(angle3);\\nyn = xd*sin(angle3) + yd*cos(angle3);\\n\\nzd = zd + 2;\\n\\nx = xn*zd*0.3 + 0.5;\\ny = yn*zd*0.3*1.2;\\n\\n\\nx = x + xdriftinc;\\ny = y + sin(yval*1.5) - 0.18;\\n\\n\\nr = 0.5 + 0.5*sin(q1*1.3 + x + x);\\ng = 0.5 + 0.5*sin(q1*1.1 + x + y);\\nb = 0.5 + 0.5*sin(q1*1.66 + y + y);"}],"init_eqs_eel":"p1 = int(rand(16));\\np2 = p1;","frame_eqs_eel":"dec_med = pow (0.96, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .4+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %8;\\nindex2 = (index2 + is_beat*bnot(index))%4;\\nindex3 = (index3 + is_beat*bnot(index)*bnot(index2))%3;\\n\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass + mid + treb;\\n\\n//k1 =  is_beat*bnot(index)*bnot(index2);\\n\\nk1 =  is_beat*equal(index,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.14159265359/4;\\n\\nq27 = 8-index;\\nq28 = sin(time/7);\\nq29 = index4;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\nmv_a = .5 * q1;\\n\\nmovez = movez + .01 * 30/fps ;\\nq29 = movez;\\n\\nmovex = movex + .003 * 30/fps *q2;\\nq30 = movex;\\n\\nq31 = sqr(sin(time/17));\\nq32 = sqr(cos(time/17));\\n\\nzoom = 1.0;\\nrot = .0;\\ndx = .0;\\nwarp = .2;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 zz_1;\\n  mat2 tmpvar_2;\\n  tmpvar_2[uint(0)] = _qa.xy;\\n  tmpvar_2[1u] = _qa.zw;\\n  zz_1 = (((\\n    (uv - vec2(0.5, 0.5))\\n   * texsize.xy) * 0.01) * tmpvar_2);\\n  zz_1 = -(zz_1.yx);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ((texture (sampler_main, (uv + \\n    (((clamp (\\n      (sin(zz_1.yx) / cos(zz_1.yx))\\n    , vec2(-8.0, -8.0), vec2(8.0, 8.0)) * cos(\\n      (4.0 * zz_1)\\n    )) * texsize.zw) * 16.0)\\n  )).xyz * 0.99) - 0.01);\\n  ret = tmpvar_3.xyz;\\n }","comp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1.x = cos((13.5 * uv.y));\\n  tmpvar_1.y = sin((19.5 * uv.x));\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = max (texture (sampler_main, uv).xyz, texture (sampler_main, (uv + (0.06 * tmpvar_1))).xyz);\\n  ret = tmpvar_2.xyz;\\n }"}')},1886:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken_center":1,"darken":1,"wave_a":0.001,"wave_scale":1.157,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.005,"ob_a":0.8,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":14,"num_inst":512,"rad":0.1026,"tex_ang":0.62832,"r2":1,"g2":0,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\nrad=(bass+treb)/100;\\na=(above(bass+mid+treb,.8));\\nr=int(rand(100))/100;\\ng=int(rand(100))/100;\\nb=int(rand(100))/100;\\nr2=int(rand(100))/100;\\ng2=int(rand(100))/100;\\nb2=int(rand(100))/100;\\nr_border=int(rand(100))/100;\\ng_border=int(rand(100))/100;\\nb_border=int(rand(100))/100;"},{"baseVals":{"enabled":1,"sides":23,"num_inst":1024,"rad":0.10262,"ang":0.43982,"tex_ang":0.62832,"a":0.5,"r2":1,"g2":0,"a2":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\nrad=(bass+treb)/75;\\na=(above(bass+mid+treb,.1));\\nr=int(rand(100))/100;\\ng=int(rand(100))/100;\\nb=int(rand(100))/100;\\nr2=int(rand(100))/100;\\ng2=int(rand(100))/100;\\nb2=int(rand(100))/100;\\nr_border=int(rand(100))/100;\\ng_border=int(rand(100))/100;\\nb_border=int(rand(100))/100;"},{"baseVals":{"sides":14,"additive":1,"num_inst":256,"rad":0.20269,"tex_ang":0.62832,"r2":1,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));"},{"baseVals":{"sides":14,"additive":1,"num_inst":256,"rad":0.22389,"tex_ang":0.62832,"r2":1,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));"}],"waves":[{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));"}],"init_eqs_eel":"speed_=1;","frame_eqs_eel":"dec_med = pow (0.9, 30/fps);\\ndec_slow = pow (0.96, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, 0.2+avg+peak) * above (time, t0+.1);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %12;\\nindex2 = (index2 + is_beat*bnot(index))%8;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq24 = is_beat;\\nvol = (bass_att + mid_att + treb_att)/2;\\nvol_ = dec_med * vol_ + (1-dec_med)* vol;\\nvol__ = dec_med * vol__ + (1-dec_med)* vol_;\\nq27 = index + 1;\\nq28 = index2 + 2;\\n\\nk1 =  is_beat*equal(index%4,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.1416/4;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\ntrig = q24 * bnot(index%8);\\nvx = vx*bnot(trig) + trig* (int(rand(100))/100-.5);\\nvy = vy*bnot(trig) + trig* (int(rand(100))/100-.5);\\nvz = vz*bnot(trig) + trig* (int(rand(100))/100-.5);\\n\\nspeed = min(vol_-vol__+.5,1);\\nspeed = max(speed,-.5);\\nspeed_ = bnot(trig)*speed_ + trig*speed;\\nspg = dec_med*spg + (1-dec_med)*speed_;\\nmovz = movz + 1/fps*(speed_+0*vol_/6);\\nq9 = movz;\\nq12 = min(q22,6)*2;\\n\\n//puls = puls*dec_med + (1-dec_med)*q22;\\n\\nq13 = 2* sin(movz/3-time/11);\\n\\ntrig = bnot(index%4) * q24;\\ndir = bnot(trig)*dir + trig*(int(rand(10))-5);\\ntrel = trel + .1/fps*dir;\\nq5 = cos(trel-movz);\\nq6 = sin(trel/2-movz);\\nq7 = -q6;\\nq8 = q5;\\n\\nang0 = ang0*dec_med + vz*(1-dec_med);\\nq17 = ang0*2; \\nq30 = .2*sin(time/8);\\n\\nq31 = .5 + .5*sin(time/3.3);\\n\\nzoom = 1;\\nrot = .0;\\ndx = .00;\\nmonitor = q28;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 uv_1;\\n  vec2 uv6_2;\\n  uv_1 = (uv + ((0.004 * \\n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\\n  ).xy * vec2(0.0, 1.0)));\\n  uv6_2 = (0.4 * sin((\\n    (((uv - 0.5) * aspect.xy) * 18.0)\\n   * rand_frame.xy)));\\n  vec3 tmpvar_3;\\n  tmpvar_3.x = (treb * 0.5);\\n  tmpvar_3.y = (bass * 0.5);\\n  tmpvar_3.z = (mid * 0.5);\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = (((\\n    (texture (sampler_main, uv_1).xyz - (((texture (sampler_blur2, \\n      fract(uv_1)\\n    ).xyz * scale2) + bias2) * 0.03))\\n   + \\n    (0.15 * (vec3((0.051 / sqrt(\\n      dot (uv6_2, uv6_2)\\n    ))) * tmpvar_3))\\n  ) * 0.99) - 0.02);\\n  ret = tmpvar_4.xyz;\\n }","comp":"float xlat_mutabledist;\\nfloat xlat_mutabledist2;\\nfloat xlat_mutableinten;\\nfloat xlat_mutablem;\\nfloat xlat_mutablemask;\\nvec3 xlat_mutableret1;\\nvec2 xlat_mutableuv2;\\n shader_body { \\n  vec2 uv_1;\\n  uv_1 = (uv - 0.5);\\n  uv_1 = (uv_1 * aspect.xy);\\n  mat2 tmpvar_2;\\n  tmpvar_2[uint(0)] = _qa.xy;\\n  tmpvar_2[1u] = _qa.zw;\\n  uv_1 = (uv_1 * tmpvar_2);\\n  int tmpvar_3;\\n  tmpvar_3 = int(q10);\\n  xlat_mutablem = (1.0 - float(tmpvar_3));\\n  float tmpvar_4;\\n  tmpvar_4 = -(q10);\\n  xlat_mutabledist = (1.0 - fract((0.25 - \\n    (fract(tmpvar_4) / 4.0)\\n  )));\\n  xlat_mutableuv2 = ((uv_1 * (float(mod (xlat_mutablem, 2.0)))) + (uv_1.yx * (float(mod (\\n    (xlat_mutablem + 1.0)\\n  , 2.0)))));\\n  xlat_mutabledist2 = (xlat_mutabledist * xlat_mutabledist);\\n  xlat_mutableinten = ((3.0 * sqrt(xlat_mutabledist)) * (1.0 - (xlat_mutabledist * xlat_mutabledist)));\\n  xlat_mutableuv2 = (((\\n    (4.0 * xlat_mutableuv2)\\n   * xlat_mutabledist) + (0.35 * xlat_mutablem)) + (q9 * xlat_mutabledist2));\\n  xlat_mutableret1 = (texture (sampler_main, xlat_mutableuv2).xyz * xlat_mutableinten);\\n  xlat_mutablem = (2.0 - float(tmpvar_3));\\n  xlat_mutabledist = (1.0 - fract((0.5 - \\n    (fract(tmpvar_4) / 4.0)\\n  )));\\n  xlat_mutableuv2 = ((uv_1 * (float(mod (xlat_mutablem, 2.0)))) + (uv_1.yx * (float(mod (\\n    (xlat_mutablem + 1.0)\\n  , 2.0)))));\\n  xlat_mutabledist2 = (xlat_mutabledist * xlat_mutabledist);\\n  xlat_mutableinten = ((3.0 * sqrt(xlat_mutabledist)) * (1.0 - (xlat_mutabledist * xlat_mutabledist)));\\n  xlat_mutableuv2 = (((\\n    (4.0 * xlat_mutableuv2)\\n   * xlat_mutabledist) + (0.35 * xlat_mutablem)) + (q9 * xlat_mutabledist2));\\n  vec4 tmpvar_5;\\n  tmpvar_5 = texture (sampler_main, xlat_mutableuv2);\\n  xlat_mutablemask = (1.0 - ((0.9 * \\n    clamp ((8.0 * xlat_mutabledist), 0.0, 1.0)\\n  ) * clamp (\\n    (64.0 * tmpvar_5.xyz)\\n  , 0.0, 1.0))).x;\\n  xlat_mutableret1 = ((xlat_mutableret1 * xlat_mutablemask) + (tmpvar_5.xyz * xlat_mutableinten));\\n  xlat_mutablem = (3.0 - float(tmpvar_3));\\n  xlat_mutabledist = (1.0 - fract((0.75 - \\n    (fract(tmpvar_4) / 4.0)\\n  )));\\n  xlat_mutableuv2 = ((uv_1 * (float(mod (xlat_mutablem, 2.0)))) + (uv_1.yx * (float(mod (\\n    (xlat_mutablem + 1.0)\\n  , 2.0)))));\\n  xlat_mutabledist2 = (xlat_mutabledist * xlat_mutabledist);\\n  xlat_mutableinten = ((3.0 * sqrt(xlat_mutabledist)) * (1.0 - (xlat_mutabledist * xlat_mutabledist)));\\n  xlat_mutableuv2 = (((\\n    (4.0 * xlat_mutableuv2)\\n   * xlat_mutabledist) + (0.35 * xlat_mutablem)) + (q9 * xlat_mutabledist2));\\n  vec4 tmpvar_6;\\n  tmpvar_6 = texture (sampler_main, xlat_mutableuv2);\\n  xlat_mutablemask = (1.0 - ((0.9 * \\n    clamp ((8.0 * xlat_mutabledist), 0.0, 1.0)\\n  ) * clamp (\\n    (64.0 * tmpvar_6.xyz)\\n  , 0.0, 1.0))).x;\\n  xlat_mutableret1 = ((xlat_mutableret1 * xlat_mutablemask) + (tmpvar_6.xyz * xlat_mutableinten));\\n  xlat_mutablem = (4.0 - float(tmpvar_3));\\n  xlat_mutabledist = (1.0 - fract((1.0 - \\n    (fract(tmpvar_4) / 4.0)\\n  )));\\n  xlat_mutableuv2 = ((uv_1 * (float(mod (xlat_mutablem, 2.0)))) + (uv_1.yx * (float(mod (\\n    (xlat_mutablem + 1.0)\\n  , 2.0)))));\\n  xlat_mutabledist2 = (xlat_mutabledist * xlat_mutabledist);\\n  xlat_mutableinten = ((3.0 * sqrt(xlat_mutabledist)) * (1.0 - (xlat_mutabledist * xlat_mutabledist)));\\n  xlat_mutableuv2 = (((\\n    (4.0 * xlat_mutableuv2)\\n   * xlat_mutabledist) + (0.35 * xlat_mutablem)) + (q9 * xlat_mutabledist2));\\n  vec4 tmpvar_7;\\n  tmpvar_7 = texture (sampler_main, xlat_mutableuv2);\\n  xlat_mutablemask = (1.0 - ((0.9 * \\n    clamp ((8.0 * xlat_mutabledist), 0.0, 1.0)\\n  ) * clamp (\\n    (64.0 * tmpvar_7.xyz)\\n  , 0.0, 1.0))).x;\\n  xlat_mutableret1 = ((xlat_mutableret1 * xlat_mutablemask) + (tmpvar_7.xyz * xlat_mutableinten));\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = (1.8 * xlat_mutableret1);\\n  ret = tmpvar_8.xyz;\\n }"}')},3540:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":2,"gammaadj":2.75,"decay":1,"echo_zoom":1.01,"echo_orient":2,"wave_mode":4,"wave_thick":1,"wrap":0,"brighten":1,"darken":1,"wave_a":0.001,"wave_scale":0.007,"wave_smoothing":0.5,"wave_mystery":-0.4,"modwavealphastart":0.5,"modwavealphaend":1,"zoom":0.9999,"cy":0.86,"dx":0.00001,"dy":0.00001,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0,"ob_r":0.04,"ob_g":0.04,"ob_b":0.04,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":10,"num_inst":300,"rad":0.01,"tex_zoom":0.29701,"g":1,"b":1,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"i=instance;     sa=i/num_inst;\\n\\nc=below(sa,.5);\\n\\nx3=if(i%2,-.05,.05)+.12*sin(533*sa+.2*time);\\ny3=if(c,-.05,.05)+.05*sin(876*sa+.14*time);\\n\\nz3a=(100*sa)-q10;\\nz3b =(-50+100*sa)+q10;\\nz3=if(c,z3a,z3b);\\n\\n\\nd=0;     zoom=20;\\n\\n\\nl = sqrt(x3*x3 + y3*y3);\\nw = atan2(x3,y3);\\nd = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));\\np = tan(asin(1) + atan2(d+z3,l));\\n\\nx1 = zoom*sin(w)*p;\\ny1 = zoom*cos(w)*p;\\n\\nx = 0.5 + x1/q6;\\ny = 0.5 + y1;\\n\\nrad *= .1*zoom/d;\\n"},{"baseVals":{"enabled":1,"sides":10,"num_inst":100,"x":0.2,"rad":0.12521,"tex_zoom":1.8529,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_r":0,"border_g":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"sample=instance/num_inst;\\n\\np=0;\\n\\nz=(.15+.05*sin(.16*time))*(1+4*p)*(1+.4*sin(time+10*p));\\n\\nx1= z* (.3*sin(.5*q1)/(.2+p) + .3*sin(6*p+time));\\ny1= z* ( .3*sin(.5*q2)/(.2+p) + .3*sin(6*p-time));\\n\\n\\n///// star\\n\\np0=3;   p1=p0*sample;   p2=p1%p0;   p3=2*3.14/p0;\\n\\nx=p2-p1;      y=0;\\n\\nt =  20*sin(.02*time+.1*q1+.1*q2);\\n\\nmx=x*sin(p2*p3+t)+y*cos(p2*p3+t);\\nmy=y*sin(p2*p3+t)-x*cos(p2*p3+t);\\n\\nd=sqrt(mx*mx+my*my);\\nrad=rad*(1-.6*d);\\n\\nzoom=.8*z;\\nx=.5+(x1+zoom*mx)/q6;    y=.5+y1 + zoom*my;\\n\\nrad=rad*zoom*sin(3*3.14*sample);"},{"baseVals":{"enabled":1,"sides":40,"textured":1,"rad":2.03064,"tex_zoom":1.8717,"g":1,"b":1,"r2":1,"b2":1,"a2":0.7,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"p=0;\\n\\nz=(.15+.05*sin(.16*time))*(1+4*p)*(1+.4*sin(time+10*p));\\n\\nx1= z* (.3*sin(.5*q1)/(.2+p) + .3*sin(6*p+time));\\ny1= z* ( .3*sin(.5*q2)/(.2+p) + .3*sin(6*p-time));\\n\\nx =.5 + x1/q6;      y =.5 + y1;\\n\\nrad*=z;"},{"baseVals":{"enabled":1,"sides":6,"num_inst":1020,"x":0.38,"y":0.28,"rad":0.49923,"ang":1.57079,"tex_zoom":0.46942,"g":1,"b":1,"r2":1,"b2":1,"a2":1},"init_eqs_eel":"","frame_eqs_eel":"i=instance;   sa=i/num_inst;\\n\\nn1=34;     n2=30;      p=((i/n2)%n1)/n1;\\n\\nt = n1*6.28*sa +  20*sin(.02*time+.1*q1+.1*q2);\\n\\nz=(.15+.05*sin(.16*time))*(1+5*p)*(1+.4*sin(time+10*p));\\n\\nx1= z* (cos(t)*(1-.3*c) + .3*sin(.5*q1)/(.2+p) + .3*sin(7*p+time));\\ny1= z* (sin(t)*(1-.3*c) + .3*sin(.5*q2)/(.2+p) + .3*sin(7*p-time));\\n\\nx =.5 + x1/q6;      y =.5 + y1;\\n\\nrad *= z*(1-.92*c);       ang=3.14/4-t;\\n\\nr=.3*p*(1+.2*sin(i+i*i))+5*c;     g=5*c;     b=5*c;\\nr2=.5*r;                          g2=.5*g;   b2=.5*b;"}],"waves":[{"baseVals":{"enabled":1,"usedots":1,"scaling":100,"smoothing":0.7,"a":0.04},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//// stars\\n\\nq10=123*sample;\\n\\nx = -.5+sample;\\ny = -.5+abs(sin(q10));\\n\\nt=.02*time;\\nmx = x*cos(t)+y*sin(t);\\nmy = y*cos(t)-x*sin(t);\\n\\n///random factor\\np1=.1*sin(630*sample);\\np2=.1*sin(530*sample);\\n\\nx= .5+p1+mx;\\ny= .5+p2+my;"},{"baseVals":{"spectrum":1,"usedots":1,"scaling":67.1652,"smoothing":0.7,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"usedots":1,"b":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"usedots":1,"r":0.7,"g":0.7,"a":0.6,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"decay=.6;\\nq6=aspecty;\\n\\n//// flexi\'s beat counter\\nbt1 = bt1*0.95 + sqr(bass*4)*20/fps;\\nbt2 = bt2 + bt1*0.005;\\nbt = bt2 *0.01;\\ntt1 = tt1*0.95 + sqr(treb*4)*20/fps;\\ntt2 = tt2 + tt1*0.005;\\ntt = tt2 *0.01;\\n\\nq1=bt;     q2=tt;\\n\\n\\n\\nt10=t10+2/fps;\\nt10=t10*above(50,t10);\\nq10=t10;","pixel_eqs_eel":"","warp":"","comp":""}')},985:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":3,"gammaadj":1,"decay":0.94,"echo_zoom":1.007,"echo_orient":3,"wrap":0,"brighten":1,"darken":1,"wave_a":0.001,"wave_scale":0.01,"warp":0.01,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0.005,"ob_a":1,"ib_size":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":50,"num_inst":480,"rad":0.01,"tex_zoom":0.52373,"r":0.7,"g":0.5,"a":0.44,"g2":0,"border_a":0.04},"init_eqs_eel":"","frame_eqs_eel":"sample=instance/num_inst;\\nb=sin(33*sample+time);\\n\\nrad=.1*rad*sample/(p*p*.39);\\n\\n\\nq11=20*sample;\\n\\nmy_x= cos(q11);\\nmy_y= sin(q11);\\nmy_z= -1+2*sample;\\n\\n\\n/////// rotations\\n\\nd = 5;\\nzoom = 1;\\n\\nw3 = q1;\\nw2 = q2;\\nw1 = q3;\\n\\nx1 = cos(w1)*my_x + sin(w1)*my_y;\\ny1 = -sin(w1)*my_x + cos(w1)*my_y;\\nz1 = my_z;\\n\\nx2 = cos(w2)*x1 + sin(w2)*z1;\\nz2 = -sin(w2)*x1 + cos(w2)*z1;\\ny2 = y1;\\n\\ny3 = cos(w3)*y2 + sin(w3)*z2;\\nz3 = -sin(w3)*y2 + cos(w3)*z2;\\nx3 = x2;\\n\\nl = sqrt(x3*x3 + y3*y3);\\nw = atan2(x3,y3);\\nd = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));\\np = tan(asin(1) + atan2(d+z3,l));\\n\\nmy_x = zoom*sin(w)*p;\\nmy_y = zoom*cos(w)*p;\\n\\nx = 0.5 + my_x;\\ny = 0.5 + my_y;\\n"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"r":0.8,"g":0.8,"a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"scaling":0.20929,"smoothing":0,"r":0.8,"g":0.8,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"r":0.8,"g":0.7,"a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"warp=0;\\nwave_a=0;\\nzoom=1;\\n\\nbt=bt+bass/fps;\\nq1=.5*bt;\\ntt=tt+treb/fps;\\nq2=tt;\\nmt=mt+mid/fps;\\nq3=mt;","pixel_eqs_eel":"","warp":"","comp":""}')},4543:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":2,"gammaadj":1.84,"decay":1,"echo_zoom":1.01,"echo_orient":2,"wave_mode":5,"wave_thick":1,"brighten":1,"wave_a":0.001,"wave_scale":0.007,"wave_smoothing":0.5,"wave_mystery":-0.4,"modwavealphastart":0.5,"modwavealphaend":1,"zoom":0.9999,"cy":0.86,"dx":0.00001,"dy":0.00001,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0,"ob_r":1,"ob_g":1,"ob_b":1,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"num_inst":25,"y":0.09,"rad":2.99365,"tex_ang":6.28319,"tex_zoom":15.74015,"r":0,"a":0.4,"g2":0,"b2":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"y=-1.2+.2*log(1+instance);"},{"baseVals":{"sides":6,"num_inst":324,"x":0.2,"rad":10.62951,"ang":1.5708,"tex_ang":4.08407,"tex_zoom":2.08797,"g":1,"b":1,"a":0,"r2":1,"b2":1,"border_a":0.2,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":3,"num_inst":1014,"rad":0.21428,"ang":1.5708,"tex_zoom":3.75605,"r":0,"g2":0,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"i=instance;   sa=i/1014;    sample=((i/6)%169)/169;\\n\\nc=below(sample,.5);\\n\\nmy_x=if((169*sample)%2,-.05,.05)+.12*sin(633*sample+.2*time);\\n\\nmy_y=if(c,-.035,.035)+.05*sin(853*sample+.14*time);\\n\\nmy_z1=(100*sample)-q10;\\nmy_z1=if(above(0,my_z1),my_z1+50,my_z1);\\nmy_z2=(-50+100*sample)+q10;\\nmy_z2=if(above(my_z2,50),my_z2-50,my_z2);\\nmy_z=if(c,my_z1,my_z2);\\n\\n\\n//// rotations\\n\\nd = 0; \\nzoom = 20;\\n\\nw1 = 0;\\nw2 = 0;\\nw3 = 0;\\n\\nx1 = cos(w1)*my_x + sin(w1)*my_y;\\ny1 = -sin(w1)*my_x + cos(w1)*my_y;\\nz1 = my_z;\\n\\nx2 = cos(w2)*x1 + sin(w2)*z1;\\nz2 = -sin(w2)*x1 + cos(w2)*z1;\\ny2 = y1;\\n\\ny3 = cos(w3)*y2 + sin(w3)*z2;\\nz3 = -sin(w3)*y2 + cos(w3)*z2;\\nx3 = x2;\\n\\nl = sqrt(x3*x3 + y3*y3);\\nw = atan2(x3,y3);\\nd = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));\\np = tan(asin(1) + atan2(d+z3,l));\\n\\nmy_x = zoom*sin(w)*p;\\nmy_y = zoom*cos(w)*p;\\n\\nx = 0.5 + my_x/q6;\\ny = 0.5 + my_y;\\n\\n\\n\\n\\n\\n\\nt = 169*6.28*sa + 2*d;     /// 169 cubes made of 6 triangles each\\nz1=.025;\\nx2=z1*sin(t)/d;      y2=z1*cos(t)/d;\\n\\nx=x+x2/q6;       y=y+y2;\\n\\nrad *= 10*z1/d;\\nang = 3.14/4 + t ; \\n\\n\\nt1=2/d; \\n\\nr=t1*(.05+.4*(i/2)%3);           r2=r;\\ng=r;    g2=g;\\nb=r;    b2=b;\\n"},{"baseVals":{"enabled":1,"sides":3,"num_inst":1014,"x":0.38,"y":0.28,"rad":2.1341,"ang":0.75398,"tex_zoom":0.69891,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"i=instance;   sa=i/1014;\\n\\nt1=((i/6)%169)/169;\\nx1=.5*t1*sin(16*t1);\\ny1=.5*t1*cos(16*t1);\\n\\nt = 169*6.28*sa + 16*t1 + .5*sa + 3*q3 +ang;\\nz=.05+.05*t1;\\nx = z*sin(t);    y = z*cos(t);     \\n\\nz1=.8+.4*sin(3*(2*t1+1*x1*y1)+.5*q3);\\nx= .5+ z1* (x+x1)/q6 ; \\ny= .5+ z1* (y+y1) ; \\n \\nx+= .3*q1;     y+= .3*q2;\\n\\nang = 3.14/4 + t - (2*t+3.14)*y%2  - 2*t*x%2 + 4*t*x%2*y%2  ;\\n\\nx=(x-int(x)-x%2)*pow(-1,int(x));\\ny=(y-int(y)-y%2)*pow(-1,int(y));\\n\\nrad *= z*z1;\\n\\nt1=.5+.4*sin(13*t1+5*q3); \\n\\nr=t1*(.05+.4*(i/2)%3);\\ng=t1*(.8+.2*sin(.24*time))*r;\\nb=t1*(.8+.2*sin(.11*time))*r;\\n\\nr2=r;     g2=g;     b2=b;\\n"}],"waves":[{"baseVals":{"enabled":1,"usedots":1,"scaling":100,"smoothing":0.7,"a":0.03},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//// stars\\n\\nq10=123*sample;\\n\\nx = -.5+sample;\\ny = -.5+abs(sin(q10));\\n\\nt=.004*time;\\nmx = x*cos(t)+y*sin(t);\\nmy = y*cos(t)-x*sin(t);\\n\\n///random factor\\np1=.1*sin(630*sample);\\np2=.1*sin(530*sample);\\n\\nx= .5+p1+mx;\\ny= .5+p2+my;"},{"baseVals":{"spectrum":1,"usedots":1,"scaling":67.1652,"smoothing":0.7,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"usedots":1,"b":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"usedots":1,"r":0.7,"g":0.7,"a":0.6,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"decay=.3; \\nq6=aspecty;\\n\\n\\n//// flexi\'s beat counter\\nbt1 = bt1*0.95 + sqr(bass*4)*20/fps;\\nbt2 = bt2 + bt1*0.005;\\nbt = bt2 *0.01;\\ntt1 = tt1*0.95 + sqr(treb*4)*20/fps;\\ntt2 = tt2 + tt1*0.005;\\ntt = tt2 *0.01;\\n\\n\\nq1=bt;\\nq2=tt;\\n\\nbtt=btt+1/fps;\\nq3=btt;\\n\\n\\n\\nt10=t10+5/fps;\\nt10=t10*above(50,t10);\\nq10=t10;","pixel_eqs_eel":"","warp":"","comp":""}')},7469:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":2,"gammaadj":1.49,"decay":1,"echo_zoom":1.01,"echo_orient":2,"wave_mode":4,"wave_thick":1,"brighten":1,"wave_a":100,"wave_scale":0.007,"wave_smoothing":0.5,"wave_mystery":-0.4,"modwavealphastart":0.5,"modwavealphaend":1,"zoom":1.0099,"cy":0.86,"dx":0.00001,"dy":0.00001,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0,"ob_r":1,"ob_g":1,"ob_b":1,"ob_a":1,"ib_size":0.002,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"sides":3,"num_inst":6,"rad":0.08244,"tex_ang":6.28319,"tex_zoom":0.97059,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"//// cube with triangles\\n\\nsample=instance/num_inst;    t = 6.28*sample + .05*time;\\n\\nx = .04*sin(t);   y = .04*cos(t);\\nx=.5 + x/q6;      y=.5 + y; \\n\\nang=3.14/4+t;\\n\\nr=.3+.35*(3.1*sample)%3;   g=.7*r;    b=.5*r;\\nr2=.8*r;                   g2=.8*g;   b2=.8*b;"},{"baseVals":{"enabled":1,"sides":6,"additive":1,"textured":1,"num_inst":66,"rad":0.14444,"tex_ang":4.08407,"tex_zoom":6.89114,"g":1,"b":1,"r2":1,"b2":1,"a2":0.1,"border_a":0.04},"init_eqs_eel":"","frame_eqs_eel":"/// circles\\n\\nsample=instance/num_inst;        n=11;      \\nt = n*6.28*sample + .5*time;    s=-int(n*sample);    w=3*3.14/4;\\n\\nr1=    bnot(s+ 0) *.16;    w1=   bnot(s+ 0) * (t);\\nr1=r1+ bnot(s+ 1) *.32;    w1=w1+bnot(s+ 1) * (t);\\nr1=r1+ bnot(s+ 2) *.28;    w1=w1+bnot(s+ 2) * (t-2*w);   \\nr1=r1+ bnot(s+ 3) *.42;    w1=w1+bnot(s+ 3) * (t+.3*w);\\nr1=r1+ bnot(s+ 4) *.46;    w1=w1+bnot(s+ 4) * (t-2*w); \\nr1=r1+ bnot(s+ 5) *.55;    w1=w1+bnot(s+ 5) * (t-2*w); \\nr1=r1+ bnot(s+ 6) *.64;    w1=w1+bnot(s+ 6) * (t-1.998*w); \\nr1=r1+ bnot(s+ 7) *.42;    w1=w1+bnot(s+ 7) * (t-.3*w);\\nr1=r1+ bnot(s+ 8) *.48;    w1=w1+bnot(s+ 8) * (t-1.33*w);\\nr1=r1+ bnot(s+ 9) *.42;    w1=w1+bnot(s+ 9) * (t-.3*w);\\nr1=r1+ bnot(s+10) *.73;    w1=w1+bnot(s+10) * (t-1.993*w);\\n\\nr1=r1*.79;\\nx = r1*sin(w1);           y = r1*cos(w1);\\nx =.5 + x/q6;             y =.5 + y; \\n\\nang=t+w;                  \\nw3=atan2(y-.5,x-.5);\\n//tex_ang= ang + (pow(-1,instance)+bnot(instance%3))*3.14/3;\\ntex_ang= ang + 3.14/3*(20*t)%6;\\ntex_zoom=7.9-7*sample;\\nr=.5+.5*sin(133*sample);  g=.5+.5*sin(401*sample);     b=.5+.5*sin(499*sample);\\nr2=r;                     g2=g;                        b2=b;"},{"baseVals":{"sides":6,"additive":1,"textured":1,"num_inst":12,"y":0.61,"rad":0.208,"tex_zoom":6.17732,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":3,"num_inst":6,"x":0.38,"y":0.28,"rad":0.08244,"ang":0.81681,"tex_zoom":1.54929,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"//// cube with triangles\\n\\nsample=instance/num_inst;    t = 6.28*sample + .05*time +  3.14/3*(.13*time)%6;\\n\\nx = .04*sin(t);   y = .04*cos(t);\\nx=.5 + x/q6;      y=.5 + y; \\n\\nang=3.14/4+t;\\n\\nr=.3+.35*(3.1*sample)%3;   g=.7*r;    b=.5*r;\\nr2=.8*r;                   g2=.8*g;   b2=.8*b;"}],"waves":[{"baseVals":{"scaling":60.80387,"smoothing":0.7,"a":0.4,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"scaling":67.1652,"smoothing":0.7,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"usedots":1,"b":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"usedots":1,"r":0.7,"g":0.7,"a":0.6,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"chng=sin(time*.5);\\ncthr=.9999;\\nmq21=if(above(chng,cthr),rand(3),mq21);\\nmq22=if(above(chng,cthr),rand(3),mq22);\\nmq23=if(above(chng,cthr),rand(3),mq23);\\nmq24=if(above(chng,cthr),rand(2),mq24);\\nmq25=if(above(chng,cthr),rand(2),mq25);\\nmq26=if(above(chng,cthr),rand(2),mq26);\\nmq27=if(above(chng,cthr),rand(1),mq27);\\nmq28=if(above(chng,cthr),rand(1),mq28);\\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\\nmq31=if(above(chng,cthr),rand(1)*.3,mq31);\\nmonitor=chng;\\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\\nq27=mq27;q28=mq28;q29=mq29;q31=mq31;\\n\\nmonitor=mq1;\\nvol=bass+treb+mid;\\natime=atime+vol;\\nq11=.4+sin(atime*.006        )*.4;\\nq12=.4+cos(atime*.00613828348)*.4;\\nq13=.4+sin(atime*.00598593455)*.4;\\nmonitor=q13;\\nwave_a=0;   warp=0;\\ndecay=.6;    zoom=1;\\n\\nq6=aspecty;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  vec3 tmpvar_2;\\n  tmpvar_2 = (texture (sampler_noise_lq, ((\\n    ((texsize.xy * texsize_noise_lq.zw).x * uv)\\n   / 2.0) + q23)) + 1.0).xyz;\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur1, uv).xyz * scale1) + bias1) - 0.3);\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = (0.3 * tmpvar_3.x);\\n  tmpvar_4.y = tmpvar_3.y;\\n  ret_1 = ((-0.4 * (\\n    ((texture (sampler_blur1, ((uv / 4.0) + (0.4 * tmpvar_4))).xyz * scale1) + bias1)\\n   - \\n    (tmpvar_2 * 0.1)\\n  )) + (texture (sampler_main, (uv + \\n    (tmpvar_3 * 0.01)\\n  .xy)).xyz + (tmpvar_2 * 0.1)));\\n  vec4 tmpvar_5;\\n  tmpvar_5 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv.xyy) * (\\n    (q27 * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\\n  if (((ret_1.x > (q21 * q13)) && (ret_1.x <= (q24 * q11)))) {\\n    ret_1.y = (ret_1.y + (tmpvar_5.x * 0.5));\\n  };\\n  if (((ret_1.y > (q22 * q11)) && (ret_1.y <= (q25 * q12)))) {\\n    ret_1.z = (ret_1.z + (tmpvar_5.y * 0.5));\\n  };\\n  if (((ret_1.z > (q23 * q12)) && (ret_1.z <= (q26 * q13)))) {\\n    ret_1.x = (ret_1.x + (tmpvar_5.z * 0.5));\\n  };\\n  float tmpvar_6;\\n  tmpvar_6 = (1.0 - ((0.01 * q28) * (q28 * rad)));\\n  ret_1 = (ret_1 * (0.98 * (tmpvar_6 * tmpvar_6)));\\n  ret_1 = (ret_1 - 0.04);\\n  vec4 tmpvar_7;\\n  tmpvar_7.w = 1.0;\\n  tmpvar_7.xyz = ret_1;\\n  ret = tmpvar_7.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 6.0);\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = dot (tmpvar_3, vec3(0.32, 0.49, 0.29));\\n  tmpvar_5.y = dot (tmpvar_4, vec3(0.32, 0.49, 0.29));\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv - (0.25 * tmpvar_5));\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = dot (tmpvar_3, vec3(0.32, 0.49, 0.29));\\n  tmpvar_7.y = dot (tmpvar_4, vec3(0.32, 0.49, 0.29));\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (uv + (0.25 * tmpvar_7));\\n  ret_1 = ((0.8 * (\\n    (texture (sampler_blur3, tmpvar_6).xyz * scale3)\\n   + bias3)) - ((texture (sampler_blur1, tmpvar_6).xyz * scale1) + bias1));\\n  ret_1 = (ret_1 + (0.6 * (\\n    (texture (sampler_blur1, uv).xyz * scale1)\\n   + bias1)));\\n  ret_1 = (ret_1 - ((\\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur1, tmpvar_8).xyz * scale1)\\n   + bias1)));\\n  ret_1 = (ret_1 + ((1.2 * texture (sampler_main, tmpvar_8).xyz) + (0.15 * \\n    ((texture (sampler_blur1, tmpvar_8).xyz * scale1) + bias1)\\n  )));\\n  ret_1 = (ret_1 + 1.0);\\n  float tmpvar_9;\\n  tmpvar_9 = dot (ret_1, vec3(0.32, 0.49, 0.29));\\n  ret_1 = vec3(tmpvar_9);\\n  vec4 tmpvar_10;\\n  tmpvar_10 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv.xyy) * (\\n    (q28 * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q31)));\\n  if (((tmpvar_9 > (q26 * q13)) && (tmpvar_9 <= (q23 * q11)))) {\\n    ret_1.z = (tmpvar_9 - (tmpvar_10.x * 0.5));\\n  };\\n  if (((tmpvar_9 > (q25 * q11)) && (tmpvar_9 <= (q22 * q12)))) {\\n    ret_1.x = (tmpvar_9 - (tmpvar_10.y * 0.5));\\n  };\\n  if (((ret_1.z > (q24 * q12)) && (ret_1.z <= (q21 * q13)))) {\\n    ret_1.y = (tmpvar_9 - (tmpvar_10.z * 0.5));\\n  };\\n  ret_1 = (mix (ret_1, (\\n    (0.75 * ret_1)\\n   * \\n    (((0.6 * (\\n      (texture (sampler_blur3, tmpvar_6).xyz * scale3)\\n     + bias3)) - (0.7 * texture (sampler_main, uv).xyz)) - (0.3 * ((texture (sampler_blur1, tmpvar_8).xyz * scale1) + bias1)))\\n  ), pow (hue_shader, \\n    (q20 * ret_1)\\n  )) * 0.9);\\n  ret_1 = (ret_1 * ret_1);\\n  vec3 tmpvar_11;\\n  tmpvar_11 = sqrt(ret_1);\\n  ret_1 = tmpvar_11;\\n  vec4 tmpvar_12;\\n  tmpvar_12.w = 1.0;\\n  tmpvar_12.xyz = tmpvar_11;\\n  ret = tmpvar_12.xyz;\\n }"}')},1644:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":0,"gammaadj":1,"decay":0.925,"echo_zoom":1.0065,"echo_orient":3,"wave_mode":2,"additivewave":1,"wave_dots":1,"wave_brighten":0,"darken":1,"wave_a":4.099998,"wave_scale":2.850136,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.999514,"warp":0.01,"wave_g":0,"wave_b":0,"ob_size":0.02,"ob_r":0.01,"ob_a":1,"ib_size":0.02,"ib_r":1,"ib_b":1,"ib_a":1,"mv_x":64,"mv_y":1.44,"mv_l":5,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"textured":1,"rad":0.38928,"tex_zoom":2.306716,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_a = 0;\\nbos = bass;\\ntos = treb;\\ncy = cx + (.0045*((cx/cx)/(bos/tos)) );\\ncx = cy + (.005*((cy/cy)/(bos/tos)) );\\nrot = (time*.18);\\ndx = sin(time*.2);\\ndy = (bass*.0009)+sin(time*.18) * 2;\\ndecay = 1;\\n\\ns=1;\\nmt=mt+pow(bass+mid,2);\\nh=sin(mt*.008)*.5+.5;\\nl=1;\\ns=1;\\ncc=(6*h);\\ncc=if(below(cc,1),0,if(below(cc,2),1,if(below(cc,3),2,if(below(cc,4),3,if(below(cc,5),4,5)))));\\nzf=(6*h)-cc;\\nzm=l;\\nzp=l*(1-s);\\nzq=l*(1-s*zf);\\nzt=l*(1-s*(1-zf));\\nrr=if(equal(cc,0),zm,if(equal(cc,1),zq,if(equal(cc,2),zp,if(equal(cc,3),zp,if(equal(cc,4),zt,zm)))));\\ngg=if(equal(cc,0),zt,if(equal(cc,1),zm,if(equal(cc,2),zm,if(equal(cc,3),zq,if(equal(cc,4),zp,zp)))));\\nbb=if(equal(cc,0),zp,if(equal(cc,1),zp,if(equal(cc,2),zt,if(equal(cc,3),zm,if(equal(cc,4),zm,zq)))));\\nrr=if(equal(s,0),l,rr);\\ngg=if(equal(s,0),l,gg);\\nbb=if(equal(s,0),l,bb);\\n\\nob_r=rr;\\nob_g=gg;\\nob_b=bb;\\nib_r=abs(rr-.25);\\nib_g=abs(gg-.25);\\nib_b=abs(bb-.25);\\n\\n\\nzoom = .905;\\nwarp = .905 *  (1-(bass*.01));","pixel_eqs_eel":"","warp":"","comp":""}')},4338:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":0,"gammaadj":1,"decay":0.925,"echo_zoom":1.0065,"echo_alpha":0.5,"echo_orient":3,"wave_mode":2,"additivewave":1,"wave_dots":1,"wave_brighten":0,"wrap":0,"wave_a":4.099998,"wave_scale":2.850136,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.999514,"warp":0.01,"wave_g":0,"wave_b":0,"ob_r":0.01,"ob_a":1,"ib_size":0.02,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.4999,"mv_g":0.4999,"mv_b":0.4999,"mv_a":0},"shapes":[{"baseVals":{"sides":100,"textured":1,"x":0.4999,"y":0.9,"rad":0.15493,"tex_zoom":0.779765,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"textured":1,"rad":0.986082,"tex_ang":3.141593,"tex_zoom":0.756684,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ang = ang + (bass*.2) + (time*.4);\\n\\nx = (sin(time)*0.090+0.5);\\ny = (sin(time/5)*0.090+0.5);"},{"baseVals":{"sides":100,"textured":1,"x":0.9,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = sin(time) * .4 + .5;\\n\\n"},{"baseVals":{"enabled":1,"sides":100,"textured":1,"rad":0.218587,"tex_zoom":4.492867,"g":1,"b":1,"r2":1,"b2":1,"a2":1},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_a = 0;\\n\\n\\n\\n//Thanks to Zylot for rainbow generator\\ncounter1 = if(equal(counter2,1),if(equal(counter1,1),0,counter1+.2),1);\\ncounter2 = if(equal(counter1,1),if(equal(counter2,1),0,counter2+.2),1);\\ncdelay1 = if(equal(cdelay2,1),1,if(equal(colorcounter%2,1),if(equal(counter1,1),2 ,0), if(equal(counter2,1),2,0)));\\ncdelay2 = if(equal(cdelay1,2),1,0);\\ncolorcounter = if(above(colorcounter,7),0,if(equal(cdelay1,1),colorcounter+1,colorcounter));\\nob_r = .5*if(equal(colorcounter,1),1, if(equal(colorcounter,2),1, if(equal(colorcounter,3),1, if(equal(colorcounter,4),sin(counter2+2.1), if(equal(colorcounter,5),0, if(equal(colorcounter,6),0,sin(counter1)))))));\\nob_g = .5*if(equal(colorcounter,1),0, if(equal(colorcounter,2),sin(counter2*.5), if(equal(colorcounter,3),sin((counter1+1.75)*.4), if(equal(colorcounter,4),1, if(equal(colorcounter,5),1, if(equal(colorcounter,6),sin(counter2+2),0))))));\\nob_b = if(equal(colorcounter,1),sin(counter1+2.1), if(equal(colorcounter,2),0, if(equal(colorcounter,3),0, if(equal(colorcounter,4),0, if(equal(colorcounter,5),sin(counter1), if(equal(colorcounter,6),1,1))))));\\n\\n\\n\\nib_r = ob_r*1.001;\\nib_g = ob_g*1.001;\\nib_b = ob_b*1.001;\\n\\n\\n\\ndecay = 0.9999;\\n\\n\\n\\n\\n\\nbasstemp= bass + bass_att + bass_thresh;\\ntrebtemp= treb + treb_att + treb_thresh;\\ntrasstemp= (max(basstemp, trebtemp));\\ntrassave= (trasstemp/3);\\n\\nbasst= max(bass + bass_att, treb + treb_att);\\ntrebb= min(basst + bass_thresh, basst + treb_thresh);\\nmidbeat= trebb/3;\\nmidtb= max(midbeat + mid, midbeat + mid_att);\\nmtb= midtb/2.25;\\n\\nbeetA= (max(treb, bass) + min(treb_att, bass_att)) /2;\\nbeetB= (max(mid, beetA) + min(mid_att, beetA*0.5)) /2;\\nbeetAB= (beetA+beetB)/2;\\nbeetC= (max(mid, treb) + min(mid_att, treb_att)) /2;\\nbeetD= (max(bass, beetC) + min(bass_att, beetC*0.5)) /2;\\nbeetCD= (beetC+beetD)/2;\\nbeet= (beetAB+beetCD) /2;\\n\\nmadbeat= (trassave+mtb+beet) /3;","pixel_eqs_eel":"rot = rot +.05 * sin(rad-(time*.1+bas))  ;\\nbas =  (bass*2.5);\\nbos = bass;\\nwarp = (bos + bass + bass) * .1;\\ncx = (cx + treb) * .5;\\n\\nq2 = q4 * (bass+0.25)  ;\\nwarp = q4-q2;\\n\\ndx = dy+.01 ;\\ndy = dx-.01 ;\\n\\nbasstemp= bass + bass_att + bass_thresh;\\ntrebtemp= treb + treb_att + treb_thresh;\\ntrasstemp= (max(basstemp, trebtemp));\\ntrassave= (trasstemp/3);\\n\\nbasst= max(bass + bass_att, treb + treb_att);\\ntrebb= min(basst + bass_thresh, basst + treb_thresh);\\nmidbeat= trebb/3;\\nmidtb= max(midbeat + mid, midbeat + mid_att);\\nmtb= midtb/2.25;\\n\\nbeetA= (max(treb, bass) + min(treb_att, bass_att)) /2;\\nbeetB= (max(mid, beetA) + min(mid_att, beetA*0.5)) /2;\\nbeetAB= (beetA+beetB)/2;\\nbeetC= (max(mid, treb) + min(mid_att, treb_att)) /2;\\nbeetD= (max(bass, beetC) + min(bass_att, beetC*0.5)) /2;\\nbeetCD= (beetC+beetD)/2;\\nbeet= (beetAB+beetCD) /2;\\n\\nmadbeat= (trassave+mtb+beet) /3;","warp":"","comp":""}')},6767:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":0,"gammaadj":1,"decay":0.925,"echo_zoom":1.0065,"echo_alpha":0.5,"echo_orient":3,"wave_mode":2,"additivewave":1,"wave_dots":1,"wave_brighten":0,"wrap":0,"wave_a":4.099998,"wave_scale":2.850136,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.999514,"warp":0.01,"wave_g":0,"wave_b":0,"ob_r":0.01,"ob_a":1,"ib_size":0.02,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.4999,"mv_g":0.4999,"mv_b":0.4999,"mv_a":0},"shapes":[{"baseVals":{"sides":100,"textured":1,"x":0.4999,"y":0.9,"rad":0.15493,"tex_zoom":0.779765,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"textured":1,"rad":0.986082,"tex_ang":3.141593,"tex_zoom":0.756684,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ang = ang + (bass*.2) + (time*.4);"},{"baseVals":{"sides":100,"textured":1,"x":0.9,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = sin(time) * .4 + .5;\\n"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_a = 0;\\n\\n\\n\\n//Thanks to Zylot for rainbow generator\\ncounter1 = if(equal(counter2,1),if(equal(counter1,1),0,counter1+.2),1);\\ncounter2 = if(equal(counter1,1),if(equal(counter2,1),0,counter2+.2),1);\\ncdelay1 = if(equal(cdelay2,1),1,if(equal(colorcounter%2,1),if(equal(counter1,1),2 ,0), if(equal(counter2,1),2,0)));\\ncdelay2 = if(equal(cdelay1,2),1,0);\\ncolorcounter = if(above(colorcounter,7),0,if(equal(cdelay1,1),colorcounter+1,colorcounter));\\nob_r = .5*if(equal(colorcounter,1),1, if(equal(colorcounter,2),1, if(equal(colorcounter,3),1, if(equal(colorcounter,4),sin(counter2+2.1), if(equal(colorcounter,5),0, if(equal(colorcounter,6),0,sin(counter1)))))));\\nob_g = .5*if(equal(colorcounter,1),0, if(equal(colorcounter,2),sin(counter2*.5), if(equal(colorcounter,3),sin((counter1+1.75)*.4), if(equal(colorcounter,4),1, if(equal(colorcounter,5),1, if(equal(colorcounter,6),sin(counter2+2),0))))));\\nob_b = if(equal(colorcounter,1),sin(counter1+2.1), if(equal(colorcounter,2),0, if(equal(colorcounter,3),0, if(equal(colorcounter,4),0, if(equal(colorcounter,5),sin(counter1), if(equal(colorcounter,6),1,1))))));\\n\\n\\n\\nib_r = ob_r*1.001;\\nib_g = ob_g*1.001;\\nib_b = ob_b*1.001;\\n\\n\\n\\ndecay = 0.9999;\\n\\n\\n\\n\\n\\nbasstemp= bass + bass_att + bass_thresh;\\ntrebtemp= treb + treb_att + treb_thresh;\\ntrasstemp= (max(basstemp, trebtemp));\\ntrassave= (trasstemp/3);\\n\\nbasst= max(bass + bass_att, treb + treb_att);\\ntrebb= min(basst + bass_thresh, basst + treb_thresh);\\nmidbeat= trebb/3;\\nmidtb= max(midbeat + mid, midbeat + mid_att);\\nmtb= midtb/2.25;\\n\\nbeetA= (max(treb, bass) + min(treb_att, bass_att)) /2;\\nbeetB= (max(mid, beetA) + min(mid_att, beetA*0.5)) /2;\\nbeetAB= (beetA+beetB)/2;\\nbeetC= (max(mid, treb) + min(mid_att, treb_att)) /2;\\nbeetD= (max(bass, beetC) + min(bass_att, beetC*0.5)) /2;\\nbeetCD= (beetC+beetD)/2;\\nbeet= (beetAB+beetCD) /2;\\n\\nmadbeat= (trassave+mtb+beet) /3;","pixel_eqs_eel":"rot = rot +.05 * sin(rad-(time*.1+bas))  ;\\nbas =  (bass*2.5);\\nbos = bass;\\nwarp = (bos + bass + bass) * .1;\\ncx = (cx + treb) * .5;\\n\\ndx = dy+.01 ;\\ndy = dx-.01 ;\\n\\nbasstemp= bass + bass_att + bass_thresh;\\ntrebtemp= treb + treb_att + treb_thresh;\\ntrasstemp= (max(basstemp, trebtemp));\\ntrassave= (trasstemp/3);\\n\\nbasst= max(bass + bass_att, treb + treb_att);\\ntrebb= min(basst + bass_thresh, basst + treb_thresh);\\nmidbeat= trebb/3;\\nmidtb= max(midbeat + mid, midbeat + mid_att);\\nmtb= midtb/2.25;\\n\\nbeetA= (max(treb, bass) + min(treb_att, bass_att)) /2;\\nbeetB= (max(mid, beetA) + min(mid_att, beetA*0.5)) /2;\\nbeetAB= (beetA+beetB)/2;\\nbeetC= (max(mid, treb) + min(mid_att, treb_att)) /2;\\nbeetD= (max(bass, beetC) + min(bass_att, beetC*0.5)) /2;\\nbeetCD= (beetC+beetD)/2;\\nbeet= (beetAB+beetCD) /2;\\n\\nmadbeat= (trassave+mtb+beet) /3;","warp":"","comp":""}')},1123:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":3,"gammaadj":1.35,"decay":0.95,"echo_zoom":0.999608,"echo_alpha":0.5,"echo_orient":1,"nechowrap_x":0,"nechowrap_y":0,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"nwrapmode_x":1,"nwrapmode_y":1,"darken":1,"wave_a":4.099998,"wave_scale":1.285751,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.999514,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"bdrawback":0,"x_wrap_mode":0,"y_wrap_mode":0,"textured":1,"tex_capture":1,"tex_cx":0.5,"tex_cy":0.5,"y":1.8},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"bdrawback":0,"x_wrap_mode":0,"y_wrap_mode":0,"textured":1,"tex_capture":1,"tex_cx":0.5,"tex_cy":0.5,"y":1.8},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"bdrawback":0,"x_wrap_mode":0,"y_wrap_mode":0,"textured":1,"tex_capture":1,"tex_cx":0.5,"tex_cy":0.5,"y":1.8},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"bdrawback":0,"x_wrap_mode":0,"y_wrap_mode":0,"tex_capture":1,"tex_cx":0.5,"tex_cy":0.5,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"spectrum":1,"thick":1,"bdrawback":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"sp = sample*6.28*8*8*4;\\nvol = (bass_att + mid_att + treb_att)*0.33;\\nvol = 0.2 + 0.5*(value1 + value2);\\nvol = .2;\\n\\nmod = if(below(mid_att,1.8),mid_att+.2,2);\\n\\nox = 0.5*sin(sp)*sin(sample*3.14)*vol;\\noy = (sample - 0)*mod;\\noz = 0.5*cos(sp)*sin(sample*3.14)*vol;\\n\\nxang = time*0.672;\\naxang = 0;\\nyang = time*-1.351;\\nayang = 0;\\nzang = time*-0.401;\\nazang = 0;\\nfov = 0.6 + 0.2*sin(time);\\nfov = .5;\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = -ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\noz = abs(oz) - 2;\\nx = ox*fov/oz + 0.5;\\nx = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;\\n\\nr = 1 + sin(sp);\\nb = 0.5 + 0.5*sin(sample*1.57);\\ng = 0.5 + 0.5*cos(sample*1.57);\\na = 0.5 + (oz + 2)*0.25;"},{"baseVals":{"enabled":1,"spectrum":1,"thick":1,"bdrawback":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"sp = sample*6.28*8*8*4;\\nvol = (bass_att + mid_att + treb_att)*0.33;\\nvol = 0.2 + 0.5*(value1 + value2);\\nvol = .2;\\n\\nmod = if(below(bass_att,1.8),bass_att+.2,2);\\n\\nox = 0.5*sin(sp)*sin(sample*3.14)*vol;\\noy = (sample - 0)*mod;\\noz = 0.5*cos(sp)*sin(sample*3.14)*vol;\\n\\nxang = time*-0.321;\\naxang = 0;\\nyang = time*1.531;\\nayang = 0;\\nzang = time*-0.101;\\nazang = 0;\\nfov = 0.6 + 0.2*sin(time);\\nfov = .5;\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = -ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\noz = abs(oz) - 2;\\nx = ox*fov/oz + 0.5;\\nx = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;\\n\\ng = 1 + sin(sp);\\nr = 0.5 + 0.5*sin(sample*1.57);\\nb = 0.5 + 0.5*cos(sample*1.57);\\na = 0.5 + (oz + 2)*0.25;"},{"baseVals":{"enabled":1,"spectrum":1,"thick":1,"bdrawback":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"sp = sample*6.28*8*8*4;\\nvol = (bass_att + mid_att + treb_att)*0.33;\\nvol = 0.2 + 0.5*(value1 + value2);\\nvol = .2;\\n\\nmod = if(below(treb_att,1.8),treb_att+.2,2);\\n\\nox = 0.5*sin(sp)*sin(sample*3.14)*vol;\\noy = (sample - 0)*mod;\\noz = 0.5*cos(sp)*sin(sample*3.14)*vol;\\n\\nxang = time*0.221;\\naxang = 0;\\nyang = time*-0.411;\\nayang = 0;\\nzang = time*1.201;\\nazang = 0;\\nfov = 0.6 + 0.2*sin(time);\\nfov = .5;\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = -ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\noz = abs(oz) - 2;\\nx = ox*fov/oz + 0.5;\\nx = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;\\n\\nb = 1+sin(sp);\\ng = 0.5 + 0.5*sin(sample*1.57);\\nr = 0.5 + 0.5*cos(sample*1.57);\\na = 0.5 + (oz + 2)*0.25;"},{"baseVals":{"bdrawback":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_a = 0;\\ndecay=.995;","pixel_eqs_eel":"it = 0.3*sin(time*0.2);\\nradm = (rad*ang)*x;\\nrot = 0.02*sin((radm+it)*30)*radm;\\nmod = sin(ang*5);\\nmod = mod*mod*mod*mod*mod;\\nzoom = 1 + abs(0.01*mod);\\nrad_cycle=rad*rad*x*60*rad*sin(q1);\\nrot=if(above(q2,q8),.06*sin(rad_cycle-3*Sin(Q3)-x*ang*q3)*equal(Rad,x+y)*sin(Q6)-.3*sin(Q7\\n),.02*sin(Q3));\\nzoom =if(above(q2,q8), 2*rot*rad + 1 - 0.01*q1*rad-(X-.3*sin(Q4))+(x*.25*sin(Q2)),1.10);;\\nzoomexp = 1 - 0.1*rad;\\ndx=if(above(q2,q8),equal(x,raD)*sin(Q3)/y*sin(Q1),.009*sin(q5)*x*rad+d*sin(q2));\\ndy=if(above(q2,q8),equal(y,rad)*sin(q2)/x*sin(q5),.009*sin(Q3)*y*rad+r*sin(q1));\\n//there was a semicolon here, it\'s gone now\\nd=above(y,sin(ang*3+time));\\nr=above(y,sin(ang*3+time));\\ntm=sin(time*0.5)*3;\\ntm2=cos(time)*3;\\nzooma=above(cos(x*6.28*3+tm),0) * above(cos(y*6.28*2+tm2),0);\\nzooma=min(sin(x*6.28*3+tm)+1,1) * min(cos(y*6.28*2+tm)+1,1);\\n\\nrd=sqrt( sqr( (x-0.5-q4)*1.7) + sqr( (y-0.5+q5)*1.2 ) );\\ncx=0.5+q4;\\ncy=0.5-q5;\\n\\n\\nzoom= 0.041+0.99*(zooma) + 0.99*(1-zooma);\\nrot=.3*zooma*rd;","warp":"","comp":""}')},7584:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_orient":3,"wave_mode":5,"wave_brighten":0,"wrap":0,"wave_a":0.312,"wave_scale":0.972,"wave_smoothing":0.5,"modwavealphastart":0.5,"modwavealphaend":1,"dx":0.00001,"dy":0.00001,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.005,"ob_a":1,"ib_size":0.005,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":0,"mv_y":0,"mv_l":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"textured":1,"y":1.8},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"textured":1,"y":1.8},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"textured":1,"y":1.8},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = 0.5 + 0.5*sin(6*time);\\nwave_g = 0.5 + 0.5*sin(4.1*time);\\nwave_b = -1 + (1-wave_r + 1-wave_g);\\nwarp = 0;\\n\\nob_r = 1-abs(wave_r);\\nob_g = 1-abs(wave_g);\\nob_b = 1-abs(wave_b);\\nib_r = abs(wave_r);\\nib_b = abs(wave_b);\\nib_g = abs(wave_g);\\n;","pixel_eqs_eel":"mekdx=dx;//////////////////////////////////////////\\nkdy=dy;\\nksx=sx;\\nksy=sy;\\nkrt=rot;\\nkzm=zoom;\\nkcx=cx;\\nkcy=cy;\\nkwp=warp;\\n\\ndx=0;\\ndy=0;\\nsx=1;\\nsy=1;\\nrot=0;\\nzoom=1;\\ncx=.5;\\ncy=.5;\\nwarp=0;/////////////////////////////////////////////////////\\n\\nthresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\\ndx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;\\ndy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;\\n\\nxy = above(sin(time),0)*x + below(sin(1.34*time),0)*y + above((bass_att),1.1)*-1;\\n\\ndx = dx + dx_r;\\ndy = dy + dy_r;\\nsx = sx - abs(12*dx_r*(xy*sin(xy*bass_att*1.25)));\\nsy = sy - abs(12*dy_r*(xy*sin(xy*bass_att*1.25)));\\nrot = rot + 22*dx_r*(xy*cos(4*xy*treb_att));\\ncx = cx + 8*dx_r*(xy*sin(xy*mid_att*1.1));\\ncy = cy + 8*dy_r*(xy*sin(xy*mid_att*1.1));\\n///////////////////////////////////////\\ncr1=1*.01;\\ncr2=99*.01;; ; ; ;\\ncrx=cr2-cr1;\\nci=(1-(1-abs(-2*(x+y)/2+1)+(1-abs(-2*(1-(x+(1-y))/2)+1)))/2)*4-1;\\ncb=.25  ;\\ncrs=2;\\ncr=pow(sin(ci*6.3-(cb*6.3))/2+.5,crs)*crx+cr1;\\ncqr=if( above (ci,.25+cb),cr,crx+cr1);crr=if( below(ci,1.5),cqr,crx+cr1);\\njx1=crr;\\nkx1=1-crr;\\n\\njdx=dx;\\njdy=dy;\\njsx=sx;\\njsy=sy;\\njrt=rot;\\njzm=zoom;\\njcx=cx;\\njcy=cy;\\njwp=warp;\\n\\ndx=(jx1*jdx+kx1*kdx);\\ndy=(jx1*jdy+kx1*kdy);\\nsx=(jx1*jsx+kx1*ksx);\\nsy=(jx1*jsy+kx1*ksy);\\nrot=(jx1*jrt+kx1*krt);\\nzoom=(jx1*jzm+kx1*kzm);\\ncx=(jx1*jcx+kx1*kcx);\\ncy=(jx1*jcy+kx1*kcy);\\nwarp=(jx1*jwp+kx1*kwp);////////////////////////////////////////////////////","warp":"","comp":""}')},82:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1,"decay":0.925,"echo_zoom":1.007,"echo_orient":3,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"wave_a":4.1,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.99951,"warp":0.01,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":5,"rad":0.20068,"tex_zoom":4.32548},"init_eqs_eel":"","frame_eqs_eel":"ba=bass-.9;\\ntr=treb-.9;\\nmi=mid-.9;\\n\\nrad=(ba+tr+mi)*.333;\\nss=ss+mi*.5;\\nss=if(above(8,ss),if(below(3,ss),ss,8),3);\\naa=aa+.01*(bass+bass_att+treb+treb_att-3.5);\\nsides=ss;\\nang=aa;\\n\\ntextured=if(below(1.3,treb),0,1);\\nrr=rr+ba*.4;\\ngg=gg+tr*.4;\\nbb=bb+mi*.4;\\nr=rr-.5*gg;\\nb=gg-.5*bb;\\ng=bb-.5*rr;\\nr2=b;\\nb2=g;\\ng2=r;\\nx=q3;\\ny=q4;\\nt3=x;\\nt4=y;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"ff=ff+2.7;\\nbb=bb+bass+mid+treb;\\nbt=bb/ff;\\nbeat=above(bass,bt);\\nbeathard=if(beat,bass-bt,0);\\nmonitor=t3;\\ndecay=1;\\nq1=beat;\\nq2=beathard;\\nwrap=1;\\n\\n\\ncx=1-q3;\\ncy=1-q4;\\nba=bass-.9;\\ntr=treb-.9;\\nmi=mid-.9;\\nxx=xx+ba*.01-tr*.001;\\nyy=yy+tr*.01-ba*.001;\\nxx=if(above(1,xx),if(below(0,xx),xx,1),0);\\nyy=if(above(1,yy),if(below(0,yy),yy,1),0);\\n\\nq3=xx;\\nq4=yy;","pixel_eqs_eel":"dx=if(below(x,q3),abs(y)*.1,0)*q1;\\ndy=if(below(x,q3),abs(y)*.1*(sin(bass*3.14+treb*3.14)),0)*(1-q1);\\nrot=if(above(x,q3),-abs(y)*.1+x*q2*sin(bass),rot);","warp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = (((\\n    ((texture (sampler_blur2, (uv + vec2(0.01, 0.0))).xyz * scale2) + bias2)\\n   - \\n    ((texture (sampler_blur2, (uv - vec2(0.01, 0.0))).xyz * scale2) + bias2)\\n  ).y * 1280.0) * texsize.z);\\n  tmpvar_2.y = (((\\n    ((texture (sampler_blur2, (uv + vec2(0.0, 0.01))).xyz * scale2) + bias2)\\n   - \\n    ((texture (sampler_blur2, (uv - vec2(0.0, 0.01))).xyz * scale2) + bias2)\\n  ).y * 1024.0) * texsize.w);\\n  ret_1.y = texture (sampler_fw_main, (uv + (tmpvar_2 * 0.005))).y;\\n  ret_1 = (ret_1 + ((\\n    (ret_1 - ((texture (sampler_blur3, uv).xyz * scale3) + bias3))\\n   * 0.3) - 0.05));\\n  ret_1 = (ret_1 + ((texture (sampler_noise_lq, \\n    (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 0.25)) + rand_frame.xy)\\n  ).xyz - 0.5) * 0.1));\\n  ret_1 = mix (ret_1, vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))), vec3(0.2, 0.2, 0.2));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_1;\\n  ret = tmpvar_3.xyz;\\n }","comp":""}')},998:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.21,"decay":0.97,"echo_zoom":1,"echo_alpha":0.5,"additivewave":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":100,"wave_scale":2.63,"wave_smoothing":0.5,"modwavealphastart":0.5,"modwavealphaend":1,"dx":0.00001,"dy":0.00001,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.005,"ob_a":1,"ib_size":0.005,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":0,"mv_y":0,"mv_l":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = 0.5 + 0.5*sin(6*time);\\nwave_g = 0.5 + 0.5*sin(4.1*time);\\nwave_b = -1 + (1-wave_r + 1-wave_g);\\nwarp = 0;\\n\\nob_r = 1-abs(wave_r);\\nob_b = 1-abs(wave_b);\\nob_g = 1-abs(wave_g);\\nib_r = 1-abs(ob_r);\\nib_g = 1-abs(ob_g);\\nib_b = 1-abs(ob_b);;\\nob_a = ob_a - sin(time);\\nib_a = ib_a - cos(time);","pixel_eqs_eel":"thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\\ndx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;\\ndy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;\\n\\n\\nzoom = zoom - 0.03;\\ndy = dy + 2*dy_r*cos(sin(1.2*cos(2.7*time)*(0.5-x))*y)*8*dx_r*sin(1.02*time);\\ndx = dx + 2*dx_r*sin(cos(1.32*sin(1.24*time)*(0.5-y))*x)*8*dy_r*cos(1.2*time);\\nsx = sx - 12*dx_r*cos(sin(1.1*sin(2.87*time)*1.5*rad)*rad)*12*dx_r*tan(x*0.8*time);\\nsy = sy - 12*dy_r*sin(sin(0.67*cos(1.12*time)*1.5*rad)*rad)*12*dy_r*tan(y*0.9*time);","warp":" shader_body { \\n  vec3 ret_1;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv);\\n  ret_1 = (tmpvar_2.xyz + ((tmpvar_2.xyz - \\n    ((texture (sampler_blur2, uv).xyz * scale2) + bias2)\\n  ) * 0.3));\\n  ret_1 = (ret_1 * 0.9);\\n  ret_1 = (ret_1 + ((\\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 0.4)) + rand_frame.xy)).xyz - 0.5)\\n   / 256.0) * 112.0));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_1;\\n  ret = tmpvar_3.xyz;\\n }","comp":""}')},4212:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.7,"decay":0.995,"echo_zoom":1,"echo_orient":1,"wave_mode":2,"additivewave":1,"wave_dots":1,"wave_thick":1,"wave_brighten":0,"wrap":0,"wave_a":100,"wave_smoothing":0.9,"wave_mystery":-0.6,"modwavealphastart":0.5,"modwavealphaend":1,"warpanimspeed":100,"warpscale":100,"fshader":1,"dx":0.00001,"dy":0.00001,"warp":0.01,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0,"ob_a":1,"ib_size":0.3,"ib_r":0,"ib_g":0,"ib_b":1,"mv_x":0,"mv_y":0,"mv_l":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_x = wave_x + 0.1*sin(5*bass);\\nwave_y = wave_y + 0.1*sin(5*bass);\\nwave_r = wave_r + 1;\\nwave_g =wave_g + rand(2);\\nwave_b = 0;\\nrot = rot + if (above(bass,0), 0.02*sin(6*bass) - 0.025*cos(4.75*bass), 0);","pixel_eqs_eel":"zoom = zoom + 0.05*rad;","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (texture (sampler_main, (uv + (\\n    (texture (sampler_main, (mix (uv, uv_orig, vec2(-1.0, -1.0)) + texsize.zw)).xy - 0.37)\\n   * \\n    (0.005 + (0.025 * clamp ((treb - 1.0), 0.0, 1.0)))\\n  ))).xyz - 0.004);\\n  ret = tmpvar_1.xyz;\\n }","comp":""}')},5573:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1,"decay":0.995,"echo_zoom":1,"echo_orient":3,"wave_mode":5,"wave_a":100,"wave_scale":0.721,"wave_smoothing":0.5,"modwavealphastart":0.5,"modwavealphaend":1,"warpanimspeed":0.028,"warpscale":0.905,"dx":0.00001,"dy":0.00001,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.005,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":0,"mv_y":0,"mv_l":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = 0.5 + 0.5*sin(6*time);\\nwave_g = 0.5 + 0.5*sin(4.1*time);\\nwave_b = -1 + (1-wave_r + 1-wave_g);\\nwarp = 0;\\n\\npfthresh = above(bass_att,pfthresh)*2+(1-above(bass_att,pfthresh))*((pfthresh-1.3)*0.96+1.3);\\npfdx_r = equal(pfthresh,2)*0.015*sin(5*time)+(1-equal(pfthresh,2))*pfdx_r;\\npfdy_r = equal(pfthresh,2)*0.015*sin(6*time)+(1-equal(pfthresh,2))*pfdy_r;\\nrg1 = abs(sin(time));\\nrg2 = -1*above(rg1,0.75) -0.66*below(rg1,0.25) - 0.33*above(rg1,0.25)*below(rg1,0.5) - 0*above(rg1,0.5)*below(rg1,0.75);\\nrg3 = if(equal(pfthresh,2),rg2,rg3);\\n\\n\\nob_r = 1-abs(wave_r);\\nob_b = 1-abs(wave_b);\\nob_g = 1-abs(wave_g);\\necho_alpha = echo_alpha - rg3;\\necho_zoom = echo_zoom + sin(bass_att);","pixel_eqs_eel":"thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\\ndx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;\\ndy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;\\n\\n\\nwx = 0.2*cos(time)*x;\\nwy = 0.2*sin(1.2*time)*y;\\nrot = rot + dx_r*abs(dy_r*4-treb_att-thresh);\\nzoom = zoom + 0.05*sin(4-(4*cos(0.5-rad*cos(tan(14*dx_r*bass_att))*cos(1.12*time)*rad*\\n14*rad))*16*dx_r);\\nrot = rot + dx_r;\\nrot = rot + dy_r;\\ndx = dx + 1.1*dx_r;\\ndy = dy + 1.1*dy_r;\\nrot = rot + above(bass_att,1.25)*1.2*tan(cos(time));\\nwarp = warp + above(bass_att,1.3)*12;\\nzoom = zoom - above(bass_att,1.2)*1.2*cos(2-abs(rad*2-time))*wx*rad;","warp":" shader_body { \\n  vec3 ret_1;\\n  ret_1 = (texture (sampler_main, uv).xyz + ((\\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5)\\n   / 256.0) * 7.0));\\n  vec3 tmpvar_2;\\n  tmpvar_2 = fract((ret_1 - (\\n    (clamp (((vol / vol_att) - 1.1), 0.0, 1.0) * 0.5)\\n   + 0.004)));\\n  ret_1 = tmpvar_2;\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = tmpvar_2;\\n  ret = tmpvar_3.xyz;\\n }","comp":""}')},1846:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":3,"gammaadj":1,"decay":0.9,"echo_zoom":0.999823,"wave_mode":7,"wave_thick":1,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":0.01,"wave_smoothing":0.9,"wave_mystery":1,"modwavealphastart":0.5,"modwavealphaend":1,"warpanimspeed":0.01,"warpscale":1.766487,"zoomexp":1.000158,"fshader":1,"dx":0.00001,"dy":0.00001,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"wave_y":0.6,"ob_size":0.005,"ob_a":1,"ib_size":0.005,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":6.4,"mv_y":4.8,"mv_l":5,"mv_a":0},"shapes":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.35*sin(1.14*time) + 0.16*sin(1.5*time);\\nwave_g = wave_g + 0.36*sin(1.27*time) + 0.15*sin(1.11*time);\\nwave_b = wave_b + 0.37*sin(1.284*time) + 0.15*sin(1.3*time);\\nwarp = 0;\\n\\nob_r = wave_g;\\nob_b = wave_r;\\nob_g = wave_b;\\nib_r = wave_r;\\nib_b = wave_g;\\nib_g = wave_r;\\n\\nib_size = ib_size + 0.01*bass_att;","pixel_eqs_eel":"thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\\ndx_r = equal(thresh,2)*0.15*sin(5*time)+(1-equal(thresh,2))*dx_r;\\ndy_r = equal(thresh,2)*0.165*sin(6*time)+(1-equal(thresh,2))*dy_r;\\n\\nzoom = zoom - 0.06;\\ndx = dx + 0.025*sin(abs(24*y))*sin(time);\\ndy = dy + 0.025*sin(abs(24*x))*cos(time);\\nsx = sx - 0.025*sin(cos(24*rad))*cos(time);\\nsy = sy - 0.025*sin(cos(24*rad))*sin(time);","warp":"","comp":""}')},2225:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1,"decay":1,"echo_orient":1,"additivewave":1,"wave_a":0.002,"wave_scale":2.713,"wave_smoothing":0,"modwavealphastart":1.2,"modwavealphaend":1.2,"warpscale":1.331,"zoom":0.9995,"warp":0.009,"wave_r":0.44,"wave_g":0.4,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"sides":3,"additive":1,"num_inst":347,"rad":0.20065,"ang":0.75398,"tex_ang":3.14159,"tex_zoom":0.99979,"r":0,"g2":0,"border_g":0.5,"border_b":0.15,"border_a":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"//lorenz-attractor calc\\nxx1 = if(equal(instance,0),q11,xx1);\\nyy1 = if(equal(instance,0),q12,yy1);\\nzz1 = if(equal(instance,0),q13,zz1);\\n\\ndx1 = q14*(yy1-xx1);\\ndy1 = xx1*(q15-zz1)-yy1;\\ndz1 = xx1*yy1-q16*zz1;\\ndd = sqrt(dx1*dx1+dy1*dy1+dz1*dz1);\\nxx1 = xx1 + q17*dx1/dd;\\nyy1 = yy1 + q17*dy1/dd;\\nzz1 = zz1 + q17*dz1/dd;\\n\\n\\n// 3D object model coordinates\\nmy_x = xx1*0.1;\\nmy_y = yy1*0.1;\\nmy_z = zz1*0.1 - 3;\\n\\n\\nd = 5; // camera distance\\nzoom = 0.66;\\n\\n// solid angles\\nw3 = -q3;\\nw2 = q4;\\nw1 = q5;\\n\\n// 3D rotation\\nx1 = cos(w1)*my_x + sin(w1)*my_y;\\ny1 = -sin(w1)*my_x + cos(w1)*my_y;\\nz1 = my_z;\\n\\nx2 = cos(w2)*x1 + sin(w2)*z1;\\nz2 = -sin(w2)*x1 + cos(w2)*z1;\\ny2 = y1;\\n\\ny3 = cos(w3)*y2 + sin(w3)*z2;\\nz3 = -sin(w3)*y2 + cos(w3)*z2;\\nx3 = x2;\\n\\n// perspective calculation\\n\\nl = sqrt(x3*x3 + y3*y3);\\nw = atan2(x3,y3);\\np = tan(asin(1) + atan2(d+z3,l));\\nd = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));\\n\\nmy_x = zoom*sin(w)*p;\\nmy_y = zoom*cos(w)*p;\\n\\nx = 0.5 + my_x;\\ny = 0.5 + my_y;\\n\\nrad = rad/d;\\nang = ang-instance/num_inst*asin(1)*8;"},{"baseVals":{"enabled":1,"sides":52,"rad":0.72136,"tex_zoom":0.7874,"r":0,"a":0.05,"g2":0,"border_a":0},"init_eqs_eel":"started = 0;\\nt1 = 0.412; //seeds for pseudo random generator\\nt2 = 0.4563;\\nt3 = 0.6452;\\nt4 = 0.2565;","frame_eqs_eel":""},{"baseVals":{"sides":12,"additive":1,"num_inst":512,"y":0.55,"rad":0.2667,"tex_zoom":0.7874,"r":0,"g":0.1,"b":0.55,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"started = 0;\\nt1 = 0.412; //seeds for pseudo random generator\\nt2 = 0.4563;\\nt3 = 0.6452;\\nt4 = 0.2565;","frame_eqs_eel":"rnd1 = if(equal(instance,0),t1,rnd1);\\nrnd2 = if(equal(instance,0),t2,rnd2);\\nrnd3 = if(equal(instance,0),t3,rnd3);\\nrnd4 = if(equal(instance,0),t4,rnd4);\\nrnd1 = 4*rnd1*(1-rnd1);\\nrnd2 = 4*rnd2*(1-rnd2);\\nrnd3 = 4*rnd3*(1-rnd3);\\nrnd4 = 4*rnd4*(1-rnd4);\\nt = .6;\\nt =  (rnd1+time*t) - int(rnd1+time*t);\\nt = t + rnd2*0.1;\\nwh = rnd4*asin(1)*4;\\nwv = 0.25 + rnd3*0.1;\\n\\nd = 6; // makes the perspective impact\\nzoom = 1;\\nl = 1;\\n\\n// Kardan angles\\n\\nw1 = q3; // first rotation: clockwise in the desktop pane\\nw2 = q4; // rotation around vertical axis\\nw3 = q5; // rotation around horizontal axis\\n\\n\\n// definition of the 3D shape\\n\\ni = instance;\\n\\nmy_x = t *(cos(wh)*sin(wv)*l)*4;\\nmy_z = (-0.5 +(t-0.75)*(t-0.75))*cos(wv)*l*4;\\nmy_y = t*(sin(wh)*sin(wv)*l)*4;\\n\\n\\n// 3D rotations\\n\\nx1 = cos(w1)*my_x + sin(w1)*my_y;\\ny1 = -sin(w1)*my_x + cos(w1)*my_y;\\nz1 = my_z;\\n\\nx2 = cos(w2)*x1 + sin(w2)*z1;\\nz2 = -sin(w2)*x1 + cos(w2)*z1;\\ny2 = y1;\\n\\ny3 = cos(w3)*y2 + sin(w3)*z2;\\nz3 = -sin(w3)*y2 + cos(w3)*z2;\\nx3 = x2;\\n\\n// perspective calculation\\n\\np = tan(asin(1) + atan2(d+z3,sqrt(x3*x3 + y3*y3)));\\nd = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));\\n\\nrad = rad/d;\\nmy_x = zoom*sin(atan2(x3,y3))*p;\\nmy_y = zoom*cos(atan2(x3,y3))*p;\\n\\nx = 0.5 + my_x;\\ny = 0.5 + my_y;\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;"},{"baseVals":{"sides":12,"additive":1,"num_inst":512,"y":0.55,"rad":0.05012,"tex_zoom":0.7874,"r":0,"g":0.02,"b":0.11,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"started = 0;\\nt1 = 0.412; //seeds for pseudo random generator\\nt2 = 0.4563;\\nt3 = 0.6452;\\nt4 = 0.2565;","frame_eqs_eel":"rnd1 = if(equal(instance,0),t1,rnd1);\\nrnd2 = if(equal(instance,0),t2,rnd2);\\nrnd3 = if(equal(instance,0),t3,rnd3);\\nrnd4 = if(equal(instance,0),t4,rnd4);\\nrnd1 = 4*rnd1*(1-rnd1);\\nrnd2 = 4*rnd2*(1-rnd2);\\nrnd3 = 4*rnd3*(1-rnd3);\\nrnd4 = 4*rnd4*(1-rnd4);\\nt = .6;\\nt =  (rnd1+time*t) - int(rnd1+time*t);\\nt = t + rnd2*0.1;\\nwh = rnd4*asin(1)*4;\\nwv = 0.25 + rnd3*0.1;\\n\\nd = 1.4; // makes the perspective impact\\nzoom = 1;\\nl = 1;\\n\\n// Kardan angles\\n\\nw1 = q3; // first rotation: clockwise in the desktop pane\\nw2 = q4; // rotation around vertical axis\\nw3 = q5; // rotation around horizontal axis\\n\\n\\n// definition of the 3D shape\\n\\ni = instance;\\n\\nmy_x = t *(cos(wh)*sin(wv)*l);\\nmy_y = (-0.5 +(t-0.75)*(t-0.75))*cos(wv)*l;\\nmy_z = t*(sin(wh)*sin(wv)*l);\\n\\n\\n// 3D rotations\\n\\nx1 = cos(w1)*my_x + sin(w1)*my_y;\\ny1 = -sin(w1)*my_x + cos(w1)*my_y;\\nz1 = my_z;\\n\\nx2 = cos(w2)*x1 + sin(w2)*z1;\\nz2 = -sin(w2)*x1 + cos(w2)*z1;\\ny2 = y1;\\n\\ny3 = cos(w3)*y2 + sin(w3)*z2;\\nz3 = -sin(w3)*y2 + cos(w3)*z2;\\nx3 = x2;\\n\\n// perspective calculation\\n\\np = tan(asin(1) + atan2(d+z3,sqrt(x3*x3 + y3*y3)));\\nd = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));\\n\\nrad = rad/d;\\nmy_x = zoom*sin(atan2(x3,y3))*p;\\nmy_y = zoom*cos(atan2(x3,y3))*p;\\n\\nx = 0.5 + my_x;\\ny = 0.5 + my_y;\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;"}],"waves":[{"baseVals":{"samples":495,"sep":4,"spectrum":1,"thick":1,"additive":1,"scaling":100,"smoothing":1,"a":0.21,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\nab = 1;","frame_eqs_eel":"","point_eqs_eel":"// lorenz-attractor calc\\nxx1 = if(equal(sample,0),q11,xx1);\\nyy1 = if(equal(sample,0),q12,yy1);\\nzz1 = if(equal(sample,0),q13,zz1);\\ndx1 = q14*(yy1-xx1);\\ndy1 = xx1*(q15-zz1)-yy1;\\ndz1 = xx1*yy1-q16*zz1;\\nxx1 = xx1 + q17*dx1;\\nyy1 = yy1 + q17*dy1;\\nzz1 = zz1 + q17*dz1;\\n\\n// 3D model coordinates\\nmy_x = xx1*0.1;\\nmy_y = yy1*0.1;\\nmy_z = zz1*0.1 - 3;\\n\\n\\nd = 5; // distance of the camera (on the z-axis) to the origin\\nzoom = 0.4;\\n\\n// solid angles\\nw1 = q2;\\nw2 = q3;\\nw3 = q4;\\n\\n// rotations\\nx1 = cos(w1)*my_x + sin(w1)*my_y;\\ny1 = -sin(w1)*my_x + cos(w1)*my_y;\\nz1 = my_z;\\n\\nx2 = cos(w2)*x1 + sin(w2)*z1;\\nz2 = -sin(w2)*x1 + cos(w2)*z1;\\ny2 = y1;\\n\\ny3 = cos(w3)*y2 + sin(w3)*z2;\\nz3 = -sin(w3)*y2 + cos(w3)*z2;\\nx3 = x2;\\n\\n// perspective calculation\\n\\nl = sqrt(x3*x3 + y3*y3);\\nw = atan2(x3,y3);\\np = tan(asin(1) + atan2(d+z3,l));\\nd = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));\\n\\nmy_x = zoom*sin(w)*p;\\nmy_y = zoom*cos(w)*p;\\n\\nx = 0.5 + my_x;\\ny = 0.5 + my_y;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"xx1 = if(equal(sample,0),q11,xx1);\\nyy1 = if(equal(sample,0),q12,yy1);\\nzz1 = if(equal(sample,0),q13,zz1);\\n\\ndx1 = q14*(yy1-xx1);\\ndy1 = xx1*(q15-zz1)-yy1;\\ndz1 = xx1*yy1-q16*zz1;\\nxx1 = xx1 + q17*dx1;\\nyy1 = yy1 + q17*dy1;\\nzz1 = zz1 + q17*dz1;\\n\\nmy_x = xx1*0.02;\\nmy_y = yy1*0.02;\\nmy_z = zz1*0.02;\\n\\nx = 0.5 + my_x;\\ny = 0.5 + my_y;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"x1 = 2;\\ny1= 2;\\nz1 = 2;","frame_eqs_eel":"// raytraced sphere code\\n\\nd = 20; // distance of the sphere, the farther you\'re away the more you\'ll see on the horizon\\nz = 4; // distance of the pane where the scene is projected on, wider distance = smaller apex angle of the camera, very small distances = fish eyes view\\n\\nzz = 1 + bass_att*0; // linear zoom\\n\\npi = asin(1)*2;\\npi2inv = 0.5/pi;\\nmaskangle = asin( 1/d);\\nq32 = maskangle; // hit = (cameras angle < mask_angle)\\nq31 = d;\\nq30 = z;\\nq29 = pi2inv;\\nq28 = pi;\\nq27 = 1/zz;\\n\\nv = 0.4;\\nj1 = j1*0.95 + sqr(bass*4)*v;\\nj2 = j2*0.95 + sqr(mid*4)*v;\\nj3 = j3*0.95 + sqr(treb*4)*v;\\n\\nn = n + j1*0.0152;\\nn1 = n1 + j2*0.0152;\\nn2 = n2 + j3*0.0152;\\n\\nvol=(bass+mid+treb)*0.25;\\nvol=vol;\\nq3=vol;\\nmtime = mtime+vol*0.01;\\nq1=mtime;\\n\\nzoom = zoom + 0.015*vol;\\n\\nw1 = n*0.01;    // solid angles to rotate the sphere in its origin\\nw2 = n1*0.01;\\nw3 = n2*0.01;\\n\\nq20 = cos(w1);\\nq21 = sin(w1);\\nq22 = cos(w2);\\nq23 = sin(w2);\\nq24 = cos(w3);\\nq25 = sin(w3);","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 noise2_1;\\n  vec3 rc_2;\\n  vec3 p_3;\\n  vec2 polar_4;\\n  vec3 ret_5;\\n  vec2 tmpvar_6;\\n  tmpvar_6 = ((q27 * (uv - 0.5)) * aspect.xy);\\n  float tmpvar_7;\\n  tmpvar_7 = sqrt(dot (tmpvar_6, tmpvar_6));\\n  float tmpvar_8;\\n  float tmpvar_9;\\n  tmpvar_9 = (min (abs(\\n    (tmpvar_7 / q30)\\n  ), 1.0) / max (abs(\\n    (tmpvar_7 / q30)\\n  ), 1.0));\\n  float tmpvar_10;\\n  tmpvar_10 = (tmpvar_9 * tmpvar_9);\\n  tmpvar_10 = (((\\n    ((((\\n      ((((-0.01213232 * tmpvar_10) + 0.05368138) * tmpvar_10) - 0.1173503)\\n     * tmpvar_10) + 0.1938925) * tmpvar_10) - 0.3326756)\\n   * tmpvar_10) + 0.9999793) * tmpvar_9);\\n  tmpvar_10 = (tmpvar_10 + (float(\\n    (abs((tmpvar_7 / q30)) > 1.0)\\n  ) * (\\n    (tmpvar_10 * -2.0)\\n   + 1.570796)));\\n  tmpvar_8 = (tmpvar_10 * sign((tmpvar_7 / q30)));\\n  if ((abs(q30) > (1e-08 * abs(tmpvar_7)))) {\\n    if ((q30 < 0.0)) {\\n      if ((tmpvar_7 >= 0.0)) {\\n        tmpvar_8 += 3.141593;\\n      } else {\\n        tmpvar_8 = (tmpvar_8 - 3.141593);\\n      };\\n    };\\n  } else {\\n    tmpvar_8 = (sign(tmpvar_7) * 1.570796);\\n  };\\n  bool tmpvar_11;\\n  tmpvar_11 = (q32 >= tmpvar_8);\\n  float tmpvar_12;\\n  float tmpvar_13;\\n  tmpvar_13 = (min (abs(\\n    (tmpvar_6.x / tmpvar_6.y)\\n  ), 1.0) / max (abs(\\n    (tmpvar_6.x / tmpvar_6.y)\\n  ), 1.0));\\n  float tmpvar_14;\\n  tmpvar_14 = (tmpvar_13 * tmpvar_13);\\n  tmpvar_14 = (((\\n    ((((\\n      ((((-0.01213232 * tmpvar_14) + 0.05368138) * tmpvar_14) - 0.1173503)\\n     * tmpvar_14) + 0.1938925) * tmpvar_14) - 0.3326756)\\n   * tmpvar_14) + 0.9999793) * tmpvar_13);\\n  tmpvar_14 = (tmpvar_14 + (float(\\n    (abs((tmpvar_6.x / tmpvar_6.y)) > 1.0)\\n  ) * (\\n    (tmpvar_14 * -2.0)\\n   + 1.570796)));\\n  tmpvar_12 = (tmpvar_14 * sign((tmpvar_6.x / tmpvar_6.y)));\\n  if ((abs(tmpvar_6.y) > (1e-08 * abs(tmpvar_6.x)))) {\\n    if ((tmpvar_6.y < 0.0)) {\\n      if ((tmpvar_6.x >= 0.0)) {\\n        tmpvar_12 += 3.141593;\\n      } else {\\n        tmpvar_12 = (tmpvar_12 - 3.141593);\\n      };\\n    };\\n  } else {\\n    tmpvar_12 = (sign(tmpvar_6.x) * 1.570796);\\n  };\\n  float x_15;\\n  x_15 = (q31 * sin(tmpvar_8));\\n  vec2 tmpvar_16;\\n  tmpvar_16.x = tmpvar_12;\\n  tmpvar_16.y = ((q28 - tmpvar_8) + (sign(x_15) * (1.570796 - \\n    (sqrt((1.0 - abs(x_15))) * (1.570796 + (abs(x_15) * (-0.2146018 + \\n      (abs(x_15) * (0.08656672 + (abs(x_15) * -0.03102955)))\\n    ))))\\n  )));\\n  polar_4 = tmpvar_16;\\n  vec3 tmpvar_17;\\n  tmpvar_17.x = (sin(tmpvar_12) * sin(tmpvar_16.y));\\n  tmpvar_17.y = (cos(tmpvar_12) * sin(tmpvar_16.y));\\n  tmpvar_17.z = cos(tmpvar_16.y);\\n  vec2 tmpvar_18;\\n  tmpvar_18.x = ((tmpvar_17.z * q20) - (tmpvar_17.y * q21));\\n  tmpvar_18.y = ((tmpvar_17.z * q21) + (tmpvar_17.y * q20));\\n  vec2 tmpvar_19;\\n  tmpvar_19.x = ((tmpvar_18.x * q22) - (tmpvar_17.x * q23));\\n  tmpvar_19.y = ((tmpvar_18.x * q23) + (tmpvar_17.x * q22));\\n  p_3.z = tmpvar_19.x;\\n  vec2 tmpvar_20;\\n  tmpvar_20.x = ((tmpvar_18.y * q24) - (tmpvar_19.y * q25));\\n  tmpvar_20.y = ((tmpvar_18.y * q25) + (tmpvar_19.y * q24));\\n  p_3.xy = tmpvar_20.yx;\\n  float tmpvar_21;\\n  float tmpvar_22;\\n  tmpvar_22 = (min (abs(\\n    (tmpvar_19.x / tmpvar_20.y)\\n  ), 1.0) / max (abs(\\n    (tmpvar_19.x / tmpvar_20.y)\\n  ), 1.0));\\n  float tmpvar_23;\\n  tmpvar_23 = (tmpvar_22 * tmpvar_22);\\n  tmpvar_23 = (((\\n    ((((\\n      ((((-0.01213232 * tmpvar_23) + 0.05368138) * tmpvar_23) - 0.1173503)\\n     * tmpvar_23) + 0.1938925) * tmpvar_23) - 0.3326756)\\n   * tmpvar_23) + 0.9999793) * tmpvar_22);\\n  tmpvar_23 = (tmpvar_23 + (float(\\n    (abs((tmpvar_19.x / tmpvar_20.y)) > 1.0)\\n  ) * (\\n    (tmpvar_23 * -2.0)\\n   + 1.570796)));\\n  tmpvar_21 = (tmpvar_23 * sign((tmpvar_19.x / tmpvar_20.y)));\\n  if ((abs(tmpvar_20.y) > (1e-08 * abs(tmpvar_19.x)))) {\\n    if ((tmpvar_20.y < 0.0)) {\\n      if ((tmpvar_19.x >= 0.0)) {\\n        tmpvar_21 += 3.141593;\\n      } else {\\n        tmpvar_21 = (tmpvar_21 - 3.141593);\\n      };\\n    };\\n  } else {\\n    tmpvar_21 = (sign(tmpvar_19.x) * 1.570796);\\n  };\\n  float tmpvar_24;\\n  tmpvar_24 = sqrt(dot (p_3.xz, p_3.xz));\\n  float tmpvar_25;\\n  float tmpvar_26;\\n  tmpvar_26 = (min (abs(\\n    (tmpvar_20.x / tmpvar_24)\\n  ), 1.0) / max (abs(\\n    (tmpvar_20.x / tmpvar_24)\\n  ), 1.0));\\n  float tmpvar_27;\\n  tmpvar_27 = (tmpvar_26 * tmpvar_26);\\n  tmpvar_27 = (((\\n    ((((\\n      ((((-0.01213232 * tmpvar_27) + 0.05368138) * tmpvar_27) - 0.1173503)\\n     * tmpvar_27) + 0.1938925) * tmpvar_27) - 0.3326756)\\n   * tmpvar_27) + 0.9999793) * tmpvar_26);\\n  tmpvar_27 = (tmpvar_27 + (float(\\n    (abs((tmpvar_20.x / tmpvar_24)) > 1.0)\\n  ) * (\\n    (tmpvar_27 * -2.0)\\n   + 1.570796)));\\n  tmpvar_25 = (tmpvar_27 * sign((tmpvar_20.x / tmpvar_24)));\\n  if ((abs(tmpvar_24) > (1e-08 * abs(tmpvar_20.x)))) {\\n    if ((tmpvar_24 < 0.0)) {\\n      if ((tmpvar_20.x >= 0.0)) {\\n        tmpvar_25 += 3.141593;\\n      } else {\\n        tmpvar_25 = (tmpvar_25 - 3.141593);\\n      };\\n    };\\n  } else {\\n    tmpvar_25 = (sign(tmpvar_20.x) * 1.570796);\\n  };\\n  vec2 tmpvar_28;\\n  tmpvar_28.x = tmpvar_21;\\n  tmpvar_28.y = tmpvar_25;\\n  polar_4 = (((tmpvar_28 * q29) * vec2(1.0, 2.0)) + vec2(0.0, 0.5));\\n  vec3 tmpvar_29;\\n  tmpvar_29.xy = polar_4;\\n  tmpvar_29.z = (time * 0.15);\\n  rc_2 = (texture (sampler_noisevol_hq, tmpvar_29).xyz + (texture (sampler_noisevol_hq, (2.0 * tmpvar_29)) * 0.5).xyz);\\n  rc_2 = (rc_2 + (texture (sampler_noisevol_hq, (4.0 * tmpvar_29)) * 0.25).xyz);\\n  rc_2 = (rc_2 + (texture (sampler_noisevol_hq, (8.0 * tmpvar_29)) * 0.125).xyz);\\n  rc_2 = (rc_2 + (texture (sampler_noisevol_hq, (16.0 * tmpvar_29)) * 0.0625).xyz);\\n  rc_2 = ((rc_2 * rc_2) * (rc_2 * 2.0));\\n  rc_2 = (rc_2 * (q3 * 0.5));\\n  vec4 tmpvar_30;\\n  tmpvar_30 = texture (sampler_fc_main, (0.5 + (uv - 0.5)));\\n  noise2_1 = (texture (sampler_noise_lq, ((\\n    (uv_orig * texsize.xy)\\n   * texsize_noise_lq.zw) + rand_frame.xy)).xyz + mix ((rc_2 * 2.0), vec3(2.0, 2.0, 2.0), vec3(rad)));\\n  vec3 a_31;\\n  a_31 = (1.0 - tmpvar_30.xyz);\\n  ret_5 = (tmpvar_30.xyz + (vec3(0.3, 0.25, 0.2) * dot (\\n    ((a_31.yzx * noise2_1.zxy) - (a_31.zxy * noise2_1.yzx))\\n  , vec3(0.32, 0.49, 0.29))));\\n  ret_5 = (ret_5 - (0.1 * rad));\\n  ret_5 = (ret_5 + ((0.1 * texture (sampler_noisevol_hq, \\n    ((p_3 + (time * 0.1)) * 0.7)\\n  )) * float(tmpvar_11)).xyz);\\n  vec4 tmpvar_32;\\n  tmpvar_32.w = 1.0;\\n  tmpvar_32.xyz = ret_5;\\n  ret = tmpvar_32.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  ret_1 = (texture (sampler_main, uv).xyz - ((\\n    (texture (sampler_blur1, uv).xyz * scale1)\\n   + bias1) * 0.5));\\n  ret_1 = (ret_1 * 2.0);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ret_1;\\n  ret = tmpvar_2.xyz;\\n }"}')},2279:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.14,"decay":1,"echo_zoom":1,"wave_mode":6,"wave_thick":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":1.17,"wave_scale":0.797,"wave_smoothing":0,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoomexp":0.9995,"zoom":0.9998,"rot":0.02,"dy":-0.008,"warp":0.01,"sx":1.0098,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"wave_x":0.9,"ob_size":0.005,"ob_a":0.8,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":44.8,"mv_y":38.4,"mv_l":5,"mv_g":0.91,"mv_b":0.71,"mv_a":0},"shapes":[{"baseVals":{"sides":33,"y":0,"rad":0.11039,"ang":3.4054,"r":0,"g2":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"//ang = ang + time*2;\\n\\n//x = x + 0.4*sin(time);\\n//y = y + 0.4*sin(-time*1.4);"},{"baseVals":{"sides":34,"y":0.45,"rad":1.62175,"r":0,"a":0.05,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":54,"x":0,"y":0.6,"rad":0.13478,"r":0.7,"g":0.6,"b":0.7,"r2":0.6,"g2":0.6,"b2":0.6,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"//r = r + 0.3*(0.6*sin(time*1.87) + 0.4*sin(1.98*time));\\n//b = b + 0.3*(0.6*sin(time*1.3434) + 0.4*sin(1.78*time));\\n//g = g + 0.3*(0.6*sin(time*1.9887) + 0.4*sin(1.6*time));\\nr=0;\\nb=0;\\ng=0;\\nr2=r;\\nb2=b;\\ng2=g;"},{"baseVals":{"x":0,"y":0.2,"rad":0.20068,"r":0,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"usedots":1,"r":0.2,"g":0.7,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"q1 = 1/asin(1);","frame_eqs_eel":"wave_r = wave_r + 0.3*sin(vol*50);\\nwave_b = wave_b + 0.3*sin(vol*20);\\nwave_g = wave_g + 0.5*sin(vol*35);\\n\\n\\nq8=wave_r;\\nq7=wave_b;\\nq6=wave_g;\\n\\nwr = 0.5+0.4*(0.6*sin(time*1.1) + 0.4*sin(0.8*time));\\nwb = 0.5+0.4*(0.6*sin(time*1.6) + 0.4*sin(0.5*time));\\nwg = 0.5+0.4*(0.6*sin(time*1.34) + 0.4*sin(0.4*time));\\n\\nmonitor=wg;\\nq10=wr;\\nq11=wb;\\nq12=wg;\\nq18 = 0.007*sin(time*0.1);\\nq17 = -0.007*sin(time*0.254);\\nq2=bass_thresh;\\n\\nvol=(bass+mid+treb)*0.25;\\nvol=vol*vol;\\nq3=vol;\\n\\nwarp=0;\\nt = t - 1/fps;\\nt = if(above(t,2),t-2,t);\\nq2 = t;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 noise3_1;\\n  vec3 tmpvar_2;\\n  tmpvar_2 = (texture (sampler_main, uv).xyz + ((texture (sampler_blur1, uv).xyz * scale1) + bias1));\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (0.5 + ((\\n    (uv - vec2(0.0, 1.0))\\n   - 0.5) * (1.0 + \\n    (tmpvar_2.y * 0.03)\\n  )));\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = (tmpvar_3.x + pow (tmpvar_2.x, 0.0));\\n  tmpvar_4.y = (tmpvar_3.y + pow (tmpvar_2.x, 0.005));\\n  noise3_1 = (texture (sampler_noise_lq, ((\\n    (uv_orig * texsize.xy)\\n   * texsize_noise_lq.zw) + rand_frame.xy)).xyz * fract(q15));\\n  vec3 tmpvar_5;\\n  tmpvar_5 = (noise3_1 * (vec3(1.0, 1.0, 1.0) - vec3(fract(\\n    (q3 * 0.5)\\n  ))));\\n  noise3_1 = tmpvar_5;\\n  vec4 tmpvar_6;\\n  tmpvar_6 = texture (sampler_main, fract(tmpvar_4));\\n  vec3 tmpvar_7;\\n  tmpvar_7.x = q10;\\n  tmpvar_7.y = q11;\\n  tmpvar_7.z = q12;\\n  vec3 tmpvar_8;\\n  tmpvar_8 = mix (tmpvar_5, tmpvar_7, tmpvar_6.xxx);\\n  vec4 tmpvar_9;\\n  tmpvar_9.w = 1.0;\\n  tmpvar_9.xyz = (tmpvar_6.xyz + clamp ((\\n    (tmpvar_6.yzx * tmpvar_8.zxy)\\n   - \\n    (tmpvar_6.zxy * tmpvar_8.yzx)\\n  ), 0.0, 1.0));\\n  ret = tmpvar_9.xyz;\\n }","comp":" shader_body { \\n  vec2 uv6_1;\\n  vec2 d_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (texsize.zw * 4.0);\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (((uv - 0.5) * aspect.xy) * 2.4);\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = ((q12 * tmpvar_4.x) - (q11 * tmpvar_4.y));\\n  tmpvar_5.y = ((q11 * tmpvar_4.x) + (q12 * tmpvar_4.y));\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = q13;\\n  tmpvar_6.y = q14;\\n  uv6_1 = ((0.5 + (tmpvar_5 * aspect.zw)) + tmpvar_6);\\n  uv6_1 = (1.0 - abs((\\n    (fract((uv6_1 * 0.5)) * 2.0)\\n   - 1.0)));\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1)).z;\\n  tmpvar_7.y = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1)).z;\\n  uv6_1 = (uv6_1 - (tmpvar_7 * 0.1));\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (0.5 + ((uv6_1 - 0.5) * 0.9));\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = q13;\\n  tmpvar_9.y = q14;\\n  d_2 = (texsize.zw * 12.0);\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = (((texture (sampler_blur1, \\n    (tmpvar_8 + (vec2(1.0, 0.0) * d_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (tmpvar_8 - (vec2(1.0, 0.0) * d_2))\\n  ).xyz * scale1) + bias1)).x;\\n  tmpvar_10.y = (((texture (sampler_blur1, \\n    (tmpvar_8 + (vec2(0.0, 1.0) * d_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (tmpvar_8 - (vec2(0.0, 1.0) * d_2))\\n  ).xyz * scale1) + bias1)).x;\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 1.0;\\n  tmpvar_11.xyz = mix (mix (mix (\\n    (texture (sampler_main, tmpvar_8).x * vec3(1.0, 0.0, 0.0))\\n  , vec3(-0.1, -1.0, -1.0), texture (sampler_main, \\n    (uv6_1 - tmpvar_9)\\n  ).yyy), vec3(1.0, 1.0, 0.0), vec3(sqrt(\\n    dot (tmpvar_10, tmpvar_10)\\n  ))), vec3(-0.5, 2.0, 3.0), vec3((texture (sampler_main, uv).z * 0.4)));\\n  ret = tmpvar_11.xyz;\\n }"}')},694:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.14,"decay":1,"echo_zoom":1,"wave_mode":5,"wave_thick":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":0.001,"wave_scale":1.599,"wave_smoothing":0,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":2.003,"warpscale":0.359,"zoom":1.0002,"dy":-0.004,"warp":0.01,"wave_x":0.2,"wave_y":0.88,"ob_size":0,"ob_a":0.8,"ib_size":0.005,"ib_r":0.3,"ib_g":0.3,"ib_b":0.3,"ib_a":1,"mv_x":0,"mv_y":0,"mv_l":1,"mv_g":0.91,"mv_b":0.71,"mv_a":0},"shapes":[{"baseVals":{"sides":63,"x":0.56,"y":0,"rad":0.11039,"ang":3.40549,"r":0.7,"g":0.6,"b":0.7,"r2":0.6,"g2":0.6,"b2":0.6,"a2":1,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"r = r + 0.3*(0.6*sin(time*1.4) + 0.4*sin(0.98*time));\\nb = b + 0.3*(0.6*sin(time*1.134) + 0.4*sin(0.78*time));\\ng = g + 0.3*(0.6*sin(time*1.287) + 0.4*sin(0.6*time));\\n\\nr=0;\\nb=0;\\ng=0;\\nr2=r;\\nb2=b;\\ng2=g;\\n\\n//r=0.7;\\n//g=0.1;\\n//b=0;\\n\\n//r2=0.7;\\n//g2=0.7;\\n//b2=0;"},{"baseVals":{"enabled":1,"sides":34,"num_inst":3,"y":0,"rad":0.11046,"r":0.7,"g":0.6,"b":0.7,"r2":0.6,"g2":0.6,"b2":0.6,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"r = r + 0.3*(0.6*sin(time*2.4) + 0.4*sin(0.34*time));\\nb = b + 0.3*(0.6*sin(time*1.65) + 0.4*sin(0.976*time));\\ng = g + 0.3*(0.6*sin(time*2.05) + 0.4*sin(0.577*time));\\n\\nr = q4;\\nb = 1-r;\\ng = 1-r;\\n\\n//r=0;\\n//b=0;\\n//g=0;\\nr2=r;\\nb2=b;\\ng2=g;\\n\\nx = ((.5+instance)/num_inst);"},{"baseVals":{"sides":54,"x":0.44,"y":0,"rad":0.11039,"r":0.7,"g":0.6,"b":0.7,"r2":0.6,"g2":0.6,"b2":0.6,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"//r = r + 0.3*(0.6*sin(time*1.87) + 0.4*sin(1.98*time));\\n//b = b + 0.3*(0.6*sin(time*1.3434) + 0.4*sin(1.78*time));\\n//g = g + 0.3*(0.6*sin(time*1.9887) + 0.4*sin(1.6*time));\\nr=0;\\nb=0;\\ng=0;\\nr2=r;\\nb2=b;\\ng2=g;"},{"baseVals":{"x":0,"y":0.2,"rad":0.20068,"r":0,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"usedots":1,"additive":1,"r":0.2,"g":0.7,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"bass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.91+1.3);\\n\\n\\n\\nq2=bass_thresh;\\n\\nvol=(bass+mid+treb)*0.25;\\nvol=vol*vol;\\nq3=vol;\\n\\nq4 = min(vol*0.5, 1);\\ndy = -0.005;\\nwarp= 0.0215+.006*mid;\\n\\nsx = 1.003;","pixel_eqs_eel":"dx1=(cos(y*q3*30)*1.2)*0.11;\\n\\ndx=if(above(y,0.8),if(below(y,0.83),if(above(x,0.05),if(below(x,0.93),(dx1*(1-rad+0.1))*1.5,0),0),0),0);\\n\\nq1=dx;\\n\\nsx = 1+0.0075*y*(bass-.25*treb);","warp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1.x = uv.x;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = fract(uv);\\n  tmpvar_1.y = (uv.y - pow (pow (\\n    (((texture (sampler_blur1, tmpvar_2).xyz * scale1) + bias1) - 0.05)\\n  , \\n    (texture (sampler_main, tmpvar_2).xyz - 0.9)\\n  ).x, 0.007));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = (texture (sampler_main, fract(fract(\\n    fract(tmpvar_1)\\n  ))).xyz + 0.001);\\n  ret = tmpvar_3.xyz;\\n }","comp":" shader_body { \\n  vec2 uv2_1;\\n  vec3 ret_2;\\n  uv2_1 = (uv + (vec2(1.0, 0.0) * texsize.zw));\\n  float tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(-1.0, 0.0) * texsize.zw));\\n  float tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(0.0, 1.0) * texsize.zw));\\n  float tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(0.0, -1.0) * texsize.zw));\\n  vec3 tmpvar_6;\\n  tmpvar_6.z = 0.14;\\n  tmpvar_6.x = (tmpvar_3 - tmpvar_4);\\n  tmpvar_6.y = (tmpvar_5 - ((\\n    (texture (sampler_main, uv2_1).xyz + (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4))\\n   + \\n    (((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2) * 0.15)\\n  ) + (\\n    ((texture (sampler_blur3, uv2_1).xyz * scale3) + bias3)\\n   * 0.1)).x);\\n  ret_2 = (0.5 + (0.5 * normalize(tmpvar_6)));\\n  vec2 x_7;\\n  x_7 = (ret_2.xy - 0.5);\\n  ret_2 = (ret_2 * clamp ((\\n    sqrt(dot (x_7, x_7))\\n   * 5.0), 0.0, 1.0));\\n  ret_2 = ret_2.xxy;\\n  ret_2 = (ret_2 + 1.0);\\n  ret_2 = (ret_2 * mix (ret_2, (ret_2 * \\n    (((texture (sampler_blur3, uv).xyz * scale3) + bias3) - ((texture (sampler_blur1, uv).xyz * scale1) + bias1))\\n  ), pow (hue_shader, ret_2)));\\n  ret_2 = (ret_2 * hue_shader);\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = ret_2;\\n  ret = tmpvar_8.xyz;\\n }"}')},1733:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.14,"decay":1,"echo_zoom":1,"wave_mode":6,"wave_thick":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":1.17,"wave_scale":0.797,"wave_smoothing":0,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoomexp":0.9995,"zoom":0.9998,"rot":0.02,"dy":-0.008,"warp":0.01,"sx":1.0098,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"wave_x":0.9,"ob_size":0.005,"ob_a":0.8,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":44.8,"mv_y":38.4,"mv_l":5,"mv_g":0.91,"mv_b":0.71,"mv_a":0},"shapes":[{"baseVals":{"sides":33,"y":0,"rad":0.11039,"ang":3.4054,"r":0,"g2":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"//ang = ang + time*2;\\n\\n//x = x + 0.4*sin(time);\\n//y = y + 0.4*sin(-time*1.4);"},{"baseVals":{"sides":34,"y":0.45,"rad":1.62175,"r":0,"a":0.05,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":54,"x":0,"y":0.6,"rad":0.13478,"r":0.7,"g":0.6,"b":0.7,"r2":0.6,"g2":0.6,"b2":0.6,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"//r = r + 0.3*(0.6*sin(time*1.87) + 0.4*sin(1.98*time));\\n//b = b + 0.3*(0.6*sin(time*1.3434) + 0.4*sin(1.78*time));\\n//g = g + 0.3*(0.6*sin(time*1.9887) + 0.4*sin(1.6*time));\\nr=0;\\nb=0;\\ng=0;\\nr2=r;\\nb2=b;\\ng2=g;"},{"baseVals":{"x":0,"y":0.2,"rad":0.20068,"r":0,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"usedots":1,"r":0.2,"g":0.7,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.3*sin(vol*50);\\nwave_b = wave_b + 0.3*sin(vol*20);\\nwave_g = wave_g + 0.5*sin(vol*35);\\n\\n\\nq8=wave_r;\\nq7=wave_b;\\nq6=wave_g;\\n\\nwr = 0.5+0.4*(0.6*sin(time*1.1) + 0.4*sin(0.8*time));\\nwb = 0.5+0.4*(0.6*sin(time*1.6) + 0.4*sin(0.5*time));\\nwg = 0.5+0.4*(0.6*sin(time*1.34) + 0.4*sin(0.4*time));\\n\\nmonitor=wg;\\nq10=wr;\\nq11=wb;\\nq12=wg;\\nq18 = 0.007*sin(time*0.1);\\nq17 = -0.007*sin(time*0.254);\\nq2=bass_thresh;\\n\\nvol=(bass+mid+treb)*0.25;\\nvol=vol*vol;\\nq3=vol;\\n\\nwarp=0;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 noise3_1;\\n  vec3 tmpvar_2;\\n  tmpvar_2 = (texture (sampler_main, uv).xyz + ((texture (sampler_blur1, uv).xyz * scale1) + bias1));\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (0.5 + ((\\n    (uv - vec2(0.0, 1.0))\\n   - 0.5) * (1.0 + \\n    (tmpvar_2.y * 0.03)\\n  )));\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = (tmpvar_3.x + pow (tmpvar_2.x, 0.0));\\n  tmpvar_4.y = (tmpvar_3.y + pow (tmpvar_2.x, 0.005));\\n  noise3_1 = (texture (sampler_noise_lq, ((\\n    (uv_orig * texsize.xy)\\n   * texsize_noise_lq.zw) + rand_frame.xy)).xyz * fract(q15));\\n  vec3 tmpvar_5;\\n  tmpvar_5 = (noise3_1 * (vec3(1.0, 1.0, 1.0) - vec3(fract(\\n    (q3 * 0.5)\\n  ))));\\n  noise3_1 = tmpvar_5;\\n  vec4 tmpvar_6;\\n  tmpvar_6 = texture (sampler_main, fract(tmpvar_4));\\n  vec3 tmpvar_7;\\n  tmpvar_7.x = q10;\\n  tmpvar_7.y = q11;\\n  tmpvar_7.z = q12;\\n  vec3 tmpvar_8;\\n  tmpvar_8 = mix (tmpvar_5, tmpvar_7, tmpvar_6.xxx);\\n  vec4 tmpvar_9;\\n  tmpvar_9.w = 1.0;\\n  tmpvar_9.xyz = (tmpvar_6.xyz + clamp ((\\n    (tmpvar_6.yzx * tmpvar_8.zxy)\\n   - \\n    (tmpvar_6.zxy * tmpvar_8.yzx)\\n  ), 0.0, 1.0));\\n  ret = tmpvar_9.xyz;\\n }","comp":" shader_body { \\n  vec2 uv1_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2.y = 0.0;\\n  tmpvar_2.x = texsize.z;\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = 0.0;\\n  tmpvar_3.y = texsize.w;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = (texture (sampler_main, (uv - tmpvar_2)).xyz - texture (sampler_main, (uv + tmpvar_2)).xyz).x;\\n  tmpvar_4.y = (texture (sampler_main, (uv - tmpvar_3)).xyz - texture (sampler_main, (uv + tmpvar_3)).xyz).x;\\n  uv1_1 = ((0.3 * cos(\\n    ((uv - 0.5) * 2.0)\\n  )) - tmpvar_4);\\n  float tmpvar_5;\\n  tmpvar_5 = clamp ((0.04 / sqrt(\\n    dot (uv1_1, uv1_1)\\n  )), 0.0, 1.0);\\n  uv1_1 = ((0.3 * cos(\\n    (uv1_1 * 12.0)\\n  )) - (9.0 * tmpvar_4));\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = (tmpvar_5 + ((texture (sampler_main, uv).xyz * 12.0) * vec3(clamp (\\n    (0.04 / sqrt(dot (uv1_1, uv1_1)))\\n  , 0.0, 1.0))));\\n  ret = tmpvar_6.xyz;\\n }"}')},5218:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1.49,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":1,"wave_thick":1,"wave_brighten":0,"brighten":1,"darken":1,"wave_a":1.06,"wave_scale":0.43,"wave_smoothing":0.9,"wave_mystery":-1,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":0.403,"zoomexp":1.0016,"zoom":1.0298,"warp":0.01,"sx":0.9901,"sy":0.97078,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.005,"ob_a":0.05,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0.05,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"sides":54,"textured":1,"rad":0.10406,"tex_zoom":7.09852,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_r":0.1,"border_g":0.1,"border_b":0.1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":44,"textured":1,"rad":0.2047,"tex_zoom":4.81638,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"//r=q8;\\n//b=q7;\\n//g=q6;\\n//r2=q8;\\n//b2=q7;\\n//g2=q6;"},{"baseVals":{"sides":3,"y":0.451,"rad":0.02076,"ang":1.82212,"tex_zoom":2.0882,"r":0,"b":1,"a":0,"r2":1,"b2":1,"a2":0.03,"border_r":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"//r=1-q8;\\n//b=1-q7;\\n//g=1-q6;\\n//r2=1-q8;\\n//b2=1-q7;\\n//g2=1-q6;\\n//x=x-(int(q1*10)*0.05);\\nrad = rad+0.09*q1;"},{"baseVals":{"sides":44,"rad":0.17628,"r":0,"g2":0,"border_r":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"usedots":1,"scaling":0.30299,"r":0,"g":0,"b":0,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"usedots":1,"thick":1,"scaling":0.90529,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.5*(0.6*sin(time*1.3) + 0.4*sin(0.98*time));\\nwave_b = wave_b + 0.5*(0.6*sin(time*1.1) + 0.4*sin(0.78*time));\\nwave_g = wave_g + 0.5*(0.6*sin(time*1.2) + 0.4*sin(0.6*time));\\n\\nq8=wave_r;\\nq7=wave_b;\\nq6=wave_g;\\n\\nwr = 0.5+0.3*(0.6*sin(time*1.8) + 0.4*sin(0.8*time));\\nwb = 0.5+0.3*(0.6*sin(time*1.67) + 0.4*sin(0.5*time));\\nwg = 0.5+0.3*(0.6*sin(time*1.92) + 0.4*sin(0.4*time));\\n\\nq10=wr;\\nq11=wb;\\nq12=wg;\\n\\nvol = 0.1*(vol*9 + (bass_att+mid_att+treb_att)*0.333333);\\nq1=vol;\\nmonitor=vol;\\nmtime=mtime+vol*0.01;\\nq2=mtime*0.25;\\nwave_mystery = wave_mystery + 0.6*vol;\\nsy=sy+vol*0.02;\\nsx=sy;\\n\\ncx = cx + 0.2*sin(mtime);\\ncy = cy - 0.2*sin(mtime*1.2);","pixel_eqs_eel":"rot=log(x+0.1)*(x+0.1);\\nrot=rot*0.1;","warp":" shader_body { \\n  vec3 noise2_1;\\n  vec3 ret_2;\\n  vec4 tmpvar_3;\\n  tmpvar_3 = texture (sampler_main, uv);\\n  vec3 tmpvar_4;\\n  tmpvar_4.x = q8;\\n  tmpvar_4.y = q7;\\n  tmpvar_4.z = q6;\\n  vec3 tmpvar_5;\\n  tmpvar_5.x = q10;\\n  tmpvar_5.y = q11;\\n  tmpvar_5.z = q12;\\n  noise2_1 = (texture (sampler_noise_lq, ((\\n    (uv_orig * texsize.xy)\\n   * texsize_noise_lq.zw) + rand_frame.xy)).xyz * (1.7 * mix (tmpvar_4, tmpvar_5, vec3(\\n    (1.0 - rad)\\n  ))));\\n  ret_2 = (tmpvar_3.xyz + clamp ((\\n    (tmpvar_3.yzx * noise2_1.zxy)\\n   - \\n    (tmpvar_3.zxy * noise2_1.yzx)\\n  ), 0.0, 1.0));\\n  ret_2 = (ret_2 * 0.9);\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = ret_2;\\n  ret = tmpvar_6.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  ret_1 = (texture (sampler_main, uv).xyz * 1.49);\\n  ret_1 = (ret_1 * ret_1);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ret_1;\\n  ret = tmpvar_2.xyz;\\n }"}')},7652:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.985,"echo_zoom":0.997,"wave_mode":5,"wave_thick":1,"modwavealphabyvolume":1,"brighten":1,"wave_a":0.08,"wave_scale":0.588,"wave_smoothing":0,"wave_mystery":-0.4,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1.645,"warpscale":1.5,"zoomexp":0.9999,"zoom":1.0002,"rot":0.006,"warp":0.08927,"wave_r":0.45,"wave_g":0.45,"wave_b":0.45,"ob_size":0,"ob_r":0.3,"ob_g":0.3,"ob_b":0.5,"ob_a":1,"ib_size":0.26,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":12.8,"mv_y":11.4,"mv_l":5,"mv_a":0,"b1n":0.4},"shapes":[{"baseVals":{"sides":34,"thickoutline":1,"rad":0.80781,"ang":2.51327,"tex_ang":3.7698,"tex_zoom":2.7849,"g":1,"b":1,"a":0.5,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"//r = r + 0.400*(0.60*sin(2.22*time) + 0.4*sin(1.888*time));\\n//g = g + 0.300*(0.60*sin(1.90*time) + 0.4*sin(2.100*time));\\n//b = b + 0.400*(0.60*sin(2.12*time) + 0.4*sin(1.98*time));"},{"baseVals":{"sides":34,"rad":0.40254,"tex_ang":2.51312,"tex_zoom":2.06615,"r":0,"a":0.1,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"//r2 = r2 + 0.500*(0.60*sin(1.52*time) + 0.4*sin(1.988*time));\\n//g2 = g2 + 0.500*(0.60*sin(0.70*time) + 0.4*sin(1.300*time));\\n//b2 = b2 + 0.500*(0.60*sin(1.32*time) + 0.4*sin(0.91*time));"},{"baseVals":{"enabled":1,"sides":44,"additive":1,"thickoutline":1,"textured":1,"rad":1.79044,"tex_ang":3.76991,"tex_zoom":0.89576,"r":0.5,"g":0.5,"b":0.5,"a":0.1,"r2":0.5,"g2":0.5,"b2":0.5,"a2":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"r = r + 0.500*(0.60*sin(2.22*time) + 0.4*sin(1.888*time));\\ng = g + 0.500*(0.60*sin(1.90*time) + 0.4*sin(2.100*time));\\nb = b + 0.500*(0.60*sin(2.12*time) + 0.4*sin(1.98*time));\\nr2=r;\\nb2=b;\\ng2=g;\\n"},{"baseVals":{"thickoutline":1,"textured":1,"x":0.2,"y":0.501,"rad":0.5427,"ang":3.1415,"tex_ang":1.5079,"tex_zoom":1.76257,"g":1,"b":1,"r2":0.8,"g2":0.8,"b2":1,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0.5,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ta2 = equal(q2,2)*abs(6*(sin(time))) + (1-equal(q2,2))*ta2;\\nta3 = equal(q2,2)*ta2 + (1-equal(q2,2))*ta3;\\nta = ta + above(ta3,0)*0.05;\\nta3 = ta3-0.5;\\ntex_ang = tex_ang + ta;\\ntex_zoom=tex_zoom+0.05*q1;"}],"waves":[{"baseVals":{"usedots":1,"additive":1,"r":0.5,"g":0.5,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1,"scaling":1.22019,"a":0.1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"//Yndi Halda - We Flood Empty Lakes\\n\\nvol=(bass+mid+treb)*0.25;\\nvol=vol*vol;\\n\\n\\nmtime=mtime+vol*0.01;\\nq3=mtime*0.25;\\n\\nvola = 0.1*(vola*9 + (bass_att+mid_att+treb_att)*0.333333);\\nq1 = vola;\\n\\nq6 = 0.5 + 0.3*sin(-time*2);\\nq7 = 0.5 + 0.3*cos(-time);\\n\\nmonitor = bass_thresh;\\n\\nzoom = zoom + 0.05*vol;\\nwave_x = wave_x + 0.5*sin(mtime*2);\\nwave_y = wave_y + 0.5*sin(-mtime*1.34);","pixel_eqs_eel":"","warp":" shader_body { \\n  float sand_1;\\n  vec3 ret_2;\\n  vec4 tmpvar_3;\\n  tmpvar_3 = texture (sampler_fw_main, uv);\\n  vec4 tmpvar_4;\\n  tmpvar_4 = texture (sampler_blur1, uv);\\n  sand_1 = (dot (texture (sampler_noise_lq, (\\n    ((uv_orig * texsize.xy) * texsize_noise_lq.zw)\\n   + rand_frame.xy)).xyz, abs(\\n    ((((tmpvar_4.xyz * scale1) + bias1) - ((texture (sampler_blur2, uv).xyz * scale2) + bias2)) - ((texture (sampler_blur3, uv).xyz * scale3) + bias3))\\n  )) + ((tmpvar_4.xyz * scale1) + bias1).x);\\n  ret_2 = (tmpvar_3.xyz + (0.1 + (\\n    fract(pow (tmpvar_3.xyz, vec3((sand_1 + sand_1))))\\n   * 2.0)));\\n  ret_2 = (ret_2 * 0.41);\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = ret_2;\\n  ret = tmpvar_5.xyz;\\n }","comp":" shader_body { \\n  vec3 plastic_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (texsize.zw * 4.0);\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = tmpvar_4.x;\\n  tmpvar_6.y = tmpvar_5.x;\\n  vec2 x_7;\\n  x_7 = ((uv - (tmpvar_6 * 4.0)) - vec2(0.5, 0.0));\\n  plastic_1.x = (4.0 / (1.0 + (16.0 * \\n    pow (sqrt(dot (x_7, x_7)), 0.5)\\n  )));\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = tmpvar_4.y;\\n  tmpvar_8.y = tmpvar_5.y;\\n  vec2 x_9;\\n  x_9 = ((uv - (tmpvar_8 * 4.0)) - vec2(0.5, 0.0));\\n  plastic_1.y = (4.0 / (1.0 + (16.0 * \\n    pow (sqrt(dot (x_9, x_9)), 0.5)\\n  )));\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = tmpvar_4.z;\\n  tmpvar_10.y = tmpvar_5.z;\\n  vec2 x_11;\\n  x_11 = ((uv - (tmpvar_10 * 4.0)) - vec2(0.5, 0.0));\\n  plastic_1.z = (4.0 / (1.0 + (16.0 * \\n    pow (sqrt(dot (x_11, x_11)), 0.5)\\n  )));\\n  ret_2 = (plastic_1 * texture (sampler_main, uv).xyz);\\n  ret_2 = (ret_2 * 3.0);\\n  vec4 tmpvar_12;\\n  tmpvar_12.w = 1.0;\\n  tmpvar_12.xyz = ret_2;\\n  ret = tmpvar_12.xyz;\\n }"}')},2834:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.42,"decay":0.95,"echo_zoom":0.997,"echo_alpha":0.5,"echo_orient":1,"wave_mode":5,"wave_dots":1,"wave_thick":1,"wrap":0,"brighten":1,"darken":1,"wave_a":0.711,"wave_scale":0.024,"wave_smoothing":0.54,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoomexp":0.0788,"zoom":0.9415,"rot":-0.04,"warp":0.01,"wave_r":0.29,"wave_g":0.46,"wave_b":0.73,"wave_y":1,"ob_size":0,"ob_r":0.01,"ob_a":0.1,"ib_size":0.05,"mv_x":32,"mv_y":28.8,"mv_l":0.1,"mv_r":0.4,"mv_g":0.4,"mv_b":0.9,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"additive":1,"thickoutline":1,"textured":1,"num_inst":2,"x":0.4,"rad":0.8079,"ang":6.28319,"tex_ang":1.25664,"tex_zoom":0.3346,"r":0.6,"g":0.6,"b":0.6,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"r = r + 0.300*(0.60*sin(1.22*time) + 0.4*sin(0.888*time));\\ng = g + 0.300*(0.60*sin(0.90*time) + 0.4*sin(1.100*time));\\nb = b + 0.300*(0.60*sin(1.12*time) + 0.4*sin(0.98*time));\\n\\nrad = rad + equal(q2,2)*0.5;\\n\\ny = y - 0.1*q6;"},{"baseVals":{"enabled":1,"additive":1,"textured":1,"num_inst":2,"rad":0.33003,"ang":5.6548,"tex_ang":1.2565,"tex_zoom":0.4083,"r":0.6,"g":0.6,"b":0.6,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"r = r + 0.300*(0.60*sin(2.52*time) + 0.4*sin(2.588*time));\\ng = g + 0.300*(0.60*sin(2.70*time) + 0.4*sin(2.700*time));\\nb = b + 0.300*(0.60*sin(2.32*time) + 0.4*sin(2.180*time));\\n\\nrad = rad + equal(q2,2)*0.5;\\n\\ny = y - 0.15*q6;\\n"},{"baseVals":{"enabled":1,"additive":1,"textured":1,"num_inst":2,"x":0.4,"y":0.4,"rad":0.33,"ang":4.3982,"tex_ang":1.2565,"tex_zoom":0.40836,"r":0.6,"g":0.6,"b":0.6,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"r = r + 0.300*(0.60*sin(3.22*time) + 0.4*sin(3.888*time));\\ng = g + 0.300*(0.60*sin(3.90*time) + 0.4*sin(3.100*time));\\nb = b + 0.300*(0.60*sin(3.12*time) + 0.4*sin(3.980*time));\\n\\nrad = rad + equal(q2,2)*0.5;\\n\\ny = y - 0.1*q6;"},{"baseVals":{"enabled":1,"additive":1,"textured":1,"y":0.4,"rad":0.33,"ang":3.7699,"tex_zoom":0.40836,"r":0.6,"g":0.6,"b":0.6,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"r = r + 0.300*(0.60*sin(4.22*time) + 0.4*sin(4.888*time));\\ng = g + 0.300*(0.60*sin(4.90*time) + 0.4*sin(4.100*time));\\nb = b + 0.300*(0.60*sin(4.12*time) + 0.4*sin(4.980*time));\\n\\nrad = rad + equal(q2,2)*1;\\n\\ny = y - 0.1*q6;\\n"}],"waves":[{"baseVals":{"samples":256,"usedots":1,"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"y = 0.2 + 0.01*int(value1*50+10);\\nx = sample;"},{"baseVals":{"samples":82,"usedots":1,"thick":1,"scaling":4.02709,"smoothing":0,"a":0.3,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"q8 = 1;","frame_eqs_eel":"bass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.91+1.3);\\n\\n//ob_r = 0.1 + 0.1*(0.6*sin(vol*time*8) + 0.4*sin(1.2*time));\\n//ob_b = 0.1 + 0.1*(0.6*sin(vol*time*8) + 0.4*sin(0.8*time));\\n//ob_g = 0.1 + 0.1*(0.6*sin(vol*time*8) + 0.4*sin(1.1*time));\\n\\n\\nvol = 0.1*(vol*9 + (bass_att+mid_att+treb_att)*0.333333);\\n\\nq1 = vol;\\nq2 = bass_thresh;\\n\\ntemp = temp + (above(vol,1.1)*1.5 + (below(vol,1.1)*1));\\nq8 = temp;\\n\\n//cx = cx + 0.4*sin(temp*0.15);\\n\\n\\nq3 = q3 + below(vol,1.1)*(-0.5) + above(vol,1.1)*2;\\n\\nq3=1; //comment out to get some jerky movement that goes with the beat better\\n      //maybe someone can rig up a solution that\'s not so jerky... =2 is interesting too\\n\\ncx = cx + 0.4*sin(q3*(sin(q8/(8*q3))));\\nq6 = cx;\\n\\n//30 fps max to avoid crack bird!","pixel_eqs_eel":"cy = cy - cos(rad*q1*(sin(time*0.6)));\\n\\ncx = cx + 1.5*sin(rad*q3*(sin(q8/(8*q3))));","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (texture (sampler_fc_main, uv).xyz * 0.95);\\n  ret = tmpvar_1.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = (1.0 - uv.x);\\n  tmpvar_2.y = uv.y;\\n  ret_1 = (texture (sampler_main, tmpvar_2).xyz + texture (sampler_main, uv).xyz);\\n  ret_1 = (ret_1 * 1.42);\\n  ret_1 = (ret_1 * ret_1);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_1;\\n  ret = tmpvar_3.xyz;\\n }"}')},2940:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.925,"echo_zoom":1.007,"echo_orient":3,"wave_mode":7,"additivewave":1,"wave_brighten":0,"wrap":0,"brighten":1,"darken":1,"solarize":1,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"fshader":1,"zoom":0.99951,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.005,"ob_a":1,"ib_size":0.26,"mv_x":64,"mv_y":1.248,"mv_l":5,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"usedots":1},"init_eqs_eel":"t1=0.5;\\nt2=0.5;","frame_eqs_eel":"","point_eqs_eel":"//x = a*sin(b*y) - z*cos(c*x); \\nx = 1.4*sin(q2*t2) - t3*cos(0.5*t1);\\n\\n//y = z*sin(d*x) - cos(e*y); \\ny = t3*sin(-q1*t1) - cos(-0.5*t2);\\n\\n//z = f*sin(x);\\nz = 1*sin(t1);\\n\\n\\n//transmit the x,y,z positions to the next point\\nt1=x;\\nt2=y;\\nt3=z;\\n\\n//adjust the scale and position of the entire attractor *after* we passed xyz to the next point\\nx = x*0.4+0.45;\\ny = y*0.4+0.8;\\n\\nr = q8;\\nb = q7;\\ng = q6;"},{"baseVals":{"a":0.07,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"\\nx = 1.4*sin(q2*t2) - t3*cos(0.5*t1);\\ny = t3*sin(-q1*t1) - cos(-0.5*t2);\\nz = 1*sin(t1);\\n\\nt1=x;\\nt2=y;\\nt3=z;\\n\\nx = x*0.4+0.45;\\ny = y*0.4+0.8;\\n\\n\\nr = q8;\\nb = q7;\\ng = q6;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"//keep q1 negative, that\'s where the interesting shape is\\nq1= -abs(1*sin(time*0.3));\\nq2= 1*sin(time*0.45);\\nq3= 1*cos(time*0.6);\\n\\n\\nwave_r = wave_r + 0.45*(0.6*sin(time*1.3) + 0.4*sin(0.98*time));\\nwave_b = wave_b + 0.45*(0.6*sin(time*1.1) + 0.4*sin(0.78*time));\\nwave_g = wave_g + 0.45*(0.6*sin(time*1.2) + 0.4*sin(0.6*time));\\n\\n//q8=wave_r;\\n//q7=wave_g;\\n//q6=wave_b;\\nq8=1;\\nq7=1;\\nq6=1;\\n\\nwarp = 0;\\nzoom = 1;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = (texsize.zw * 2.0);\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = dot (((\\n    (texture (sampler_blur1, (uv + (vec2(1.0, 0.0) * tmpvar_1))).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (uv - (vec2(1.0, 0.0) * tmpvar_1))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  tmpvar_2.y = dot (((\\n    (texture (sampler_blur1, (uv + (vec2(0.0, 1.0) * tmpvar_1))).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (uv - (vec2(0.0, 1.0) * tmpvar_1))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = (texture (sampler_fc_main, (uv + (\\n    (tmpvar_2 * texsize.zw)\\n   * 6.0))).xyz + ((\\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 1.2)) + rand_frame.xy)).xxx - 0.5)\\n   * 0.04) - 0.008));\\n  ret = tmpvar_3.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 6.0);\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = dot (tmpvar_3, vec3(0.32, 0.49, 0.29));\\n  tmpvar_5.y = dot (tmpvar_4, vec3(0.32, 0.49, 0.29));\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv - (0.25 * tmpvar_5));\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = dot (tmpvar_3, vec3(0.32, 0.49, 0.29));\\n  tmpvar_7.y = dot (tmpvar_4, vec3(0.32, 0.49, 0.29));\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (uv + (0.25 * tmpvar_7));\\n  ret_1 = ((0.8 * (\\n    (texture (sampler_blur3, tmpvar_6).xyz * scale3)\\n   + bias3)) - ((texture (sampler_blur1, tmpvar_6).xyz * scale1) + bias1));\\n  ret_1 = (ret_1 + (0.6 * (\\n    (texture (sampler_blur1, uv).xyz * scale1)\\n   + bias1)));\\n  ret_1 = (ret_1 - ((\\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur1, tmpvar_8).xyz * scale1)\\n   + bias1)));\\n  ret_1 = (ret_1 + ((1.2 * texture (sampler_main, tmpvar_8).xyz) + (0.15 * \\n    ((texture (sampler_blur1, tmpvar_8).xyz * scale1) + bias1)\\n  )));\\n  ret_1 = (ret_1 + 1.0);\\n  vec3 tmpvar_9;\\n  tmpvar_9.xy = (uv * 1.5);\\n  tmpvar_9.z = (0.1 * time);\\n  ret_1 = (vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))) - (0.2 * dot (texture (sampler_noisevol_lq, tmpvar_9), vec4(0.32, 0.49, 0.29, 0.0))));\\n  ret_1 = (mix (ret_1, (\\n    (0.75 * ret_1)\\n   * \\n    dot ((((0.6 * \\n      ((texture (sampler_blur3, tmpvar_6).xyz * scale3) + bias3)\\n    ) - (0.7 * texture (sampler_main, uv).xyz)) - (0.3 * (\\n      (texture (sampler_blur1, tmpvar_8).xyz * scale1)\\n     + bias1))), vec3(0.32, 0.49, 0.29))\\n  ), pow (hue_shader, ret_1)) * 0.8);\\n  ret_1 = (ret_1 * ret_1);\\n  vec3 tmpvar_10;\\n  tmpvar_10 = sqrt(ret_1);\\n  ret_1 = tmpvar_10;\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 1.0;\\n  tmpvar_11.xyz = tmpvar_10;\\n  ret = tmpvar_11.xyz;\\n }"}')},5148:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1.14,"decay":1,"echo_zoom":1,"wave_mode":6,"wave_thick":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":1.17,"wave_scale":0.797,"wave_smoothing":0,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoomexp":0.9995,"zoom":0.9998,"rot":0.02,"dy":-0.008,"warp":0.01,"sx":1.0098,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"wave_x":0.9,"ob_size":0.005,"ob_a":0.8,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":44.8,"mv_y":38.4,"mv_l":5,"mv_g":0.91,"mv_b":0.71,"mv_a":0},"shapes":[{"baseVals":{"sides":33,"y":0,"rad":0.11039,"ang":3.4054,"r":0,"g2":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"//ang = ang + time*2;\\n\\n//x = x + 0.4*sin(time);\\n//y = y + 0.4*sin(-time*1.4);"},{"baseVals":{"sides":34,"y":0.45,"rad":1.62175,"r":0,"a":0.05,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":54,"x":0,"y":0.6,"rad":0.13478,"r":0.7,"g":0.6,"b":0.7,"r2":0.6,"g2":0.6,"b2":0.6,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"//r = r + 0.3*(0.6*sin(time*1.87) + 0.4*sin(1.98*time));\\n//b = b + 0.3*(0.6*sin(time*1.3434) + 0.4*sin(1.78*time));\\n//g = g + 0.3*(0.6*sin(time*1.9887) + 0.4*sin(1.6*time));\\nr=0;\\nb=0;\\ng=0;\\nr2=r;\\nb2=b;\\ng2=g;"},{"baseVals":{"x":0,"y":0.2,"rad":0.20068,"r":0,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"usedots":1,"r":0.2,"g":0.7,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.3*sin(vol*50);\\nwave_b = wave_b + 0.3*sin(vol*20);\\nwave_g = wave_g + 0.5*sin(vol*35);\\n\\n\\nq8=wave_r;\\nq7=wave_b;\\nq6=wave_g;\\n\\nwr = 0.5+0.4*(0.6*sin(time*1.1) + 0.4*sin(0.8*time));\\nwb = 0.5+0.4*(0.6*sin(time*1.6) + 0.4*sin(0.5*time));\\nwg = 0.5+0.4*(0.6*sin(time*1.34) + 0.4*sin(0.4*time));\\n\\nmonitor=wg;\\nq10=wr;\\nq11=wb;\\nq12=wg;\\nq18 = 0.007*sin(time*0.1);\\nq17 = -0.007*sin(time*0.254);\\nq2=bass_thresh;\\n\\nvol=(bass+mid+treb)*0.25;\\nvol=vol*vol;\\nq3=vol;\\n\\nwarp=0;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 noise3_1;\\n  vec3 tmpvar_2;\\n  tmpvar_2 = (texture (sampler_main, uv).xyz + ((texture (sampler_blur1, uv).xyz * scale1) + bias1));\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (0.5 + ((\\n    (uv - vec2(0.0, 1.0))\\n   - 0.5) * (1.0 + \\n    (tmpvar_2.y * 0.03)\\n  )));\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = (tmpvar_3.x + pow (tmpvar_2.x, 0.0));\\n  tmpvar_4.y = (tmpvar_3.y + pow (tmpvar_2.x, 0.005));\\n  noise3_1 = (texture (sampler_noise_lq, ((\\n    (uv_orig * texsize.xy)\\n   * texsize_noise_lq.zw) + rand_frame.xy)).xyz * fract(q15));\\n  vec3 tmpvar_5;\\n  tmpvar_5 = (noise3_1 * (vec3(1.0, 1.0, 1.0) - vec3(fract(\\n    (q3 * 0.5)\\n  ))));\\n  noise3_1 = tmpvar_5;\\n  vec4 tmpvar_6;\\n  tmpvar_6 = texture (sampler_main, fract(tmpvar_4));\\n  vec3 tmpvar_7;\\n  tmpvar_7.x = q10;\\n  tmpvar_7.y = q11;\\n  tmpvar_7.z = q12;\\n  vec3 tmpvar_8;\\n  tmpvar_8 = mix (tmpvar_5, tmpvar_7, tmpvar_6.xxx);\\n  vec4 tmpvar_9;\\n  tmpvar_9.w = 1.0;\\n  tmpvar_9.xyz = (tmpvar_6.xyz + clamp ((\\n    (tmpvar_6.yzx * tmpvar_8.zxy)\\n   - \\n    (tmpvar_6.zxy * tmpvar_8.yzx)\\n  ), 0.0, 1.0));\\n  ret = tmpvar_9.xyz;\\n }","comp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (texture (sampler_main, uv).xyz + ((texture (sampler_blur2, uv).xyz * scale2) + bias2));\\n  ret = tmpvar_1.xyz;\\n }"}')},1523:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.49,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"wave_mode":1,"wave_thick":1,"wave_brighten":0,"brighten":1,"darken":1,"wave_a":1.06,"wave_scale":0.43,"wave_smoothing":0.9,"wave_mystery":-1,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":0.403,"zoomexp":1.0016,"zoom":1.0298,"warp":0.01,"sx":0.9901,"sy":0.97078,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.005,"ob_a":0.05,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0.05,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"sides":54,"textured":1,"rad":0.10406,"tex_zoom":7.09852,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_r":0.1,"border_g":0.1,"border_b":0.1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":44,"textured":1,"rad":0.2047,"tex_zoom":4.81638,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"//r=q8;\\n//b=q7;\\n//g=q6;\\n//r2=q8;\\n//b2=q7;\\n//g2=q6;"},{"baseVals":{"sides":3,"y":0.451,"rad":0.02076,"ang":1.82212,"tex_zoom":2.0882,"r":0,"b":1,"a":0,"r2":1,"b2":1,"a2":0.03,"border_r":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"//r=1-q8;\\n//b=1-q7;\\n//g=1-q6;\\n//r2=1-q8;\\n//b2=1-q7;\\n//g2=1-q6;\\n//x=x-(int(q1*10)*0.05);\\nrad = rad+0.09*q1;"},{"baseVals":{"sides":44,"rad":0.17628,"r":0,"g2":0,"border_r":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"usedots":1,"scaling":0.30299,"r":0,"g":0,"b":0,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"usedots":1,"thick":1,"scaling":0.90529,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.5*(0.6*sin(time*1.3) + 0.4*sin(0.98*time));\\nwave_b = wave_b + 0.5*(0.6*sin(time*1.1) + 0.4*sin(0.78*time));\\nwave_g = wave_g + 0.5*(0.6*sin(time*1.2) + 0.4*sin(0.6*time));\\n\\nq8=wave_r;\\nq7=wave_b;\\nq6=wave_g;\\n\\nwr = 0.5+0.3*(0.6*sin(time*1.8) + 0.4*sin(0.8*time));\\nwb = 0.5+0.3*(0.6*sin(time*1.67) + 0.4*sin(0.5*time));\\nwg = 0.5+0.3*(0.6*sin(time*1.92) + 0.4*sin(0.4*time));\\n\\nq10=wr;\\nq11=wb;\\nq12=wg;\\n\\nvol = 0.1*(vol*9 + (bass_att+mid_att+treb_att)*0.333333);\\nq1=vol;\\nmonitor=vol;\\nmtime=mtime+vol*0.01;\\nq2=mtime*0.25;\\nwave_mystery = wave_mystery + 0.6*vol;\\nsy=sy+vol*0.02;\\nsx=sy;\\n\\ncx = cx + 0.2*sin(mtime);\\ncy = cy - 0.2*sin(mtime*1.2);","pixel_eqs_eel":"rot=log(x+0.1)*(x+0.1);\\nrot=rot*0.1;","warp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 1.5)) + rand_frame.xy);\\n  vec4 tmpvar_2;\\n  tmpvar_2.zw = vec2(0.0, 0.0);\\n  tmpvar_2.xy = uv;\\n  vec4 tmpvar_3;\\n  tmpvar_3.zw = vec2(0.0, 0.0);\\n  tmpvar_3.xy = uv_orig;\\n  vec4 tmpvar_4;\\n  tmpvar_4 = mix (tmpvar_2, tmpvar_3, ((1.3 - rad) + (\\n    (texture (sampler_noise_lq, tmpvar_1) - 0.5)\\n   * 0.15)));\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = ((texture (sampler_main, clamp (\\n    (tmpvar_4.xy - (((vec2(0.0, 64.0) * texsize.zw) * dot (\\n      (texture (sampler_main, clamp (tmpvar_4.xy, 0.0, 1.0)).xyz - 0.35)\\n    , vec3(0.32, 0.49, 0.29))) * (dot (texture (sampler_main, \\n      clamp (tmpvar_4.xy, 0.0, 1.0)\\n    ).xyz, vec3(0.32, 0.49, 0.29)) - 0.4)))\\n  , 0.0, 1.0)).xyz - 0.0011) + ((texture (sampler_noise_lq, tmpvar_1) - 0.5) * 0.0038).xyz);\\n  ret = tmpvar_5.xyz;\\n }","comp":" shader_body { \\n  vec2 uv1_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2.y = 0.0;\\n  tmpvar_2.x = texsize.z;\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = 0.0;\\n  tmpvar_3.y = texsize.w;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = (texture (sampler_main, (uv - tmpvar_2)).xyz - texture (sampler_main, (uv + tmpvar_2)).xyz).x;\\n  tmpvar_4.y = (texture (sampler_main, (uv - tmpvar_3)).xyz - texture (sampler_main, (uv + tmpvar_3)).xyz).x;\\n  uv1_1 = ((0.3 * cos(\\n    ((uv - 0.5) * 2.0)\\n  )) - tmpvar_4);\\n  float tmpvar_5;\\n  tmpvar_5 = clamp ((0.04 / sqrt(\\n    dot (uv1_1, uv1_1)\\n  )), 0.0, 1.0);\\n  uv1_1 = ((0.3 * cos(\\n    (uv1_1 * 12.0)\\n  )) - (9.0 * tmpvar_4));\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = (tmpvar_5 + ((texture (sampler_main, uv).xyz * 12.0) * vec3(clamp (\\n    (0.04 / sqrt(dot (uv1_1, uv1_1)))\\n  , 0.0, 1.0))));\\n  ret = tmpvar_6.xyz;\\n }"}')},92:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":4,"decay":0.7,"wave_mode":2,"wave_dots":1,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":0.012,"wave_smoothing":0.9,"warpscale":1.331,"zoomexp":1.86831,"zoom":1.0002,"warp":0.01,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"ob_size":0.005,"ob_a":1,"ib_size":0.26,"mv_x":0,"mv_y":43.2,"mv_l":1,"mv_g":0.91,"mv_b":0.71,"mv_a":0},"shapes":[{"baseVals":{"sides":5,"textured":1,"rad":1.06779,"ang":0.75398,"tex_zoom":0.77977,"g":1,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ang=sin(q1*0.15);\\nx=sin(q1*0.5) * 0.05 + 0.5;\\ny=cos(q1*0.63)* 0.05 + 0.5"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":5,"additive":1,"rad":0.03809,"g":1,"b":1,"g2":0.6,"b2":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"tm=q1;\\n\\nxp=0;\\nyp=0.1;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2 )*0.5 +0.5;\\n\\nxq=xp;\\nsinang=sin(ang);cosang=cos(ang);\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3.1 + 0.5);\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2.3)*1.75 - 1.05;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp*sinang + zp*cosang;\\nyq=yp;\\nzq=xp*cosang - zp*sinang;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq;\\nyp=yq*cosang - zq*sinang;\\nzp=yq*sinang + zq*cosang;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\n\\n"}],"waves":[{"baseVals":{"enabled":1,"r":0.1,"b":0.7},"init_eqs_eel":"","frame_eqs_eel":"t1=sin(time)*0.5+0.5;\\nt2=sin(time+2.1)*0.5+0.5;\\nt3=sin(time+4.2)*0.5+0.5;\\n\\nt4=sin(time+1.1)*0.5+0.5;\\nt5=sin(time+3.1)*0.5+0.5;\\nt6=sin(time+5.2)*0.5+0.5;","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2 )*0.5 +0.5;\\n\\nxq=xp;\\nsinang=sin(ang);cosang=cos(ang);\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3.1 + 0.5);\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2.3)*1.75 - 1.05;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp*sinang + zp*cosang;\\nyq=yp;\\nzq=xp*cosang - zp*sinang;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq;\\nyp=yq*cosang - zq*sinang;\\nzp=yq*sinang + zq*cosang;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=if( equal(q8,1) , (1-sample) , sample);\\na=a*a;\\n\\nb=b+pow(1-sample,2)*0.3;\\n\\n\\n\\nr1=t1;\\ng1=t2;\\nb1=t3;\\nr2=t4;\\ng2=t5;\\nb2=t6;\\n\\nr=r1*flip + r2*(1-flip);\\ng=g1*flip + g2*(1-flip);\\nb=b1*flip + b2*(1-flip);"},{"baseVals":{"enabled":1,"r":0.2,"b":0.6},"init_eqs_eel":"","frame_eqs_eel":"t1=sin(time)*0.5+0.5;\\nt2=sin(time+2.1)*0.5+0.5;\\nt3=sin(time+4.2)*0.5+0.5;\\n\\nt4=sin(time+1.1)*0.5+0.5;\\nt5=sin(time+3.1)*0.5+0.5;\\nt6=sin(time+5.2)*0.5+0.5;","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2 +0.1;\\nyp=-yp;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2)*0.5 +0.5;\\n\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3.1 + 0.5);\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2.3)*1.75 - 1.05;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp*sinang + zp*cosang;\\nyq=yp;\\nzq=xp*cosang - zp*sinang;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq;\\nyp=yq*cosang - zq*sinang;\\nzp=yq*sinang + zq*cosang;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=if( equal(q8,1) , (1-sample) , sample);\\na=a*a;\\n\\n\\nb=b+pow(1-sample,2)*0.3;\\n\\nr1=t1;\\ng1=t2;\\nb1=t3;\\nr2=t4;\\ng2=t5;\\nb2=t6;\\n\\nr=r1*flip + r2*(1-flip);\\ng=g1*flip + g2*(1-flip);\\nb=b1*flip + b2*(1-flip);"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1,"g":0.6,"b":0.1},"init_eqs_eel":"","frame_eqs_eel":"t1=sin(time)*0.5+0.5;\\nt2=sin(time+2.1)*0.5+0.5;\\nt3=sin(time+4.2)*0.5+0.5;\\n\\nt4=sin(time+1.1)*0.5+0.5;\\nt5=sin(time+3.1)*0.5+0.5;\\nt6=sin(time+5.2)*0.5+0.5;\\n\\n\\nt8= int( sin(time*2)*2 + 3);","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2)*0.5 +0.5;\\n\\nxq=xp;\\nsinang=sin(ang);cosang=cos(ang);\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8 + 1;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3.1 + 0.5);\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2.3)*1.75 - 1.05;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp*sinang + zp*cosang;\\nyq=yp;\\nzq=xp*cosang - zp*sinang;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq;\\nyp=yq*cosang - zq*sinang;\\nzp=yq*sinang + zq*cosang;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\na=if( equal(q8,1) , (1-sample) , sample);\\n\\n\\na=a* above( sin(tm*128*t8) , 0 );\\n\\n\\nr=t4;\\ng=t5;\\nb=t6;\\n"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1,"g":0.3,"b":0.1},"init_eqs_eel":"","frame_eqs_eel":"t1=sin(time)*0.5+0.5;\\nt2=sin(time+2.1)*0.5+0.5;\\nt3=sin(time+4.2)*0.5+0.5;\\n\\nt4=sin(time+1.1)*0.5+0.5;\\nt5=sin(time+3.1)*0.5+0.5;\\nt6=sin(time+5.2)*0.5+0.5;\\n\\n\\nt8= int( sin(time*2)*2 + 3);","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2 +0.1;\\nyp=-yp;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2)*0.5 +0.5;\\n\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8+1;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3.1 + 0.5);\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2.3)*1.75 - 1.05;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp*sinang + zp*cosang;\\nyq=yp;\\nzq=xp*cosang - zp*sinang;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq;\\nyp=yq*cosang - zq*sinang;\\nzp=yq*sinang + zq*cosang;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=if( equal(q8,1) , (1-sample) , sample);\\na=a*a;\\n\\na=a* above( sin(tm*128*t8) , 0 );\\n\\n\\nr=t4;\\ng=t5;\\nb=t6;"}],"init_eqs_eel":"","frame_eqs_eel":"wave_a = 0;\\n//decay = 0.1;\\n\\nvol = (bass_att + treb_att + mid_att)*.333333;\\n\\ntic = min(time-tin,.1);\\ntin = time;\\n\\nra = 10;\\ntreb_avg = tic*(treb_avg*(1/tic - ra) + ra*treb);\\nmid_avg = tic*(mid_avg*(1/tic - ra) + ra*mid);\\nbass_avg = tic*(bass_avg*(1/tic - ra) + ra*bass);\\nvav = tic*(vav*(1/tic - ra) + ra*(bass+treb+mid)*.33333);\\n\\ntt = tt + tic*treb_avg;\\nmt = mt + tic*mid_avg;\\nbt = bt + tic*bass_avg;\\n\\nsp = abs(vav - slide)*.1;\\nslide = if(above(slide,vav),slide-tic*sp,slide+tic*sp) + (1-toc)*vav;\\ntoc = 1;\\n\\nvt = vt + tic*slide;\\n\\nq1 = bt;\\nq2 = mt;\\nq3 = tt;\\nq4 = slide*1;\\nq5 = vt*.05 + 150;\\n\\nq6 = .01;//tic;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  vec3 tmpvar_2;\\n  tmpvar_2 = (texture (sampler_noise_lq, ((\\n    ((texsize.xy * texsize_noise_lq.zw).x * uv)\\n   / 2.0) + q23)) + 1.0).xyz;\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur1, uv).xyz * scale1) + bias1) - 0.3);\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = (0.3 * tmpvar_3.x);\\n  tmpvar_4.y = tmpvar_3.y;\\n  ret_1 = ((-0.4 * (\\n    ((texture (sampler_blur1, ((uv / 4.0) + (0.4 * tmpvar_4))).xyz * scale1) + bias1)\\n   - \\n    (tmpvar_2 * 0.1)\\n  )) + (texture (sampler_main, (uv + \\n    (tmpvar_3 * 0.01)\\n  .xy)).xyz + (tmpvar_2 * 0.1)));\\n  float tmpvar_5;\\n  tmpvar_5 = (1.0 - ((0.01 * q28) * (q28 * rad)));\\n  ret_1 = (ret_1 * (0.98 * (tmpvar_5 * tmpvar_5)));\\n  ret_1 = (ret_1 - 0.04);\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = ret_1;\\n  ret = tmpvar_6.xyz;\\n }","comp":" shader_body { \\n  vec3 tmpvar_1;\\n  tmpvar_1 = texture (sampler_main, uv).xxx;\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ((pow (\\n    mix (vec3((((texture (sampler_blur1, uv).xyz * scale1) + bias1).x + ((texture (sampler_blur3, uv).xyz * scale3) + bias3).x)), tmpvar_1, tmpvar_1)\\n  , vec3(0.3, 0.9, 8.0)) * 1.25) - 0.25);\\n  ret = tmpvar_2.xyz;\\n }"}')},7958:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.5,"echo_zoom":1,"echo_orient":3,"wave_mode":7,"wave_brighten":0,"wave_a":1.105,"wave_scale":100,"wave_smoothing":0.18,"warpscale":1.331,"zoom":0.99951,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"wave_x":0.95,"ob_size":0,"ob_r":0.01,"ob_a":1,"ib_size":0,"ib_a":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":32,"additive":1,"thickoutline":1,"num_inst":33,"r":0,"g":0.5,"g2":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"trans = rand(int(q30))/15+instance-instance;\\ntrans2 = rand(int(q30))/15+instance-instance;\\ntrans3 = rand(int(q30))/15+instance-instance;\\na = trans;\\n\\nx = .5 + int(rand(15))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\\ny = .5 + int(rand(15))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\\nrad = .09 + rand(int(q30))/15+instance-instance;\\nr=rand(q30)*.1+instance-instance;\\ng=rand(q30)*.1+instance-instance;\\nb=rand(q30)*.1+instance-instance;\\nr2=rand(q30)*.1+instance-instance;\\ng2=rand(q30)*.1+instance-instance;\\nb2=rand(q30)*.1+instance-instance;\\nborder_r=rand(q30)*.1+instance-instance;\\nborder_g=rand(q30)*.1+instance-instance;\\nborder_b=rand(q30)*.1+instance-instance;"},{"baseVals":{"enabled":1,"sides":3,"thickoutline":1,"textured":1,"num_inst":311,"rad":0.01,"tex_ang":0.62832,"r":0,"g2":0,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*tan(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=1-mx;\\ny=1-my;\\n\\nang=(sin(time*.35)+1)*3;\\n//a=(above(bass+mid+treb,.8));\\npi23=4*asin(1)*.333333333;\\nt1=bass+mid+treb;"}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"chng=sin(time*.5);\\ncthr=.9999;\\nmq21=if(above(chng,cthr),rand(3),mq21);\\nmq22=if(above(chng,cthr),rand(3),mq22);\\nmq23=if(above(chng,cthr),rand(3),mq23);\\nmq24=if(above(chng,cthr),rand(2),mq24);\\nmq25=if(above(chng,cthr),rand(2),mq25);\\nmq26=if(above(chng,cthr),rand(2),mq26);\\nmq27=if(above(chng,cthr),rand(1),mq27);\\nmq28=if(above(chng,cthr),rand(1),mq28);\\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\\nmq31=if(above(chng,cthr),rand(1)*.3,mq31);\\nmonitor=chng;\\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\\nq27=mq27;q28=mq28;q29=mq29;q31=mq31;\\n\\nmonitor=mq1;\\nvol=bass+treb+mid;\\natime=atime+vol;\\nq11=.4+sin(atime*.006        )*.4;\\nq12=.4+cos(atime*.00613828348)*.4;\\nq13=.4+sin(atime*.00598593455)*.4;\\nmonitor=q13;\\n\\nwave_a = 0;\\n\\n\\n\\n//Thanks to Zylot for rainbow generator\\ncounter1 = if(equal(counter2,1),if(equal(counter1,1),0,counter1+.2),1);\\ncounter2 = if(equal(counter1,1),if(equal(counter2,1),0,counter2+.2),1);\\ncdelay1 = if(equal(cdelay2,1),1,if(equal(colorcounter%2,1),if(equal(counter1,1),2 ,0), if(equal(counter2,1),2,0)));\\ncdelay2 = if(equal(cdelay1,2),1,0);\\ncolorcounter = if(above(colorcounter,7),0,if(equal(cdelay1,1),colorcounter+1,colorcounter));\\nib_rr = .5*if(equal(colorcounter,1),1, if(equal(colorcounter,2),1, if(equal(colorcounter,3),1, if(equal(colorcounter,4),sin(counter2+2.1), if(equal(colorcounter,5),0, if(equal(colorcounter,6),0,sin(counter1)))))));\\nib_gg = .5*if(equal(colorcounter,1),0, if(equal(colorcounter,2),sin(counter2*.5), if(equal(colorcounter,3),sin((counter1+1.75)*.4), if(equal(colorcounter,4),1, if(equal(colorcounter,5),1, if(equal(colorcounter,6),sin(counter2+2),0))))));\\nib_bb = if(equal(colorcounter,1),sin(counter1+2.1), if(equal(colorcounter,2),0, if(equal(colorcounter,3),0, if(equal(colorcounter,4),0, if(equal(colorcounter,5),sin(counter1), if(equal(colorcounter,6),1,1))))));\\n\\n\\n\\n\\n\\nib_r=tan(time*24);\\nib_r=min(ib_r,1);\\nib_r=max(ib_r,0);\\nib_g=tan(time*24+3.14);\\nib_g=min(ib_g,1);\\nib_g=max(ib_g,0);\\nib_b=tan(time*24+6.28);\\nib_b=min(ib_b,1);\\nib_b=max(ib_b,0);\\n\\nob_r=ib_r-0.5;\\nob_g=ib_g-0.5;\\nob_b=ib_b-0.5;\\nq1=ib_rr;\\nq2=1-ib_gg;\\nq3=ib_bb;\\n\\n\\n\\ndecay = 1;\\n\\n\\n//echo_orient=((bass_att+mid_att+treb_att)/3)*3;\\n//solarize=above(0.5,bass);\\n//darken=above(0.4,treb);\\n\\nmusictime=musictime+(mid*mid*mid)*0.01*(75/fps);\\n\\nxpos=sin(musictime*0.6)*0.5;\\nypos=sin(musictime*0.4)*0.5;\\nq4=xpos;\\nq5=ypos;\\n\\n\\n//invert=above(sin(time),0.5);\\nq30=bass+treb+mid;","pixel_eqs_eel":"//flip= (-2 * above(sin(time),-0.9) )+1;\\n//var=(bass+mid+treb)/3;\\n//rot=((ang&rad/rad)/(var*20))/10;\\n//sx=.99-(var*0.01);\\n//cx=var*0.1*(ang/12);\\n//sy=sx;\\n\\nzoom=.91;\\n\\ncx=0.5+q4;\\ncy=0.5-q5;\\nrd=sqrt( sqr( (x-0.5-q4)*2) + sqr( (y-0.5+q5)*1.5 ) );\\n//zm=(1.1-(rd/4));\\nzm=1.00;\\n\\nag=atan( (y-0.5+q5)/(x-0.5-q4) );\\nstar=(sin(ag/5)*(2-rd)+pow((tan(rd*6.28*32)*0.5+0.5),2)*0.1)+(rd/3);\\nstar=min(star,8);star=max(star,-8);\\nzm=zm+star/20;\\nsx=zm;\\nsy=zm;\\nrot=above(rd,0.7)/(rd+7)*(bass_att*0.1)/rd;\\ndx=sin(x*50)*(bass*0.005)*ag;\\ndy=cos(y*50)*(bass*0.005)*ag;\\n\\nb1a=mid*0.13;\\nb1b=(bass+mid+treb)*0.12;\\nb1=b1b *1.1*rd*rd*rd*rd;\\nzoom=0.97+(b1*.1);","warp":" shader_body { \\n  vec3 ret_1;\\n  ret_1 = texture (sampler_main, uv).xyz;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv.xyy) * (\\n    (q27 * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\\n  if (((ret_1.x > (q21 * q13)) && (ret_1.x <= (q24 * q11)))) {\\n    ret_1.y = (ret_1.y + (tmpvar_2.x * 0.5));\\n  };\\n  if (((ret_1.y > (q22 * q11)) && (ret_1.y <= (q25 * q12)))) {\\n    ret_1.z = (ret_1.z + (tmpvar_2.y * 0.5));\\n  };\\n  if (((ret_1.z > (q23 * q12)) && (ret_1.z <= (q26 * q13)))) {\\n    ret_1.x = (ret_1.x + (tmpvar_2.z * 0.5));\\n  };\\n  ret_1 = (ret_1 + ((ret_1 - \\n    ((texture (sampler_blur2, uv).xyz * scale2) + bias2)\\n  ) * 0.3));\\n  ret_1 = (ret_1 * 0.9);\\n  ret_1 = (ret_1 + ((\\n    ((texture (sampler_noise_lq, ((\\n      (uv_orig * texsize.xy)\\n     * \\n      (texsize_noise_lq.zw * 0.04)\\n    ) + rand_frame.xy)).xyz - 0.5) / 256.0)\\n   * 128.0) * clamp (\\n    (treb_att - 1.0)\\n  , 0.0, 1.0)));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 0.0;\\n  tmpvar_3.xyz = (0.001 * cos((ret_1 * \\n    cos(ret_1)\\n  )));\\n  ret_1 = mix (ret_1.xyzz, vec4(dot ((ret_1 * ret_1), vec3(0.32, 0.49, 0.29))), tmpvar_3).xyz;\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = ret_1;\\n  ret = tmpvar_4.xyz;\\n }","comp":" shader_body { \\n  vec3 bird_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (texsize.zw * 2.0);\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = tmpvar_4.y;\\n  tmpvar_6.y = tmpvar_5.y;\\n  vec2 tmpvar_7;\\n  tmpvar_7 = (uv + (tmpvar_6 * 0.05));\\n  vec2 x_8;\\n  x_8 = (tmpvar_7 - uv);\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = tmpvar_4.y;\\n  tmpvar_9.y = tmpvar_5.y;\\n  bird_1 = (pow (vec3(max (texture (sampler_main, tmpvar_7).x, texture (sampler_main, \\n    ((0.5 + ((uv - 0.5) * vec2(-1.0, 1.0))) + (tmpvar_9 * 0.05))\\n  ).x)), vec3(1.4, 1.4, 1.4)) * (hue_shader * hue_shader));\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = tmpvar_4.y;\\n  tmpvar_10.y = tmpvar_5.y;\\n  vec3 tmpvar_11;\\n  tmpvar_11 = (((texture (sampler_blur1, \\n    (uv + (tmpvar_10 * 0.1))\\n  ).xyz * scale1) + bias1) * clamp (1.0, 0.0, 1.0));\\n  ret_2 = (((\\n    ((((\\n      (((tmpvar_4.y + tmpvar_5.y) * 4.0) + 0.5)\\n     * vec3(0.0, 0.0, 1.0)) + (\\n      sqrt(dot (x_8, x_8))\\n     * vec3(64.0, 96.0, 0.0))) + (vec3(1.0, 0.0, 0.0) * texture (sampler_main, uv).y)) - vec3(0.0, 0.0, 0.3))\\n   * 0.6) * clamp (\\n    (1.0 - (bird_1.x * 4.0))\\n  , 0.0, 1.0)) + bird_1);\\n  vec4 tmpvar_12;\\n  tmpvar_12 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * tmpvar_7.xyy) * (\\n    (q28 * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q31)));\\n  if (((ret_2.x > (q26 * q13)) && (ret_2.x <= (q23 * q11)))) {\\n    ret_2.z = (ret_2.z - (tmpvar_12.x * 0.5));\\n  };\\n  if (((ret_2.y > (q25 * q11)) && (ret_2.y <= (q22 * q12)))) {\\n    ret_2.x = (ret_2.x - (tmpvar_12.y * 0.5));\\n  };\\n  if (((ret_2.z > (q24 * q12)) && (ret_2.z <= (q21 * q13)))) {\\n    ret_2.y = (ret_2.y - (tmpvar_12.z * 0.5));\\n  };\\n  ret_2 = (ret_2 * mix (ret_2, vec3(1.0, 1.0, 1.0), (\\n    (tmpvar_11.z * 6.0)\\n   * \\n    (1.0 - (bird_1 * 3.0))\\n  )));\\n  vec4 tmpvar_13;\\n  tmpvar_13.w = 1.0;\\n  tmpvar_13.xyz = ret_2;\\n  ret = tmpvar_13.xyz;\\n }"}')},5546:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":2,"gammaadj":1.28,"decay":0.8,"echo_zoom":1,"echo_orient":3,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"brighten":1,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":1.004,"warp":0.19788,"sx":0.99967,"sy":0.9999,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0,"ob_r":1,"ob_a":0.7,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"sides":39,"additive":1,"num_inst":126,"rad":0.06989,"tex_ang":0.62832,"a":0,"r2":1,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));"},{"baseVals":{"sides":41,"additive":1,"num_inst":239,"rad":0.06989,"tex_ang":0.62832,"r":0,"g":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));"},{"baseVals":{"sides":43,"additive":1,"num_inst":32,"rad":0.06989,"tex_ang":0.62832,"r":0,"b":1,"g2":0,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));"},{"baseVals":{"enabled":1,"sides":14,"rad":0.15964,"tex_ang":0.62832,"a":0,"r2":1,"b2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));"}],"init_eqs_eel":"","frame_eqs_eel":"mv_r = mv_r + 0.2*( 0.60*sin(0.980*time) + 0.40*sin(1.047*time) );\\nmv_g = mv_g + 0.2*( 0.60*sin(0.835*time) + 0.40*sin(1.081*time) );\\nmv_b = mv_b + 0.2*( 0.60*sin(0.814*time) + 0.40*sin(1.011*time) );\\nq1 = (cx*2-1) + 0.6*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\nq2 = (cy*2-1) + 0.6*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\\nob_r = 1- 0.4*abs(q1);\\nob_g = 0.3*abs(q2);\\nob_b = 0.4*abs(q1);\\nwave_x = 1-abs(q2)-0.05;\\nwave_y = 1-abs(q1)-0.06;\\nwave_r = wave_r + 0.4*( 0.60*sin(0.514*time) + 0.40*sin(1.211*time) );\\nwave_b = wave_b + 0.4*( 0.60*sin(0.714*time) + 0.40*sin(q2) );\\nwave_g = wave_g + 0.4*( 0.60*sin(10*q1) + 0.40*sin(10*q2) );\\n//zoom = 1;\\nwarp = 0;","pixel_eqs_eel":"du = (x*2-1) - q1;\\ndv = (y*2-1) - q2;\\ndist = sqrt(du*du+dv*dv);\\nang2 = atan2(du,dv) + time*0.15;\\nmult = 0.04*sin(dist*0.05);\\ndx = mult*sin(ang2*2-1.5)*aspectx;\\ndy = mult*cos(ang2*2-1.5)*aspecty;","warp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 4.0);\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = tmpvar_3.x;\\n  tmpvar_5.y = tmpvar_4.x;\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv + ((tmpvar_5 * texsize.zw) * 4.0));\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = tmpvar_3.y;\\n  tmpvar_7.y = tmpvar_4.y;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (uv + ((tmpvar_7 * texsize.zw) * 4.0));\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = tmpvar_3.z;\\n  tmpvar_9.y = tmpvar_4.z;\\n  vec2 tmpvar_10;\\n  tmpvar_10 = (uv + ((tmpvar_9 * texsize.zw) * 4.0));\\n  ret_1.x = (texture (sampler_main, tmpvar_6).x - ((texture (sampler_main, tmpvar_6).xyz - \\n    ((texture (sampler_blur3, tmpvar_6).xyz * scale3) + bias3)\\n  ).x * 0.02));\\n  ret_1.y = (texture (sampler_main, tmpvar_8).y - ((texture (sampler_main, tmpvar_8).xyz - \\n    ((texture (sampler_blur3, tmpvar_8).xyz * scale3) + bias3)\\n  ).y * 0.02));\\n  ret_1.z = (texture (sampler_main, tmpvar_10).z - ((texture (sampler_main, tmpvar_10).xyz - \\n    ((texture (sampler_blur3, tmpvar_10).xyz * scale3) + bias3)\\n  ).z * 0.02));\\n  ret_1 = (ret_1 + ((texture (sampler_noise_lq, \\n    (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 0.4)) + (0.2 * rand_frame.xy))\\n  ).xyz - 0.5) * 0.3));\\n  ret_1 = (ret_1 - (ret_1.yzx * 0.1));\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 1.0;\\n  tmpvar_11.xyz = ret_1;\\n  ret = tmpvar_11.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 4.0);\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = tmpvar_3.y;\\n  tmpvar_5.y = tmpvar_4.y;\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = tmpvar_3.z;\\n  tmpvar_6.y = tmpvar_4.z;\\n  vec2 tmpvar_7;\\n  tmpvar_7 = ((uv - (tmpvar_5 * 0.1)) + (tmpvar_6 * 0.06));\\n  vec4 tmpvar_8;\\n  tmpvar_8 = texture (sampler_main, uv);\\n  ret_1 = (((\\n    ((texture (sampler_blur2, tmpvar_7).xyz * scale2) + bias2)\\n  .x * \\n    clamp ((1.0 - tmpvar_8.y), 0.0, 1.0)\\n  ) * pow (hue_shader.yxz, vec3(8.0, 8.0, 8.0))) * 3.0);\\n  ret_1 = (mix (ret_1, (\\n    pow (hue_shader.yzx, vec3(8.0, 8.0, 8.0))\\n   * 1.4), vec3((\\n    (texture (sampler_main, tmpvar_7).x * 0.8)\\n   + \\n    ((texture (sampler_blur1, tmpvar_7).xyz * scale1) + bias1)\\n  .x))) * clamp ((1.0 - \\n    (((texture (sampler_blur1, uv).xyz * scale1) + bias1).z * 4.0)\\n  ), 0.0, 1.0));\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = tmpvar_3.z;\\n  tmpvar_9.y = tmpvar_4.z;\\n  vec3 tmpvar_10;\\n  vec3 tmpvar_11;\\n  tmpvar_11 = pow (hue_shader, vec3(8.0, 8.0, 8.0));\\n  tmpvar_10 = mix (mix (ret_1, vec3(1.0, 1.0, 1.0), (\\n    (tmpvar_11 * texture (sampler_main, clamp ((uv - (tmpvar_9 * 2.0)), 0.0, 1.0)).y)\\n   * 1.2)), (tmpvar_11.zxy * 1.8), tmpvar_8.zzz);\\n  ret_1 = tmpvar_10;\\n  vec4 tmpvar_12;\\n  tmpvar_12.w = 1.0;\\n  tmpvar_12.xyz = tmpvar_10;\\n  ret = tmpvar_12.xyz;\\n }"}')},765:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":2,"gammaadj":1.9,"echo_zoom":1.169,"additivewave":1,"wave_dots":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":0.513,"wave_scale":100,"wave_smoothing":0,"wave_mystery":1,"modwavealphastart":0.83,"modwavealphaend":1.31,"warpanimspeed":100,"warpscale":0.021,"zoomexp":0.26623,"zoom":1.00808,"warp":0.02599,"ob_size":0.005,"ob_a":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":65,"textured":1,"num_inst":27,"rad":0.50627,"tex_ang":1.50796,"tex_zoom":1.08284,"g":1,"b":1,"r2":1,"b2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x=x+sin(instance*360)*rad;\\ny=y+cos(instance*360)*rad;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":25,"rad":0.01041,"tex_zoom":0.96098,"a":0,"a2":1},"init_eqs_eel":"","frame_eqs_eel":"r2=int(rand(200))/200;\\ng2=int(rand(200))/200;\\nb2=int(rand(200))/200;"}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"//yr code\\ndx=0;\\n//end.\\nq6=dx;\\nq7=dy;\\n//zoom=1.00;\\n//warp=0;\\nq2=abs(sin(time*3));\\nq3=abs(sin(time*4));\\nq4=abs(sin(time*2));\\nmonitor=q3;","pixel_eqs_eel":"","warp":" shader_body { \\n  float dy_1;\\n  float dx_2;\\n  vec3 ret_3;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = ((uv * texsize.xy) * texsize_noise_lq.zw);\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (texsize.zw * 4.0);\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = (((2.0 * \\n    ((texture (sampler_blur1, (uv + (vec2(1.0, 0.0) * tmpvar_5))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv - (vec2(1.0, 0.0) * tmpvar_5))).xyz * scale1) + bias1)\\n  )).y * 0.5);\\n  tmpvar_6.y = (((2.0 * \\n    ((texture (sampler_blur1, (uv + (vec2(0.0, 1.0) * tmpvar_5))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv - (vec2(0.0, 1.0) * tmpvar_5))).xyz * scale1) + bias1)\\n  )).y * 0.5);\\n  ret_3.y = texture (sampler_fw_main, clamp ((uv + (\\n    (tmpvar_6 * texsize.zw)\\n   * 4.0)), 0.0, 1.0)).y;\\n  ret_3.y = (ret_3.y + ((\\n    (ret_3 - ((texture (sampler_blur1, uv).xyz * scale1) + bias1))\\n  .y * 0.025) + -0.01));\\n  ret_3.y = (ret_3.y + ((texture (sampler_noise_lq, tmpvar_4).y - 0.5) * 0.02));\\n  dx_2 = (((2.0 * \\n    ((texture (sampler_blur1, (uv + (vec2(1.0, 0.0) * tmpvar_5))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv - (vec2(1.0, 0.0) * tmpvar_5))).xyz * scale1) + bias1)\\n  )).z * 0.5);\\n  dy_1 = (((2.0 * \\n    ((texture (sampler_blur1, (uv + (vec2(0.0, 1.0) * tmpvar_5))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv - (vec2(0.0, 1.0) * tmpvar_5))).xyz * scale1) + bias1)\\n  )).z * 0.5);\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = dx_2;\\n  tmpvar_7.y = dy_1;\\n  ret_3.z = ((texture (sampler_main, (uv - \\n    ((tmpvar_7 * texsize.zw) * 4.0)\\n  )).z - (ret_3.y * 0.01)) + 0.004);\\n  ret_3.z = (ret_3.z + ((texture (sampler_noise_lq, tmpvar_4).y - 0.5) * 0.01));\\n  dx_2 = (((2.0 * \\n    ((texture (sampler_blur1, (uv + (tmpvar_5 * vec2(1.0, 0.0)))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv + (tmpvar_5 * vec2(-1.0, 0.0)))).xyz * scale1) + bias1)\\n  )).x * 0.5);\\n  dy_1 = (((2.0 * \\n    ((texture (sampler_blur1, (uv + (tmpvar_5 * vec2(0.0, 1.0)))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv + (tmpvar_5 * vec2(0.0, -1.0)))).xyz * scale1) + bias1)\\n  )).x * 0.5);\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = dx_2;\\n  tmpvar_8.y = dy_1;\\n  vec2 tmpvar_9;\\n  tmpvar_9 = (tmpvar_8 * texsize.zw);\\n  vec2 domain_10;\\n  domain_10 = (uv - (tmpvar_9 * 2.5));\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 0.0;\\n  tmpvar_11.xyz = max (vec4(0.0, 0.0, 0.0, 0.0), texture (sampler_fc_main, (domain_10 + (texsize.zw * vec2(-1.0, 0.0))))).xyz;\\n  vec4 tmpvar_12;\\n  tmpvar_12.w = 0.0;\\n  tmpvar_12.xyz = max (tmpvar_11, texture (sampler_fc_main, (domain_10 + (texsize.zw * vec2(0.0, -1.0))))).xyz;\\n  vec4 tmpvar_13;\\n  tmpvar_13.w = 0.0;\\n  tmpvar_13.xyz = max (tmpvar_12, texture (sampler_fc_main, domain_10)).xyz;\\n  vec4 tmpvar_14;\\n  tmpvar_14.w = 0.0;\\n  tmpvar_14.xyz = max (tmpvar_13, texture (sampler_fc_main, (domain_10 + (texsize.zw * vec2(0.0, 1.0))))).xyz;\\n  ret_3.x = ((max (tmpvar_14, texture (sampler_fc_main, \\n    (domain_10 + (texsize.zw * vec2(1.0, 0.0)))\\n  )).x + (\\n    (texture (sampler_main, (uv + (tmpvar_9 * 4.0))).x - ((texture (sampler_blur1, (uv + \\n      (tmpvar_9 * 4.0)\\n    )).xyz * scale1) + bias1).x)\\n   * 0.206)) - 0.09);\\n  vec4 tmpvar_15;\\n  tmpvar_15.w = 1.0;\\n  tmpvar_15.xyz = ret_3;\\n  ret = tmpvar_15.xyz;\\n }","comp":" shader_body { \\n  vec2 dz_1;\\n  vec3 dy_2;\\n  vec3 dx_3;\\n  vec2 d_4;\\n  vec3 ret_5;\\n  vec2 tmpvar_6;\\n  vec2 tmpvar_7;\\n  tmpvar_7 = (vec2(1.0, 0.0) * texsize.zw);\\n  tmpvar_6.x = (texture (sampler_main, (uv + tmpvar_7)).xyz - texture (sampler_main, (uv - tmpvar_7)).xyz).y;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (vec2(0.0, 1.0) * texsize.zw);\\n  tmpvar_6.y = (texture (sampler_main, (uv + tmpvar_8)).xyz - texture (sampler_main, (uv - tmpvar_8)).xyz).y;\\n  d_4 = (texsize.zw * 2.0);\\n  dx_3 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * d_4))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * d_4))\\n  ).xyz * scale1) + bias1));\\n  dy_2 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * d_4))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * d_4))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = dx_3.y;\\n  tmpvar_9.y = dy_2.y;\\n  dz_1 = ((tmpvar_6 * 3.0) + tmpvar_9);\\n  ret_5 = (vec3(((\\n    pow ((sqrt(dot (dz_1, dz_1)) * 0.8), 0.7)\\n   + \\n    (((texture (sampler_blur2, uv).xyz * scale2) + bias2).y * 0.4)\\n  ) - 0.1)) * vec3(0.3, 0.5, 0.7));\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = dx_3.x;\\n  tmpvar_10.y = dy_2.x;\\n  vec3 tmpvar_11;\\n  tmpvar_11 = mix (mix (ret_5, vec3(0.2, 0.1, 0.0), vec3((texture (sampler_main, \\n    (uv + ((tmpvar_10 * texsize.zw) * 18.0))\\n  ).x * 6.0))), vec3(1.0, 1.0, 1.0), texture (sampler_main, uv).zzz);\\n  ret_5 = tmpvar_11;\\n  vec4 tmpvar_12;\\n  tmpvar_12.w = 1.0;\\n  tmpvar_12.xyz = tmpvar_11;\\n  ret = tmpvar_12.xyz;\\n }"}')},1490:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1.9,"echo_zoom":1.169,"wave_mode":4,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":1.245,"wave_scale":0.959,"wave_smoothing":0,"wave_mystery":1,"modwavealphastart":0.83,"modwavealphaend":1.31,"warpanimspeed":3.987,"warpscale":0.034,"zoomexp":0.75683,"zoom":1.00814,"warp":0.06295,"ob_size":0.005,"ob_a":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"textured":1,"num_inst":7,"rad":0.03333,"r":0,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = int(rand(100))*.01+instance-instance;\\ny = int(rand(100))*.01+instance-instance;\\n\\na =1;\\nvol=bass+mid+treb;\\nrad = int(rand(int(vol)))/7+instance-instance;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":32,"additive":1,"thickoutline":1,"num_inst":33,"r":0,"g":0.5,"g2":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"trans = rand(int(q30))/15+instance-instance;\\ntrans2 = rand(int(q30))/15+instance-instance;\\ntrans3 = rand(int(q30))/15+instance-instance;\\na = trans;\\n\\nx = .5 + int(rand(15))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\\ny = .5 + int(rand(15))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\\nrad = .09 + rand(int(q30))/15+instance-instance;\\nr=rand(q30)*.1+instance-instance;\\ng=rand(q30)*.1+instance-instance;\\nb=rand(q30)*.1+instance-instance;\\nr2=rand(q30)*.1+instance-instance;\\ng2=rand(q30)*.1+instance-instance;\\nb2=rand(q30)*.1+instance-instance;\\nborder_r=rand(q30)*.1+instance-instance;\\nborder_g=rand(q30)*.1+instance-instance;\\nborder_b=rand(q30)*.1+instance-instance;"},{"baseVals":{"enabled":1,"sides":3,"thickoutline":1,"textured":1,"num_inst":311,"rad":0.01,"tex_ang":0.62832,"r":0,"g2":0,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*tan(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=1-mx;\\ny=1-my;\\n\\nang=(sin(time*.35)+1)*3;\\n//a=(above(bass+mid+treb,.8));\\npi23=4*asin(1)*.333333333;\\nt1=bass+mid+treb;"}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"q1=zoom;\\nzoom=zoom-0.008;\\nwarp=0;\\nwave_a=0;\\nmaj=above(bass*treb,3.1)*0.05;\\nnor=above(bass*treb,2.5)*0.025;\\nmini=above(bass*treb,2)*0.001;\\n//\'min\' gives an error.\\nzoom=zoom-if(if(maj,nor,maj),mini,nor);\\nq30=bass+treb+mid;","pixel_eqs_eel":"//zoom=zoom+(int(rand(256))-int(rand(256)))/25;","warp":"vec4 xlat_mutabletexsize;\\n shader_body { \\n  vec3 ret_1;\\n  xlat_mutabletexsize.xy = (texsize.zw * 3.0);\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = (uv.x - xlat_mutabletexsize.x);\\n  tmpvar_2.y = (uv.y - (xlat_mutabletexsize.y * 2.0));\\n  vec4 tmpvar_3;\\n  tmpvar_3 = texture (sampler_main, (uv - xlat_mutabletexsize.xy));\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = (uv.x + (xlat_mutabletexsize.x * 2.0));\\n  tmpvar_4.y = (uv.y - (xlat_mutabletexsize.y * 2.0));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = (uv.x + xlat_mutabletexsize.x);\\n  tmpvar_5.y = (uv.y - (xlat_mutabletexsize.y * 2.0));\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = (uv.x + xlat_mutabletexsize.x);\\n  tmpvar_6.y = (uv.y - xlat_mutabletexsize.y);\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = (uv.x - (xlat_mutabletexsize.x * 2.0));\\n  tmpvar_7.y = (uv.y + (xlat_mutabletexsize.y * 2.0));\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = (uv.x - xlat_mutabletexsize.x);\\n  tmpvar_8.y = (uv.y + (xlat_mutabletexsize.y * 2.0));\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = (uv.x - xlat_mutabletexsize.x);\\n  tmpvar_9.y = (uv.y + xlat_mutabletexsize.y);\\n  vec4 tmpvar_10;\\n  tmpvar_10 = texture (sampler_main, tmpvar_9);\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = (uv.x + xlat_mutabletexsize.x);\\n  tmpvar_11.y = (uv.y + (xlat_mutabletexsize.y * 2.0));\\n  vec4 tmpvar_12;\\n  tmpvar_12 = texture (sampler_main, (uv + xlat_mutabletexsize.xy));\\n  ret_1 = (ret_1 + ((1.2 * \\n    ((((tmpvar_12.xyz + texture (sampler_main, tmpvar_11).xyz) + (texture (sampler_main, \\n      (uv + (xlat_mutabletexsize.xy * vec2(2.0, 2.0)))\\n    ).xyz + tmpvar_10.xyz)) + ((texture (sampler_main, tmpvar_8).xyz + texture (sampler_main, tmpvar_7).xyz) + (texture (sampler_main, tmpvar_6).xyz + texture (sampler_main, tmpvar_5).xyz))) + ((texture (sampler_main, tmpvar_4).xyz + tmpvar_3.xyz) + (texture (sampler_main, (uv - \\n      (xlat_mutabletexsize.xy * vec2(2.0, 2.0))\\n    )).xyz + texture (sampler_main, tmpvar_2).xyz)))\\n  ) / 12.0));\\n  vec4 tmpvar_13;\\n  tmpvar_13 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv.xyy) * (\\n    (q27 * xlat_mutabletexsize.xyy)\\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\\n  if (((ret_1.x > (q21 * q13)) && (ret_1.x <= (q24 * q11)))) {\\n    ret_1.y = (ret_1.y + (tmpvar_13.x * 0.5));\\n  };\\n  if (((ret_1.y > (q22 * q11)) && (ret_1.y <= (q25 * q12)))) {\\n    ret_1.z = (ret_1.z + (tmpvar_13.y * 0.5));\\n  };\\n  if (((ret_1.z > (q23 * q12)) && (ret_1.z <= (q26 * q13)))) {\\n    ret_1.x = (ret_1.x + (tmpvar_13.z * 0.5));\\n  };\\n  ret_1 = (ret_1 - ((\\n    (texture (sampler_blur1, uv).xyz * scale1)\\n   + bias1) * 0.5));\\n  ret_1 = (ret_1 / (1.0 + (\\n    ((tmpvar_12.xyz + tmpvar_10.xyz) + (tmpvar_3.xyz + tmpvar_10.xyz))\\n   * 0.01)));\\n  ret_1 = (ret_1 * 1.1);\\n  ret_1 = (ret_1 + (0.1 * (0.5 - texture (sampler_noise_lq, \\n    ((uv_orig * rand_frame.xy) * 9.0)\\n  ))).xyz);\\n  vec4 tmpvar_14;\\n  tmpvar_14.w = 1.0;\\n  tmpvar_14.xyz = ret_1;\\n  ret = tmpvar_14.xyz;\\n }","comp":" shader_body { \\n  vec2 uvm_1;\\n  vec3 ret_2;\\n  uvm_1.x = (uv.x - (0.07 * texture (sampler_noise_hq, vec2((uv.x * 0.8))).x));\\n  uvm_1.y = (uv.y - (0.07 * texture (sampler_noise_hq, vec2((uv.y * 0.8))).x));\\n  vec4 tmpvar_3;\\n  tmpvar_3 = texture (sampler_main, fract(uvm_1));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((10.0 * tmpvar_3.xyz) - (\\n    ((texture (sampler_blur1, uvm_1).xyz * scale1) + bias1)\\n   * rad)) * ((0.8 * tmpvar_3.xyz) + cos(\\n    (((rad * 2.0) - (roam_sin * 2.0)) + time)\\n  ).xyz).x);\\n  vec3 tmpvar_5;\\n  tmpvar_5 = (1.0 - tmpvar_4);\\n  float tmpvar_6;\\n  tmpvar_6 = dot (tmpvar_4, tmpvar_5);\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = uv.x;\\n  tmpvar_7.y = (uv.y * 0.75);\\n  ret_2 = ((texture (sampler_main, tmpvar_7).xyz * tmpvar_5) + (0.55 * tmpvar_4));\\n  vec4 tmpvar_8;\\n  tmpvar_8 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uvm_1.xyy) * (\\n    (q28 * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q31)));\\n  if (((ret_2.x > (q26 * q13)) && (ret_2.x <= (q23 * q11)))) {\\n    ret_2.z = (ret_2.z - (tmpvar_8.x * 0.5));\\n  };\\n  if (((ret_2.y > (q25 * q11)) && (ret_2.y <= (q22 * q12)))) {\\n    ret_2.x = (ret_2.x - (tmpvar_8.y * 0.5));\\n  };\\n  if (((ret_2.z > (q24 * q12)) && (ret_2.z <= (q21 * q13)))) {\\n    ret_2.y = (ret_2.y - (tmpvar_8.z * 0.5));\\n  };\\n  ret_2 = (ret_2 * mix (ret_2, tmpvar_5, vec3((1.5 * \\n    clamp (tmpvar_6, 0.0, 1.0)\\n  ))));\\n  vec4 tmpvar_9;\\n  tmpvar_9.w = 1.0;\\n  tmpvar_9.xyz = ret_2;\\n  ret = tmpvar_9.xyz;\\n }"}')},5737:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"zoom":1.3345,"wave_r":0,"wave_g":0,"wave_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"textured":1,"rad":0.64926,"tex_zoom":0.86996,"g":1,"b":1,"r2":1,"b2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"dx=0;\\noldshift=shift;\\nnormalframez=normalframez+1;\\nshift=above(bass_att,1)*above(treb_att,0.9);\\ncrash=abs(oldshift-shift);\\nnex=equal(rshift,0)*1+equal(rshift,1)*2;\\nrshift=if(crash,nex,rshift);\\nmonitor=rshift;\\nwave_r=rand(200)/200;\\nwave_g=rand(200)/200;\\nwave_b=rand(200)/200;\\nwarp=0;\\nq1=above(bass_att,1.3);\\nzoom1=zoom+0.15-0.3*(normalframez%2);\\nzoom=if(shift,zoom1,1);\\nrot=rot-0.1+rshift*0.1;","pixel_eqs_eel":"dy=-below(y,0.4)*0.007+above(y,0.6)*0.007;","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = ((texture (sampler_main, (uv_orig + \\n    ((uv - uv_orig) * dot (texture (sampler_main, uv).xyz, vec3(0.32, 0.49, 0.29)))\\n  )).xyz * 0.99) - 0.002);\\n  ret = tmpvar_1.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  ret_1 = (texture (sampler_main, uv).xyz * 2.0);\\n  ret_1 = (ret_1 * (1.0 - ret_1));\\n  ret_1 = (((1.0 - \\n    pow (clamp (ret_1, 0.0, 1.0), vec3(0.5, 0.5, 0.5))\\n  ) * 1.5) - 0.75);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ret_1;\\n  ret = tmpvar_2.xyz;\\n }"}')},8775:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1.28,"decay":0.8,"echo_zoom":1,"echo_orient":3,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"brighten":1,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"zoomexp":3.04777,"zoom":1.0173,"warp":0.01605,"wave_g":0.65,"wave_b":0.65,"ob_size":0,"ob_a":1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"sides":5,"additive":1,"num_inst":2,"x":0.49,"rad":0.11589,"tex_zoom":4.36077,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = rand(1000)/1000;\\ny = rand(1000)/1000;\\nang = rand(150)/100;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"thick":1,"additive":1,"g":0,"b":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));"},{"baseVals":{"enabled":1,"thick":1,"additive":1,"r":0,"g":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));"},{"baseVals":{"enabled":1,"thick":1,"additive":1,"r":0,"b":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));"},{"baseVals":{"enabled":1,"thick":1,"additive":1,"g":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));"}],"init_eqs_eel":"","frame_eqs_eel":"dec_med = pow (0.9, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %2;\\n\\n\\nd_x = if(is_beat, (rand(2000)-1000)*0.001 , d_x);\\nd_y = if(is_beat, (rand(2000)-1000)*0.001 , d_y);\\nr = if(is_beat, (rand(2000)-1000)*0.001 , r);\\nz = if(is_beat, rand(1000)*0.001 , z);\\nzoom = 1.03 + z*0.06;\\nrot = r*0.06;\\ndx = d_x*0.01;\\ndy = d_y*0.01;\\nq1 = 1;\\n\\nq23 = rand(1000)/1000;\\nq24 = rand(1000)/1000;\\nq25 = (rand(1000)/1000)*6.28;\\nq26 = q25 - 3.14;\\nq27 = (rand(1000)/12000)+0.04;\\n\\nq28 = rand(1000)/1000;\\nq29 = rand(1000)/1000;\\nq30 = (rand(1000)/1000)*6.28;\\nq31 = q30 - 3.14;\\nq32 = (rand(1000)/14000)+0.04;\\n\\ndb = db*0.98 + bass*0.2;\\nbb = bb + db*0.1;\\n\\ndt = dt*0.98 + treb*0.2;\\ntt = tt + dt*0.1;\\n\\ndm = dm*0.98 + mid*0.2;\\nmm = mm + dm*0.1;\\n\\n\\nw = (bb-tt)*0.1;\\nq11 = sin(w);\\nq12 = cos(w);\\nq13 = 0.5 + sin((bb-mm)*0.1)*0.25; // cx\\nq14 = 0.5 + sin((tt-mm)*0.1)*0.25; // cy\\nq15 = 4;\\nq16 = 0.06;\\nq17 = sin(-w);\\nq18 = cos(-w);","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 8.0);\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = tmpvar_3.x;\\n  tmpvar_5.y = tmpvar_4.x;\\n  vec2 tmpvar_6;\\n  vec2 tmpvar_7;\\n  tmpvar_7 = mix (uv_orig, uv, vec2(0.1, 0.1));\\n  tmpvar_6 = (tmpvar_7 + ((tmpvar_5 * texsize.zw) * 2.0));\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = tmpvar_3.y;\\n  tmpvar_8.y = tmpvar_4.y;\\n  vec2 tmpvar_9;\\n  tmpvar_9 = (mix (uv_orig, uv, vec2(0.3, 0.3)) + ((tmpvar_8 * texsize.zw) * 2.0));\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = tmpvar_3.z;\\n  tmpvar_10.y = tmpvar_4.z;\\n  vec2 tmpvar_11;\\n  tmpvar_11 = (tmpvar_7 + ((tmpvar_10 * texsize.zw) * 2.0));\\n  ret_1.x = (texture (sampler_main, tmpvar_6).x - ((texture (sampler_main, tmpvar_6).xyz - \\n    ((texture (sampler_blur3, tmpvar_6).xyz * scale3) + bias3)\\n  ).x * 0.01));\\n  ret_1.y = (texture (sampler_main, tmpvar_9).y - ((texture (sampler_main, tmpvar_9).xyz - \\n    ((texture (sampler_blur3, tmpvar_9).xyz * scale3) + bias3)\\n  ).y * 0.01));\\n  ret_1.z = (texture (sampler_main, tmpvar_11).z - ((texture (sampler_main, tmpvar_11).xyz - \\n    ((texture (sampler_blur3, tmpvar_11).xyz * scale3) + bias3)\\n  ).z * 0.01));\\n  ret_1 = (ret_1 + (-0.004 + (\\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 1.2)) + rand_frame.xy)).xyz - 0.5)\\n   * 0.1)));\\n  vec4 tmpvar_12;\\n  tmpvar_12.w = 1.0;\\n  tmpvar_12.xyz = ret_1;\\n  ret = tmpvar_12.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 8.0);\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = tmpvar_3.z;\\n  tmpvar_5.y = tmpvar_4.z;\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = tmpvar_3.y;\\n  tmpvar_6.y = tmpvar_4.y;\\n  ret_1 = (mix (vec3(0.2, 0.0, 0.1), vec3(0.8, 0.6, 0.0), texture (sampler_main, (uv - \\n    (tmpvar_5 * 0.2)\\n  )).yyy) * ((\\n    (-(tmpvar_3.y) + tmpvar_4.y)\\n   + 1.0) + (\\n    (-(tmpvar_3.z) + tmpvar_4.z)\\n   * 2.0)));\\n  vec3 tmpvar_7;\\n  tmpvar_7 = mix (mix (ret_1, vec3(0.3, 0.0, 0.8), vec3((\\n    ((texture (sampler_blur1, (uv - (tmpvar_6 * 0.04))).xyz * scale1) + bias1)\\n  .x * 1.4))), vec3(1.0, 0.9, 0.4), texture (sampler_main, uv).zzz);\\n  ret_1 = tmpvar_7;\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = tmpvar_7;\\n  ret = tmpvar_8.xyz;\\n }"}')},3863:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1,"decay":0.955,"echo_zoom":0.997,"echo_alpha":0.5,"echo_orient":1,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.772,"zoomexp":5.00873,"fshader":1,"zoom":1.011,"rot":0.003,"warp":0,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.005,"ob_a":1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":12,"additive":1,"num_inst":2,"x":0.49,"rad":0.04789,"tex_zoom":4.36077,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = rand(1000)/1000;\\ny = rand(1000)/1000;\\nang = rand(150)/100;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"thick":1,"additive":1,"r":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));"},{"baseVals":{"enabled":1,"thick":1,"additive":1,"r":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));"},{"baseVals":{"enabled":1,"thick":1,"additive":1,"r":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));"},{"baseVals":{"enabled":1,"thick":1,"additive":1,"r":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));"}],"init_eqs_eel":"","frame_eqs_eel":"t = time*12.3;\\nrot = rot + 0.030*( 0.60*sin(0.38*time) + 0.40*sin(0.54*time) );\\ndx = dx + 0.002*( 0.60*sin(0.434*time) + 0.40*sin(0.277*time) );\\ndy = dy + 0.002*( 0.60*sin(0.384*time) + 0.40*sin(0.477*time) );","pixel_eqs_eel":"","warp":"","comp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = (texsize.zw * 6.0);\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_1))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_1))\\n  ).xyz * scale1) + bias1)).y;\\n  tmpvar_2.y = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_1))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_1))\\n  ).xyz * scale1) + bias1)).y;\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = mix (mix ((vec3(0.4, 0.2, 0.9) * texture (sampler_fc_main, \\n    (uv - (tmpvar_2 * 0.6))\\n  ).x), vec3(2.0, 2.0, 2.0), vec3((\\n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\\n  .y * 0.35))), vec3(1.0, 0.7, 0.0), vec3((texture (sampler_main, (0.5 + \\n    ((uv - 0.5) * 0.9)\\n  )).z * 0.8)));\\n  ret = tmpvar_3.xyz;\\n }"}')},4877:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1,"decay":0.955,"echo_zoom":0.997,"echo_alpha":0.5,"echo_orient":1,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"fshader":1,"zoom":1.00951,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"textured":1,"rad":1.79142,"tex_ang":0.62832,"g":1,"b":1,"a":0,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));"},{"baseVals":{"enabled":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));"},{"baseVals":{"enabled":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));"},{"baseVals":{"enabled":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));"}],"init_eqs_eel":"","frame_eqs_eel":"","pixel_eqs_eel":"","warp":" shader_body { \\n  vec4 lums_1;\\n  vec3 tmpvar_2;\\n  tmpvar_2.z = 0.0;\\n  tmpvar_2.xy = texsize.zw;\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (tmpvar_2 * 3.0);\\n  lums_1.x = dot (texture (sampler_main, (uv + (texsize.zw * tmpvar_3.xz))).xyz, vec3(0.32, 0.49, 0.29));\\n  lums_1.y = dot (texture (sampler_main, (uv - (texsize.zw * tmpvar_3.xz))).xyz, vec3(0.32, 0.49, 0.29));\\n  lums_1.z = dot (texture (sampler_main, (uv + (texsize.zw * tmpvar_3.zy))).xyz, vec3(0.32, 0.49, 0.29));\\n  lums_1.w = dot (texture (sampler_main, (uv - (texsize.zw * tmpvar_3.zy))).xyz, vec3(0.32, 0.49, 0.29));\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = (lums_1.x - lums_1.y);\\n  tmpvar_4.y = (lums_1.z - lums_1.w);\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = (texture (sampler_fc_main, (uv + (\\n    (((clamp (\\n      ((((2300.0 * tmpvar_4) / 3.0) * 0.5) + 0.5)\\n    , 0.0, 1.0) * 2.0) - 1.0) * 1.4)\\n   * texsize.zw))).xyz * 0.965);\\n  ret = tmpvar_5.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  ret_1 = ((texture (sampler_main, uv).xyz * 1.5) - 0.1);\\n  ret_1.y = (ret_1 * 0.7).y;\\n  ret_1.x = (((texture (sampler_blur1, uv).xyz * scale1) + bias1).x * 2.0);\\n  ret_1.z = (((texture (sampler_blur2, uv).xyz * scale2) + bias2).z * 3.0);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ret_1;\\n  ret = tmpvar_2.xyz;\\n }"}')},5484:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":0,"gammaadj":1,"decay":0.925,"echo_zoom":0.996624,"echo_alpha":0.5,"echo_orient":2,"wave_mode":1,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"wave_a":0.711381,"wave_scale":1.163966,"wave_smoothing":0.81,"wave_mystery":-0.6,"modwavealphastart":1.11,"modwavealphaend":1.3,"warpanimspeed":0.184233,"warpscale":1.204928,"zoomexp":5.582155,"zoom":1.019604,"warp":0.104292,"sx":0.998168,"sy":1.051003,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_x":19.199999,"mv_y":24.000004,"mv_dx":0.02,"mv_l":1.699999,"mv_g":0,"mv_b":0.8,"mv_a":0.1},"shapes":[{"baseVals":{"enabled":1,"additive":1,"textured":1,"rad":0.599579,"tex_zoom":2.216689,"g":0.7,"b":1,"a":0.1,"g2":0.4,"b2":0.7,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ang=(sin(time)*3.1415)+bass-treb;\\nrad=treb;"},{"baseVals":{"enabled":1,"sides":100,"textured":1,"y":0.2,"rad":0.241456,"tex_zoom":0.344205,"r":0.7,"g":0.5,"b":1,"a":0.6,"g2":0,"b2":0.1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x=(.5*sin(time*.2))+.5;\\ny=sin(time);\\nrad=sin(time*.23);\\nang=sin(time*.5);"},{"baseVals":{"enabled":1,"sides":3,"textured":1,"rad":0.54279,"tex_zoom":0.999992,"r":0,"b":1,"a":0,"r2":0.9,"g2":0.6,"b2":1,"a2":0.2,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ang=(above(bass,1)*sin(time))+cos(time);\\nx=rand(10)*.1;\\ny=rand(10)*.1;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"spectrum":1,"usedots":1,"additive":1,"scaling":1.816691},"init_eqs_eel":"","frame_eqs_eel":"a=bass*.5;","point_eqs_eel":"x=(sin((sample*100%10)*3.1415*bass*.02)*.5)+(sin(treb)*.5);\\nr=.25-y;\\ng=treb*.5;\\nb=y-.5;"},{"baseVals":{"enabled":1,"spectrum":1,"usedots":1,"thick":1,"scaling":0.819543,"a":0.1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x=(cos(sample*100%20)*.5)+.5;\\n"},{"baseVals":{"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"dx=dx+(sin(time)*.002);","pixel_eqs_eel":"zoom=zoom+(abs(sin(time))*rad*.04);","warp":"","comp":""}')},9024:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":5,"gammaadj":1,"decay":0.925,"echo_zoom":1.498684,"echo_alpha":0.6,"wave_mode":5,"additivewave":1,"wave_dots":1,"wave_thick":1,"wave_brighten":0,"wrap":0,"wave_a":0.763004,"wave_scale":2.114586,"wave_smoothing":0.9,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":8.815298,"zoomexp":8.311067,"fshader":0.5,"zoom":1.009509,"dy":0.02,"warp":3.209173,"sx":0.94204,"sy":0.999996,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0.05,"mv_g":0.4,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"additive":1,"textured":1,"rad":0.662308,"a":0.7,"r2":0.2,"g2":0.6,"b2":0.9,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"additive":1},"init_eqs_eel":"nx=.5;\\nny=.5;","frame_eqs_eel":"","point_eqs_eel":"nd=rand(4);\\n\\nnx=nx+(equal(nd,0)*.01*mid);\\nnx=nx+(equal(nd,2)*-.01*mid);\\nny=ny+(equal(nd,1)*.01*mid);\\nny=ny+(equal(nd,3)*-.01*mid);\\n\\nx=nx;\\ny=ny;\\n\\nr=bass*.6;\\ng=treb*.6;\\n\\nnx=if(equal(sample,1),rand(10)*.1,nx);\\nny=if(equal(sample,1),rand(10)*.1,ny);"},{"baseVals":{"enabled":1,"usedots":1,"a":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"","pixel_eqs_eel":"wave_r=sin(time);\\nwave_b=sin(time*.23);\\nwave_g=sin(time*.47);","warp":"","comp":""}')},6753:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":0,"gammaadj":1.28,"echo_zoom":1.22823,"echo_alpha":0.5,"wave_mode":7,"additivewave":1,"wave_brighten":0,"brighten":1,"wave_a":0.001,"wave_scale":1.285751,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoomexp":1.254861,"fshader":1,"zoom":0.970118,"warp":0.01,"sy":0.999999,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":3,"textured":1,"rad":1.468146,"tex_zoom":0.639039,"g":1,"b":1,"a":0.5,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ang=time*.1;\\n\\nsides=int(abs(sin(time*.5)*7));"},{"baseVals":{"enabled":1,"sides":3,"additive":1,"thickoutline":1,"rad":0.02743,"a":0.05,"r2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ang=time*.1;\\n\\nr=.7+(sin(time)*.3);\\ng=.7+(cos(time)*.3);\\nb=.7+(sin(time+.12)*.3);\\n\\nrad=rad+(treb_att*bass_att*.5);\\nx=.5+(sin(time)*.5);"},{"baseVals":{"enabled":1,"sides":5,"additive":1,"rad":0.02508,"a":0.05,"r2":1,"b2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ang=time*.25;\\n\\ng=.7+(sin(time)*.3);\\nb=.7+(cos(time)*.3);\\nr=.7+(sin(time+.12)*.3);\\n\\nr2=.7+(sin(time)*.3);\\ng2=.7+(cos(time)*.3);\\nb2=.7+(sin(time+.12)*.3);\\n\\nrad=rad+(treb_att*bass_att*.5);\\ny=.5+(sin(time)*.25);"},{"baseVals":{"additive":1,"textured":1,"rad":2.667173,"tex_zoom":0.608038,"a":0.1,"a2":0.01,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"usedots":1,"additive":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"branch=rand(2);\\n\\n//base\\nwx=if(equal(sc,0),.5,wx);\\nwy=if(equal(sc,0),0,wy);\\n\\nwx=if(equal(sc,1),.5,wx);\\nwy=if(equal(sc,1),.1,wy);\\n\\n//calculate previous branch length\\nd=if(below(sc,2),.3,.7*d);\\n\\n//angle\\nwainc=if(equal(branch,1),.2+sin(time),-.2);\\n\\nwa=if(below(sc,2),3.1415927*.5,wa+wainc);\\n\\n//branches\\nwx=if(above(sc,2),wx+cos(wa)*d,wx);\\nwy=if(above(sc,2),wy+sin(wa)*d,wy);\\n\\n//sample count\\nsc=if(equal(sc,11),0,sc+1);\\n\\na=if(below(sc,2),0,.1);\\n\\nx=wx;\\ny=wy;"},{"baseVals":{"enabled":1,"usedots":1,"additive":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"branch=rand(2);\\n\\n//base\\nwx=if(equal(sc,0),.5,wx);\\nwy=if(equal(sc,0),1,wy);\\n\\nwx=if(equal(sc,1),.5,wx);\\nwy=if(equal(sc,1),.9,wy);\\n\\n//calculate previous branch length\\nd=if(below(sc,2),.3,.7*d);\\n\\n//angle\\nwainc=if(equal(branch,1),.2+sin(time),-.2);\\n\\nwa=if(below(sc,2),3.1415927*1.5,wa+wainc);\\n\\n//branches\\nwx=if(above(sc,2),wx+cos(wa)*d,wx);\\nwy=if(above(sc,2),wy+sin(wa)*d,wy);\\n\\n//sample count\\nsc=if(equal(sc,11),0,sc+1);\\n\\na=if(below(sc,2),0,.1);\\n\\nx=wx;\\ny=wy;"},{"baseVals":{"enabled":1,"usedots":1,"additive":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"branch=rand(2);\\n\\n//base\\nwx=if(equal(sc,0),0,wx);\\nwy=if(equal(sc,0),.5,wy);\\n\\nwx=if(equal(sc,1),.1,wx);\\nwy=if(equal(sc,1),.5,wy);\\n\\n//calculate previous branch length\\nd=if(below(sc,2),.3,.7*d);\\n\\n//angle\\nwainc=if(equal(branch,1),.25+cos(time),-.25);\\n\\nwa=if(below(sc,2),3.1415927*2,wa+wainc);\\n\\n//branches\\nwx=if(above(sc,2),wx+cos(wa)*d,wx);\\nwy=if(above(sc,2),wy+sin(wa)*d,wy);\\n\\n//sample count\\nsc=if(equal(sc,11),0,sc+1);\\n\\na=if(below(sc,2),0,.1);\\n\\nx=wx;\\ny=wy;"},{"baseVals":{"enabled":1,"usedots":1,"additive":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"branch=rand(2);\\n\\n//base\\nwx=if(equal(sc,0),1,wx);\\nwy=if(equal(sc,0),.5,wy);\\n\\nwx=if(equal(sc,1),.9,wx);\\nwy=if(equal(sc,1),.5,wy);\\n\\n//calculate previous branch length\\nd=if(below(sc,2),.3,.7*d);\\n\\n//angle\\nwainc=if(equal(branch,1),.25+cos(time),-.25);\\n\\nwa=if(below(sc,2),3.1415927*1,wa+wainc);\\n\\n//branches\\nwx=if(above(sc,2),wx+cos(wa)*d,wx);\\nwy=if(above(sc,2),wy+sin(wa)*d,wy);\\n\\n//sample count\\nsc=if(equal(sc,11),0,sc+1);\\n\\na=if(below(sc,2),0,.1);\\n\\nx=wx;\\ny=wy;"}],"init_eqs_eel":"ez=1.2;","frame_eqs_eel":"ea=abs(sin(time*.25));\\neo=if(below(ea,.1),rand(3),eo);\\nez=if(below(ea,.1),.5+(rand(10)*.1),ez);\\n\\necho_alpha=ea;\\necho_orient=eo;\\necho_zoom=ez;","pixel_eqs_eel":"rot=rot+(rad*sin(time*.25)*.02);","warp":"","comp":""}')},7455:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":5,"gammaadj":2.4,"echo_zoom":1.006596,"echo_alpha":0.5,"echo_orient":1,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":1.285751,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.951307,"zoomexp":0.255373,"fshader":0.5,"zoom":0.960513,"rot":-0.04,"warp":0.972365,"sx":1.030301,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_x":64,"mv_y":20.160004,"mv_l":0.4,"mv_g":0.4,"mv_a":0},"shapes":[{"baseVals":{"textured":1,"rad":1.203212,"tex_zoom":1.220188,"a":0,"a2":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1},"init_eqs_eel":"ma=.5;\\nmy=.5;\\nmd=0; //direction 0 1 2 3","frame_eqs_eel":"","point_eqs_eel":"oldmd=md;\\nmd=(md+rand(4))%4;\\nmd=if(equal(md,oldmd),(md+1)%4,md);\\n\\nmx=mx+(equal(md,0)*.002*bass);\\nmx=mx-(equal(md,1)*.002*bass);\\nmy=my+(equal(md,2)*.002*treb);\\nmy=my-(equal(md,3)*.002*treb);\\n\\nmx=if(above(mx,.9),.5,mx);\\nmx=if(below(mx,.1),.5,mx);\\nmy=if(above(my,.9),.5,my);\\nmy=if(below(my,.1),.5,my);\\n\\nx=mx;\\ny=my;\\na=bass*.1;\\n\\nr=bass*.5;"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1},"init_eqs_eel":"mx=.5;\\nmy=.5;\\nmd=1;","frame_eqs_eel":"","point_eqs_eel":"oldmd=md;\\nmd=(md+rand(4))%4;\\nmd=if(equal(md,oldmd),(md+1)%4,md);\\n\\nmx=mx+(equal(md,0)*.002*bass);\\nmx=mx-(equal(md,1)*.002*bass);\\nmy=my+(equal(md,2)*.002*treb);\\nmy=my-(equal(md,3)*.002*treb);\\n\\nmx=if(above(mx,.9),.5,mx);\\nmx=if(below(mx,.1),.5,mx);\\nmy=if(above(my,.9),.5,my);\\nmy=if(below(my,.1),.5,my);\\n\\nx=mx;\\ny=my;\\na=bass*.1;\\n\\ng=treb*.5;"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1},"init_eqs_eel":"mx=.5;\\nmy=.5;\\nmd=2;","frame_eqs_eel":"","point_eqs_eel":"oldmd=md;\\nmd=(md+rand(4))%4;\\nmd=if(equal(md,oldmd),(md+1)%4,md);\\n\\nmx=mx+(equal(md,0)*.002*bass);\\nmx=mx-(equal(md,1)*.002*bass);\\nmy=my+(equal(md,2)*.002*treb);\\nmy=my-(equal(md,3)*.002*treb);\\n\\nmx=if(above(mx,.9),.5,mx);\\nmx=if(below(mx,.1),.5,mx);\\nmy=if(above(my,.9),.5,my);\\nmy=if(below(my,.1),.5,my);\\n\\nx=mx;\\ny=my;\\na=bass*.1;"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1},"init_eqs_eel":"mx=.5;\\nmy=.4;\\nmd=3;","frame_eqs_eel":"","point_eqs_eel":"oldmd=md;\\nmd=(md+rand(4))%4;\\nmd=if(equal(md,oldmd),(md+1)%4,md);\\n\\nmx=mx+(equal(md,0)*.002*bass);\\nmx=mx-(equal(md,1)*.002*bass);\\nmy=my+(equal(md,2)*.002*treb);\\nmy=my-(equal(md,3)*.002*treb);\\n\\nmx=if(above(mx,.9),.5,mx);\\nmx=if(below(mx,.1),.5,mx);\\nmy=if(above(my,.9),.5,my);\\nmy=if(below(my,.1),.5,my);\\n\\nx=mx;\\ny=my;\\na=bass*.1;"}],"init_eqs_eel":"","frame_eqs_eel":"","pixel_eqs_eel":"","warp":"","comp":""}')},4542:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":5,"gammaadj":1,"decay":0.95,"echo_zoom":0.996629,"echo_alpha":0.5,"echo_orient":3,"wave_mode":5,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_a":0.001,"wave_scale":1.2857,"wave_smoothing":0.9,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.999514,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0,"mv_r":0.8,"mv_g":0.8,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"additive":1,"textured":1,"rad":1.791409,"tex_zoom":100,"r":0,"b":0.1,"a":0.9,"g2":0,"b2":0.13,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"//ang=sin(time*.4);\\ntex_zoom=.557;\\ntex_ang=.001;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"thick":1,"g":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));"},{"baseVals":{"enabled":1,"thick":1,"g":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));"},{"baseVals":{"enabled":1,"thick":1,"g":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));"},{"baseVals":{"enabled":1,"thick":1,"g":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));"}],"init_eqs_eel":"","frame_eqs_eel":"decay=.90;","pixel_eqs_eel":"zoom=1.01;","warp":"","comp":""}')},2958:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1,"decay":0.955,"echo_zoom":0.997,"echo_alpha":0.5,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"fshader":1,"zoom":0.99951,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.005,"ob_a":1,"ib_size":0,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":14,"num_inst":266,"rad":0.0303,"tex_ang":0.62832,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));"},{"baseVals":{"enabled":1,"sides":14,"num_inst":318,"rad":0.03,"tex_ang":0.62832,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));"},{"baseVals":{"enabled":1,"sides":14,"num_inst":252,"rad":0.0297,"tex_ang":0.62832,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));"},{"baseVals":{"enabled":1,"sides":14,"num_inst":206,"rad":0.0303,"tex_ang":0.62832,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));"}],"waves":[{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));"}],"init_eqs_eel":"","frame_eqs_eel":"vb = vb*0.95 + (1-vb)*pow(bass*treb*mid,2)*0.02;\\nvvb = vvb*0.95 + (1-vvb)*vb*0.01;\\nvm = vm*0.95 + (1-vm)*pow(mid,2)*0.02;\\nvvm = vvm*0.95 + (1-vvm)*vm*0.01;\\nvt = vt*0.95 + (1-vt)*pow(treb,2)*0.02;\\nvvt = vvt*0.95 + (1-vvt)*vt*0.01;\\nvvb = min(1,max(0,vvb));\\nvvm = min(1,max(0,vvm));\\nvvt = min(1,max(0,vvt));\\nq1 = vvb*2;//0.5 + vb - vvb;\\nq2 = vvm*2;//0.5 + vm - vvm;\\nq3 = vvt*2;//0.5 + vt - vvt;\\nv=2;\\nbb = bb - vvb*v;\\nmm = mm - vvm*v;\\ntt = tt - vvt*v;\\nq4 = -bb;\\nq5 = -mm;\\nq6 = -tt;\\nq4=(q1+q2+q3)*5;\\nq5=(q1+q2+q3)*5;\\nq6=(q1+q2+q3)*5;\\nq7=(q1+q2+q3)*5;\\nq8=(q1+q2+q3)*5;\\nq9=(q1+q2+q3)*5;\\nq10=(q1+q2+q3)*5;\\nq11=(q1+q2+q3)*5;\\nq12=(q1+q2+q3)*5;\\nq13=(q1+q2+q3)*5;\\nq14=(q1+q2+q3)*5;\\nq15=(q1+q2+q3)*5;\\nq16=(q1+q2+q3)*5;\\nq17=(q1+q2+q3)*5;\\nq18=(q1+q2+q3)*5;\\nq19=(q1+q2+q3)*5;\\nq20=(q1+q2+q3)*5;\\nq21=(q1+q2+q3)*5;\\nq22=(q1+q2+q3)*5;\\nq23=(q1+q2+q3)*5;\\nq24=(q1+q2+q3)*5;\\nq25=(q1+q2+q3)*5;\\nq26=(q1+q2+q3)*5;\\nq27=(q1+q2+q3)*5;\\nq28=(q1+q2+q3)*5;\\nq29=(q1+q2+q3)*5;\\nq30=(q1+q2+q3)*5;\\nq31=(q1+q2+q3)*5;\\nq32=(q1+q2+q3)*5;\\n// these lines belong to the composite shader\\na = a*0.98 - (bass-treb)*0.01;\\nq15 = a;\\nv = v*0.96 + a*0.12;\\nq16 = v;\\nw = w - v*0.01;\\nq18 = w;\\nq19 = 0.5-(bass_att-treb_att)*0.15;\\nd = d + (bass_att-0.5)*0.01*60/fps;\\nd2 = d2 + (treb_att-0.5)*0.006*60/fps;\\nq20 = d;\\nq21 = d2;\\nmonitor = d2;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (uv - 0.5);\\n  ret_1.x = texture (sampler_main, (tmpvar_2 + 0.5)).x;\\n  ret_1.y = texture (sampler_main, ((tmpvar_2 * 0.98) + 0.5)).y;\\n  ret_1.z = texture (sampler_main, ((tmpvar_2 * 0.95) + 0.5)).z;\\n  vec3 tmpvar_3;\\n  tmpvar_3.x = -(ret_1.x);\\n  tmpvar_3.y = (ret_1.x - ret_1.y);\\n  tmpvar_3.z = (ret_1.y - ret_1.z);\\n  ret_1 = (ret_1 + (tmpvar_3 * 0.03));\\n  ret_1 = (ret_1 + ((\\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5)\\n   / 256.0) * 3.0));\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = ret_1;\\n  ret = tmpvar_4.xyz;\\n }","comp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = texture (sampler_main, (uv + (cos(\\n    (texture (sampler_main, uv).xz * 17.3)\\n  ) * 0.02))).xyz;\\n  ret = tmpvar_1.xyz;\\n }"}')},8434:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1,"decay":0.955,"echo_zoom":0.997,"echo_alpha":0.5,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"fshader":1,"zoom":0.99951,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":14,"num_inst":198,"rad":0.06081,"tex_ang":0.62832,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));"},{"baseVals":{"enabled":1,"sides":3,"num_inst":197,"rad":0.05396,"ang":0.43982,"tex_ang":0.62832,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));"},{"baseVals":{"enabled":1,"sides":14,"num_inst":32,"rad":0.01525,"tex_ang":0.62832,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));"},{"baseVals":{"enabled":1,"sides":14,"num_inst":32,"rad":0.01525,"tex_ang":0.62832,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));"}],"waves":[{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));"}],"init_eqs_eel":"","frame_eqs_eel":"warp = 0;\\nzoom = 1.001;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 12.0);\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 0.8)) + rand_frame.xy);\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1)).x;\\n  tmpvar_4.y = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1)).x;\\n  vec2 tmpvar_5;\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv_orig - uv);\\n  tmpvar_5 = (((uv_orig - \\n    (tmpvar_6 * 0.4)\\n  ) + (\\n    (tmpvar_4 * texsize.zw)\\n   * 2.0)) + ((\\n    (texture (sampler_noise_lq, tmpvar_3).xy - 0.5)\\n   * texsize.zw) * 4.0));\\n  ret_1.x = (((texture (sampler_main, tmpvar_5).x - \\n    ((texture (sampler_main, tmpvar_5).x - ((texture (sampler_blur3, tmpvar_5).xyz * scale3) + bias3).x) * 0.02)\\n  ) - 0.008) + ((texture (sampler_noise_lq, tmpvar_3).x - 0.5) * 0.1));\\n  ret_1.y = texture (sampler_main, uv).y;\\n  ret_1.y = (ret_1.y + ((\\n    (ret_1.y - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).y)\\n   * 0.1) - 0.015));\\n  ret_1.z = ((texture (sampler_main, (uv_orig + \\n    (tmpvar_6 * 0.8)\\n  )).z * 0.94) - 0.004);\\n  vec4 tmpvar_7;\\n  tmpvar_7.w = 1.0;\\n  tmpvar_7.xyz = ret_1;\\n  ret = tmpvar_7.xyz;\\n }","comp":"float xlat_mutablea;\\nfloat xlat_mutableb;\\nfloat xlat_mutablec;\\n shader_body { \\n  vec2 uv_1;\\n  uv_1 = (uv * 2.0);\\n  vec2 tmpvar_2;\\n  tmpvar_2 = floor((fract(\\n    (uv_1 * 0.5)\\n  ) * 2.0));\\n  uv_1 = ((fract(uv_1) * (1.0 - tmpvar_2)) + (tmpvar_2 * fract(\\n    (1.0 - uv_1)\\n  )));\\n  uv_1 = ((0.5 + (\\n    (uv_1 - 0.5)\\n   * vec2(0.75, -0.9))) - vec2(0.0, 0.05));\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (((\\n    (((texture (sampler_blur3, uv_1).xyz * scale3) + bias3) + ((texture (sampler_blur2, uv_1).xyz * scale2) + bias2))\\n   + \\n    ((texture (sampler_blur1, uv_1).xyz * scale1) + bias1)\\n  ) + texture (sampler_main, uv_1).xyz) + 0.04);\\n  xlat_mutablea = (tmpvar_3.x / 4.0);\\n  xlat_mutableb = (tmpvar_3.y / 4.0);\\n  xlat_mutablec = (tmpvar_3.z / 4.0);\\n  xlat_mutablec = ((xlat_mutablec + xlat_mutableb) - (xlat_mutablec * xlat_mutableb));\\n  xlat_mutablea = ((xlat_mutablea + xlat_mutablec) - (xlat_mutablea * xlat_mutablec));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = vec3((1.4 * xlat_mutablea));\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = ((vec3(4.0, 2.8, 0.0) * (\\n    (tmpvar_4 * (1.0 - tmpvar_4))\\n   * \\n    (1.0 - tmpvar_4)\\n  )) + ((tmpvar_4 * tmpvar_4) * vec3(-0.3, 0.2, 0.6)));\\n  ret = tmpvar_5.xyz;\\n }"}')},8075:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1,"decay":1,"echo_zoom":1,"wrap":0,"darken_center":1,"brighten":1,"darken":1,"wave_a":0.001,"warpanimspeed":0.141,"warpscale":14.497,"zoom":0.99951,"warp":0.75055,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":6,"rad":0.17809,"ang":0.26,"tex_zoom":0.39711,"g":0.7,"b":0.6,"r2":0.4,"g2":0,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x=.11+.22*rand(5);\\ny=.1+.16*(2*time%6);\\n\\nb=.6+.3*q3;\\ng=.7+.2*q3;\\nr= .7;\\n\\ng2=.3*g;\\nr2=.3*r;\\nb2=.3*b;"},{"baseVals":{"enabled":1,"sides":6,"additive":1,"rad":0.17809,"ang":0.26,"tex_zoom":0.99999,"g":1,"b":0.4,"a":0.5,"r2":0.2,"g2":0,"b2":0.3,"a2":0.6,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x=.11+.22*rand(5);\\ny=.1+.16*(2*time%6);\\n\\nb=.6+.3*q3;\\ng=.7+.2*q3;\\nr= .7;\\n\\ng2=.3*g;\\nr2=.3*r;\\nb2=.3*b;"},{"baseVals":{"enabled":1,"sides":6,"textured":1,"rad":0.17633,"ang":0.26,"tex_zoom":1.19615,"r2":1,"b2":1,"a2":0.2,"border_r":0,"border_g":0,"border_b":0,"border_a":0.2},"init_eqs_eel":"","frame_eqs_eel":"x=.22*rand(6);\\ny=.18+.16*(2*time%5);\\n\\ng=1.5*q3;\\nr=1.3*q4;\\nb=1.7*q5;\\n\\ntex_ang=-q1;\\ntex_zoom=2+sin(q1);"},{"baseVals":{"enabled":1,"sides":6,"textured":1,"rad":0.16284,"ang":0.26,"r2":0.8,"g2":0.8,"b2":0.8,"a2":0.2,"border_r":0,"border_g":0,"border_b":0,"border_a":0.2},"init_eqs_eel":"","frame_eqs_eel":"x=.11+.22*rand(5);\\ny=.1+.16*(2*time%6);\\n\\nr=.3*q3;\\nb=.2*q2;\\ng=.1*q1;\\n\\ntex_ang=q1;\\ntex_zoom=2+1.2*sin(1.5*q1);"}],"waves":[{"baseVals":{"samples":395,"usedots":1,"r":0.15,"g":0.15,"b":0.15,"a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"usedots":1,"scaling":0.01,"a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"additive":1,"a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"additive":1,"a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"x1 = 0.5;\\nx2 = 0.51;\\n\\ny2 = 1;\\ny1 = 0.7;\\n\\nx3 = 0.8;\\ny3 = 0.5;\\n\\nx4 = 0.2;\\ny4 = 0.5;\\n\\n\\nax1 = 0;\\nay1 = 0;\\nax2 = 0;\\nay2 = 0;\\nax3 = 0;\\nay3 = 0;\\n\\nvx1 = 0.000;\\nvx2 = 0.000;","frame_eqs_eel":"sx=1+.01*(8*bass%8)*equal(time%(int(24-2*bass)),0);\\nsy=1+.01*(8*mid%8) *equal(time%(12+int(24-2*bass)),0);\\n\\nzoom = 0.99;\\n//warp = 0;\\nwave_a = 0;\\n//pogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogo\\nr = 0.12+ max(bass_att,treb_att)*0.004;\\nbounce = below(y1,r);\\ny1 = y1+vy1;vy1 = if(bounce, abs(vy1)*0.94 + (r-y1)*0.1, vy1-0.00006*60/fps);\\nbounce = below(x1,r);x1 = x1+vx1;vx1 = if(bounce, abs(vx1)*0.94 + (r-x1)*0.1, vx1);\\nbounce = above(x1,1-r);vx1 = if(bounce, - abs(vx1)*0.94 + (1-r-x1)*0.04, vx1);\\nbounce = below(y2,r);y2 = y2 + vy2;vy2 = if(bounce,abs(vy2)*0.94+(r-y2)*.1, vy2-0.00006*60/fps);\\nbounce = below(x2,r);x2 = x2+ vx2;vx2 = if(bounce, abs(vx2)*0.94 + (r-x2)*0.1, vx2);\\nbounce = above(x2,1-r);vx2 = if(bounce, - abs(vx2)*0.94 + (1-r-x2)*0.1, vx2);\\nbounce = below(y3,r);y3 = y3 + vy3;vy3 = if(bounce,abs(vy3)*0.94+(r-y3)*.1, vy3-0.00006*60/fps);\\nbounce = below(x3,r);x3 = x3+ vx3;vx3 = if(bounce, abs(vx3)*0.94 + (r-x3)*0.1, vx3);\\nbounce = above(x3,1-r);vx3 = if(bounce, - abs(vx3)*0.94 + (1-r-x3)*0.1, vx3);\\nbounce = below(y4,r);y4 = y4 + vy4;vy4 = if(bounce,abs(vy4)*0.94+(r-y4)*.1, vy4-0.00006*60/fps);\\nbounce = below(x4,r);x4 = x4+ vx4;vx4 = if(bounce, abs(vx4)*0.94 + (r-x4)*0.1, vx4);\\nbounce = above(x4,1-r);vx4 = if(bounce, - abs(vx4)*0.94 + (1-r-x4)*0.1, vx4);\\nbounce = below( sqrt( sqr(x1+vx1-x2-vx2) + sqr(y1+vy1-y2-vy2)), 2*r);\\nref_ang = atan2(x2-x1,y2-y1)+asin(1); // common tangent\\nv1 = sqrt(vx1*vx1+vy1*vy1);v2 = sqrt(vx2*vx2+vy2*vy2);w1 = atan2(vx1,vy1);w2 = atan2(vx2,vy2);\\nvx1 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx1);\\nvy1 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy1);\\nvx2 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx2);\\nvy2 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy2);\\nbounce = below( sqrt( sqr(x1+vx1-x3-vx3) + sqr(y1+vy1-y3-vy3)), 2*r);\\nref_ang = atan2(x3-x1,y3-y1)+asin(1); // common tangent\\nv1 = sqrt(vx1*vx1+vy1*vy1);v2 = sqrt(vx3*vx3+vy3*vy3);w1 = atan2(vx1,vy1);w2 = atan2(vx3,vy3);\\nvx1 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx1);\\nvy1 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy1);\\nvx3 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx3);\\nvy3 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy3);\\nbounce = below( sqrt( sqr(x2+vx2-x3-vx3) + sqr(y2+vy2-y3-vy3)), 2*r);\\nref_ang = atan2(x3-x2,y3-y2)+asin(1); // common tangent\\nv1 = sqrt(vx2*vx2+vy2*vy2);v2 = sqrt(vx3*vx3+vy3*vy3);w1 = atan2(vx2,vy2);w2 = atan2(vx3,vy3);\\nvx2 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx2);\\nvy2 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy2);\\nvx3 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx3);\\nvy3 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy3);\\nbounce = below( sqrt( sqr(x1+vx1-x4-vx4) + sqr(y1+vy1-y4-vy4)), 2*r);\\nref_ang = atan2(x4-x1,y4-y1)+asin(1); // common tangent\\nv1 = sqrt(vx1*vx1+vy1*vy1);v2 = sqrt(vx4*vx4+vy4*vy4);w1 = atan2(vx1,vy1);w2 = atan2(vx4,vy4);\\nvx1 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx1);\\nvy1 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy1);\\nvx4 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx4);\\nvy4 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy4);\\nbounce = below( sqrt( sqr(x2+vx2-x4-vx4) + sqr(y2+vy2-y4-vy4)), 2*r);\\nref_ang = atan2(x4-x2,y4-y2)+asin(1); // common tangent\\nv1 = sqrt(vx2*vx2+vy2*vy2);v2 = sqrt(vx4*vx4+vy4*vy4);w1 = atan2(vx2,vy2);w2 = atan2(vx4,vy4);\\nvx2 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx2);\\nvy2 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy2);\\nvx4 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx4);\\nvy4 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy4);\\nbounce = below( sqrt( sqr(x3+vx3-x4-vx4) + sqr(y3+vy3-y4-vy4)), 2*r);\\nref_ang = atan2(x4-x3,y4-y3)+asin(1); // common tangent\\nv1 = sqrt(vx3*vx3+vy3*vy3);v2 = sqrt(vx4*vx4+vy4*vy4);w1 = atan2(vx3,vy3);w2 = atan2(vx4,vy4);\\nvx3 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx3);\\nvy3 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy3);\\nvx4 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx4);\\nvy4 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy4);\\n//pogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogo\\nq1 = aspectx;\\nq2 = aspecty;\\nq3 = x1;\\nq4 = y1;\\nq5 = r;\\nq6 = x2;\\nq7 = y2;\\nq8 = r;\\nq9 = x3;\\nq10 = y3;\\nq11 = r;\\nq12 = x4;\\nq13 = y4;\\nq14 = r;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  ret_1.z = (texture (sampler_main, uv).z * 0.5);\\n  vec2 tmpvar_2;\\n  tmpvar_2 = ((uv_orig * texsize.xy) * texsize_noise_lq.zw);\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (texsize.zw * 4.0);\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = (((2.0 * \\n    ((texture (sampler_blur1, (uv_orig + (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv_orig - (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1) + bias1)\\n  )).y * 0.5);\\n  tmpvar_4.y = (((2.0 * \\n    ((texture (sampler_blur1, (uv_orig + (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv_orig - (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1) + bias1)\\n  )).y * 0.5);\\n  ret_1.y = texture (sampler_fw_main, clamp ((uv_orig + (\\n    (tmpvar_4 * texsize.zw)\\n   * 4.0)), 0.0, 1.0)).y;\\n  ret_1.y = (ret_1.y + ((\\n    (ret_1 - ((texture (sampler_blur1, uv_orig).xyz * scale1) + bias1))\\n  .y * 0.025) + -0.014));\\n  ret_1.y = (ret_1.y + ((texture (sampler_noise_lq, tmpvar_2).y - 0.5) * 0.02));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = (((2.0 * \\n    ((texture (sampler_blur1, (uv_orig + (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv_orig - (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1) + bias1)\\n  )).x * 0.5);\\n  tmpvar_5.y = (((2.0 * \\n    ((texture (sampler_blur1, (uv_orig + (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv_orig - (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1) + bias1)\\n  )).x * 0.5);\\n  ret_1.x = ((texture (sampler_main, (uv - \\n    ((tmpvar_5 * texsize.zw) * 4.0)\\n  )).x - (ret_1.y * 0.01)) + 0.004);\\n  ret_1.x = (ret_1.x + ((\\n    (texture (sampler_noise_lq, tmpvar_2).x - 0.5)\\n   * 0.01) + (ret_1.z * 0.14)));\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = ret_1;\\n  ret = tmpvar_6.xyz;\\n }","comp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1.x = q3;\\n  tmpvar_1.y = q4;\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = q6;\\n  tmpvar_2.y = q7;\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = q9;\\n  tmpvar_3.y = q10;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = q12;\\n  tmpvar_4.y = q13;\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (texsize.zw * 1.2);\\n  vec3 tmpvar_6;\\n  tmpvar_6 = (texture (sampler_main, (uv + (vec2(1.0, 0.0) * tmpvar_5))).xyz - texture (sampler_main, (uv - (vec2(1.0, 0.0) * tmpvar_5))).xyz);\\n  vec3 tmpvar_7;\\n  tmpvar_7 = (texture (sampler_main, (uv + (vec2(0.0, 1.0) * tmpvar_5))).xyz - texture (sampler_main, (uv - (vec2(0.0, 1.0) * tmpvar_5))).xyz);\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = dot (tmpvar_6, vec3(0.32, 0.49, 0.29));\\n  tmpvar_8.y = dot (tmpvar_7, vec3(0.32, 0.49, 0.29));\\n  vec2 x_9;\\n  x_9 = ((uv - (tmpvar_8 * 8.0)) - (1.0 - tmpvar_1));\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = dot (tmpvar_6, vec3(0.32, 0.49, 0.29));\\n  tmpvar_10.y = dot (tmpvar_7, vec3(0.32, 0.49, 0.29));\\n  vec2 x_11;\\n  x_11 = ((uv - (tmpvar_10 * 8.0)) - (1.0 - tmpvar_2));\\n  vec2 tmpvar_12;\\n  tmpvar_12.x = dot (tmpvar_6, vec3(0.32, 0.49, 0.29));\\n  tmpvar_12.y = dot (tmpvar_7, vec3(0.32, 0.49, 0.29));\\n  vec2 x_13;\\n  x_13 = ((uv - (tmpvar_12 * 8.0)) - (1.0 - tmpvar_3));\\n  vec2 tmpvar_14;\\n  tmpvar_14.x = dot (tmpvar_6, vec3(0.32, 0.49, 0.29));\\n  tmpvar_14.y = dot (tmpvar_7, vec3(0.32, 0.49, 0.29));\\n  vec2 x_15;\\n  x_15 = ((uv - (tmpvar_14 * 8.0)) - (1.0 - tmpvar_4));\\n  vec4 tmpvar_16;\\n  tmpvar_16.w = 1.0;\\n  tmpvar_16.xyz = (mix (texture (sampler_main, uv).xyz, max (\\n    max ((vec3((1.0 - pow (\\n      sqrt(dot (x_9, x_9))\\n    , 0.2))) * vec3(2.0, 1.0, -1.0)), (vec3((1.0 - pow (\\n      sqrt(dot (x_11, x_11))\\n    , 0.2))) * vec3(2.0, -1.0, 1.0)))\\n  , \\n    max ((vec3((1.0 - pow (\\n      sqrt(dot (x_13, x_13))\\n    , 0.2))) * vec3(-1.0, 1.0, 2.0)), (vec3((1.0 - pow (\\n      sqrt(dot (x_15, x_15))\\n    , 0.2))) * vec3(1.0, -1.0, 2.0)))\\n  ), vec3(0.5, 0.5, 0.5)) * 1.25);\\n  ret = tmpvar_16.xyz;\\n }"}')},8786:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":3,"gammaadj":1,"decay":1,"echo_zoom":1,"wrap":0,"darken_center":1,"brighten":1,"darken":1,"wave_a":0.001,"warpanimspeed":0.141,"warpscale":14.497,"zoom":0.99951,"warp":0.75055,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":6,"rad":0.17809,"ang":0.26,"tex_zoom":0.39711,"g":0.7,"b":0.6,"r2":0.4,"g2":0,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x=.11+.22*rand(5);\\ny=.1+.16*(2*time%6);\\n\\nb=.6+.3*q3;\\ng=.7+.2*q3;\\nr= .7;\\n\\ng2=.3*g;\\nr2=.3*r;\\nb2=.3*b;"},{"baseVals":{"enabled":1,"sides":6,"additive":1,"rad":0.17809,"ang":0.26,"tex_zoom":0.99999,"g":1,"b":0.4,"a":0.5,"r2":0.2,"g2":0,"b2":0.3,"a2":0.6,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x=.11+.22*rand(5);\\ny=.1+.16*(2*time%6);\\n\\nb=.6+.3*q3;\\ng=.7+.2*q3;\\nr= .7;\\n\\ng2=.3*g;\\nr2=.3*r;\\nb2=.3*b;"},{"baseVals":{"enabled":1,"sides":6,"textured":1,"rad":0.17633,"ang":0.26,"tex_zoom":1.19615,"r2":1,"b2":1,"a2":0.2,"border_r":0,"border_g":0,"border_b":0,"border_a":0.2},"init_eqs_eel":"","frame_eqs_eel":"x=.22*rand(6);\\ny=.18+.16*(2*time%5);\\n\\ng=1.5*q3;\\nr=1.3*q4;\\nb=1.7*q5;\\n\\ntex_ang=-q1;\\ntex_zoom=2+sin(q1);"},{"baseVals":{"enabled":1,"sides":6,"textured":1,"rad":0.16284,"ang":0.26,"r2":0.8,"g2":0.8,"b2":0.8,"a2":0.2,"border_r":0,"border_g":0,"border_b":0,"border_a":0.2},"init_eqs_eel":"","frame_eqs_eel":"x=.11+.22*rand(5);\\ny=.1+.16*(2*time%6);\\n\\nr=.3*q3;\\nb=.2*q2;\\ng=.1*q1;\\n\\ntex_ang=q1;\\ntex_zoom=2+1.2*sin(1.5*q1);"}],"waves":[{"baseVals":{"samples":395,"usedots":1,"r":0.15,"g":0.15,"b":0.15,"a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"usedots":1,"scaling":0.01,"a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"additive":1,"a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"additive":1,"a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"x1 = 0.5;\\nx2 = 0.51;\\n\\ny2 = 1;\\ny1 = 0.7;\\n\\nx3 = 0.8;\\ny3 = 0.5;\\n\\nx4 = 0.2;\\ny4 = 0.5;\\n\\n\\nax1 = 0;\\nay1 = 0;\\nax2 = 0;\\nay2 = 0;\\nax3 = 0;\\nay3 = 0;\\n\\nvx1 = 0.000;\\nvx2 = 0.000;","frame_eqs_eel":"sx=1+.01*(8*bass%8)*equal(time%(int(24-2*bass)),0);\\nsy=1+.01*(8*mid%8) *equal(time%(12+int(24-2*bass)),0);\\n\\nzoom = 0.99;\\n//warp = 0;\\nwave_a = 0;\\n//pogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogo\\nr = 0.12+ max(bass_att,treb_att)*0.004;\\nbounce = below(y1,r);\\ny1 = y1+vy1;vy1 = if(bounce, abs(vy1)*0.94 + (r-y1)*0.1, vy1-0.00006*60/fps);\\nbounce = below(x1,r);x1 = x1+vx1;vx1 = if(bounce, abs(vx1)*0.94 + (r-x1)*0.1, vx1);\\nbounce = above(x1,1-r);vx1 = if(bounce, - abs(vx1)*0.94 + (1-r-x1)*0.04, vx1);\\nbounce = below(y2,r);y2 = y2 + vy2;vy2 = if(bounce,abs(vy2)*0.94+(r-y2)*.1, vy2-0.00006*60/fps);\\nbounce = below(x2,r);x2 = x2+ vx2;vx2 = if(bounce, abs(vx2)*0.94 + (r-x2)*0.1, vx2);\\nbounce = above(x2,1-r);vx2 = if(bounce, - abs(vx2)*0.94 + (1-r-x2)*0.1, vx2);\\nbounce = below(y3,r);y3 = y3 + vy3;vy3 = if(bounce,abs(vy3)*0.94+(r-y3)*.1, vy3-0.00006*60/fps);\\nbounce = below(x3,r);x3 = x3+ vx3;vx3 = if(bounce, abs(vx3)*0.94 + (r-x3)*0.1, vx3);\\nbounce = above(x3,1-r);vx3 = if(bounce, - abs(vx3)*0.94 + (1-r-x3)*0.1, vx3);\\nbounce = below(y4,r);y4 = y4 + vy4;vy4 = if(bounce,abs(vy4)*0.94+(r-y4)*.1, vy4-0.00006*60/fps);\\nbounce = below(x4,r);x4 = x4+ vx4;vx4 = if(bounce, abs(vx4)*0.94 + (r-x4)*0.1, vx4);\\nbounce = above(x4,1-r);vx4 = if(bounce, - abs(vx4)*0.94 + (1-r-x4)*0.1, vx4);\\nbounce = below( sqrt( sqr(x1+vx1-x2-vx2) + sqr(y1+vy1-y2-vy2)), 2*r);\\nref_ang = atan2(x2-x1,y2-y1)+asin(1); // common tangent\\nv1 = sqrt(vx1*vx1+vy1*vy1);v2 = sqrt(vx2*vx2+vy2*vy2);w1 = atan2(vx1,vy1);w2 = atan2(vx2,vy2);\\nvx1 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx1);\\nvy1 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy1);\\nvx2 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx2);\\nvy2 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy2);\\nbounce = below( sqrt( sqr(x1+vx1-x3-vx3) + sqr(y1+vy1-y3-vy3)), 2*r);\\nref_ang = atan2(x3-x1,y3-y1)+asin(1); // common tangent\\nv1 = sqrt(vx1*vx1+vy1*vy1);v2 = sqrt(vx3*vx3+vy3*vy3);w1 = atan2(vx1,vy1);w2 = atan2(vx3,vy3);\\nvx1 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx1);\\nvy1 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy1);\\nvx3 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx3);\\nvy3 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy3);\\nbounce = below( sqrt( sqr(x2+vx2-x3-vx3) + sqr(y2+vy2-y3-vy3)), 2*r);\\nref_ang = atan2(x3-x2,y3-y2)+asin(1); // common tangent\\nv1 = sqrt(vx2*vx2+vy2*vy2);v2 = sqrt(vx3*vx3+vy3*vy3);w1 = atan2(vx2,vy2);w2 = atan2(vx3,vy3);\\nvx2 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx2);\\nvy2 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy2);\\nvx3 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx3);\\nvy3 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy3);\\nbounce = below( sqrt( sqr(x1+vx1-x4-vx4) + sqr(y1+vy1-y4-vy4)), 2*r);\\nref_ang = atan2(x4-x1,y4-y1)+asin(1); // common tangent\\nv1 = sqrt(vx1*vx1+vy1*vy1);v2 = sqrt(vx4*vx4+vy4*vy4);w1 = atan2(vx1,vy1);w2 = atan2(vx4,vy4);\\nvx1 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx1);\\nvy1 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy1);\\nvx4 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx4);\\nvy4 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy4);\\nbounce = below( sqrt( sqr(x2+vx2-x4-vx4) + sqr(y2+vy2-y4-vy4)), 2*r);\\nref_ang = atan2(x4-x2,y4-y2)+asin(1); // common tangent\\nv1 = sqrt(vx2*vx2+vy2*vy2);v2 = sqrt(vx4*vx4+vy4*vy4);w1 = atan2(vx2,vy2);w2 = atan2(vx4,vy4);\\nvx2 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx2);\\nvy2 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy2);\\nvx4 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx4);\\nvy4 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy4);\\nbounce = below( sqrt( sqr(x3+vx3-x4-vx4) + sqr(y3+vy3-y4-vy4)), 2*r);\\nref_ang = atan2(x4-x3,y4-y3)+asin(1); // common tangent\\nv1 = sqrt(vx3*vx3+vy3*vy3);v2 = sqrt(vx4*vx4+vy4*vy4);w1 = atan2(vx3,vy3);w2 = atan2(vx4,vy4);\\nvx3 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx3);\\nvy3 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy3);\\nvx4 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx4);\\nvy4 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy4);\\n//pogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogo\\nq1 = aspectx;\\nq2 = aspecty;\\nq3 = x1;\\nq4 = y1;\\nq5 = r;\\nq6 = x2;\\nq7 = y2;\\nq8 = r;\\nq9 = x3;\\nq10 = y3;\\nq11 = r;\\nq12 = x4;\\nq13 = y4;\\nq14 = r;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 1.5)) + rand_frame.xy);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ((texture (sampler_main, (\\n    mix (uv_orig, uv, vec2(((dot (texture (sampler_main, \\n      mix (uv_orig, uv, vec2(8.0, 8.0))\\n    ).xyz, vec3(0.32, 0.49, 0.29)) - dot (\\n      ((texture (sampler_blur1, mix (uv_orig, uv, vec2(-8.0, -8.0))).xyz * scale1) + bias1)\\n    , vec3(0.32, 0.49, 0.29))) * 0.75)))\\n   + \\n    (((texture (sampler_noise_lq, tmpvar_1) - 0.5).xy * texsize.zw) * 0.5)\\n  )).xyz + (\\n    (texture (sampler_noise_lq, tmpvar_1) - 0.5)\\n   * 0.004).xyz) + -0.0015);\\n  ret = tmpvar_2.xyz;\\n }","comp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1.x = q3;\\n  tmpvar_1.y = q4;\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = q6;\\n  tmpvar_2.y = q7;\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = q9;\\n  tmpvar_3.y = q10;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = q12;\\n  tmpvar_4.y = q13;\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (texsize.zw * 1.2);\\n  vec3 tmpvar_6;\\n  tmpvar_6 = (texture (sampler_main, (uv + (vec2(1.0, 0.0) * tmpvar_5))).xyz - texture (sampler_main, (uv - (vec2(1.0, 0.0) * tmpvar_5))).xyz);\\n  vec3 tmpvar_7;\\n  tmpvar_7 = (texture (sampler_main, (uv + (vec2(0.0, 1.0) * tmpvar_5))).xyz - texture (sampler_main, (uv - (vec2(0.0, 1.0) * tmpvar_5))).xyz);\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = dot (tmpvar_6, vec3(0.32, 0.49, 0.29));\\n  tmpvar_8.y = dot (tmpvar_7, vec3(0.32, 0.49, 0.29));\\n  vec2 x_9;\\n  x_9 = ((uv - (tmpvar_8 * 8.0)) - (1.0 - tmpvar_1));\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = dot (tmpvar_6, vec3(0.32, 0.49, 0.29));\\n  tmpvar_10.y = dot (tmpvar_7, vec3(0.32, 0.49, 0.29));\\n  vec2 x_11;\\n  x_11 = ((uv - (tmpvar_10 * 8.0)) - (1.0 - tmpvar_2));\\n  vec2 tmpvar_12;\\n  tmpvar_12.x = dot (tmpvar_6, vec3(0.32, 0.49, 0.29));\\n  tmpvar_12.y = dot (tmpvar_7, vec3(0.32, 0.49, 0.29));\\n  vec2 x_13;\\n  x_13 = ((uv - (tmpvar_12 * 8.0)) - (1.0 - tmpvar_3));\\n  vec2 tmpvar_14;\\n  tmpvar_14.x = dot (tmpvar_6, vec3(0.32, 0.49, 0.29));\\n  tmpvar_14.y = dot (tmpvar_7, vec3(0.32, 0.49, 0.29));\\n  vec2 x_15;\\n  x_15 = ((uv - (tmpvar_14 * 8.0)) - (1.0 - tmpvar_4));\\n  vec4 tmpvar_16;\\n  tmpvar_16.w = 1.0;\\n  tmpvar_16.xyz = (mix (texture (sampler_main, uv).xyz, max (\\n    max ((vec3((1.0 - pow (\\n      sqrt(dot (x_9, x_9))\\n    , 0.2))) * vec3(2.0, 1.0, -1.0)), (vec3((1.0 - pow (\\n      sqrt(dot (x_11, x_11))\\n    , 0.2))) * vec3(2.0, -1.0, 1.0)))\\n  , \\n    max ((vec3((1.0 - pow (\\n      sqrt(dot (x_13, x_13))\\n    , 0.2))) * vec3(-1.0, 1.0, 2.0)), (vec3((1.0 - pow (\\n      sqrt(dot (x_15, x_15))\\n    , 0.2))) * vec3(1.0, -1.0, 2.0)))\\n  ), vec3(0.5, 0.5, 0.5)) * 1.25);\\n  ret = tmpvar_16.xyz;\\n }"}')},2205:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":4,"gammaadj":1,"decay":0.995,"echo_zoom":1.007,"echo_orient":3,"wave_mode":7,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":0.958,"wave_smoothing":0.45,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0.05,"ob_g":0.1,"ob_b":1,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":25.6,"mv_y":9.6,"mv_l":0,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"textured":1,"x":0.09,"y":0.9,"rad":0.22437,"tex_zoom":1.76002,"r2":1,"g2":0,"a2":0.6,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"additive":1,"x":0.26,"y":0.2,"rad":0.39317,"tex_zoom":6.19589,"r":0,"g":0.55,"b":0.5,"g2":0.4,"b2":0.4,"a2":0.07,"border_r":0.3,"border_g":0.7,"border_b":0.8,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":44,"additive":1,"x":0.503,"rad":0.03886,"tex_zoom":0.60986,"g":0.1,"a":0.9,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"rad":0.01,"tex_zoom":0.49981,"r":0,"g2":0,"border_r":0.2,"border_g":0.7,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"samples":282,"sep":20,"usedots":1,"thick":1,"additive":1,"scaling":3.91581,"smoothing":0.1,"r":0.2,"g":0.3,"a":0.6,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"usedots":1,"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"r":0,"g":0.2,"b":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"//******** INITIALIZATION *********\\n//---------- some global vars, do not change -------------\\navg = 0.01;\\nq7 = .25; //MyZoom\\nq8 =  rand(2.0)-1.0; //fractal modifier\\n//q8 = 1; //#\\nq16 = 1 + rand(2); //Tele ; rather fish eye\\n//q16 = 1; //#\\nq18 = rand(0.8)+.1; //brightness balance back/front\\nq30 = 1; //logarithmic Z-Dist storage; unused\\nq31 =128;\\nstart = 1; travel = 0; RotZ = 0; look = 0; slow = 0; t0 = time+3; lampx = .5; lampy = .5;\\ncran0 = rand(1);\\nn = 0; loop (10000, gmegabuf(n)=0; n=n+1; ); \\nn = 0; loop (10000,  megabuf(n)=0; n=n+1; ); \\ntrelx = 0;  trely = 0; trelz = 0;\\nreg20 = 1; reg21 = 0; reg22 = 0; reg23 = 0; reg24 = 1; reg25 = 0; reg26 = 0; reg27 = 0; reg28 = 1;\\n\\n//Find random starting point\\nwhile (exec2(\\n  ran1 = rand(800)/100;  ran2 = rand(800)/100;  ran3 = rand(800)/100;\\n  PosX = rand(5)-2;   PosY = rand(5)-2;   PosZ = rand(5)-2; \\n\\n//  PosX = 3.3; PosY = 2; PosZ = -2; ran1 = 0; ran2 = 0; ran3 = 0; //#\\n\\n  c1 = cos(ran1); c2 = cos(ran2); c3 = cos(ran3); \\n  s1 = sin(ran1); s2 = sin(ran2); s3 = sin(ran3);\\n\\n  reg20 = c2*c1; reg21 = c2*s1; reg22 = -s2;\\n  reg23 = s3*s2*c1 - c3*s1; reg24 = s3*s2*s1 + c3*c1; reg25 = s3*c2;\\n  reg26 = c3*s2*c1 + s3*s1; reg27 = c3*s2*s1 - s3*c1; reg28 = c3*c2;\\n\\n  //***********BOT*************\\n  //Coord. Trans. must exactly match def in warp S. !!!!\\n  dist = 0.001;\\n  while (exec2(\\n    uvx = reg26*dist/q7; uvy = reg27*dist/q7; uvz = reg28*dist/q7;\\n    uvx += PosX; uvy += PosY; uvz += PosZ;\\n    uvx = 8.0*((uvx/8+30.5 - int(uvx/8+30.5))-.5);\\n    uvy = 8.0*((uvy/8+30.5 - int(uvy/8+30.5))-.5);\\n    uvz = 8.0*((uvz/8+30.5 - int(uvz/8+30.5))-.5);\\n    uvx0 = uvx+q8; uvy0 = uvy+q8; uvz0 = uvz+q8;\\n    loop (7+1,\\n      uvx = if (uvx > 1, 2-uvx, if(uvx < -1, -2-uvx, uvx));\\n      uvy = if (uvy > 1, 2-uvy, if(uvy < -1, -2-uvy, uvy));\\n      uvz = if (uvz > 1, 2-uvz, if(uvz < -1, -2-uvz, uvz));\\n      slen = uvx*uvx + uvy*uvy + uvz*uvz;\\n      uvx = if (slen < 0.25, uvx*4, if (slen < 1, uvx/slen, uvx)) *2.6 + uvx0; \\n      uvy = if (slen < 0.25, uvy*4, if (slen < 1, uvy/slen, uvy)) *2.6 + uvy0; \\n      uvz = if (slen < 0.25, uvz*4, if (slen < 1, uvz/slen, uvz)) *2.6 + uvz0; \\n    );\\n    len = sqrt(uvx*uvx + uvy*uvy + uvz*uvz);\\n    dist *= 1.05;\\n  ,(dist < 0.6)*(len > 30)));\\n,(dist < .06))); //end while","frame_eqs_eel":"fps_ = .0 * fps_ + 1*if(fps<=25,fps,25+.5*(fps-25)); \\ndec_s = 1-.06*30/fps_;\\nbeat = (time >  t0+3); t0 = if(beat, time, t0);\\n\\nspeed = min(0.2,dist_-.02) * (1+2*avg) *(1-slow*.0)*.7/q7; //#\\nds = ds * dec_s + (1-dec_s)*speed*.25/fps_; \\nRotZ = if (RotZ==0,beat*(rand(100)<20*travel)*(rand(10)/10-.3),\\n                   bnot(beat*(rand(100)<30))*RotZ);\\nslow = if (bnot(slow), beat*(rand(1000*avg)<6), bnot(beat*(rand(100)<50)));\\nlook = if (bnot(look), beat*(rand(1000*speed)<12), bnot(beat*(rand(100)<50)));\\n\\n//Lamp View\\nlx = if (beat,rand(150)/200+.15,lx);\\nly = if (beat,rand(150)/200+.15,ly);\\nlampx = lampx * dec_s + (1-dec_s)*if (look,lx,0.5);\\nlampy = lampy * dec_s + (1-dec_s)*if (look,ly,0.5);\\nq1 = lampx; q2 = lampy;\\n\\n//Position \\nDirX= reg26; DirY= reg27; DirZ = reg28;\\nPosX = PosX + ds*DirX ; PosY = PosY + ds*DirY; PosZ = PosZ + ds*DirZ; \\nq4 = PosX; q5 = PosY; q6 = PosZ;\\n\\nangchg = (.2-dist_)*(dist_ < .2)*2;\\ntravel = if (angchg > 0,0,travel+ds);\\nv1 = v1 * dec_s + (1-dec_s)* RotZ * ds;\\nv2 = v2 *dec_s + (1-dec_s)*angchg *xslope/fps_;\\nv3 = v3 *dec_s + (1-dec_s)*(angchg *yslope/fps_ + 2*v1*sin(time*.1));\\n//v2 = .008;\\n//push old RotMat\\nreg30 =reg20; reg31 =reg21; reg32 =reg22; \\nreg33 =reg23; reg34 =reg24; reg35 =reg25; \\nreg36 =reg26; reg37 =reg27; reg38 =reg28; \\n\\nn = 0; avg = 0;\\nloop (5,\\n  n = n+1;\\n  //new Rot. Mat for infinitesimal angles\\n  ran1 = rand(100)/100;\\n  ran2 = rand(100)/200-.25;\\n  tx = cos(n*1.57+ran2) * (n <= 4)*ran1; ty = sin(n*1.57+ran2) * (n <= 4)*ran1;\\n  c1 = cos(v1); c2 = cos(v2+ty); c3 = cos(v3+tx); \\n  s1 = sin(v1); s2 = sin(v2+ty); s3 = sin(v3+tx);\\n  reg10 = c2*c1; reg11 = c2*s1; reg12 = -s2;\\n  reg13 = s3*s2*c1 - c3*s1; reg14 = s3*s2*s1 + c3*c1; reg15 = s3*c2;\\n  reg16 = c3*s2*c1 + s3*s1; reg17 = c3*s2*s1 - s3*c1; reg18 = c3*c2;\\n\\n  //pop old RotMat\\n  reg20 =reg30; reg21 =reg31; reg22 =reg32; \\n  reg23 =reg33; reg24 =reg34; reg25 =reg35; \\n  reg26 =reg36; reg27 =reg37; reg28 =reg38; \\n\\n  //Multiply new RotMat by old one\\n  q20 = reg10*reg20 + reg11*reg23 + reg12*reg26;\\n  q21 = reg10*reg21 + reg11*reg24 + reg12*reg27;\\n  q22 = reg10*reg22 + reg11*reg25 + reg12*reg28;\\n  q23 = reg13*reg20 + reg14*reg23 + reg15*reg26;\\n  q24 = reg13*reg21 + reg14*reg24 + reg15*reg27;\\n  q25 = reg13*reg22 + reg14*reg25 + reg15*reg28;\\n  q26 = reg16*reg20 + reg17*reg23 + reg18*reg26;\\n  q27 = reg16*reg21 + reg17*reg24 + reg18*reg27;\\n  q28 = reg16*reg22 + reg17*reg25 + reg18*reg28;\\n\\n  reg20 =q20; reg21 =q21; reg22 =q22;\\n  reg23 =q23; reg24 =q24; reg25 =q25;\\n  reg26 =q26; reg27 =q27; reg28 =q28;\\n\\n  //***********BOT*************\\n  //Coord. Trans. must exactly match def in warp S. !!!!\\n  dist = 0.002;\\n  while (exec2(\\n    uvx = reg26*dist/q7; uvy = reg27*dist/q7; uvz = reg28*dist/q7;\\n    uvx += PosX; uvy += PosY; uvz += PosZ;\\n    uvx = 8.0*((uvx/8+30.5 - int(uvx/8+30.5))-.5);\\n    uvy = 8.0*((uvy/8+30.5 - int(uvy/8+30.5))-.5);\\n    uvz = 8.0*((uvz/8+30.5 - int(uvz/8+30.5))-.5);\\n    uvx0 = uvx+q8; uvy0 = uvy+q8; uvz0 = uvz+q8;\\n    loop (7+1,\\n      uvx = if (uvx > 1, 2-uvx, if(uvx < -1, -2-uvx, uvx));\\n      uvy = if (uvy > 1, 2-uvy, if(uvy < -1, -2-uvy, uvy));\\n      uvz = if (uvz > 1, 2-uvz, if(uvz < -1, -2-uvz, uvz));\\n      slen = uvx*uvx + uvy*uvy + uvz*uvz;\\n      uvx = if (slen < 0.25, uvx*4, if (slen < 1, uvx/slen, uvx)) *2.6 + uvx0; \\n      uvy = if (slen < 0.25, uvy*4, if (slen < 1, uvy/slen, uvy)) *2.6 + uvy0; \\n      uvz = if (slen < 0.25, uvz*4, if (slen < 1, uvz/slen, uvz)) *2.6 + uvz0; \\n    );\\n    len = sqrt(uvx*uvx + uvy*uvy + uvz*uvz);\\n    dist *= 1.1;\\n  ,(dist < 0.6)*(len > 30)));\\n  megabuf(n) = megabuf(n)*dec_s + (1-dec_s)*dist; //stores the 4 trial points\\n  avg = avg+abs(megabuf(n)/5);\\n); //end loop 5\\n\\nn = 0; avg = 0; loop (5, n=n+1; avg = avg+abs(megabuf(n)/5));\\n\\nxslope = min(max(2/avg*(megabuf(1)-megabuf(3)),-3),3);\\nyslope = min(max(2/avg*(megabuf(4)-megabuf(2)),-3),3);\\nmonitor = avg;\\ndist_ = dist_*dec_s + (1-dec_s)*dist;\\n\\nq10 = ds*q7; //compensation of lin. movement in GetDist and zoom uv\\nq14 = 1*abs(ds) + 2*(abs(v1) + abs(v2) + abs(v3)) + 1.0/255 + start*.05; \\nq19 = .6 + .4*sin(time*.02+cran0*6); //brightness backgd\\nstart = start * .9;\\nq11 = v1; q12 = v2; q13 = v3;\\n//forward comp. of Rotation\\nmonitor = q16;\\n\\n\\nbb = bb*0.99 + bass*0.02;\\nmm = mm*0.99 + mid*0.02;\\ntt = tt*0.99 + treb*0.02;\\n\\nmx = max(max(bb,mm),tt);\\nmn = min(min(bb,mm),tt);\\n\\nh1 = (bb-mn)/(mx-mn);\\nh2 = (mm-mn)/(mx-mn);\\nh3 = (tt-mn)/(mx-mn);\\n\\nv = 0.1333/fps;\\nbm = bm + (h1-h2)*v;\\nmt = mt + (h2-h3)*v;\\nbt = bt + (h1-h3)*v;\\n\\nw = bm*2;\\nq3 = sin(w);\\nq9 = cos(w);\\n\\n\\nq17 = bm;\\nq18 = mt;\\nq19 = bt;","pixel_eqs_eel":"warp = 0.0; zoom = 1; dx = -q12/q16*(1+0*pow(x-.5,2)); dy = q13/q16*(1+0*pow(y-.5,2)); rot =q11;","warp":"float sustain;\\nfloat xlat_mutabledist;\\nfloat xlat_mutablestruc;\\nvec2 xlat_mutableuv1;\\nvec3 xlat_mutableuv2;\\n shader_body { \\n  mat3 tmpvar_1;\\n  tmpvar_1[uint(0)].x = q20;\\n  tmpvar_1[uint(0)].y = q23;\\n  tmpvar_1[uint(0)].z = q26;\\n  tmpvar_1[1u].x = q21;\\n  tmpvar_1[1u].y = q24;\\n  tmpvar_1[1u].z = q27;\\n  tmpvar_1[2u].x = q22;\\n  tmpvar_1[2u].y = q25;\\n  tmpvar_1[2u].z = q28;\\n  vec3 tmpvar_2;\\n  tmpvar_2.x = q4;\\n  tmpvar_2.y = q5;\\n  tmpvar_2.z = q6;\\n  sustain = (1.0123 - q14);\\n  vec2 uv_3;\\n  vec3 ret_4;\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (uv - 0.5);\\n  xlat_mutableuv1 = ((tmpvar_5 * aspect.xy) * q16);\\n  vec4 tmpvar_6;\\n  tmpvar_6 = texture (sampler_pc_main, uv);\\n  uv_3 = ((tmpvar_5 * (1.0 - \\n    (q10 / (1.0 - ((tmpvar_6.z + \\n      (0.003921569 * tmpvar_6.y)\\n    ) + (q10 * 0.7))))\\n  )) + 0.5);\\n  vec4 tmpvar_7;\\n  tmpvar_7 = fract((8.0 * texture (sampler_noise_lq, (uv_3 + rand_frame.yz))));\\n  xlat_mutabledist = tmpvar_7.x;\\n  if ((tmpvar_7.y > 0.2)) {\\n    vec3 tmpvar_8;\\n    tmpvar_8 = (tmpvar_7.xyz - vec3(0.4, 0.5, 0.5));\\n    vec2 uvi_9;\\n    uvi_9 = ((tmpvar_8.zy * 0.003) + uv_3);\\n    vec2 pix_10;\\n    vec4 nb2_11;\\n    vec4 nb_12;\\n    vec2 x_13;\\n    x_13 = (uvi_9 - 0.5);\\n    pix_10 = (texsize.zw * (1.0 + (\\n      sqrt(dot (x_13, x_13))\\n     * 8.0)));\\n    float tmpvar_14;\\n    tmpvar_14 = (q10 * 0.7);\\n    vec4 tmpvar_15;\\n    tmpvar_15 = texture (sampler_pc_main, (uvi_9 - pix_10));\\n    nb_12.x = (1.0 - ((tmpvar_15.z + \\n      (0.003921569 * tmpvar_15.y)\\n    ) + tmpvar_14));\\n    vec4 tmpvar_16;\\n    tmpvar_16 = texture (sampler_pc_main, (uvi_9 + (pix_10 * vec2(1.0, -1.0))));\\n    nb_12.y = (1.0 - ((tmpvar_16.z + \\n      (0.003921569 * tmpvar_16.y)\\n    ) + tmpvar_14));\\n    vec4 tmpvar_17;\\n    tmpvar_17 = texture (sampler_pc_main, (uvi_9 + pix_10));\\n    nb_12.z = (1.0 - ((tmpvar_17.z + \\n      (0.003921569 * tmpvar_17.y)\\n    ) + tmpvar_14));\\n    vec4 tmpvar_18;\\n    tmpvar_18 = texture (sampler_pc_main, (uvi_9 + (pix_10 * vec2(-1.0, 1.0))));\\n    nb_12.w = (1.0 - ((tmpvar_18.z + \\n      (0.003921569 * tmpvar_18.y)\\n    ) + tmpvar_14));\\n    vec4 tmpvar_19;\\n    tmpvar_19 = texture (sampler_pc_main, (uvi_9 + (pix_10 * vec2(0.0, -1.0))));\\n    nb2_11.x = (1.0 - ((tmpvar_19.z + \\n      (0.003921569 * tmpvar_19.y)\\n    ) + tmpvar_14));\\n    vec4 tmpvar_20;\\n    tmpvar_20 = texture (sampler_pc_main, (uvi_9 + (pix_10 * vec2(1.0, 0.0))));\\n    nb2_11.y = (1.0 - ((tmpvar_20.z + \\n      (0.003921569 * tmpvar_20.y)\\n    ) + tmpvar_14));\\n    vec4 tmpvar_21;\\n    tmpvar_21 = texture (sampler_pc_main, (uvi_9 + (pix_10 * vec2(0.0, 1.0))));\\n    nb2_11.z = (1.0 - ((tmpvar_21.z + \\n      (0.003921569 * tmpvar_21.y)\\n    ) + tmpvar_14));\\n    vec4 tmpvar_22;\\n    tmpvar_22 = texture (sampler_pc_main, (uvi_9 + (pix_10 * vec2(-1.0, 0.0))));\\n    nb2_11.w = (1.0 - ((tmpvar_22.z + \\n      (0.003921569 * tmpvar_22.y)\\n    ) + tmpvar_14));\\n    vec4 tmpvar_23;\\n    tmpvar_23 = min (nb_12, nb2_11);\\n    nb_12.zw = tmpvar_23.zw;\\n    nb_12.xy = min (tmpvar_23.xy, tmpvar_23.zw);\\n    xlat_mutabledist = (min (nb_12.x, nb_12.y) + ((0.008 * tmpvar_8.x) * abs(tmpvar_8.y)));\\n  };\\n  vec4 tmpvar_24;\\n  tmpvar_24 = texture (sampler_pc_main, uv_3);\\n  float tmpvar_25;\\n  tmpvar_25 = min (xlat_mutabledist, (1.0 - (\\n    (tmpvar_24.z + (0.003921569 * tmpvar_24.y))\\n   + \\n    (q10 * 0.7)\\n  )));\\n  xlat_mutabledist = tmpvar_25;\\n  float tmpvar_26;\\n  tmpvar_26 = (tmpvar_25 + pow (tmpvar_25, 3.0));\\n  vec3 tmpvar_27;\\n  tmpvar_27.xy = (xlat_mutableuv1 * tmpvar_26);\\n  tmpvar_27.z = tmpvar_26;\\n  xlat_mutableuv2 = (((tmpvar_27 / q7) * tmpvar_1) + tmpvar_2);\\n  xlat_mutableuv2 = ((fract(\\n    ((xlat_mutableuv2 / 8.0) + 0.5)\\n  ) - 0.5) * 8.0);\\n  float li_28;\\n  vec3 zz0_29;\\n  vec3 zz_30;\\n  zz0_29 = (xlat_mutableuv2 + q8);\\n  li_28 = 0.0;\\n  zz_30 = ((2.0 * clamp (xlat_mutableuv2, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - xlat_mutableuv2);\\n  float tmpvar_31;\\n  tmpvar_31 = dot (zz_30, zz_30);\\n  if ((tmpvar_31 <= 0.25)) {\\n    zz_30 = (zz_30 * 4.0);\\n    li_28 = 24.0;\\n  } else {\\n    if ((tmpvar_31 <= 1.0)) {\\n      zz_30 = (zz_30 / tmpvar_31);\\n    };\\n  };\\n  zz_30 = ((2.6 * zz_30) + zz0_29);\\n  zz_30 = ((2.0 * clamp (zz_30, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_30);\\n  float tmpvar_32;\\n  tmpvar_32 = dot (zz_30, zz_30);\\n  if ((tmpvar_32 <= 0.25)) {\\n    zz_30 = (zz_30 * 4.0);\\n    li_28 = 24.0;\\n  } else {\\n    if ((tmpvar_32 <= 1.0)) {\\n      zz_30 = (zz_30 / tmpvar_32);\\n    };\\n  };\\n  zz_30 = ((2.6 * zz_30) + zz0_29);\\n  zz_30 = ((2.0 * clamp (zz_30, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_30);\\n  float tmpvar_33;\\n  tmpvar_33 = dot (zz_30, zz_30);\\n  if ((tmpvar_33 <= 0.25)) {\\n    zz_30 = (zz_30 * 4.0);\\n    li_28 = 24.0;\\n  } else {\\n    if ((tmpvar_33 <= 1.0)) {\\n      zz_30 = (zz_30 / tmpvar_33);\\n    };\\n  };\\n  zz_30 = ((2.6 * zz_30) + zz0_29);\\n  zz_30 = ((2.0 * clamp (zz_30, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_30);\\n  float tmpvar_34;\\n  tmpvar_34 = dot (zz_30, zz_30);\\n  if ((tmpvar_34 <= 0.25)) {\\n    zz_30 = (zz_30 * 4.0);\\n    li_28 = 24.0;\\n  } else {\\n    if ((tmpvar_34 <= 1.0)) {\\n      zz_30 = (zz_30 / tmpvar_34);\\n    };\\n  };\\n  zz_30 = ((2.6 * zz_30) + zz0_29);\\n  zz_30 = ((2.0 * clamp (zz_30, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_30);\\n  float tmpvar_35;\\n  tmpvar_35 = dot (zz_30, zz_30);\\n  if ((tmpvar_35 <= 0.25)) {\\n    zz_30 = (zz_30 * 4.0);\\n    li_28 = 24.0;\\n  } else {\\n    if ((tmpvar_35 <= 1.0)) {\\n      zz_30 = (zz_30 / tmpvar_35);\\n    };\\n  };\\n  zz_30 = ((2.6 * zz_30) + zz0_29);\\n  zz_30 = ((2.0 * clamp (zz_30, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_30);\\n  float tmpvar_36;\\n  tmpvar_36 = dot (zz_30, zz_30);\\n  if ((tmpvar_36 <= 0.25)) {\\n    zz_30 = (zz_30 * 4.0);\\n    li_28 = 24.0;\\n  } else {\\n    if ((tmpvar_36 <= 1.0)) {\\n      zz_30 = (zz_30 / tmpvar_36);\\n    };\\n  };\\n  zz_30 = ((2.6 * zz_30) + zz0_29);\\n  zz_30 = ((2.0 * clamp (zz_30, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_30);\\n  float tmpvar_37;\\n  tmpvar_37 = dot (zz_30, zz_30);\\n  if ((tmpvar_37 <= 0.25)) {\\n    zz_30 = (zz_30 * 4.0);\\n    li_28 = 24.0;\\n  } else {\\n    if ((tmpvar_37 <= 1.0)) {\\n      zz_30 = (zz_30 / tmpvar_37);\\n    };\\n  };\\n  zz_30 = ((2.6 * zz_30) + zz0_29);\\n  zz_30 = ((2.0 * clamp (zz_30, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_30);\\n  float tmpvar_38;\\n  tmpvar_38 = dot (zz_30, zz_30);\\n  if ((tmpvar_38 <= 0.25)) {\\n    zz_30 = (zz_30 * 4.0);\\n    li_28 = 24.0;\\n  } else {\\n    if ((tmpvar_38 <= 1.0)) {\\n      zz_30 = (zz_30 / tmpvar_38);\\n    };\\n  };\\n  zz_30 = ((2.6 * zz_30) + zz0_29);\\n  vec4 tmpvar_39;\\n  tmpvar_39.xyz = zz_30;\\n  tmpvar_39.w = li_28;\\n  float tmpvar_40;\\n  tmpvar_40 = sqrt(dot (zz_30, zz_30));\\n  xlat_mutablestruc = (sqrt(dot (tmpvar_39.xyw, tmpvar_39.xyw)) / 24.0);\\n  vec4 tmpvar_41;\\n  tmpvar_41 = texture (sampler_pc_main, uv_3);\\n  float tmpvar_42;\\n  float tmpvar_43;\\n  tmpvar_43 = (q10 * 0.7);\\n  tmpvar_42 = ((log(\\n    (1.0 + (tmpvar_40 / 24.0))\\n  ) * 0.02) * (1.0 - (1.0 - \\n    ((tmpvar_41.z + (0.003921569 * tmpvar_41.y)) + tmpvar_43)\\n  )));\\n  float tmpvar_44;\\n  vec4 tmpvar_45;\\n  tmpvar_45 = texture (sampler_pc_main, uv_3);\\n  tmpvar_44 = (1.0 - ((tmpvar_45.z + \\n    (0.003921569 * tmpvar_45.y)\\n  ) + tmpvar_43));\\n  if ((((tmpvar_25 <= tmpvar_44) && (tmpvar_40 < 24.0)) && (tmpvar_25 > 0.005))) {\\n    ret_4.x = (((1.0 - sustain) * xlat_mutablestruc) + (sustain * mix (texture (sampler_main, uv_3).xyz, \\n      ((texture (sampler_blur1, uv_3).xyz * scale1) + bias1)\\n    , vec3(\\n      (q14 * 4.0)\\n    )).x));\\n    float x_46;\\n    x_46 = ((1.0 - tmpvar_25) * 255.0);\\n    float ip_47;\\n    ip_47 = float(int(x_46));\\n    vec2 tmpvar_48;\\n    tmpvar_48.x = (x_46 - ip_47);\\n    tmpvar_48.y = (ip_47 / 255.0);\\n    ret_4.yz = tmpvar_48;\\n  } else {\\n    vec3 tmpvar_49;\\n    tmpvar_49.y = 0.0;\\n    tmpvar_49.x = sustain;\\n    tmpvar_49.z = (1.0 - tmpvar_42);\\n    vec3 tmpvar_50;\\n    tmpvar_50.xy = vec2(0.003921569, 0.0);\\n    tmpvar_50.z = (q14 / 6.0);\\n    ret_4 = ((texture (sampler_fc_main, uv_3).xyz * tmpvar_49) - tmpvar_50);\\n  };\\n  vec4 tmpvar_51;\\n  tmpvar_51.w = 1.0;\\n  tmpvar_51.xyz = ret_4;\\n  ret = tmpvar_51.xyz;\\n }","comp":"vec2 xlat_mutabled;\\nvec3 xlat_mutabledx;\\nvec3 xlat_mutabledy;\\n shader_body { \\n  vec3 ret_1;\\n  xlat_mutabled = (texsize.zw * 1.5);\\n  xlat_mutabledx = (texture (sampler_main, (uv_orig + (vec2(1.0, 0.0) * xlat_mutabled))).xyz - texture (sampler_main, (uv_orig - (vec2(1.0, 0.0) * xlat_mutabled))).xyz);\\n  xlat_mutabledy = (texture (sampler_main, (uv_orig + (vec2(0.0, 1.0) * xlat_mutabled))).xyz - texture (sampler_main, (uv_orig - (vec2(0.0, 1.0) * xlat_mutabled))).xyz);\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = xlat_mutabledx.y;\\n  tmpvar_2.y = xlat_mutabledy.y;\\n  vec2 x_3;\\n  x_3 = (tmpvar_2 * 8.0);\\n  ret_1 = (((texture (sampler_main, uv).x * \\n    (1.0 - sqrt(dot (x_3, x_3)))\\n  ) * pow (hue_shader, vec3(6.0, 6.0, 6.0))) * 1.4);\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = xlat_mutabledx.z;\\n  tmpvar_4.y = xlat_mutabledy.z;\\n  vec2 x_5;\\n  x_5 = (tmpvar_4 * 4.0);\\n  vec3 tmpvar_6;\\n  tmpvar_6 = mix (ret_1, vec3(1.0, 1.0, 1.0), vec3(sqrt(dot (x_5, x_5))));\\n  ret_1 = tmpvar_6;\\n  vec4 tmpvar_7;\\n  tmpvar_7.w = 1.0;\\n  tmpvar_7.xyz = tmpvar_6;\\n  ret = tmpvar_7.xyz;\\n }"}')},9070:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":1,"wave_mode":5,"additivewave":1,"wave_a":0,"wave_scale":0.9,"wave_smoothing":0.63,"wave_mystery":1,"modwavealphastart":2,"modwavealphaend":2,"warpscale":1.772,"zoomexp":4.401,"zoom":1.011,"rot":0.003,"warp":0,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"mv_x":0,"mv_y":48,"mv_dx":-0.941,"mv_dy":0.426,"mv_l":5,"mv_r":0.316,"mv_g":0.078,"mv_b":0.942,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":12,"additive":1,"rad":0.02508,"r":0,"g":1,"a":0.2,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"t = time*12.3;\\nwave_x = wave_x + 0.350*( 0.70*sin(2.221*time*5) + 0.30*sin(1.821*time*15) );\\nwave_y = wave_y + 0.350*( 0.30*sin(1.942*time*5) + 0.70*sin(2.522*time*15) );\\nwave_r = wave_r + 0.790*( 0.60*sin(0.823*t) + 0.40*sin(0.916*t) );\\nwave_g = wave_g + 0.790*( 0.60*sin(0.900*t) + 0.40*sin(1.023*t) );\\nwave_b = wave_b + 0.790*( 0.60*sin(0.808*t) + 0.40*sin(0.949*t) );\\nrot = rot + 0.030*( 0.60*sin(0.38*time) + 0.40*sin(0.54*time+4) );\\nzoom = zoom + 0.015*( 0.60*sin(0.29*time+1) + 0.40*sin(0.43*time+2) );\\ndx = dx + 0.002*( 0.60*sin(0.434*time) + 0.40*sin(0.277*time) );\\ndy = dy + 0.002*( 0.60*sin(0.384*time) + 0.40*sin(0.477*time) );","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = (((\\n    ((texture (sampler_blur2, (uv + vec2(0.01, 0.0))).xyz * scale2) + bias2)\\n   - \\n    ((texture (sampler_blur2, (uv - vec2(0.01, 0.0))).xyz * scale2) + bias2)\\n  ).y * 1280.0) * texsize.z);\\n  tmpvar_2.y = (((\\n    ((texture (sampler_blur2, (uv + vec2(0.0, 0.01))).xyz * scale2) + bias2)\\n   - \\n    ((texture (sampler_blur2, (uv - vec2(0.0, 0.01))).xyz * scale2) + bias2)\\n  ).y * 1024.0) * texsize.w);\\n  ret_1.y = texture (sampler_fw_main, (uv + (tmpvar_2 * 0.005))).y;\\n  ret_1 = (ret_1 + ((\\n    (ret_1 - ((texture (sampler_blur3, uv).xyz * scale3) + bias3))\\n   * 0.3) - 0.05));\\n  ret_1 = (ret_1 + ((texture (sampler_noise_lq, \\n    (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 0.25)) + rand_frame.xy)\\n  ).xyz - 0.5) * 0.1));\\n  ret_1 = mix (ret_1, vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))), vec3(0.2, 0.2, 0.2));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_1;\\n  ret = tmpvar_3.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 6.0);\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = dot (tmpvar_3, vec3(0.32, 0.49, 0.29));\\n  tmpvar_5.y = dot (tmpvar_4, vec3(0.32, 0.49, 0.29));\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv - (0.25 * tmpvar_5));\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = dot (tmpvar_3, vec3(0.32, 0.49, 0.29));\\n  tmpvar_7.y = dot (tmpvar_4, vec3(0.32, 0.49, 0.29));\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (uv + (0.25 * tmpvar_7));\\n  ret_1 = ((0.8 * (\\n    (texture (sampler_blur3, tmpvar_6).xyz * scale3)\\n   + bias3)) - ((texture (sampler_blur1, tmpvar_6).xyz * scale1) + bias1));\\n  ret_1 = (ret_1 + (0.6 * (\\n    (texture (sampler_blur1, uv).xyz * scale1)\\n   + bias1)));\\n  ret_1 = (ret_1 - ((\\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur1, tmpvar_8).xyz * scale1)\\n   + bias1)));\\n  ret_1 = (ret_1 + ((1.2 * texture (sampler_main, tmpvar_8).xyz) + (0.15 * \\n    ((texture (sampler_blur1, tmpvar_8).xyz * scale1) + bias1)\\n  )));\\n  ret_1 = (ret_1 + 1.0);\\n  float tmpvar_9;\\n  tmpvar_9 = dot (ret_1, vec3(0.32, 0.49, 0.29));\\n  ret_1 = (mix (vec3(tmpvar_9), (\\n    (0.75 * vec3(tmpvar_9))\\n   * \\n    dot ((((0.6 * \\n      ((texture (sampler_blur3, tmpvar_6).xyz * scale3) + bias3)\\n    ) - (0.7 * texture (sampler_main, uv).xyz)) - (0.3 * (\\n      (texture (sampler_blur1, tmpvar_8).xyz * scale1)\\n     + bias1))), vec3(0.32, 0.49, 0.29))\\n  ), pow (hue_shader, vec3(tmpvar_9))) * 0.9);\\n  ret_1 = (ret_1 * ret_1);\\n  vec3 tmpvar_10;\\n  tmpvar_10 = sqrt(ret_1);\\n  ret_1 = tmpvar_10;\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 1.0;\\n  tmpvar_11.xyz = tmpvar_10;\\n  ret = tmpvar_11.xyz;\\n }"}')},3389:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.955,"echo_zoom":0.997,"echo_alpha":0.5,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":0.001,"wave_scale":0.49,"wave_smoothing":0,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":16.016,"zoomexp":11.56276,"fshader":1,"zoom":1.05971,"warp":0.13126,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0,"ob_a":1,"ib_size":0,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":14,"additive":1,"num_inst":126,"rad":0.0303,"tex_ang":0.62832,"r":0,"b":1,"g2":0,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));"},{"baseVals":{"enabled":1,"sides":14,"additive":1,"num_inst":128,"rad":0.03,"tex_ang":0.62832,"r":0,"b":1,"g2":0,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));"},{"baseVals":{"enabled":1,"sides":14,"additive":1,"num_inst":32,"rad":0.0297,"tex_ang":0.62832,"r":0,"b":1,"g2":0,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));"},{"baseVals":{"enabled":1,"sides":14,"additive":1,"num_inst":16,"rad":0.0303,"tex_ang":0.62832,"r":0,"b":1,"g2":0,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));"}],"waves":[{"baseVals":{"enabled":1,"thick":1,"additive":1,"scaling":2.0231,"smoothing":0,"r":0,"b":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"vol = bass*8 + mid*5 + treb*3;\\nm = m*0.97 + vol*0.08;\\nmonitor = vol;\\nbeat = above(vol,res)*above(vol,m)*above(vol,16);\\ndiff = (1-beat)*diff + beat*(vol-res);\\nres = beat*(vol + m*0.04) + (1-beat)*(res -  (0.1+diff*0.02)*60/fps);\\nres = max(0,res);\\n\\na = beat;","point_eqs_eel":"tt3 = tt3*0.6 + (value1)*1;\\ntt2 = tt2*0.7 + tt3*0.2;\\ntt1 = tt1*0.8 + tt2*0.1;\\nd = d*0.9 + tt1*0.2;\\n\\ny = 0.5 + d*sample*(1-sample)*4;\\nx =  -0.05 + sample*1.1;"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));"}],"init_eqs_eel":"","frame_eqs_eel":"xx1 = xx1*0.9 + (bass)*0.01;\\nxx2 = xx2*0.9 + (treb)*0.01;\\nyy1 = yy1*0.94 + (treb+bass)*0.0075;\\n\\nx1 = 0.5 + (xx1-xx2)*2;\\ny1 = 0.4 + yy1;\\n\\nx1 = max(0,min(1,x1)); y1 = max(0,min(1,y1));\\n\\nspring = 10;\\ngrav = .5;\\nresist = 1;\\nbounce = 0.75;\\ndt = 0.0005*(60/fps);\\n\\nvx2 = vx2*(1-resist*dt) + dt*((x1+x3-2*x2)*spring);\\nvy2 = vy2*(1-resist*dt) + dt*((y1+y3-2*y2)*spring-grav);\\nvx3 = vx3*(1-resist*dt) + dt*((x2+x4-2*x3)*spring);\\nvy3 = vy3*(1-resist*dt) + dt*((y2+y4-2*y3)*spring-grav);\\nvx4 = vx4*(1-resist*dt) + dt*((x3-x4)*spring);\\nvy4 = vy4*(1-resist*dt) + dt*((y3-y4)*spring-grav);\\n\\nx2 = x2 + vx2;\\ny2 = y2 + vy2;\\nx3 = x3 + vx3;\\ny3 = y3 + vy3;\\nx4 = x4 + vx4;\\ny4 = y4 + vy4;\\n\\nvx2 = if(above(x2,0),vx2,abs(vx2)*bounce);\\nvx2 = if(below(x2,1),vx2,-abs(vx2)*bounce);\\nvx3 = if(above(x3,0),vx3,abs(vx3)*bounce);\\nvx3 = if(below(x3,1),vx3,-abs(vx3)*bounce);\\nvx4 = if(above(x4,0),vx4,abs(vx4)*bounce);\\nvx4 = if(below(x4,1),vx4,-abs(vx4)*bounce);\\nvy2 = if(above(y2,0),vy2,abs(vy2)*bounce);\\nvy2 = if(below(y2,1),vy2,-abs(vy2)*bounce);\\nvy3 = if(above(y3,0),vy3,abs(vy3)*bounce);\\nvy3 = if(below(y3,1),vy3,-abs(vy3)*bounce);\\nvy4 = if(above(y4,0),vy4,abs(vy4)*bounce);\\nvy4 = if(below(y4,1),vy4,-abs(vy4)*bounce);\\n\\n\\nq1 = x1; q2 = x2; q3 = x3; q4 = x4;\\nq5 = y1; q6 = y2; q7 = y3; q8 = y4;\\nq9 =1/ aspectX;\\nq10 = 1/aspectY;\\n\\nzoom = 1;\\nr = r*0.96 +(x1-0.5);\\nrot = (r*0.1);\\n\\nq12 = atan2(vx4,vy4);\\nq11 = sqrt(vx4*vx4 + vy4*vy4);\\n\\nzoom = 1.001;\\nrot = 0.00;\\nwarp = 0.2;\\nwave_a = 0;","pixel_eqs_eel":"dir = -q12*1 + asin(1)*1;\\n\\nb1 = 0.1; // distance\\nm1 = q11*25;//-0.6 + q5*200; // size\\nt1 = 0.05; // velocity\\n\\nxx = q4;\\nyy = 1-q8;\\n\\n\\nx1 = xx   +cos(dir+1.5708)*b1;\\ny1 = yy -sin(dir+1.5708)*b1;\\n\\nx2 = xx   -cos(dir+1.5708)*b1;\\ny2 = yy +sin(dir+1.5708)*b1;\\n\\nd1 = sqrt((x1-x)*(x1-x)+(y1-y)*(y1-y))-b1*2;\\nsi1 = 1- 1/(1+pow(2,-d1*1000));\\n\\nd2 = sqrt((x2-x)*(x2-x)+(y2-y)*(y2-y))-b1*2;\\nsi2 = 1- 1/(1+pow(2,-d2*1000));\\n\\nsi3 = -pow(q5,3)*00;\\n\\ndx = (si1*sin(y1-y)*m1*d1  - si2*sin(y2-y)*m1*d2 + si3*cos(dir)*t1)*2;\\ndy = (-si1*sin(x1-x)*m1*d1 + si2*sin(x2-x)*m1*d2 - si3*sin(dir)*t1)*2;","warp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 8.0);\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = tmpvar_3.z;\\n  tmpvar_5.y = tmpvar_4.z;\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv + ((tmpvar_5 * texsize.zw) * 4.0));\\n  ret_1.z = (((texture (sampler_main, tmpvar_6).z - \\n    ((texture (sampler_main, tmpvar_6).z - ((texture (sampler_blur3, tmpvar_6).xyz * scale3) + bias3).z) * 0.02)\\n  ) - 0.008) + ((texture (sampler_noise_lq, \\n    (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)\\n  ).xyz - 0.5) * 0.1)).x;\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = tmpvar_3.x;\\n  tmpvar_7.y = tmpvar_4.x;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = ((0.5 + (uv - 0.5)) - (tmpvar_7 * texsize.zw));\\n  ret_1.x = texture (sampler_main, tmpvar_8).x;\\n  ret_1.x = (ret_1.x + ((\\n    (ret_1.x - ((texture (sampler_blur3, tmpvar_8).xyz * scale3) + bias3))\\n  .x * 0.4) + 0.006));\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = tmpvar_3.x;\\n  tmpvar_9.y = tmpvar_4.x;\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = tmpvar_3.y;\\n  tmpvar_10.y = tmpvar_4.y;\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = tmpvar_3.z;\\n  tmpvar_11.y = tmpvar_4.z;\\n  ret_1.y = texture (sampler_fc_main, (((uv - \\n    ((tmpvar_9 * texsize.zw) * 8.0)\\n  ) + (\\n    (tmpvar_10 * texsize.zw)\\n   * 4.0)) + ((tmpvar_11 * texsize.zw) * 8.0))).y;\\n  ret_1.y = (ret_1.y * (1.0 + (ret_1.x * 0.1)));\\n  ret_1.y = (ret_1.y - (0.004 + (\\n    clamp (ret_1.z, 0.0, 1.0)\\n   * 0.012)));\\n  vec4 tmpvar_12;\\n  tmpvar_12.w = 1.0;\\n  tmpvar_12.xyz = ret_1;\\n  ret = tmpvar_12.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 4.0);\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = tmpvar_3.z;\\n  tmpvar_5.y = tmpvar_4.z;\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = tmpvar_3.y;\\n  tmpvar_6.y = tmpvar_4.y;\\n  vec2 tmpvar_7;\\n  tmpvar_7 = ((uv - (tmpvar_5 * 0.1)) + (tmpvar_6 * 0.06));\\n  vec4 tmpvar_8;\\n  tmpvar_8 = texture (sampler_main, uv);\\n  ret_1 = (((\\n    ((texture (sampler_blur2, tmpvar_7).xyz * scale2) + bias2)\\n  .x * \\n    clamp ((1.0 - tmpvar_8.z), 0.0, 1.0)\\n  ) * pow (hue_shader.yxz, vec3(8.0, 8.0, 8.0))) * 3.0);\\n  ret_1 = (mix (ret_1, (\\n    pow (hue_shader.yzx, vec3(8.0, 8.0, 8.0))\\n   * 1.4), vec3((\\n    (texture (sampler_main, tmpvar_7).x * 0.8)\\n   + \\n    ((texture (sampler_blur1, tmpvar_7).xyz * scale1) + bias1)\\n  .x))) * clamp ((1.0 - \\n    (((texture (sampler_blur1, uv).xyz * scale1) + bias1).y * 4.0)\\n  ), 0.0, 1.0));\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = tmpvar_3.y;\\n  tmpvar_9.y = tmpvar_4.y;\\n  vec3 tmpvar_10;\\n  vec3 tmpvar_11;\\n  tmpvar_11 = pow (hue_shader, vec3(8.0, 8.0, 8.0));\\n  tmpvar_10 = mix (mix (ret_1, vec3(1.0, 1.0, 1.0), (\\n    (tmpvar_11 * texture (sampler_main, clamp ((uv - (tmpvar_9 * 2.0)), 0.0, 1.0)).z)\\n   * 1.2)), (tmpvar_11.zxy * 1.8), tmpvar_8.yyy);\\n  ret_1 = tmpvar_10;\\n  vec4 tmpvar_12;\\n  tmpvar_12.w = 1.0;\\n  tmpvar_12.xyz = tmpvar_10;\\n  ret = tmpvar_12.xyz;\\n }"}')},7296:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":2,"gammaadj":1.14,"decay":0.999,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":1,"wave_mode":6,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"wave_a":0.55,"wave_scale":2,"wave_smoothing":0.63,"wave_mystery":1,"modwavealphastart":1.6,"modwavealphaend":2,"warpanimspeed":0.137,"warpscale":13.125,"zoom":0.99951,"warp":0.99213,"wave_r":0.5,"wave_g":0,"wave_b":0,"wave_y":0,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"textured":1,"rad":1.79142,"tex_ang":0.62832,"g":1,"b":1,"a":0,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx*1.25-0.1;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));"},{"baseVals":{"enabled":1,"thick":1,"r":0,"g":0,"b":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx*1.25-0.125;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));"},{"baseVals":{"enabled":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx*1.25-0.125;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));"},{"baseVals":{"enabled":1,"thick":1,"r":0,"g":0,"b":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx*1.25-0.125;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));"}],"init_eqs_eel":"","frame_eqs_eel":"// elastic thread code\\n\\nxx1 = xx1*0.9 + (bass)*0.01;\\nxx2 = xx2*0.9 + (treb)*0.01;\\nyy1 = yy1*0.94 + (treb+bass)*0.0075;\\nx1 = 0.5 + (xx1-xx2)*2;\\ny1 = 0.4 + yy1*1.5;\\ndt = 0.03/fps;\\nvx2 = vx2*(1-2*dt) + dt*((x1+x3-2*x2)*10);\\nvy2 = vy2*(1-2*dt) + dt*((y1+y3-2*y2)*10-0.5);\\nvx3 = vx3*(1-2*dt) + dt*((x2+x4-2*x3)*10);\\nvy3 = vy3*(1-2*dt) + dt*((y2+y4-2*y3)*10-0.5);\\nvx4 = vx4*(1-2*dt) + dt*((x3-x4)*10);\\nvy4 = vy4*(1-2*dt) + dt*((y3-y4)*10-0.5);\\nx2 = x2 + vx2; y2 = y2 + vy2;\\nx3 = x3 + vx3; y3 = y3 + vy3;\\nx4 = x4 + vx4; y4 = y4 + vy4;\\nvx2 = if(above(x2,0),vx2,abs(vx2)*0.5);\\nvx2 = if(below(x2,1),vx2,-abs(vx2)*0.5);\\nvx3 = if(above(x3,0),vx3,abs(vx3)*0.5);\\nvx3 = if(below(x3,1),vx3,-abs(vx3)*0.5);\\nvx4 = if(above(x4,0),vx4,abs(vx4)*0.5);\\nvx4 = if(below(x4,1),vx4,-abs(vx4)*0.5);\\nvy2 = if(above(y2,0),vy2,abs(vy2)*0.5);\\nvy2 = if(below(y2,1),vy2,-abs(vy2)*0.5);\\nvy3 = if(above(y3,0),vy3,abs(vy3)*0.5);\\nvy3 = if(below(y3,1),vy3,-abs(vy3)*0.5);\\nvy4 = if(above(y4,0),vy4,abs(vy4)*0.5);\\nvy4 = if(below(y4,1),vy4,-abs(vy4)*0.5);\\nq1 = x1;q2 = x2;q3 = x3;q4 = x4;\\nq5 = y1;q6 = y2;q7 = y3;q8 = y4;\\nq9 = 1/aspectx;\\nq10 = 1/aspecty;\\nq11 = aspectx;\\nq12 = aspecty;\\nq13 = sqrt(vx4*vx4 + vy4*vy4);\\nq14 = atan2(vx4,vy4);\\nq15 = sin(q14);\\nq16 = cos(q14);\\n\\n// Flexis dampened sound response functions\\n\\ndb = db*0.98 + bass*0.2; // dampener\\nbb = bb + db*0.1; // accumulation, replace time expressions with this ;)\\n\\nddt = ddt*0.98 + treb*0.2;\\ntt = tt + ddt*0.1;\\n\\ndm = dm*0.98 + mid*0.2;\\nmm = mm + dm*0.1;\\n\\n\\n//***** [q21-q28] variables for Flexis caleidoscope shader code *****\\n\\n// change\\nq23 = 0.5 + sin((bb-mm)*0.1)*0.25; // center x\\nq24 = 0.5 + sin((tt-mm)*0.1)*0.25; // center y\\nw = (bb-tt)*0.1;                   // angle\\nq26 = 0.25 - (db-ddt)*0.025;        // size\\n\\n//don\'t change\\nq21 = sin(w);\\nq22 = cos(w);\\nq27 = sin(-w);\\nq28 = cos(-w);\\nq25 = 1/q26;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 uv_z_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (1.0 - abs((\\n    (fract((uv * 0.5)) * 2.0)\\n   - 1.0)));\\n  ret_2.x = (texture (sampler_fc_main, tmpvar_3).x * 0.5);\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (texsize.zw * 4.0);\\n  vec2 tmpvar_5;\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv_orig - 0.5);\\n  tmpvar_5 = ((tmpvar_6 * 0.996) + 0.5);\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = (((2.0 * \\n    ((texture (sampler_blur1, (tmpvar_5 + (vec2(1.0, 0.0) * tmpvar_4))).xyz * scale1) + bias1)\\n  ) - (\\n    (texture (sampler_blur1, (tmpvar_5 - (vec2(1.0, 0.0) * tmpvar_4))).xyz * scale1)\\n   + bias1)) * 0.5).z;\\n  tmpvar_7.y = (((2.0 * \\n    ((texture (sampler_blur1, (tmpvar_5 + (vec2(0.0, 1.0) * tmpvar_4))).xyz * scale1) + bias1)\\n  ) - (\\n    (texture (sampler_blur1, (tmpvar_5 - (vec2(0.0, 1.0) * tmpvar_4))).xyz * scale1)\\n   + bias1)) * 0.5).z;\\n  uv_z_1 = (tmpvar_5 - ((tmpvar_7 * texsize.zw) * 2.0));\\n  ret_2.z = max (((\\n    (texture (sampler_fc_main, tmpvar_3).x - 0.5)\\n   * 3.0) * clamp (\\n    (1.0 - (sqrt(dot (tmpvar_6, tmpvar_6)) * 3.2))\\n  , 0.0, 1.0)), texture (sampler_fc_main, uv_z_1).z);\\n  ret_2.z = (ret_2.z + ((\\n    (2.0 * texture (sampler_fc_main, uv_z_1).z)\\n   - \\n    (2.0 * ((texture (sampler_blur1, clamp (uv_z_1, 0.0, 1.0)).xyz * scale1) + bias1).z)\\n  ) * 0.01));\\n  ret_2.y = (max (texture (sampler_fc_main, mix (uv, uv_orig, vec2(0.9996, 0.9996))).y, texture (sampler_fc_main, uv_orig).z) - 0.008);\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = ret_2;\\n  ret = tmpvar_8.xyz;\\n }","comp":" shader_body { \\n  vec2 dz_1;\\n  vec3 dy_2;\\n  vec3 dx_3;\\n  vec2 d_4;\\n  vec2 uv_rr_5;\\n  vec2 uv_r_6;\\n  vec3 ret_7;\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = q23;\\n  tmpvar_8.y = q24;\\n  vec2 tmpvar_9;\\n  tmpvar_9 = ((uv - tmpvar_8) * aspect.xy);\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = ((q22 * tmpvar_9.x) - (q21 * tmpvar_9.y));\\n  tmpvar_10.y = ((q21 * tmpvar_9.x) + (q22 * tmpvar_9.y));\\n  uv_r_6 = (q25 * tmpvar_10);\\n  uv_r_6 = (tmpvar_8 + (uv_r_6 * aspect.zw));\\n  uv_r_6 = (1.0 - abs((\\n    (fract((uv_r_6 * 0.5)) * 2.0)\\n   - 1.0)));\\n  vec2 tmpvar_11;\\n  tmpvar_11 = ((uv_r_6 - tmpvar_8) * aspect.xy);\\n  vec2 tmpvar_12;\\n  tmpvar_12.x = ((q28 * tmpvar_11.x) - (q27 * tmpvar_11.y));\\n  tmpvar_12.y = ((q27 * tmpvar_11.x) + (q28 * tmpvar_11.y));\\n  uv_rr_5 = (q26 * tmpvar_12);\\n  uv_rr_5 = (tmpvar_8 + (uv_rr_5 * aspect.zw));\\n  vec2 tmpvar_13;\\n  vec2 tmpvar_14;\\n  tmpvar_14 = (vec2(1.0, 0.0) * texsize.zw);\\n  tmpvar_13.x = (texture (sampler_main, (uv_rr_5 + tmpvar_14)).xyz - texture (sampler_main, (uv_rr_5 - tmpvar_14)).xyz).y;\\n  vec2 tmpvar_15;\\n  tmpvar_15 = (vec2(0.0, 1.0) * texsize.zw);\\n  tmpvar_13.y = (texture (sampler_main, (uv_rr_5 + tmpvar_15)).xyz - texture (sampler_main, (uv_rr_5 - tmpvar_15)).xyz).y;\\n  d_4 = (texsize.zw * 2.0);\\n  dx_3 = (((texture (sampler_blur1, \\n    (uv_rr_5 + (vec2(1.0, 0.0) * d_4))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv_rr_5 - (vec2(1.0, 0.0) * d_4))\\n  ).xyz * scale1) + bias1));\\n  dy_2 = (((texture (sampler_blur1, \\n    (uv_rr_5 + (vec2(0.0, 1.0) * d_4))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv_rr_5 - (vec2(0.0, 1.0) * d_4))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_16;\\n  tmpvar_16.x = dx_3.y;\\n  tmpvar_16.y = dy_2.y;\\n  dz_1 = ((tmpvar_13 * 3.0) + tmpvar_16);\\n  ret_7 = (vec3(((\\n    pow ((sqrt(dot (dz_1, dz_1)) * 0.8), 0.7)\\n   + \\n    (((texture (sampler_blur2, uv_rr_5).xyz * scale2) + bias2).y * 0.4)\\n  ) - 0.1)) * vec3(0.3, 0.5, 0.7));\\n  vec2 tmpvar_17;\\n  tmpvar_17.x = dx_3.x;\\n  tmpvar_17.y = dy_2.x;\\n  vec3 tmpvar_18;\\n  tmpvar_18 = mix (mix (ret_7, vec3(0.2, 0.1, 0.0), vec3((texture (sampler_main, \\n    (uv_rr_5 + ((tmpvar_17 * texsize.zw) * 18.0))\\n  ).x * 6.0))), vec3(1.0, 1.0, 1.0), texture (sampler_main, uv_rr_5).zzz);\\n  ret_7 = tmpvar_18;\\n  vec4 tmpvar_19;\\n  tmpvar_19.w = 1.0;\\n  tmpvar_19.xyz = tmpvar_18;\\n  ret = tmpvar_19.xyz;\\n }"}')},5810:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.28,"decay":0.8,"echo_zoom":1,"echo_orient":3,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"brighten":1,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"zoomexp":3.04777,"zoom":1.0173,"warp":0.01605,"wave_g":0.65,"wave_b":0.65,"ob_size":0,"ob_a":1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"sides":5,"additive":1,"num_inst":2,"x":0.49,"rad":0.11589,"tex_zoom":4.36077,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = rand(1000)/1000;\\ny = rand(1000)/1000;\\nang = rand(150)/100;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"thick":1,"g":0,"b":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));"},{"baseVals":{"enabled":1,"thick":1,"r":0,"b":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));"},{"baseVals":{"enabled":1,"usedots":1,"r":0,"g":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"r":0,"g":0,"b":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));"}],"init_eqs_eel":"x1 = 0.5;\\nx2 = 0.500001;\\n\\ny2 = 0.9;\\ny1 = 0.7;\\n\\nx3 = 0.8;\\ny3 = 0.9;\\n\\nx4 = 0.2;\\ny4 = 0.9;\\n\\n\\nax1 = 0;\\nay1 = 0;\\nax2 = 0;\\nay2 = 0;\\nax3 = 0;\\nay3 = 0;\\n\\nvx1 = 0.000;\\nvx2 = 0.000;","frame_eqs_eel":"zoom = 1;\\n\\n//pogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogo\\nr = 0.1+ max(bass_att,treb_att)*0.006;\\nbounce = below(y1,r);y1 = y1+vy1;vy1 = if(bounce, abs(vy1)*0.94 + (r-y1)*0.1, vy1-0.0001*60/fps);\\nbounce = below(x1,r);x1 = x1+vx1;vx1 = if(bounce, abs(vx1)*0.94 + (r-x1)*0.1, vx1);\\nbounce = above(x1,1-r);vx1 = if(bounce, - abs(vx1)*0.94 + (1-r-x1)*0.04, vx1);\\nbounce = below(y2,r);y2 = y2 + vy2;vy2 = if(bounce,abs(vy2)*0.94+(r-y2)*.1, vy2-0.0001*60/fps);\\nbounce = below(x2,r);x2 = x2+ vx2;vx2 = if(bounce, abs(vx2)*0.94 + (r-x2)*0.1, vx2);\\nbounce = above(x2,1-r);vx2 = if(bounce, - abs(vx2)*0.94 + (1-r-x2)*0.1, vx2);\\nbounce = below(y3,r);y3 = y3 + vy3;vy3 = if(bounce,abs(vy3)*0.94+(r-y3)*.1, vy3-0.0001*60/fps);\\nbounce = below(x3,r);x3 = x3+ vx3;vx3 = if(bounce, abs(vx3)*0.94 + (r-x3)*0.1, vx3);\\nbounce = above(x3,1-r);vx3 = if(bounce, - abs(vx3)*0.94 + (1-r-x3)*0.1, vx3);\\nbounce = below(y4,r);y4 = y4 + vy4;vy4 = if(bounce,abs(vy4)*0.94+(r-y4)*.1, vy4-0.0001*60/fps);\\nbounce = below(x4,r);x4 = x4+ vx4;vx4 = if(bounce, abs(vx4)*0.94 + (r-x4)*0.1, vx4);\\nbounce = above(x4,1-r);vx4 = if(bounce, - abs(vx4)*0.94 + (1-r-x4)*0.1, vx4);\\nbounce = below( sqrt( sqr(x1+vx1-x2-vx2) + sqr(y1+vy1-y2-vy2)), 2*r);\\nref_ang = atan2(x2-x1,y2-y1)+asin(1); // common tangent\\nv1 = sqrt(vx1*vx1+vy1*vy1);v2 = sqrt(vx2*vx2+vy2*vy2);w1 = atan2(vx1,vy1);w2 = atan2(vx2,vy2);\\nvx1 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx1);\\nvy1 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy1);\\nvx2 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx2);\\nvy2 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy2);\\nbounce = below( sqrt( sqr(x1+vx1-x3-vx3) + sqr(y1+vy1-y3-vy3)), 2*r);\\nref_ang = atan2(x3-x1,y3-y1)+asin(1); // common tangent\\nv1 = sqrt(vx1*vx1+vy1*vy1);v2 = sqrt(vx3*vx3+vy3*vy3);w1 = atan2(vx1,vy1);w2 = atan2(vx3,vy3);\\nvx1 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx1);\\nvy1 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy1);\\nvx3 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx3);\\nvy3 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy3);\\nbounce = below( sqrt( sqr(x2+vx2-x3-vx3) + sqr(y2+vy2-y3-vy3)), 2*r);\\nref_ang = atan2(x3-x2,y3-y2)+asin(1); // common tangent\\nv1 = sqrt(vx2*vx2+vy2*vy2);v2 = sqrt(vx3*vx3+vy3*vy3);w1 = atan2(vx2,vy2);w2 = atan2(vx3,vy3);\\nvx2 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx2);\\nvy2 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy2);\\nvx3 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx3);\\nvy3 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy3);\\nbounce = below( sqrt( sqr(x1+vx1-x4-vx4) + sqr(y1+vy1-y4-vy4)), 2*r);\\nref_ang = atan2(x4-x1,y4-y1)+asin(1); // common tangent\\nv1 = sqrt(vx1*vx1+vy1*vy1);v2 = sqrt(vx4*vx4+vy4*vy4);w1 = atan2(vx1,vy1);w2 = atan2(vx4,vy4);\\nvx1 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx1);\\nvy1 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy1);\\nvx4 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx4);\\nvy4 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy4);\\nbounce = below( sqrt( sqr(x2+vx2-x4-vx4) + sqr(y2+vy2-y4-vy4)), 2*r);\\nref_ang = atan2(x4-x2,y4-y2)+asin(1); // common tangent\\nv1 = sqrt(vx2*vx2+vy2*vy2);v2 = sqrt(vx4*vx4+vy4*vy4);w1 = atan2(vx2,vy2);w2 = atan2(vx4,vy4);\\nvx2 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx2);\\nvy2 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy2);\\nvx4 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx4);\\nvy4 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy4);\\nbounce = below( sqrt( sqr(x3+vx3-x4-vx4) + sqr(y3+vy3-y4-vy4)), 2*r);\\nref_ang = atan2(x4-x3,y4-y3)+asin(1); // common tangent\\nv1 = sqrt(vx3*vx3+vy3*vy3);v2 = sqrt(vx4*vx4+vy4*vy4);w1 = atan2(vx3,vy3);w2 = atan2(vx4,vy4);\\nvx3 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx3);\\nvy3 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy3);\\nvx4 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx4);\\nvy4 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy4);\\n//pogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogo\\nq1 =  0.5 - x1;\\nq2 = -0.5 + y1;\\nq3 =  0.5 - x2;\\nq4 = -0.5 + y2;\\nq5 =  0.5 - x3;\\nq6 = -0.5 + y3;\\nq7 =  0.5 - x4;\\nq8 = -0.5 + y4;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = mix (uv_orig, uv, vec2(0.2, 0.2));\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (texsize.zw * 2.0);\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (tmpvar_2 + (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (tmpvar_2 - (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_blur1, \\n    (tmpvar_2 + (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (tmpvar_2 - (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = tmpvar_4.x;\\n  tmpvar_6.y = tmpvar_5.x;\\n  ret_1.x = texture (sampler_fc_main, (tmpvar_2 + ((tmpvar_6 * texsize.zw) * 4.0))).x;\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = tmpvar_4.y;\\n  tmpvar_7.y = tmpvar_5.y;\\n  ret_1.y = texture (sampler_fc_main, (tmpvar_2 + ((tmpvar_7 * texsize.zw) * 4.0))).y;\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = tmpvar_4.z;\\n  tmpvar_8.y = tmpvar_5.z;\\n  ret_1.z = texture (sampler_fc_main, (tmpvar_2 + ((tmpvar_8 * texsize.zw) * 4.0))).z;\\n  ret_1 = (ret_1 - ((\\n    (ret_1.yzx + ret_1.zxy)\\n   * 0.16) + 0.002));\\n  ret_1 = (ret_1 + ((texture (sampler_noise_lq, \\n    (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 1.2)) + rand_frame.xy)\\n  ).xyz - 0.5) * 0.04));\\n  vec4 tmpvar_9;\\n  tmpvar_9.w = 1.0;\\n  tmpvar_9.xyz = ret_1;\\n  ret = tmpvar_9.xyz;\\n }","comp":"vec2 xlat_mutablefactorA;\\n shader_body { \\n  vec2 uv_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (uv - 0.5);\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = q1;\\n  tmpvar_3.y = q2;\\n  xlat_mutablefactorA = (tmpvar_2 + tmpvar_3);\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (xlat_mutablefactorA * vec2(8.0, 8.0));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = q3;\\n  tmpvar_5.y = q4;\\n  xlat_mutablefactorA = (tmpvar_2 + tmpvar_5);\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (xlat_mutablefactorA * vec2(8.0, 8.0));\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = q5;\\n  tmpvar_7.y = q6;\\n  xlat_mutablefactorA = (tmpvar_2 + tmpvar_7);\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (xlat_mutablefactorA * vec2(8.0, 8.0));\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = q7;\\n  tmpvar_9.y = q8;\\n  xlat_mutablefactorA = (tmpvar_2 + tmpvar_9);\\n  vec2 tmpvar_10;\\n  tmpvar_10 = (xlat_mutablefactorA * vec2(8.0, 8.0));\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = ((tmpvar_4.x * tmpvar_6.x) - (tmpvar_4.y * tmpvar_6.y));\\n  tmpvar_11.y = ((tmpvar_4.x * tmpvar_6.y) + (tmpvar_4.y * tmpvar_6.x));\\n  vec2 tmpvar_12;\\n  tmpvar_12.x = ((tmpvar_8.x * tmpvar_10.x) - (tmpvar_8.y * tmpvar_10.y));\\n  tmpvar_12.y = ((tmpvar_8.x * tmpvar_10.y) + (tmpvar_8.y * tmpvar_10.x));\\n  xlat_mutablefactorA = tmpvar_11;\\n  vec2 tmpvar_13;\\n  tmpvar_13.x = ((tmpvar_11.x * tmpvar_12.x) - (tmpvar_11.y * tmpvar_12.y));\\n  tmpvar_13.y = ((tmpvar_11.x * tmpvar_12.y) + (tmpvar_11.y * tmpvar_12.x));\\n  vec2 tmpvar_14;\\n  tmpvar_14.x = tmpvar_13.x;\\n  tmpvar_14.y = -(tmpvar_13.y);\\n  uv_1 = ((tmpvar_14 / (\\n    (tmpvar_13.x * tmpvar_13.x)\\n   + \\n    (tmpvar_13.y * tmpvar_13.y)\\n  )) * ((16.0 + bass) + treb));\\n  uv_1 = (0.5 + ((1.0 - \\n    abs(((fract(\\n      (mix ((0.5 + (tmpvar_2 * 2.0)), (uv_1 + 0.5), vec2(0.5, 0.5)) * 0.5)\\n    ) * 2.0) - 1.0))\\n  ) - 0.5));\\n  vec4 tmpvar_15;\\n  tmpvar_15.w = 1.0;\\n  tmpvar_15.xyz = mix (mix ((vec3(0.8, 0.6, 0.5) * texture (sampler_fc_main, uv_1).x), mix (vec3(0.6, 1.2, 0.0), vec3(-1.0, 0.8, -1.0), texture (sampler_main, uv_1).zzz), vec3((texture (sampler_main, uv_1).y * 0.4))), vec3(0.0, 0.15, 0.3), vec3(((texture (sampler_main, uv_1).z * \\n    (1.0 - texture (sampler_main, uv_1).y)\\n  ) * 2.0)));\\n  ret = tmpvar_15.xyz;\\n }"}')},9146:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.28,"decay":0.8,"echo_zoom":1,"echo_orient":3,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"brighten":1,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"zoomexp":3.04777,"zoom":1.0173,"warp":0.01605,"wave_g":0.65,"wave_b":0.65,"ob_size":0,"ob_a":1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"sides":5,"additive":1,"num_inst":2,"x":0.49,"rad":0.11589,"tex_zoom":4.36077,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = rand(1000)/1000;\\ny = rand(1000)/1000;\\nang = rand(150)/100;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"thick":1,"g":0,"b":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));"},{"baseVals":{"enabled":1,"thick":1,"r":0,"b":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));"},{"baseVals":{"enabled":1,"usedots":1,"r":0,"g":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"r":0,"g":0,"b":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));"}],"init_eqs_eel":"","frame_eqs_eel":"zoom = 1;\\n// the m�bius transformation\\n// z -> (az+b)/(cz-d); where a,b,c,d are complex numbers and z will be the uv-vector\\n// (az+b)/(cz-d) = a/c + mu/(cz+d), with mu = (bc-ad)/c\\n// so a/c and mu can be calculated outside of the shader\\n\\n//before inversion\\n\\nscale = 0.5 + bass_att*0.02-treb_att*0.01;\\nangle = time*0.1;\\ntranslation_x = 0;\\ntranslation_y = 0.04;\\n\\na_r = cos(angle)*scale;\\na_i = sin(angle)*scale;\\nb_r = translation_x;\\nb_i = translation_y;\\n\\n//complex inverted\\nscale = 1;\\nangle = sin(time*0.4)*0.2;\\ntranslation_u = 0;\\ntranslation_v = -0.2;\\n\\n// c\\nq15 = cos(angle)*scale;\\nq16 = sin(angle)*scale;\\n\\n// d\\nq17 = translation_u;\\nq18 = translation_v;\\n\\n// c^(-1)\\nc_inv_r = q15/(q15*q15+q16*q16);\\nc_inv_i = q16/(q15*q15+q16*q16);\\n\\n// a*c^(-1)\\nq11 = (a_r*c_inv_r - a_i*c_inv_i);\\nq12 = (a_r*c_inv_i - a_i*c_inv_r);\\n\\n// (bc-ad)\\nbcad_r = (b_r*q15 - b_i*q16)-(a_r*q17-a_i*q18);\\nbcad_i = (b_r*q16 - b_i*q15)-(a_r*q18-a_i*q17);\\n\\n// mu*c^(-1)\\nq13 = bcad_r*c_inv_r - bcad_i*c_inv_i;\\nq14 = bcad_r*c_inv_i - bcad_i*c_inv_r;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = mix (uv_orig, uv, vec2(0.2, 0.2));\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (texsize.zw * 2.0);\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (tmpvar_2 + (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (tmpvar_2 - (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_blur1, \\n    (tmpvar_2 + (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (tmpvar_2 - (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = tmpvar_4.x;\\n  tmpvar_6.y = tmpvar_5.x;\\n  ret_1.x = texture (sampler_fc_main, (tmpvar_2 + ((tmpvar_6 * texsize.zw) * 4.0))).x;\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = tmpvar_4.y;\\n  tmpvar_7.y = tmpvar_5.y;\\n  ret_1.y = texture (sampler_fc_main, (tmpvar_2 + ((tmpvar_7 * texsize.zw) * 4.0))).y;\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = tmpvar_4.z;\\n  tmpvar_8.y = tmpvar_5.z;\\n  ret_1.z = texture (sampler_fc_main, (tmpvar_2 + ((tmpvar_8 * texsize.zw) * 4.0))).z;\\n  ret_1 = (ret_1 - ((\\n    (ret_1.yzx + ret_1.zxy)\\n   * 0.16) + 0.002));\\n  ret_1 = (ret_1 + ((texture (sampler_noise_lq, \\n    (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 1.2)) + rand_frame.xy)\\n  ).xyz - 0.5) * 0.04));\\n  vec4 tmpvar_9;\\n  tmpvar_9.w = 1.0;\\n  tmpvar_9.xyz = ret_1;\\n  ret = tmpvar_9.xyz;\\n }","comp":" shader_body { \\n  vec2 uv_1;\\n  vec2 moebius_2;\\n  vec2 d_3;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = q11;\\n  tmpvar_4.y = q12;\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = q17;\\n  tmpvar_5.y = q18;\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv - 0.5);\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = ((tmpvar_6.x * q15) - (tmpvar_6.y * q16));\\n  tmpvar_7.y = ((tmpvar_6.x * q16) - (tmpvar_6.y * q15));\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (tmpvar_7 + tmpvar_5);\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = ((q13 * tmpvar_8.x) + (q14 * tmpvar_8.y));\\n  tmpvar_9.y = ((q14 * tmpvar_8.x) - (q13 * tmpvar_8.y));\\n  moebius_2 = (0.5 + ((\\n    (1.0 - abs(((\\n      fract((((tmpvar_9 / \\n        ((tmpvar_8.x * tmpvar_8.x) + (tmpvar_8.y * tmpvar_8.y))\\n      ) + tmpvar_4) * 0.5))\\n     * 2.0) - 1.0)))\\n   - 0.5) * 0.99));\\n  d_3 = (texsize.zw * 8.0);\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = dot (((\\n    (texture (sampler_blur1, (moebius_2 + (vec2(1.0, 0.0) * d_3))).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (moebius_2 - (vec2(1.0, 0.0) * d_3))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  tmpvar_10.y = dot (((\\n    (texture (sampler_blur1, (moebius_2 + (vec2(0.0, 1.0) * d_3))).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (moebius_2 - (vec2(0.0, 1.0) * d_3))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  uv_1 = (moebius_2 - ((tmpvar_10 * texsize.zw) * 32.0));\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 1.0;\\n  tmpvar_11.xyz = mix (mix ((vec3(0.8, 0.6, 0.5) * texture (sampler_fc_main, uv_1).x), mix (vec3(0.6, 1.2, 0.0), vec3(-1.0, 0.8, -1.0), texture (sampler_main, uv_1).zzz), vec3((texture (sampler_main, uv_1).y * 0.4))), vec3(0.0, 0.15, 0.3), vec3(((texture (sampler_main, uv_1).z * \\n    (1.0 - texture (sampler_main, uv_1).y)\\n  ) * 2.0)));\\n  ret = tmpvar_11.xyz;\\n }"}')},9867:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":2,"gammaadj":1,"decay":0.5,"echo_zoom":1.03,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":0.01,"wave_smoothing":0,"modwavealphastart":1,"modwavealphaend":1,"warpscale":0.107,"zoomexp":4.28632,"fshader":1,"warp":0.01743,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0,"ob_g":1,"ob_a":1,"ib_size":0,"ib_r":1,"ib_g":1,"ib_b":1,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"textured":1,"rad":0.789,"ang":0.6283,"tex_zoom":1.17257,"r":0,"g":1,"border_a":0},"init_eqs_eel":"vx = 0;\\nvy = 0;","frame_eqs_eel":"rad = 0.65 + bass*0.1;\\n\\nan = an*0.99 + (bass-treb)*0.1;\\nang = an*0.1 + 0.6;"},{"baseVals":{"sides":100,"thickoutline":1,"textured":1,"rad":0.40271,"tex_zoom":2.23888,"g":1,"b":1,"r2":0.08,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":32,"additive":1,"thickoutline":1,"num_inst":33,"r":0,"g":0.5,"g2":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"trans = rand(int(q30))/15+instance-instance;\\ntrans2 = rand(int(q30))/15+instance-instance;\\ntrans3 = rand(int(q30))/15+instance-instance;\\na = trans;\\n\\nx = .5 + int(rand(15))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\\ny = .5 + int(rand(15))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\\nrad = .09 + rand(int(q30))/15+instance-instance;\\nr=rand(q30)*.1+instance-instance;\\ng=rand(q30)*.1+instance-instance;\\nb=rand(q30)*.1+instance-instance;\\nr2=rand(q30)*.1+instance-instance;\\ng2=rand(q30)*.1+instance-instance;\\nb2=rand(q30)*.1+instance-instance;\\nborder_r=rand(q30)*.1+instance-instance;\\nborder_g=rand(q30)*.1+instance-instance;\\nborder_b=rand(q30)*.1+instance-instance;"},{"baseVals":{"enabled":1,"sides":3,"thickoutline":1,"textured":1,"num_inst":311,"rad":0.01,"tex_ang":0.62832,"r":0,"g2":0,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*tan(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=1-mx;\\ny=1-my;\\n\\nang=(sin(time*.35)+1)*3;\\n//a=(above(bass+mid+treb,.8));\\npi23=4*asin(1)*.333333333;\\nt1=bass+mid+treb;"}],"waves":[{"baseVals":{"enabled":1,"samples":495,"sep":4,"spectrum":1,"thick":1,"additive":1,"scaling":100,"smoothing":1,"r":0,"g":0.04,"b":0,"a":0.99},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\nab = 1;","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt8 = .07;\\nt7 = 1;","point_eqs_eel":"t7 = -t7;\\npi = asin(1);\\nn = 180;\\nrd = 0.075;//+(value1*10+1)*((sample*512)%2)*0.02;\\nmy_x = sin(sample*pi*4+(t7+1)*t8)*0.5 + cos(sample*pi*n)*rd*sin(sample*pi*4+(t7+1)*t8);\\nmy_y = cos(sample*pi*4+(t7+1)*t8)*0.5 + cos(sample*pi*n)*rd*cos(sample*pi*4+(t7+1)*t8);\\nmy_z = sin(sample*pi*n)*rd;\\n\\n\\n\\nd = 1.4; // makes the perspective impact\\nzoom = 0.65;\\n\\nw1 = q2;\\nw2 = q3;\\nw3 = q4;\\n\\nx1 = cos(w1)*my_x + sin(w1)*my_y;\\ny1 = -sin(w1)*my_x + cos(w1)*my_y;\\nz1 = my_z;\\n\\nx2 = cos(w2)*x1 + sin(w2)*z1;\\nz2 = -sin(w2)*x1 + cos(w2)*z1;\\ny2 = y1;\\n\\ny3 = cos(w3)*y2 + sin(w3)*z2;\\nz3 = -sin(w3)*y2 + cos(w3)*z2;\\nx3 = x2;\\n\\n// perspective calculation\\n\\nl = sqrt(x3*x3 + y3*y3);\\nw = atan2(x3,y3);\\np = tan(asin(1) + atan2(d+z3,l));\\nd = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));\\n\\nmy_x = zoom*sin(w)*p;\\nmy_y = zoom*cos(w)*p;\\n\\nx = 0.5 + my_x;\\ny = 0.5 + my_y;\\n\\nb = -z3 + 0.5;\\nb = min(1,max(0,b))*0.5;\\nr = 1-b*2\\n//b = (1 - r)*0.1;\\n//a =  7/(d*16) - 0.1;"},{"baseVals":{"samples":445,"sep":4,"spectrum":1,"usedots":1,"thick":1,"additive":1,"scaling":100,"smoothing":1,"a":0.99,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\nab = 1;","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt8 = .09;\\nt7 = 1;","point_eqs_eel":"t7 = -t7;\\npi = asin(1);\\nn = 160;\\nrd = 0.075;//+(value1*10+1)*((sample*512)%2)*0.02;\\nxx = sin(sample*pi*4+(t7+1)*t8)*0.5 + cos(sample*pi*n)*rd*sin(sample*pi*4);\\nyy = cos(sample*pi*4+(t7+1)*t8)*0.5 + cos(sample*pi*n)*rd*cos(sample*pi*4);\\nzz = sin(sample*pi*n)*rd;\\n\\nd = sqrt( xx*xx + yy*yy + zz*zz);\\nd1 = 1;\\nxx = xx*d1;\\nyy = yy*d1;\\nzz = zz*d1;\\n\\nw = -d*t5;\\ns1 = sin(t2*1+w);\\ns2 = sin(t3*1+w);\\ns3 = sin(t4*1+w);\\nc1 = cos(t2*1+w);\\nc2 = cos(t3*1+w);\\nc3 = cos(t4*1+w);\\n\\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\\n\\na = 0.75;\\nzoom = 0.5*atan2(a,a+z);//0.5*(1/(z+a));\\nx = 0.5 + zoom*x1;\\ny = 0.5 + zoom*y1;\\n\\npi3 = 3.1415*2*0.3333;\\nt = sample*pi*4-2*time;\\nc=1.6;\\nr = sin(t)*c;\\n\\ng = sin(t+pi3)*c;\\n\\nb = sin(t-pi3)*c;\\n\\nj = 0.71;\\n//r = 0.5+xx*j;\\n//g = 0.5+yy*j;\\n//b = 0.5+zz*j;\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\na = 1-(z + a)/2;\\n"},{"baseVals":{"sep":4,"scaling":0.09348,"smoothing":1,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\nab = 1;","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;","point_eqs_eel":"s8 = sample*383;\\n\\ns = 100;//0.3;\\nxx = sin(sample*s);//((sample*343)%7 - 3.5)*s;\\nzz = cos(sample*s);//((sample*49)%7 - 3.5)*s;\\nyy = (sample-0.5);//((sample*7)%7 - 3.5)*s;\\n\\nd = sqrt( xx*xx + yy*yy + zz*zz);\\nd1 = 1/d;\\nxx = xx*d1;\\nyy = yy*d1;\\nzz = zz*d1;\\n\\nw = 1+0*(d)*(t6);//(sample*sin(time*0.3)*0.02-1);\\ns1 = sin(t2*w);\\ns2 = sin(t3*w);\\ns3 = sin(t4*w);\\nc1 = cos(t2*w);\\nc2 = cos(t3*w);\\nc3 = cos(t4*w);\\n\\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\\n\\na = 2;\\nzoom = 0.3*atan2(a-z,a);//0.5*(1/(z+a));\\nx = 0.5 + zoom*x1;\\ny = 0.5 + zoom*y1;\\n\\npi3 = 3.1415*2*0.3333;\\nt = -z*13+t5*20;\\nc = 10;\\nr = sin(t)*c;\\n\\ng = sin(t+pi3)*c;\\n\\nb = sin(t-pi3)*c;\\n\\nj = 0.71;\\n//r = 0.5+xx*j;\\n//g = 0.5+yy*j;\\n//b = 0.5+zz*j;\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\n\\n\\na = sigmoid(-z,10)*1.0+0.0;"},{"baseVals":{"samples":484,"sep":4,"usedots":1,"scaling":9.94125,"smoothing":1,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\nab = 1;","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;","point_eqs_eel":"s8 = sample*383;\\n\\ns = 0.25;\\nxx = ((sample*(465))%15 - 8)*s*2;\\nyy = ((sample*31)%31 - 16)*s;\\nzz = 0;\\n\\nd = sqrt( xx*xx + yy*yy + zz*zz);\\nw = 1;\\n\\ns1 = sin(t2*1);\\ns2 = sin(t3*0);\\ns3 = sin(t4*1);\\nc1 = cos(t2*1);\\nc2 = cos(t3*0);\\nc3 = cos(t4*1);\\n\\n\\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\\n\\na = 500;\\nzoom = 0.05*atan2(a-z,a);//0.5*(1/(z+a));\\nx = 0.5 + zoom*x1;\\ny = 0.5 + zoom*y1;\\n\\npi3 = 3.1415*2*0.3333;\\nt = -z*5+t5;\\nc = 10;\\nr = sin(t)*c;\\n\\ng = sin(t+pi3)*c;\\n\\nb = sin(t-pi3)*c;\\n\\nj = 0.71;\\n//r = 0.5+xx*j;\\n//g = 0.5+yy*j;\\n//b = 0.5+zz*j;\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\n\\n\\na = sigmoid(z,5);"}],"init_eqs_eel":"x1 = 0;\\ny1 = 0;","frame_eqs_eel":"chng=sin(time*.5);\\ncthr=.9999;\\nmq21=if(above(chng,cthr),rand(3),mq21);\\nmq22=if(above(chng,cthr),rand(3),mq22);\\nmq23=if(above(chng,cthr),rand(3),mq23);\\nmq24=if(above(chng,cthr),rand(2),mq24);\\nmq25=if(above(chng,cthr),rand(2),mq25);\\nmq26=if(above(chng,cthr),rand(2),mq26);\\nmq27=if(above(chng,cthr),rand(1),mq27);\\nmq28=if(above(chng,cthr),rand(1),mq28);\\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\\nmq31=if(above(chng,cthr),rand(1)*.3,mq31);\\nmonitor=chng;\\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\\nq27=mq27;q28=mq28;q29=mq29;q31=mq31;\\n\\nmonitor=mq1;\\nvol=bass+treb+mid;\\natime=atime+vol;\\nq11=.4+sin(atime*.006        )*.4;\\nq12=.4+cos(atime*.00613828348)*.4;\\nq13=.4+sin(atime*.00598593455)*.4;\\nmonitor=q13;\\n\\nq1 = 0;\\nv = 0.4;\\nj1 = j1*0.95 + sqr(bass*4)*v;\\nj2 = j2*0.95 + sqr(mid*4)*v;\\nj3 = j3*0.95 + sqr(treb*4)*v;\\n\\nn = n + j1*0.0052;\\nn1 = n1 + j2*0.0052;\\nn2 = n2 + j3*0.0052;\\n\\n\\nq2 = n*0.01;\\nq3 = n1*0.01;\\nq4 = n2*0.01;\\n\\nk = k*0.99 + sqr(mid_att*2);\\nq5 = k*0.00;\\n\\nzoom = 1.0016;\\nwarp = 0;\\n\\nrot = -0.00;\\n\\nq9 = aspectx;\\nq10 = aspecty;\\nq30=bass+treb+mid;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 4.0);\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = (((texture (sampler_blur2, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale2) + bias2)).z;\\n  tmpvar_3.y = -(((\\n    (texture (sampler_blur2, (uv + (vec2(1.0, 0.0) * tmpvar_2))).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, (uv - (vec2(1.0, 0.0) * tmpvar_2))).xyz * scale2)\\n   + bias2)).z);\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (uv + ((tmpvar_3 * texsize.zw) * 60.0));\\n  vec2 x_5;\\n  x_5 = (tmpvar_4 - uv);\\n  vec4 tmpvar_6;\\n  tmpvar_6 = texture (sampler_main, uv);\\n  vec4 tmpvar_7;\\n  tmpvar_7 = texture (sampler_blur1, uv);\\n  ret_1.z = (((texture (sampler_main, tmpvar_4).z + \\n    (((tmpvar_6.z - (\\n      (tmpvar_7.xyz * scale1)\\n     + bias1).z) * 200.0) * sqrt(dot (x_5, x_5)))\\n  ) * 0.96) - 0.02);\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1)).y;\\n  tmpvar_8.y = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1)).y;\\n  vec2 tmpvar_9;\\n  tmpvar_9 = (uv_orig + ((tmpvar_8 * texsize.zw) * 6.0));\\n  ret_1.y = ((texture (sampler_main, tmpvar_9).y + (\\n    (tmpvar_6.y - ((tmpvar_7.xyz * scale1) + bias1).y)\\n   * 0.1)) - 0.016);\\n  vec4 tmpvar_10;\\n  tmpvar_10 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * tmpvar_9.xyy) * (\\n    (q27 * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\\n  if (((ret_1.x > (q21 * q13)) && (ret_1.x <= (q24 * q11)))) {\\n    ret_1.y = (ret_1.y + (tmpvar_10.x * 0.5));\\n  };\\n  if (((ret_1.y > (q22 * q11)) && (ret_1.y <= (q25 * q12)))) {\\n    ret_1.z = (ret_1.z + (tmpvar_10.y * 0.5));\\n  };\\n  if (((ret_1.z > (q23 * q12)) && (ret_1.z <= (q26 * q13)))) {\\n    ret_1.x = (ret_1.x + (tmpvar_10.z * 0.5));\\n  };\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 1.0;\\n  tmpvar_11.xyz = ret_1;\\n  ret = tmpvar_11.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv);\\n  ret_1 = tmpvar_2.xyz;\\n  vec3 tmpvar_3;\\n  tmpvar_3.z = 0.0;\\n  tmpvar_3.xy = texsize.zw;\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (tmpvar_3 * 2.5);\\n  float tmpvar_5;\\n  tmpvar_5 = dot (((texture (sampler_blur1, \\n    (uv + tmpvar_4.xz)\\n  ).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29));\\n  float tmpvar_6;\\n  tmpvar_6 = dot (((texture (sampler_blur1, \\n    (uv - tmpvar_4.xz)\\n  ).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29));\\n  float tmpvar_7;\\n  tmpvar_7 = dot (((texture (sampler_blur1, \\n    (uv + tmpvar_4.zy)\\n  ).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29));\\n  float tmpvar_8;\\n  tmpvar_8 = dot (((texture (sampler_blur1, \\n    (uv - tmpvar_4.zy)\\n  ).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29));\\n  vec4 tmpvar_9;\\n  tmpvar_9 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv.xyy) * (\\n    (q28 * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q31)));\\n  if (((tmpvar_2.x > (q26 * q13)) && (tmpvar_2.x <= (q23 * q11)))) {\\n    ret_1.z = (tmpvar_2.z - (tmpvar_9.x * 0.5));\\n  };\\n  if (((tmpvar_2.y > (q25 * q11)) && (tmpvar_2.y <= (q22 * q12)))) {\\n    ret_1.x = (tmpvar_2.x - (tmpvar_9.y * 0.5));\\n  };\\n  if (((ret_1.z > (q24 * q12)) && (ret_1.z <= (q21 * q13)))) {\\n    ret_1.y = (tmpvar_2.y - (tmpvar_9.z * 0.5));\\n  };\\n  ret_1 = (ret_1 * 0.5);\\n  ret_1 = (ret_1 + (vec3(3.4, 2.38, 1.02) * (tmpvar_5 - tmpvar_6)));\\n  ret_1 = (ret_1 + (vec3(0.68, 1.7, 2.38) * (tmpvar_7 - tmpvar_8)));\\n  float tmpvar_10;\\n  tmpvar_10 = dot (ret_1, vec3(0.32, 0.49, 0.29));\\n  if ((tmpvar_10 > 0.6)) {\\n    vec4 tmpvar_11;\\n    tmpvar_11.w = 0.0;\\n    tmpvar_11.xyz = ret_1;\\n    ret_1 = (mix (tmpvar_11, texture (sampler_noise_lq, (uv * 10.0)), vec4(0.1, 0.1, 0.1, 0.1)) * 1.1).xyz;\\n  };\\n  ret_1 = (ret_1 * ret_1);\\n  vec4 tmpvar_12;\\n  tmpvar_12.w = 0.0;\\n  tmpvar_12.xyz = ret_1;\\n  vec4 tmpvar_13;\\n  tmpvar_13 = mix (vec4(dot (ret_1, vec3(0.32, 0.49, 0.29))), ((\\n    (2.0 * dot (ret_1, vec3(0.32, 0.49, 0.29)))\\n   * rand_preset) * dot (\\n    ((texture (sampler_blur3, uv).xyz * scale3) + bias3)\\n  , vec3(0.32, 0.49, 0.29))), pow (rand_preset, tmpvar_12));\\n  ret_1 = (tmpvar_13.xyz * (5.0 * sqrt(tmpvar_13.xyz)));\\n  vec4 tmpvar_14;\\n  tmpvar_14.w = 1.0;\\n  tmpvar_14.xyz = ret_1;\\n  ret = tmpvar_14.xyz;\\n }"}')},7216:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1.9,"echo_zoom":1.169,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"wave_a":1.413,"wave_scale":0.418,"wave_smoothing":0,"wave_mystery":-0.66,"modwavealphastart":2,"modwavealphaend":2,"warpanimspeed":0.626,"warpscale":1.331,"zoomexp":1.00001,"zoom":0.99951,"warp":0.08925,"wave_r":0,"wave_g":0,"wave_x":0.24,"wave_y":0.44,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"additive":1,"rad":0.0277,"ang":6.03186,"tex_ang":6.03186,"tex_zoom":0.6839,"g":1,"r2":1,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":1},"init_eqs_eel":"","frame_eqs_eel":"an = an + q6;\\nang = an*0.5;\\nx = q4;\\ny = q5;\\nrad = q3*sqrt(2);\\n\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;\\n"},{"baseVals":{"enabled":1,"additive":1,"rad":0.0277,"ang":6.03186,"tex_ang":6.03186,"tex_zoom":0.6839,"g":1,"r2":1,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":1},"init_eqs_eel":"","frame_eqs_eel":"an = an + q9;\\nang = an*0.5;\\nx = q7;\\ny = q8;\\nrad = q3*sqrt(2);\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;\\n"},{"baseVals":{"enabled":1,"additive":1,"rad":0.0277,"ang":6.03186,"tex_ang":6.03186,"tex_zoom":0.6839,"b":1,"r2":1,"g2":0,"b2":1,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":1},"init_eqs_eel":"","frame_eqs_eel":"an = an + q12;\\nang = an*0.5;\\nx = q10;\\ny = q11;\\nrad = q3*sqrt(2);\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;\\n"},{"baseVals":{"sides":48,"additive":1,"num_inst":4,"rad":0.0277,"ang":6.03186,"tex_ang":6.03186,"tex_zoom":0.6839,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"an = an + 0.5*q16/num_inst;\\nw = asin(1)*4*instance/num_inst + an;\\nx = q6 + sin(w)*q5*0.5;\\ny = q7 + cos(w)*q5*0.5;\\nrad = q5*0.25;\\n\\n\\n//x = 0.5 + (x-0.5)/q2;\\n//y = 0.5 + (y-0.5)/q1;\\n"}],"waves":[{"baseVals":{"enabled":1,"thick":1,"additive":1,"scaling":2.0231,"smoothing":0,"r":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"vol = bass*8 + mid*5 + treb*3;\\nm = m*0.97 + vol*0.08;\\nmonitor = vol;\\nbeat = above(vol,res)*above(vol,m)*above(vol,16);\\ndiff = (1-beat)*diff + beat*(vol-res);\\nres = beat*(vol + m*0.04) + (1-beat)*(res -  (0.1+diff*0.02)*60/fps);\\nres = max(0,res);\\n\\na = beat;","point_eqs_eel":"tt3 = tt3*0.6 + (value1)*1;\\ntt2 = tt2*0.7 + tt3*0.2;\\ntt1 = tt1*0.8 + tt2*0.1;\\nd = d*0.9 + tt1*0.2;\\n\\ny = 0.5 + d*sample*(1-sample)*2;\\nx =  -0.05 + sample*1.1;"},{"baseVals":{"spectrum":1,"thick":1,"enabled":0},"init_eqs_eel":"chance = 0;","frame_eqs_eel":"","point_eqs_eel":"// the velocity vector\\n\\nx = q3 + sample*sin(q14)*q13*40;\\ny = q4 + sample*cos(q14)*q13*40;\\n\\n// tangential velocity of rotation\\n//x = q3 + sample*q16*40;\\n//y = q4 - q5/2;\\n\\n\\nx = 0.5 + (x-0.5)/q1;\\ny = 0.5 + (y-0.5)/q2;"},{"baseVals":{"spectrum":1,"thick":1,"enabled":0},"init_eqs_eel":"chance = 0;","frame_eqs_eel":"","point_eqs_eel":"// tangential property of velocity vector\\n\\nx = q3 + sample*sin(q10)*cos(q14-q10)*q13*40;\\ny = q4 + sample*cos(q10)*cos(q14-q10)*q13*40;\\n\\n// vx\\n//x = q3 + sample*q11*40;\\n//y = q4;\\n\\nx = 0.5 + (x-0.5)/q1;\\ny = 0.5 + (y-0.5)/q2;"},{"baseVals":{"spectrum":1,"thick":1,"enabled":0},"init_eqs_eel":"chance = 0;","frame_eqs_eel":"","point_eqs_eel":"// orthogonal property of velocity vector\\n\\nx = q3 + sample*sin(q10+asin(1))*cos(q14-q10-asin(1))*q13*40;\\ny = q4 + sample*cos(q10+asin(1))*cos(q14-q10-asin(1))*q13*40;\\n\\n// vy\\n//x = q3;\\n//y = q4 + sample*q12*40;\\n\\nx = 0.5 + (x-0.5)/q1;\\ny = 0.5 + (y-0.5)/q2;"}],"init_eqs_eel":"x1 = 0.5;\\ny1 = 0.6;\\n\\nx2 = 0.5;\\ny2 = 0.4;\\n\\nx3 = 0.5;\\ny3 = 0.2;\\n\\nvr1 = 0.0001;\\nvr2 = 0.0;\\nvr3 = 0.0;\\n\\nvx1 = 0;\\nvx2 = 0;\\nvx3 = 0;","frame_eqs_eel":"zoom = 1;\\nwarp = 0;\\nwave_a = 0;\\n\\nr = 0.03+ (bass_att+treb_att)*0.004;\\nmonitor = aspecty;\\nvr = sin(vr1)*r;\\nbounce = below(y1,r-(aspectx-1)*0.5);y1 = y1+vy1;vy1 = if(bounce, abs(vy1)*0.96 + (r-y1-(aspectx-1)*0.5)*0.1, vy1-0.0003*60/fps);\\nvx1 = if(bounce, vx1 + (vr-vx1)*0.15, vx1);vr = if(bounce, vr + (vx1-vr)*0.85 , vr);vr1 = asin(vr/r);\\nbounce = above(x1,1-r+(aspecty-1)*0.5);vx1 = if(bounce, - abs(vx1)*0.96 + (1-r-x1+(aspecty-1)*0.5)*0.1, vx1);\\nvy1 = if(bounce, vy1 + (vr-vy1)*0.15, vy1);vr = if(bounce, vr + (vy1-vr)*0.85 , vr);vr1 = asin(vr/r);\\nbounce = below(x1,r-(aspecty-1)*0.5);x1 = x1+vx1;vx1 = if(bounce, abs(vx1)*0.96 + (r-x1-(aspecty-1)*0.5)*0.1, vx1);\\nvy1 = if(bounce, vy1 + (-vr-vy1)*0.15, vy1);vr = if(bounce, vr - (vy1+vr)*0.85 , vr);vr1 = asin(vr/r);\\n\\nvr = sin(vr2)*r;\\nbounce = below(y2,r-(aspectx-1)*0.5);y2 = y2+vy2;vy2 = if(bounce, abs(vy2)*0.96 + (r-y2-(aspectx-1)*0.5)*0.1, vy2-0.0003*60/fps);\\nvx2 = if(bounce, vx2 + (vr-vx2)*0.15, vx2);vr = if(bounce, vr + (vx2-vr)*0.85 , vr);vr2 = asin(vr/r);\\nbounce = above(x2,1-r+(aspecty-1)*0.5);vx2 = if(bounce, - abs(vx2)*0.96 + (1-r-x2+(aspecty-1)*0.5)*0.1, vx2);\\nvy2 = if(bounce, vy2 + (vr-vy2)*0.15, vy2);vr = if(bounce, vr + (vy2-vr)*0.85 , vr);vr2 = asin(vr/r);\\nbounce = below(x2,r-(aspecty-1)*0.5);x2 = x2+vx2;vx2 = if(bounce, abs(vx2)*0.96 + (r-x2-(aspecty-1)*0.5)*0.1, vx2);\\nvy2 = if(bounce, vy2 + (-vr-vy2)*0.15, vy2);vr = if(bounce, vr - (vy2+vr)*0.85 , vr);vr2 = asin(vr/r);\\n\\nvr = sin(vr3)*r;\\nbounce = below(y3,r-(aspectx-1)*0.5);y3 = y3+vy3;vy3 = if(bounce, abs(vy3)*0.96 + (r-y3-(aspectx-1)*0.5)*0.1, vy3-0.0003*60/fps);\\nvx3 = if(bounce, vx3 + (vr-vx3)*0.15, vx3);vr = if(bounce, vr + (vx3-vr)*0.85 , vr);vr3 = asin(vr/r);\\nbounce = above(x3,1-r+(aspecty-1)*0.5);vx3 = if(bounce, - abs(vx3)*0.96 + (1-r-x3+(aspecty-1)*0.5)*0.1, vx3);\\nvy3 = if(bounce, vy3 + (vr-vy3)*0.15, vy3);vr = if(bounce, vr + (vy3-vr)*0.85 , vr);vr3 = asin(vr/r);\\nbounce = below(x3,r-(aspecty-1)*0.5);x3 = x3+vx3;vx3 = if(bounce, abs(vx3)*0.96 + (r-x3-(aspecty-1)*0.5)*0.1, vx3);\\nvy3 = if(bounce, vy3 + (-vr-vy3)*0.15, vy3);vr = if(bounce, vr - (vy3+vr)*0.85 , vr);vr3 = asin(vr/r);\\n\\nbounce = below( sqrt( sqr(x1+vx1-x2-vx2) + sqr(y1+vy1-y2-vy2)), 2*r);\\nbounce = bounce*below(sqrt( sqr(x1+vx1-x2-vx2) + sqr(y1+vy1-y2-vy2)),sqrt( sqr(x1-x2) + sqr(y1-y2)));\\nref_ang = atan2(x2-x1,y2-y1)+asin(1); // common tangent\\nv1 = sqrt(vx1*vx1+vy1*vy1);v2 = sqrt(vx2*vx2+vy2*vy2);w1 = atan2(vx1,vy1);w2 = atan2(vx2,vy2);\\nvr = sin(vr1)*r; v2r=sin(vr2)*r;\\nvx1 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + ((vr-v2r)-sin(ref_ang)*v1*cos(w1-ref_ang))*0.1\\n              + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx1);\\nvy1 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + ((vr-v2r)-cos(ref_ang)*v1*cos(w1-ref_ang))*0.1\\n              + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy1);\\nvx2 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + ((v2r-vr)-sin(ref_ang)*v2*cos(w2-ref_ang))*0.1\\n              + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx2);\\nvy2 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + ((v2r-vr)-cos(ref_ang)*v2*cos(w2-ref_ang))*0.1\\n              + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy2);\\nvr = if(bounce, vr + (cos(w1-ref_ang)*(v1-v2)-vr)*0.9 , vr);vr1 = asin(vr/r);\\nv2r = if(bounce, v2r + (cos(w2-ref_ang)*(v2-v1)-v2r)*0.9 , v2r);vr2 = asin(v2r/r);\\n\\nbounce = below( sqrt( sqr(x1+vx1-x3-vx3) + sqr(y1+vy1-y3-vy3)), 2*r);\\nbounce = bounce*below(sqrt( sqr(x1+vx1-x3-vx3) + sqr(y1+vy1-y3-vy3)),sqrt( sqr(x1-x3) + sqr(y1-y3)));\\nref_ang = atan2(x3-x1,y3-y1)+asin(1); // common tangent\\nv1 = sqrt(vx1*vx1+vy1*vy1);v2 = sqrt(vx3*vx3+vy3*vy3);w1 = atan2(vx1,vy1);w2 = atan2(vx3,vy3);\\nvr = sin(vr1)*r; v2r=sin(vr3)*r;\\nvx1 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + ((vr-v2r)-sin(ref_ang)*v1*cos(w1-ref_ang))*0.1\\n              + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx1);\\nvy1 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + ((vr-v2r)-cos(ref_ang)*v1*cos(w1-ref_ang))*0.1\\n              + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy1);\\nvx3 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + ((v2r-vr)-sin(ref_ang)*v2*cos(w2-ref_ang))*0.1\\n              + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx3);\\nvy3 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + ((v2r-vr)-cos(ref_ang)*v2*cos(w2-ref_ang))*0.1\\n              + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy3);\\nvr = if(bounce, vr + (cos(w1-ref_ang)*(v1-v2)-vr)*0.9 , vr);vr1 = asin(vr/r);\\nv2r = if(bounce, v2r + (cos(w2-ref_ang)*(v2-v1)-v2r)*0.9 , v2r);vr3 = asin(v2r/r);\\n\\nbounce = below( sqrt( sqr(x3+vx3-x2-vx2) + sqr(y3+vy3-y2-vy2)), 2*r);\\nbounce = bounce*below(sqrt( sqr(x2+vx2-x3-vx3) + sqr(y2+vy2-y3-vy3)),sqrt( sqr(x2-x3) + sqr(y2-y3)));\\nref_ang = atan2(x2-x3,y2-y3)+asin(1); // common tangent\\nv1 = sqrt(vx3*vx3+vy3*vy3);v2 = sqrt(vx2*vx2+vy2*vy2);w1 = atan2(vx3,vy3);w2 = atan2(vx2,vy2);\\nvr = sin(vr3)*r; v2r=sin(vr2)*r;\\nvx3 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + ((vr-v2r)-sin(ref_ang)*v1*cos(w1-ref_ang))*0.1\\n              + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx3);\\nvy3 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + ((vr-v2r)-cos(ref_ang)*v1*cos(w1-ref_ang))*0.1\\n              + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy3);\\nvx2 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + ((v2r-vr)-sin(ref_ang)*v2*cos(w2-ref_ang))*0.1\\n              + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx2);\\nvy2 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + ((v2r-vr)-cos(ref_ang)*v2*cos(w2-ref_ang))*0.1\\n              + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy2);\\nvr = if(bounce, vr + (cos(w1-ref_ang)*(v1-v2)-vr)*0.9 , vr);vr3 = asin(vr/r);\\nv2r = if(bounce, v2r + (cos(w2-ref_ang)*(v2-v1)-v2r)*0.9 , v2r);vr2 = asin(v2r/r);\\n\\n\\n\\n\\nq1 = aspectx;\\nq2 = aspecty;\\nq3 = r*2;\\n\\nq4  = x1;  q5 = y1;  q6 = vr1;\\nq7  = x2;  q8 = y2;  q9 = vr2;\\nq10 = x3; q11 = y3; q12 = vr3;\\n\\nq13 = atan2( (x1+x2+x3)/3 - 0.5, (y1+y2+y3)/3-0.5);\\nq14 = sigmoid(sqrt( sqr((x1+x2+x3)/3 - 0.5) + sqr((y1+y2+y3)/3-0.5) ),2)*0.2;","pixel_eqs_eel":"du = (x*2-1) - (q4+q7+q10-1.5)*2/3;\\ndv = (y*2-1) + (q5+q8+q11-1.5)*2/3;\\ndist = sqrt(du*du+dv*dv);\\nang2 = atan2(du,dv);\\nmult = sin(dist*0.05)*0.4*q14;\\ndx = mult*sin(ang2*2+q13)*aspectx;\\ndy = mult*cos(ang2*2+q13)*aspecty;","warp":" shader_body { \\n  float n_1;\\n  vec3 ret_2;\\n  vec4 tmpvar_3;\\n  tmpvar_3 = texture (sampler_pw_main, uv);\\n  ret_2 = tmpvar_3.xyz;\\n  n_1 = (clamp ((texture (sampler_pw_main, \\n    (uv + texsize.zw)\\n  ).x * 999.0), 0.0, 1.0) + clamp ((texture (sampler_pw_main, \\n    (uv + (texsize.zw * vec2(1.0, 0.0)))\\n  ).x * 999.0), 0.0, 1.0));\\n  n_1 = (n_1 + clamp ((texture (sampler_pw_main, \\n    (uv + (texsize.zw * vec2(1.0, -1.0)))\\n  ).x * 999.0), 0.0, 1.0));\\n  n_1 = (n_1 + clamp ((texture (sampler_pw_main, \\n    (uv + (texsize.zw * vec2(0.0, 1.0)))\\n  ).x * 999.0), 0.0, 1.0));\\n  n_1 = (n_1 + clamp ((texture (sampler_pw_main, \\n    (uv + (texsize.zw * vec2(0.0, -1.0)))\\n  ).x * 999.0), 0.0, 1.0));\\n  n_1 = (n_1 + clamp ((texture (sampler_pw_main, \\n    (uv + (texsize.zw * vec2(-1.0, 1.0)))\\n  ).x * 999.0), 0.0, 1.0));\\n  n_1 = (n_1 + clamp ((texture (sampler_pw_main, \\n    (uv + (texsize.zw * vec2(-1.0, 0.0)))\\n  ).x * 999.0), 0.0, 1.0));\\n  n_1 = (n_1 + clamp ((texture (sampler_pw_main, \\n    (uv - texsize.zw)\\n  ).x * 999.0), 0.0, 1.0));\\n  if ((n_1 < 1.9)) {\\n    ret_2 = (tmpvar_3.xyz - 0.4);\\n  };\\n  if ((n_1 > 3.1)) {\\n    ret_2 = (ret_2 - 0.4);\\n  };\\n  bool tmpvar_4;\\n  if ((ret_2.x < 0.1)) {\\n    tmpvar_4 = (abs((n_1 - 3.0)) < 0.5);\\n  } else {\\n    tmpvar_4 = bool(0);\\n  };\\n  if (tmpvar_4) {\\n    ret_2 = (ret_2 + 0.4);\\n  };\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = ret_2;\\n  ret = tmpvar_5.xyz;\\n }","comp":" shader_body { \\n  vec3 ret2_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (texsize.zw * 8.0);\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1)).y;\\n  tmpvar_4.y = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1)).y;\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (uv + (tmpvar_4 * 0.55));\\n  vec4 tmpvar_6;\\n  tmpvar_6 = texture (sampler_blur3, uv);\\n  ret_2 = (vec3((0.25 * dot (\\n    clamp ((2.0 * ((tmpvar_6.xyz * scale3) + bias3)), 0.0, 1.0)\\n  , vec3(0.32, 0.49, 0.29)))) - (0.8 * dot (\\n    clamp (((20.0 * (\\n      (0.6 * ((texture (sampler_blur2, uv).xyz * scale2) + bias2))\\n     - 0.01)) - 2.0), 0.0, 1.0)\\n  , vec3(0.32, 0.49, 0.29))));\\n  vec4 tmpvar_7;\\n  tmpvar_7 = texture (sampler_blur1, uv);\\n  ret_2 = (ret_2 + dot (clamp (\\n    ((30.0 * ((texture (sampler_main, uv).xyz + \\n      (((tmpvar_7.xyz * scale1) + bias1) * 0.15)\\n    ) - 0.01)) - 2.0)\\n  , 0.0, 1.0), vec3(0.32, 0.49, 0.29)));\\n  ret_2 = (ret_2 + 1.0);\\n  vec3 tmpvar_8;\\n  tmpvar_8 = mix (ret_2, (ret_2 * (\\n    ((texture (sampler_blur3, tmpvar_5).xyz * scale3) + bias3)\\n   - \\n    ((texture (sampler_blur1, tmpvar_5).xyz * scale1) + bias1)\\n  )), pow (hue_shader, ret_2));\\n  ret2_1 = (vec3((-0.5 * dot (\\n    ((texture (sampler_blur3, tmpvar_5).xyz * scale3) + bias3)\\n  , vec3(0.32, 0.49, 0.29)))) + (0.8 * (\\n    (texture (sampler_blur1, tmpvar_5).xyz * scale1)\\n   + bias1)));\\n  ret2_1 = (ret2_1 - (0.9 * texture (sampler_main, tmpvar_5).xyz));\\n  ret2_1 = (ret2_1 - 1.5);\\n  vec3 tmpvar_9;\\n  tmpvar_9 = mix (ret2_1, (ret2_1 * (\\n    ((tmpvar_6.xyz * scale3) + bias3)\\n   - \\n    ((tmpvar_7.xyz * scale1) + bias1)\\n  )), pow (hue_shader.zxy, tmpvar_8));\\n  ret2_1 = tmpvar_9;\\n  vec3 tmpvar_10;\\n  tmpvar_10 = abs((tmpvar_8 - tmpvar_9));\\n  ret_2 = (tmpvar_10 * tmpvar_10);\\n  ret_2 = (ret_2 * 1.15);\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 1.0;\\n  tmpvar_11.xyz = ret_2;\\n  ret = tmpvar_11.xyz;\\n }"}')},4559:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1,"decay":0.995,"echo_zoom":1.007,"echo_orient":3,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"wave_a":1.413,"wave_scale":0.418,"wave_smoothing":0,"wave_mystery":-0.66,"modwavealphastart":2,"modwavealphaend":2,"warpanimspeed":0.626,"warpscale":1.331,"zoomexp":1.00001,"zoom":0.99951,"warp":0.08925,"wave_r":0,"wave_g":0,"wave_x":0.24,"wave_y":0.44,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"additive":1,"rad":0.0277,"ang":6.03186,"tex_ang":6.03186,"tex_zoom":0.6839,"r2":1,"g2":0,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":1},"init_eqs_eel":"","frame_eqs_eel":"an = an + q6;\\nang = an*0.5;\\nx = q4;\\ny = q5;\\nrad = q3*sqrt(2);\\n\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;\\n"},{"baseVals":{"enabled":1,"additive":1,"rad":0.0277,"ang":6.03186,"tex_ang":6.03186,"tex_zoom":0.6839,"r2":1,"g2":0,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":1},"init_eqs_eel":"","frame_eqs_eel":"an = an + q9;\\nang = an*0.5;\\nx = q7;\\ny = q8;\\nrad = q3*sqrt(2);\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;\\n"},{"baseVals":{"enabled":1,"additive":1,"rad":0.0277,"ang":6.03186,"tex_ang":6.03186,"tex_zoom":0.6839,"r2":1,"g2":0,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":1},"init_eqs_eel":"","frame_eqs_eel":"an = an + q12;\\nang = an*0.5;\\nx = q10;\\ny = q11;\\nrad = q3*sqrt(2);\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;\\n"},{"baseVals":{"sides":48,"additive":1,"num_inst":4,"rad":0.0277,"ang":6.03186,"tex_ang":6.03186,"tex_zoom":0.6839,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"an = an + 0.5*q16/num_inst;\\nw = asin(1)*4*instance/num_inst + an;\\nx = q6 + sin(w)*q5*0.5;\\ny = q7 + cos(w)*q5*0.5;\\nrad = q5*0.25;\\n\\n\\n//x = 0.5 + (x-0.5)/q2;\\n//y = 0.5 + (y-0.5)/q1;\\n"}],"waves":[{"baseVals":{"enabled":1,"thick":1,"additive":1,"scaling":2.0231,"smoothing":0,"r":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"vol = bass*8 + mid*5 + treb*3;\\nm = m*0.97 + vol*0.08;\\nmonitor = vol;\\nbeat = above(vol,res)*above(vol,m)*above(vol,16);\\ndiff = (1-beat)*diff + beat*(vol-res);\\nres = beat*(vol + m*0.04) + (1-beat)*(res -  (0.1+diff*0.02)*60/fps);\\nres = max(0,res);\\n\\na = beat;","point_eqs_eel":"tt3 = tt3*0.6 + (value1)*1;\\ntt2 = tt2*0.7 + tt3*0.2;\\ntt1 = tt1*0.8 + tt2*0.1;\\nd = d*0.9 + tt1*0.2;\\n\\ny = 0.5 + d*sample*(1-sample)*2;\\nx =  -0.05 + sample*1.1;"},{"baseVals":{"spectrum":1,"thick":1,"enabled":0},"init_eqs_eel":"chance = 0;","frame_eqs_eel":"","point_eqs_eel":"// the velocity vector\\n\\nx = q3 + sample*sin(q14)*q13*40;\\ny = q4 + sample*cos(q14)*q13*40;\\n\\n// tangential velocity of rotation\\n//x = q3 + sample*q16*40;\\n//y = q4 - q5/2;\\n\\n\\nx = 0.5 + (x-0.5)/q1;\\ny = 0.5 + (y-0.5)/q2;"},{"baseVals":{"spectrum":1,"thick":1,"enabled":0},"init_eqs_eel":"chance = 0;","frame_eqs_eel":"","point_eqs_eel":"// tangential property of velocity vector\\n\\nx = q3 + sample*sin(q10)*cos(q14-q10)*q13*40;\\ny = q4 + sample*cos(q10)*cos(q14-q10)*q13*40;\\n\\n// vx\\n//x = q3 + sample*q11*40;\\n//y = q4;\\n\\nx = 0.5 + (x-0.5)/q1;\\ny = 0.5 + (y-0.5)/q2;"},{"baseVals":{"spectrum":1,"thick":1,"enabled":0},"init_eqs_eel":"chance = 0;","frame_eqs_eel":"","point_eqs_eel":"// orthogonal property of velocity vector\\n\\nx = q3 + sample*sin(q10+asin(1))*cos(q14-q10-asin(1))*q13*40;\\ny = q4 + sample*cos(q10+asin(1))*cos(q14-q10-asin(1))*q13*40;\\n\\n// vy\\n//x = q3;\\n//y = q4 + sample*q12*40;\\n\\nx = 0.5 + (x-0.5)/q1;\\ny = 0.5 + (y-0.5)/q2;"}],"init_eqs_eel":"x1 = 0.5;\\ny1 = 0.6;\\n\\nx2 = 0.5;\\ny2 = 0.4;\\n\\nx3 = 0.5;\\ny3 = 0.2;\\n\\nvr1 = 0.0001;\\nvr2 = 0.0;\\nvr3 = 0.0;\\n\\nvx1 = 0;\\nvx2 = 0;\\nvx3 = 0;","frame_eqs_eel":"zoom = 1;\\nwarp = 0;\\nwave_a = 0;\\n\\nr = 0.03+ (bass_att+treb_att)*0.004;\\nmonitor = aspecty;\\nvr = sin(vr1)*r;\\nbounce = below(y1,r-(aspectx-1)*0.5);y1 = y1+vy1;vy1 = if(bounce, abs(vy1)*0.96 + (r-y1-(aspectx-1)*0.5)*0.1, vy1-0.0003*60/fps);\\nvx1 = if(bounce, vx1 + (vr-vx1)*0.15, vx1);vr = if(bounce, vr + (vx1-vr)*0.85 , vr);vr1 = asin(vr/r);\\nbounce = above(x1,1-r+(aspecty-1)*0.5);vx1 = if(bounce, - abs(vx1)*0.96 + (1-r-x1+(aspecty-1)*0.5)*0.1, vx1);\\nvy1 = if(bounce, vy1 + (vr-vy1)*0.15, vy1);vr = if(bounce, vr + (vy1-vr)*0.85 , vr);vr1 = asin(vr/r);\\nbounce = below(x1,r-(aspecty-1)*0.5);x1 = x1+vx1;vx1 = if(bounce, abs(vx1)*0.96 + (r-x1-(aspecty-1)*0.5)*0.1, vx1);\\nvy1 = if(bounce, vy1 + (-vr-vy1)*0.15, vy1);vr = if(bounce, vr - (vy1+vr)*0.85 , vr);vr1 = asin(vr/r);\\n\\nvr = sin(vr2)*r;\\nbounce = below(y2,r-(aspectx-1)*0.5);y2 = y2+vy2;vy2 = if(bounce, abs(vy2)*0.96 + (r-y2-(aspectx-1)*0.5)*0.1, vy2-0.0003*60/fps);\\nvx2 = if(bounce, vx2 + (vr-vx2)*0.15, vx2);vr = if(bounce, vr + (vx2-vr)*0.85 , vr);vr2 = asin(vr/r);\\nbounce = above(x2,1-r+(aspecty-1)*0.5);vx2 = if(bounce, - abs(vx2)*0.96 + (1-r-x2+(aspecty-1)*0.5)*0.1, vx2);\\nvy2 = if(bounce, vy2 + (vr-vy2)*0.15, vy2);vr = if(bounce, vr + (vy2-vr)*0.85 , vr);vr2 = asin(vr/r);\\nbounce = below(x2,r-(aspecty-1)*0.5);x2 = x2+vx2;vx2 = if(bounce, abs(vx2)*0.96 + (r-x2-(aspecty-1)*0.5)*0.1, vx2);\\nvy2 = if(bounce, vy2 + (-vr-vy2)*0.15, vy2);vr = if(bounce, vr - (vy2+vr)*0.85 , vr);vr2 = asin(vr/r);\\n\\nvr = sin(vr3)*r;\\nbounce = below(y3,r-(aspectx-1)*0.5);y3 = y3+vy3;vy3 = if(bounce, abs(vy3)*0.96 + (r-y3-(aspectx-1)*0.5)*0.1, vy3-0.0003*60/fps);\\nvx3 = if(bounce, vx3 + (vr-vx3)*0.15, vx3);vr = if(bounce, vr + (vx3-vr)*0.85 , vr);vr3 = asin(vr/r);\\nbounce = above(x3,1-r+(aspecty-1)*0.5);vx3 = if(bounce, - abs(vx3)*0.96 + (1-r-x3+(aspecty-1)*0.5)*0.1, vx3);\\nvy3 = if(bounce, vy3 + (vr-vy3)*0.15, vy3);vr = if(bounce, vr + (vy3-vr)*0.85 , vr);vr3 = asin(vr/r);\\nbounce = below(x3,r-(aspecty-1)*0.5);x3 = x3+vx3;vx3 = if(bounce, abs(vx3)*0.96 + (r-x3-(aspecty-1)*0.5)*0.1, vx3);\\nvy3 = if(bounce, vy3 + (-vr-vy3)*0.15, vy3);vr = if(bounce, vr - (vy3+vr)*0.85 , vr);vr3 = asin(vr/r);\\n\\nbounce = below( sqrt( sqr(x1+vx1-x2-vx2) + sqr(y1+vy1-y2-vy2)), 2*r);\\nbounce = bounce*below(sqrt( sqr(x1+vx1-x2-vx2) + sqr(y1+vy1-y2-vy2)),sqrt( sqr(x1-x2) + sqr(y1-y2)));\\nref_ang = atan2(x2-x1,y2-y1)+asin(1); // common tangent\\nv1 = sqrt(vx1*vx1+vy1*vy1);v2 = sqrt(vx2*vx2+vy2*vy2);w1 = atan2(vx1,vy1);w2 = atan2(vx2,vy2);\\nvr = sin(vr1)*r; v2r=sin(vr2)*r;\\nvx1 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + ((vr-v2r)-sin(ref_ang)*v1*cos(w1-ref_ang))*0.1\\n              + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx1);\\nvy1 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + ((vr-v2r)-cos(ref_ang)*v1*cos(w1-ref_ang))*0.1\\n              + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy1);\\nvx2 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + ((v2r-vr)-sin(ref_ang)*v2*cos(w2-ref_ang))*0.1\\n              + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx2);\\nvy2 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + ((v2r-vr)-cos(ref_ang)*v2*cos(w2-ref_ang))*0.1\\n              + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy2);\\nvr = if(bounce, vr + (cos(w1-ref_ang)*(v1-v2)-vr)*0.9 , vr);vr1 = asin(vr/r);\\nv2r = if(bounce, v2r + (cos(w2-ref_ang)*(v2-v1)-v2r)*0.9 , v2r);vr2 = asin(v2r/r);\\n\\nbounce = below( sqrt( sqr(x1+vx1-x3-vx3) + sqr(y1+vy1-y3-vy3)), 2*r);\\nbounce = bounce*below(sqrt( sqr(x1+vx1-x3-vx3) + sqr(y1+vy1-y3-vy3)),sqrt( sqr(x1-x3) + sqr(y1-y3)));\\nref_ang = atan2(x3-x1,y3-y1)+asin(1); // common tangent\\nv1 = sqrt(vx1*vx1+vy1*vy1);v2 = sqrt(vx3*vx3+vy3*vy3);w1 = atan2(vx1,vy1);w2 = atan2(vx3,vy3);\\nvr = sin(vr1)*r; v2r=sin(vr3)*r;\\nvx1 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + ((vr-v2r)-sin(ref_ang)*v1*cos(w1-ref_ang))*0.1\\n              + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx1);\\nvy1 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + ((vr-v2r)-cos(ref_ang)*v1*cos(w1-ref_ang))*0.1\\n              + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy1);\\nvx3 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + ((v2r-vr)-sin(ref_ang)*v2*cos(w2-ref_ang))*0.1\\n              + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx3);\\nvy3 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + ((v2r-vr)-cos(ref_ang)*v2*cos(w2-ref_ang))*0.1\\n              + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy3);\\nvr = if(bounce, vr + (cos(w1-ref_ang)*(v1-v2)-vr)*0.9 , vr);vr1 = asin(vr/r);\\nv2r = if(bounce, v2r + (cos(w2-ref_ang)*(v2-v1)-v2r)*0.9 , v2r);vr3 = asin(v2r/r);\\n\\nbounce = below( sqrt( sqr(x3+vx3-x2-vx2) + sqr(y3+vy3-y2-vy2)), 2*r);\\nbounce = bounce*below(sqrt( sqr(x2+vx2-x3-vx3) + sqr(y2+vy2-y3-vy3)),sqrt( sqr(x2-x3) + sqr(y2-y3)));\\nref_ang = atan2(x2-x3,y2-y3)+asin(1); // common tangent\\nv1 = sqrt(vx3*vx3+vy3*vy3);v2 = sqrt(vx2*vx2+vy2*vy2);w1 = atan2(vx3,vy3);w2 = atan2(vx2,vy2);\\nvr = sin(vr3)*r; v2r=sin(vr2)*r;\\nvx3 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + ((vr-v2r)-sin(ref_ang)*v1*cos(w1-ref_ang))*0.1\\n              + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx3);\\nvy3 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + ((vr-v2r)-cos(ref_ang)*v1*cos(w1-ref_ang))*0.1\\n              + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy3);\\nvx2 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + ((v2r-vr)-sin(ref_ang)*v2*cos(w2-ref_ang))*0.1\\n              + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx2);\\nvy2 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + ((v2r-vr)-cos(ref_ang)*v2*cos(w2-ref_ang))*0.1\\n              + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy2);\\nvr = if(bounce, vr + (cos(w1-ref_ang)*(v1-v2)-vr)*0.9 , vr);vr3 = asin(vr/r);\\nv2r = if(bounce, v2r + (cos(w2-ref_ang)*(v2-v1)-v2r)*0.9 , v2r);vr2 = asin(v2r/r);\\n\\n\\n\\n\\nq1 = aspectx;\\nq2 = aspecty;\\nq3 = r*2;\\n\\nq4  = x1;  q5 = y1;  q6 = vr1;\\nq7  = x2;  q8 = y2;  q9 = vr2;\\nq10 = x3; q11 = y3; q12 = vr3;\\n\\nq13 = atan2( (x1+x2+x3)/3 - 0.5, (y1+y2+y3)/3-0.5);\\nq14 = sigmoid(sqrt( sqr((x1+x2+x3)/3 - 0.5) + sqr((y1+y2+y3)/3-0.5) ),2)*0.2;","pixel_eqs_eel":"du = (x*2-1) - (q4+q7+q10-1.5)*2/3;\\ndv = (y*2-1) + (q5+q8+q11-1.5)*2/3;\\ndist = sqrt(du*du+dv*dv);\\nang2 = atan2(du,dv);\\nmult = sin(dist*0.05)*0.4*q14;\\ndx = mult*sin(ang2*2+q13)*aspectx;\\ndy = mult*cos(ang2*2+q13)*aspecty;","warp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 8.0);\\n  ret_1.xz = vec2(0.0, 0.0);\\n  vec2 tmpvar_3;\\n  tmpvar_3 = fract(uv);\\n  ret_1.y = texture (sampler_fc_main, tmpvar_3).y;\\n  ret_1.y = (ret_1.y + ((\\n    ((ret_1.y - ((texture (sampler_blur3, tmpvar_3).xyz * scale3) + bias3).y) - 0.03)\\n   * 0.6) - 0.06));\\n  ret_1.y = (ret_1.y + ((\\n    (texture (sampler_blur3, uv_orig).xyz * scale3)\\n   + bias3).x * 0.3));\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = (((texture (sampler_blur1, \\n    (uv_orig + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv_orig - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1)).z;\\n  tmpvar_4.y = (((texture (sampler_blur1, \\n    (uv_orig + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv_orig - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1)).z;\\n  ret_1.z = (texture (sampler_fc_main, (mix (uv_orig, uv, vec2(0.3, 0.3)) + (\\n    (tmpvar_4 * texsize.zw)\\n   * 8.0))).z - 0.03);\\n  ret_1.z = (ret_1.z + ((\\n    clamp ((0.2 - ((texture (sampler_blur2, uv).xyz * scale2) + bias2).y), 0.0, 1.0)\\n   * 0.1) + (\\n    ((texture (sampler_blur2, uv_orig).xyz * scale2) + bias2)\\n  .x * 0.2)));\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = ret_1;\\n  ret = tmpvar_5.xyz;\\n }","comp":" shader_body { \\n  vec3 ret2_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (texsize.zw * 6.0);\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = dot (((\\n    (texture (sampler_blur1, (uv + (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (uv - (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  tmpvar_4.y = dot (((\\n    (texture (sampler_blur1, (uv + (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (uv - (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (uv - (0.25 * tmpvar_4));\\n  vec4 tmpvar_6;\\n  tmpvar_6 = texture (sampler_blur3, uv);\\n  ret_2 = (0.3 * ((tmpvar_6.xyz * scale3) + bias3));\\n  ret_2 = (ret_2 - ((\\n    (texture (sampler_blur2, uv).xyz * scale2)\\n   + bias2) - 0.01));\\n  vec4 tmpvar_7;\\n  tmpvar_7 = texture (sampler_blur1, uv);\\n  ret_2 = (ret_2 + ((texture (sampler_main, uv).xyz + \\n    (((tmpvar_7.xyz * scale1) + bias1) * 0.15)\\n  ) - 0.01));\\n  ret_2 = (ret_2 + 0.75);\\n  float tmpvar_8;\\n  tmpvar_8 = dot (ret_2, vec3(0.32, 0.49, 0.29));\\n  vec3 tmpvar_9;\\n  tmpvar_9 = mix (vec3(tmpvar_8), (vec3(tmpvar_8) * dot (\\n    ((0.815 * ((texture (sampler_blur3, tmpvar_5).xyz * scale3) + bias3)) - ((texture (sampler_blur1, tmpvar_5).xyz * scale1) + bias1))\\n  , vec3(0.32, 0.49, 0.29))), pow (hue_shader, vec3(tmpvar_8)));\\n  ret2_1 = ((-0.3 * (\\n    (texture (sampler_blur3, tmpvar_5).xyz * scale3)\\n   + bias3)) + ((texture (sampler_blur1, tmpvar_5).xyz * scale1) + bias1));\\n  ret2_1 = (ret2_1 - texture (sampler_main, tmpvar_5).xyz);\\n  ret2_1 = (ret2_1 - 0.75);\\n  float tmpvar_10;\\n  tmpvar_10 = dot (ret2_1, vec3(0.32, 0.49, 0.29));\\n  vec3 tmpvar_11;\\n  tmpvar_11 = mix (vec3(tmpvar_10), (vec3(tmpvar_10) * dot (\\n    ((0.815 * ((tmpvar_6.xyz * scale3) + bias3)) - ((tmpvar_7.xyz * scale1) + bias1))\\n  , vec3(0.32, 0.49, 0.29))), pow (hue_shader.zxy, tmpvar_9));\\n  ret2_1 = tmpvar_11;\\n  vec3 tmpvar_12;\\n  tmpvar_12 = abs((tmpvar_9 - (2.0 * tmpvar_11)));\\n  ret_2 = (tmpvar_12 - (0.175 * sqrt(tmpvar_12)));\\n  ret_2 = (ret_2 * ret_2);\\n  vec4 tmpvar_13;\\n  tmpvar_13.w = 1.0;\\n  tmpvar_13.xyz = ret_2;\\n  ret = tmpvar_13.xyz;\\n }"}')},1705:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1,"decay":0.995,"echo_zoom":1.007,"echo_orient":3,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"wave_a":1.413,"wave_scale":0.418,"wave_smoothing":0,"wave_mystery":-0.66,"modwavealphastart":2,"modwavealphaend":2,"warpanimspeed":0.626,"warpscale":1.331,"zoomexp":1.00001,"zoom":0.99951,"warp":0.08925,"wave_r":0,"wave_g":0,"wave_x":0.24,"wave_y":0.44,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"additive":1,"rad":0.0277,"ang":6.03186,"tex_ang":6.03186,"tex_zoom":0.6839,"r2":1,"g2":0,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":1},"init_eqs_eel":"","frame_eqs_eel":"an = an + q6;\\nang = an*0.5;\\nx = q4;\\ny = q5;\\nrad = q3*sqrt(2);\\n\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;\\n"},{"baseVals":{"enabled":1,"additive":1,"rad":0.0277,"ang":6.03186,"tex_ang":6.03186,"tex_zoom":0.6839,"r2":1,"g2":0,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":1},"init_eqs_eel":"","frame_eqs_eel":"an = an + q9;\\nang = an*0.5;\\nx = q7;\\ny = q8;\\nrad = q3*sqrt(2);\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;\\n"},{"baseVals":{"enabled":1,"additive":1,"rad":0.0277,"ang":6.03186,"tex_ang":6.03186,"tex_zoom":0.6839,"r2":1,"g2":0,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":1},"init_eqs_eel":"","frame_eqs_eel":"an = an + q12;\\nang = an*0.5;\\nx = q10;\\ny = q11;\\nrad = q3*sqrt(2);\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;\\n"},{"baseVals":{"sides":48,"additive":1,"num_inst":4,"rad":0.0277,"ang":6.03186,"tex_ang":6.03186,"tex_zoom":0.6839,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"an = an + 0.5*q16/num_inst;\\nw = asin(1)*4*instance/num_inst + an;\\nx = q6 + sin(w)*q5*0.5;\\ny = q7 + cos(w)*q5*0.5;\\nrad = q5*0.25;\\n\\n\\n//x = 0.5 + (x-0.5)/q2;\\n//y = 0.5 + (y-0.5)/q1;\\n"}],"waves":[{"baseVals":{"enabled":1,"thick":1,"additive":1,"scaling":2.0231,"smoothing":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"vol = bass*8 + mid*5 + treb*3;\\nm = m*0.97 + vol*0.08;\\nmonitor = vol;\\nbeat = above(vol,res)*above(vol,m)*above(vol,16);\\ndiff = (1-beat)*diff + beat*(vol-res);\\nres = beat*(vol + m*0.04) + (1-beat)*(res -  (0.1+diff*0.02)*60/fps);\\nres = max(0,res);\\n\\na = beat;","point_eqs_eel":"tt3 = tt3*0.6 + (value1)*1;\\ntt2 = tt2*0.7 + tt3*0.2;\\ntt1 = tt1*0.8 + tt2*0.1;\\nd = d*0.9 + tt1*0.2;\\n\\ny = 0.5 + d*sample*(1-sample)*2;\\nx =  -0.05 + sample*1.1;"},{"baseVals":{"spectrum":1,"thick":1,"enabled":0},"init_eqs_eel":"chance = 0;","frame_eqs_eel":"","point_eqs_eel":"// the velocity vector\\n\\nx = q3 + sample*sin(q14)*q13*40;\\ny = q4 + sample*cos(q14)*q13*40;\\n\\n// tangential velocity of rotation\\n//x = q3 + sample*q16*40;\\n//y = q4 - q5/2;\\n\\n\\nx = 0.5 + (x-0.5)/q1;\\ny = 0.5 + (y-0.5)/q2;"},{"baseVals":{"spectrum":1,"thick":1,"enabled":0},"init_eqs_eel":"chance = 0;","frame_eqs_eel":"","point_eqs_eel":"// tangential property of velocity vector\\n\\nx = q3 + sample*sin(q10)*cos(q14-q10)*q13*40;\\ny = q4 + sample*cos(q10)*cos(q14-q10)*q13*40;\\n\\n// vx\\n//x = q3 + sample*q11*40;\\n//y = q4;\\n\\nx = 0.5 + (x-0.5)/q1;\\ny = 0.5 + (y-0.5)/q2;"},{"baseVals":{"spectrum":1,"thick":1,"enabled":0},"init_eqs_eel":"chance = 0;","frame_eqs_eel":"","point_eqs_eel":"// orthogonal property of velocity vector\\n\\nx = q3 + sample*sin(q10+asin(1))*cos(q14-q10-asin(1))*q13*40;\\ny = q4 + sample*cos(q10+asin(1))*cos(q14-q10-asin(1))*q13*40;\\n\\n// vy\\n//x = q3;\\n//y = q4 + sample*q12*40;\\n\\nx = 0.5 + (x-0.5)/q1;\\ny = 0.5 + (y-0.5)/q2;"}],"init_eqs_eel":"x1 = 0.5;\\ny1 = 0.6;\\n\\nx2 = 0.5;\\ny2 = 0.4;\\n\\nx3 = 0.5;\\ny3 = 0.2;\\n\\nvr1 = 0.0001;\\nvr2 = 0.0;\\nvr3 = 0.0;\\n\\nvx1 = 0;\\nvx2 = 0;\\nvx3 = 0;\\n\\nq21 = 0.5/asin(1);","frame_eqs_eel":"zoom = 1;\\nwarp = 0;\\nwave_a = 0;\\n\\nr = 0.05+ (bass_att+treb_att)*0.006;\\nmonitor = aspecty;\\nvr = sin(vr1)*r;\\nbounce = below(y1,r-(aspectx-1)*0.5);y1 = y1+vy1;vy1 = if(bounce, abs(vy1)*0.96 + (r-y1-(aspectx-1)*0.5)*0.1, vy1-0.0003*60/fps);\\nvx1 = if(bounce, vx1 + (vr-vx1)*0.15, vx1);vr = if(bounce, vr + (vx1-vr)*0.85 , vr);vr1 = asin(vr/r);\\nbounce = above(x1,1-r+(aspecty-1)*0.5);vx1 = if(bounce, - abs(vx1)*0.96 + (1-r-x1+(aspecty-1)*0.5)*0.1, vx1);\\nvy1 = if(bounce, vy1 + (vr-vy1)*0.15, vy1);vr = if(bounce, vr + (vy1-vr)*0.85 , vr);vr1 = asin(vr/r);\\nbounce = below(x1,r-(aspecty-1)*0.5);x1 = x1+vx1;vx1 = if(bounce, abs(vx1)*0.96 + (r-x1-(aspecty-1)*0.5)*0.1, vx1);\\nvy1 = if(bounce, vy1 + (-vr-vy1)*0.15, vy1);vr = if(bounce, vr - (vy1+vr)*0.85 , vr);vr1 = asin(vr/r);\\n\\nvr = sin(vr2)*r;\\nbounce = below(y2,r-(aspectx-1)*0.5);y2 = y2+vy2;vy2 = if(bounce, abs(vy2)*0.96 + (r-y2-(aspectx-1)*0.5)*0.1, vy2-0.0003*60/fps);\\nvx2 = if(bounce, vx2 + (vr-vx2)*0.15, vx2);vr = if(bounce, vr + (vx2-vr)*0.85 , vr);vr2 = asin(vr/r);\\nbounce = above(x2,1-r+(aspecty-1)*0.5);vx2 = if(bounce, - abs(vx2)*0.96 + (1-r-x2+(aspecty-1)*0.5)*0.1, vx2);\\nvy2 = if(bounce, vy2 + (vr-vy2)*0.15, vy2);vr = if(bounce, vr + (vy2-vr)*0.85 , vr);vr2 = asin(vr/r);\\nbounce = below(x2,r-(aspecty-1)*0.5);x2 = x2+vx2;vx2 = if(bounce, abs(vx2)*0.96 + (r-x2-(aspecty-1)*0.5)*0.1, vx2);\\nvy2 = if(bounce, vy2 + (-vr-vy2)*0.15, vy2);vr = if(bounce, vr - (vy2+vr)*0.85 , vr);vr2 = asin(vr/r);\\n\\nvr = sin(vr3)*r;\\nbounce = below(y3,r-(aspectx-1)*0.5);y3 = y3+vy3;vy3 = if(bounce, abs(vy3)*0.96 + (r-y3-(aspectx-1)*0.5)*0.1, vy3-0.0003*60/fps);\\nvx3 = if(bounce, vx3 + (vr-vx3)*0.15, vx3);vr = if(bounce, vr + (vx3-vr)*0.85 , vr);vr3 = asin(vr/r);\\nbounce = above(x3,1-r+(aspecty-1)*0.5);vx3 = if(bounce, - abs(vx3)*0.96 + (1-r-x3+(aspecty-1)*0.5)*0.1, vx3);\\nvy3 = if(bounce, vy3 + (vr-vy3)*0.15, vy3);vr = if(bounce, vr + (vy3-vr)*0.85 , vr);vr3 = asin(vr/r);\\nbounce = below(x3,r-(aspecty-1)*0.5);x3 = x3+vx3;vx3 = if(bounce, abs(vx3)*0.96 + (r-x3-(aspecty-1)*0.5)*0.1, vx3);\\nvy3 = if(bounce, vy3 + (-vr-vy3)*0.15, vy3);vr = if(bounce, vr - (vy3+vr)*0.85 , vr);vr3 = asin(vr/r);\\n\\nbounce = below( sqrt( sqr(x1+vx1-x2-vx2) + sqr(y1+vy1-y2-vy2)), 2*r);\\nbounce = bounce*below(sqrt( sqr(x1+vx1-x2-vx2) + sqr(y1+vy1-y2-vy2)),sqrt( sqr(x1-x2) + sqr(y1-y2)));\\nref_ang = atan2(x2-x1,y2-y1)+asin(1); // common tangent\\nv1 = sqrt(vx1*vx1+vy1*vy1);v2 = sqrt(vx2*vx2+vy2*vy2);w1 = atan2(vx1,vy1);w2 = atan2(vx2,vy2);\\nvr = sin(vr1)*r; v2r=sin(vr2)*r;\\nvx1 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + ((vr-v2r)-sin(ref_ang)*v1*cos(w1-ref_ang))*0.1\\n              + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx1);\\nvy1 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + ((vr-v2r)-cos(ref_ang)*v1*cos(w1-ref_ang))*0.1\\n              + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy1);\\nvx2 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + ((v2r-vr)-sin(ref_ang)*v2*cos(w2-ref_ang))*0.1\\n              + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx2);\\nvy2 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + ((v2r-vr)-cos(ref_ang)*v2*cos(w2-ref_ang))*0.1\\n              + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy2);\\nvr = if(bounce, vr + (cos(w1-ref_ang)*(v1-v2)-vr)*0.9 , vr);vr1 = asin(vr/r);\\nv2r = if(bounce, v2r + (cos(w2-ref_ang)*(v2-v1)-v2r)*0.9 , v2r);vr2 = asin(v2r/r);\\n\\nbounce = below( sqrt( sqr(x1+vx1-x3-vx3) + sqr(y1+vy1-y3-vy3)), 2*r);\\nbounce = bounce*below(sqrt( sqr(x1+vx1-x3-vx3) + sqr(y1+vy1-y3-vy3)),sqrt( sqr(x1-x3) + sqr(y1-y3)));\\nref_ang = atan2(x3-x1,y3-y1)+asin(1); // common tangent\\nv1 = sqrt(vx1*vx1+vy1*vy1);v2 = sqrt(vx3*vx3+vy3*vy3);w1 = atan2(vx1,vy1);w2 = atan2(vx3,vy3);\\nvr = sin(vr1)*r; v2r=sin(vr3)*r;\\nvx1 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + ((vr-v2r)-sin(ref_ang)*v1*cos(w1-ref_ang))*0.1\\n              + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx1);\\nvy1 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + ((vr-v2r)-cos(ref_ang)*v1*cos(w1-ref_ang))*0.1\\n              + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy1);\\nvx3 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + ((v2r-vr)-sin(ref_ang)*v2*cos(w2-ref_ang))*0.1\\n              + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx3);\\nvy3 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + ((v2r-vr)-cos(ref_ang)*v2*cos(w2-ref_ang))*0.1\\n              + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy3);\\nvr = if(bounce, vr + (cos(w1-ref_ang)*(v1-v2)-vr)*0.9 , vr);vr1 = asin(vr/r);\\nv2r = if(bounce, v2r + (cos(w2-ref_ang)*(v2-v1)-v2r)*0.9 , v2r);vr3 = asin(v2r/r);\\n\\nbounce = below( sqrt( sqr(x3+vx3-x2-vx2) + sqr(y3+vy3-y2-vy2)), 2*r);\\nbounce = bounce*below(sqrt( sqr(x2+vx2-x3-vx3) + sqr(y2+vy2-y3-vy3)),sqrt( sqr(x2-x3) + sqr(y2-y3)));\\nref_ang = atan2(x2-x3,y2-y3)+asin(1); // common tangent\\nv1 = sqrt(vx3*vx3+vy3*vy3);v2 = sqrt(vx2*vx2+vy2*vy2);w1 = atan2(vx3,vy3);w2 = atan2(vx2,vy2);\\nvr = sin(vr3)*r; v2r=sin(vr2)*r;\\nvx3 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + ((vr-v2r)-sin(ref_ang)*v1*cos(w1-ref_ang))*0.1\\n              + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx3);\\nvy3 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + ((vr-v2r)-cos(ref_ang)*v1*cos(w1-ref_ang))*0.1\\n              + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy3);\\nvx2 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + ((v2r-vr)-sin(ref_ang)*v2*cos(w2-ref_ang))*0.1\\n              + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx2);\\nvy2 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + ((v2r-vr)-cos(ref_ang)*v2*cos(w2-ref_ang))*0.1\\n              + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy2);\\nvr = if(bounce, vr + (cos(w1-ref_ang)*(v1-v2)-vr)*0.9 , vr);vr3 = asin(vr/r);\\nv2r = if(bounce, v2r + (cos(w2-ref_ang)*(v2-v1)-v2r)*0.9 , v2r);vr2 = asin(v2r/r);\\n\\n\\n\\n\\nq1 = aspectx;\\nq2 = aspecty;\\nq3 = r*2;\\n\\nq4  = x1;  q5 = y1;  q6 = vr1;\\nq7  = x2;  q8 = y2;  q9 = vr2;\\nq10 = x3; q11 = y3; q12 = vr3;\\n\\nq13 = atan2( (x1+x2+x3)/3 - 0.5, (y1+y2+y3)/3-0.5);\\nq14 = sigmoid(sqrt( sqr((x1+x2+x3)/3 - 0.5) + sqr((y1+y2+y3)/3-0.5) ),2)*0.2;\\n\\nt = t + 0.25/fps;\\nt = if(above(t,2),t-2,t);\\nq22 = -t;","pixel_eqs_eel":"du = (x*2-1) - (q4+q7+q10-1.5)*2/3;\\ndv = (y*2-1) + (q5+q8+q11-1.5)*2/3;\\ndist = sqrt(du*du+dv*dv);\\nang2 = atan2(du,dv);\\nmult = sin(dist*0.05)*0.4*q14;\\ndx = mult*sin(ang2*2+q13)*aspectx;\\ndy = mult*cos(ang2*2+q13)*aspecty;","warp":" shader_body { \\n  vec3 ret_1;\\n  ret_1.xz = vec2(0.0, 0.0);\\n  vec2 tmpvar_2;\\n  tmpvar_2 = fract(uv);\\n  ret_1.y = texture (sampler_fc_main, tmpvar_2).y;\\n  ret_1.y = (ret_1.y + ((\\n    ((ret_1.y - ((texture (sampler_blur3, tmpvar_2).xyz * scale3) + bias3).y) - 0.03)\\n   * 0.6) - 0.06));\\n  ret_1.y = (ret_1.y + ((\\n    (texture (sampler_blur3, uv_orig).xyz * scale3)\\n   + bias3).x * 0.3));\\n  vec2 tmpvar_3;\\n  tmpvar_3 = ((uv - 0.5) * aspect.wz).yx;\\n  float tmpvar_4;\\n  float tmpvar_5;\\n  tmpvar_5 = (min (abs(\\n    (tmpvar_3.x / tmpvar_3.y)\\n  ), 1.0) / max (abs(\\n    (tmpvar_3.x / tmpvar_3.y)\\n  ), 1.0));\\n  float tmpvar_6;\\n  tmpvar_6 = (tmpvar_5 * tmpvar_5);\\n  tmpvar_6 = (((\\n    ((((\\n      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)\\n     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)\\n   * tmpvar_6) + 0.9999793) * tmpvar_5);\\n  tmpvar_6 = (tmpvar_6 + (float(\\n    (abs((tmpvar_3.x / tmpvar_3.y)) > 1.0)\\n  ) * (\\n    (tmpvar_6 * -2.0)\\n   + 1.570796)));\\n  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.x / tmpvar_3.y)));\\n  if ((abs(tmpvar_3.y) > (1e-08 * abs(tmpvar_3.x)))) {\\n    if ((tmpvar_3.y < 0.0)) {\\n      if ((tmpvar_3.x >= 0.0)) {\\n        tmpvar_4 += 3.141593;\\n      } else {\\n        tmpvar_4 = (tmpvar_4 - 3.141593);\\n      };\\n    };\\n  } else {\\n    tmpvar_4 = (sign(tmpvar_3.x) * 1.570796);\\n  };\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = ((tmpvar_4 * q21) - q22);\\n  tmpvar_7.y = (((0.666 * \\n    log(sqrt(dot (tmpvar_3, tmpvar_3)))\\n  ) + (tmpvar_4 * q21)) + q22);\\n  ret_1.z = texture (sampler_main, (0.5 + ((\\n    (1.0 - abs(((\\n      fract(fract(tmpvar_7))\\n     * 2.0) - 1.0)))\\n   - 0.5) * 0.99))).y;\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = ret_1;\\n  ret = tmpvar_8.xyz;\\n }","comp":" shader_body { \\n  vec2 my_uv_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (texsize.zw * 2.0);\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = tmpvar_4.z;\\n  tmpvar_6.y = tmpvar_5.z;\\n  vec2 tmpvar_7;\\n  tmpvar_7 = (uv - ((tmpvar_6 * texsize.zw) * 12.0));\\n  ret_2 = (((\\n    (texture (sampler_blur2, tmpvar_7).xyz * scale2)\\n   + bias2).z * (\\n    (texture (sampler_blur2, tmpvar_7).xyz * scale2)\\n   + bias2).y) * vec3(0.3, 0.0, 0.5));\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = tmpvar_4.z;\\n  tmpvar_8.y = tmpvar_5.z;\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = tmpvar_4.y;\\n  tmpvar_9.y = tmpvar_5.y;\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = tmpvar_5.y;\\n  tmpvar_10.y = tmpvar_4.y;\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = tmpvar_4.y;\\n  tmpvar_11.y = tmpvar_5.y;\\n  my_uv_1 = ((uv + (\\n    (tmpvar_10 * texsize.zw)\\n   * 64.0)) - ((tmpvar_11 * texsize.zw) * 64.0));\\n  vec3 tmpvar_12;\\n  tmpvar_12 = mix (mix (ret_2, vec3(3.0, 3.0, 3.0), vec3((\\n    ((texture (sampler_blur3, ((uv + \\n      (tmpvar_8 * 0.4)\\n    ) - tmpvar_9)).xyz * scale3) + bias3)\\n  .x * 0.5))), vec3(1.0, 0.5, 0.2), vec3(((\\n    ((texture (sampler_main, my_uv_1).xyz - ((texture (sampler_blur1, my_uv_1).xyz * scale1) + bias1)) + ((texture (sampler_blur2, my_uv_1).xyz * scale2) + bias2))\\n  .z * \\n    (1.0 - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).y)\\n  ) * 1.1)));\\n  vec2 tmpvar_13;\\n  tmpvar_13.x = tmpvar_4.x;\\n  tmpvar_13.y = tmpvar_5.x;\\n  my_uv_1 = (uv + ((tmpvar_13 * texsize.zw) * 6.0));\\n  vec3 tmpvar_14;\\n  tmpvar_14 = mix (tmpvar_12, vec3(1.0, 1.0, 1.0), ((texture (sampler_main, my_uv_1).xyz - \\n    ((texture (sampler_blur1, my_uv_1).xyz * scale1) + bias1)\\n  ) + (\\n    ((texture (sampler_blur2, my_uv_1).xyz * scale2) + bias2)\\n   * 0.95)).xxx);\\n  ret_2 = tmpvar_14;\\n  vec4 tmpvar_15;\\n  tmpvar_15.w = 1.0;\\n  tmpvar_15.xyz = tmpvar_14;\\n  ret = tmpvar_15.xyz;\\n }"}')},7027:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_a":0.106,"wave_scale":0.51,"wave_smoothing":0,"modwavealphastart":0.82,"modwavealphaend":1.1,"zoomexp":3.04777,"zoom":1.0173,"warp":0.01605,"wave_r":0,"wave_g":0.93,"ob_size":0,"ob_a":1,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":24,"additive":1,"num_inst":5,"x":0.48,"rad":0.0261,"tex_zoom":4.36077,"r2":1,"g2":0,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = rand(1000)/1000;\\ny = rand(1000)/1000;\\nang = rand(150)/100;"},{"baseVals":{"sides":5,"textured":1,"rad":0.986,"tex_ang":3.14159,"tex_zoom":0.99979,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ang =sin(time/65) ;// ang + (bass*.2) + (time*.4);"},{"baseVals":{"sides":100,"textured":1,"x":0.9,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = sin(time) * .4 + .5;\\n\\n"},{"baseVals":{"sides":36,"additive":1,"rad":0.16777,"r":0,"g":0.1,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"thick":1,"additive":1,"r":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"q1 = below(rand(100),4 + 10*(treb+mid+bass));","point_eqs_eel":"it = (it + 1)*above(sample,0)*below(it,53);\\nita = (ita + equal(it,0))*above(sample,0);\\n\\nsw = 1-equal(it,0)*equal(ita,0);\\nswi = (equal(lr,9) + equal(lr,5))*equal(it,0)*equal(ita,4);\\nxv = if(sw - swi,xv,rand(1001)*.001*.8);\\nmx = xv + ita*.025;\\nmy = if(sw - swi,my,rand(1001)*.001*.975);\\n\\nsz = .01;\\nvx = above(it,1)*below(it,39) + above(it,12)*below(it,28) - equal(it,20) + equal(it,46) + equal(it,51) + equal(it,41) - equal(it,15) - equal(it,25) + equal(it,10) + equal(it,30) - equal(it,4) - equal(it,36);\\nvy = above(it,17)*below(it,49) + above(it,22)*below(it,44) - equal(it,33) + equal(it,7) + equal(it,51) + equal(it,15) - equal(it,41) - equal(it,25) + equal(it,4) + equal(it,10) - equal(it,36) - equal(it,30);\\n\\nsa = equal(ita,0)*13 + equal(ita,1)*9 + equal(ita,2)*12 + equal(ita,3)*11 + equal(ita,4)*4 + equal(ita,5)*18 + equal(ita,6)*15 + equal(ita,7)*16;\\nsb = equal(ita,0)*11 + equal(ita,1)*9 + equal(ita,2)*12 + equal(ita,3)*12;\\nsc = equal(ita,0)*4 + equal(ita,1)*15 + equal(ita,3)*4 + equal(ita,4)*18 + equal(ita,5)*21 + equal(ita,6)*7 + equal(ita,7)*19;\\nsd = equal(ita,0)*12 + equal(ita,1)*15 + equal(ita,2)*22 + equal(ita,3)*5;\\nse = equal(ita,0)*8 + equal(ita,1)*1 + equal(ita,2)*20 + equal(ita,3)*5;\\nsf = equal(ita,0)*6 + equal(ita,1)*5 + equal(ita,2)*1 + equal(ita,3)*18 + equal(ita,5)*10 + equal(ita,6)*15 + equal(ita,7)*25;\\nsg = equal(ita,0)*1 + equal(ita,1)*14 + equal(ita,2)*7 + equal(ita,3)*5 + equal(ita,4)*18;\\nsh = equal(ita,0)*19 + equal(ita,1)*21 + equal(ita,2)*18 + equal(ita,3)*16 + equal(ita,4)*18 + equal(ita,5)*9 + equal(ita,6)*19 + equal(ita,7)*5;\\nsi = equal(ita,0)*8 + equal(ita,1)*1 + equal(ita,2)*16 + equal(ita,3)*16 + equal(ita,4)*25;\\nsj = equal(ita,0)*25 + equal(ita,1)*5 + equal(ita,2)*19 + equal(ita,6)*14 + equal(ita,7)*15;\\n\\nlr = if(sw,lr,rand(10));\\nlet = equal(lr,0)*sa + equal(lr,1)*sb + equal(lr,2)*sc + equal(lr,3)*sd + equal(lr,4)*se + equal(lr,5)*sf + equal(lr,6)*sg + equal(lr,7)*sh + equal(lr,8)*si + equal(lr,9)*sj;\\n\\nva = equal(let,23) + equal(let,24) + equal(let,26);\\nvb = above(let,0)*below(let,9) + above(let,10)*below(let,19) + equal(let,21) + equal(let,23);\\nvc = equal(let,1) + equal(let,2) + equal(let,5) + equal(let,6) + equal(let,8) + equal(let,11) + equal(let,16) + equal(let,18) + equal(let,19);\\nvd = above(let,1)*below(let,9) + above(let,10)*below(let,24) - equal(let,20);\\nve = equal(let,13) + equal(let,14) + equal(let,24) + equal(let,25);\\nvf = above(let,1)*below(let,8) + equal(let,9) + above(let,14)*below(let,21) + equal(let,26);\\nvg = equal(let,1);\\nvh = equal(let,9) + equal(let,20);\\nvi = above(let,0)*below(let,5) - equal(let,3) + equal(let,18);\\nvj = above(let,2)*below(let,8) - equal(let,4) + equal(let,9) + above(let,14)*below(let,21) - equal(let,18) + equal(let,26);\\nvk = equal(let,11) + equal(let,13) + above(let,23)*below(let,27);\\nvl = equal(let,8) + equal(let,10) + above(let,12)*below(let,18) + above(let,20)*below(let,24);\\nvm = equal(let,1) + equal(let,2) + equal(let,8) + equal(let,16) + equal(let,18) + equal(let,19);\\nvn = equal(let,1) + equal(let,7) + equal(let,8) + equal(let,10) + above(let,12)*below(let,24) - equal(let,16) - equal(let,18) - equal(let,20) - equal(let,22);\\nvo = equal(let,11) + equal(let,14) + equal(let,17) + equal(let,18) + equal(let,23) + equal(let,24);\\nvp = equal(let,3) + equal(let,5) + equal(let,7) + equal(let,9) + equal(let,10) + equal(let,12) + equal(let,15) + equal(let,17) + equal(let,19) + equal(let,21) + equal(let,26);\\nvq = equal(let,2) + equal(let,4) + equal(let,22);\\nvr = equal(let,9) + equal(let,20) + equal(let,25);\\nvs = equal(let,22);\\nvt = above(let,1)*below(let,13) - equal(let,6) - equal(let,8) - equal(let,11) + equal(let,15) + equal(let,17) + equal(let,19) + equal(let,21) + equal(let,26);\\n\\na = if(above(it,51),0,if(above(it,49),va,if(above(it,47),vb,if(above(it,44),vc,if(above(it,42),vd,if(above(it,39),ve, if(above(it,37),vf,if(above(it,34),vg,if(above(it,31),vh,if(above(it,28),vi,if(above(it,26),vj,if(above(it,23),vk, if(above(it,21),vl,if(above(it,18),vm,if(above(it,16),vn,if(above(it,13),vo,if(above(it,11),vp,if(above(it,8),vq, if(above(it,5),vr,if(above(it,2),vs,if(it,vt,0)))))))))))))))))))));\\n\\na = a*below(ita,8)*q1;\\n\\nx = mx + vx*sz*.75;\\ny = my + vy*sz*1.5;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"dec_med = pow (0.9, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb);\\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %2;\\n\\n\\nd_x = if(is_beat, (rand(2000)-1000)*0.001 , d_x);\\nd_y = if(is_beat, (rand(2000)-1000)*0.001 , d_y);\\nr = if(is_beat, (rand(2000)-1000)*0.001 , r);\\nz = if(is_beat, rand(1000)*0.001 , z);\\nzoom = 1.03 + z*0.03;\\nrot = r*0.04;\\ndx = d_x*0.01;\\ndy = d_y*0.01;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 10.0);\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1)).x;\\n  tmpvar_3.y = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1)).x;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (mix (uv_orig, uv, vec2(0.4, 0.4)) + ((tmpvar_3 * texsize.zw) * 2.0));\\n  ret_1.x = ((texture (sampler_main, tmpvar_4).x - (\\n    (texture (sampler_main, tmpvar_4).x - ((texture (sampler_blur3, tmpvar_4).xyz * scale3) + bias3).x)\\n   * 0.02)) - 0.008);\\n  ret_1.y = texture (sampler_main, uv).y;\\n  ret_1.y = (ret_1.y + ((\\n    (ret_1.y - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).y)\\n   * 0.2) - 0.004));\\n  ret_1.z = (texture (sampler_main, ((uv_orig - \\n    ((uv_orig - uv) * 2.0)\\n  ) + (\\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5)\\n  .xy * texsize.zw))).z - 0.004);\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = ret_1;\\n  ret = tmpvar_5.xyz;\\n }","comp":" shader_body { \\n  vec3 ret2_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (texsize.zw * 6.0);\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = dot (((\\n    (texture (sampler_blur1, (uv + (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (uv - (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  tmpvar_4.y = dot (((\\n    (texture (sampler_blur1, (uv + (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (uv - (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (uv - (0.25 * tmpvar_4));\\n  vec4 tmpvar_6;\\n  tmpvar_6 = texture (sampler_blur3, uv);\\n  ret_2 = (0.3 * ((tmpvar_6.xyz * scale3) + bias3));\\n  ret_2 = (ret_2 - ((\\n    (texture (sampler_blur2, uv).xyz * scale2)\\n   + bias2) - 0.01));\\n  vec4 tmpvar_7;\\n  tmpvar_7 = texture (sampler_blur1, uv);\\n  ret_2 = (ret_2 + ((texture (sampler_main, uv).xyz + \\n    (((tmpvar_7.xyz * scale1) + bias1) * 0.15)\\n  ) - 0.01));\\n  ret_2 = (ret_2 + 0.75);\\n  float tmpvar_8;\\n  tmpvar_8 = dot (ret_2, vec3(0.32, 0.49, 0.29));\\n  vec3 tmpvar_9;\\n  tmpvar_9 = mix (vec3(tmpvar_8), (vec3(tmpvar_8) * dot (\\n    ((0.8 * ((texture (sampler_blur3, tmpvar_5).xyz * scale3) + bias3)) - ((texture (sampler_blur1, tmpvar_5).xyz * scale1) + bias1))\\n  , vec3(0.32, 0.49, 0.29))), pow (hue_shader, vec3(tmpvar_8)));\\n  ret2_1 = ((-0.3 * (\\n    (texture (sampler_blur3, tmpvar_5).xyz * scale3)\\n   + bias3)) + ((texture (sampler_blur1, tmpvar_5).xyz * scale1) + bias1));\\n  ret2_1 = (ret2_1 - texture (sampler_main, tmpvar_5).xyz);\\n  ret2_1 = (ret2_1 - 0.75);\\n  float tmpvar_10;\\n  tmpvar_10 = dot (ret2_1, vec3(0.32, 0.49, 0.29));\\n  vec3 tmpvar_11;\\n  tmpvar_11 = mix (vec3(tmpvar_10), (vec3(tmpvar_10) * dot (\\n    ((0.8 * ((tmpvar_6.xyz * scale3) + bias3)) - ((tmpvar_7.xyz * scale1) + bias1))\\n  , vec3(0.32, 0.49, 0.29))), pow (hue_shader.zxy, tmpvar_9));\\n  ret2_1 = tmpvar_11;\\n  vec3 tmpvar_12;\\n  tmpvar_12 = abs((tmpvar_9 - (2.0 * tmpvar_11)));\\n  ret_2 = (tmpvar_12 - (0.175 * sqrt(tmpvar_12)));\\n  ret_2 = (ret_2 * ret_2);\\n  vec4 tmpvar_13;\\n  tmpvar_13.w = 1.0;\\n  tmpvar_13.xyz = ret_2;\\n  ret = tmpvar_13.xyz;\\n }"}')},699:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"wave_mode":6,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":0.004,"wave_scale":1.666,"wave_smoothing":0.81,"modwavealphastart":1.4,"modwavealphaend":1.4,"zoomexp":3.04777,"zoom":1.0173,"warp":0.01605,"ob_size":0.005,"ob_a":1,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":24,"additive":1,"num_inst":3,"x":0.48,"rad":0.01,"tex_zoom":4.36077,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = rand(1000)/1000;\\ny = rand(1000)/1000;\\n\\nr = rand(1200)/1000;\\ng = rand(1200)/1000;\\nb = rand(1200)/1000;\\n\\nr2 = r;\\ng2 = g;\\nb2 = b;"},{"baseVals":{"sides":5,"textured":1,"rad":0.986,"tex_ang":3.14159,"tex_zoom":0.99979,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ang =sin(time/65) ;// ang + (bass*.2) + (time*.4);"},{"baseVals":{"sides":100,"textured":1,"x":0.9,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = sin(time) * .4 + .5;\\n\\n"},{"baseVals":{"sides":36,"textured":1,"rad":0.63647,"tex_zoom":1.5339,"r2":1,"g2":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"thick":1,"additive":1,"r":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"q1 = below(rand(100),4 + 10*(treb+mid+bass));","point_eqs_eel":"it = (it + 1)*above(sample,0)*below(it,53);\\nita = (ita + equal(it,0))*above(sample,0);\\n\\nsw = 1-equal(it,0)*equal(ita,0);\\nswi = (equal(lr,9) + equal(lr,5))*equal(it,0)*equal(ita,4);\\nxv = if(sw - swi,xv,rand(1001)*.001*.8);\\nmx = xv + ita*.025;\\nmy = if(sw - swi,my,rand(1001)*.001*.975);\\n\\nsz = .01;\\nvx = above(it,1)*below(it,39) + above(it,12)*below(it,28) - equal(it,20) + equal(it,46) + equal(it,51) + equal(it,41) - equal(it,15) - equal(it,25) + equal(it,10) + equal(it,30) - equal(it,4) - equal(it,36);\\nvy = above(it,17)*below(it,49) + above(it,22)*below(it,44) - equal(it,33) + equal(it,7) + equal(it,51) + equal(it,15) - equal(it,41) - equal(it,25) + equal(it,4) + equal(it,10) - equal(it,36) - equal(it,30);\\n\\nsa = equal(ita,0)*13 + equal(ita,1)*9 + equal(ita,2)*12 + equal(ita,3)*11 + equal(ita,4)*4 + equal(ita,5)*18 + equal(ita,6)*15 + equal(ita,7)*16;\\nsb = equal(ita,0)*11 + equal(ita,1)*9 + equal(ita,2)*12 + equal(ita,3)*12;\\nsc = equal(ita,0)*4 + equal(ita,1)*15 + equal(ita,3)*4 + equal(ita,4)*18 + equal(ita,5)*21 + equal(ita,6)*7 + equal(ita,7)*19;\\nsd = equal(ita,0)*12 + equal(ita,1)*15 + equal(ita,2)*22 + equal(ita,3)*5;\\nse = equal(ita,0)*8 + equal(ita,1)*1 + equal(ita,2)*20 + equal(ita,3)*5;\\nsf = equal(ita,0)*6 + equal(ita,1)*5 + equal(ita,2)*1 + equal(ita,3)*18 + equal(ita,5)*10 + equal(ita,6)*15 + equal(ita,7)*25;\\nsg = equal(ita,0)*1 + equal(ita,1)*14 + equal(ita,2)*7 + equal(ita,3)*5 + equal(ita,4)*18;\\nsh = equal(ita,0)*19 + equal(ita,1)*21 + equal(ita,2)*18 + equal(ita,3)*16 + equal(ita,4)*18 + equal(ita,5)*9 + equal(ita,6)*19 + equal(ita,7)*5;\\nsi = equal(ita,0)*8 + equal(ita,1)*1 + equal(ita,2)*16 + equal(ita,3)*16 + equal(ita,4)*25;\\nsj = equal(ita,0)*25 + equal(ita,1)*5 + equal(ita,2)*19 + equal(ita,6)*14 + equal(ita,7)*15;\\n\\nlr = if(sw,lr,rand(10));\\nlet = equal(lr,0)*sa + equal(lr,1)*sb + equal(lr,2)*sc + equal(lr,3)*sd + equal(lr,4)*se + equal(lr,5)*sf + equal(lr,6)*sg + equal(lr,7)*sh + equal(lr,8)*si + equal(lr,9)*sj;\\n\\nva = equal(let,23) + equal(let,24) + equal(let,26);\\nvb = above(let,0)*below(let,9) + above(let,10)*below(let,19) + equal(let,21) + equal(let,23);\\nvc = equal(let,1) + equal(let,2) + equal(let,5) + equal(let,6) + equal(let,8) + equal(let,11) + equal(let,16) + equal(let,18) + equal(let,19);\\nvd = above(let,1)*below(let,9) + above(let,10)*below(let,24) - equal(let,20);\\nve = equal(let,13) + equal(let,14) + equal(let,24) + equal(let,25);\\nvf = above(let,1)*below(let,8) + equal(let,9) + above(let,14)*below(let,21) + equal(let,26);\\nvg = equal(let,1);\\nvh = equal(let,9) + equal(let,20);\\nvi = above(let,0)*below(let,5) - equal(let,3) + equal(let,18);\\nvj = above(let,2)*below(let,8) - equal(let,4) + equal(let,9) + above(let,14)*below(let,21) - equal(let,18) + equal(let,26);\\nvk = equal(let,11) + equal(let,13) + above(let,23)*below(let,27);\\nvl = equal(let,8) + equal(let,10) + above(let,12)*below(let,18) + above(let,20)*below(let,24);\\nvm = equal(let,1) + equal(let,2) + equal(let,8) + equal(let,16) + equal(let,18) + equal(let,19);\\nvn = equal(let,1) + equal(let,7) + equal(let,8) + equal(let,10) + above(let,12)*below(let,24) - equal(let,16) - equal(let,18) - equal(let,20) - equal(let,22);\\nvo = equal(let,11) + equal(let,14) + equal(let,17) + equal(let,18) + equal(let,23) + equal(let,24);\\nvp = equal(let,3) + equal(let,5) + equal(let,7) + equal(let,9) + equal(let,10) + equal(let,12) + equal(let,15) + equal(let,17) + equal(let,19) + equal(let,21) + equal(let,26);\\nvq = equal(let,2) + equal(let,4) + equal(let,22);\\nvr = equal(let,9) + equal(let,20) + equal(let,25);\\nvs = equal(let,22);\\nvt = above(let,1)*below(let,13) - equal(let,6) - equal(let,8) - equal(let,11) + equal(let,15) + equal(let,17) + equal(let,19) + equal(let,21) + equal(let,26);\\n\\na = if(above(it,51),0,if(above(it,49),va,if(above(it,47),vb,if(above(it,44),vc,if(above(it,42),vd,if(above(it,39),ve, if(above(it,37),vf,if(above(it,34),vg,if(above(it,31),vh,if(above(it,28),vi,if(above(it,26),vj,if(above(it,23),vk, if(above(it,21),vl,if(above(it,18),vm,if(above(it,16),vn,if(above(it,13),vo,if(above(it,11),vp,if(above(it,8),vq, if(above(it,5),vr,if(above(it,2),vs,if(it,vt,0)))))))))))))))))))));\\n\\na = a*below(ita,8)*q1;\\n\\nx = mx + vx*sz*.75;\\ny = my + vy*sz*1.5;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"vol = bass*8 + mid*5 + treb*3;\\nm = m*0.97 + vol*0.08;\\nmonitor = vol;\\nbeat = above(vol,res)*above(vol,m)*above(vol,16);\\ndiff = (1-beat)*diff + beat*(vol-res);\\nres = beat*(vol + m*0.1) + (1-beat)*(res -  (0.1+diff*0.02)*60/fps);\\nres = max(0,res);\\n\\n\\nd_x = if(beat, (rand(2000)-1000)*0.001 , d_x);\\nd_y = if(beat, (rand(2000)-1000)*0.001 , d_y);\\nr = if(beat, (rand(2000)-1000)*0.001 , r);\\nz = if(beat, rand(1000)*0.001 , z);\\nzoom = 1.01 + z*0.03;\\nrot = r*0.04;\\ndx = d_x*0.01;\\ndy = d_y*0.01;\\n\\nwave_a = beat;\\n\\n// nice random hue-fade\\nrr = rr + (rand(100)-50)/1000;\\ngg = gg + (rand(100)-50)/1000;\\nbb = bb + (rand(100)-50)/1000;\\nrr = max(0, min( 1, rr));\\ngg = max(0, min( 1, gg));\\nbb = max(0, min( 1, bb));\\nmx = max(max(rr,gg),bb);\\nmn = min(min(rr,gg),bb);\\nr = (rr-mn)/(mx-mn);\\ng = (gg-mn)/(mx-mn);\\nb = (bb-mn)/(mx-mn);\\n\\n\\nwave_r = r;\\nwave_g = g;\\nwave_b = b;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = mix (uv_orig, uv, vec2(0.2, 0.2));\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 4.0);\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = dot (((\\n    (texture (sampler_blur1, (tmpvar_1 + (vec2(1.0, 0.0) * tmpvar_2))).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (tmpvar_1 - (vec2(1.0, 0.0) * tmpvar_2))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  tmpvar_3.y = dot (((\\n    (texture (sampler_blur1, (tmpvar_1 + (vec2(0.0, 1.0) * tmpvar_2))).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (tmpvar_1 - (vec2(0.0, 1.0) * tmpvar_2))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = (texture (sampler_fc_main, (tmpvar_1 + (\\n    (tmpvar_3 * texsize.zw)\\n   * 4.0))) - 0.01).xyz;\\n  ret = tmpvar_4.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 6.0);\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = dot (tmpvar_3, vec3(0.32, 0.49, 0.29));\\n  tmpvar_5.y = dot (tmpvar_4, vec3(0.32, 0.49, 0.29));\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv - (0.25 * tmpvar_5));\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = dot (tmpvar_3, vec3(0.32, 0.49, 0.29));\\n  tmpvar_7.y = dot (tmpvar_4, vec3(0.32, 0.49, 0.29));\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (uv + (0.25 * tmpvar_7));\\n  ret_1 = ((0.8 * (\\n    (texture (sampler_blur3, tmpvar_6).xyz * scale3)\\n   + bias3)) - ((texture (sampler_blur1, tmpvar_6).xyz * scale1) + bias1));\\n  ret_1 = (ret_1 + (0.6 * (\\n    (texture (sampler_blur1, uv).xyz * scale1)\\n   + bias1)));\\n  ret_1 = (ret_1 - ((\\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur1, tmpvar_8).xyz * scale1)\\n   + bias1)));\\n  ret_1 = (ret_1 + ((1.2 * texture (sampler_main, tmpvar_8).xyz) + (0.15 * \\n    ((texture (sampler_blur1, tmpvar_8).xyz * scale1) + bias1)\\n  )));\\n  ret_1 = (ret_1 + 1.0);\\n  float tmpvar_9;\\n  tmpvar_9 = dot (ret_1, vec3(0.32, 0.49, 0.29));\\n  ret_1 = (mix (vec3(tmpvar_9), (\\n    (0.75 * vec3(tmpvar_9))\\n   * \\n    dot ((((0.6 * \\n      ((texture (sampler_blur3, tmpvar_6).xyz * scale3) + bias3)\\n    ) - (0.7 * texture (sampler_main, uv).xyz)) - (0.3 * (\\n      (texture (sampler_blur1, tmpvar_8).xyz * scale1)\\n     + bias1))), vec3(0.32, 0.49, 0.29))\\n  ), pow (hue_shader, vec3(tmpvar_9))) * 0.9);\\n  ret_1 = (ret_1 * ret_1);\\n  vec3 tmpvar_10;\\n  tmpvar_10 = sqrt(ret_1);\\n  ret_1 = tmpvar_10;\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 1.0;\\n  tmpvar_11.xyz = tmpvar_10;\\n  ret = tmpvar_11.xyz;\\n }"}')},8012:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"wave_thick":1,"wave_brighten":0,"wrap":0,"wave_a":0.004,"wave_scale":0.01,"wave_smoothing":0,"wave_mystery":-0.44,"modwavealphastart":1,"modwavealphaend":1,"warpanimspeed":0.01,"warpscale":100,"zoomexp":0.9217,"zoom":0.9901,"warp":0.01,"wave_y":0.04,"ob_size":0,"ob_g":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"thickoutline":1,"rad":0.02015,"tex_ang":0.12566,"tex_zoom":1.51878,"r":0,"a":0.1,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"thickoutline":1,"x":1,"rad":0.39872,"tex_ang":0.12566,"tex_zoom":1.51878,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"thickoutline":1,"x":1,"rad":3.0054,"tex_ang":0.12566,"tex_zoom":1.51878,"r":0,"g":1,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"thickoutline":1,"x":1,"rad":0.39872,"tex_ang":0.12566,"tex_zoom":1.51878,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"usedots":1,"scaling":2.44415,"smoothing":0,"a":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t1 = 0;\\nv = 0.01;\\nj = j + (bass)*0.01;\\nj2 = j2 + (mid_att)*0.01;\\nj3 = j3 + (treb_att)*0.01;\\nt2 = j;\\nt3 = j2;\\nt4 = j3;\\n//t5 = 0;\\nk = k*0.99 + 10*mid/fps;\\nt5 = -k;\\n\\ncl1 = cl1 + 0.002;\\ncl1 = if(above(cl1,1),0,cl1);\\ncl1 = if(below(cl1,0),1,cl1);\\nt8 = cl1;\\n\\ncl2 = cl2 -1*q1;\\ncl2 = if(above(cl2,1),0,cl2);\\ncl2 = if(below(cl2,0),1,cl2);\\nt7 = cl2;\\n\\ncl3 = cl3 +0.001;\\ncl3 = if(above(cl3,1),0,cl3);\\ncl3 = if(below(cl3,0),1,cl3);\\nt6 = cl3;","point_eqs_eel":"xx = ((sample*0983624912364)%10000000+100)/10000000;\\nyy = ((xx*1896575575)%10000000+100)/10000000;\\nzz = ((yy*58652340875)%10000000+100)/10000000;\\n\\n\\nd = sqrt(sqr(xx)+sqr(yy)+sqr(zz));\\n\\nzz = zz + t8 - if(above(zz+t8,1),1,0) - 0.5;\\nxx = xx + t7 - if(above(xx+t7,1),1,0) - 0.5;\\nyy = yy + t6 - if(above(yy+t6,1),1,0) - 0.5;\\n\\nv = 0.001;\\n\\nw = 1;// (sample*sin(time*0.3)*0.01-1);\\nbb = d*d*0.5;\\nn= 0.3;\\ns1 = sin(sin(t2*w+bb)*n);\\ns2 = sin(sin(t3*w+bb)*n);\\ns3 = sin(sin(t4*w+bb)*n);\\nc1 = cos(sin(t2*w+bb)*n);\\nc2 = cos(sin(t3*w+bb)*n);\\nc3 = cos(sin(t4*w+bb)*n);\\n\\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\\n\\nzoom = .5*(1/(z+0.5));\\nx = 0.5 + zoom*x1 + sin(time*0.1)*0;;\\ny = 0.5 + zoom*y1 + cos(time*0.16801)*0;\\n\\npi3 = 3.1415*2*0.3333;\\nt = z*2+t2*1;\\nc=3;\\n//r = sin(t)*c;\\n\\n//g = sin(t+pi3)*c;\\n\\n//b = sin(t-pi3)*c;\\n\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\n\\na = 0.4;"},{"baseVals":{"scaling":2.44415,"smoothing":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t8 = 1;","point_eqs_eel":"t8 = -t8;\\ny = sample;\\nx = 0.5 + t8*0.005;\\n\\npi3 = 3.1415*2*0.3333;\\nt = time + sample*2;\\nc=2;\\n\\nr = sin(t)*c;\\ng = sin(t+pi3)*c;\\n\\nb = sin(t-pi3)*c;\\n\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\n"},{"baseVals":{"thick":1,"additive":1,"scaling":100,"smoothing":0.6,"r":0,"g":0.4,"a":0.3,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt7 = q7;\\nt8 = q8;","point_eqs_eel":"sample = 1-sample;\\nxxx = xx;\\nyyy = yy;\\nxx = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2\\n+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;\\n\\nyy = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6\\n+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;\\nd = 1/sqrt(sqr(xx-xxx)+sqr(yy-yyy));\\nx = xx + sample*(1-sample)*(value1-value2)*(yy-yyy)*d;\\ny = yy - sample*(1-sample)*(value1-value2)*(xx-xxx)*d;"},{"baseVals":{"usedots":1,"scaling":2.44415,"smoothing":0,"r":0,"g":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t8 = 1;","point_eqs_eel":"t8 = -t8;\\ny = (1+t8)*0.01;\\nx = sample;"}],"init_eqs_eel":"x1 = 0.9;\\ny1 = 0.5;\\n\\nx2 = 0.5; y2 = 0.5;\\nx3 = 0.5; y3 = 0.5;\\nx4 = 0.5; y4 = 0.5;","frame_eqs_eel":"decay = 1;\\nxx1 = xx1*0.9 + (bass)*0.01;\\nxx2 = xx2*0.9 + (treb)*0.01;\\nyy1 = yy1*0.94 + (treb+bass)*0.0075;\\n\\nx1 = 0.5 + (xx1-xx2)*1.5;\\ny1 = 0.5 + yy1;\\n\\n//x2 = 0;y2 = 0;x3 = 0;y3 = 0;x4 = 0;y4 = 0;\\n\\nspring = 18;\\ngrav = 1;\\nresist = 5;\\nbounce = 0.9;\\ndt = 0.0003;\\n\\nvx2 = vx2*(1-resist*dt) + dt*((x1+x3-2*x2)*spring);\\nvy2 = vy2*(1-resist*dt) + dt*((y1+y3-2*y2)*spring-grav);\\nvx3 = vx3*(1-resist*dt) + dt*((x2+x4-2*x3)*spring);\\nvy3 = vy3*(1-resist*dt) + dt*((y2+y4-2*y3)*spring-grav);\\nvx4 = vx4*(1-resist*dt) + dt*((x3-x4)*spring);\\nvy4 = vy4*(1-resist*dt) + dt*((y3-y4)*spring-grav);\\n\\nx2 = x2 + vx2;\\ny2 = y2 + vy2;\\nx3 = x3 + vx3;\\ny3 = y3 + vy3;\\nx4 = x4 + vx4;\\ny4 = y4 + vy4;\\n\\nvx2 = if(above(x2,0),vx2,abs(vx2)*bounce);\\nvx2 = if(below(x2,1),vx2,-abs(vx2)*bounce);\\nvx3 = if(above(x3,0),vx3,abs(vx3)*bounce);\\nvx3 = if(below(x3,1),vx3,-abs(vx3)*bounce);\\nvx4 = if(above(x4,0),vx4,abs(vx4)*bounce);\\nvx4 = if(below(x4,1),vx4,-abs(vx4)*bounce);\\n\\nvy2 = if(above(y2,0),vy2,abs(vy2)*bounce);\\nvy2 = if(below(y2,1),vy2,-abs(vy2)*bounce);\\nvy3 = if(above(y3,0),vy3,abs(vy3)*bounce);\\nvy3 = if(below(y3,1),vy3,-abs(vy3)*bounce);\\nvy4 = if(above(y4,0),vy4,abs(vy4)*bounce);\\nvy4 = if(below(y4,1),vy4,-abs(vy4)*bounce);\\n\\n\\nq1 = x1;\\nq2 = x2;\\nq3 = x3;\\nq4 = x4;\\n\\nq5 = y1;\\nq6 = y2;\\nq7 = y3;\\nq8 = y4;\\n\\nwarp = 0;\\nzoom = 1.00;\\nq6 = atan2(vx4,vy4);\\nq5 = sqrt(vx4*vx4 + vy4*vy4);","pixel_eqs_eel":"dir = -q6*1 + asin(1)*1;\\n\\nb1 = 0.1; // distance\\nm1 = q5*25;//-0.6 + q5*200; // size\\nt1 = 0.05; // velocity\\n\\nxx = q4;\\nyy = 1-q8;\\n\\n\\nx1 = xx   +cos(dir+1.5708)*b1;\\ny1 = yy -sin(dir+1.5708)*b1;\\n\\nx2 = xx   -cos(dir+1.5708)*b1;\\ny2 = yy +sin(dir+1.5708)*b1;\\n\\nd1 = sqrt((x1-x)*(x1-x)+(y1-y)*(y1-y))-b1*2;\\nsi1 = 1- 1/(1+pow(2,-d1*100));\\n\\nd2 = sqrt((x2-x)*(x2-x)+(y2-y)*(y2-y))-b1*2;\\nsi2 = 1- 1/(1+pow(2,-d2*100));\\n\\nsi3 = -pow(q5,3)*00;\\n\\ndx = (si1*sin(y1-y)*m1*d1  - si2*sin(y2-y)*m1*d2 + si3*cos(dir)*t1)*2;\\ndy = (-si1*sin(x1-x)*m1*d1 + si2*sin(x2-x)*m1*d2 - si3*sin(dir)*t1)*2;","warp":" shader_body { \\n  vec2 my_uv_1;\\n  vec3 ret_2;\\n  float tmpvar_3;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (uv + vec2(0.005, 0.0));\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (uv - vec2(0.005, 0.0));\\n  tmpvar_3 = (((texture (sampler_blur2, tmpvar_4).xyz * scale2) + bias2) - ((texture (sampler_blur2, tmpvar_5).xyz * scale2) + bias2)).x;\\n  float tmpvar_6;\\n  vec2 tmpvar_7;\\n  tmpvar_7 = (uv + vec2(0.0, 0.005));\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (uv - vec2(0.0, 0.005));\\n  tmpvar_6 = (((texture (sampler_blur2, tmpvar_7).xyz * scale2) + bias2) - ((texture (sampler_blur2, tmpvar_8).xyz * scale2) + bias2)).x;\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = tmpvar_3;\\n  tmpvar_9.y = tmpvar_6;\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = (((texture (sampler_blur2, tmpvar_4).xyz * scale2) + bias2) - ((texture (sampler_blur2, tmpvar_5).xyz * scale2) + bias2)).x;\\n  tmpvar_10.y = (((texture (sampler_blur2, tmpvar_7).xyz * scale2) + bias2) - ((texture (sampler_blur2, tmpvar_8).xyz * scale2) + bias2)).x;\\n  ret_2.x = texture (sampler_fc_main, ((uv - (tmpvar_9 * 0.005)) + (tmpvar_10 * 0.002))).x;\\n  vec4 tmpvar_11;\\n  tmpvar_11 = texture (sampler_blur3, uv);\\n  ret_2.x = (ret_2.x + ((ret_2.x - \\n    ((tmpvar_11.xyz * scale3) + bias3)\\n  .x) * 0.1));\\n  ret_2.x = (ret_2.x + 0.006);\\n  ret_2.x = ret_2.x;\\n  vec2 tmpvar_12;\\n  tmpvar_12.x = tmpvar_6;\\n  tmpvar_12.y = -(tmpvar_3);\\n  my_uv_1 = (uv + ((tmpvar_12 * 0.05) * (1.2 - \\n    ((tmpvar_11.xyz * scale3) + bias3)\\n  .y)));\\n  ret_2.z = texture (sampler_fw_main, my_uv_1).z;\\n  vec2 x_13;\\n  x_13 = (my_uv_1 - uv);\\n  ret_2.z = (ret_2.z + ((\\n    (ret_2.z - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).z)\\n   * \\n    sqrt(dot (x_13, x_13))\\n  ) * 120.0));\\n  ret_2.z = (ret_2.z * 0.85);\\n  ret_2.z = (ret_2.z + 0.008);\\n  vec2 tmpvar_14;\\n  tmpvar_14.x = -(tmpvar_6);\\n  tmpvar_14.y = tmpvar_3;\\n  my_uv_1 = (tmpvar_14 * 0.05);\\n  vec2 tmpvar_15;\\n  tmpvar_15.x = (((texture (sampler_blur2, \\n    (uv + vec2(0.01, 0.0))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    (uv - vec2(0.01, 0.0))\\n  ).xyz * scale2) + bias2)).y;\\n  tmpvar_15.y = (((texture (sampler_blur2, \\n    (uv + vec2(0.0, 0.01))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    (uv - vec2(0.0, 0.01))\\n  ).xyz * scale2) + bias2)).y;\\n  my_uv_1 = (my_uv_1 + (uv - (tmpvar_15 * 0.03)));\\n  ret_2.y = texture (sampler_fw_main, my_uv_1).y;\\n  ret_2.y = (ret_2.y + ((\\n    (ret_2.y - ((texture (sampler_blur3, my_uv_1).xyz * scale3) + bias3).y)\\n   * 0.1) + 0.03));\\n  vec4 tmpvar_16;\\n  tmpvar_16.w = 1.0;\\n  tmpvar_16.xyz = ret_2;\\n  ret = tmpvar_16.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_blur1, uv);\\n  vec4 tmpvar_3;\\n  tmpvar_3 = texture (sampler_fw_main, uv);\\n  ret_1 = (mix (vec3(0.0, 0.0, 0.3), vec3(0.4, 0.0, 1.0), tmpvar_3.yyy) * (1.0 - (\\n    ((tmpvar_2.xyz * scale1) + bias1)\\n  .z * 2.0)));\\n  ret_1 = (ret_1 + (texture (sampler_main, uv).z * vec3(0.9, 0.2, 0.8)));\\n  ret_1 = (ret_1 * (1.0 - (\\n    ((tmpvar_2.xyz * scale1) + bias1)\\n  .x * 1.6)));\\n  ret_1 = (ret_1 + (vec3(0.9, 0.63, 0.0) * tmpvar_3.xxx));\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = ret_1;\\n  ret = tmpvar_4.xyz;\\n }"}')},274:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":2,"gammaadj":1.21,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"wave_thick":1,"wave_brighten":0,"wrap":0,"wave_a":0.004,"wave_scale":0.073,"wave_smoothing":0,"wave_mystery":-0.44,"modwavealphastart":1,"modwavealphaend":1,"warpanimspeed":0.01,"warpscale":100,"zoomexp":0.92178,"fshader":1,"zoom":0.9901,"warp":0.01,"wave_y":0.04,"ob_size":0,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0.5,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"sides":24,"rad":0.0639,"tex_ang":0.12566,"tex_zoom":1.51878,"r":0,"g":1,"a":0.96,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = q1;\\ny = q5;"},{"baseVals":{"sides":24,"rad":0.0639,"tex_ang":0.12566,"tex_zoom":1.51878,"a":0.96,"g2":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = q2;\\ny = q6;"},{"baseVals":{"sides":24,"rad":0.0639,"tex_ang":0.12566,"tex_zoom":1.51878,"r":0,"b":1,"a":0.96,"g2":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = q3;\\ny = q7;"},{"baseVals":{"sides":24,"rad":0.0639,"tex_ang":0.12566,"tex_zoom":1.51878,"g":1,"b":1,"a":0.96,"g2":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = q4;\\ny = q8;"}],"waves":[{"baseVals":{"thick":1,"additive":1,"scaling":1.69136,"smoothing":0,"r":0,"b":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt7 = q7;\\nt8 = q8;","point_eqs_eel":"sample = 1-sample;\\nxxx = xx;\\nyyy = yy;\\nxx = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2\\n+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;\\n\\nyy = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6\\n+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;\\n\\nd = 1/sqrt(sqr(xx-xxx)+sqr(yy-yyy));\\ntt3 = tt3*0.6 + (value1)*1;\\ntt2 = tt2*0.7 + tt3*0.2;\\ntt1 = tt1*0.8 + tt2*0.1;\\ndd = dd*0.9 + tt1*0.2;\\nddd = sample*(1-sample)*dd*d*4;\\nx = xx + (yy-yyy)*ddd;\\ny = yy - (xx-xxx)*ddd;\\n\\nx = 0.5 + (x-0.5)*q9;\\ny = 0.5 + (y-0.5)*q10;\\n"},{"baseVals":{"thick":1,"additive":1,"scaling":1.69136,"smoothing":0,"g":0,"b":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt7 = q7;\\nt8 = q8;","point_eqs_eel":"sample = 1-sample;\\n\\nx = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2\\n+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;\\n\\ny = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6\\n+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;\\n\\nx = 0.5 + (x-0.5)*q9;\\ny = 0.5 + (y-0.5)*q10;\\n"},{"baseVals":{"enabled":1,"thick":1,"additive":1,"scaling":1.69136,"smoothing":0,"g":0,"b":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"sample = 1-sample;\\nxxx = xx;\\nyyy = yy;\\nxx = pow(sample,5)*q1 + 5*pow(sample,4)*(1-sample)*q1 + 10*pow(sample,3)*sqr(1-sample)*q2\\n+ 10*sqr(sample)*pow(1-sample,3)*q3 + 5*pow(1-sample,4)*sample*q4 + pow(1-sample,5)*q4;\\n\\nyy = pow(sample,5)*q5 + 5*pow(sample,4)*(1-sample)*q5 + 10*pow(sample,3)*sqr(1-sample)*q6\\n+ 10*sqr(sample)*pow(1-sample,3)*q7 + 5*pow(1-sample,4)*sample*q8 + pow(1-sample,5)*q8;\\n\\nd = 1/sqrt(sqr(xx-xxx)+sqr(yy-yyy));\\ndd = sample*(1-sample)*sin(sample*180)*d*0.1;\\nx = xx + (yy-yyy)*dd;\\ny = yy - (xx-xxx)*dd;\\n\\nx = 0.5 + (x-0.5)*q9;\\ny = 0.5 + (y-0.5)*q10;\\n"},{"baseVals":{"usedots":1,"scaling":2.44415,"smoothing":0,"r":0,"g":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t8 = 1;","point_eqs_eel":"t8 = -t8;\\ny = (1+t8)*0.01;\\nx = sample;"}],"init_eqs_eel":"x1 = 0.9;\\ny1 = 0.5;\\n\\nx2 = 0.5; y2 = 0.5;\\nx3 = 0.5; y3 = 0.5;\\nx4 = 0.5; y4 = 0.5;","frame_eqs_eel":"zoom = 1;\\nwarp = 0;\\nwave_a = 0;\\n\\n// elastic thread code\\n\\nxx1 = xx1*0.9 + (bass)*0.01;\\nxx2 = xx2*0.9 + (treb)*0.01;\\nyy1 = yy1*0.94 + (treb+bass)*0.0075;\\nx1 = 0.5 + (xx1-xx2)*2;\\ny1 = 0.4 + yy1*1.5;\\ndt = 0.03/fps;\\nvx2 = vx2*(1-2*dt) + dt*((x1+x3-2*x2)*10);\\nvy2 = vy2*(1-2*dt) + dt*((y1+y3-2*y2)*10-0.5);\\nvx3 = vx3*(1-2*dt) + dt*((x2+x4-2*x3)*10);\\nvy3 = vy3*(1-2*dt) + dt*((y2+y4-2*y3)*10-0.5);\\nvx4 = vx4*(1-2*dt) + dt*((x3-x4)*10);\\nvy4 = vy4*(1-2*dt) + dt*((y3-y4)*10-0.5);\\nx2 = x2 + vx2; y2 = y2 + vy2;\\nx3 = x3 + vx3; y3 = y3 + vy3;\\nx4 = x4 + vx4; y4 = y4 + vy4;\\nvx2 = if(above(x2,0),vx2,abs(vx2)*0.5);\\nvx2 = if(below(x2,1),vx2,-abs(vx2)*0.5);\\nvx3 = if(above(x3,0),vx3,abs(vx3)*0.5);\\nvx3 = if(below(x3,1),vx3,-abs(vx3)*0.5);\\nvx4 = if(above(x4,0),vx4,abs(vx4)*0.5);\\nvx4 = if(below(x4,1),vx4,-abs(vx4)*0.5);\\nvy2 = if(above(y2,0),vy2,abs(vy2)*0.5);\\nvy2 = if(below(y2,1),vy2,-abs(vy2)*0.5);\\nvy3 = if(above(y3,0),vy3,abs(vy3)*0.5);\\nvy3 = if(below(y3,1),vy3,-abs(vy3)*0.5);\\nvy4 = if(above(y4,0),vy4,abs(vy4)*0.5);\\nvy4 = if(below(y4,1),vy4,-abs(vy4)*0.5);\\nq1 = x1;q2 = x2;q3 = x3;q4 = x4;\\nq5 = y1;q6 = y2;q7 = y3;q8 = y4;\\nq9 = 1/aspectx;\\nq10 = 1/aspecty;\\nq11 = aspectx;\\nq12 = aspecty;\\nq13 = sqrt(vx4*vx4 + vy4*vy4)*0.8;\\nq14 = atan2(vx4,vy4);","pixel_eqs_eel":"x = 0.5 + (x-0.5)*q11;\\ny = 0.5 + (y-0.5)*q12;\\ndir = -q14*1 + asin(1)*1;\\n\\nvelocity = q13;\\nstrength = 100;\\nsize = 0.07;\\n\\nxx = q4;\\nyy = 1-q8;\\n\\n\\nx1 = xx   +cos(dir+1.5708)*size;\\ny1 = yy -sin(dir+1.5708)*size;\\n\\nx2 = xx   -cos(dir+1.5708)*size;\\ny2 = yy +sin(dir+1.5708)*size;\\n\\nd1 = sqrt((x1-x)*(x1-x)+(y1-y)*(y1-y))-size*2;\\nsi1 = 1- 1/(1+pow(2,-d1*100));\\n\\nd2 = sqrt((x2-x)*(x2-x)+(y2-y)*(y2-y))-size*2;\\nsi2 = 1- 1/(1+pow(2,-d2*100));\\n\\ndx = (si1*sin(y1-y)*d1  - si2*sin(y2-y)*d2)*strength*velocity;\\ndy = (-si1*sin(x1-x)*d1 + si2*sin(x2-x)*d2)*strength*velocity;","warp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = ((uv * texsize.xy) * texsize_noise_lq.zw);\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (texsize.zw * 4.0);\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = (((2.0 * \\n    ((texture (sampler_blur1, (uv + (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv - (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1) + bias1)\\n  )).y * 0.5);\\n  tmpvar_4.y = (((2.0 * \\n    ((texture (sampler_blur1, (uv + (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv - (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1) + bias1)\\n  )).y * 0.5);\\n  ret_1.y = texture (sampler_fw_main, clamp ((uv + (\\n    (tmpvar_4 * texsize.zw)\\n   * 4.0)), 0.0, 1.0)).y;\\n  ret_1.y = (ret_1.y + ((\\n    (ret_1 - ((texture (sampler_blur1, uv).xyz * scale1) + bias1))\\n  .y * 0.025) + (-0.01 + \\n    (texture (sampler_main, uv).x * 0.1)\\n  )));\\n  ret_1.y = (ret_1.y + ((texture (sampler_noise_lq, tmpvar_2).y - 0.5) * 0.02));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = (((2.0 * \\n    ((texture (sampler_blur1, (uv + (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv - (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1) + bias1)\\n  )).z * 0.5);\\n  tmpvar_5.y = (((2.0 * \\n    ((texture (sampler_blur1, (uv + (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv - (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1) + bias1)\\n  )).z * 0.5);\\n  ret_1.z = ((texture (sampler_main, (uv - \\n    ((tmpvar_5 * texsize.zw) * 4.0)\\n  )).z - (ret_1.y * 0.01)) + 0.004);\\n  ret_1.z = (ret_1.z + ((texture (sampler_noise_lq, tmpvar_2).y - 0.5) * 0.01));\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = ret_1;\\n  ret = tmpvar_6.xyz;\\n }","comp":" shader_body { \\n  vec3 dy_1;\\n  vec3 dx_2;\\n  vec3 ret_3;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (texsize.zw * 3.0);\\n  vec3 tmpvar_5;\\n  tmpvar_5 = (((2.0 * \\n    ((texture (sampler_blur1, (uv + (vec2(1.0, 0.0) * tmpvar_4))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv + (vec2(-1.0, 0.0) * tmpvar_4))).xyz * scale1) + bias1)\\n  )) * 0.5);\\n  vec3 tmpvar_6;\\n  tmpvar_6 = (((2.0 * \\n    ((texture (sampler_blur1, (uv + (vec2(0.0, 1.0) * tmpvar_4))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv + (vec2(0.0, -1.0) * tmpvar_4))).xyz * scale1) + bias1)\\n  )) * 0.5);\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = tmpvar_5.y;\\n  tmpvar_7.y = tmpvar_6.y;\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = tmpvar_5.z;\\n  tmpvar_8.y = tmpvar_6.z;\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = q19;\\n  tmpvar_9.y = q20;\\n  vec2 tmpvar_10;\\n  tmpvar_10 = fract(((0.5 + \\n    (uv - 0.5)\\n  ) + (tmpvar_9 * vec2(-1.0, 1.0))));\\n  dx_2 = (((2.0 * \\n    ((texture (sampler_blur1, (tmpvar_10 + (vec2(1.0, 0.0) * tmpvar_4))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (tmpvar_10 + (vec2(-1.0, 0.0) * tmpvar_4))).xyz * scale1) + bias1)\\n  )) * 0.5);\\n  dy_1 = (((2.0 * \\n    ((texture (sampler_blur1, (tmpvar_10 + (vec2(0.0, 1.0) * tmpvar_4))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (tmpvar_10 + (vec2(0.0, -1.0) * tmpvar_4))).xyz * scale1) + bias1)\\n  )) * 0.5);\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = dx_2.x;\\n  tmpvar_11.y = dy_1.x;\\n  vec2 tmpvar_12;\\n  tmpvar_12.x = dx_2.x;\\n  tmpvar_12.y = dy_1.x;\\n  vec2 tmpvar_13;\\n  tmpvar_13.x = dx_2.x;\\n  tmpvar_13.y = dy_1.x;\\n  vec3 tmpvar_14;\\n  tmpvar_14 = mix (mix (mix (\\n    mix (mix (ret_3, vec3(1.0, 1.0, 1.0), ((texture (sampler_blur2, \\n      (fract(((uv - tmpvar_7) - (\\n        (tmpvar_8 * rad)\\n       * 2.0))) - (tmpvar_11 * 4.0))\\n    ).xyz * scale2) + bias2).yyy), vec3(1.0, 0.5, 0.0), texture (sampler_main, uv).yyy)\\n  , vec3(1.0, 1.0, 1.0), vec3(\\n    (texture (sampler_main, (uv - (tmpvar_12 * 0.2))).z * clamp ((1.0 - (rad * 1.5)), 0.0, 1.0))\\n  )), vec3(1.0, 1.0, 1.0), (\\n    (texture (sampler_blur1, (tmpvar_10 + (tmpvar_13 * 0.3))).xyz * scale1)\\n   + bias1).xxx), vec3(0.5, 0.0, 1.0), texture (sampler_main, tmpvar_10).xxx);\\n  ret_3 = tmpvar_14;\\n  vec4 tmpvar_15;\\n  tmpvar_15.w = 1.0;\\n  tmpvar_15.xyz = tmpvar_14;\\n  ret = tmpvar_15.xyz;\\n }"}')},4143:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.9,"echo_zoom":1.169,"echo_orient":1,"wave_mode":5,"additivewave":1,"wave_a":0,"wave_scale":0.9,"wave_smoothing":0.63,"wave_mystery":1,"modwavealphastart":2,"modwavealphaend":2,"warpscale":2.853,"rot":0.006,"warp":0,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.005,"mv_x":0,"mv_y":48,"mv_dx":-0.941,"mv_dy":0.426,"mv_l":5,"mv_r":0.316,"mv_g":0.078,"mv_b":0.942,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"c_x = 0.5;\\nc_y = 0.5;","frame_eqs_eel":"q1 = aspectx;\\nq2 = aspecty;\\nrot = 0;\\nzoom = 1;\\nwarp = 0;\\n\\n\\nvol = bass*8 + mid*4 + treb*2;\\nvol = vol*above(vol,17);\\nmonitor = vol;\\nbeat = above(vol,res);\\ndiff = (1-beat)*diff + beat*(vol-res);\\nres = beat*(vol+2*diff) + (1-beat)*(res - (diff*0.04 + 0.12)*60/fps);\\nres = max(0,res);\\nmonitor = res;\\n\\nr = if(beat, 0.01*(rand(200)-100)*0.01,r);\\nrot = r;\\n\\nc_x = if(beat,0.5 + 0.5*(rand(200)-100)*0.01, c_x);\\nc_y = if(beat,0.5 + 0.5*(rand(200)-100)*0.01, c_y);\\n\\n\\nq3 = c_x;\\nq4 = c_y;","pixel_eqs_eel":"d = (pow(sqrt(sqr(x-q3)+sqr(y-q4)),1)-0);\\nv = 0.03;\\ndx = v*(x-q3)*d;\\ndy = v*(y-q4)*d;","warp":"vec2 xlat_mutabled;\\nvec3 xlat_mutabledx;\\nvec3 xlat_mutabledy;\\n shader_body { \\n  vec3 ret_1;\\n  vec3 tmpvar_2;\\n  tmpvar_2 = (texture (sampler_noise_lq, ((\\n    (uv_orig * texsize.xy)\\n   * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5);\\n  xlat_mutabled = (texsize.zw * 4.0);\\n  xlat_mutabledx = (((texture (sampler_blur1, \\n    (uv_orig + (vec2(1.0, 0.0) * xlat_mutabled))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv_orig - (vec2(1.0, 0.0) * xlat_mutabled))\\n  ).xyz * scale1) + bias1));\\n  xlat_mutabledy = (((texture (sampler_blur1, \\n    (uv_orig + (vec2(0.0, 1.0) * xlat_mutabled))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv_orig - (vec2(0.0, 1.0) * xlat_mutabled))\\n  ).xyz * scale1) + bias1));\\n  xlat_mutabled = uv;\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = xlat_mutabledx.y;\\n  tmpvar_3.y = xlat_mutabledy.y;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = xlat_mutabledx.z;\\n  tmpvar_4.y = xlat_mutabledy.z;\\n  vec4 tmpvar_5;\\n  tmpvar_5 = texture (sampler_main, uv_orig);\\n  ret_1.y = ((texture (sampler_main, (uv - \\n    ((tmpvar_3 * texsize.zw) * 6.0)\\n  )).y - 0.008) + ((1.0 - tmpvar_5.x) * 0.018));\\n  ret_1.z = ((texture (sampler_main, (uv - \\n    ((tmpvar_4 * texsize.zw) * 6.0)\\n  )).z - 0.008) + (tmpvar_5.x * 0.018));\\n  ret_1.x = texture (sampler_fc_main, (uv + ((tmpvar_2.xy * texsize.zw) * 0.5))).x;\\n  ret_1.x = (ret_1.x + ((\\n    (ret_1.x - ((texture (sampler_blur3, uv).xyz * scale3) + bias3).x)\\n   * 0.15) + (tmpvar_2 * 0.0042)).x);\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = ret_1;\\n  ret = tmpvar_6.xyz;\\n }","comp":"vec2 xlat_mutabled;\\nvec3 xlat_mutabledx;\\nvec3 xlat_mutabledy;\\n shader_body { \\n  vec3 ret_1;\\n  xlat_mutabled = (texsize.zw * 4.0);\\n  xlat_mutabledx = (((texture (sampler_blur1, \\n    (uv_orig + (vec2(1.0, 0.0) * xlat_mutabled))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv_orig - (vec2(1.0, 0.0) * xlat_mutabled))\\n  ).xyz * scale1) + bias1));\\n  xlat_mutabledy = (((texture (sampler_blur1, \\n    (uv_orig + (vec2(0.0, 1.0) * xlat_mutabled))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv_orig - (vec2(0.0, 1.0) * xlat_mutabled))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = xlat_mutabledx.y;\\n  tmpvar_2.y = xlat_mutabledy.y;\\n  ret_1 = (((1.0 - \\n    ((texture (sampler_blur3, (uv - (\\n      (tmpvar_2 * texsize.zw)\\n     * 256.0))).xyz * scale3) + bias3)\\n  .x) * vec3(0.7, 0.5, 0.1)) * (1.0 + (\\n    (xlat_mutabledx * 2.0)\\n   + \\n    (xlat_mutabledy * 4.0)\\n  ).y));\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = xlat_mutabledx.z;\\n  tmpvar_3.y = xlat_mutabledy.z;\\n  vec3 tmpvar_4;\\n  tmpvar_4 = mix (ret_1, (vec3(0.7, 0.5, 1.0) * texture (sampler_main, uv).z), vec3(clamp ((\\n    ((texture (sampler_blur3, (uv - (\\n      (tmpvar_3 * texsize.zw)\\n     * 512.0))).xyz * scale3) + bias3)\\n  .x * \\n    (1.0 + ((xlat_mutabledx * 2.0) - (xlat_mutabledy * 4.0)).z)\\n  ), 0.0, 1.0)));\\n  ret_1 = tmpvar_4;\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = tmpvar_4;\\n  ret = tmpvar_5.xyz;\\n }"}')},3897:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.995,"echo_zoom":1.007,"echo_orient":3,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"wave_a":1.413,"wave_scale":0.418,"wave_smoothing":0,"wave_mystery":-0.66,"modwavealphastart":2,"modwavealphaend":2,"warpanimspeed":0.626,"warpscale":8.642,"zoom":0.99951,"warp":0.09014,"wave_r":0,"wave_g":0,"wave_x":0.24,"wave_y":0.44,"ob_size":0,"ob_a":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":48,"additive":1,"rad":0.0277,"ang":6.03186,"tex_ang":6.03186,"tex_zoom":0.6839,"r2":1,"g2":0,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = q3;\\ny = q4;\\nrad = q5;\\n\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;\\n"},{"baseVals":{"enabled":1,"sides":48,"additive":1,"rad":0.0277,"ang":6.03186,"tex_ang":6.03186,"tex_zoom":0.6839,"r":0,"b":1,"g2":0,"b2":1,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = q6;\\ny = q7;\\nrad = q8;\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;\\n"},{"baseVals":{"sides":48,"rad":0.0277,"ang":6.03186,"tex_ang":6.03186,"tex_zoom":0.6839,"r":0,"g":1,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = q9;\\ny = q10;\\nrad = q11;\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;\\n"},{"baseVals":{"sides":48,"additive":1,"thickoutline":1,"rad":0.0277,"ang":6.03186,"tex_ang":6.03186,"tex_zoom":0.6839,"r":0,"g":1,"a":0,"border_a":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = q12;\\ny = q13;\\nrad = q14;\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;\\n"}],"waves":[{"baseVals":{"thick":1,"additive":1,"scaling":2.0231,"smoothing":0,"r":0,"b":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"vol = bass*8 + mid*5 + treb*3;\\nm = m*0.97 + vol*0.08;\\nmonitor = vol;\\nbeat = above(vol,res)*above(vol,m)*above(vol,16);\\ndiff = (1-beat)*diff + beat*(vol-res);\\nres = beat*(vol + m*0.04) + (1-beat)*(res -  (0.1+diff*0.02)*60/fps);\\nres = max(0,res);\\n\\na = beat;","point_eqs_eel":"tt3 = tt3*0.6 + (value1)*1;\\ntt2 = tt2*0.7 + tt3*0.2;\\ntt1 = tt1*0.8 + tt2*0.1;\\nd = d*0.9 + tt1*0.2;\\n\\ny = 0.5 + d*sample*(1-sample)*2;\\nx =  -0.05 + sample*1.1;"},{"baseVals":{"spectrum":1,"g":0,"b":0,"enabled":0},"init_eqs_eel":"chance = 0;","frame_eqs_eel":"x = if(q9,q15,x);\\ny = if(q9,q16,y);\\nv = if(q9,q19,v);\\nw = if(q9,q20,w);\\n\\nref_w = if(q9, q10, ref_w);\\n\\nt1 = x;\\nt2 = y;\\nt3 = v;\\nt4 = w;\\nt5 = ref_w;\\n\\nt8 = 1;","point_eqs_eel":"x = t1 + sample*sin(t4)*t3*20;\\ny = t2 + sample*cos(t4)*t3*20;\\n\\nx = 0.5 + (x-0.5)/q1;\\ny = 0.5 + (y-0.5)/q2;"},{"baseVals":{"spectrum":1,"g":0,"b":0,"enabled":0},"init_eqs_eel":"chance = 0;","frame_eqs_eel":"x = if(q9,q15,x);\\ny = if(q9,q16,y);\\nv = if(q9,q19,v);\\nw = if(q9,q20,w);\\n\\nref_w = if(q9, q10, ref_w);\\n\\nt1 = x;\\nt2 = y;\\nt3 = v;\\nt4 = w;\\nt5 = ref_w;\\n\\nt8 = 1;","point_eqs_eel":"x = t1 + sample*sin(t5)*t3*20*cos(t4-t5);\\ny = t2 + sample*cos(t5)*t3*20*cos(t4-t5);\\n\\nx = 0.5 + (x-0.5)/q1;\\ny = 0.5 + (y-0.5)/q2;"},{"baseVals":{"spectrum":1,"g":0,"b":0,"enabled":0},"init_eqs_eel":"chance = 0;","frame_eqs_eel":"x = if(q9,q15,x);\\ny = if(q9,q16,y);\\nv = if(q9,q19,v);\\nw = if(q9,q20,w);\\n\\nref_w = if(q9, q10 + asin(1), ref_w);\\n\\nt1 = x;\\nt2 = y;\\nt3 = v;\\nt4 = w;\\nt5 = ref_w;\\n\\nt8 = 1;","point_eqs_eel":"x = t1 + sample*sin(t5)*t3*20*cos(t4-t5);\\ny = t2 + sample*cos(t5)*t3*20*cos(t4-t5);\\n\\nx = 0.5 + (x-0.5)/q1;\\ny = 0.5 + (y-0.5)/q2;"}],"init_eqs_eel":"x1 = 0.5;\\nx2 = 0.51;\\n\\ny2 = 0.9;\\ny1 = 0.7;\\n\\nx3 = 0.8;\\ny3 = 0.5;\\n\\nx4 = 0.2;\\ny4 = 0.5;\\n\\n\\nax1 = 0;\\nay1 = 0;\\nax2 = 0;\\nay2 = 0;\\nax3 = 0;\\nay3 = 0;\\n\\nvx1 = 0.000;\\nvx2 = 0.000;","frame_eqs_eel":"zoom = 1.001;\\n//warp = 0;\\nwave_a = 0;\\n//pogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogo\\nr = 0.04+ max(bass_att,treb_att)*0.008;bounce = below(y1,r);y1 = y1+vy1;\\nvy1 = if(bounce, abs(vy1)*0.94 + (r-y1)*0.1, vy1-0.0003*60/fps);\\nbounce = below(x1,r);x1 = x1+vx1;vx1 = if(bounce, abs(vx1)*0.94 + (r-x1)*0.1, vx1);\\nbounce = above(x1,1-r);vx1 = if(bounce, - abs(vx1)*0.94 + (1-r-x1)*0.04, vx1);\\nbounce = below(y2,r);y2 = y2 + vy2;vy2 = if(bounce,abs(vy2)*0.94+(r-y2)*.1, vy2-0.0003*60/fps);\\nbounce = below(x2,r);x2 = x2+ vx2;vx2 = if(bounce, abs(vx2)*0.94 + (r-x2)*0.1, vx2);\\nbounce = above(x2,1-r);vx2 = if(bounce, - abs(vx2)*0.94 + (1-r-x2)*0.1, vx2);\\nbounce = below(y3,r);y3 = y3 + vy3;vy3 = if(bounce,abs(vy3)*0.94+(r-y3)*.1, vy3-0.0003*60/fps);\\nbounce = below(x3,r);x3 = x3+ vx3;vx3 = if(bounce, abs(vx3)*0.94 + (r-x3)*0.1, vx3);\\nbounce = above(x3,1-r);vx3 = if(bounce, - abs(vx3)*0.94 + (1-r-x3)*0.1, vx3);\\nbounce = below(y4,r);y4 = y4 + vy4;vy4 = if(bounce,abs(vy4)*0.94+(r-y4)*.1, vy4-0.0003*60/fps);\\nbounce = below(x4,r);x4 = x4+ vx4;vx4 = if(bounce, abs(vx4)*0.94 + (r-x4)*0.1, vx4);\\nbounce = above(x4,1-r);vx4 = if(bounce, - abs(vx4)*0.94 + (1-r-x4)*0.1, vx4);\\nbounce = below( sqrt( sqr(x1+vx1-x2-vx2) + sqr(y1+vy1-y2-vy2)), 2*r);\\nref_ang = atan2(x2-x1,y2-y1)+asin(1); // common tangent\\nv1 = sqrt(vx1*vx1+vy1*vy1);v2 = sqrt(vx2*vx2+vy2*vy2);w1 = atan2(vx1,vy1);w2 = atan2(vx2,vy2);\\nvx1 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx1);\\nvy1 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy1);\\nvx2 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx2);\\nvy2 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy2);\\nbounce = below( sqrt( sqr(x1+vx1-x3-vx3) + sqr(y1+vy1-y3-vy3)), 2*r);\\nref_ang = atan2(x3-x1,y3-y1)+asin(1); // common tangent\\nv1 = sqrt(vx1*vx1+vy1*vy1);v2 = sqrt(vx3*vx3+vy3*vy3);w1 = atan2(vx1,vy1);w2 = atan2(vx3,vy3);\\nvx1 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx1);\\nvy1 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy1);\\nvx3 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx3);\\nvy3 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy3);\\nbounce = below( sqrt( sqr(x2+vx2-x3-vx3) + sqr(y2+vy2-y3-vy3)), 2*r);\\nref_ang = atan2(x3-x2,y3-y2)+asin(1); // common tangent\\nv1 = sqrt(vx2*vx2+vy2*vy2);v2 = sqrt(vx3*vx3+vy3*vy3);w1 = atan2(vx2,vy2);w2 = atan2(vx3,vy3);\\nvx2 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx2);\\nvy2 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy2);\\nvx3 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx3);\\nvy3 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy3);\\nbounce = below( sqrt( sqr(x1+vx1-x4-vx4) + sqr(y1+vy1-y4-vy4)), 2*r);\\nref_ang = atan2(x4-x1,y4-y1)+asin(1); // common tangent\\nv1 = sqrt(vx1*vx1+vy1*vy1);v2 = sqrt(vx4*vx4+vy4*vy4);w1 = atan2(vx1,vy1);w2 = atan2(vx4,vy4);\\nvx1 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx1);\\nvy1 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy1);\\nvx4 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx4);\\nvy4 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy4);\\nbounce = below( sqrt( sqr(x2+vx2-x4-vx4) + sqr(y2+vy2-y4-vy4)), 2*r);\\nref_ang = atan2(x4-x2,y4-y2)+asin(1); // common tangent\\nv1 = sqrt(vx2*vx2+vy2*vy2);v2 = sqrt(vx4*vx4+vy4*vy4);w1 = atan2(vx2,vy2);w2 = atan2(vx4,vy4);\\nvx2 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx2);\\nvy2 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy2);\\nvx4 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx4);\\nvy4 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy4);\\nbounce = below( sqrt( sqr(x3+vx3-x4-vx4) + sqr(y3+vy3-y4-vy4)), 2*r);\\nref_ang = atan2(x4-x3,y4-y3)+asin(1); // common tangent\\nv1 = sqrt(vx3*vx3+vy3*vy3);v2 = sqrt(vx4*vx4+vy4*vy4);w1 = atan2(vx3,vy3);w2 = atan2(vx4,vy4);\\nvx3 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx3);\\nvy3 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy3);\\nvx4 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx4);\\nvy4 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy4);\\n//pogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogo\\nq1 = aspectx;\\nq2 = aspecty;\\nq3 = x1;\\nq4 = y1;\\nq5 = r*2;\\nq6 = x2;\\nq7 = y2;\\nq8 = r*2;\\nq9 = x3;\\nq10 = y3;\\nq11 = r*2;\\nq12 = x4;\\nq13 = y4;\\nq14 = r*2;\\nq15 = atan2(vx4,vy4);\\nq16 = sqrt(vx4*vx4+vy4*vy4);\\nq17 = atan2(vx3,vy3);\\nq18 = sqrt(vx3*vx3+vy3*vy3);","pixel_eqs_eel":"x = 0.5 + (x-0.5)*q2;\\ny = 0.5 + (y-0.5)*q1;\\n\\n\\ndir = -q15 + asin(1);\\nb1 = 0.075;\\nm1 = q16*25;\\nxx = q12;\\nyy = 1-q13;\\nx1 = xx  -sin(dir)*b1;\\ny1 = yy  -cos(dir)*b1;\\nx2 = xx  +sin(dir)*b1;\\ny2 = yy  +cos(dir)*b1;\\nd1 = sqrt((x1-x)*(x1-x)+(y1-y)*(y1-y))-b1*2;\\nd2 = sqrt((x2-x)*(x2-x)+(y2-y)*(y2-y))-b1*2;\\nsi1 = sigmoid(-d1,1000);\\nsi2 = sigmoid(-d2,1000);\\ndx = (si1*sin(y1-y)*m1*d1  - si2*sin(y2-y)*m1*d2)*3*q1;\\ndy = (-si1*sin(x1-x)*m1*d1 + si2*sin(x2-x)*m1*d2)*3*q2;\\n\\ndir = -q17 + asin(1);\\nm1 = q18*25;\\nxx = q9;\\nyy = 1-q10;\\nx1 = xx  -sin(dir)*b1;\\ny1 = yy  -cos(dir)*b1;\\nx2 = xx  +sin(dir)*b1;\\ny2 = yy  +cos(dir)*b1;\\nd1 = sqrt((x1-x)*(x1-x)+(y1-y)*(y1-y))-b1*2;\\nd2 = sqrt((x2-x)*(x2-x)+(y2-y)*(y2-y))-b1*2;\\nsi1 = sigmoid(-d1,1000);\\nsi2 = sigmoid(-d2,1000);\\ndx = dx + (si1*sin(y1-y)*m1*d1  - si2*sin(y2-y)*m1*d2)*3*q1;\\ndy = dy + (-si1*sin(x1-x)*m1*d1 + si2*sin(x2-x)*m1*d2)*3*q2;","warp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 4.0);\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = tmpvar_3.x;\\n  tmpvar_5.y = tmpvar_4.x;\\n  ret_1.x = (texture (sampler_fc_main, (uv + (\\n    (tmpvar_5 * texsize.zw)\\n   * 2.0))).x - 0.008);\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = tmpvar_3.z;\\n  tmpvar_6.y = tmpvar_4.z;\\n  ret_1.z = texture (sampler_fc_main, (uv - (tmpvar_6 * texsize.zw))).z;\\n  vec4 tmpvar_7;\\n  tmpvar_7.w = 1.0;\\n  tmpvar_7.xyz = ret_1;\\n  ret = tmpvar_7.xyz;\\n }","comp":"float xlat_mutablea;\\nfloat xlat_mutableb;\\nfloat xlat_mutablec;\\n shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = cos(((uv.y * texsize.y) * 0.4));\\n  tmpvar_2.y = sin(((uv.x * texsize.x) * 0.4));\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (uv + ((8.0 * texsize.zw) * tmpvar_2));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = vec3((((\\n    (((texture (sampler_blur3, uv).xyz * scale3) + bias3).x + ((texture (sampler_blur2, uv).xyz * scale2) + bias2).x)\\n   + \\n    ((texture (sampler_blur1, tmpvar_3).xyz * scale1) + bias1)\\n  .x) + texture (sampler_main, tmpvar_3).x) + 0.04));\\n  xlat_mutablea = (tmpvar_4.x / 4.0);\\n  xlat_mutableb = (tmpvar_4.y / 4.0);\\n  xlat_mutablec = (tmpvar_4.z / 4.0);\\n  xlat_mutablec = ((xlat_mutablec + xlat_mutableb) - (xlat_mutablec * xlat_mutableb));\\n  xlat_mutablea = ((xlat_mutablea + xlat_mutablec) - (xlat_mutablea * xlat_mutablec));\\n  vec3 tmpvar_5;\\n  tmpvar_5 = vec3((1.4 * xlat_mutablea));\\n  ret_1 = ((vec3(8.0, 4.0, 0.0) * (\\n    (tmpvar_5 * (1.0 - tmpvar_5))\\n   * \\n    (1.0 - tmpvar_5)\\n  )) + ((tmpvar_5 * tmpvar_5) * vec3(-0.3, 0.2, 0.5)));\\n  vec3 tmpvar_6;\\n  tmpvar_6 = mix ((1.0 - mix (ret_1, vec3(1.0, 1.0, 1.0), vec3(\\n    (((texture (sampler_blur1, uv).xyz * scale1) + bias1).z * 6.0)\\n  ))), vec3(1.0, 1.0, 0.0), vec3((texture (sampler_main, uv).z * 0.9)));\\n  ret_1 = tmpvar_6;\\n  vec4 tmpvar_7;\\n  tmpvar_7.w = 1.0;\\n  tmpvar_7.xyz = tmpvar_6;\\n  ret = tmpvar_7.xyz;\\n }"}')},4900:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.995,"echo_zoom":1.007,"echo_orient":3,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"wave_a":1.413,"wave_scale":0.418,"wave_smoothing":0,"wave_mystery":-0.66,"modwavealphastart":2,"modwavealphaend":2,"warpanimspeed":0.626,"warpscale":8.642,"zoomexp":7.10084,"zoom":0.99951,"warp":0.09014,"wave_r":0,"wave_g":0,"wave_x":0.24,"wave_y":0.44,"ob_size":0,"ob_a":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":48,"additive":1,"rad":0.0277,"ang":6.03186,"tex_ang":6.03186,"tex_zoom":0.6839,"r":0,"g":1,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = q3;\\ny = q4;\\nrad = q5;\\n\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;\\n"},{"baseVals":{"enabled":1,"sides":48,"additive":1,"rad":0.0277,"ang":6.03186,"tex_ang":6.03186,"tex_zoom":0.6839,"r":0,"b":1,"g2":0,"b2":1,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = q6;\\ny = q7;\\nrad = q8;\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;\\n"},{"baseVals":{"sides":48,"rad":0.0277,"ang":6.03186,"tex_ang":6.03186,"tex_zoom":0.6839,"r":0,"g":1,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = q9;\\ny = q10;\\nrad = q11;\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;\\n"},{"baseVals":{"sides":48,"additive":1,"thickoutline":1,"rad":0.0277,"ang":6.03186,"tex_ang":6.03186,"tex_zoom":0.6839,"r":0,"g":1,"a":0,"border_a":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = q12;\\ny = q13;\\nrad = q14;\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;\\n"}],"waves":[{"baseVals":{"enabled":1,"thick":1,"additive":1,"scaling":2.0231,"smoothing":0,"g":0,"b":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"vol = bass*8 + mid*5 + treb*3;\\nm = m*0.97 + vol*0.08;\\nmonitor = vol;\\nbeat = above(vol,res)*above(vol,m)*above(vol,16);\\ndiff = (1-beat)*diff + beat*(vol-res);\\nres = beat*(vol + m*0.04) + (1-beat)*(res -  (0.1+diff*0.02)*60/fps);\\nres = max(0,res);\\n\\na = beat;","point_eqs_eel":"tt3 = tt3*0.6 + (value1)*1;\\ntt2 = tt2*0.7 + tt3*0.2;\\ntt1 = tt1*0.8 + tt2*0.1;\\nd = d*0.9 + tt1*0.2;\\n\\ny = 0.5 + d*sample*(1-sample)*2;\\nx =  -0.05 + sample*1.1;"},{"baseVals":{"spectrum":1,"g":0,"b":0,"enabled":0},"init_eqs_eel":"chance = 0;","frame_eqs_eel":"x = if(q9,q15,x);\\ny = if(q9,q16,y);\\nv = if(q9,q19,v);\\nw = if(q9,q20,w);\\n\\nref_w = if(q9, q10, ref_w);\\n\\nt1 = x;\\nt2 = y;\\nt3 = v;\\nt4 = w;\\nt5 = ref_w;\\n\\nt8 = 1;","point_eqs_eel":"x = t1 + sample*sin(t4)*t3*20;\\ny = t2 + sample*cos(t4)*t3*20;\\n\\nx = 0.5 + (x-0.5)/q1;\\ny = 0.5 + (y-0.5)/q2;"},{"baseVals":{"spectrum":1,"g":0,"b":0,"enabled":0},"init_eqs_eel":"chance = 0;","frame_eqs_eel":"x = if(q9,q15,x);\\ny = if(q9,q16,y);\\nv = if(q9,q19,v);\\nw = if(q9,q20,w);\\n\\nref_w = if(q9, q10, ref_w);\\n\\nt1 = x;\\nt2 = y;\\nt3 = v;\\nt4 = w;\\nt5 = ref_w;\\n\\nt8 = 1;","point_eqs_eel":"x = t1 + sample*sin(t5)*t3*20*cos(t4-t5);\\ny = t2 + sample*cos(t5)*t3*20*cos(t4-t5);\\n\\nx = 0.5 + (x-0.5)/q1;\\ny = 0.5 + (y-0.5)/q2;"},{"baseVals":{"spectrum":1,"g":0,"b":0,"enabled":0},"init_eqs_eel":"chance = 0;","frame_eqs_eel":"x = if(q9,q15,x);\\ny = if(q9,q16,y);\\nv = if(q9,q19,v);\\nw = if(q9,q20,w);\\n\\nref_w = if(q9, q10 + asin(1), ref_w);\\n\\nt1 = x;\\nt2 = y;\\nt3 = v;\\nt4 = w;\\nt5 = ref_w;\\n\\nt8 = 1;","point_eqs_eel":"x = t1 + sample*sin(t5)*t3*20*cos(t4-t5);\\ny = t2 + sample*cos(t5)*t3*20*cos(t4-t5);\\n\\nx = 0.5 + (x-0.5)/q1;\\ny = 0.5 + (y-0.5)/q2;"}],"init_eqs_eel":"x1 = 0.5;\\nx2 = 0.51;\\n\\ny2 = 0.9;\\ny1 = 0.7;\\n\\nx3 = 0.8;\\ny3 = 0.5;\\n\\nx4 = 0.2;\\ny4 = 0.5;\\n\\n\\nax1 = 0;\\nay1 = 0;\\nax2 = 0;\\nay2 = 0;\\nax3 = 0;\\nay3 = 0;\\n\\nvx1 = 0.000;\\nvx2 = 0.000;","frame_eqs_eel":"zoom = 1.002;\\nwarp = 0.2;\\nwave_a = 0;\\n//pogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogo\\nr = 0.04+ max(bass_att,treb_att)*0.008;\\nbounce = below(y1,r);y1 = y1+vy1;vy1 = if(bounce, abs(vy1)*0.94 + (r-y1)*0.1, vy1-0.0003*60/fps);\\nbounce = below(x1,r);x1 = x1+vx1;vx1 = if(bounce, abs(vx1)*0.94 + (r-x1)*0.1, vx1);\\nbounce = above(x1,1-r);vx1 = if(bounce, - abs(vx1)*0.94 + (1-r-x1)*0.04, vx1);\\nbounce = below(y2,r);y2 = y2 + vy2;vy2 = if(bounce,abs(vy2)*0.94+(r-y2)*.1, vy2-0.0003*60/fps);\\nbounce = below(x2,r);x2 = x2+ vx2;vx2 = if(bounce, abs(vx2)*0.94 + (r-x2)*0.1, vx2);\\nbounce = above(x2,1-r);vx2 = if(bounce, - abs(vx2)*0.94 + (1-r-x2)*0.1, vx2);\\nbounce = below(y3,r);y3 = y3 + vy3;vy3 = if(bounce,abs(vy3)*0.94+(r-y3)*.1, vy3-0.0003*60/fps);\\nbounce = below(x3,r);x3 = x3+ vx3;vx3 = if(bounce, abs(vx3)*0.94 + (r-x3)*0.1, vx3);\\nbounce = above(x3,1-r);vx3 = if(bounce, - abs(vx3)*0.94 + (1-r-x3)*0.1, vx3);\\nbounce = below(y4,r);y4 = y4 + vy4;vy4 = if(bounce,abs(vy4)*0.94+(r-y4)*.1, vy4-0.0003*60/fps);\\nbounce = below(x4,r);x4 = x4+ vx4;vx4 = if(bounce, abs(vx4)*0.94 + (r-x4)*0.1, vx4);\\nbounce = above(x4,1-r);vx4 = if(bounce, - abs(vx4)*0.94 + (1-r-x4)*0.1, vx4);\\nbounce = below( sqrt( sqr(x1+vx1-x2-vx2) + sqr(y1+vy1-y2-vy2)), 2*r);\\nref_ang = atan2(x2-x1,y2-y1)+asin(1); // common tangent\\nv1 = sqrt(vx1*vx1+vy1*vy1);v2 = sqrt(vx2*vx2+vy2*vy2);w1 = atan2(vx1,vy1);w2 = atan2(vx2,vy2);\\nvx1 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx1);\\nvy1 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy1);\\nvx2 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx2);\\nvy2 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy2);\\nbounce = below( sqrt( sqr(x1+vx1-x3-vx3) + sqr(y1+vy1-y3-vy3)), 2*r);\\nref_ang = atan2(x3-x1,y3-y1)+asin(1); // common tangent\\nv1 = sqrt(vx1*vx1+vy1*vy1);v2 = sqrt(vx3*vx3+vy3*vy3);w1 = atan2(vx1,vy1);w2 = atan2(vx3,vy3);\\nvx1 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx1);\\nvy1 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy1);\\nvx3 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx3);\\nvy3 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy3);\\nbounce = below( sqrt( sqr(x2+vx2-x3-vx3) + sqr(y2+vy2-y3-vy3)), 2*r);\\nref_ang = atan2(x3-x2,y3-y2)+asin(1); // common tangent\\nv1 = sqrt(vx2*vx2+vy2*vy2);v2 = sqrt(vx3*vx3+vy3*vy3);w1 = atan2(vx2,vy2);w2 = atan2(vx3,vy3);\\nvx2 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx2);\\nvy2 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy2);\\nvx3 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx3);\\nvy3 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy3);\\nbounce = below( sqrt( sqr(x1+vx1-x4-vx4) + sqr(y1+vy1-y4-vy4)), 2*r);\\nref_ang = atan2(x4-x1,y4-y1)+asin(1); // common tangent\\nv1 = sqrt(vx1*vx1+vy1*vy1);v2 = sqrt(vx4*vx4+vy4*vy4);w1 = atan2(vx1,vy1);w2 = atan2(vx4,vy4);\\nvx1 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx1);\\nvy1 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy1);\\nvx4 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx4);\\nvy4 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy4);\\nbounce = below( sqrt( sqr(x2+vx2-x4-vx4) + sqr(y2+vy2-y4-vy4)), 2*r);\\nref_ang = atan2(x4-x2,y4-y2)+asin(1); // common tangent\\nv1 = sqrt(vx2*vx2+vy2*vy2);v2 = sqrt(vx4*vx4+vy4*vy4);w1 = atan2(vx2,vy2);w2 = atan2(vx4,vy4);\\nvx2 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx2);\\nvy2 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy2);\\nvx4 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx4);\\nvy4 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy4);\\nbounce = below( sqrt( sqr(x3+vx3-x4-vx4) + sqr(y3+vy3-y4-vy4)), 2*r);\\nref_ang = atan2(x4-x3,y4-y3)+asin(1); // common tangent\\nv1 = sqrt(vx3*vx3+vy3*vy3);v2 = sqrt(vx4*vx4+vy4*vy4);w1 = atan2(vx3,vy3);w2 = atan2(vx4,vy4);\\nvx3 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx3);\\nvy3 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy3);\\nvx4 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx4);\\nvy4 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy4);\\n//pogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogo\\nq1 = aspectx;\\nq2 = aspecty;\\nq3 = x1;\\nq4 = y1;\\nq5 = r*2;\\nq6 = x2;\\nq7 = y2;\\nq8 = r*2;\\nq9 = x3;\\nq10 = y3;\\nq11 = r*2;\\nq12 = x4;\\nq13 = y4;\\nq14 = r*2;\\nq15 = atan2(vx4,vy4);\\nq16 = sqrt(vx4*vx4+vy4*vy4);\\nq17 = atan2(vx3,vy3);\\nq18 = sqrt(vx3*vx3+vy3*vy3);","pixel_eqs_eel":"x = 0.5 + (x-0.5)*q2;\\ny = 0.5 + (y-0.5)*q1;\\n\\n\\ndir = -q15 + asin(1);\\nb1 = 0.075;\\nm1 = q16*25;\\nxx = q12;\\nyy = 1-q13;\\nx1 = xx  -sin(dir)*b1;\\ny1 = yy  -cos(dir)*b1;\\nx2 = xx  +sin(dir)*b1;\\ny2 = yy  +cos(dir)*b1;\\nd1 = sqrt((x1-x)*(x1-x)+(y1-y)*(y1-y))-b1*2;\\nd2 = sqrt((x2-x)*(x2-x)+(y2-y)*(y2-y))-b1*2;\\nsi1 = sigmoid(-d1,1000);\\nsi2 = sigmoid(-d2,1000);\\ndx = (si1*sin(y1-y)*m1*d1  - si2*sin(y2-y)*m1*d2)*3*q1;\\ndy = (-si1*sin(x1-x)*m1*d1 + si2*sin(x2-x)*m1*d2)*3*q2;\\n\\ndir = -q17 + asin(1);\\nm1 = q18*25;\\nxx = q9;\\nyy = 1-q10;\\nx1 = xx  -sin(dir)*b1;\\ny1 = yy  -cos(dir)*b1;\\nx2 = xx  +sin(dir)*b1;\\ny2 = yy  +cos(dir)*b1;\\nd1 = sqrt((x1-x)*(x1-x)+(y1-y)*(y1-y))-b1*2;\\nd2 = sqrt((x2-x)*(x2-x)+(y2-y)*(y2-y))-b1*2;\\nsi1 = sigmoid(-d1,1000);\\nsi2 = sigmoid(-d2,1000);\\ndx = dx + (si1*sin(y1-y)*m1*d1  - si2*sin(y2-y)*m1*d2)*3*q1;\\ndy = dy + (-si1*sin(x1-x)*m1*d1 + si2*sin(x2-x)*m1*d2)*3*q2;","warp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 8.0);\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = tmpvar_3.z;\\n  tmpvar_5.y = tmpvar_4.z;\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv + ((tmpvar_5 * texsize.zw) * 4.0));\\n  ret_1.z = (((texture (sampler_main, tmpvar_6).z - \\n    ((texture (sampler_main, tmpvar_6).z - ((texture (sampler_blur3, tmpvar_6).xyz * scale3) + bias3).z) * 0.02)\\n  ) - 0.008) + ((texture (sampler_noise_lq, \\n    (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)\\n  ).xyz - 0.5) * 0.1)).x;\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = tmpvar_3.x;\\n  tmpvar_7.y = tmpvar_4.x;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = ((0.5 + (uv - 0.5)) - (tmpvar_7 * texsize.zw));\\n  ret_1.x = texture (sampler_main, tmpvar_8).x;\\n  ret_1.x = (ret_1.x + ((\\n    (ret_1.x - ((texture (sampler_blur3, tmpvar_8).xyz * scale3) + bias3))\\n  .x * 0.4) + 0.006));\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = tmpvar_3.x;\\n  tmpvar_9.y = tmpvar_4.x;\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = tmpvar_3.y;\\n  tmpvar_10.y = tmpvar_4.y;\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = tmpvar_3.z;\\n  tmpvar_11.y = tmpvar_4.z;\\n  ret_1.y = texture (sampler_fc_main, (((uv - \\n    ((tmpvar_9 * texsize.zw) * 8.0)\\n  ) + (\\n    (tmpvar_10 * texsize.zw)\\n   * 4.0)) + ((tmpvar_11 * texsize.zw) * 8.0))).y;\\n  ret_1.y = (ret_1.y * (1.0 + (ret_1.x * 0.1)));\\n  ret_1.y = (ret_1.y - (0.004 + (\\n    clamp (ret_1.z, 0.0, 1.0)\\n   * 0.04)));\\n  vec4 tmpvar_12;\\n  tmpvar_12.w = 1.0;\\n  tmpvar_12.xyz = ret_1;\\n  ret = tmpvar_12.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 4.0);\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = tmpvar_3.z;\\n  tmpvar_5.y = tmpvar_4.z;\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = tmpvar_3.y;\\n  tmpvar_6.y = tmpvar_4.y;\\n  vec2 tmpvar_7;\\n  tmpvar_7 = ((uv - (tmpvar_5 * 0.1)) + (tmpvar_6 * 0.06));\\n  vec4 tmpvar_8;\\n  tmpvar_8 = texture (sampler_main, uv);\\n  ret_1 = (((\\n    ((texture (sampler_blur2, tmpvar_7).xyz * scale2) + bias2)\\n  .x * \\n    clamp ((1.0 - tmpvar_8.z), 0.0, 1.0)\\n  ) * pow (hue_shader.yxz, vec3(8.0, 8.0, 8.0))) * 3.0);\\n  ret_1 = (mix (ret_1, (\\n    pow (hue_shader.yzx, vec3(8.0, 8.0, 8.0))\\n   * 1.4), vec3((\\n    (texture (sampler_main, tmpvar_7).x * 0.8)\\n   + \\n    ((texture (sampler_blur1, tmpvar_7).xyz * scale1) + bias1)\\n  .x))) * clamp ((1.0 - \\n    (((texture (sampler_blur1, uv).xyz * scale1) + bias1).y * 4.0)\\n  ), 0.0, 1.0));\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = tmpvar_3.y;\\n  tmpvar_9.y = tmpvar_4.y;\\n  vec3 tmpvar_10;\\n  vec3 tmpvar_11;\\n  tmpvar_11 = pow (hue_shader, vec3(8.0, 8.0, 8.0));\\n  tmpvar_10 = mix (mix (ret_1, vec3(1.0, 1.0, 1.0), (\\n    (tmpvar_11 * texture (sampler_main, clamp ((uv - (tmpvar_9 * 2.0)), 0.0, 1.0)).z)\\n   * 1.2)), (tmpvar_11.zxy * 1.8), tmpvar_8.yyy);\\n  ret_1 = tmpvar_10;\\n  vec4 tmpvar_12;\\n  tmpvar_12.w = 1.0;\\n  tmpvar_12.xyz = tmpvar_10;\\n  ret = tmpvar_12.xyz;\\n }"}')},2030:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1,"decay":0.995,"echo_zoom":1.007,"echo_orient":3,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"wave_a":1.413,"wave_scale":0.418,"wave_smoothing":0,"wave_mystery":-0.66,"modwavealphastart":2,"modwavealphaend":2,"warpanimspeed":0.626,"warpscale":1.331,"zoom":0.99951,"warp":0.08925,"wave_r":0,"wave_g":0,"wave_x":0.24,"wave_y":0.44,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":48,"additive":1,"rad":0.0277,"ang":6.03186,"tex_ang":6.03186,"tex_zoom":0.6839,"r2":1,"g2":0,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":1},"init_eqs_eel":"","frame_eqs_eel":"x = q3;\\ny = q4;\\nrad = q5;\\n\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;\\n"},{"baseVals":{"enabled":1,"sides":48,"additive":1,"rad":0.0277,"ang":6.03186,"tex_ang":6.03186,"tex_zoom":0.6839,"r":0,"b":1,"g2":0,"b2":1,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":1},"init_eqs_eel":"","frame_eqs_eel":"x = q6;\\ny = q7;\\nrad = q8;\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;\\n"},{"baseVals":{"enabled":1,"sides":48,"additive":1,"rad":0.0277,"ang":6.03186,"tex_ang":6.03186,"tex_zoom":0.6839,"r":0,"g":1,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":1},"init_eqs_eel":"","frame_eqs_eel":"x = q9;\\ny = q10;\\nrad = q11;\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;\\n"},{"baseVals":{"sides":48,"additive":1,"thickoutline":1,"rad":0.0277,"ang":6.03186,"tex_ang":6.03186,"tex_zoom":0.6839,"r":0,"g":1,"a":0,"border_a":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = q12;\\ny = q13;\\nrad = q14;\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;\\n"}],"waves":[{"baseVals":{"thick":1,"additive":1,"scaling":2.0231,"smoothing":0,"r":0,"b":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"vol = bass*8 + mid*5 + treb*3;\\nm = m*0.97 + vol*0.08;\\nmonitor = vol;\\nbeat = above(vol,res)*above(vol,m)*above(vol,16);\\ndiff = (1-beat)*diff + beat*(vol-res);\\nres = beat*(vol + m*0.04) + (1-beat)*(res -  (0.1+diff*0.02)*60/fps);\\nres = max(0,res);\\n\\na = beat;","point_eqs_eel":"tt3 = tt3*0.6 + (value1)*1;\\ntt2 = tt2*0.7 + tt3*0.2;\\ntt1 = tt1*0.8 + tt2*0.1;\\nd = d*0.9 + tt1*0.2;\\n\\ny = 0.5 + d*sample*(1-sample)*2;\\nx =  -0.05 + sample*1.1;"},{"baseVals":{"spectrum":1,"g":0,"b":0,"enabled":0},"init_eqs_eel":"chance = 0;","frame_eqs_eel":"x = if(q9,q15,x);\\ny = if(q9,q16,y);\\nv = if(q9,q19,v);\\nw = if(q9,q20,w);\\n\\nref_w = if(q9, q10, ref_w);\\n\\nt1 = x;\\nt2 = y;\\nt3 = v;\\nt4 = w;\\nt5 = ref_w;\\n\\nt8 = 1;","point_eqs_eel":"x = t1 + sample*sin(t4)*t3*20;\\ny = t2 + sample*cos(t4)*t3*20;\\n\\nx = 0.5 + (x-0.5)/q1;\\ny = 0.5 + (y-0.5)/q2;"},{"baseVals":{"spectrum":1,"g":0,"b":0,"enabled":0},"init_eqs_eel":"chance = 0;","frame_eqs_eel":"x = if(q9,q15,x);\\ny = if(q9,q16,y);\\nv = if(q9,q19,v);\\nw = if(q9,q20,w);\\n\\nref_w = if(q9, q10, ref_w);\\n\\nt1 = x;\\nt2 = y;\\nt3 = v;\\nt4 = w;\\nt5 = ref_w;\\n\\nt8 = 1;","point_eqs_eel":"x = t1 + sample*sin(t5)*t3*20*cos(t4-t5);\\ny = t2 + sample*cos(t5)*t3*20*cos(t4-t5);\\n\\nx = 0.5 + (x-0.5)/q1;\\ny = 0.5 + (y-0.5)/q2;"},{"baseVals":{"spectrum":1,"g":0,"b":0,"enabled":0},"init_eqs_eel":"chance = 0;","frame_eqs_eel":"x = if(q9,q15,x);\\ny = if(q9,q16,y);\\nv = if(q9,q19,v);\\nw = if(q9,q20,w);\\n\\nref_w = if(q9, q10 + asin(1), ref_w);\\n\\nt1 = x;\\nt2 = y;\\nt3 = v;\\nt4 = w;\\nt5 = ref_w;\\n\\nt8 = 1;","point_eqs_eel":"x = t1 + sample*sin(t5)*t3*20*cos(t4-t5);\\ny = t2 + sample*cos(t5)*t3*20*cos(t4-t5);\\n\\nx = 0.5 + (x-0.5)/q1;\\ny = 0.5 + (y-0.5)/q2;"}],"init_eqs_eel":"x1 = 0.5;\\nx2 = 0.51;\\n\\ny2 = 0.9;\\ny1 = 0.7;\\n\\nx3 = 0.8;\\ny3 = 0.5;\\n\\nx4 = 0.2;\\ny4 = 0.5;\\n\\n\\nax1 = 0;\\nay1 = 0;\\nax2 = 0;\\nay2 = 0;\\nax3 = 0;\\nay3 = 0;\\n\\nvx1 = 0.000;\\nvx2 = 0.000;","frame_eqs_eel":"zoom = 1;\\nwarp = 0;\\nwave_a = 0;\\n\\n//pogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogo\\nr = 0.04+max(bass_att,treb_att)*0.004;\\nbounce = below(y1,r);y1 = y1+vy1;vy1 = if(bounce, abs(vy1)*0.94 + (r-y1)*0.1, vy1-0.0003*60/fps);\\nbounce = below(x1,r);x1 = x1+vx1;vx1 = if(bounce, abs(vx1)*0.94 + (r-x1)*0.1, vx1);\\nbounce = above(x1,1-r);vx1 = if(bounce, - abs(vx1)*0.94 + (1-r-x1)*0.04, vx1);\\nbounce = below(y2,r);y2 = y2 + vy2;vy2 = if(bounce,abs(vy2)*0.94+(r-y2)*.1, vy2-0.0003*60/fps);\\nbounce = below(x2,r);x2 = x2+ vx2;vx2 = if(bounce, abs(vx2)*0.94 + (r-x2)*0.1, vx2);\\nbounce = above(x2,1-r);vx2 = if(bounce, - abs(vx2)*0.94 + (1-r-x2)*0.1, vx2);\\nbounce = below(y3,r);y3 = y3 + vy3;vy3 = if(bounce,abs(vy3)*0.94+(r-y3)*.1, vy3-0.0003*60/fps);\\nbounce = below(x3,r);x3 = x3+ vx3;vx3 = if(bounce, abs(vx3)*0.94 + (r-x3)*0.1, vx3);\\nbounce = above(x3,1-r);vx3 = if(bounce, - abs(vx3)*0.94 + (1-r-x3)*0.1, vx3);\\nbounce = below(y4,r);y4 = y4 + vy4;vy4 = if(bounce,abs(vy4)*0.94+(r-y4)*.1, vy4-0.0003*60/fps);\\nbounce = below(x4,r);x4 = x4+ vx4;vx4 = if(bounce, abs(vx4)*0.94 + (r-x4)*0.1, vx4);\\nbounce = above(x4,1-r);vx4 = if(bounce, - abs(vx4)*0.94 + (1-r-x4)*0.1, vx4);\\nbounce = below( sqrt( sqr(x1+vx1-x2-vx2) + sqr(y1+vy1-y2-vy2)), 2*r);\\nref_ang = atan2(x2-x1,y2-y1)+asin(1); // common tangent\\nv1 = sqrt(vx1*vx1+vy1*vy1);v2 = sqrt(vx2*vx2+vy2*vy2);w1 = atan2(vx1,vy1);w2 = atan2(vx2,vy2);\\nvx1 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx1);\\nvy1 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy1);\\nvx2 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx2);\\nvy2 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy2);\\nbounce = below( sqrt( sqr(x1+vx1-x3-vx3) + sqr(y1+vy1-y3-vy3)), 2*r);\\nref_ang = atan2(x3-x1,y3-y1)+asin(1); // common tangent\\nv1 = sqrt(vx1*vx1+vy1*vy1);v2 = sqrt(vx3*vx3+vy3*vy3);w1 = atan2(vx1,vy1);w2 = atan2(vx3,vy3);\\nvx1 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx1);\\nvy1 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy1);\\nvx3 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx3);\\nvy3 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy3);\\nbounce = below( sqrt( sqr(x2+vx2-x3-vx3) + sqr(y2+vy2-y3-vy3)), 2*r);\\nref_ang = atan2(x3-x2,y3-y2)+asin(1); // common tangent\\nv1 = sqrt(vx2*vx2+vy2*vy2);v2 = sqrt(vx3*vx3+vy3*vy3);w1 = atan2(vx2,vy2);w2 = atan2(vx3,vy3);\\nvx2 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx2);\\nvy2 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy2);\\nvx3 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx3);\\nvy3 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy3);\\nbounce = below( sqrt( sqr(x1+vx1-x4-vx4) + sqr(y1+vy1-y4-vy4)), 2*r);\\nref_ang = atan2(x4-x1,y4-y1)+asin(1); // common tangent\\nv1 = sqrt(vx1*vx1+vy1*vy1);v2 = sqrt(vx4*vx4+vy4*vy4);w1 = atan2(vx1,vy1);w2 = atan2(vx4,vy4);\\nvx1 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx1);\\nvy1 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy1);\\nvx4 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx4);\\nvy4 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy4);\\nbounce = below( sqrt( sqr(x2+vx2-x4-vx4) + sqr(y2+vy2-y4-vy4)), 2*r);\\nref_ang = atan2(x4-x2,y4-y2)+asin(1); // common tangent\\nv1 = sqrt(vx2*vx2+vy2*vy2);v2 = sqrt(vx4*vx4+vy4*vy4);w1 = atan2(vx2,vy2);w2 = atan2(vx4,vy4);\\nvx2 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx2);\\nvy2 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy2);\\nvx4 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx4);\\nvy4 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy4);\\nbounce = below( sqrt( sqr(x3+vx3-x4-vx4) + sqr(y3+vy3-y4-vy4)), 2*r);\\nref_ang = atan2(x4-x3,y4-y3)+asin(1); // common tangent\\nv1 = sqrt(vx3*vx3+vy3*vy3);v2 = sqrt(vx4*vx4+vy4*vy4);w1 = atan2(vx3,vy3);w2 = atan2(vx4,vy4);\\nvx3 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx3);\\nvy3 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy3);\\nvx4 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx4);\\nvy4 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy4);\\n//pogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogo\\n\\nq1 = aspectx;\\nq2 = aspecty;\\nq3 = x1; q4 = y1; q5 = r*2;\\nq6 = x2; q7 = y2; q8 = r*2;\\nq9 = x3; q10 = y3; q11 = r*2;\\nq12 = x4; q13 = y4; q14 = r*2;\\nq15 = 0.5 + (q12-0.5)/aspecty;\\nq16 = 0.5 + (q13-0.5)/aspectx;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 8.0);\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = tmpvar_3.x;\\n  tmpvar_5.y = tmpvar_4.x;\\n  ret_1.x = texture (sampler_fc_main, (uv + ((tmpvar_5 * texsize.zw) * 4.0))).x;\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = tmpvar_3.y;\\n  tmpvar_6.y = tmpvar_4.y;\\n  ret_1.y = texture (sampler_fc_main, (uv + ((tmpvar_6 * texsize.zw) * 4.0))).y;\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = tmpvar_3.z;\\n  tmpvar_7.y = tmpvar_4.z;\\n  ret_1.z = texture (sampler_fc_main, (uv + ((tmpvar_7 * texsize.zw) * 4.0))).z;\\n  ret_1 = (ret_1 - ((ret_1.yzx + ret_1.zxy) - 0.001));\\n  ret_1 = (ret_1 + ((texture (sampler_noise_lq, \\n    (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 1.2)) + rand_frame.xy)\\n  ).xyz - 0.6) * 0.04));\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = ret_1;\\n  ret = tmpvar_8.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 2.0);\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = q15;\\n  tmpvar_5.y = (1.0 - q16);\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = tmpvar_3.y;\\n  tmpvar_6.y = tmpvar_4.y;\\n  vec2 x_7;\\n  x_7 = ((uv - (tmpvar_6 * 4.0)) - tmpvar_5);\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = tmpvar_3.x;\\n  tmpvar_8.y = tmpvar_4.x;\\n  vec2 x_9;\\n  x_9 = ((uv - (tmpvar_8 * 4.0)) - tmpvar_5);\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = tmpvar_3.z;\\n  tmpvar_10.y = tmpvar_4.z;\\n  vec2 x_11;\\n  x_11 = ((uv - (tmpvar_10 * 4.0)) - tmpvar_5);\\n  vec3 tmpvar_12;\\n  tmpvar_12.x = pow (sqrt(dot (x_9, x_9)), 0.2);\\n  tmpvar_12.y = pow (sqrt(dot (x_7, x_7)), 0.2);\\n  tmpvar_12.z = pow (sqrt(dot (x_11, x_11)), 0.2);\\n  ret_1 = (((1.0 - tmpvar_12) * texture (sampler_main, uv).xyz) * 2.0);\\n  vec2 x_13;\\n  x_13 = (uv - tmpvar_5);\\n  ret_1 = (ret_1 + clamp ((1.0 - \\n    (sqrt(dot (x_13, x_13)) * 32.0)\\n  ), 0.0, 1.0));\\n  vec4 tmpvar_14;\\n  tmpvar_14.w = 1.0;\\n  tmpvar_14.xyz = ret_1;\\n  ret = tmpvar_14.xyz;\\n }"}')},6998:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1,"decay":0.995,"echo_zoom":1.007,"echo_orient":3,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"wave_a":1.413,"wave_scale":0.418,"wave_smoothing":0,"wave_mystery":-0.66,"modwavealphastart":2,"modwavealphaend":2,"warpanimspeed":0.626,"warpscale":1.331,"zoom":0.99951,"warp":0.08925,"wave_r":0,"wave_g":0,"wave_x":0.24,"wave_y":0.44,"ob_size":0.005,"ob_r":0.01,"ob_b":1,"ob_a":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":48,"rad":0.0277,"ang":6.03186,"tex_ang":6.03186,"tex_zoom":0.6839,"r2":1,"g2":0,"a2":1,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = q3;\\ny = q4;\\nrad = q5;\\n\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;\\n"},{"baseVals":{"enabled":1,"sides":48,"rad":0.0277,"ang":6.03186,"tex_ang":6.03186,"tex_zoom":0.6839,"r":0,"b":1,"g2":0,"b2":1,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = q6;\\ny = q7;\\nrad = q8;\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;\\n"},{"baseVals":{"enabled":1,"sides":48,"rad":0.0277,"ang":6.03186,"tex_ang":6.03186,"tex_zoom":0.6839,"r":0,"g":1,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = q9;\\ny = q10;\\nrad = q11;\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;\\n"},{"baseVals":{"sides":48,"additive":1,"thickoutline":1,"rad":0.0277,"ang":6.03186,"tex_ang":6.03186,"tex_zoom":0.6839,"r":0,"g":1,"a":0,"border_a":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = q12;\\ny = q13;\\nrad = q14;\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;\\n"}],"waves":[{"baseVals":{"thick":1,"additive":1,"scaling":2.0231,"smoothing":0,"r":0,"b":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"vol = bass*8 + mid*5 + treb*3;\\nm = m*0.97 + vol*0.08;\\nmonitor = vol;\\nbeat = above(vol,res)*above(vol,m)*above(vol,16);\\ndiff = (1-beat)*diff + beat*(vol-res);\\nres = beat*(vol + m*0.04) + (1-beat)*(res -  (0.1+diff*0.02)*60/fps);\\nres = max(0,res);\\n\\na = beat;","point_eqs_eel":"tt3 = tt3*0.6 + (value1)*1;\\ntt2 = tt2*0.7 + tt3*0.2;\\ntt1 = tt1*0.8 + tt2*0.1;\\nd = d*0.9 + tt1*0.2;\\n\\ny = 0.5 + d*sample*(1-sample)*2;\\nx =  -0.05 + sample*1.1;"},{"baseVals":{"spectrum":1,"g":0,"b":0,"enabled":0},"init_eqs_eel":"chance = 0;","frame_eqs_eel":"x = if(q9,q15,x);\\ny = if(q9,q16,y);\\nv = if(q9,q19,v);\\nw = if(q9,q20,w);\\n\\nref_w = if(q9, q10, ref_w);\\n\\nt1 = x;\\nt2 = y;\\nt3 = v;\\nt4 = w;\\nt5 = ref_w;\\n\\nt8 = 1;","point_eqs_eel":"x = t1 + sample*sin(t4)*t3*20;\\ny = t2 + sample*cos(t4)*t3*20;\\n\\nx = 0.5 + (x-0.5)/q1;\\ny = 0.5 + (y-0.5)/q2;"},{"baseVals":{"spectrum":1,"g":0,"b":0,"enabled":0},"init_eqs_eel":"chance = 0;","frame_eqs_eel":"x = if(q9,q15,x);\\ny = if(q9,q16,y);\\nv = if(q9,q19,v);\\nw = if(q9,q20,w);\\n\\nref_w = if(q9, q10, ref_w);\\n\\nt1 = x;\\nt2 = y;\\nt3 = v;\\nt4 = w;\\nt5 = ref_w;\\n\\nt8 = 1;","point_eqs_eel":"x = t1 + sample*sin(t5)*t3*20*cos(t4-t5);\\ny = t2 + sample*cos(t5)*t3*20*cos(t4-t5);\\n\\nx = 0.5 + (x-0.5)/q1;\\ny = 0.5 + (y-0.5)/q2;"},{"baseVals":{"spectrum":1,"g":0,"b":0,"enabled":0},"init_eqs_eel":"chance = 0;","frame_eqs_eel":"x = if(q9,q15,x);\\ny = if(q9,q16,y);\\nv = if(q9,q19,v);\\nw = if(q9,q20,w);\\n\\nref_w = if(q9, q10 + asin(1), ref_w);\\n\\nt1 = x;\\nt2 = y;\\nt3 = v;\\nt4 = w;\\nt5 = ref_w;\\n\\nt8 = 1;","point_eqs_eel":"x = t1 + sample*sin(t5)*t3*20*cos(t4-t5);\\ny = t2 + sample*cos(t5)*t3*20*cos(t4-t5);\\n\\nx = 0.5 + (x-0.5)/q1;\\ny = 0.5 + (y-0.5)/q2;"}],"init_eqs_eel":"x1 = 0.5;\\nx2 = 0.51;\\n\\ny2 = 0.9;\\ny1 = 0.7;\\n\\nx3 = 0.8;\\ny3 = 0.5;\\n\\nx4 = 0.2;\\ny4 = 0.5;\\n\\n\\nax1 = 0;\\nay1 = 0;\\nax2 = 0;\\nay2 = 0;\\nax3 = 0;\\nay3 = 0;\\n\\nvx1 = 0.000;\\nvx2 = 0.000;","frame_eqs_eel":"zoom = 1;\\nwarp = 0;\\nwave_a = 0;\\n\\n//pogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogo\\nr = 0.04+ max(bass_att,treb_att)*0.004;\\nbounce = below(y1,r);y1 = y1+vy1;vy1 = if(bounce, abs(vy1)*0.94 + (r-y1)*0.1, vy1-0.0003*60/fps);\\nbounce = below(x1,r);x1 = x1+vx1;vx1 = if(bounce, abs(vx1)*0.94 + (r-x1)*0.1, vx1);\\nbounce = above(x1,1-r);vx1 = if(bounce, - abs(vx1)*0.94 + (1-r-x1)*0.04, vx1);\\nbounce = below(y2,r);y2 = y2 + vy2;vy2 = if(bounce,abs(vy2)*0.94+(r-y2)*.1, vy2-0.0003*60/fps);\\nbounce = below(x2,r);x2 = x2+ vx2;vx2 = if(bounce, abs(vx2)*0.94 + (r-x2)*0.1, vx2);\\nbounce = above(x2,1-r);vx2 = if(bounce, - abs(vx2)*0.94 + (1-r-x2)*0.1, vx2);\\nbounce = below(y3,r);y3 = y3 + vy3;vy3 = if(bounce,abs(vy3)*0.94+(r-y3)*.1, vy3-0.0003*60/fps);\\nbounce = below(x3,r);x3 = x3+ vx3;vx3 = if(bounce, abs(vx3)*0.94 + (r-x3)*0.1, vx3);\\nbounce = above(x3,1-r);vx3 = if(bounce, - abs(vx3)*0.94 + (1-r-x3)*0.1, vx3);\\nbounce = below(y4,r);y4 = y4 + vy4;vy4 = if(bounce,abs(vy4)*0.94+(r-y4)*.1, vy4-0.0003*60/fps);\\nbounce = below(x4,r);x4 = x4+ vx4;vx4 = if(bounce, abs(vx4)*0.94 + (r-x4)*0.1, vx4);\\nbounce = above(x4,1-r);vx4 = if(bounce, - abs(vx4)*0.94 + (1-r-x4)*0.1, vx4);\\nbounce = below( sqrt( sqr(x1+vx1-x2-vx2) + sqr(y1+vy1-y2-vy2)), 2*r);\\nref_ang = atan2(x2-x1,y2-y1)+asin(1); // common tangent\\nv1 = sqrt(vx1*vx1+vy1*vy1);v2 = sqrt(vx2*vx2+vy2*vy2);w1 = atan2(vx1,vy1);w2 = atan2(vx2,vy2);\\nvx1 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx1);\\nvy1 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy1);\\nvx2 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx2);\\nvy2 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy2);\\nbounce = below( sqrt( sqr(x1+vx1-x3-vx3) + sqr(y1+vy1-y3-vy3)), 2*r);\\nref_ang = atan2(x3-x1,y3-y1)+asin(1); // common tangent\\nv1 = sqrt(vx1*vx1+vy1*vy1);v2 = sqrt(vx3*vx3+vy3*vy3);w1 = atan2(vx1,vy1);w2 = atan2(vx3,vy3);\\nvx1 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx1);\\nvy1 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy1);\\nvx3 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx3);\\nvy3 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy3);\\nbounce = below( sqrt( sqr(x2+vx2-x3-vx3) + sqr(y2+vy2-y3-vy3)), 2*r);\\nref_ang = atan2(x3-x2,y3-y2)+asin(1); // common tangent\\nv1 = sqrt(vx2*vx2+vy2*vy2);v2 = sqrt(vx3*vx3+vy3*vy3);w1 = atan2(vx2,vy2);w2 = atan2(vx3,vy3);\\nvx2 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx2);\\nvy2 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy2);\\nvx3 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx3);\\nvy3 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy3);\\nbounce = below( sqrt( sqr(x1+vx1-x4-vx4) + sqr(y1+vy1-y4-vy4)), 2*r);\\nref_ang = atan2(x4-x1,y4-y1)+asin(1); // common tangent\\nv1 = sqrt(vx1*vx1+vy1*vy1);v2 = sqrt(vx4*vx4+vy4*vy4);w1 = atan2(vx1,vy1);w2 = atan2(vx4,vy4);\\nvx1 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx1);\\nvy1 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy1);\\nvx4 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx4);\\nvy4 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy4);\\nbounce = below( sqrt( sqr(x2+vx2-x4-vx4) + sqr(y2+vy2-y4-vy4)), 2*r);\\nref_ang = atan2(x4-x2,y4-y2)+asin(1); // common tangent\\nv1 = sqrt(vx2*vx2+vy2*vy2);v2 = sqrt(vx4*vx4+vy4*vy4);w1 = atan2(vx2,vy2);w2 = atan2(vx4,vy4);\\nvx2 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx2);\\nvy2 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy2);\\nvx4 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx4);\\nvy4 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy4);\\nbounce = below( sqrt( sqr(x3+vx3-x4-vx4) + sqr(y3+vy3-y4-vy4)), 2*r);\\nref_ang = atan2(x4-x3,y4-y3)+asin(1); // common tangent\\nv1 = sqrt(vx3*vx3+vy3*vy3);v2 = sqrt(vx4*vx4+vy4*vy4);w1 = atan2(vx3,vy3);w2 = atan2(vx4,vy4);\\nvx3 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx3);\\nvy3 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy3);\\nvx4 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx4);\\nvy4 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy4);\\n//pogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogo\\n\\nq1 = aspectx;\\nq2 = aspecty;\\nq3 = x1; q4 = y1; q5 = r*2;\\nq6 = x2; q7 = y2; q8 = r*2;\\nq9 = x3; q10 = y3; q11 = r*2;\\nq12 = x4; q13 = y4; q14 = r*2;\\nq15 = atan2(vx4,vy4);\\nq16 = sqrt(vx4*vx4+vy4*vy4);","pixel_eqs_eel":"x = 0.5 + (x-0.5)*q2;\\ny = 0.5 + (y-0.5)*q1;\\n\\n\\ndir = -q15 + asin(1);\\nb1 = 0.075;\\nm1 = q16*25;\\nxx = q12;\\nyy = 1-q13;\\nx1 = xx  -sin(dir)*b1;\\ny1 = yy  -cos(dir)*b1;\\nx2 = xx  +sin(dir)*b1;\\ny2 = yy  +cos(dir)*b1;\\nd1 = sqrt((x1-x)*(x1-x)+(y1-y)*(y1-y))-b1*2;\\nd2 = sqrt((x2-x)*(x2-x)+(y2-y)*(y2-y))-b1*2;\\nsi1 = sigmoid(-d1,1000);\\nsi2 = sigmoid(-d2,1000);\\ndx = (si1*sin(y1-y)*m1*d1  - si2*sin(y2-y)*m1*d2)*3*q1;\\ndy = (-si1*sin(x1-x)*m1*d1 + si2*sin(x2-x)*m1*d2)*3*q2;","warp":" shader_body { \\n  float conway_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = (((\\n    ((texture (sampler_blur2, (uv + vec2(0.02, 0.0))).xyz * scale2) + bias2)\\n   - \\n    ((texture (sampler_blur2, (uv - vec2(0.02, 0.0))).xyz * scale2) + bias2)\\n  ).y * 1280.0) * texsize.z);\\n  tmpvar_3.y = (((\\n    ((texture (sampler_blur2, (uv + vec2(0.0, 0.02))).xyz * scale2) + bias2)\\n   - \\n    ((texture (sampler_blur2, (uv - vec2(0.0, 0.02))).xyz * scale2) + bias2)\\n  ).y * 1024.0) * texsize.w);\\n  ret_2.y = texture (sampler_pc_main, (uv - (tmpvar_3 * 0.004))).y;\\n  ret_2.y = (ret_2.y + ((\\n    ((ret_2.y - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).y) - 0.1)\\n   * 0.1) + 0.02));\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (vec2(0.0, 1.0) * texsize.zw);\\n  ret_2.z = (texture (sampler_fc_main, (uv - tmpvar_4)).z - 0.004);\\n  conway_1 = (texture (sampler_pw_main, (uv_orig - texsize.zw)).x + texture (sampler_pw_main, (uv_orig + (vec2(0.0, -1.0) * texsize.zw))).x);\\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(1.0, -1.0) * texsize.zw))).x);\\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(-1.0, 0.0) * texsize.zw))).x);\\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(1.0, 0.0) * texsize.zw))).x);\\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(-1.0, 1.0) * texsize.zw))).x);\\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + tmpvar_4)).x);\\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + texsize.zw)).x);\\n  conway_1 = (conway_1 - fract(conway_1));\\n  float tmpvar_5;\\n  tmpvar_5 = clamp (texture (sampler_pc_main, uv_orig).x, 0.0, 1.0);\\n  ret_2.x = (clamp ((1.0 - \\n    abs((conway_1 - 3.0))\\n  ), 0.0, 1.0) * (1.0 - tmpvar_5));\\n  ret_2.x = (ret_2.x + (clamp (\\n    max ((1.0 - abs((conway_1 - 2.0))), (1.0 - abs((conway_1 - 3.0))))\\n  , 0.0, 1.0) * tmpvar_5));\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = ret_2;\\n  ret = tmpvar_6.xyz;\\n }","comp":" shader_body { \\n  vec2 moebius_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = q11;\\n  tmpvar_3.y = q12;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = q17;\\n  tmpvar_4.y = q18;\\n  vec2 tmpvar_5;\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv - 0.5);\\n  tmpvar_5 = (tmpvar_6 * aspect.xy);\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = ((tmpvar_5.x * q15) - (tmpvar_5.y * q16));\\n  tmpvar_7.y = ((tmpvar_5.x * q16) - (tmpvar_5.y * q15));\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (tmpvar_7 + tmpvar_4);\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = ((q13 * tmpvar_8.x) + (q14 * tmpvar_8.y));\\n  tmpvar_9.y = ((q14 * tmpvar_8.x) - (q13 * tmpvar_8.y));\\n  moebius_1 = (((tmpvar_9 / \\n    ((tmpvar_8.x * tmpvar_8.x) + (tmpvar_8.y * tmpvar_8.y))\\n  ) + tmpvar_3) * 0.5);\\n  float tmpvar_10;\\n  tmpvar_10 = sqrt(dot (moebius_1, moebius_1));\\n  moebius_1 = (0.5 + ((\\n    (1.0 - abs(((\\n      fract((moebius_1 * 0.5))\\n     * 2.0) - 1.0)))\\n   - 0.5) * 0.95));\\n  vec2 tmpvar_11;\\n  tmpvar_11 = (0.5 + (tmpvar_6 * 0.2));\\n  ret_2 = (texture (sampler_main, tmpvar_11).z * vec3(0.4, 0.0, 0.7));\\n  ret_2 = (mix (ret_2, vec3(0.0, 1.0, 1.0), vec3(clamp (texture (sampler_fc_main, moebius_1).y, 0.0, 1.0))) * (1.4 - pow (\\n    (tmpvar_10 * 0.8)\\n  , 0.3)));\\n  ret_2 = (mix (mix (\\n    mix (ret_2, vec3(4.0, 1.0, 0.0), vec3(((clamp (\\n      (texture (sampler_fc_main, tmpvar_11).y - texture (sampler_pc_main, tmpvar_11).y)\\n    , 0.0, 1.0) * 4.0) * (tmpvar_10 * tmpvar_10))))\\n  , vec3(-4.0, -4.0, -4.0), texture (sampler_main, tmpvar_11).xxx), vec3(2.0, 2.0, 2.0), vec3((texture (sampler_pc_main, tmpvar_11).x * 0.75))) - (roam_sin.zyx * roam_cos.ywx));\\n  vec4 tmpvar_12;\\n  tmpvar_12.w = 1.0;\\n  tmpvar_12.xyz = ret_2;\\n  ret = tmpvar_12.xyz;\\n }"}')},1229:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"wave_mode":6,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":0.004,"wave_scale":1.666,"wave_smoothing":0.81,"modwavealphastart":1.4,"modwavealphaend":1.4,"zoomexp":3.04777,"zoom":1.0173,"warp":0.01605,"ob_size":0.005,"ob_a":1,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":24,"additive":1,"num_inst":3,"x":0.48,"rad":0.01,"tex_zoom":4.36077,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = rand(1000)/1000;\\ny = rand(1000)/1000;\\n\\nr = rand(1200)/1000;\\ng = rand(1200)/1000;\\nb = rand(1200)/1000;\\n\\nr2 = r;\\ng2 = g;\\nb2 = b;"},{"baseVals":{"sides":5,"textured":1,"rad":0.986,"tex_ang":3.14159,"tex_zoom":0.99979,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ang =sin(time/65) ;// ang + (bass*.2) + (time*.4);"},{"baseVals":{"sides":100,"textured":1,"x":0.9,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = sin(time) * .4 + .5;\\n\\n"},{"baseVals":{"sides":36,"textured":1,"rad":0.63647,"tex_zoom":1.5339,"r2":1,"g2":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"thick":1,"additive":1,"r":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"q1 = below(rand(100),4 + 10*(treb+mid+bass));","point_eqs_eel":"it = (it + 1)*above(sample,0)*below(it,53);\\nita = (ita + equal(it,0))*above(sample,0);\\n\\nsw = 1-equal(it,0)*equal(ita,0);\\nswi = (equal(lr,9) + equal(lr,5))*equal(it,0)*equal(ita,4);\\nxv = if(sw - swi,xv,rand(1001)*.001*.8);\\nmx = xv + ita*.025;\\nmy = if(sw - swi,my,rand(1001)*.001*.975);\\n\\nsz = .01;\\nvx = above(it,1)*below(it,39) + above(it,12)*below(it,28) - equal(it,20) + equal(it,46) + equal(it,51) + equal(it,41) - equal(it,15) - equal(it,25) + equal(it,10) + equal(it,30) - equal(it,4) - equal(it,36);\\nvy = above(it,17)*below(it,49) + above(it,22)*below(it,44) - equal(it,33) + equal(it,7) + equal(it,51) + equal(it,15) - equal(it,41) - equal(it,25) + equal(it,4) + equal(it,10) - equal(it,36) - equal(it,30);\\n\\nsa = equal(ita,0)*13 + equal(ita,1)*9 + equal(ita,2)*12 + equal(ita,3)*11 + equal(ita,4)*4 + equal(ita,5)*18 + equal(ita,6)*15 + equal(ita,7)*16;\\nsb = equal(ita,0)*11 + equal(ita,1)*9 + equal(ita,2)*12 + equal(ita,3)*12;\\nsc = equal(ita,0)*4 + equal(ita,1)*15 + equal(ita,3)*4 + equal(ita,4)*18 + equal(ita,5)*21 + equal(ita,6)*7 + equal(ita,7)*19;\\nsd = equal(ita,0)*12 + equal(ita,1)*15 + equal(ita,2)*22 + equal(ita,3)*5;\\nse = equal(ita,0)*8 + equal(ita,1)*1 + equal(ita,2)*20 + equal(ita,3)*5;\\nsf = equal(ita,0)*6 + equal(ita,1)*5 + equal(ita,2)*1 + equal(ita,3)*18 + equal(ita,5)*10 + equal(ita,6)*15 + equal(ita,7)*25;\\nsg = equal(ita,0)*1 + equal(ita,1)*14 + equal(ita,2)*7 + equal(ita,3)*5 + equal(ita,4)*18;\\nsh = equal(ita,0)*19 + equal(ita,1)*21 + equal(ita,2)*18 + equal(ita,3)*16 + equal(ita,4)*18 + equal(ita,5)*9 + equal(ita,6)*19 + equal(ita,7)*5;\\nsi = equal(ita,0)*8 + equal(ita,1)*1 + equal(ita,2)*16 + equal(ita,3)*16 + equal(ita,4)*25;\\nsj = equal(ita,0)*25 + equal(ita,1)*5 + equal(ita,2)*19 + equal(ita,6)*14 + equal(ita,7)*15;\\n\\nlr = if(sw,lr,rand(10));\\nlet = equal(lr,0)*sa + equal(lr,1)*sb + equal(lr,2)*sc + equal(lr,3)*sd + equal(lr,4)*se + equal(lr,5)*sf + equal(lr,6)*sg + equal(lr,7)*sh + equal(lr,8)*si + equal(lr,9)*sj;\\n\\nva = equal(let,23) + equal(let,24) + equal(let,26);\\nvb = above(let,0)*below(let,9) + above(let,10)*below(let,19) + equal(let,21) + equal(let,23);\\nvc = equal(let,1) + equal(let,2) + equal(let,5) + equal(let,6) + equal(let,8) + equal(let,11) + equal(let,16) + equal(let,18) + equal(let,19);\\nvd = above(let,1)*below(let,9) + above(let,10)*below(let,24) - equal(let,20);\\nve = equal(let,13) + equal(let,14) + equal(let,24) + equal(let,25);\\nvf = above(let,1)*below(let,8) + equal(let,9) + above(let,14)*below(let,21) + equal(let,26);\\nvg = equal(let,1);\\nvh = equal(let,9) + equal(let,20);\\nvi = above(let,0)*below(let,5) - equal(let,3) + equal(let,18);\\nvj = above(let,2)*below(let,8) - equal(let,4) + equal(let,9) + above(let,14)*below(let,21) - equal(let,18) + equal(let,26);\\nvk = equal(let,11) + equal(let,13) + above(let,23)*below(let,27);\\nvl = equal(let,8) + equal(let,10) + above(let,12)*below(let,18) + above(let,20)*below(let,24);\\nvm = equal(let,1) + equal(let,2) + equal(let,8) + equal(let,16) + equal(let,18) + equal(let,19);\\nvn = equal(let,1) + equal(let,7) + equal(let,8) + equal(let,10) + above(let,12)*below(let,24) - equal(let,16) - equal(let,18) - equal(let,20) - equal(let,22);\\nvo = equal(let,11) + equal(let,14) + equal(let,17) + equal(let,18) + equal(let,23) + equal(let,24);\\nvp = equal(let,3) + equal(let,5) + equal(let,7) + equal(let,9) + equal(let,10) + equal(let,12) + equal(let,15) + equal(let,17) + equal(let,19) + equal(let,21) + equal(let,26);\\nvq = equal(let,2) + equal(let,4) + equal(let,22);\\nvr = equal(let,9) + equal(let,20) + equal(let,25);\\nvs = equal(let,22);\\nvt = above(let,1)*below(let,13) - equal(let,6) - equal(let,8) - equal(let,11) + equal(let,15) + equal(let,17) + equal(let,19) + equal(let,21) + equal(let,26);\\n\\na = if(above(it,51),0,if(above(it,49),va,if(above(it,47),vb,if(above(it,44),vc,if(above(it,42),vd,if(above(it,39),ve, if(above(it,37),vf,if(above(it,34),vg,if(above(it,31),vh,if(above(it,28),vi,if(above(it,26),vj,if(above(it,23),vk, if(above(it,21),vl,if(above(it,18),vm,if(above(it,16),vn,if(above(it,13),vo,if(above(it,11),vp,if(above(it,8),vq, if(above(it,5),vr,if(above(it,2),vs,if(it,vt,0)))))))))))))))))))));\\n\\na = a*below(ita,8)*q1;\\n\\nx = mx + vx*sz*.75;\\ny = my + vy*sz*1.5;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"vol = bass*8 + mid*5 + treb*3;\\nm = m*0.97 + vol*0.08;\\nmonitor = vol;\\nbeat = above(vol,res)*above(vol,m)*above(vol,16);\\ndiff = (1-beat)*diff + beat*(vol-res);\\nres = beat*(vol + m*0.1) + (1-beat)*(res -  (0.1+diff*0.02)*60/fps);\\nres = max(0,res);\\n\\n\\nd_x = if(beat, (rand(2000)-1000)*0.001 , d_x);\\nd_y = if(beat, (rand(2000)-1000)*0.001 , d_y);\\nr = if(beat, (rand(2000)-1000)*0.001 , r);\\nz = if(beat, rand(1000)*0.001 , z);\\nzoom = 1.01 + z*0.03;\\nrot = r*0.04;\\ndx = d_x*0.01;\\ndy = d_y*0.01;\\n\\nwave_a = beat;\\n\\n// nice random hue-fade\\nrr = rr + (rand(100)-50)/1000;\\ngg = gg + (rand(100)-50)/1000;\\nbb = bb + (rand(100)-50)/1000;\\nrr = max(0, min( 1, rr));\\ngg = max(0, min( 1, gg));\\nbb = max(0, min( 1, bb));\\nmx = max(max(rr,gg),bb);\\nmn = min(min(rr,gg),bb);\\nr = (rr-mn)/(mx-mn);\\ng = (gg-mn)/(mx-mn);\\nb = (bb-mn)/(mx-mn);\\n\\n\\nwave_r = r;\\nwave_g = g;\\nwave_b = b;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = mix (uv_orig, uv, vec2(0.2, 0.2));\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 4.0);\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = dot (((\\n    (texture (sampler_blur1, (tmpvar_1 + (vec2(1.0, 0.0) * tmpvar_2))).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (tmpvar_1 - (vec2(1.0, 0.0) * tmpvar_2))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  tmpvar_3.y = dot (((\\n    (texture (sampler_blur1, (tmpvar_1 + (vec2(0.0, 1.0) * tmpvar_2))).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (tmpvar_1 - (vec2(0.0, 1.0) * tmpvar_2))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = (texture (sampler_fc_main, (tmpvar_1 + (\\n    (tmpvar_3 * texsize.zw)\\n   * 4.0))) - 0.01).xyz;\\n  ret = tmpvar_4.xyz;\\n }","comp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = (texsize.zw * 4.0);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = (pow ((\\n    (abs(((\\n      ((texture (sampler_blur3, uv).xyz * scale3) + bias3)\\n     * 2.0) - texture (sampler_main, uv).xyz)) * 1.8)\\n   + 0.12), vec3(1.8, 1.8, 1.8)) * ((\\n    dot ((((\\n      (texture (sampler_blur2, (uv + (vec2(1.0, 0.0) * tmpvar_1))).xyz * scale2)\\n     + bias2) - (\\n      (texture (sampler_blur2, (uv - (vec2(1.0, 0.0) * tmpvar_1))).xyz * scale2)\\n     + bias2)) + ((\\n      (texture (sampler_blur2, (uv + (vec2(0.0, 1.0) * tmpvar_1))).xyz * scale2)\\n     + bias2) - (\\n      (texture (sampler_blur2, (uv - (vec2(0.0, 1.0) * tmpvar_1))).xyz * scale2)\\n     + bias2))), vec3(0.32, 0.49, 0.29))\\n   * 4.0) + 1.0));\\n  ret = tmpvar_2.xyz;\\n }"}')},8685:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":2,"gammaadj":1,"decay":1,"echo_orient":1,"additivewave":1,"modwavealphabyvolume":1,"wave_a":0.009,"wave_scale":2.713,"wave_smoothing":0,"modwavealphastart":1.2,"modwavealphaend":1.2,"warpanimspeed":0.204,"warpscale":8.471,"zoom":0.99951,"warp":0.15038,"wave_r":0.44,"wave_g":0.4,"ob_size":0.005,"ob_r":0.01,"ob_a":1,"ib_size":0.26,"mv_x":44.16,"mv_y":33.6,"mv_l":0.5,"mv_g":0,"mv_b":0,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"sides":3,"additive":1,"x":0.67,"y":0.53,"rad":0.17457,"ang":0.25133,"tex_ang":3.14159,"tex_zoom":0.99979,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_g":0.5,"border_b":0.15,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":23,"additive":1,"num_inst":817,"rad":0.02798,"tex_ang":3.14159,"tex_zoom":0.99979,"g":1,"b":1,"a":0.41,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"textured":1,"x":0.9,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = sin(time) * .4 + .5;\\n\\n\\npow( (bass*.15),2);"},{"baseVals":{"sides":36,"additive":1,"rad":0.81623,"r":0,"g":0.04,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = 1-q1;\\ny = q2;\\nx = 0.5 + (x - 0.5)*0.25;\\ny = 0.5 + (y - 0.5)*0.25;"}],"waves":[{"baseVals":{"enabled":1,"sep":4,"spectrum":1,"thick":1,"additive":1,"scaling":100,"smoothing":0,"r":0.05,"g":0.15},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\nab = 1;","frame_eqs_eel":"// parameters\\nw = time*0.5; // rotation (0..2Pi)\\nt1 = 0.5; // center for rotation (x)\\nt2 = 0.5; // center for rotation (y)\\nt3 = 1; // scale\\nt4 = 0; // translation (x)\\nt5 = 0; // translation (y)\\nt6 = sin(w);\\nt7 = cos(w);","point_eqs_eel":"xx = if(equal(sample,0),q3,xx);\\nyy = if(equal(sample,0),q4,yy);\\n\\n\\ndx = xx*(1-xx)-q5*xx*yy/(xx+q6);\\ndy = q7*yy*(1-yy/xx);\\n\\nx1 = xx;\\ny1 = yy;\\n\\nxx = xx+dx*0.2;\\nyy = yy+dy*0.2;\\n\\nx1 = 0.5+(x1-0.5)/q1 + dy*value1*0.01;\\ny1 = 0.5+(y1-0.5)/q2 - dx*value1*0.01;\\n\\n\\n// synchronized affine transformation\\nx = q26 + ((x1-q26)*q32 + (y1-q27)*q31)*q28 + q29;\\ny = q27 + (-(x1-q26)*q31 + (y1-q27)*q32)*q28 + q30;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"xx1 = if(equal(sample,0),q11,xx1);\\nyy1 = if(equal(sample,0),q12,yy1);\\nzz1 = if(equal(sample,0),q13,zz1);\\n\\ndx1 = q14*(yy1-xx1);\\ndy1 = xx1*(q15-zz1)-yy1;\\ndz1 = xx1*yy1-q16*zz1;\\nxx1 = xx1 + q17*dx1;\\nyy1 = yy1 + q17*dy1;\\nzz1 = zz1 + q17*dz1;\\n\\nmy_x = xx1*0.02;\\nmy_y = yy1*0.02;\\nmy_z = zz1*0.02;\\n\\nx = 0.5 + my_x;\\ny = 0.5 + my_y;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"x1 = 0;\\ny1= .001;\\nz1 = 0;","frame_eqs_eel":"zoom = 1;\\nwarp = 0;\\nwave_a = 0;\\n\\n\\n// below parameters belong to an extended \\"Lotka-Volterra\\" model (simple predator-prey differential equation system - see wikipedia)\\n\\nstartx = 0.7; // initial predator population (used only for the phase plot)\\nstarty = 0.7; // initial prey population\\n\\na = 1.0; // LV-model parameters - some pairs reach a so-called limit-cycle\\nb = 0.14;\\nd = 0.2;\\n\\nq1 = aspectx;\\nq2 = aspecty;\\n\\nq3 = startx;\\nq4 = starty;\\n\\nq5 = a; // the model parameters are synchronized for the phase plot wave and the per-vertex warp\\nq6 = b;\\nq7 = d;\\n\\n\\nvol = bass*8 + mid*5 + treb*3;\\nm = m*0.97 + vol*0.08;\\nmonitor = vol;\\nbeat = above(vol,res)*above(vol,m)*above(vol,16);\\ndiff = (1-beat)*diff + beat*(vol-res);\\nres = beat*(vol + m*0.04) + (1-beat)*(res -  (0.1+diff*0.02)*60/fps);\\nres = max(0,res);\\n\\nw = if(beat,rand(3.14*2),w);\\nx = if(beat,rand(1),x);\\ny = if(beat,rand(1),y);\\n\\n// below parameters belong to a synchronized affine transformation for waves and the per-vertex code (rotate, scale, translate)\\n\\nq26 = 0.5*x; // center for rotation and scaling (x)\\nq27 = 0.5*y; // center for rotation and scaling (y)\\nq28 = 1; // scale\\nq29 = 0.4; // translate x\\nq30 = 0.1; // translate y\\nq31 = sin(w);\\nq32 = cos(w);\\nq25 = w;\\n// TODO: compensate parameter changes for an invariant canvas pane via difference quotients ;)\\n\\n// integration\\nbb = bb*0.98 + bass*0.5;\\nmm = mm*0.98 + mid*0.5;\\ntt = tt*0.98 + treb*0.5;\\n\\n// normalization\\nmx = max(max(bb,mm),tt);\\nmn = min(min(bb,mm),tt);\\n\\nh1 = (bb-mn)/(mx-mn);\\nh2 = (mm-mn)/(mx-mn);\\nh3 = (tt-mn)/(mx-mn);\\n\\n// integration again (for constant change in one variable)\\nv = 0.1/fps;\\nbm = bm + (h1-h2)*v;\\nmt = mt + (h2-h3)*v;\\nbt = bt + (h1-h3)*v;\\n\\n// emit\\nq10 = bm;\\nq11 = mt;\\nq12 = bt;\\nv = bm;\\nq13 = sin(v);\\nq14 = cos(v);","pixel_eqs_eel":"x = 0.5 + (x-0.5)*q1;\\ny = 0.5 - (y-0.5)*q2;\\n\\nx = q26 + (x-q26)/q28 - q29;\\ny = q27 + (y-q27)/q28 - q30;\\n\\n// have a nice warp effect? - rotate it like a shape!\\n\\n  angle = -q25;\\n\\n/////////////////////////////////////////////////////////\\nX1 = x - q26;\\nY1 = y - q27;\\nx = q26 + cos(-angle)*X1 -sin(-angle)*Y1; // rotate the x/y pane\\ny = q27 + sin(-angle)*X1 +cos(-angle)*Y1;\\n/////////////////////////////////////////////////////////\\n\\n\\ndx = x*(1-x)-q5*x*y/(x+q6);\\ndy = -q7*y*(1-y/x);\\n\\ndx = -0.01*dx/q1;\\ndy = -0.01*dy/q2;\\n\\n\\n//dx = 0;\\n//dy = 0;\\n\\n/////////////////////////////////////////////////////////\\ndx1 = cos(angle)*dx - sin(angle)*dy; // and finally the dx/dy pane is rotated to match the x/y pane\\ndy1 = sin(angle)*dx + cos(angle)*dy;\\ndx = dx1*aspectx;\\ndy = dy1*aspecty;\\n/////////////////////////////////////////////////////////","warp":" shader_body { \\n  vec3 ret_1;\\n  ret_1.z = (texture (sampler_main, uv).z * 0.5);\\n  vec2 tmpvar_2;\\n  tmpvar_2 = ((uv_orig * texsize.xy) * texsize_noise_lq.zw);\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (texsize.zw * 4.0);\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = (((2.0 * \\n    ((texture (sampler_blur1, (uv_orig + (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv_orig - (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1) + bias1)\\n  )).y * 0.5);\\n  tmpvar_4.y = (((2.0 * \\n    ((texture (sampler_blur1, (uv_orig + (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv_orig - (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1) + bias1)\\n  )).y * 0.5);\\n  ret_1.y = texture (sampler_fw_main, clamp ((uv_orig + (\\n    (tmpvar_4 * texsize.zw)\\n   * 4.0)), 0.0, 1.0)).y;\\n  ret_1.y = (ret_1.y + ((\\n    (ret_1 - ((texture (sampler_blur1, uv_orig).xyz * scale1) + bias1))\\n  .y * 0.025) + -0.014));\\n  ret_1.y = (ret_1.y + ((texture (sampler_noise_lq, tmpvar_2).y - 0.5) * 0.02));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = (((2.0 * \\n    ((texture (sampler_blur1, (uv_orig + (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv_orig - (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1) + bias1)\\n  )).x * 0.5);\\n  tmpvar_5.y = (((2.0 * \\n    ((texture (sampler_blur1, (uv_orig + (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv_orig - (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1) + bias1)\\n  )).x * 0.5);\\n  ret_1.x = ((texture (sampler_main, (uv - \\n    ((tmpvar_5 * texsize.zw) * 4.0)\\n  )).x - (ret_1.y * 0.01)) + 0.004);\\n  ret_1.x = (ret_1.x + ((\\n    (texture (sampler_noise_lq, tmpvar_2).x - 0.5)\\n   * 0.01) + (ret_1.z * 0.14)));\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = ret_1;\\n  ret = tmpvar_6.xyz;\\n }","comp":" shader_body { \\n  vec2 uv_1;\\n  vec2 mirror_uv_2;\\n  vec2 rotate_uv_3;\\n  vec3 ret_4;\\n  uv_1 = (0.5 + ((uv - 0.5) * 1.5));\\n  vec2 tmpvar_5;\\n  tmpvar_5 = ((uv_1 - 0.5) * aspect.xy);\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = ((q14 * tmpvar_5.x) - (q13 * tmpvar_5.y));\\n  tmpvar_6.y = ((q13 * tmpvar_5.x) + (q14 * tmpvar_5.y));\\n  vec2 tmpvar_7;\\n  tmpvar_7 = (0.5 + (tmpvar_6 * 2.0));\\n  rotate_uv_3 = tmpvar_7;\\n  vec2 numerator_8;\\n  numerator_8 = (tmpvar_7 - vec2(0.0, 0.5));\\n  vec2 denominator_9;\\n  denominator_9 = (tmpvar_7 - vec2(1.0, 0.5));\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = ((numerator_8.x * denominator_9.x) + (numerator_8.y * denominator_9.y));\\n  tmpvar_10.y = ((numerator_8.y * denominator_9.x) - (numerator_8.x * denominator_9.y));\\n  vec2 tmpvar_11;\\n  tmpvar_11 = (((tmpvar_10 / \\n    ((denominator_9.x * denominator_9.x) + (denominator_9.y * denominator_9.y))\\n  ) + 0.5) - vec2(0.5, 0.5));\\n  float tmpvar_12;\\n  tmpvar_12 = sqrt(dot (tmpvar_11, tmpvar_11));\\n  float tmpvar_13;\\n  float tmpvar_14;\\n  tmpvar_14 = (min (abs(\\n    (tmpvar_11.x / tmpvar_11.y)\\n  ), 1.0) / max (abs(\\n    (tmpvar_11.x / tmpvar_11.y)\\n  ), 1.0));\\n  float tmpvar_15;\\n  tmpvar_15 = (tmpvar_14 * tmpvar_14);\\n  tmpvar_15 = (((\\n    ((((\\n      ((((-0.01213232 * tmpvar_15) + 0.05368138) * tmpvar_15) - 0.1173503)\\n     * tmpvar_15) + 0.1938925) * tmpvar_15) - 0.3326756)\\n   * tmpvar_15) + 0.9999793) * tmpvar_14);\\n  tmpvar_15 = (tmpvar_15 + (float(\\n    (abs((tmpvar_11.x / tmpvar_11.y)) > 1.0)\\n  ) * (\\n    (tmpvar_15 * -2.0)\\n   + 1.570796)));\\n  tmpvar_13 = (tmpvar_15 * sign((tmpvar_11.x / tmpvar_11.y)));\\n  if ((abs(tmpvar_11.y) > (1e-08 * abs(tmpvar_11.x)))) {\\n    if ((tmpvar_11.y < 0.0)) {\\n      if ((tmpvar_11.x >= 0.0)) {\\n        tmpvar_13 += 3.141593;\\n      } else {\\n        tmpvar_13 = (tmpvar_13 - 3.141593);\\n      };\\n    };\\n  } else {\\n    tmpvar_13 = (sign(tmpvar_11.x) * 1.570796);\\n  };\\n  vec2 tmpvar_16;\\n  tmpvar_16.x = (tmpvar_13 * 0.1591549);\\n  tmpvar_16.y = tmpvar_12;\\n  vec2 tmpvar_17;\\n  tmpvar_17.x = ((tmpvar_16.x * 2.0) + q11);\\n  tmpvar_17.y = ((0.35 * log(tmpvar_12)) + q12);\\n  vec2 tmpvar_18;\\n  tmpvar_18 = (0.5 + (0.5 - abs(\\n    ((fract((tmpvar_17 * 0.5)) * 2.0) - 1.0)\\n  )));\\n  mirror_uv_2 = tmpvar_18;\\n  uv_1 = (0.5 + ((tmpvar_18 - 0.5) * 1.5));\\n  vec2 tmpvar_19;\\n  tmpvar_19 = (uv_1 - 0.5);\\n  vec2 tmpvar_20;\\n  tmpvar_20.x = ((q14 * tmpvar_19.x) - (q13 * tmpvar_19.y));\\n  tmpvar_20.y = ((q13 * tmpvar_19.x) + (q14 * tmpvar_19.y));\\n  rotate_uv_3 = (0.5 + (tmpvar_20 * 2.0));\\n  vec2 numerator_21;\\n  numerator_21 = (rotate_uv_3 - vec2(0.0, 0.5));\\n  vec2 denominator_22;\\n  denominator_22 = (rotate_uv_3 - vec2(1.0, 0.5));\\n  vec2 tmpvar_23;\\n  tmpvar_23.x = ((numerator_21.x * denominator_22.x) + (numerator_21.y * denominator_22.y));\\n  tmpvar_23.y = ((numerator_21.y * denominator_22.x) - (numerator_21.x * denominator_22.y));\\n  vec2 tmpvar_24;\\n  tmpvar_24 = (((tmpvar_23 / \\n    ((denominator_22.x * denominator_22.x) + (denominator_22.y * denominator_22.y))\\n  ) + 0.5) - vec2(0.5, 0.5));\\n  float tmpvar_25;\\n  tmpvar_25 = sqrt(dot (tmpvar_24, tmpvar_24));\\n  float tmpvar_26;\\n  float tmpvar_27;\\n  tmpvar_27 = (min (abs(\\n    (tmpvar_24.x / tmpvar_24.y)\\n  ), 1.0) / max (abs(\\n    (tmpvar_24.x / tmpvar_24.y)\\n  ), 1.0));\\n  float tmpvar_28;\\n  tmpvar_28 = (tmpvar_27 * tmpvar_27);\\n  tmpvar_28 = (((\\n    ((((\\n      ((((-0.01213232 * tmpvar_28) + 0.05368138) * tmpvar_28) - 0.1173503)\\n     * tmpvar_28) + 0.1938925) * tmpvar_28) - 0.3326756)\\n   * tmpvar_28) + 0.9999793) * tmpvar_27);\\n  tmpvar_28 = (tmpvar_28 + (float(\\n    (abs((tmpvar_24.x / tmpvar_24.y)) > 1.0)\\n  ) * (\\n    (tmpvar_28 * -2.0)\\n   + 1.570796)));\\n  tmpvar_26 = (tmpvar_28 * sign((tmpvar_24.x / tmpvar_24.y)));\\n  if ((abs(tmpvar_24.y) > (1e-08 * abs(tmpvar_24.x)))) {\\n    if ((tmpvar_24.y < 0.0)) {\\n      if ((tmpvar_24.x >= 0.0)) {\\n        tmpvar_26 += 3.141593;\\n      } else {\\n        tmpvar_26 = (tmpvar_26 - 3.141593);\\n      };\\n    };\\n  } else {\\n    tmpvar_26 = (sign(tmpvar_24.x) * 1.570796);\\n  };\\n  vec2 tmpvar_29;\\n  tmpvar_29.x = (tmpvar_26 * 0.1591549);\\n  tmpvar_29.y = tmpvar_25;\\n  vec2 tmpvar_30;\\n  tmpvar_30.x = ((tmpvar_29.x * 2.0) + q11);\\n  tmpvar_30.y = ((0.35 * log(tmpvar_25)) + q12);\\n  mirror_uv_2 = (0.5 + (0.5 - abs(\\n    ((fract((tmpvar_30 * 0.5)) * 2.0) - 1.0)\\n  )));\\n  uv_1 = (0.5 + ((mirror_uv_2 - 0.5) * 1.5));\\n  vec2 tmpvar_31;\\n  tmpvar_31 = (uv_1 - 0.5);\\n  vec2 tmpvar_32;\\n  tmpvar_32.x = ((q14 * tmpvar_31.x) - (q13 * tmpvar_31.y));\\n  tmpvar_32.y = ((q13 * tmpvar_31.x) + (q14 * tmpvar_31.y));\\n  rotate_uv_3 = (0.5 + (tmpvar_32 * 2.0));\\n  vec2 numerator_33;\\n  numerator_33 = (rotate_uv_3 - vec2(0.0, 0.5));\\n  vec2 denominator_34;\\n  denominator_34 = (rotate_uv_3 - vec2(1.0, 0.5));\\n  vec2 tmpvar_35;\\n  tmpvar_35.x = ((numerator_33.x * denominator_34.x) + (numerator_33.y * denominator_34.y));\\n  tmpvar_35.y = ((numerator_33.y * denominator_34.x) - (numerator_33.x * denominator_34.y));\\n  vec2 tmpvar_36;\\n  tmpvar_36 = (((tmpvar_35 / \\n    ((denominator_34.x * denominator_34.x) + (denominator_34.y * denominator_34.y))\\n  ) + 0.5) - vec2(0.5, 0.5));\\n  float tmpvar_37;\\n  tmpvar_37 = sqrt(dot (tmpvar_36, tmpvar_36));\\n  float tmpvar_38;\\n  float tmpvar_39;\\n  tmpvar_39 = (min (abs(\\n    (tmpvar_36.x / tmpvar_36.y)\\n  ), 1.0) / max (abs(\\n    (tmpvar_36.x / tmpvar_36.y)\\n  ), 1.0));\\n  float tmpvar_40;\\n  tmpvar_40 = (tmpvar_39 * tmpvar_39);\\n  tmpvar_40 = (((\\n    ((((\\n      ((((-0.01213232 * tmpvar_40) + 0.05368138) * tmpvar_40) - 0.1173503)\\n     * tmpvar_40) + 0.1938925) * tmpvar_40) - 0.3326756)\\n   * tmpvar_40) + 0.9999793) * tmpvar_39);\\n  tmpvar_40 = (tmpvar_40 + (float(\\n    (abs((tmpvar_36.x / tmpvar_36.y)) > 1.0)\\n  ) * (\\n    (tmpvar_40 * -2.0)\\n   + 1.570796)));\\n  tmpvar_38 = (tmpvar_40 * sign((tmpvar_36.x / tmpvar_36.y)));\\n  if ((abs(tmpvar_36.y) > (1e-08 * abs(tmpvar_36.x)))) {\\n    if ((tmpvar_36.y < 0.0)) {\\n      if ((tmpvar_36.x >= 0.0)) {\\n        tmpvar_38 += 3.141593;\\n      } else {\\n        tmpvar_38 = (tmpvar_38 - 3.141593);\\n      };\\n    };\\n  } else {\\n    tmpvar_38 = (sign(tmpvar_36.x) * 1.570796);\\n  };\\n  vec2 tmpvar_41;\\n  tmpvar_41.x = (tmpvar_38 * 0.1591549);\\n  tmpvar_41.y = tmpvar_37;\\n  vec2 tmpvar_42;\\n  tmpvar_42.x = ((tmpvar_41.x * 2.0) + q11);\\n  tmpvar_42.y = ((0.35 * log(tmpvar_37)) + q12);\\n  mirror_uv_2 = (0.5 + (0.5 - abs(\\n    ((fract((tmpvar_42 * 0.5)) * 2.0) - 1.0)\\n  )));\\n  uv_1 = (0.5 + ((mirror_uv_2 - 0.5) * 1.5));\\n  vec2 tmpvar_43;\\n  tmpvar_43 = (uv_1 - 0.5);\\n  vec2 tmpvar_44;\\n  tmpvar_44.x = ((q14 * tmpvar_43.x) - (q13 * tmpvar_43.y));\\n  tmpvar_44.y = ((q13 * tmpvar_43.x) + (q14 * tmpvar_43.y));\\n  rotate_uv_3 = (0.5 + (tmpvar_44 * 2.0));\\n  vec2 numerator_45;\\n  numerator_45 = (rotate_uv_3 - vec2(0.0, 0.5));\\n  vec2 denominator_46;\\n  denominator_46 = (rotate_uv_3 - vec2(1.0, 0.5));\\n  vec2 tmpvar_47;\\n  tmpvar_47.x = ((numerator_45.x * denominator_46.x) + (numerator_45.y * denominator_46.y));\\n  tmpvar_47.y = ((numerator_45.y * denominator_46.x) - (numerator_45.x * denominator_46.y));\\n  vec2 tmpvar_48;\\n  tmpvar_48 = (((tmpvar_47 / \\n    ((denominator_46.x * denominator_46.x) + (denominator_46.y * denominator_46.y))\\n  ) + 0.5) - vec2(0.5, 0.5));\\n  float tmpvar_49;\\n  tmpvar_49 = sqrt(dot (tmpvar_48, tmpvar_48));\\n  float tmpvar_50;\\n  float tmpvar_51;\\n  tmpvar_51 = (min (abs(\\n    (tmpvar_48.x / tmpvar_48.y)\\n  ), 1.0) / max (abs(\\n    (tmpvar_48.x / tmpvar_48.y)\\n  ), 1.0));\\n  float tmpvar_52;\\n  tmpvar_52 = (tmpvar_51 * tmpvar_51);\\n  tmpvar_52 = (((\\n    ((((\\n      ((((-0.01213232 * tmpvar_52) + 0.05368138) * tmpvar_52) - 0.1173503)\\n     * tmpvar_52) + 0.1938925) * tmpvar_52) - 0.3326756)\\n   * tmpvar_52) + 0.9999793) * tmpvar_51);\\n  tmpvar_52 = (tmpvar_52 + (float(\\n    (abs((tmpvar_48.x / tmpvar_48.y)) > 1.0)\\n  ) * (\\n    (tmpvar_52 * -2.0)\\n   + 1.570796)));\\n  tmpvar_50 = (tmpvar_52 * sign((tmpvar_48.x / tmpvar_48.y)));\\n  if ((abs(tmpvar_48.y) > (1e-08 * abs(tmpvar_48.x)))) {\\n    if ((tmpvar_48.y < 0.0)) {\\n      if ((tmpvar_48.x >= 0.0)) {\\n        tmpvar_50 += 3.141593;\\n      } else {\\n        tmpvar_50 = (tmpvar_50 - 3.141593);\\n      };\\n    };\\n  } else {\\n    tmpvar_50 = (sign(tmpvar_48.x) * 1.570796);\\n  };\\n  vec2 tmpvar_53;\\n  tmpvar_53.x = (tmpvar_50 * 0.1591549);\\n  tmpvar_53.y = tmpvar_49;\\n  vec2 tmpvar_54;\\n  tmpvar_54.x = ((tmpvar_53.x * 2.0) + q11);\\n  tmpvar_54.y = ((0.35 * log(tmpvar_49)) + q12);\\n  mirror_uv_2 = (0.5 + (0.5 - abs(\\n    ((fract((tmpvar_54 * 0.5)) * 2.0) - 1.0)\\n  )));\\n  uv_1 = mirror_uv_2;\\n  vec2 tmpvar_55;\\n  tmpvar_55 = (texsize.zw * 4.0);\\n  vec3 tmpvar_56;\\n  tmpvar_56 = (((texture (sampler_blur1, \\n    (mirror_uv_2 + (vec2(1.0, 0.0) * tmpvar_55))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (mirror_uv_2 - (vec2(1.0, 0.0) * tmpvar_55))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_57;\\n  tmpvar_57 = (((texture (sampler_blur1, \\n    (mirror_uv_2 + (vec2(0.0, 1.0) * tmpvar_55))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (mirror_uv_2 - (vec2(0.0, 1.0) * tmpvar_55))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_58;\\n  tmpvar_58.x = tmpvar_56.z;\\n  tmpvar_58.y = tmpvar_57.z;\\n  vec2 tmpvar_59;\\n  tmpvar_59.x = tmpvar_56.y;\\n  tmpvar_59.y = tmpvar_57.y;\\n  vec2 tmpvar_60;\\n  tmpvar_60 = ((mirror_uv_2 - (tmpvar_58 * 0.1)) + (tmpvar_59 * 0.06));\\n  ret_4 = (((\\n    ((texture (sampler_blur2, tmpvar_60).xyz * scale2) + bias2)\\n  .x * \\n    clamp ((1.0 - texture (sampler_main, mirror_uv_2).z), 0.0, 1.0)\\n  ) * pow (hue_shader.yxz, vec3(8.0, 8.0, 8.0))) * 3.0);\\n  ret_4 = (mix (ret_4, (\\n    pow (hue_shader.yzx, vec3(8.0, 8.0, 8.0))\\n   * 1.4), vec3((\\n    (texture (sampler_main, tmpvar_60).x * 0.8)\\n   + \\n    ((texture (sampler_blur1, tmpvar_60).xyz * scale1) + bias1)\\n  .x))) * clamp ((1.0 - \\n    (((texture (sampler_blur1, mirror_uv_2).xyz * scale1) + bias1).y * 4.0)\\n  ), 0.0, 1.0));\\n  vec2 tmpvar_61;\\n  tmpvar_61.x = tmpvar_56.y;\\n  tmpvar_61.y = tmpvar_57.y;\\n  vec3 tmpvar_62;\\n  vec3 tmpvar_63;\\n  tmpvar_63 = pow (hue_shader, vec3(8.0, 8.0, 8.0));\\n  tmpvar_62 = mix (mix (ret_4, vec3(1.0, 1.0, 1.0), (\\n    (tmpvar_63 * texture (sampler_main, clamp ((mirror_uv_2 - (tmpvar_61 * 2.0)), 0.0, 1.0)).z)\\n   * 1.2)), (tmpvar_63.zxy * 1.8), texture (sampler_main, mirror_uv_2).yyy);\\n  ret_4 = tmpvar_62;\\n  vec4 tmpvar_64;\\n  tmpvar_64.w = 1.0;\\n  tmpvar_64.xyz = tmpvar_62;\\n  ret = tmpvar_64.xyz;\\n }"}')},4017:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_a":0.107,"wave_scale":1.119,"wave_smoothing":0,"modwavealphastart":1.2,"modwavealphaend":1.2,"zoomexp":1.4166,"zoom":1.14635,"warp":0.01605,"wave_r":0,"wave_g":0.93,"ob_size":0.005,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":24,"additive":1,"num_inst":8,"x":0.48,"rad":0.0261,"tex_zoom":4.36077,"r2":1,"g2":0,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = rand(1000)/1000;\\ny = rand(1000)/1000;\\nang = rand(150)/100;"},{"baseVals":{"sides":5,"textured":1,"rad":0.986,"tex_ang":3.14159,"tex_zoom":0.99979,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ang =sin(time/65) ;// ang + (bass*.2) + (time*.4);"},{"baseVals":{"sides":100,"textured":1,"x":0.9,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = sin(time) * .4 + .5;\\n\\n"},{"baseVals":{"sides":36,"additive":1,"rad":0.16777,"r":0,"g":0.1,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"thick":1,"additive":1,"r":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"q1 = below(rand(100),4 + 10*(treb+mid+bass));","point_eqs_eel":"it = (it + 1)*above(sample,0)*below(it,53);\\nita = (ita + equal(it,0))*above(sample,0);\\n\\nsw = 1-equal(it,0)*equal(ita,0);\\nswi = (equal(lr,9) + equal(lr,5))*equal(it,0)*equal(ita,4);\\nxv = if(sw - swi,xv,rand(1001)*.001*.8);\\nmx = xv + ita*.025;\\nmy = if(sw - swi,my,rand(1001)*.001*.975);\\n\\nsz = .01;\\nvx = above(it,1)*below(it,39) + above(it,12)*below(it,28) - equal(it,20) + equal(it,46) + equal(it,51) + equal(it,41) - equal(it,15) - equal(it,25) + equal(it,10) + equal(it,30) - equal(it,4) - equal(it,36);\\nvy = above(it,17)*below(it,49) + above(it,22)*below(it,44) - equal(it,33) + equal(it,7) + equal(it,51) + equal(it,15) - equal(it,41) - equal(it,25) + equal(it,4) + equal(it,10) - equal(it,36) - equal(it,30);\\n\\nsa = equal(ita,0)*13 + equal(ita,1)*9 + equal(ita,2)*12 + equal(ita,3)*11 + equal(ita,4)*4 + equal(ita,5)*18 + equal(ita,6)*15 + equal(ita,7)*16;\\nsb = equal(ita,0)*11 + equal(ita,1)*9 + equal(ita,2)*12 + equal(ita,3)*12;\\nsc = equal(ita,0)*4 + equal(ita,1)*15 + equal(ita,3)*4 + equal(ita,4)*18 + equal(ita,5)*21 + equal(ita,6)*7 + equal(ita,7)*19;\\nsd = equal(ita,0)*12 + equal(ita,1)*15 + equal(ita,2)*22 + equal(ita,3)*5;\\nse = equal(ita,0)*8 + equal(ita,1)*1 + equal(ita,2)*20 + equal(ita,3)*5;\\nsf = equal(ita,0)*6 + equal(ita,1)*5 + equal(ita,2)*1 + equal(ita,3)*18 + equal(ita,5)*10 + equal(ita,6)*15 + equal(ita,7)*25;\\nsg = equal(ita,0)*1 + equal(ita,1)*14 + equal(ita,2)*7 + equal(ita,3)*5 + equal(ita,4)*18;\\nsh = equal(ita,0)*19 + equal(ita,1)*21 + equal(ita,2)*18 + equal(ita,3)*16 + equal(ita,4)*18 + equal(ita,5)*9 + equal(ita,6)*19 + equal(ita,7)*5;\\nsi = equal(ita,0)*8 + equal(ita,1)*1 + equal(ita,2)*16 + equal(ita,3)*16 + equal(ita,4)*25;\\nsj = equal(ita,0)*25 + equal(ita,1)*5 + equal(ita,2)*19 + equal(ita,6)*14 + equal(ita,7)*15;\\n\\nlr = if(sw,lr,rand(10));\\nlet = equal(lr,0)*sa + equal(lr,1)*sb + equal(lr,2)*sc + equal(lr,3)*sd + equal(lr,4)*se + equal(lr,5)*sf + equal(lr,6)*sg + equal(lr,7)*sh + equal(lr,8)*si + equal(lr,9)*sj;\\n\\nva = equal(let,23) + equal(let,24) + equal(let,26);\\nvb = above(let,0)*below(let,9) + above(let,10)*below(let,19) + equal(let,21) + equal(let,23);\\nvc = equal(let,1) + equal(let,2) + equal(let,5) + equal(let,6) + equal(let,8) + equal(let,11) + equal(let,16) + equal(let,18) + equal(let,19);\\nvd = above(let,1)*below(let,9) + above(let,10)*below(let,24) - equal(let,20);\\nve = equal(let,13) + equal(let,14) + equal(let,24) + equal(let,25);\\nvf = above(let,1)*below(let,8) + equal(let,9) + above(let,14)*below(let,21) + equal(let,26);\\nvg = equal(let,1);\\nvh = equal(let,9) + equal(let,20);\\nvi = above(let,0)*below(let,5) - equal(let,3) + equal(let,18);\\nvj = above(let,2)*below(let,8) - equal(let,4) + equal(let,9) + above(let,14)*below(let,21) - equal(let,18) + equal(let,26);\\nvk = equal(let,11) + equal(let,13) + above(let,23)*below(let,27);\\nvl = equal(let,8) + equal(let,10) + above(let,12)*below(let,18) + above(let,20)*below(let,24);\\nvm = equal(let,1) + equal(let,2) + equal(let,8) + equal(let,16) + equal(let,18) + equal(let,19);\\nvn = equal(let,1) + equal(let,7) + equal(let,8) + equal(let,10) + above(let,12)*below(let,24) - equal(let,16) - equal(let,18) - equal(let,20) - equal(let,22);\\nvo = equal(let,11) + equal(let,14) + equal(let,17) + equal(let,18) + equal(let,23) + equal(let,24);\\nvp = equal(let,3) + equal(let,5) + equal(let,7) + equal(let,9) + equal(let,10) + equal(let,12) + equal(let,15) + equal(let,17) + equal(let,19) + equal(let,21) + equal(let,26);\\nvq = equal(let,2) + equal(let,4) + equal(let,22);\\nvr = equal(let,9) + equal(let,20) + equal(let,25);\\nvs = equal(let,22);\\nvt = above(let,1)*below(let,13) - equal(let,6) - equal(let,8) - equal(let,11) + equal(let,15) + equal(let,17) + equal(let,19) + equal(let,21) + equal(let,26);\\n\\na = if(above(it,51),0,if(above(it,49),va,if(above(it,47),vb,if(above(it,44),vc,if(above(it,42),vd,if(above(it,39),ve, if(above(it,37),vf,if(above(it,34),vg,if(above(it,31),vh,if(above(it,28),vi,if(above(it,26),vj,if(above(it,23),vk, if(above(it,21),vl,if(above(it,18),vm,if(above(it,16),vn,if(above(it,13),vo,if(above(it,11),vp,if(above(it,8),vq, if(above(it,5),vr,if(above(it,2),vs,if(it,vt,0)))))))))))))))))))));\\n\\na = a*below(ita,8)*q1;\\n\\nx = mx + vx*sz*.75;\\ny = my + vy*sz*1.5;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"//wave_g = wave_g + 0.100*( 0.90*sin(0.583*time) + 0.10*sin(1.006*time) );\\n//wave_b = wave_b + 0.100*( 0.90*sin(0.993*time) + 0.10*sin(0.933*time) );\\nzoom = 0.935*zoom + 0.04*( 0.60*sin(0.339*bass_att) + 0.10*sin(0.276*bass_att) );\\nrot = rot + 0.040*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );\\ncx = cx + 0.003*( 0.60*sin(0.471*treb_att) + 0.40*sin(0.297*treb_att) );\\ncy = cy + 0.003*( 0.60*sin(0.379*mid_att) + 0.40*sin(0.351*mid_att) );\\ndx = dx + 0.003*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );\\nrot=rot+0.02*(sin(time*2.134)+sin(time*1.7134)+sin(time*2.834));\\ndx=dx+0.01*(sin(time*1.134)+sin(time*0.7134)+sin(time*2.334));\\ndy=dy+0.01*(sin(time*1.8834)+sin(time*1.0144)+sin(time*1.334));\\n\\nq23 = rand(1000)/1000;\\nq24 = rand(1000)/1000;\\nq25 = (rand(1000)/1000)*6.28;\\nq26 = q25 - 3.14;\\nq27 = (rand(1000)/12000)+0.1;\\n\\nq28 = rand(1000)/1000;\\nq29 = rand(1000)/1000;\\nq30 = (rand(1000)/1000)*6.28;\\nq31 = q30 - 3.14;\\nq32 = (rand(1000)/14000)+0.1;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 10.0);\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1)).x;\\n  tmpvar_3.y = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1)).x;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (mix (uv_orig, uv, vec2(0.4, 0.4)) + ((tmpvar_3 * texsize.zw) * 2.0));\\n  ret_1.x = ((texture (sampler_main, tmpvar_4).x - (\\n    (texture (sampler_main, tmpvar_4).x - ((texture (sampler_blur3, tmpvar_4).xyz * scale3) + bias3).x)\\n   * 0.02)) - 0.008);\\n  ret_1.y = texture (sampler_main, uv).y;\\n  ret_1.y = (ret_1.y + ((\\n    (ret_1.y - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).y)\\n   * 0.2) - 0.004));\\n  ret_1.z = (texture (sampler_main, ((uv_orig - \\n    ((uv_orig - uv) * 2.0)\\n  ) + (\\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5)\\n  .xy * texsize.zw))).z - 0.004);\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = ret_1;\\n  ret = tmpvar_5.xyz;\\n }","comp":" shader_body { \\n  vec3 ret2_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (texsize.zw * 6.0);\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = dot (((\\n    (texture (sampler_blur1, (uv + (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (uv - (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  tmpvar_4.y = dot (((\\n    (texture (sampler_blur1, (uv + (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (uv - (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (uv - (0.25 * tmpvar_4));\\n  vec4 tmpvar_6;\\n  tmpvar_6 = texture (sampler_blur3, uv);\\n  ret_2 = (0.3 * ((tmpvar_6.xyz * scale3) + bias3));\\n  ret_2 = (ret_2 - ((\\n    (texture (sampler_blur2, uv).xyz * scale2)\\n   + bias2) - 0.01));\\n  vec4 tmpvar_7;\\n  tmpvar_7 = texture (sampler_blur1, uv);\\n  ret_2 = (ret_2 + ((texture (sampler_main, uv).xyz + \\n    (((tmpvar_7.xyz * scale1) + bias1) * 0.15)\\n  ) - 0.01));\\n  ret_2 = (ret_2 + 0.75);\\n  float tmpvar_8;\\n  tmpvar_8 = dot (ret_2, vec3(0.32, 0.49, 0.29));\\n  vec3 tmpvar_9;\\n  tmpvar_9 = mix (vec3(tmpvar_8), (vec3(tmpvar_8) * dot (\\n    ((0.8 * ((texture (sampler_blur3, tmpvar_5).xyz * scale3) + bias3)) - ((texture (sampler_blur1, tmpvar_5).xyz * scale1) + bias1))\\n  , vec3(0.32, 0.49, 0.29))), pow (hue_shader, vec3(tmpvar_8)));\\n  ret2_1 = ((-0.3 * (\\n    (texture (sampler_blur3, tmpvar_5).xyz * scale3)\\n   + bias3)) + ((texture (sampler_blur1, tmpvar_5).xyz * scale1) + bias1));\\n  ret2_1 = (ret2_1 - texture (sampler_main, tmpvar_5).xyz);\\n  ret2_1 = (ret2_1 - 0.75);\\n  float tmpvar_10;\\n  tmpvar_10 = dot (ret2_1, vec3(0.32, 0.49, 0.29));\\n  vec3 tmpvar_11;\\n  tmpvar_11 = mix (vec3(tmpvar_10), (vec3(tmpvar_10) * dot (\\n    ((0.8 * ((tmpvar_6.xyz * scale3) + bias3)) - ((tmpvar_7.xyz * scale1) + bias1))\\n  , vec3(0.32, 0.49, 0.29))), pow (hue_shader.zxy, tmpvar_9));\\n  ret2_1 = tmpvar_11;\\n  vec3 tmpvar_12;\\n  tmpvar_12 = abs((tmpvar_9 - (2.0 * tmpvar_11)));\\n  ret_2 = (tmpvar_12 - (0.175 * sqrt(tmpvar_12)));\\n  ret_2 = (ret_2 * ret_2);\\n  vec4 tmpvar_13;\\n  tmpvar_13.w = 1.0;\\n  tmpvar_13.xyz = ret_2;\\n  ret = tmpvar_13.xyz;\\n }"}')},8037:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1,"decay":0.5,"echo_zoom":1.03,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":0.01,"wave_smoothing":0,"modwavealphastart":1,"modwavealphaend":1,"warpscale":0.107,"zoomexp":4.28632,"fshader":1,"warp":0.01743,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0,"ob_g":1,"ob_a":1,"ib_size":0,"ib_r":1,"ib_g":1,"ib_b":1,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"textured":1,"rad":0.789,"ang":0.6283,"tex_zoom":1.17257,"r":0,"g":1,"border_a":0},"init_eqs_eel":"vx = 0;\\nvy = 0;","frame_eqs_eel":"rad = 0.65 + bass*0.1;\\n\\nan = an*0.99 + (bass-treb)*0.1;\\nang = an*0.1 + 0.6;"},{"baseVals":{"sides":100,"thickoutline":1,"textured":1,"rad":0.40271,"tex_zoom":2.23888,"g":1,"b":1,"r2":0.08,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"textured":1,"rad":1.21525,"tex_ang":2.57611,"tex_zoom":0.55595,"g":1,"b":1,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":34,"x":0.99,"y":0.99,"rad":0.02558,"r":0,"g":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"samples":495,"sep":4,"spectrum":1,"thick":1,"additive":1,"scaling":100,"smoothing":1,"r":0,"g":0.04,"b":0,"a":0.99},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\nab = 1;","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt8 = .07;\\nt7 = 1;","point_eqs_eel":"t7 = -t7;\\npi = asin(1);\\nn = 180;\\nrd = 0.075;//+(value1*10+1)*((sample*512)%2)*0.02;\\nmy_x = sin(sample*pi*4+(t7+1)*t8)*0.5 + cos(sample*pi*n)*rd*sin(sample*pi*4+(t7+1)*t8);\\nmy_y = cos(sample*pi*4+(t7+1)*t8)*0.5 + cos(sample*pi*n)*rd*cos(sample*pi*4+(t7+1)*t8);\\nmy_z = sin(sample*pi*n)*rd;\\n\\n\\n\\nd = 1.4; // makes the perspective impact\\nzoom = 0.65;\\n\\nw1 = q2;\\nw2 = q3;\\nw3 = q4;\\n\\nx1 = cos(w1)*my_x + sin(w1)*my_y;\\ny1 = -sin(w1)*my_x + cos(w1)*my_y;\\nz1 = my_z;\\n\\nx2 = cos(w2)*x1 + sin(w2)*z1;\\nz2 = -sin(w2)*x1 + cos(w2)*z1;\\ny2 = y1;\\n\\ny3 = cos(w3)*y2 + sin(w3)*z2;\\nz3 = -sin(w3)*y2 + cos(w3)*z2;\\nx3 = x2;\\n\\n// perspective calculation\\n\\nl = sqrt(x3*x3 + y3*y3);\\nw = atan2(x3,y3);\\np = tan(asin(1) + atan2(d+z3,l));\\nd = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));\\n\\nmy_x = zoom*sin(w)*p;\\nmy_y = zoom*cos(w)*p;\\n\\nx = 0.5 + my_x;\\ny = 0.5 + my_y;\\n\\nb = -z3 + 0.5;\\nb = min(1,max(0,b))*0.5;\\nr = 1-b*2\\n//b = (1 - r)*0.1;\\n//a =  7/(d*16) - 0.1;"},{"baseVals":{"samples":445,"sep":4,"spectrum":1,"usedots":1,"thick":1,"additive":1,"scaling":100,"smoothing":1,"a":0.99,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\nab = 1;","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt8 = .09;\\nt7 = 1;","point_eqs_eel":"t7 = -t7;\\npi = asin(1);\\nn = 160;\\nrd = 0.075;//+(value1*10+1)*((sample*512)%2)*0.02;\\nxx = sin(sample*pi*4+(t7+1)*t8)*0.5 + cos(sample*pi*n)*rd*sin(sample*pi*4);\\nyy = cos(sample*pi*4+(t7+1)*t8)*0.5 + cos(sample*pi*n)*rd*cos(sample*pi*4);\\nzz = sin(sample*pi*n)*rd;\\n\\nd = sqrt( xx*xx + yy*yy + zz*zz);\\nd1 = 1;\\nxx = xx*d1;\\nyy = yy*d1;\\nzz = zz*d1;\\n\\nw = -d*t5;\\ns1 = sin(t2*1+w);\\ns2 = sin(t3*1+w);\\ns3 = sin(t4*1+w);\\nc1 = cos(t2*1+w);\\nc2 = cos(t3*1+w);\\nc3 = cos(t4*1+w);\\n\\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\\n\\na = 0.75;\\nzoom = 0.5*atan2(a,a+z);//0.5*(1/(z+a));\\nx = 0.5 + zoom*x1;\\ny = 0.5 + zoom*y1;\\n\\npi3 = 3.1415*2*0.3333;\\nt = sample*pi*4-2*time;\\nc=1.6;\\nr = sin(t)*c;\\n\\ng = sin(t+pi3)*c;\\n\\nb = sin(t-pi3)*c;\\n\\nj = 0.71;\\n//r = 0.5+xx*j;\\n//g = 0.5+yy*j;\\n//b = 0.5+zz*j;\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\na = 1-(z + a)/2;\\n"},{"baseVals":{"sep":4,"scaling":0.09348,"smoothing":1,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\nab = 1;","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;","point_eqs_eel":"s8 = sample*383;\\n\\ns = 100;//0.3;\\nxx = sin(sample*s);//((sample*343)%7 - 3.5)*s;\\nzz = cos(sample*s);//((sample*49)%7 - 3.5)*s;\\nyy = (sample-0.5);//((sample*7)%7 - 3.5)*s;\\n\\nd = sqrt( xx*xx + yy*yy + zz*zz);\\nd1 = 1/d;\\nxx = xx*d1;\\nyy = yy*d1;\\nzz = zz*d1;\\n\\nw = 1+0*(d)*(t6);//(sample*sin(time*0.3)*0.02-1);\\ns1 = sin(t2*w);\\ns2 = sin(t3*w);\\ns3 = sin(t4*w);\\nc1 = cos(t2*w);\\nc2 = cos(t3*w);\\nc3 = cos(t4*w);\\n\\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\\n\\na = 2;\\nzoom = 0.3*atan2(a-z,a);//0.5*(1/(z+a));\\nx = 0.5 + zoom*x1;\\ny = 0.5 + zoom*y1;\\n\\npi3 = 3.1415*2*0.3333;\\nt = -z*13+t5*20;\\nc = 10;\\nr = sin(t)*c;\\n\\ng = sin(t+pi3)*c;\\n\\nb = sin(t-pi3)*c;\\n\\nj = 0.71;\\n//r = 0.5+xx*j;\\n//g = 0.5+yy*j;\\n//b = 0.5+zz*j;\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\n\\n\\na = sigmoid(-z,10)*1.0+0.0;"},{"baseVals":{"samples":484,"sep":4,"usedots":1,"scaling":9.94125,"smoothing":1,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\nab = 1;","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;","point_eqs_eel":"s8 = sample*383;\\n\\ns = 0.25;\\nxx = ((sample*(465))%15 - 8)*s*2;\\nyy = ((sample*31)%31 - 16)*s;\\nzz = 0;\\n\\nd = sqrt( xx*xx + yy*yy + zz*zz);\\nw = 1;\\n\\ns1 = sin(t2*1);\\ns2 = sin(t3*0);\\ns3 = sin(t4*1);\\nc1 = cos(t2*1);\\nc2 = cos(t3*0);\\nc3 = cos(t4*1);\\n\\n\\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\\n\\na = 500;\\nzoom = 0.05*atan2(a-z,a);//0.5*(1/(z+a));\\nx = 0.5 + zoom*x1;\\ny = 0.5 + zoom*y1;\\n\\npi3 = 3.1415*2*0.3333;\\nt = -z*5+t5;\\nc = 10;\\nr = sin(t)*c;\\n\\ng = sin(t+pi3)*c;\\n\\nb = sin(t-pi3)*c;\\n\\nj = 0.71;\\n//r = 0.5+xx*j;\\n//g = 0.5+yy*j;\\n//b = 0.5+zz*j;\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\n\\n\\na = sigmoid(z,5);"}],"init_eqs_eel":"x1 = 0;\\ny1 = 0;","frame_eqs_eel":"q1 = 0;\\nv = 0.4;\\nj1 = j1*0.95 + sqr(bass*4)*v;\\nj2 = j2*0.95 + sqr(mid*4)*v;\\nj3 = j3*0.95 + sqr(treb*4)*v;\\n\\nn = n + j1*0.0052;\\nn1 = n1 + j2*0.0052;\\nn2 = n2 + j3*0.0052;\\n\\n\\nq2 = n*0.01;\\nq3 = n1*0.01;\\nq4 = n2*0.01;\\n\\nk = k*0.99 + sqr(mid_att*2);\\nq5 = k*0.00;\\n\\nzoom = 1.0016;\\nwarp = 0;\\n\\nrot = -0.00;\\n\\nq9 = aspectx;\\nq10 = aspecty;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 4.0);\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = (((texture (sampler_blur2, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale2) + bias2)).z;\\n  tmpvar_3.y = -(((\\n    (texture (sampler_blur2, (uv + (vec2(1.0, 0.0) * tmpvar_2))).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, (uv - (vec2(1.0, 0.0) * tmpvar_2))).xyz * scale2)\\n   + bias2)).z);\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (uv + ((tmpvar_3 * texsize.zw) * 60.0));\\n  vec2 x_5;\\n  x_5 = (tmpvar_4 - uv);\\n  vec4 tmpvar_6;\\n  tmpvar_6 = texture (sampler_main, uv);\\n  vec4 tmpvar_7;\\n  tmpvar_7 = texture (sampler_blur1, uv);\\n  ret_1.z = (((texture (sampler_main, tmpvar_4).z + \\n    (((tmpvar_6.z - (\\n      (tmpvar_7.xyz * scale1)\\n     + bias1).z) * 200.0) * sqrt(dot (x_5, x_5)))\\n  ) * 0.96) - 0.02);\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1)).y;\\n  tmpvar_8.y = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1)).y;\\n  ret_1.y = ((texture (sampler_main, (uv_orig + \\n    ((tmpvar_8 * texsize.zw) * 6.0)\\n  )).y + (\\n    (tmpvar_6.y - ((tmpvar_7.xyz * scale1) + bias1).y)\\n   * 0.1)) - 0.016);\\n  vec4 tmpvar_9;\\n  tmpvar_9.w = 1.0;\\n  tmpvar_9.xyz = ret_1;\\n  ret = tmpvar_9.xyz;\\n }","comp":" shader_body { \\n  vec3 ret2_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (texsize.zw * 6.0);\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = dot (((\\n    (texture (sampler_blur1, (uv + (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (uv - (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  tmpvar_4.y = dot (((\\n    (texture (sampler_blur1, (uv + (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (uv - (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (uv - (0.25 * tmpvar_4));\\n  vec4 tmpvar_6;\\n  tmpvar_6 = texture (sampler_blur3, uv);\\n  ret_2 = (0.25 * clamp ((2.0 * \\n    ((tmpvar_6.xyz * scale3) + bias3)\\n  ), 0.0, 1.0));\\n  ret_2 = (ret_2 - (0.8 * clamp (\\n    ((20.0 * ((0.6 * \\n      ((texture (sampler_blur2, uv).xyz * scale2) + bias2)\\n    ) - 0.01)) - 2.0)\\n  , 0.0, 1.0)));\\n  vec4 tmpvar_7;\\n  tmpvar_7 = texture (sampler_blur1, uv);\\n  ret_2 = (ret_2 + clamp ((\\n    (30.0 * ((texture (sampler_main, uv).xyz + (\\n      ((tmpvar_7.xyz * scale1) + bias1)\\n     * 0.15)) - 0.01))\\n   - 2.0), 0.0, 1.0));\\n  ret_2 = (ret_2 + 0.75);\\n  float tmpvar_8;\\n  tmpvar_8 = dot (ret_2, vec3(0.32, 0.49, 0.29));\\n  vec3 tmpvar_9;\\n  tmpvar_9 = mix (vec3(tmpvar_8), (vec3(tmpvar_8) * dot (\\n    (((texture (sampler_blur3, tmpvar_5).xyz * scale3) + bias3) - ((texture (sampler_blur1, tmpvar_5).xyz * scale1) + bias1))\\n  , vec3(0.32, 0.49, 0.29))), pow (hue_shader, vec3(tmpvar_8)));\\n  ret2_1 = (vec3((-0.5 * dot (\\n    ((texture (sampler_blur3, tmpvar_5).xyz * scale3) + bias3)\\n  , vec3(0.32, 0.49, 0.29)))) + (0.8 * (\\n    (texture (sampler_blur1, tmpvar_5).xyz * scale1)\\n   + bias1)));\\n  ret2_1 = (ret2_1 - (0.9 * texture (sampler_main, tmpvar_5).xyz));\\n  ret2_1 = (ret2_1 - 0.75);\\n  float tmpvar_10;\\n  tmpvar_10 = dot (ret2_1, vec3(0.32, 0.49, 0.29));\\n  vec3 tmpvar_11;\\n  tmpvar_11 = mix (vec3(tmpvar_10), (vec3(tmpvar_10) * dot (\\n    (((tmpvar_6.xyz * scale3) + bias3) - ((tmpvar_7.xyz * scale1) + bias1))\\n  , vec3(0.32, 0.49, 0.29))), pow (hue_shader.zxy, tmpvar_9));\\n  ret2_1 = tmpvar_11;\\n  vec3 tmpvar_12;\\n  tmpvar_12 = abs((tmpvar_9 - (2.0 * tmpvar_11)));\\n  ret_2 = (tmpvar_12 * tmpvar_12);\\n  vec4 tmpvar_13;\\n  tmpvar_13.w = 1.0;\\n  tmpvar_13.xyz = ret_2;\\n  ret = tmpvar_13.xyz;\\n }"}')},9994:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.9,"echo_zoom":1.169,"echo_orient":1,"wave_mode":5,"additivewave":1,"wave_a":0,"wave_scale":0.9,"wave_smoothing":0.63,"wave_mystery":1,"modwavealphastart":2,"modwavealphaend":2,"warpscale":2.853,"rot":0.006,"warp":0,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.005,"mv_x":0,"mv_y":48,"mv_dx":-0.941,"mv_dy":0.426,"mv_l":5,"mv_r":0.316,"mv_g":0.078,"mv_b":0.942,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"c_x = 0.5;\\nc_y = 0.5;","frame_eqs_eel":"q1 = aspectx;\\nq2 = aspecty;\\nrot = 0;\\nzoom = 1;\\nwarp = 0;\\n\\n\\nvol = bass*8 + mid*4 + treb*2;\\nvol = vol*above(vol,17);\\nmonitor = vol;\\nbeat = above(vol,res);\\ndiff = (1-beat)*diff + beat*(vol-res);\\nres = beat*(vol+2*diff) + (1-beat)*(res - (diff*0.04 + 0.12)*60/fps);\\nres = max(0,res);\\nmonitor = res;\\n//beat = 0;\\nr = if(beat, 0.015*(rand(200)-100)*0.01,r);\\nrot = r;\\n\\nc_x = if(beat,0.5 + 0.5*(rand(200)-100)*0.01, c_x);\\nc_y = if(beat,0.5 + 0.5*(rand(200)-100)*0.01, c_y);\\n\\n\\nq3 = c_x;\\nq4 = c_y;","pixel_eqs_eel":"d = (pow(sqrt(sqr(x-q3)+sqr(y-q4)),0.5)-0);\\nv = 0.02;\\ndx = v*(x-q3)*d;\\ndy = v*(y-q4)*d;","warp":" shader_body { \\n  vec3 ret_1;\\n  vec3 tmpvar_2;\\n  tmpvar_2 = (texture (sampler_noise_lq, ((\\n    (uv_orig * texsize.xy)\\n   * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5);\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (texsize.zw * 4.0);\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = tmpvar_4.y;\\n  tmpvar_6.y = tmpvar_5.y;\\n  vec2 tmpvar_7;\\n  tmpvar_7 = (uv - ((tmpvar_6 * texsize.zw) * 6.0));\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = tmpvar_4.z;\\n  tmpvar_8.y = tmpvar_5.z;\\n  vec2 tmpvar_9;\\n  tmpvar_9 = (uv - ((tmpvar_8 * texsize.zw) * 2.0));\\n  vec4 tmpvar_10;\\n  tmpvar_10 = texture (sampler_blur1, uv);\\n  vec4 tmpvar_11;\\n  tmpvar_11 = texture (sampler_main, uv_orig);\\n  ret_1.y = (((\\n    (texture (sampler_main, tmpvar_7).y - (((\\n      (tmpvar_10.xyz * scale1)\\n     + bias1).y - texture (sampler_main, tmpvar_7).y) * 0.024))\\n   - 0.01) + (\\n    (1.0 - tmpvar_11.x)\\n   * 0.014)) + (tmpvar_2 * 0.01)).x;\\n  ret_1.z = (((texture (sampler_main, tmpvar_9).z - \\n    ((((tmpvar_10.xyz * scale1) + bias1).z - texture (sampler_main, tmpvar_9).z) * 0.024)\\n  ) - 0.01) + (tmpvar_11.x * 0.014));\\n  ret_1.x = texture (sampler_fc_main, (uv + ((tmpvar_2.xy * texsize.zw) * 0.5))).x;\\n  ret_1.x = (ret_1.x + ((\\n    (ret_1.x - ((texture (sampler_blur3, uv).xyz * scale3) + bias3).x)\\n   * 0.4) + (tmpvar_2 * 0.004)).x);\\n  vec4 tmpvar_12;\\n  tmpvar_12.w = 1.0;\\n  tmpvar_12.xyz = ret_1;\\n  ret = tmpvar_12.xyz;\\n }","comp":"vec2 xlat_mutabled;\\nvec3 xlat_mutabledx;\\nvec3 xlat_mutabledy;\\n shader_body { \\n  xlat_mutabled = (texsize.zw * 4.0);\\n  xlat_mutabledx = (((texture (sampler_blur1, \\n    (uv_orig + (vec2(1.0, 0.0) * xlat_mutabled))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv_orig - (vec2(1.0, 0.0) * xlat_mutabled))\\n  ).xyz * scale1) + bias1));\\n  xlat_mutabledy = (((texture (sampler_blur1, \\n    (uv_orig + (vec2(0.0, 1.0) * xlat_mutabled))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv_orig - (vec2(0.0, 1.0) * xlat_mutabled))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_1;\\n  tmpvar_1.x = xlat_mutabledx.x;\\n  tmpvar_1.y = xlat_mutabledy.x;\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = xlat_mutabledx.y;\\n  tmpvar_2.y = xlat_mutabledy.y;\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = xlat_mutabledx.x;\\n  tmpvar_3.y = xlat_mutabledy.x;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = xlat_mutabledx.z;\\n  tmpvar_4.y = xlat_mutabledy.z;\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = (mix ((\\n    (texture (sampler_main, ((uv + (\\n      (tmpvar_2 * texsize.zw)\\n     * 16.0)) - ((tmpvar_3 * texsize.zw) * 16.0))).y * (1.0 + (-(xlat_mutabledx) + xlat_mutabledy).y))\\n   * vec3(1.0, 0.6, 0.0)), vec3(0.7, 0.3, 1.0), vec3(pow (\\n    ((0.5 + ((xlat_mutabledx + xlat_mutabledy).x * 0.5)) * ((texture (sampler_blur1, (uv + \\n      ((tmpvar_1 * 12.0) * texsize.zw)\\n    )).xyz * scale1) + bias1).x)\\n  , 0.8))) * (vec3(1.0, 1.0, 1.0) - vec3((texture (sampler_main, \\n    (uv + ((tmpvar_4 * texsize.zw) * 16.0))\\n  ).z * \\n    (1.0 + (-(xlat_mutabledx) + xlat_mutabledy).z)\\n  ))));\\n  ret = tmpvar_5.xyz;\\n }"}')},3386:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.5,"echo_zoom":1,"echo_orient":3,"wave_thick":1,"modwavealphabyvolume":1,"wave_a":0.009,"wave_scale":1.554,"wave_smoothing":0.756,"modwavealphastart":1.2,"modwavealphaend":1.2,"warpanimspeed":0.01,"warpscale":100,"zoomexp":0.26311,"warp":0.01359,"wave_r":0,"wave_b":0,"ob_size":0,"ob_a":1,"ib_size":0.5,"ib_r":1,"ib_g":1,"ib_b":1,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"additive":1,"thickoutline":1,"rad":0.86644,"r":0.85,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":5,"textured":1,"rad":0.986,"tex_ang":3.14159,"tex_zoom":0.99979,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ang =sin(time/65) ;// ang + (bass*.2) + (time*.4);"},{"baseVals":{"sides":100,"textured":1,"x":0.9,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = sin(time) * .4 + .5;\\n\\n"},{"baseVals":{"sides":36,"additive":1,"rad":0.81623,"r":0,"g":0.04,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = 1-q1;\\ny = q2;\\nx = 0.5 + (x - 0.5)*0.25;\\ny = 0.5 + (y - 0.5)*0.25;"}],"waves":[{"baseVals":{"thick":1,"additive":1,"r":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"q1 = below(int(rand(100)),4 + 10*(treb+mid+bass));","point_eqs_eel":"it = (it + 1)*above(sample,0)*below(it,53);\\nita = (ita + equal(it,0))*above(sample,0);\\n\\nsw = 1-equal(it,0)*equal(ita,0);\\nswi = (equal(lr,9) + equal(lr,5))*equal(it,0)*equal(ita,4);\\nxv = if(sw - swi,xv,int(rand(1001))*.001*.8);\\nmx = xv + ita*.025;\\nmy = if(sw - swi,my,int(rand(1001))*.001*.975);\\n\\nsz = .01;\\nvx = above(it,1)*below(it,39) + above(it,12)*below(it,28) - equal(it,20) + equal(it,46) + equal(it,51) + equal(it,41) - equal(it,15) - equal(it,25) + equal(it,10) + equal(it,30) - equal(it,4) - equal(it,36);\\nvy = above(it,17)*below(it,49) + above(it,22)*below(it,44) - equal(it,33) + equal(it,7) + equal(it,51) + equal(it,15) - equal(it,41) - equal(it,25) + equal(it,4) + equal(it,10) - equal(it,36) - equal(it,30);\\n\\nsa = equal(ita,0)*13 + equal(ita,1)*9 + equal(ita,2)*12 + equal(ita,3)*11 + equal(ita,4)*4 + equal(ita,5)*18 + equal(ita,6)*15 + equal(ita,7)*16;\\nsb = equal(ita,0)*11 + equal(ita,1)*9 + equal(ita,2)*12 + equal(ita,3)*12;\\nsc = equal(ita,0)*4 + equal(ita,1)*15 + equal(ita,3)*4 + equal(ita,4)*18 + equal(ita,5)*21 + equal(ita,6)*7 + equal(ita,7)*19;\\nsd = equal(ita,0)*12 + equal(ita,1)*15 + equal(ita,2)*22 + equal(ita,3)*5;\\nse = equal(ita,0)*8 + equal(ita,1)*1 + equal(ita,2)*20 + equal(ita,3)*5;\\nsf = equal(ita,0)*6 + equal(ita,1)*5 + equal(ita,2)*1 + equal(ita,3)*18 + equal(ita,5)*10 + equal(ita,6)*15 + equal(ita,7)*25;\\nsg = equal(ita,0)*1 + equal(ita,1)*14 + equal(ita,2)*7 + equal(ita,3)*5 + equal(ita,4)*18;\\nsh = equal(ita,0)*19 + equal(ita,1)*21 + equal(ita,2)*18 + equal(ita,3)*16 + equal(ita,4)*18 + equal(ita,5)*9 + equal(ita,6)*19 + equal(ita,7)*5;\\nsi = equal(ita,0)*8 + equal(ita,1)*1 + equal(ita,2)*16 + equal(ita,3)*16 + equal(ita,4)*25;\\nsj = equal(ita,0)*25 + equal(ita,1)*5 + equal(ita,2)*19 + equal(ita,6)*14 + equal(ita,7)*15;\\n\\nlr = if(sw,lr,int(rand(10)));\\nlet = equal(lr,0)*sa + equal(lr,1)*sb + equal(lr,2)*sc + equal(lr,3)*sd + equal(lr,4)*se + equal(lr,5)*sf + equal(lr,6)*sg + equal(lr,7)*sh + equal(lr,8)*si + equal(lr,9)*sj;\\n\\nva = equal(let,23) + equal(let,24) + equal(let,26);\\nvb = above(let,0)*below(let,9) + above(let,10)*below(let,19) + equal(let,21) + equal(let,23);\\nvc = equal(let,1) + equal(let,2) + equal(let,5) + equal(let,6) + equal(let,8) + equal(let,11) + equal(let,16) + equal(let,18) + equal(let,19);\\nvd = above(let,1)*below(let,9) + above(let,10)*below(let,24) - equal(let,20);\\nve = equal(let,13) + equal(let,14) + equal(let,24) + equal(let,25);\\nvf = above(let,1)*below(let,8) + equal(let,9) + above(let,14)*below(let,21) + equal(let,26);\\nvg = equal(let,1);\\nvh = equal(let,9) + equal(let,20);\\nvi = above(let,0)*below(let,5) - equal(let,3) + equal(let,18);\\nvj = above(let,2)*below(let,8) - equal(let,4) + equal(let,9) + above(let,14)*below(let,21) - equal(let,18) + equal(let,26);\\nvk = equal(let,11) + equal(let,13) + above(let,23)*below(let,27);\\nvl = equal(let,8) + equal(let,10) + above(let,12)*below(let,18) + above(let,20)*below(let,24);\\nvm = equal(let,1) + equal(let,2) + equal(let,8) + equal(let,16) + equal(let,18) + equal(let,19);\\nvn = equal(let,1) + equal(let,7) + equal(let,8) + equal(let,10) + above(let,12)*below(let,24) - equal(let,16) - equal(let,18) - equal(let,20) - equal(let,22);\\nvo = equal(let,11) + equal(let,14) + equal(let,17) + equal(let,18) + equal(let,23) + equal(let,24);\\nvp = equal(let,3) + equal(let,5) + equal(let,7) + equal(let,9) + equal(let,10) + equal(let,12) + equal(let,15) + equal(let,17) + equal(let,19) + equal(let,21) + equal(let,26);\\nvq = equal(let,2) + equal(let,4) + equal(let,22);\\nvr = equal(let,9) + equal(let,20) + equal(let,25);\\nvs = equal(let,22);\\nvt = above(let,1)*below(let,13) - equal(let,6) - equal(let,8) - equal(let,11) + equal(let,15) + equal(let,17) + equal(let,19) + equal(let,21) + equal(let,26);\\n\\na = if(above(it,51),0,if(above(it,49),va,if(above(it,47),vb,if(above(it,44),vc,if(above(it,42),vd,if(above(it,39),ve, if(above(it,37),vf,if(above(it,34),vg,if(above(it,31),vh,if(above(it,28),vi,if(above(it,26),vj,if(above(it,23),vk, if(above(it,21),vl,if(above(it,18),vm,if(above(it,16),vn,if(above(it,13),vo,if(above(it,11),vp,if(above(it,8),vq, if(above(it,5),vr,if(above(it,2),vs,if(it,vt,0)))))))))))))))))))));\\n\\na = a*below(ita,8)*q1;\\n\\nx = mx + vx*sz*.75;\\ny = my + vy*sz*1.5;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_a = 0.01;","pixel_eqs_eel":"vx = 0.5+cos(time*0.2)*0.5;\\nvy = 0.5+sin(time*0.2)*0.5;\\nx = x - vx;\\ny = y - vy;\\n\\nd = time*0.04;\\nxx = sin(d)*x + cos(d)*y;\\nyy = cos(d)*x - sin(d)*y;\\n\\nx = xx;\\ny = yy;\\n\\ncz = 0.5;\\nzoom = 0.33;\\nw = 1/zoom*(1+sqrt(sqr(cz) + sqr(x-cx)+sqr(y-cy)));\\ndx = (x-mx)*w;\\ndy = (y-my)*w;","warp":" shader_body { \\n  vec2 uv_z_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (1.0 - abs((\\n    (fract((uv * 0.5)) * 2.0)\\n   - 1.0)));\\n  ret_2.x = (texture (sampler_fc_main, tmpvar_3).y * 0.65);\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (texsize.zw * 6.0);\\n  vec2 tmpvar_5;\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv_orig - 0.5);\\n  tmpvar_5 = ((tmpvar_6 * 0.996) + 0.5);\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = (((texture (sampler_blur1, \\n    (tmpvar_5 + (vec2(1.0, 0.0) * tmpvar_4))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (tmpvar_5 - (vec2(1.0, 0.0) * tmpvar_4))\\n  ).xyz * scale1) + bias1)).z;\\n  tmpvar_7.y = (((texture (sampler_blur1, \\n    (tmpvar_5 + (vec2(0.0, 1.0) * tmpvar_4))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (tmpvar_5 - (vec2(0.0, 1.0) * tmpvar_4))\\n  ).xyz * scale1) + bias1)).z;\\n  uv_z_1 = (tmpvar_5 - ((tmpvar_7 * texsize.zw) * 2.0));\\n  ret_2.z = max (((\\n    (texture (sampler_fc_main, tmpvar_3).x - 0.5)\\n   * 3.0) * clamp (\\n    (1.0 - (sqrt(dot (tmpvar_6, tmpvar_6)) * 3.2))\\n  , 0.0, 1.0)), texture (sampler_fc_main, uv_z_1).z);\\n  ret_2.z = (ret_2.z + ((texture (sampler_fc_main, uv_z_1).z - \\n    ((texture (sampler_blur1, clamp (uv_z_1, 0.0, 1.0)).xyz * scale1) + bias1)\\n  .z) * 0.02));\\n  ret_2.y = (max (texture (sampler_fc_main, mix (uv, uv_orig, vec2(1.0001, 1.0001))).y, texture (sampler_fc_main, uv_orig).z) - 0.008);\\n  ret_2.z = (ret_2.z * (1.0 + (ret_2.y * 0.024)));\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = ret_2;\\n  ret = tmpvar_8.xyz;\\n }","comp":" shader_body { \\n  vec2 uv_1;\\n  float ang2_2;\\n  ang2_2 = (fract((0.9549295 * ang)) / 6.0);\\n  ang2_2 = (abs((ang2_2 - 0.08333334)) * 6.283185);\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = cos(ang2_2);\\n  tmpvar_3.y = sin(ang2_2);\\n  uv_1 = (0.5 + ((\\n    (0.4 * (rad * sqrt(dot (texsize.xy, texsize.xy))))\\n   * tmpvar_3) * texsize.zw));\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = cos((uv_1.y * 100.0));\\n  tmpvar_4.y = sin((uv_1.x * 120.0));\\n  uv_1 = (uv_1 + (0.02 * tmpvar_4));\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = (1.4 * pow ((\\n    clamp (((texture (sampler_blur1, uv_1).xyz * scale1) + bias1), 0.0, 1.0)\\n   * \\n    (texture (sampler_fc_main, uv_1).xyz - ((texture (sampler_blur3, uv_1).xyz * scale3) + bias3))\\n  ), vec3(0.5, 0.5, 0.5)));\\n  ret = tmpvar_5.xyz;\\n }"}')},9450:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1.7,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"wave_thick":1,"wave_brighten":0,"wrap":0,"darken":1,"invert":1,"wave_a":0.004,"wave_scale":0.295,"wave_smoothing":0,"wave_mystery":-0.44,"modwavealphastart":1,"modwavealphaend":1,"warpanimspeed":0.228,"warpscale":4.141,"zoomexp":0.43865,"zoom":0.9901,"warp":0.1809,"wave_y":0.04,"ob_size":0.005,"ob_r":1,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0.25,"mv_g":0.5,"mv_b":0,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"sides":100,"additive":1,"thickoutline":1,"textured":1,"x":0.33,"rad":0.3434,"tex_ang":0.12566,"tex_zoom":0.70591,"g":1,"b":1,"g2":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"additive":1,"x":0.49,"rad":0.04557,"tex_zoom":0.73458,"g":1,"a":0,"g2":0,"border_g":0,"border_b":0,"border_a":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"additive":1,"thickoutline":1,"y":0.75,"rad":0.04208,"tex_zoom":0.73458,"g":1,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"vx = 0","frame_eqs_eel":"x = q2;\\ny = q6;"},{"baseVals":{"sides":100,"additive":1,"thickoutline":1,"y":0.75,"rad":0.07059,"tex_zoom":0.73458,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"vx = 0","frame_eqs_eel":"x = q1;\\ny = q5;"}],"waves":[{"baseVals":{"enabled":1,"thick":1,"additive":1,"scaling":2.0231,"smoothing":0,"r":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"vol = bass*8 + mid*5 + treb*3;\\nm = m*0.97 + vol*0.08;\\nmonitor = vol;\\nbeat = above(vol,res)*above(vol,m)*above(vol,16);\\ndiff = (1-beat)*diff + beat*(vol-res);\\nres = beat*(vol + m*0.04) + (1-beat)*(res -  (0.1+diff*0.02)*60/fps);\\nres = max(0,res);\\nb = beat;\\ng = 1-beat;","point_eqs_eel":"tt3 = tt3*0.6 + (value1)*1;\\ntt2 = tt2*0.7 + tt3*0.2;\\ntt1 = tt1*0.8 + tt2*0.1;\\nd = d*0.9 + tt1*0.2;\\n\\ny = 0.5 + d*sample*(1-sample)*4;\\nx =  -0.05 + sample*1.1;"},{"baseVals":{"thick":1,"scaling":2.44415,"smoothing":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"","point_eqs_eel":"w = sample*asin(1)*4;\\nd = 0.04;\\nx = 0.5 + sin(w)*d;\\ny = 0.5 + cos(w)*d;"},{"baseVals":{"thick":1,"additive":1,"scaling":100,"smoothing":0.6,"r":0,"g":0.4,"a":0.3,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt7 = q7;\\nt8 = q8;","point_eqs_eel":"sample = 1-sample;\\nxxx = xx;\\nyyy = yy;\\nxx = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2\\n+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;\\n\\nyy = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6\\n+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;\\nd = 1/sqrt(sqr(xx-xxx)+sqr(yy-yyy));\\nx = xx + sample*(1-sample)*(value1-value2)*(yy-yyy)*d;\\ny = yy - sample*(1-sample)*(value1-value2)*(xx-xxx)*d;"},{"baseVals":{"usedots":1,"scaling":2.44415,"smoothing":0,"r":0,"g":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t8 = 1;","point_eqs_eel":"t8 = -t8;\\ny = (1+t8)*0.01;\\nx = sample;"}],"init_eqs_eel":"x1 = 0.9;\\ny1 = 0.5;\\n\\nx2 = 0.5; y2 = 0.5;\\nx3 = 0.5; y3 = 0.5;\\nx4 = 0.5; y4 = 0.5;","frame_eqs_eel":"wave_a = 0;\\nzoom = 0.996;\\nwarp = 0.18 - (bass-treb)*0.15;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 uv1_1;\\n  vec3 ret_2;\\n  ret_2.yz = (texture (sampler_main, uv).xyz - 0.08).yz;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (texsize.zw * 4.0);\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = tmpvar_4.x;\\n  tmpvar_6.y = tmpvar_5.x;\\n  uv1_1 = (uv + (tmpvar_3 * (tmpvar_6 * 0.4)));\\n  ret_2.x = texture (sampler_fc_main, uv1_1).x;\\n  ret_2.x = (ret_2.x - ((\\n    (((texture (sampler_blur1, uv1_1).xyz * scale1) + bias1).x - ret_2.x)\\n   * 0.05) + 0.004));\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = tmpvar_4.x;\\n  tmpvar_7.y = tmpvar_5.x;\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = tmpvar_4.z;\\n  tmpvar_8.y = tmpvar_5.z;\\n  ret_2.z = (max ((\\n    sqrt(dot (tmpvar_7, tmpvar_7))\\n   * 1.4), texture (sampler_main, (\\n    mix (uv_orig, uv, vec2(-1.0, -1.0))\\n   - \\n    ((tmpvar_8 * texsize.zw) * 4.0)\\n  )).z) - 0.004);\\n  vec4 tmpvar_9;\\n  tmpvar_9.w = 1.0;\\n  tmpvar_9.xyz = ret_2;\\n  ret = tmpvar_9.xyz;\\n }","comp":" shader_body { \\n  vec2 uv1_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (texsize.zw * 3.0);\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = tmpvar_4.x;\\n  tmpvar_6.y = tmpvar_5.x;\\n  uv1_1 = (uv + ((tmpvar_6 * texsize.zw) * 32.0));\\n  ret_2 = (vec3(0.5, 0.0, 0.0) * texture (sampler_main, uv1_1).x);\\n  ret_2.x = (ret_2.x + ((tmpvar_4.x - tmpvar_5.x) * 0.4));\\n  ret_2 = (pow (ret_2.x, 0.8) * vec3(1.2, 0.15, 0.0));\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = tmpvar_4.x;\\n  tmpvar_7.y = tmpvar_5.x;\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = tmpvar_4.y;\\n  tmpvar_8.y = tmpvar_5.y;\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = tmpvar_4.x;\\n  tmpvar_9.y = tmpvar_5.x;\\n  vec3 tmpvar_10;\\n  tmpvar_10 = mix (mix (mix (ret_2, vec3(1.0, 1.0, 1.0), vec3(\\n    (((texture (sampler_blur2, (uv - \\n      ((tmpvar_7 * texsize.zw) * 128.0)\\n    )).xyz * scale2) + bias2).z * 0.6)\\n  )), vec3(1.0, 1.1, 1.2), texture (sampler_main, uv1_1).zzz), vec3(0.2, 0.0, 0.1), vec3(((\\n    (texture (sampler_blur1, ((uv - (\\n      (tmpvar_8 * texsize.zw)\\n     * 16.0)) - ((tmpvar_9 * texsize.zw) * 32.0))).xyz * scale1)\\n   + bias1).y * 6.0)));\\n  ret_2 = tmpvar_10;\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 1.0;\\n  tmpvar_11.xyz = tmpvar_10;\\n  ret = tmpvar_11.xyz;\\n }"}')},5684:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"wave_thick":1,"wave_brighten":0,"wave_a":0.004,"wave_scale":0.267,"wave_smoothing":0,"wave_mystery":-0.44,"modwavealphastart":1,"modwavealphaend":1,"warpscale":16.016,"zoomexp":11.56276,"zoom":1.05971,"warp":0.13126,"wave_y":0.04,"ob_size":0,"ob_a":1,"ib_size":0,"mv_x":64,"mv_y":48,"mv_l":0,"mv_b":0,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"thickoutline":1,"rad":0.01,"tex_ang":0.12566,"tex_zoom":1.51878,"g":0.99,"b":1,"a":0.1,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"thickoutline":1,"textured":1,"rad":0.80013,"ang":4.64954,"tex_zoom":1.24471,"g":1,"b":1,"r2":1,"b2":1,"a2":0.77,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"thickoutline":1,"x":1,"rad":3.0054,"tex_ang":0.12566,"tex_zoom":1.51878,"r":0,"g":1,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"thickoutline":1,"x":1,"rad":0.39872,"tex_ang":0.12566,"tex_zoom":1.51878,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"thick":1,"scaling":2.0231,"smoothing":0,"r":0,"g":0,"b":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"","point_eqs_eel":"tt3 = tt3*0.6 + (value1)*1;\\ntt2 = tt2*0.7 + tt3*0.2;\\ntt1 = tt1*0.8 + tt2*0.1;\\nd = d*0.9 + tt1*0.2;\\n\\ny = 0.5 + d*sample*(1-sample)*4;\\nx =  -0.05 + sample*1.1;"},{"baseVals":{"scaling":2.0231,"smoothing":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"","point_eqs_eel":"tt3 = tt3*0.6 + (value1)*1;\\ntt2 = tt2*0.7 + tt3*0.2;\\ntt1 = tt1*0.8 + tt2*0.1;\\nd = d*0.9 + tt1*0.2;\\n\\ny = 0.5 + d*sample*(1-sample)*4;\\nx =  -0.05 + sample*1.1;"},{"baseVals":{"thick":1,"additive":1,"scaling":100,"smoothing":0.6,"r":0,"g":0.4,"a":0.3,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt7 = q7;\\nt8 = q8;","point_eqs_eel":"sample = 1-sample;\\nxxx = xx;\\nyyy = yy;\\nxx = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2\\n+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;\\n\\nyy = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6\\n+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;\\nd = 1/sqrt(sqr(xx-xxx)+sqr(yy-yyy));\\nx = xx + sample*(1-sample)*(value1-value2)*(yy-yyy)*d;\\ny = yy - sample*(1-sample)*(value1-value2)*(xx-xxx)*d;"},{"baseVals":{"usedots":1,"scaling":2.44415,"smoothing":0,"r":0,"g":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t8 = 1;","point_eqs_eel":"t8 = -t8;\\ny = (1+t8)*0.01;\\nx = sample;"}],"init_eqs_eel":"q11 = 0.5/asin(1);","frame_eqs_eel":"zoom = 1;\\nv = v*0.9 + (bass-treb)*0.04;\\nt = t+ v*0.01;\\nq12 = time*0.1 + t;\\nq13 = 0.25 + (bass_att-treb_att)*0.01;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 my_uv_1;\\n  vec2 d_2;\\n  vec3 ret_3;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (texsize.zw * 4.0);\\n  vec3 tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_blur1, \\n    fract((uv + (vec2(1.0, 0.0) * tmpvar_4)))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    fract((uv - (vec2(1.0, 0.0) * tmpvar_4)))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_6;\\n  tmpvar_6 = (((texture (sampler_blur1, \\n    fract((uv + (vec2(0.0, 1.0) * tmpvar_4)))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    fract((uv - (vec2(0.0, 1.0) * tmpvar_4)))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_7;\\n  tmpvar_7 = ((texture (sampler_blur1, uv).xyz * scale1) + bias1);\\n  d_2 = -(tmpvar_4);\\n  float tmpvar_8;\\n  tmpvar_8 = (d_2 * 4.0).x;\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = tmpvar_5.y;\\n  tmpvar_9.y = tmpvar_6.y;\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = tmpvar_5.x;\\n  tmpvar_10.y = tmpvar_6.x;\\n  vec2 tmpvar_11;\\n  tmpvar_11 = ((uv - (tmpvar_9 * d_2)) - (tmpvar_10 * tmpvar_8));\\n  ret_3.y = texture (sampler_fc_main, (tmpvar_11 - floor(tmpvar_11))).y;\\n  ret_3.y = (ret_3.y + ((\\n    (ret_3.y - tmpvar_7.y)\\n   * 0.042) + -0.0075));\\n  vec2 tmpvar_12;\\n  tmpvar_12.x = tmpvar_5.x;\\n  tmpvar_12.y = tmpvar_6.x;\\n  vec2 tmpvar_13;\\n  tmpvar_13.x = tmpvar_5.z;\\n  tmpvar_13.y = tmpvar_6.z;\\n  my_uv_1 = ((uv - (tmpvar_12 * d_2)) - (tmpvar_13 * tmpvar_8));\\n  ret_3.x = texture (sampler_fc_main, (my_uv_1 - floor(my_uv_1))).x;\\n  ret_3.x = (ret_3.x + ((\\n    (ret_3.x - tmpvar_7.x)\\n   * 0.042) + -0.0075));\\n  vec2 tmpvar_14;\\n  tmpvar_14.x = tmpvar_5.z;\\n  tmpvar_14.y = tmpvar_6.z;\\n  vec2 tmpvar_15;\\n  tmpvar_15.x = tmpvar_5.y;\\n  tmpvar_15.y = tmpvar_6.y;\\n  my_uv_1 = ((uv - (tmpvar_14 * d_2)) - (tmpvar_15 * tmpvar_8));\\n  ret_3.z = texture (sampler_fc_main, (my_uv_1 - floor(my_uv_1))).z;\\n  ret_3.z = (ret_3.z + ((\\n    (ret_3.z - tmpvar_7.z)\\n   * 0.042) + -0.0075));\\n  vec4 tmpvar_16;\\n  tmpvar_16.w = 1.0;\\n  tmpvar_16.xyz = ret_3;\\n  ret = tmpvar_16.xyz;\\n }","comp":" shader_body { \\n  vec2 uv_1;\\n  uv_1 = uv;\\n  vec3 ret_2;\\n  float tmpvar_3;\\n  tmpvar_3 = -(q12);\\n  vec2 tmpvar_4;\\n  tmpvar_4 = ((uv - 0.5) * aspect.wz);\\n  float tmpvar_5;\\n  float tmpvar_6;\\n  tmpvar_6 = (min (abs(\\n    (tmpvar_4.x / tmpvar_4.y)\\n  ), 1.0) / max (abs(\\n    (tmpvar_4.x / tmpvar_4.y)\\n  ), 1.0));\\n  float tmpvar_7;\\n  tmpvar_7 = (tmpvar_6 * tmpvar_6);\\n  tmpvar_7 = (((\\n    ((((\\n      ((((-0.01213232 * tmpvar_7) + 0.05368138) * tmpvar_7) - 0.1173503)\\n     * tmpvar_7) + 0.1938925) * tmpvar_7) - 0.3326756)\\n   * tmpvar_7) + 0.9999793) * tmpvar_6);\\n  tmpvar_7 = (tmpvar_7 + (float(\\n    (abs((tmpvar_4.x / tmpvar_4.y)) > 1.0)\\n  ) * (\\n    (tmpvar_7 * -2.0)\\n   + 1.570796)));\\n  tmpvar_5 = (tmpvar_7 * sign((tmpvar_4.x / tmpvar_4.y)));\\n  if ((abs(tmpvar_4.y) > (1e-08 * abs(tmpvar_4.x)))) {\\n    if ((tmpvar_4.y < 0.0)) {\\n      if ((tmpvar_4.x >= 0.0)) {\\n        tmpvar_5 += 3.141593;\\n      } else {\\n        tmpvar_5 = (tmpvar_5 - 3.141593);\\n      };\\n    };\\n  } else {\\n    tmpvar_5 = (sign(tmpvar_4.x) * 1.570796);\\n  };\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = ((tmpvar_5 * q11) - tmpvar_3);\\n  tmpvar_8.y = (((q13 * \\n    log(sqrt(dot (tmpvar_4, tmpvar_4)))\\n  ) + (tmpvar_5 * q11)) + tmpvar_3);\\n  uv_1 = (0.5 + (0.5 - abs(\\n    ((fract((tmpvar_8 * 0.5)) * 2.0) - 1.0)\\n  )));\\n  vec4 tmpvar_9;\\n  tmpvar_9 = texture (sampler_main, uv_1);\\n  ret_2 = (vec3(dot (tmpvar_9.xyz, vec3(0.32, 0.49, 0.29))) * mix (vec3(1.0, 1.0, 1.0), vec3(0.2, 0.5, 1.0), tmpvar_9.xxx));\\n  ret_2 = (ret_2 * 2.0);\\n  vec4 tmpvar_10;\\n  tmpvar_10.w = 1.0;\\n  tmpvar_10.xyz = ret_2;\\n  ret = tmpvar_10.xyz;\\n }"}')},5236:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"wave_thick":1,"wave_brighten":0,"wrap":0,"wave_a":0.004,"wave_scale":0.242,"wave_smoothing":0,"wave_mystery":-0.44,"modwavealphastart":1,"modwavealphaend":1,"warpanimspeed":0.88,"warpscale":9.181,"zoomexp":0.65309,"zoom":0.87866,"warp":0.04914,"wave_y":0.04,"ob_size":0.05,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"thickoutline":1,"y":0.04,"rad":0.01,"tex_ang":0.12566,"tex_zoom":1.51878,"r":0,"a":0,"g2":0,"b2":0.01,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"additive":1,"thickoutline":1,"textured":1,"x":0.49,"rad":1.32907,"tex_zoom":0.49831,"g":1,"b":1,"a":0.99,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"thickoutline":1,"x":1,"rad":3.0054,"tex_ang":0.12566,"tex_zoom":1.51878,"r":0,"g":1,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"thickoutline":1,"x":1,"rad":0.39872,"tex_ang":0.12566,"tex_zoom":1.51878,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"thick":1,"additive":1,"scaling":2.0231,"smoothing":0,"r":0,"b":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"r = 1; g = 0; b = 1;","point_eqs_eel":"tt3 = tt3*0.6 + (value1)*1;\\ntt2 = tt2*0.7 + tt3*0.2;\\ntt1 = tt1*0.8 + tt2*0.1;\\nd = d*0.9 + tt1*0.2;\\n\\ny = 0.6 + d*sample*(1-sample)*2;\\nx =  -0.05 + sample*1.1;"},{"baseVals":{"scaling":2.44415,"smoothing":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t8 = 1;","point_eqs_eel":"t8 = -t8;\\ny = sample;\\nx = 0.5 + t8*0.005;\\n\\npi3 = 3.1415*2*0.3333;\\nt = time + sample*2;\\nc=2;\\n\\nr = sin(t)*c;\\ng = sin(t+pi3)*c;\\n\\nb = sin(t-pi3)*c;\\n\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\n"},{"baseVals":{"thick":1,"additive":1,"scaling":100,"smoothing":0.6,"r":0,"g":0.4,"a":0.3,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt7 = q7;\\nt8 = q8;","point_eqs_eel":"sample = 1-sample;\\nxxx = xx;\\nyyy = yy;\\nxx = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2\\n+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;\\n\\nyy = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6\\n+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;\\nd = 1/sqrt(sqr(xx-xxx)+sqr(yy-yyy));\\nx = xx + sample*(1-sample)*(value1-value2)*(yy-yyy)*d;\\ny = yy - sample*(1-sample)*(value1-value2)*(xx-xxx)*d;"},{"baseVals":{"usedots":1,"scaling":2.44415,"smoothing":0,"r":0,"g":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t8 = 1;","point_eqs_eel":"t8 = -t8;\\ny = (1+t8)*0.01;\\nx = sample;"}],"init_eqs_eel":"x1 = 0.9;\\ny1 = 0.5;\\n\\nx2 = 0.5; y2 = 0.5;\\nx3 = 0.5; y3 = 0.5;\\nx4 = 0.5; y4 = 0.5;","frame_eqs_eel":"zoom = 1;\\n//warp = 0;\\nscale = 1;\\nangle = time*.1;\\ntranslation_x = 0;\\ntranslation_y = 0.12;\\n\\na_r = cos(angle)*scale;\\na_i = sin(angle)*scale;\\nb_r = translation_x;\\nb_i = translation_y;\\n\\n//complex inverted\\nscale = 1.6;\\nangle = 0;\\ntranslation_u = 0;\\ntranslation_v = 0;\\n\\n// c\\nq15 = cos(angle)*scale;\\nq16 = sin(angle)*scale;\\n\\n// d\\nq17 = translation_u;\\nq18 = translation_v;\\n\\n// c^(-1)\\nc_inv_r = q15/(q15*q15+q16*q16);\\nc_inv_i = q16/(q15*q15+q16*q16);\\n\\n// a*c^(-1)\\nq11 = (a_r*c_inv_r - a_i*c_inv_i);\\nq12 = (a_r*c_inv_i - a_i*c_inv_r);\\n\\n// (bc-ad)\\nbcad_r = (b_r*q15 - b_i*q16)-(a_r*q17-a_i*q18);\\nbcad_i = (b_r*q16 - b_i*q15)-(a_r*q18-a_i*q17);\\n\\n// mu*c^(-1)\\nq13 = bcad_r*c_inv_r - bcad_i*c_inv_i;\\nq14 = bcad_r*c_inv_i - bcad_i*c_inv_r;","pixel_eqs_eel":"","warp":" shader_body { \\n  float conway_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = (((\\n    ((texture (sampler_blur2, (uv + vec2(0.02, 0.0))).xyz * scale2) + bias2)\\n   - \\n    ((texture (sampler_blur2, (uv - vec2(0.02, 0.0))).xyz * scale2) + bias2)\\n  ).y * 1280.0) * texsize.z);\\n  tmpvar_3.y = (((\\n    ((texture (sampler_blur2, (uv + vec2(0.0, 0.02))).xyz * scale2) + bias2)\\n   - \\n    ((texture (sampler_blur2, (uv - vec2(0.0, 0.02))).xyz * scale2) + bias2)\\n  ).y * 1024.0) * texsize.w);\\n  ret_2.y = texture (sampler_pc_main, (uv - (tmpvar_3 * 0.004))).y;\\n  ret_2.y = (ret_2.y + ((\\n    ((ret_2.y - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).y) - 0.1)\\n   * 0.1) + 0.02));\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (vec2(0.0, 1.0) * texsize.zw);\\n  ret_2.z = (texture (sampler_fc_main, (uv - tmpvar_4)).z - 0.004);\\n  conway_1 = (texture (sampler_pw_main, (uv_orig - texsize.zw)).x + texture (sampler_pw_main, (uv_orig + (vec2(0.0, -1.0) * texsize.zw))).x);\\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(1.0, -1.0) * texsize.zw))).x);\\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(-1.0, 0.0) * texsize.zw))).x);\\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(1.0, 0.0) * texsize.zw))).x);\\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(-1.0, 1.0) * texsize.zw))).x);\\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + tmpvar_4)).x);\\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + texsize.zw)).x);\\n  conway_1 = (conway_1 - fract(conway_1));\\n  float tmpvar_5;\\n  tmpvar_5 = clamp (texture (sampler_pc_main, uv_orig).x, 0.0, 1.0);\\n  ret_2.x = (clamp ((1.0 - \\n    abs((conway_1 - 3.0))\\n  ), 0.0, 1.0) * (1.0 - tmpvar_5));\\n  ret_2.x = (ret_2.x + (clamp (\\n    max ((1.0 - abs((conway_1 - 2.0))), (1.0 - abs((conway_1 - 3.0))))\\n  , 0.0, 1.0) * tmpvar_5));\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = ret_2;\\n  ret = tmpvar_6.xyz;\\n }","comp":" shader_body { \\n  vec2 moebius_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = q11;\\n  tmpvar_3.y = q12;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = q17;\\n  tmpvar_4.y = q18;\\n  vec2 tmpvar_5;\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv - 0.5);\\n  tmpvar_5 = (tmpvar_6 * aspect.xy);\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = ((tmpvar_5.x * q15) - (tmpvar_5.y * q16));\\n  tmpvar_7.y = ((tmpvar_5.x * q16) - (tmpvar_5.y * q15));\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (tmpvar_7 + tmpvar_4);\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = ((q13 * tmpvar_8.x) + (q14 * tmpvar_8.y));\\n  tmpvar_9.y = ((q14 * tmpvar_8.x) - (q13 * tmpvar_8.y));\\n  moebius_1 = (((tmpvar_9 / \\n    ((tmpvar_8.x * tmpvar_8.x) + (tmpvar_8.y * tmpvar_8.y))\\n  ) + tmpvar_3) * 0.5);\\n  float tmpvar_10;\\n  tmpvar_10 = sqrt(dot (moebius_1, moebius_1));\\n  moebius_1 = (0.5 + ((\\n    (1.0 - abs(((\\n      fract((moebius_1 * 0.5))\\n     * 2.0) - 1.0)))\\n   - 0.5) * 0.95));\\n  vec2 tmpvar_11;\\n  tmpvar_11 = (0.5 + (tmpvar_6 * 0.2));\\n  ret_2 = (texture (sampler_main, tmpvar_11).z * vec3(0.4, 0.0, 0.7));\\n  ret_2 = (mix (ret_2, vec3(0.0, 1.0, 1.0), vec3(clamp (texture (sampler_fc_main, moebius_1).y, 0.0, 1.0))) * (1.4 - pow (\\n    (tmpvar_10 * 0.8)\\n  , 0.3)));\\n  vec3 tmpvar_12;\\n  tmpvar_12 = mix (mix (mix (ret_2, vec3(4.0, 1.0, 0.0), vec3(\\n    ((clamp ((texture (sampler_fc_main, tmpvar_11).y - texture (sampler_pc_main, tmpvar_11).y), 0.0, 1.0) * 4.0) * (tmpvar_10 * tmpvar_10))\\n  )), vec3(-4.0, -4.0, -4.0), texture (sampler_main, tmpvar_11).xxx), vec3(2.0, 2.0, 2.0), vec3((texture (sampler_pc_main, tmpvar_11).x * 0.75)));\\n  ret_2 = tmpvar_12;\\n  vec4 tmpvar_13;\\n  tmpvar_13.w = 1.0;\\n  tmpvar_13.xyz = tmpvar_12;\\n  ret = tmpvar_13.xyz;\\n }"}')},7425:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":3,"gammaadj":1,"decay":0.995,"echo_zoom":1.007,"echo_orient":3,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":0.107,"zoomexp":0.33077,"zoom":0.9901,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0,"ob_r":1,"ob_g":1,"ob_b":1,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_a":0},"shapes":[{"baseVals":{"textured":1,"rad":5.3898,"tex_ang":1.19381,"tex_zoom":0.18923,"g":0.97,"b":1,"a":0.94,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"textured":1,"rad":3.99882,"tex_zoom":0.25005,"g":1,"b":1,"a":0.6,"r2":1,"b2":1,"a2":0.6,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":18,"textured":1,"num_inst":10,"x":0.463,"rad":1.60089,"tex_zoom":0.67634,"g":1,"b":1,"r2":0.7,"g2":0.8,"b2":0.8,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":16,"num_inst":353,"x":0.503,"rad":0.0376,"tex_zoom":1.11234,"g":1,"b":1,"g2":0,"border_a":0.06},"init_eqs_eel":"","frame_eqs_eel":"sample=instance/num_inst;\\nrad=.05+.04*sin(sample);\\n\\n/////  Knot\\n\\nq10=250*sample;\\nmy_x = -.22*cos(q10)-1.28*sin(q10)-.44*cos(3*q10)-.78*sin(3*q10);\\nmy_y= -.1*cos(2*q10)-.27*sin(2*q10)+.38*cos(4*q10)+.46*sin(4*q10);\\nmy_z=.7*cos(3*q10)-.4*sin(3*q10);\\n\\n\\n/////// rotations... by flexi\\n\\nd = .2; \\nzoom = 1;\\n\\nw3 = q1;\\nw2 = q2;\\nw1 = q3;\\n\\nx1 = cos(w1)*my_x + sin(w1)*my_y;\\ny1 = -sin(w1)*my_x + cos(w1)*my_y;\\nz1 = my_z;\\n\\nx2 = cos(w2)*x1 + sin(w2)*z1;\\nz2 = -sin(w2)*x1 + cos(w2)*z1;\\ny2 = y1;\\n\\ny3 = cos(w3)*y2 + sin(w3)*z2;\\nz3 = -sin(w3)*y2 + cos(w3)*z2;\\nx3 = x2;\\n\\n// perspective calculation\\n\\nl = sqrt(x3*x3 + y3*y3);\\nw = atan2(x3,y3);\\np = tan(asin(1) + atan2(d+z3,l));\\nd = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));\\n\\nmy_x = zoom*sin(w)*p;\\nmy_y = zoom*cos(w)*p;\\n\\np1 = .2*sin(sample*50);\\np2 = .2*sin(sample*80);\\n\\nx = .5+my_x*p1;\\ny = .5+my_y*p2;\\n\\nr = .4*sin(sample*80);\\nb = .8*sin(sample*66);\\ng = .6*sin(sample*120);"}],"waves":[{"baseVals":{"spectrum":1,"additive":1,"smoothing":0,"r":0.4,"g":0.4,"b":0.4,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"smoothing":0,"r":0,"g":0,"b":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"r":0,"g":0,"b":0,"a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"x1 = 0;\\ny1 = 0;","frame_eqs_eel":"vvb = if(below(vvb,0),0,vvb);\\nvvm = if(below(vvm,0),0,vvm);\\nvvt = if(below(vvt,0),0,vvt);\\nvvb = if(above(vvb,1),1,vvb);\\nvvm = if(above(vvm,1),1,vvm);\\nvvt = if(above(vvt,1),1,vvt);\\nvb = vb*0.85 + (1-vb)*pow(bass,2)*0.01;\\nvvb = vvb*0.95 + (1-vvb)*vb*0.2;\\nvm = vm*0.85 + (1-vm)*pow(mid,2)*0.01;\\nvvm = vvm*0.95 + (1-vvm)*vm*0.2;\\nvt = vt*0.85 + (1-vt)*pow(treb,2)*0.01;\\nvvt = vvt*0.95 + (1-vvt)*vt*0.2;\\n\\nq1 = vvb;//0.5 + vb - vvb;\\nq2 = vvm;//0.5 + vm - vvm;\\nq3 = vvt;//0.5 + vt - vvt;\\n\\nv=0.2*(60/fps);\\nd = v*0.35;\\nbb = bb + vvb*v - d;\\nmm = mm + vvm*v - d;\\ntt = tt + vvt*v - d;\\nq6 = bb;\\nq5 = mm;\\nq4 = tt;\\nzoom = 0.995","pixel_eqs_eel":"//dx = -0.005;","warp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 4.0);\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = ((2.0 * (\\n    (texture (sampler_blur1, (uv + (vec2(1.0, 0.0) * tmpvar_2))).xyz * scale1)\\n   + bias1)) - (2.0 * (\\n    (texture (sampler_blur1, (uv - (vec2(1.0, 0.0) * tmpvar_2))).xyz * scale1)\\n   + bias1))).x;\\n  tmpvar_3.y = ((2.0 * (\\n    (texture (sampler_blur1, (uv + (vec2(0.0, 1.0) * tmpvar_2))).xyz * scale1)\\n   + bias1)) - (2.0 * (\\n    (texture (sampler_blur1, (uv - (vec2(0.0, 1.0) * tmpvar_2))).xyz * scale1)\\n   + bias1))).x;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (-(tmpvar_3) * texsize.zw);\\n  ret_1.yz = vec2(0.0, 0.0);\\n  ret_1.x = (texture (sampler_fw_main, (uv - tmpvar_4)).x - ((\\n    (texture (sampler_blur3, uv).xyz * scale3)\\n   + bias3).x - (\\n    (texture (sampler_blur1, (uv + tmpvar_4)).xyz * scale1)\\n   + bias1).x));\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = ret_1;\\n  ret = tmpvar_5.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv);\\n  ret_1 = (vec3((tmpvar_2.x * (1.0 - \\n    ((texture (sampler_blur2, uv).xyz * scale2) + bias2)\\n  .x))) - (roam_sin.wzy * roam_cos.zxy));\\n  ret_1 = (ret_1 + ((\\n    (1.0 - tmpvar_2.x)\\n   * \\n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\\n  .x) * vec3(2.0, 1.2, 0.0)));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_1;\\n  ret = tmpvar_3.xyz;\\n }"}')},7125:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1.56,"decay":1,"echo_zoom":0.362,"echo_orient":1,"wave_thick":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":1.599,"wave_smoothing":0,"wave_mystery":-0.5,"modwavealphastart":2,"modwavealphaend":2,"warpscale":0.107,"zoomexp":0.1584,"fshader":1,"warp":0.01,"wave_r":0.51,"wave_g":0.5,"ob_size":0,"ob_a":1,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0.5,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"sides":100,"thickoutline":1,"rad":0.50126,"tex_zoom":0.99996,"g":1,"b":1,"r2":1,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.5+sin(time*0.618)*0.2;\\ny = 0.5+cos(time*1.618)*0.2;\\nrad = bass*0.05;\\nborder_r = 1-(sin(time*1.25)*0.3+0.7);\\nborder_g = 1-(sin(time)*0.3+0.3);\\nborder_b = 1-(sin(time/3)*0.5+0.5);"},{"baseVals":{"sides":100,"thickoutline":1,"rad":0.50126,"g":1,"b":1,"g2":0,"b2":1,"border_g":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.5+sin(time*2.618)*0.3;\\ny = 0.5+cos(time*3.14)*0.3;\\nrad = bass*0.05;\\nborder_r = 1-(sin(time*1.25)*0.3+0.7);\\nborder_g = 1-(sin(time)*0.3+0.3);\\nborder_b = 1-(sin(time/3)*0.5+0.5);\\n"},{"baseVals":{"sides":100,"thickoutline":1,"rad":0.50126,"tex_zoom":0.9998,"g":1,"b":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.5+sin(-time*2.618)*0.4;\\ny = 0.5+cos(-time*1.14)*0.4;\\nrad = bass*0.05;\\nborder_r = 1-(sin(time*1.25)*0.3+0.7);\\nborder_g = 1-(sin(time)*0.3+0.3);\\nborder_b = 1-(sin(time/3)*0.5+0.5);"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"scaling":0.16188,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"additive":1,"scaling":25.12601,"smoothing":1,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"q11 = 0.5/asin(1);","frame_eqs_eel":"//zoom = 0.99;\\nib_r = sin(time*1.25*4)*0.3+0.7;\\nib_g = sin(time*4)*0.3+0.3;\\nib_b = sin(time/3*4)*0.5+0.5;\\n\\nxx1 = xx1*0.9 + (bass)*0.01;\\nxx2 = xx2*0.9 + (treb)*0.01;\\nyy1 = yy1*0.94 + (treb+bass)*0.0075;\\n\\nx1 = 0.5 + (xx1-xx2)*3;\\ny1 = 0.4 + yy1;\\n\\nx1 = max(0,min(1,x1)); y1 = max(0,min(1,y1));\\n\\nspring = 25;\\ngrav = 1.1;\\nresist = 1;\\nbounce = 0.85;\\ndt = 0.0002*(60/fps);\\n\\nvx2 = vx2*(1-resist*dt) + dt*((x1+x3-2*x2)*spring);\\nvy2 = vy2*(1-resist*dt) + dt*((y1+y3-2*y2)*spring-grav);\\nvx3 = vx3*(1-resist*dt) + dt*((x2+x4-2*x3)*spring);\\nvy3 = vy3*(1-resist*dt) + dt*((y2+y4-2*y3)*spring-grav);\\nvx4 = vx4*(1-resist*dt) + dt*((x3-x4)*spring);\\nvy4 = vy4*(1-resist*dt) + dt*((y3-y4)*spring-grav);\\n\\nx2 = x2 + vx2;\\ny2 = y2 + vy2;\\nx3 = x3 + vx3;\\ny3 = y3 + vy3;\\nx4 = x4 + vx4;\\ny4 = y4 + vy4;\\n\\nvx2 = if(above(x2,0),vx2,abs(vx2)*bounce);\\nvx2 = if(below(x2,1),vx2,-abs(vx2)*bounce);\\nvx3 = if(above(x3,0),vx3,abs(vx3)*bounce);\\nvx3 = if(below(x3,1),vx3,-abs(vx3)*bounce);\\nvx4 = if(above(x4,0),vx4,abs(vx4)*bounce);\\nvx4 = if(below(x4,1),vx4,-abs(vx4)*bounce);\\nvy2 = if(above(y2,0),vy2,abs(vy2)*bounce);\\nvy2 = if(below(y2,1),vy2,-abs(vy2)*bounce);\\nvy3 = if(above(y3,0),vy3,abs(vy3)*bounce);\\nvy3 = if(below(y3,1),vy3,-abs(vy3)*bounce);\\nvy4 = if(above(y4,0),vy4,abs(vy4)*bounce);\\nvy4 = if(below(y4,1),vy4,-abs(vy4)*bounce);\\nq4 = x4;\\nq8 = y4;\\n\\nq1 = aspectx;\\nq2 = aspecty;\\n\\nzoom = 1;\\nwarp = 0;\\nbb = bb*0.99 + bass*0.02;\\nmm = mm*0.99 + mid*0.02;\\ntt = tt*0.99 + treb*0.02;\\n\\nmx = max(max(bb,mm),tt);\\nmn = min(min(bb,mm),tt);\\n\\nob_r = (bb-mn)/(mx-mn);\\nob_b = (mm-mn)/(mx-mn);\\nob_g = (tt-mn)/(mx-mn);\\nq6 = atan2(vx4,vy4);\\nq5 = sqrt(vx4*vx4 + vy4*vy4);\\n\\na = a*0.95 + q5;\\n\\ns = s*0.9 + a;\\nq3 = s*0.1;\\nt = t + 0.1/fps;\\nt = if(above(t,2),t-2,t);\\nq12 = -t;\\nmonitor = t;\\nwave_a = 0;","pixel_eqs_eel":"x = 0.5 + (x-0.5)*q1;\\ny = 0.5 + (y-0.5)*q2;\\n\\ndir = -q6*1 + asin(1)*0;\\n\\nxx = q4;\\nyy = 1-q8;\\n\\ndx = 0; dy = 0;\\n\\nd = sqrt((x-xx)*(x-xx)+(y-yy)*(y-yy));\\n\\nr = 0.08;\\nv = -15*q5;\\ndx = v*sin(dir)*(r-d)*(1-sigmoid(d-r,200))*q2;\\ndy = v*cos(dir)*(r-d)*(1-sigmoid(d-r,200))*q1;","warp":" shader_body { \\n  vec3 tmpvar_1;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv);\\n  tmpvar_1 = vec3((((tmpvar_2.x + tmpvar_2.y) + tmpvar_2.z) * 0.33333));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ((texture (sampler_main, clamp (\\n    (uv - ((vec2(0.0, 0.0168) * (tmpvar_1 - 0.35).xy) * (tmpvar_1 - 0.4).xy))\\n  , 0.0, 1.0)).xyz - 0.001) + ((texture (sampler_noise_lq, \\n    (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 2.0)) + rand_frame.xy)\\n  ) - 0.5) * 0.04).xyz);\\n  ret = tmpvar_3.xyz;\\n }","comp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = ((uv - 0.5).yx * aspect.zw);\\n  float tmpvar_2;\\n  float tmpvar_3;\\n  tmpvar_3 = (min (abs(\\n    (tmpvar_1.x / tmpvar_1.y)\\n  ), 1.0) / max (abs(\\n    (tmpvar_1.x / tmpvar_1.y)\\n  ), 1.0));\\n  float tmpvar_4;\\n  tmpvar_4 = (tmpvar_3 * tmpvar_3);\\n  tmpvar_4 = (((\\n    ((((\\n      ((((-0.01213232 * tmpvar_4) + 0.05368138) * tmpvar_4) - 0.1173503)\\n     * tmpvar_4) + 0.1938925) * tmpvar_4) - 0.3326756)\\n   * tmpvar_4) + 0.9999793) * tmpvar_3);\\n  tmpvar_4 = (tmpvar_4 + (float(\\n    (abs((tmpvar_1.x / tmpvar_1.y)) > 1.0)\\n  ) * (\\n    (tmpvar_4 * -2.0)\\n   + 1.570796)));\\n  tmpvar_2 = (tmpvar_4 * sign((tmpvar_1.x / tmpvar_1.y)));\\n  if ((abs(tmpvar_1.y) > (1e-08 * abs(tmpvar_1.x)))) {\\n    if ((tmpvar_1.y < 0.0)) {\\n      if ((tmpvar_1.x >= 0.0)) {\\n        tmpvar_2 += 3.141593;\\n      } else {\\n        tmpvar_2 = (tmpvar_2 - 3.141593);\\n      };\\n    };\\n  } else {\\n    tmpvar_2 = (sign(tmpvar_1.x) * 1.570796);\\n  };\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = (tmpvar_2 * q11);\\n  tmpvar_5.y = (((0.5 * \\n    log(sqrt(dot (tmpvar_1, tmpvar_1)))\\n  ) - (tmpvar_2 * q11)) + q12);\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = pow (texture (sampler_main, (0.5 + (\\n    (0.5 - abs(((\\n      fract((tmpvar_5 * 0.5))\\n     * 2.0) - 1.0)))\\n   * vec2(0.96, 1.0)))).xyz, vec3(0.618034, 0.618034, 0.618034));\\n  ret = tmpvar_6.xyz;\\n }"}')},8269:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"wave_thick":1,"wave_brighten":0,"wrap":0,"wave_a":0.004,"wave_scale":0.242,"wave_smoothing":0,"wave_mystery":-0.44,"modwavealphastart":1,"modwavealphaend":1,"warpanimspeed":0.397,"warpscale":15.099,"zoomexp":0.65309,"zoom":0.87866,"warp":0.04027,"wave_y":0.04,"ob_size":0,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"thickoutline":1,"y":0.04,"rad":0.01,"tex_ang":0.12566,"tex_zoom":1.51878,"r":0,"a":0,"g2":0,"b2":0.01,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"additive":1,"thickoutline":1,"textured":1,"x":0.49,"rad":1.32907,"tex_zoom":0.49831,"g":1,"b":1,"a":0.99,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"thickoutline":1,"x":1,"rad":3.0054,"tex_ang":0.12566,"tex_zoom":1.51878,"r":0,"g":1,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"thickoutline":1,"x":1,"rad":0.39872,"tex_ang":0.12566,"tex_zoom":1.51878,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"thick":1,"additive":1,"scaling":2.0231,"smoothing":0,"r":0,"b":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"r = 1; g = 0; b = 1;","point_eqs_eel":"tt3 = tt3*0.6 + (value1)*1;\\ntt2 = tt2*0.7 + tt3*0.2;\\ntt1 = tt1*0.8 + tt2*0.1;\\nd = d*0.9 + tt1*0.2;\\n\\ny = 0.6 + d*sample*(1-sample)*2;\\nx =  -0.05 + sample*1.1;"},{"baseVals":{"scaling":2.44415,"smoothing":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t8 = 1;","point_eqs_eel":"t8 = -t8;\\ny = sample;\\nx = 0.5 + t8*0.005;\\n\\npi3 = 3.1415*2*0.3333;\\nt = time + sample*2;\\nc=2;\\n\\nr = sin(t)*c;\\ng = sin(t+pi3)*c;\\n\\nb = sin(t-pi3)*c;\\n\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\n"},{"baseVals":{"thick":1,"additive":1,"scaling":100,"smoothing":0.6,"r":0,"g":0.4,"a":0.3,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt7 = q7;\\nt8 = q8;","point_eqs_eel":"sample = 1-sample;\\nxxx = xx;\\nyyy = yy;\\nxx = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2\\n+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;\\n\\nyy = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6\\n+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;\\nd = 1/sqrt(sqr(xx-xxx)+sqr(yy-yyy));\\nx = xx + sample*(1-sample)*(value1-value2)*(yy-yyy)*d;\\ny = yy - sample*(1-sample)*(value1-value2)*(xx-xxx)*d;"},{"baseVals":{"usedots":1,"scaling":2.44415,"smoothing":0,"r":0,"g":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t8 = 1;","point_eqs_eel":"t8 = -t8;\\ny = (1+t8)*0.01;\\nx = sample;"}],"init_eqs_eel":"x1 = 0.9;\\ny1 = 0.5;\\n\\nx2 = 0.5; y2 = 0.5;\\nx3 = 0.5; y3 = 0.5;\\nx4 = 0.5; y4 = 0.5;","frame_eqs_eel":"zoom = 0.998;\\n//warp = 0;\\nscale = 1;\\nangle = time*.02;\\ntranslation_x = 0;\\ntranslation_y = 0.12;\\n\\na_r = cos(angle)*scale;\\na_i = sin(angle)*scale;\\nb_r = translation_x;\\nb_i = translation_y;\\n\\n//complex inverted\\nscale = 1;\\nangle = sin(time*0.1337)*0.3*0;\\ntranslation_u = 0;\\ntranslation_v = -0.2;\\n\\n// c\\nq15 = cos(angle)*scale;\\nq16 = sin(angle)*scale;\\n\\n// d\\nq17 = translation_u;\\nq18 = translation_v;\\n\\n// c^(-1)\\nc_inv_r = q15/(q15*q15+q16*q16);\\nc_inv_i = q16/(q15*q15+q16*q16);\\n\\n// a*c^(-1)\\nq11 = (a_r*c_inv_r - a_i*c_inv_i);\\nq12 = (a_r*c_inv_i - a_i*c_inv_r);\\n\\n// (bc-ad)\\nbcad_r = (b_r*q15 - b_i*q16)-(a_r*q17-a_i*q18);\\nbcad_i = (b_r*q16 - b_i*q15)-(a_r*q18-a_i*q17);\\n\\n// mu*c^(-1)\\nq13 = bcad_r*c_inv_r - bcad_i*c_inv_i;\\nq14 = bcad_r*c_inv_i - bcad_i*c_inv_r;","pixel_eqs_eel":"","warp":" shader_body { \\n  float conway_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = (((\\n    ((texture (sampler_blur2, (uv + vec2(0.02, 0.0))).xyz * scale2) + bias2)\\n   - \\n    ((texture (sampler_blur2, (uv - vec2(0.02, 0.0))).xyz * scale2) + bias2)\\n  ).y * 1280.0) * texsize.z);\\n  tmpvar_3.y = (((\\n    ((texture (sampler_blur2, (uv + vec2(0.0, 0.02))).xyz * scale2) + bias2)\\n   - \\n    ((texture (sampler_blur2, (uv - vec2(0.0, 0.02))).xyz * scale2) + bias2)\\n  ).y * 1024.0) * texsize.w);\\n  ret_2.y = texture (sampler_pc_main, (uv - (tmpvar_3 * 0.004))).y;\\n  ret_2.y = (ret_2.y + ((\\n    ((ret_2.y - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).y) - 0.1)\\n   * 0.1) + 0.02));\\n  ret_2.z = (texture (sampler_fc_main, (0.5 + (\\n    (uv - 0.5)\\n   * 0.992))).z - 0.004);\\n  conway_1 = (texture (sampler_pw_main, (uv_orig - texsize.zw)).x + texture (sampler_pw_main, (uv_orig + (vec2(0.0, -1.0) * texsize.zw))).x);\\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(1.0, -1.0) * texsize.zw))).x);\\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(-1.0, 0.0) * texsize.zw))).x);\\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(1.0, 0.0) * texsize.zw))).x);\\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(-1.0, 1.0) * texsize.zw))).x);\\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(0.0, 1.0) * texsize.zw))).x);\\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + texsize.zw)).x);\\n  conway_1 = (conway_1 - fract(conway_1));\\n  float tmpvar_4;\\n  tmpvar_4 = clamp (texture (sampler_pc_main, uv_orig).x, 0.0, 1.0);\\n  ret_2.x = (clamp ((1.0 - \\n    abs((conway_1 - 3.0))\\n  ), 0.0, 1.0) * (1.0 - tmpvar_4));\\n  ret_2.x = (ret_2.x + (clamp (\\n    max ((1.0 - abs((conway_1 - 2.0))), (1.0 - abs((conway_1 - 3.0))))\\n  , 0.0, 1.0) * tmpvar_4));\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = ret_2;\\n  ret = tmpvar_5.xyz;\\n }","comp":" shader_body { \\n  vec2 moebius_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = q11;\\n  tmpvar_3.y = q12;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = q17;\\n  tmpvar_4.y = q18;\\n  vec2 tmpvar_5;\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv - 0.5);\\n  tmpvar_5 = (tmpvar_6 * aspect.xy);\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = ((tmpvar_5.x * q15) - (tmpvar_5.y * q16));\\n  tmpvar_7.y = ((tmpvar_5.x * q16) - (tmpvar_5.y * q15));\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (tmpvar_7 + tmpvar_4);\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = ((q13 * tmpvar_8.x) + (q14 * tmpvar_8.y));\\n  tmpvar_9.y = ((q14 * tmpvar_8.x) - (q13 * tmpvar_8.y));\\n  moebius_1 = (((tmpvar_9 / \\n    ((tmpvar_8.x * tmpvar_8.x) + (tmpvar_8.y * tmpvar_8.y))\\n  ) + tmpvar_3) * 0.5);\\n  float tmpvar_10;\\n  tmpvar_10 = sqrt(dot (moebius_1, moebius_1));\\n  moebius_1 = (0.5 + ((\\n    (1.0 - abs(((\\n      fract((moebius_1 * 0.5))\\n     * 2.0) - 1.0)))\\n   - 0.5) * 0.99));\\n  vec3 tmpvar_11;\\n  tmpvar_11 = mix (mix (mix (\\n    mix (mix ((mix (ret_2, vec3(0.2, 0.6, 1.0), vec3(\\n      (texture (sampler_pc_main, moebius_1).y * 2.0)\\n    )) * (vec3(1.0, 1.0, 1.0) - vec3(\\n      ((((texture (sampler_blur1, \\n        (0.5 + (tmpvar_6 * 0.5))\\n      ).xyz * scale1) + bias1).y * 2.0) * tmpvar_10)\\n    ))), vec3(1.0, 1.0, 1.0), texture (sampler_pc_main, moebius_1).xxx), vec3(4.0, 1.0, 0.0), vec3(clamp (((texture (sampler_pc_main, \\n      (0.5 + (tmpvar_6 * 0.2))\\n    ).y * 2.0) * (\\n      (tmpvar_10 * tmpvar_10)\\n     * tmpvar_10)), 0.0, 1.0)))\\n  , vec3(0.1, 0.0, 0.0), vec3(\\n    clamp ((((texture (sampler_blur1, \\n      (0.5 + (tmpvar_6 * 0.2))\\n    ).xyz * scale1) + bias1).x * 12.0), 0.0, 1.0)\\n  )), (vec3(0.5, 0.8, 1.0) * texture (sampler_pc_main, uv).z), vec3((\\n    clamp ((((texture (sampler_blur1, \\n      (0.5 + (tmpvar_6 * 0.2))\\n    ).xyz * scale1) + bias1).x * 4.0), 0.0, 1.0)\\n   * 1.4))), vec3(1.0, 1.0, 1.0), texture (sampler_pc_main, (0.5 + (tmpvar_6 * 0.2))).xxx);\\n  ret_2 = tmpvar_11;\\n  vec4 tmpvar_12;\\n  tmpvar_12.w = 1.0;\\n  tmpvar_12.xyz = tmpvar_11;\\n  ret = tmpvar_12.xyz;\\n }"}')},7687:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_orient":2,"wave_mode":1,"wave_thick":1,"wave_brighten":0,"wrap":0,"wave_a":0.004,"wave_scale":0.01,"wave_smoothing":0,"wave_mystery":-0.44,"modwavealphastart":1,"modwavealphaend":1,"warpscale":1.331,"zoom":1.004,"warp":0.19788,"sx":0.99967,"sy":0.9999,"wave_y":0.04,"ob_size":0,"ob_r":1,"ob_a":0.7,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":0,"mv_y":0,"mv_l":1,"mv_g":0.91,"mv_b":0.71,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"additive":1,"thickoutline":1,"rad":0.04466,"tex_zoom":0.73458,"g":1,"b":1,"g2":0,"border_a":0},"init_eqs_eel":"vx = 0","frame_eqs_eel":""},{"baseVals":{"sides":100,"additive":1,"thickoutline":1,"textured":1,"x":0.7,"y":0.3,"rad":0.6623,"ang":2.45044,"tex_zoom":0.74934,"g":0.1,"b":0.1,"r2":1,"g2":0.1,"b2":0.1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"xx = 0.5;\\nyy = 0.4;","frame_eqs_eel":"d = sqrt( sqr(xx-q4)+sqr(yy-q8));\\n\\nxx = if(below(d,0.15),0.4+rand(200)/1000,xx);\\nyy = if(below(d,0.15),0.3+rand(400)/1000,yy);\\naang = if(below(d,0.12),rand(1000)/1000,aang);\\nang =aang*4*asin(1);\\nx = xx;\\ny = yy;"},{"baseVals":{"sides":100,"additive":1,"thickoutline":1,"textured":1,"x":0.43,"y":0.6,"rad":1.16781,"ang":5.96903,"tex_zoom":0.67165,"r2":1,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"xx = 0.5;\\nyy = 0.4;","frame_eqs_eel":"d = sqrt( sqr(xx-q4)+sqr(yy-q8));\\n\\nxx = if(below(d,0.15),0.4+rand(200)/1000,xx);\\nyy = if(below(d,0.15),0.3+rand(400)/1000,yy);\\naang = if(below(d,0.12),rand(1000)/1000,aang);\\nang =aang*4*asin(1);\\nx = xx;\\ny = yy;"},{"baseVals":{"sides":100,"additive":1,"thickoutline":1,"y":0.75,"rad":0.07059,"tex_zoom":0.73458,"g":0.5,"b":0.5,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"vx = 0","frame_eqs_eel":"x = q1;\\ny = q5;"}],"waves":[{"baseVals":{"usedots":1,"scaling":2.44415,"smoothing":0,"a":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t1 = 0;\\nv = 0.01;\\nj = j + (bass)*0.01;\\nj2 = j2 + (mid_att)*0.01;\\nj3 = j3 + (treb_att)*0.01;\\nt2 = j;\\nt3 = j2;\\nt4 = j3;\\n//t5 = 0;\\nk = k*0.99 + 10*mid/fps;\\nt5 = -k;\\n\\ncl1 = cl1 + 0.002;\\ncl1 = if(above(cl1,1),0,cl1);\\ncl1 = if(below(cl1,0),1,cl1);\\nt8 = cl1;\\n\\ncl2 = cl2 -1*q1;\\ncl2 = if(above(cl2,1),0,cl2);\\ncl2 = if(below(cl2,0),1,cl2);\\nt7 = cl2;\\n\\ncl3 = cl3 +0.001;\\ncl3 = if(above(cl3,1),0,cl3);\\ncl3 = if(below(cl3,0),1,cl3);\\nt6 = cl3;","point_eqs_eel":"xx = ((sample*0983624912364)%10000000+100)/10000000;\\nyy = ((xx*1896575575)%10000000+100)/10000000;\\nzz = ((yy*58652340875)%10000000+100)/10000000;\\n\\n\\nd = sqrt(sqr(xx)+sqr(yy)+sqr(zz));\\n\\nzz = zz + t8 - if(above(zz+t8,1),1,0) - 0.5;\\nxx = xx + t7 - if(above(xx+t7,1),1,0) - 0.5;\\nyy = yy + t6 - if(above(yy+t6,1),1,0) - 0.5;\\n\\nv = 0.001;\\n\\nw = 1;// (sample*sin(time*0.3)*0.01-1);\\nbb = d*d*0.5;\\nn= 0.3;\\ns1 = sin(sin(t2*w+bb)*n);\\ns2 = sin(sin(t3*w+bb)*n);\\ns3 = sin(sin(t4*w+bb)*n);\\nc1 = cos(sin(t2*w+bb)*n);\\nc2 = cos(sin(t3*w+bb)*n);\\nc3 = cos(sin(t4*w+bb)*n);\\n\\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\\n\\nzoom = .5*(1/(z+0.5));\\nx = 0.5 + zoom*x1 + sin(time*0.1)*0;;\\ny = 0.5 + zoom*y1 + cos(time*0.16801)*0;\\n\\npi3 = 3.1415*2*0.3333;\\nt = z*2+t2*1;\\nc=3;\\n//r = sin(t)*c;\\n\\n//g = sin(t+pi3)*c;\\n\\n//b = sin(t-pi3)*c;\\n\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\n\\na = 0.4;"},{"baseVals":{"scaling":7.7518,"smoothing":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t8 = 1;\\n\\nt1 = 0.5;\\nt2 = 0.9;","point_eqs_eel":"d = d*0.85 + (value1)*1;\\n\\nx = 0.5 + d*sample*(1-sample);\\ny = 0.9 - sample*0.8;"},{"baseVals":{"usedots":1,"thick":1,"scaling":5.92556,"smoothing":0,"g":0,"b":0,"a":0.66,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt7 = q7;\\nt8 = q8;","point_eqs_eel":"sample = 1-sample;\\nxxx = xx;\\nyyy = yy;\\nxx = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2\\n+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;\\n\\nyy = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6\\n+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;\\n\\nd = 1/sqrt(sqr(xx-xxx)+sqr(yy-yyy));\\ndd = dd*0.95 + (value1);\\nddd = dd*sample*(1-sample)*d;\\n\\nx = xx + (yy-yyy)*ddd;\\ny = yy - (xx-xxx)*ddd;"},{"baseVals":{"thick":1,"scaling":5.92556,"smoothing":0,"r":0.65,"g":0.45,"enabled":0},"init_eqs_eel":"t2 = 0","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt7 = q7;\\nt8 = q8;","point_eqs_eel":"sample = 1-sample;\\nxxx = xx;\\nyyy = yy;\\nxx = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2\\n+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;\\n\\nyy = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6\\n+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;\\n\\nd = 1/sqrt(sqr(xx-xxx)+sqr(yy-yyy));\\ndd = dd*0.95 + (value1);\\nddd = dd*sample*(1-sample)*d;\\nddd = sample*(1-sample)*sin(sample*200)*d*0.05;\\nx = xx + (yy-yyy)*ddd;\\ny = yy - (xx-xxx)*ddd;"}],"init_eqs_eel":"","frame_eqs_eel":"//mv_r = mv_r + 0.2*( 0.60*sin(0.980*time) + 0.40*sin(1.047*time) );\\nmv_g = mv_g + 0.2*( 0.60*sin(0.835*time) + 0.40*sin(1.081*time) );\\nmv_b = mv_b + 0.2*( 0.60*sin(0.814*time) + 0.40*sin(1.011*time) );\\nq1 = (cx*2-1) + 0.6*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\nq2 = (cy*2-1) + 0.6*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\\nob_r = 1- 0.4*abs(q1);\\nob_g = 0.3*abs(q2);\\nob_b = 0.4*abs(q1);\\nwave_x = 1-abs(q2)-0.05;\\nwave_y = 1-abs(q1)-0.06;\\nwave_r = wave_r + 0.4*( 0.60*sin(0.514*time) + 0.40*sin(1.211*time) );\\nwave_b = wave_b + 0.4*( 0.60*sin(0.714*time) + 0.40*sin(q2) );\\nwave_g = wave_g + 0.4*( 0.60*sin(10*q1) + 0.40*sin(10*q2) );","pixel_eqs_eel":"du = (x*2-1) - q1;\\ndv = (y*2-1) - q2;\\ndist = sqrt(du*du+dv*dv);\\nang2 = atan2(du,dv) + time*0.15;\\nmult = 0.6*sin(dist*0.05);\\n//dx = mult*sin(ang2*2-1.5)*aspectx;\\n//dy = mult*cos(ang2*2-1.5)*aspecty;","warp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = (((texture (sampler_blur2, \\n    (uv + vec2(0.0009, 0.0))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    (uv - vec2(0.0009, 0.0))\\n  ).xyz * scale2) + bias2)).y;\\n  tmpvar_2.y = (((texture (sampler_blur2, \\n    (uv + vec2(0.0, 0.0009))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    (uv - vec2(0.0, 0.0009))\\n  ).xyz * scale2) + bias2)).y;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (uv - (tmpvar_2 * 0.01));\\n  ret_1.y = texture (sampler_fc_main, (tmpvar_3 - floor(tmpvar_3))).y;\\n  ret_1.y = (ret_1.y + ((ret_1.y - \\n    ((texture (sampler_blur3, (tmpvar_3 - floor(tmpvar_3))).xyz * scale3) + bias3)\\n  .y) * 0.1));\\n  ret_1.y = (ret_1.y + (0.006 - (\\n    ((texture (sampler_blur3, (uv - floor(uv))).xyz * scale3) + bias3)\\n  .x * 5.0)));\\n  ret_1.y = ret_1.y;\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = ret_1;\\n  ret = tmpvar_4.xyz;\\n }","comp":" shader_body { \\n  vec2 uv_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = cos((uv.y * 270.0));\\n  tmpvar_3.y = sin((uv.x * 390.0));\\n  uv_1 = (uv + (0.01 * tmpvar_3));\\n  ret_2 = (1.4 * pow ((\\n    clamp (((texture (sampler_blur1, uv_1).xyz * scale1) + bias1), 0.0, 1.0)\\n   * \\n    (texture (sampler_pc_main, uv_1).xyz - ((texture (sampler_blur3, uv_1).xyz * scale3) + bias3))\\n  ), vec3(0.5, 0.5, 0.5)));\\n  ret_2 = ((vec3(0.9, 0.2, 0.4) * ret_2.z) + (vec3(0.2, 0.4, 0.8) * ret_2.y));\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = ret_2;\\n  ret = tmpvar_4.xyz;\\n }"}')},4541:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":4,"gammaadj":1,"decay":1,"additivewave":1,"modwavealphabyvolume":1,"wave_a":0.009,"wave_scale":2.713,"wave_smoothing":0,"modwavealphastart":1.2,"modwavealphaend":1.2,"warpscale":1.331,"zoom":0.99951,"warp":0.00909,"wave_r":0.44,"wave_g":0.4,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":12,"additive":1,"num_inst":2,"x":0.49,"rad":0.09902,"tex_zoom":4.36077,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = rand(1000)/1000;\\ny = rand(1000)/1000;\\nang = rand(150)/100;"},{"baseVals":{"sides":5,"textured":1,"rad":0.986,"tex_ang":3.14159,"tex_zoom":0.99979,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ang =sin(time/65) ;// ang + (bass*.2) + (time*.4);"},{"baseVals":{"sides":100,"textured":1,"x":0.9,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = sin(time) * .4 + .5;\\n\\n"},{"baseVals":{"sides":36,"additive":1,"rad":1.38306,"r":0,"g":0.03,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"thick":1,"additive":1,"r":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"q1 = below(rand(100),4 + 10*(treb+mid+bass));","point_eqs_eel":"it = (it + 1)*above(sample,0)*below(it,53);\\nita = (ita + equal(it,0))*above(sample,0);\\n\\nsw = 1-equal(it,0)*equal(ita,0);\\nswi = (equal(lr,9) + equal(lr,5))*equal(it,0)*equal(ita,4);\\nxv = if(sw - swi,xv,rand(1001)*.001*.8);\\nmx = xv + ita*.025;\\nmy = if(sw - swi,my,rand(1001)*.001*.975);\\n\\nsz = .01;\\nvx = above(it,1)*below(it,39) + above(it,12)*below(it,28) - equal(it,20) + equal(it,46) + equal(it,51) + equal(it,41) - equal(it,15) - equal(it,25) + equal(it,10) + equal(it,30) - equal(it,4) - equal(it,36);\\nvy = above(it,17)*below(it,49) + above(it,22)*below(it,44) - equal(it,33) + equal(it,7) + equal(it,51) + equal(it,15) - equal(it,41) - equal(it,25) + equal(it,4) + equal(it,10) - equal(it,36) - equal(it,30);\\n\\nsa = equal(ita,0)*13 + equal(ita,1)*9 + equal(ita,2)*12 + equal(ita,3)*11 + equal(ita,4)*4 + equal(ita,5)*18 + equal(ita,6)*15 + equal(ita,7)*16;\\nsb = equal(ita,0)*11 + equal(ita,1)*9 + equal(ita,2)*12 + equal(ita,3)*12;\\nsc = equal(ita,0)*4 + equal(ita,1)*15 + equal(ita,3)*4 + equal(ita,4)*18 + equal(ita,5)*21 + equal(ita,6)*7 + equal(ita,7)*19;\\nsd = equal(ita,0)*12 + equal(ita,1)*15 + equal(ita,2)*22 + equal(ita,3)*5;\\nse = equal(ita,0)*8 + equal(ita,1)*1 + equal(ita,2)*20 + equal(ita,3)*5;\\nsf = equal(ita,0)*6 + equal(ita,1)*5 + equal(ita,2)*1 + equal(ita,3)*18 + equal(ita,5)*10 + equal(ita,6)*15 + equal(ita,7)*25;\\nsg = equal(ita,0)*1 + equal(ita,1)*14 + equal(ita,2)*7 + equal(ita,3)*5 + equal(ita,4)*18;\\nsh = equal(ita,0)*19 + equal(ita,1)*21 + equal(ita,2)*18 + equal(ita,3)*16 + equal(ita,4)*18 + equal(ita,5)*9 + equal(ita,6)*19 + equal(ita,7)*5;\\nsi = equal(ita,0)*8 + equal(ita,1)*1 + equal(ita,2)*16 + equal(ita,3)*16 + equal(ita,4)*25;\\nsj = equal(ita,0)*25 + equal(ita,1)*5 + equal(ita,2)*19 + equal(ita,6)*14 + equal(ita,7)*15;\\n\\nlr = if(sw,lr,rand(10));\\nlet = equal(lr,0)*sa + equal(lr,1)*sb + equal(lr,2)*sc + equal(lr,3)*sd + equal(lr,4)*se + equal(lr,5)*sf + equal(lr,6)*sg + equal(lr,7)*sh + equal(lr,8)*si + equal(lr,9)*sj;\\n\\nva = equal(let,23) + equal(let,24) + equal(let,26);\\nvb = above(let,0)*below(let,9) + above(let,10)*below(let,19) + equal(let,21) + equal(let,23);\\nvc = equal(let,1) + equal(let,2) + equal(let,5) + equal(let,6) + equal(let,8) + equal(let,11) + equal(let,16) + equal(let,18) + equal(let,19);\\nvd = above(let,1)*below(let,9) + above(let,10)*below(let,24) - equal(let,20);\\nve = equal(let,13) + equal(let,14) + equal(let,24) + equal(let,25);\\nvf = above(let,1)*below(let,8) + equal(let,9) + above(let,14)*below(let,21) + equal(let,26);\\nvg = equal(let,1);\\nvh = equal(let,9) + equal(let,20);\\nvi = above(let,0)*below(let,5) - equal(let,3) + equal(let,18);\\nvj = above(let,2)*below(let,8) - equal(let,4) + equal(let,9) + above(let,14)*below(let,21) - equal(let,18) + equal(let,26);\\nvk = equal(let,11) + equal(let,13) + above(let,23)*below(let,27);\\nvl = equal(let,8) + equal(let,10) + above(let,12)*below(let,18) + above(let,20)*below(let,24);\\nvm = equal(let,1) + equal(let,2) + equal(let,8) + equal(let,16) + equal(let,18) + equal(let,19);\\nvn = equal(let,1) + equal(let,7) + equal(let,8) + equal(let,10) + above(let,12)*below(let,24) - equal(let,16) - equal(let,18) - equal(let,20) - equal(let,22);\\nvo = equal(let,11) + equal(let,14) + equal(let,17) + equal(let,18) + equal(let,23) + equal(let,24);\\nvp = equal(let,3) + equal(let,5) + equal(let,7) + equal(let,9) + equal(let,10) + equal(let,12) + equal(let,15) + equal(let,17) + equal(let,19) + equal(let,21) + equal(let,26);\\nvq = equal(let,2) + equal(let,4) + equal(let,22);\\nvr = equal(let,9) + equal(let,20) + equal(let,25);\\nvs = equal(let,22);\\nvt = above(let,1)*below(let,13) - equal(let,6) - equal(let,8) - equal(let,11) + equal(let,15) + equal(let,17) + equal(let,19) + equal(let,21) + equal(let,26);\\n\\na = if(above(it,51),0,if(above(it,49),va,if(above(it,47),vb,if(above(it,44),vc,if(above(it,42),vd,if(above(it,39),ve, if(above(it,37),vf,if(above(it,34),vg,if(above(it,31),vh,if(above(it,28),vi,if(above(it,26),vj,if(above(it,23),vk, if(above(it,21),vl,if(above(it,18),vm,if(above(it,16),vn,if(above(it,13),vo,if(above(it,11),vp,if(above(it,8),vq, if(above(it,5),vr,if(above(it,2),vs,if(it,vt,0)))))))))))))))))))));\\n\\na = a*below(ita,8)*q1;\\n\\nx = mx + vx*sz*.75;\\ny = my + vy*sz*1.5;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"vol = bass*8 + mid*5 + treb*3;\\nm = m*0.97 + vol*0.08;\\nmonitor = vol;\\nbeat = above(vol,res)*above(vol,m)*above(vol,16);\\ndiff = (1-beat)*diff + beat*(vol-res);\\nres = beat*(vol + m*0.1) + (1-beat)*(res -  (0.1+diff*0.02)*60/fps);\\nres = max(0,res);\\n\\n\\nx = if(beat,rand(60)*0.01 + 0.2,x);\\ny = if(beat,rand(60)*0.01 + 0.2,y);\\nq1 = x;\\nq2 = y;\\n\\nwave_x = q1;\\nwave_y = 1-q2;","pixel_eqs_eel":"cx = q1;\\ncy = q2;\\n\\nd = pow(sqrt(sqr(x-cx)+sqr(y-cy)),0.8);\\nr = 0.2;\\nv = 0.2;\\n\\ndx = (x - cx)*v*(d-r);\\ndy = (y - cy)*v*(d-r);","warp":" shader_body { \\n  vec2 uv_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = normalize((uv_orig - 0.5));\\n  float tmpvar_3;\\n  tmpvar_3 = (time * 7.0);\\n  uv_1 = (mix (uv_orig, uv, vec2((\\n    clamp ((((bass / bass_att) - 0.9) * 13.0), 0.0, 1.0)\\n   * 0.3))) + ((\\n    (tmpvar_2 * texsize.zw)\\n   * \\n    cos(((rad * 170.0) - tmpvar_3))\\n  ) * 2.0));\\n  uv_1 = (uv_1 + ((\\n    (vec2(5.0, -5.0) * texsize.zw)\\n   * \\n    cos(((ang * 30.0) - tmpvar_3))\\n  ) * tmpvar_2.yx));\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = (texture (sampler_pw_main, uv_1).xyz - 0.004);\\n  ret = tmpvar_4.xyz;\\n }","comp":" shader_body { \\n  vec2 uv2_1;\\n  vec3 ret_2;\\n  uv2_1 = (uv + (vec2(1.0, 0.0) * texsize.zw));\\n  float tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(-1.0, 0.0) * texsize.zw));\\n  float tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(0.0, 1.0) * texsize.zw));\\n  float tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(0.0, -1.0) * texsize.zw));\\n  vec3 tmpvar_6;\\n  tmpvar_6.z = 0.14;\\n  tmpvar_6.x = (tmpvar_3 - tmpvar_4);\\n  tmpvar_6.y = (tmpvar_5 - ((\\n    (texture (sampler_main, uv2_1).xyz + (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4))\\n   + \\n    (((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2) * 0.15)\\n  ) + (\\n    ((texture (sampler_blur3, uv2_1).xyz * scale3) + bias3)\\n   * 0.1)).x);\\n  ret_2 = (0.5 + (0.5 * normalize(tmpvar_6)));\\n  vec2 x_7;\\n  x_7 = (ret_2.xy - 0.5);\\n  ret_2 = (ret_2 * clamp ((\\n    sqrt(dot (x_7, x_7))\\n   * 5.0), 0.0, 1.0));\\n  ret_2 = ret_2.xxy;\\n  ret_2 = (ret_2 + 1.0);\\n  ret_2 = (ret_2 * mix (ret_2, (ret_2 * \\n    (((texture (sampler_blur3, uv).xyz * scale3) + bias3) - ((texture (sampler_blur1, uv).xyz * scale1) + bias1))\\n  ), pow (hue_shader, ret_2)));\\n  ret_2 = (ret_2 * hue_shader);\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = ret_2;\\n  ret = tmpvar_8.xyz;\\n }"}')},1019:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":4,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":5,"wave_dots":1,"wave_thick":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":5.552,"wave_smoothing":0.504,"wave_mystery":-1,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_g":0,"wave_b":0,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"sides":100,"textured":1,"x":0.8,"rad":0.24243,"tex_ang":1.88496,"tex_zoom":1.72851,"r":0.8,"g":1,"b":0.5,"a":0.6,"r2":0.9,"g2":0.9,"b2":1,"a2":0.3,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"textured":1,"x":0.13,"y":0.19,"rad":0.11045,"tex_ang":3.14159,"tex_zoom":1.71105,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":5,"additive":1,"x":0.9,"rad":0.22613,"g":0.2,"b":0.2,"g2":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":36,"additive":1,"rad":0.18717,"r":0,"g":0.02,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"spectrum":1,"usedots":1,"thick":1,"additive":1,"scaling":0.5033,"g":0.6,"b":0.4,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"\\nx0 = .5 + .4 * sin(time/2);\\n\\nangle = rand(1000)/1000*6.28;\\nrad =  rand(1000)/1000;\\nrad = rad * rad;\\n\\nx = x0 + .1*rad*sin(angle);\\ny = .5 + .1*rad*cos(angle);\\n a = 1-rad;"},{"baseVals":{"thick":1,"additive":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"trel = q11-.0;\\nt1 = int(trel);\\nt2 = trel - int(trel);","point_eqs_eel":""},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"trel = q11-.33;\\nt1 = int(trel);\\nt2 = trel - int(trel);","point_eqs_eel":""},{"baseVals":{"thick":1,"additive":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"trel = q11-.66;\\nt1 = int(trel);\\nt2 = trel - int(trel);","point_eqs_eel":""}],"init_eqs_eel":"vol = 0; p1 = 0;\\nvx = .2; vy = -0.1;\\nkx = 0; ky = 0;","frame_eqs_eel":"dec_med = pow (0.96, 30/fps);\\ndec_slow = pow (0.98, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %8;\\nindex2 = (index2 + is_beat*bnot(index))%2;\\nindex3 = (index3 + is_beat*bnot(index) * bnot(index2))%2;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\n\\nvol = bass_att + treb_att;\\nv2 = v2 * dec_slow + vol * (1-dec_slow) ;\\nq26 = max(atan (vol - v2*.8),.3);\\n\\nq27 = index + 1;\\n\\nsw = sw*dec_med + (1-dec_med)*(index2%2);\\nq28 = sw;\\n\\nk1 =  is_beat*bnot(index*20);\\nk2 =  is_beat*bnot(index);\\n\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_slow * p2+ (1-dec_slow)*p1;\\nrott = p2 * 3.1416/2;\\nmonitor = k1;\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\n\\nq5 = cos(time/6);\\nq6 = -sin(time/6);\\nq7 = -q6;\\nq8 = q5;\\n\\nzoom = 1;\\nrot = -0;\\n\\nmovez = movez + .006*(q1+1.1)*30/fps;\\nq29 = movez;\\nrota = rota + .003*(2-q1)*30/fps;\\nq30 = rota;\\nq31 = 2 + 16*abs(cos(time/18));\\nq32 = cos(time/23)/4;","pixel_eqs_eel":"","warp":"vec2 xlat_mutablers;\\nvec2 xlat_mutableuv1;\\nvec2 xlat_mutableuv8;\\n shader_body { \\n  vec2 uv_1;\\n  vec3 xlat_varmod_2;\\n  float z_3;\\n  vec3 ret_4;\\n  xlat_mutableuv1 = ((uv_orig - 0.5) * aspect.xy);\\n  vec2 x_5;\\n  x_5 = (xlat_mutableuv1 * 5.0);\\n  float tmpvar_6;\\n  tmpvar_6 = (sqrt(dot (x_5, x_5)) + time);\\n  xlat_mutablers = clamp (((\\n    sin(tmpvar_6)\\n   / \\n    cos(tmpvar_6)\\n  ) * normalize(xlat_mutableuv1)), vec2(-5.0, -5.0), vec2(5.0, 5.0));\\n  xlat_mutableuv8 = (sin((xlat_mutableuv1 * \\n    (q31 + (rad * 2.0))\\n  )) * 7.0);\\n  z_3 = (1.0 - cos((8.0 * \\n    (sqrt(dot (xlat_mutableuv8, xlat_mutableuv8)) * ((abs(xlat_mutableuv1.x) + abs(xlat_mutableuv1.y)) + q32))\\n  )));\\n  z_3 = (z_3 * (0.2 * clamp (\\n    dot (vec3(z_3), vec3(0.32, 0.49, 0.29))\\n  , 0.0, 1.0)));\\n  float tmpvar_7;\\n  tmpvar_7 = float((z_3 <= 1.0));\\n  xlat_mutablers = ((q28 * xlat_mutablers) + ((1.0 - q28) * xlat_mutablers.yx));\\n  uv_1 = (uv_orig + ((\\n    ((1.0 - tmpvar_7) * 3.0)\\n   * xlat_mutablers.yx) + (\\n    ((0.5 * tmpvar_7) * z_3)\\n   * \\n    sign(z_3)\\n  )));\\n  mat2 tmpvar_8;\\n  vec4 tmpvar_9;\\n  tmpvar_9 = (_qb * 0.5);\\n  tmpvar_8[uint(0)] = tmpvar_9.xy;\\n  tmpvar_8[1u] = tmpvar_9.zw;\\n  vec4 tmpvar_10;\\n  tmpvar_10 = texture (sampler_main, uv_1);\\n  vec3 tmpvar_11;\\n  tmpvar_11 = (tmpvar_10.xyz + vec3((0.075 * abs(\\n    (0.0225 / sqrt((xlat_mutableuv1 * tmpvar_8).x))\\n  ))));\\n  xlat_varmod_2 = ((0.98 - (texture (sampler_noise_lq, \\n    ((50.0 * uv_1) + time)\\n  ) - 0.15).xyz) - (tmpvar_10.xyz - (0.5 * \\n    ((texture (sampler_blur1, fract(uv_1)).xyz * scale1) + bias1)\\n  )));\\n  ret_4 = (((\\n    (1.0/(tmpvar_7))\\n   * tmpvar_11) * xlat_varmod_2) + ((tmpvar_7 * tmpvar_11) * xlat_varmod_2));\\n  ret_4 = (ret_4 * (vec3(0.96, 0.96, 0.96) - (0.1 * texture (sampler_noise_hq, uv_1)).xyz));\\n  vec3 tmpvar_12;\\n  tmpvar_12.z = 0.0;\\n  tmpvar_12.xy = uv_orig;\\n  ret_4 = (ret_4 * (vec3(1.76, 1.64, 1.52) * dot (tmpvar_12, vec3(0.32, 0.49, 0.29))));\\n  ret_4 = (ret_4 * 0.86);\\n  vec4 tmpvar_13;\\n  tmpvar_13.w = 1.0;\\n  tmpvar_13.xyz = ret_4;\\n  ret = tmpvar_13.xyz;\\n }","comp":"vec3 xlat_mutableblur;\\nvec3 xlat_mutableret1;\\nvec2 xlat_mutableuv2;\\nvec2 xlat_mutableuv3;\\n shader_body { \\n  vec2 uv_1;\\n  float t_rel_2;\\n  float inten_4;\\n  float dist_5;\\n  float ang2_6;\\n  vec3 ret_7;\\n  vec4 tmpvar_8;\\n  tmpvar_8 = texture (sampler_fc_main, uv);\\n  ret_7 = tmpvar_8.xyz;\\n  uv_1 = (uv - 0.5);\\n  uv_1 = (uv_1 * aspect.xy);\\n  dist_5 = 0.0;\\n  inten_4 = 0.0;\\n  xlat_mutableret1 = vec3(0.0, 0.0, 0.0);\\n  t_rel_2 = q29;\\n  for (float n_3 = 0.0; n_3 < 16.0; n_3 += 1.0) {\\n    ang2_6 = (((6.28 * n_3) / 16.0) + q30);\\n    float tmpvar_9;\\n    tmpvar_9 = cos(ang2_6);\\n    float tmpvar_10;\\n    tmpvar_10 = sin(ang2_6);\\n    xlat_mutableuv2.x = ((uv_1.x * tmpvar_9) - (uv_1.y * tmpvar_10));\\n    xlat_mutableuv2.y = ((uv_1.x * tmpvar_10) + (uv_1.y * tmpvar_9));\\n    dist_5 = (1.0 - fract((\\n      (n_3 * 16.0)\\n     - t_rel_2)));\\n    inten_4 = (dist_5 * (1.0 - (dist_5 * dist_5)));\\n    xlat_mutableuv3 = ((-0.85 * xlat_mutableuv2) * dist_5);\\n    xlat_mutableblur = (((texture (sampler_blur1, \\n      fract(xlat_mutableuv3)\\n    ).xyz * scale1) + bias1) * vec3(0.5, 0.9, 1.0));\\n    xlat_mutableret1 = max (xlat_mutableret1, ((texture (sampler_main, \\n      (xlat_mutableuv3 * 2.0)\\n    ).xyz - xlat_mutableblur) * inten_4));\\n  };\\n  uv_1 = (uv_1 * (tmpvar_8.xy * uv_orig));\\n  ret_7 = (uv_1.x - (tmpvar_8.xyz * uv_1.x));\\n  ret_7 = (ret_7 + (xlat_mutableret1 * 16.0));\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 1.0;\\n  tmpvar_11.xyz = ret_7;\\n  ret = tmpvar_11.xyz;\\n }"}')},9581:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1.7,"decay":1,"echo_zoom":1.002,"echo_orient":1,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":0.001,"wave_scale":1.157,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"fshader":1,"dx":0.00001,"dy":0.00001,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.005,"ob_a":0.2,"ib_size":0.005,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":14,"num_inst":512,"rad":0.1026,"tex_ang":0.62832,"r2":1,"g2":0,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\nrad=(bass+treb)/100;\\na=(above(bass+mid+treb,.8));\\nr=int(rand(100))/100;\\ng=int(rand(100))/100;\\nb=int(rand(100))/100;\\nr2=int(rand(100))/100;\\ng2=int(rand(100))/100;\\nb2=int(rand(100))/100;\\nr_border=int(rand(100))/100;\\ng_border=int(rand(100))/100;\\nb_border=int(rand(100))/100;"},{"baseVals":{"enabled":1,"sides":23,"num_inst":1024,"rad":0.10262,"ang":0.43982,"tex_ang":0.62832,"a":0.5,"r2":1,"g2":0,"a2":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\nrad=(bass+treb)/75;\\na=(above(bass+mid+treb,.1));\\nr=int(rand(100))/100;\\ng=int(rand(100))/100;\\nb=int(rand(100))/100;\\nr2=int(rand(100))/100;\\ng2=int(rand(100))/100;\\nb2=int(rand(100))/100;\\nr_border=int(rand(100))/100;\\ng_border=int(rand(100))/100;\\nb_border=int(rand(100))/100;"},{"baseVals":{"sides":14,"additive":1,"num_inst":256,"rad":0.20269,"tex_ang":0.62832,"r2":1,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));"},{"baseVals":{"sides":14,"additive":1,"num_inst":256,"rad":0.22389,"tex_ang":0.62832,"r2":1,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));"}],"waves":[{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));"}],"init_eqs_eel":"","frame_eqs_eel":"bass_tick = above(bass_att,bass_tick)*2 + (1-above(bass_att,bass_tick))*\\n((bass_tick-1.3)*0.96+1.3);\\ntreb_tick = above(treb_att,treb_tick)*2 + (1-above(treb_att,treb_tick))*\\n((treb_tick-1.3)*0.96+1.3);\\nmid_tick = above(mid_att,mid_tick)*2 + (1-above(mid_att,mid_tick))*\\n((mid_tick-1.3)*0.96+1.3);\\nbass_shift = equal(bass_tick,2)*0.95*sin(time*5) + (1-equal(bass_tick,2))*bass_shift;\\ntreb_shift = equal(treb_tick,2)*0.95*sin(time*5) + (1-equal(treb_tick,2))*treb_shift;\\nmid_shift = equal(mid_tick,2)*0.95*sin(time*5) + (1-equal(mid_tick,2))*mid_shift;\\n\\n//wave_x = wave_x + 0.12*sin(time);\\n//wave_y =wave_y + 0.12*cos(time);\\nwave_r = wave_r + bass_shift;\\nwave_g = wave_g + mid_shift;\\nwave_b = wave_b + treb_shift;\\nq1 = bass_shift;\\nq2= mid_shift;\\nq3 = treb_shift;\\nzoom = zoom + abs(0.05*(treb/2*cos(bass_att*treb_shift)*bass_shift));\\nq4=sin(time);\\nq5=tan(time);","pixel_eqs_eel":"thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\\ndx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;\\ndy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;\\n\\nrot = rot - 0.25*abs(((bass_att*q3)+0.55*q1)*(0.5*sin(time)-cos(0.5-2*(2.5*rad))));\\nrot = rot - 0.5*if (above(bass_att,((q1*q2*q3)/3)),(sin(12*rad))*(6.5*rad)*2*dy-r,dx_r);\\nzoom = zoom + equal(zoom,0)*dy_r;\\nrot = rot + 0.25*(q1/6+(q2*q1));\\ncx = cx - 0.25*(cos(time)-0.5*sin(time*1.2));\\ncy = cy - 0.25*(sin(time)+0.5*cos(1.22*time));\\ndx = dx + dx_r;\\ndy = dy + dy_r;","warp":" shader_body { \\n  vec2 uv_1;\\n  vec3 ret_2;\\n  ret_2 = ((1.25 * (\\n    (texture (sampler_blur3, uv).xyz * scale3)\\n   + bias3)) - (0.25 * (\\n    (texture (sampler_blur1, uv).xyz * scale1)\\n   + bias1)));\\n  vec3 theta_3;\\n  theta_3 = (1.33 * ((texture (sampler_blur1, \\n    clamp (ret_2.xy, 0.0, 1.0)\\n  ).xyz * scale1) + bias1));\\n  uv_1 = (uv * (1.0 + (0.15 * \\n    (sin(theta_3) / cos(theta_3))\\n  )).xy);\\n  vec3 theta_4;\\n  theta_4 = (1.33 * ((texture (sampler_blur1, \\n    clamp (ret_2.xy, 0.0, 1.0)\\n  ).xyz * scale1) + bias1));\\n  uv_1 = (uv_1 - (0.075 * (\\n    sin(theta_4)\\n   / \\n    cos(theta_4)\\n  )).xy);\\n  float tmpvar_5;\\n  tmpvar_5 = dot (texsize.zw, texsize.zw);\\n  ret_2 = (max (max (texture (sampler_main, uv_1).xyz, texture (sampler_main, \\n    (((uv_1 - 0.5) * (1.0 - (8.0 * \\n      sqrt(tmpvar_5)\\n    ))) + 0.5)\\n  ).xyz), texture (sampler_main, (\\n    ((uv_1 - 0.5) * (1.0 + (8.0 * sqrt(tmpvar_5))))\\n   + 0.5)).xyz) - 0.024);\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = ret_2;\\n  ret = tmpvar_6.xyz;\\n }","comp":" shader_body { \\n  vec2 uv_1;\\n  vec3 ret3_2;\\n  vec3 ret_3;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (((uv - 0.5) * vec2(-1.0, 1.0)) + 0.5);\\n  vec3 tmpvar_5;\\n  tmpvar_5 = abs(((texture (sampler_main, uv).xyz * \\n    clamp ((((\\n      (texture (sampler_blur2, uv).xyz * scale2)\\n     + bias2) * 2.8) - 0.13), 0.0, 1.0)\\n  ) - (texture (sampler_main, tmpvar_4).xyz * \\n    clamp ((((\\n      (texture (sampler_blur2, tmpvar_4).xyz * scale2)\\n     + bias2) * 2.8) - 0.13), 0.0, 1.0)\\n  )));\\n  ret3_2 = (tmpvar_5 * sqrt(tmpvar_5));\\n  ret3_2 = (ret3_2 * vec3(0.9, 1.6, 2.3));\\n  ret3_2 = (ret3_2 * 3.0);\\n  vec3 tmpvar_6;\\n  tmpvar_6 = pow (ret3_2, (1.0 - ret3_2));\\n  ret3_2 = tmpvar_6;\\n  uv_1 = (uv * 2.0);\\n  vec2 tmpvar_7;\\n  tmpvar_7 = floor((fract(\\n    (uv_1 * 0.5)\\n  ) * 2.0));\\n  uv_1 = ((fract(uv_1) * (1.0 - tmpvar_7)) + (tmpvar_7 * fract(\\n    (1.0 - uv_1)\\n  )));\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = rad;\\n  tmpvar_8.y = uv_1.y;\\n  uv_1 = tmpvar_8;\\n  vec2 tmpvar_9;\\n  tmpvar_9 = ((0.5 - tmpvar_8.yx) + 0.5);\\n  ret_3 = (texture (sampler_main, tmpvar_8.yx).xyz * clamp ((\\n    (((texture (sampler_blur2, tmpvar_8.yx).xyz * scale2) + bias2) * 2.8)\\n   - 0.13), 0.0, 1.0));\\n  vec3 tmpvar_10;\\n  tmpvar_10 = mix (ret_3, (texture (sampler_main, tmpvar_9).xyz * clamp (\\n    ((((texture (sampler_blur2, tmpvar_9).xyz * scale2) + bias2) * 2.8) - 0.13)\\n  , 0.0, 1.0)), vec3(0.5, 0.5, 0.5));\\n  ret_3 = (tmpvar_10 * tmpvar_10);\\n  ret_3 = (ret_3 * vec3(0.9, 1.6, 2.3));\\n  ret_3 = (ret_3 * 3.0);\\n  vec3 tmpvar_11;\\n  tmpvar_11 = max (tmpvar_6, (0.8 * vec3((0.5 * \\n    dot (ret_3, vec3(0.32, 0.49, 0.29))\\n  ))));\\n  ret_3 = tmpvar_11;\\n  vec4 tmpvar_12;\\n  tmpvar_12.w = 1.0;\\n  tmpvar_12.xyz = tmpvar_11;\\n  ret = tmpvar_12.xyz;\\n }"}')},8391:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":4,"gammaadj":1,"decay":0.995,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":1,"wave_mode":6,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":2.103,"wave_smoothing":0.54,"wave_mystery":0.38,"modwavealphastart":0.81,"modwavealphaend":1.4,"warpscale":1.331,"warp":0.01,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0.005,"ob_a":1,"ib_size":0.005,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"sides":64,"thickoutline":1,"textured":1,"rad":0.53526,"tex_zoom":1.35028,"g":1,"b":1,"a":0.4,"r2":1,"b2":1,"a2":0.5,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":14,"num_inst":78,"x":0.6,"rad":0.02217,"tex_zoom":60.80383,"g":1,"b":1,"a":0.9,"g2":0,"a2":1,"border_g":0.59,"border_a":1},"init_eqs_eel":"t1 = int(rand(10))/10;\\nt2 = .2 + int(rand(8))/10;","frame_eqs_eel":"speed = .02;\\ntrel = int(time*speed)- time*speed+1;\\nk1 = instance/num_inst; \\nk1 = k1 - int(k1);\\ndist = 1.4-k1; //################# soll 1 sein\\n//dist = dist - int(dist);\\n\\n\\nfov = .1;\\narg = dist-.02*time;\\nposx = fov/dist * (sin(arg*13) + .2*sin(dist*332));\\nposy = fov/dist * (cos(arg*36)+ .2*sin(dist*332));\\n\\nxl = .5 + posx;\\nyl = .5 + posy;\\n\\ntime2 = time/4 + cos(instance) ;\\nxw = .5 + .5 * (sin(arg*14) + .02*cos(arg*1131)) ;\\nyw = time2 - int(time2);\\n\\nx = if(bnot(q19),xl,xw);\\ny = if(bnot(q19),yl,yw);\\n\\nang = time * sin(k1*44)*12;\\na = t1; border_a = 0; a2 = t2;\\nrad = .01/dist;\\n\\nr = .5 + .3* sin(instance+arg); \\nb = .5 + .3* sin(instance-2+arg); \\ng = .5 + .3* sin(instance*2+arg);\\n\\n"},{"baseVals":{"sides":63,"x":0.503,"y":0.67,"rad":0.05033,"tex_zoom":0.49981,"r":0,"g":1,"b":1,"g2":0,"a2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"y":0.51,"rad":0.19869,"tex_ang":1.00531,"tex_zoom":0.49981,"g":0.4,"a":0.7,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"samples":128,"thick":1,"additive":1,"scaling":0.89152,"smoothing":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"samples":100,"usedots":1,"thick":1,"scaling":0.89152,"smoothing":0,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"q8=0;","frame_eqs_eel":"chng=sin(time*.5);\\ncthr=.9999;\\nmq21=if(above(chng,cthr),rand(3),mq21);\\nmq22=if(above(chng,cthr),rand(3),mq22);\\nmq23=if(above(chng,cthr),rand(3),mq23);\\nmq24=if(above(chng,cthr),rand(2),mq24);\\nmq25=if(above(chng,cthr),rand(2),mq25);\\nmq26=if(above(chng,cthr),rand(2),mq26);\\nmq27=if(above(chng,cthr),rand(1),mq27);\\nmq28=if(above(chng,cthr),rand(1),mq28);\\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\\nmq31=if(above(chng,cthr),rand(1)*.3,mq31);\\nmonitor=chng;\\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\\nq27=mq27;q28=mq28;q29=mq29;q31=mq31;\\n\\nmonitor=mq1;\\nvol=bass+treb+mid;\\natime=atime+vol;\\nq11=.4+sin(atime*.006        )*.4;\\nq12=.4+cos(atime*.00613828348)*.4;\\nq13=.4+sin(atime*.00598593455)*.4;\\nmonitor=q13;\\n\\nwarp=0;\\nq8 =oldq8+ 0.0003*(pow(1+1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6)/fps);\\noldq8 = q8;\\nwave_r = 0.5+0.5*sin(1.123*q8);\\nwave_g = 0.5+0.5*sin(q8*1.576);\\nwave_b = 0.5+0.5*cos(q8*1.465);\\nib_a =0.2*bass;","pixel_eqs_eel":"dx=dx+0.008*sin((y*2-1)*meshx)+0.008*sin((y*2-1)*meshx*1.3333);\\ndy=dy+0.008*cos((x*2-1)*meshx*1.3333)+0.008*cos((x*2-1)*meshx);","warp":" shader_body { \\n  vec3 ret_1;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv);\\n  ret_1 = tmpvar_2.xyz;\\n  vec4 tmpvar_3;\\n  tmpvar_3 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv.xyy) * (\\n    (q27 * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\\n  if (((tmpvar_2.x > (q21 * q13)) && (tmpvar_2.x <= (q24 * q11)))) {\\n    ret_1.y = (tmpvar_2.y - (tmpvar_3.x * 0.5));\\n  };\\n  if (((ret_1.y > (q22 * q11)) && (ret_1.y <= (q25 * q12)))) {\\n    ret_1.z = (tmpvar_2.z - (tmpvar_3.y * 0.5));\\n  };\\n  if (((ret_1.z > (q23 * q12)) && (ret_1.z <= (q26 * q13)))) {\\n    ret_1.x = (tmpvar_2.x - (tmpvar_3.z * 0.5));\\n  };\\n  ret_1 = (ret_1 + ((ret_1 - \\n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\\n  ) * 0.2));\\n  ret_1 = (ret_1 - 0.02);\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = ret_1;\\n  ret = tmpvar_4.xyz;\\n }","comp":" shader_body { \\n  vec2 uv_1;\\n  vec3 ret_2;\\n  uv_1 = (0.05 + (0.9 * uv));\\n  vec4 tmpvar_3;\\n  tmpvar_3 = texture (sampler_main, uv_1);\\n  ret_2 = tmpvar_3.xyz;\\n  vec4 tmpvar_4;\\n  tmpvar_4 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv_1.xyy) * (\\n    (q28 * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q31)));\\n  if (((tmpvar_3.x > (q26 * q13)) && (tmpvar_3.x <= (q23 * q11)))) {\\n    ret_2.z = (tmpvar_3.z - (tmpvar_4.x * 0.5));\\n  };\\n  if (((tmpvar_3.y > (q25 * q11)) && (tmpvar_3.y <= (q22 * q12)))) {\\n    ret_2.x = (tmpvar_3.x - (tmpvar_4.y * 0.5));\\n  };\\n  if (((ret_2.z > (q24 * q12)) && (ret_2.z <= (q21 * q13)))) {\\n    ret_2.y = (tmpvar_3.y - (tmpvar_4.z * 0.5));\\n  };\\n  ret_2 = (abs((\\n    ((texture (sampler_blur1, uv_1).xyz * scale1) + bias1)\\n   - ret_2)) * 6.0);\\n  ret_2 = (ret_2 * 1.333);\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = ret_2;\\n  ret = tmpvar_5.xyz;\\n }"}')},7834:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":4,"decay":1,"echo_zoom":0.332702,"wave_mode":7,"wave_brighten":0,"darken":1,"wave_a":1,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.005,"ob_b":0.2,"ob_a":0.5,"ib_size":0.005,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":3.2,"mv_y":3.000001,"mv_l":3.95,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"textured":1,"rad":0.01,"ang":1.822122,"tex_ang":5.617169,"tex_zoom":1.164437,"g":1,"b":1,"r2":1,"b2":1,"a2":0.1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"//x = 0.5+ 0.4*sin(0.2765*time+0.341*q8);\\n//y = 0.5+ 0.4*sin(0.311*time+0.213*q8);\\n//ang = 3.1415-3.1415*cos(time*0.1389);\\n//rad = 0.5+0.5*sin(q8*0.2685);\\ntex_Ang = q8;"},{"baseVals":{"enabled":1,"sides":100,"textured":1,"rad":0.496295,"tex_ang":5.617169,"tex_zoom":1.719942,"g":1,"b":1,"r2":1,"b2":1,"a2":0.1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"//x = 0.5+ 0.4*sin(0.2765*time+0.341*q8);\\n//y = 0.5+ 0.4*sin(0.311*time+0.213*q8);\\n//ang = 3.1415-3.1415*cos(time*0.1389);\\n//rad = 0.5+0.5*sin(q8*0.2685);\\ntex_Ang = q8-0.02;\\n//x = x +0.01;"},{"baseVals":{"enabled":1,"sides":100,"textured":1,"rad":0.496295,"tex_zoom":1.740601,"g":1,"b":1,"r2":1,"b2":1,"a2":0.1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"//x = 0.5+ 0.4*sin(0.2765*time+0.341*q8);\\n//y = 0.5+ 0.4*sin(0.311*time+0.213*q8);\\n//ang = 3.1415-3.1415*cos(time*0.1389);\\n//rad = 0.5+0.5*sin(q8*0.2685);\\ntex_Ang = q8-0.04;\\n//x = x +0.01;"},{"baseVals":{"enabled":1,"sides":100,"textured":1,"x":0.12,"y":0.2,"rad":0.01,"ang":4.39823,"tex_zoom":1.117709,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.5+ 0.4*sin(0.105*time+0.3*q4);\\ny = 0.5+ 0.4*sin(0.1267*time+0.323*q4);\\nang = 3.1415+3.1415*sin(time*0.2654);\\nrad = 0.5+0.5*sin(q4*0.785);"}],"waves":[{"baseVals":{"enabled":1,"usedots":1,"scaling":1.027964,"smoothing":0,"r":0.3,"b":0.3},"init_eqs_eel":"//pi\\n//t8=3.14159265*0.15;\\n//t5 = 1;\\n\\n//n =300;\\nt1 = 300;\\n//rx = 0;\\nt2 = 0;\\n//ry = 0;\\nt3 = 0;\\n//tpi =3.1415;\\nt4 = 3.14159265;\\n//c=1;\\nt5 = 1;\\n//hu=10;\\nt6 = 10;\\n//hut=-10;\\nt7 = -10;","frame_eqs_eel":"t7 = 0.5+0.5*sin(time)*t4;\\nt6 = (t7+t6*5)/6;\\nt2 = pow(2*bass+bass_att,5)*0.00015111 +oldt2;\\noldt2 = t2;\\n//t2 = 3*sin(time*0.0965);\\nt3 = pow(2*bass+bass_att,4)*0.00026213 + oldt3;\\noldt3 = t3;\\n//t3 =  3*sin(time*0.0872);\\n\\nq1 = -cos(cos(t2));\\nq2 = cos(-t3);\\nq3 = sin(cos(-t2));\\nq4 = sin(t3);","point_eqs_eel":"u = sample*2-1;\\nrf = 512;\\nshc = 1-u*u;\\ncf = below(sample,0.45);\\nu=if(cf,sqrt(shc)*(-u/2+0.5), if(below(sample,0.55), (sample-0.45)*15+0.1, pow(shc,0.7)*1.5));\\nu = u + v/8;\\npx = cos(sample*t4*rf)*u/2+cos(t6)+1.5;\\npy = sample*2-1;\\npz = sin(sample*t4*rf)*u/2+2.9;\\ny1 = py*q1 + pz*q3;\\nz1 = pz*q1 - py*q3;\\nx2 = px*q2 + z1*q4;\\nz2 = z1*q2 - px*q4+5;\\nx = x2/z2;\\ny = y1/z2;\\nx = x*0.5 + 0.5;\\ny = 0.5*y + 0.5;\\nr = 0.5+sin(sample*195)*0.5;\\ng = 0.5*sin(time*0.145)+0.499*(0.5+sin(x*95)*0.5);\\nb = 0.5*sin(time*0.1876)+0.495*(0.5+sin(y*208)*0.5);"},{"baseVals":{"enabled":1,"spectrum":1,"thick":1,"scaling":1.027964,"smoothing":0,"r":0,"g":0,"b":0.4},"init_eqs_eel":"//pi\\n//t8=3.14159265*0.15;\\n//t5 = 1;\\n\\n//n =300;\\nt1 = 300;\\n//rx = 0;\\nt2 = 0;\\n//ry = 0;\\nt3 = 0;\\n//tpi =3.1415;\\nt4 = 3.14159265;\\n//c=1;\\nt5 = 1;\\n//hu=10;\\nt6 = 10;\\n//hut=-10;\\nt7 = -10;","frame_eqs_eel":"t7 = 0.5+0.5*sin(time*0.135)*t4;\\nt6 = (t7+t6*5)/6;\\nt2 = pow(bass+bass_att,6)*0.00005 + 0.022+ oldt2;\\noldt2 = if(above(t2,10000),0,t2);\\n//t2 = t2 -cos(time*0.451);\\nt3 = pow(bass+bass_att,7)*0.00005 + 0.0278 +oldt3;\\noldt3 = t3;\\n//t3 = t3-cos(time*0.321);\\nq1 = -cos(cos(t2));\\nq2 = -cos(t3);\\nq3 = sin(cos(t2));\\nq4 = sin(t3);","point_eqs_eel":"u = sample*2-1;\\nrf = 1000;\\nshc = 1-u*u;\\ncf = below(sample,0.45);\\nu=if(cf,sqrt(shc)*(-u/2+0.5), if(below(sample,0.55), (sample-0.45)*15+0.1, pow(shc,0.7)*1.5));\\nu = u + v/8;\\npx = cos(sample*t4*rf)*u/2+cos(t6)+1.5;\\npy = sample*2-1;\\npz = sin(sample*t4*rf)*u/2+2.9;\\ny1 = py*q1 + pz*q3;\\nz1 = pz*q1 - py*q3;\\nx2 = px*q2 + z1*q4;\\nz2 = z1*q2 - px*q4+5;\\nx = x2/z2;\\ny = y1/z2;\\nx = x*0.5 + 0.5;\\ny = 0.5*y + 0.5;\\nr = abs(sample-(sample*progress));\\ng = sample/y;\\nb = x2*sample;"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"scaling":1.027964,"smoothing":0,"r":0.8,"g":0.4,"b":0.4},"init_eqs_eel":"//pi\\n//t8=3.14159265*0.15;\\n//t5 = 1;\\n\\n//n =300;\\nt1 = 300;\\n//rx = 0;\\nt2 = 0;\\n//ry = 0;\\nt3 = 0;\\n//tpi =3.1415;\\nt4 = 3.14159265;\\n//c=1;\\nt5 = 1;\\n//hu=10;\\nt6 = 10;\\n//hut=-10;\\nt7 = -10;","frame_eqs_eel":"t7 = 0.5+0.5*sin(time*0.896)*t4;\\nt6 = (t7+t6*5)/6;\\nt2 = pow(1.13*bass+bass_att,5)*0.0001 +0.0017+oldt2;\\noldt2 = t2;\\nt2 = t2 + sin(time*0.01963);\\nt3 = pow(bass+1.14*bass_att,5)*0.0001 + 0.00121 +oldt3;\\noldt3 = t3;\\nt3 = t3 + sin(time*0.06527);\\nq1 = -cos(cos(t2));\\nq2 = cos(t3);\\nq3 = sin(cos(t2));\\nq4 = sin(t3);","point_eqs_eel":"u = sample*2-1;\\nrf = 1000;\\nshc = 1-u*u;\\ncf = below(sample,0.45);\\nu=if(cf,sqrt(shc)*(-u/2+0.5), if(below(sample,0.55), (sample-0.45)*15+0.1, pow(shc,0.7)*1.5));\\nu = u + v/8;\\npx = cos(sample*t4*rf)*u/2+cos(t6)+1.5;\\npy = sample*2-1;\\npz = sin(sample*t4*rf)*u/2+2.9;\\ny1 = py*q1 + pz*q3;\\nz1 = pz*q1 - py*q3;\\nx2 = px*q2 + z1*q4;\\nz2 = z1*q2 - px*q4+5;\\nx = x2/z2;\\ny = y1/z2;\\nx = x*0.5 + 0.5;\\ny = 0.5*y + 0.5;\\nr = sample;\\ng = x*sample;\\nb = y*x/sample;"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"scaling":1.027964,"smoothing":0,"r":0,"g":0.5,"b":0.7},"init_eqs_eel":"//pi\\n//t8=3.14159265*0.15;\\n//t5 = 1;\\n\\n//n =300;\\nt1 = 300;\\n//rx = 0;\\nt2 = 0;\\n//ry = 0;\\nt3 = 0;\\n//tpi =3.1415;\\nt4 = 3.14159265;\\n//c=1;\\nt5 = 1;\\n//hu=10;\\nt6 = 10;\\n//hut=-10;\\nt7 = -10;","frame_eqs_eel":"t7 = 0.5+0.5*sin(time)*t4;\\nt6 = (t7+t6*5)/6;\\nt2 = q8*0.7825;\\nt3 = q8*0.6242;\\nq1 = -cos(cos(t2));\\nq2 = cos(t3);\\nq3 = sin(cos(t2));\\nq4 = sin(t3);","point_eqs_eel":"u = sample*2-1;\\nrf = 1000;\\nshc = 1-u*u;\\ncf = below(sample,0.45);\\nu=if(cf,sqrt(shc)*(-u/2+0.5), if(below(sample,0.55), (sample-0.45)*15+0.1, pow(shc,0.7)*1.5));\\nu = u + v/8;\\npx = cos(sample*t4*rf)*u/2+cos(t6)+1.5;\\npy = sample*2-1;\\npz = sin(sample*t4*rf)*u/2+2.9;\\ny1 = py*q1 + pz*q3;\\nz1 = pz*q1 - py*q3;\\nx2 = px*q2 + z1*q4;\\nz2 = z1*q2 - px*q4+5;\\nx = x2/z2;\\ny = y1/z2;\\nx = x*0.5 + 0.5;\\ny = 0.5*y + 0.5;\\nr = 0.5*(y/x) + 0.499*sin(time*0.564);\\nb = 0.5*(x*y) + 0.499*sin(time*0.457);\\ng = 0.5*(x*x) + 0.499*sin(time*0.134);"}],"init_eqs_eel":"//With thanks to UnConeD for his mushy SSC code. :)","frame_eqs_eel":"warp=0;\\nwave_a=0;\\ndecay = 0.97;\\nq7 = 0.00004*(pow(1+1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6)/fps);\\n\\nq6 =  oldq6+ 0.0002*(pow(1+0.1*bass+0.1*bass_att+1.2*treb+0.4*treb_att+0.1*mid+0.1*mid_att,6)/fps);\\noldq6 = q6;\\n\\nq4 =  oldq4+ 0.0002*(pow(1+0.1*bass+0.1*bass_att+0.1*treb+0.1*treb_att+1.2*mid+0.4*mid_att,6)/fps);\\noldq4 = q4;\\n\\nq8 =  oldq8+ 0.0002*(pow(1+1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6)/fps);\\noldq8 = q8;\\n\\nq8 =  oldq8+ 0.0002*(pow(1+1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6)/fps);\\noldq8 = if(above(q8,10000),0,q8);\\nob_b = max(0,sin(q8*0.2542)*0.2 +0.1);\\nob_r = max(0,sin(q8*0.985)*0.4 + 0.2);\\nob_g = max(0,sin(q8*0.8711)*0.3 + 0.1);\\nob_a =max(0,0.3*(q7-0.2))+0.1;\\nib_r = 1-if(ob_size-0.005,0,1);\\nib_g = ib_r*(0.21*0.2*sin(time*0.643));\\nib_b = ib_r*(0.21*0.2*sin(time*0.853));\\nib_a =0.2*q7;\\necho_alpha = above(q7,0.2);\\necho_zoom = 1 + 0.01*q7;","pixel_eqs_eel":"dx=dx+0.007*sin((y*2-1)*meshx)+ 0.006*sin((y*2-1)*meshx*1.3333);\\ndy=dy+sin(q8*0.1745)*0.007*cos((x*2-1)*meshx*1.3333)+ sin(q8*0.1875)*0.006*cos((x*2-1)*meshx*1.666);","warp":"","comp":""}')},7731:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":0.001,"wave_scale":0.573,"wave_smoothing":0,"modwavealphastart":0.24,"modwavealphaend":1.3,"warpscale":1.331,"zoomexp":1.48886,"zoom":1.0196,"warp":0.24146,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.005,"ob_a":1,"ib_size":0.26,"mv_x":28,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":3,"thickoutline":1,"textured":1,"num_inst":311,"rad":0.01,"tex_ang":0.62832,"r":0,"g2":0,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*tan(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=1-mx;\\ny=1-my;\\n\\nang=(sin(time*.35)+1)*3;\\n//a=(above(bass+mid+treb,.8));\\npi23=4*asin(1)*.333333333;\\nt1=bass+mid+treb;"}],"waves":[{"baseVals":{"enabled":1,"usedots":1,"thick":1,"scaling":2.27969,"smoothing":0.7,"b":0},"init_eqs_eel":"t8 = time;","frame_eqs_eel":"","point_eqs_eel":"d1 = sample*95.13;\\nd2 = sample*111.52*value1;\\nd3 = sample*84.45;\\nd4 = sample*143.23;\\nx = sample;\\ny = 0.5 + value1;\\ndx = 1.2*cos(sample*27.43 + 1 + 6.28*(d1-int(d1)));\\ndy = .4 + 1*cos(sample*73.92 + 4 + 6.28*(d2-int(d2)));\\nddy = .85;     // acceleration downward\\nt = time*0.3 + 0.25*sin(sample*64.21+5) + 0.25*sin(sample*123.56+3) + d4-int(d4);\\nt = t - int(t);\\nt=.3+1*.1;\\ntt=t;\\n// simple particle physics: x = x0 + dx*t and y = y0 + dy*t + ddy*t*t\\nx = 0.5 + dx*t;\\ny = .2 + dy*t + ddy*t*t;\\na = 1;//1-t*t;\\n// for some easy audio sync:\\n//a = min(1,a * bass);\\ng = 0 + 0.5*sin(sample*513.32)+.4*sin(time*3);\\nb = 0 + 0.5*sin(sample*53.32)+.3*sin(time*5);\\nr = 0 + 0.5*sin(sample*23.32)+.2*sin(time*2);"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"chng=sin(time*.5);\\ncthr=.9999;\\nmq21=if(above(chng,cthr),rand(3),mq21);\\nmq22=if(above(chng,cthr),rand(3),mq22);\\nmq23=if(above(chng,cthr),rand(3),mq23);\\nmq24=if(above(chng,cthr),rand(2),mq24);\\nmq25=if(above(chng,cthr),rand(2),mq25);\\nmq26=if(above(chng,cthr),rand(2),mq26);\\nmq27=if(above(chng,cthr),rand(1),mq27);\\nmq28=if(above(chng,cthr),rand(1),mq28);\\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\\nmq31=if(above(chng,cthr),rand(1)*.3,mq31);\\nmonitor=chng;\\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\\nq27=mq27;q28=mq28;q29=mq29;q31=mq31;\\n\\nmonitor=mq1;\\nvol=bass+treb+mid;\\natime=atime+vol;\\nq11=.4+sin(atime*.006        )*.4;\\nq12=.4+cos(atime*.00613828348)*.4;\\nq13=.4+sin(atime*.00598593455)*.4;\\nmonitor=q13;\\nq4=sin(atime*.03);\\nq5=cos(atime*.030383824);\\nq6=tan(atime*.029384834);\\n\\n//begin beat code\\nvolume = 0.3*(bass+mid);\\nbeatrate = equal(beatrate,0) + (1-equal(beatrate,0))*(below(volume,0.01) + (1-below(volume,0.01))*beatrate);\\nlastbeat = lastbeat + equal(lastbeat,0)*time;\\nmeanbass_att = 0.05*(meanbass_att*19 + bass_att);\\npeakbass_att = max(bass_att,peakbass_att);\\nbeat = above(volume,0.8)*below(peakbass_att - bass_att, 0.05*peakbass_att)*above(time - lastbeat, 0.1 + 0.5*(beatrate - 0.1));\\nbeatrate = max(if(beat,if(below(time-lastbeat,2*beatrate),0.1*(beatrate*9 + time - lastbeat),beatrate),beatrate),0.1);\\n//Adjust responsiveness: To increase responsiveness, set the \\"0.96 and \\"0.996\\" on the next line to slightly lower values. Higher values decrease responsiveness.\\npeakbass_att = beat*bass_att + (1-beat)*peakbass_att*(above(time - lastbeat, 2*beatrate)*0.96 + (1-above(time - lastbeat, 2*beatrate))*0.996);\\nlastbeat = beat*time + (1-beat)*lastbeat;\\npeakbass_att = max(peakbass_att,1.1*meanbass_att);\\n//end beat code\\n\\ntim = if(beat,time,tim);\\nq5 = below(time - tim,.1);\\n\\nwarp = 0;\\n\\ntic = min(time-tin,.1);\\ntin = time;\\nra = 1/tic*.25;\\n\\ntreb_avg = tic*(treb_avg*(1/tic - ra) + ra*treb);\\nmid_avg = tic*(mid_avg*(1/tic - ra) + ra*mid);\\nbass_avg = tic*(bass_avg*(1/tic - ra) + ra*bass);\\nvav = tic*(vav*(1/tic - ra) + ra*(bass+treb+mid)*.33333);\\n\\ntt = tt + tic*treb;\\nmt = mt + tic*mid;\\nbt = bt + tic*bass;\\nvt = vt + tic*vav;\\n\\nq1 = treb_avg;\\nq2 = mid_avg;\\nq3 = bass_avg;\\n\\nmonitor = q5;\\n\\nmx = if(beat,int(rand(1001))*.001*.5 + int(rand(1001))*.001*.5,mx);\\nmy = if(beat,int(rand(1001))*.001*.5 + int(rand(1001))*.001*.5,my);\\ncx = mx;\\ncy = my;\\n\\nmox = mx - .5;\\nmoy = my - .5;\\nan = atan(moy/mox) + if(above(mox,0),above(moy,0)*6.2832,3.1416);\\ndis = pow(mox*mox + moy*moy,.5);\\ndis = max(.17,dis);\\n\\nq7 = .5 + dis*cos(an);\\nq8 = .5 + dis*sin(an);\\nwarp=bass*.2;\\nwarp=warp+(above(bass,1)*bass*.2);\\n\\necho_alpha=(above(bass,q1)*.3);\\n\\n// nao usar mv_a=(above(bass,1)*bass*.5);\\n\\nq6=q6+(above(bass,1.3)*sin(time)*.02);\\nrot=rot+q6;\\n\\nzoom=zoom+(above(bass,1.3)*bass*.03);\\n\\n//sy=sy+(above(treb_att,1.2)*treb_att*.002*sin(time));\\n//sx=sx+(above(treb_att,1.2)*treb_att*.002*sin(time));","pixel_eqs_eel":"mx = x - q7;\\nmy = y - q8;\\n\\nan = ang;\\n//zoom = 1 + pow(sin(an*5 - time),1)*.02*bass*bass;\\n\\nra = pow(mx*mx + my*my,.5);\\nrot = .02*sin(ra*6.2832*2 - time*4)*(mid + treb)*(mid + treb)*.5;","warp":" shader_body { \\n  vec2 tmp_1;\\n  vec3 ret_2;\\n  tmp_1.x = (ang * 3.0);\\n  tmp_1.y = rad;\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (texture (sampler_noise_lq, ((\\n    ((texsize.xy * texsize_noise_lq.zw).x * uv)\\n   / 2.0) + q23)) + 1.0).xyz;\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, uv).xyz * scale1) + bias1) - 0.3);\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = (0.3 * tmpvar_4.x);\\n  tmpvar_5.y = tmpvar_4.y;\\n  ret_2 = ((-0.4 * (\\n    ((texture (sampler_blur1, ((uv / 4.0) + (0.4 * tmpvar_5))).xyz * scale1) + bias1)\\n   - \\n    (tmpvar_3 * 0.1)\\n  )) + (texture (sampler_main, (uv + \\n    (tmpvar_4 * 0.01)\\n  .xy)).xyz + (tmpvar_3 * 0.1)));\\n  vec4 tmpvar_6;\\n  tmpvar_6 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * tmp_1.xyy) * (\\n    (q27 * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\\n  if (((ret_2.x > (q21 * q13)) && (ret_2.x <= (q24 * q11)))) {\\n    ret_2.y = (ret_2.y - (tmpvar_6.x * 0.5));\\n  };\\n  if (((ret_2.y > (q22 * q11)) && (ret_2.y <= (q25 * q12)))) {\\n    ret_2.z = (ret_2.z - (tmpvar_6.y * 0.5));\\n  };\\n  if (((ret_2.z > (q23 * q12)) && (ret_2.z <= (q26 * q13)))) {\\n    ret_2.x = (ret_2.x - (tmpvar_6.z * 0.5));\\n  };\\n  float tmpvar_7;\\n  tmpvar_7 = (1.0 - ((0.01 * q28) * (q28 * rad)));\\n  ret_2 = (ret_2 * (0.98 * (tmpvar_7 * tmpvar_7)));\\n  ret_2 = (ret_2 - 0.04);\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = ret_2;\\n  ret = tmpvar_8.xyz;\\n }","comp":"vec2 xlat_mutabledz;\\nvec3 xlat_mutableneu;\\nvec3 xlat_mutableret1;\\nvec2 xlat_mutableuv3;\\n shader_body { \\n  vec2 uv2_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3.y = 0.0;\\n  tmpvar_3.x = texsize.z;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = 0.0;\\n  tmpvar_4.y = texsize.w;\\n  xlat_mutabledz.x = dot ((texture (sampler_main, (uv + tmpvar_3)).xyz - texture (sampler_main, (uv - tmpvar_3)).xyz), vec3(0.32, 0.49, 0.29));\\n  xlat_mutabledz.y = dot ((texture (sampler_main, (uv + tmpvar_4)).xyz - texture (sampler_main, (uv - tmpvar_4)).xyz), vec3(0.32, 0.49, 0.29));\\n  uv2_1 = (uv - 0.5);\\n  vec2 tmpvar_5;\\n  tmpvar_5.y = 0.0;\\n  float tmpvar_6;\\n  tmpvar_6 = (time / 8.0);\\n  tmpvar_5.x = tmpvar_6;\\n  float tmpvar_7;\\n  tmpvar_7 = (q27 * 2.0);\\n  xlat_mutableuv3 = (((tmpvar_7 * uv2_1) * 0.1) + tmpvar_5);\\n  xlat_mutableuv3 = (fract(xlat_mutableuv3) * aspect.yx);\\n  xlat_mutableuv3 = ((0.1 * cos(\\n    (22.0 * xlat_mutableuv3)\\n  )) + (18.0 * xlat_mutabledz));\\n  float tmpvar_8;\\n  tmpvar_8 = clamp ((0.02 / sqrt(\\n    dot (xlat_mutableuv3, xlat_mutableuv3)\\n  )), 0.0, 1.0);\\n  vec4 tmpvar_9;\\n  tmpvar_9 = (1.0 + roam_cos);\\n  xlat_mutableneu = ((0.1 * vec3(tmpvar_8)) + ((0.45 * \\n    dot (vec3(tmpvar_8), vec3(0.32, 0.49, 0.29))\\n  ) * tmpvar_9).xyz);\\n  xlat_mutableret1 = max (vec3(0.0, 0.0, 0.0), (xlat_mutableneu * 1.252262));\\n  vec2 tmpvar_10;\\n  tmpvar_10.y = 0.0;\\n  tmpvar_10.x = tmpvar_6;\\n  xlat_mutableuv3 = (((tmpvar_7 * uv2_1) * 0.1) + tmpvar_10);\\n  xlat_mutableuv3 = (fract(xlat_mutableuv3) * aspect.yx);\\n  xlat_mutableuv3 = ((0.1 * cos(\\n    (22.0 * xlat_mutableuv3)\\n  )) + (18.0 * xlat_mutabledz));\\n  float tmpvar_11;\\n  tmpvar_11 = clamp ((0.02 / sqrt(\\n    dot (xlat_mutableuv3, xlat_mutableuv3)\\n  )), 0.0, 1.0);\\n  xlat_mutableneu = ((0.1 * vec3(tmpvar_11)) + ((0.45 * \\n    dot (vec3(tmpvar_11), vec3(0.32, 0.49, 0.29))\\n  ) * tmpvar_9).xyz);\\n  xlat_mutableret1 = max (xlat_mutableret1, (xlat_mutableneu * 1.252262));\\n  ret_2 = (xlat_mutableret1 + clamp ((\\n    (texture (sampler_main, uv).xyz * 4.0)\\n   * \\n    (0.2 + xlat_mutableret1)\\n  ), 0.0, 1.0));\\n  vec4 tmpvar_12;\\n  tmpvar_12 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv.xyy) * (\\n    (q28 * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q31)));\\n  if (((ret_2.x > (q26 * q13)) && (ret_2.x <= (q23 * q11)))) {\\n    ret_2.z = (ret_2.z - (tmpvar_12.x * 0.5));\\n  };\\n  if (((ret_2.y > (q25 * q11)) && (ret_2.y <= (q22 * q12)))) {\\n    ret_2.x = (ret_2.x - (tmpvar_12.y * 0.5));\\n  };\\n  if (((ret_2.z > (q24 * q12)) && (ret_2.z <= (q21 * q13)))) {\\n    ret_2.y = (ret_2.y - (tmpvar_12.z * 0.5));\\n  };\\n  vec4 tmpvar_13;\\n  tmpvar_13.w = 1.0;\\n  tmpvar_13.xyz = ret_2;\\n  ret = tmpvar_13.xyz;\\n }"}')},7814:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":4,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":1.157,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.9995,"warp":0.009,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0,"b1x":0.7,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":14,"num_inst":512,"rad":0.1026,"tex_ang":0.62832,"r2":1,"g2":0,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\nrad=(bass+treb)/100;\\na=(above(bass+mid+treb,.8));\\nr=int(rand(100))/100;\\ng=int(rand(100))/100;\\nb=int(rand(100))/100;\\nr2=int(rand(100))/100;\\ng2=int(rand(100))/100;\\nb2=int(rand(100))/100;\\nr_border=int(rand(100))/100;\\ng_border=int(rand(100))/100;\\nb_border=int(rand(100))/100;"},{"baseVals":{"enabled":1,"sides":23,"num_inst":1024,"rad":0.10262,"ang":0.43982,"tex_ang":0.62832,"a":0.5,"r2":1,"g2":0,"a2":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\nrad=(bass+treb)/75;\\na=(above(bass+mid+treb,.1));\\nr=int(rand(100))/100;\\ng=int(rand(100))/100;\\nb=int(rand(100))/100;\\nr2=int(rand(100))/100;\\ng2=int(rand(100))/100;\\nb2=int(rand(100))/100;\\nr_border=int(rand(100))/100;\\ng_border=int(rand(100))/100;\\nb_border=int(rand(100))/100;"},{"baseVals":{"sides":14,"additive":1,"num_inst":256,"rad":0.20269,"tex_ang":0.62832,"r2":1,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));"},{"baseVals":{"sides":14,"additive":1,"num_inst":256,"rad":0.22389,"tex_ang":0.62832,"r2":1,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));"}],"waves":[{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));"}],"init_eqs_eel":"x1 = 2;\\ny1= 2;\\nz1 = 2;","frame_eqs_eel":"// raytraced sphere code\\n\\nd = 20; // distance of the sphere, the farther you\'re away the more you\'ll see on the horizon\\nz = 4; // distance of the pane where the scene is projected on, wider distance = smaller apex angle of the camera, very small distances = fish eyes view\\n\\nzz = 1 + bass_att*0; // linear zoom\\n\\npi = asin(1)*2;\\npi2inv = 0.5/pi;\\nmaskangle = asin( 1/d);\\nq32 = maskangle; // hit = (cameras angle < mask_angle)\\nq31 = d;\\nq30 = z;\\nq29 = pi2inv;\\nq28 = pi;\\nq27 = 1/zz;\\n\\nv = 0.4;\\nj1 = j1*0.95 + sqr(bass*4)*v;\\nj2 = j2*0.95 + sqr(mid*4)*v;\\nj3 = j3*0.95 + sqr(treb*4)*v;\\n\\nn = n + j1*0.0152;\\nn1 = n1 + j2*0.0152;\\nn2 = n2 + j3*0.0152;\\n\\nvol=(bass+mid+treb)*0.25;\\nvol=vol;\\nq3=vol;\\nmtime = mtime+vol*0.01;\\nq1=mtime;\\n\\nzoom = zoom + 0.015*vol;\\n\\nw1 = n*0.01;    // solid angles to rotate the sphere in its origin\\nw2 = n1*0.01;\\nw3 = n2*0.01;\\n\\nq20 = cos(w1);\\nq21 = sin(w1);\\nq22 = cos(w2);\\nq23 = sin(w2);\\nq24 = cos(w3);\\nq25 = sin(w3);","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 1.5)) + rand_frame.xy);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ((texture (sampler_main, (\\n    mix (uv_orig, uv, vec2(((dot (texture (sampler_main, \\n      mix (uv_orig, uv, vec2(4.0, 4.0))\\n    ).xyz, vec3(0.32, 0.49, 0.29)) - dot (\\n      ((texture (sampler_blur2, mix (uv_orig, uv, vec2(-12.0, -12.0))).xyz * scale2) + bias2)\\n    , vec3(0.32, 0.49, 0.29))) * 12.0)))\\n   + \\n    (((texture (sampler_noise_lq, tmpvar_1) - 0.5).xy * texsize.zw) * 0.5)\\n  )).xyz + (\\n    (texture (sampler_noise_lq, tmpvar_1) - 0.5)\\n   * 0.006).xyz) + -0.0006);\\n  ret = tmpvar_2.xyz;\\n }","comp":" shader_body { \\n  vec2 uv_1;\\n  vec3 ret2_2;\\n  vec2 uv2_3;\\n  vec3 ret_4;\\n  uv2_3.y = uv.y;\\n  uv2_3.x = (1.0 - uv.x);\\n  uv2_3 = (0.5 + ((uv2_3 - 0.5) * 0.98));\\n  uv_1 = (0.5 + ((uv - 0.5) * 0.98));\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (texsize.zw * 4.0);\\n  vec3 tmpvar_6;\\n  tmpvar_6 = (((texture (sampler_blur1, \\n    (uv_1 + (vec2(1.0, 0.0) * tmpvar_5))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv_1 - (vec2(1.0, 0.0) * tmpvar_5))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_7;\\n  tmpvar_7 = (((texture (sampler_blur1, \\n    (uv_1 + (vec2(0.0, 1.0) * tmpvar_5))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv_1 - (vec2(0.0, 1.0) * tmpvar_5))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_8;\\n  tmpvar_8.z = 0.0;\\n  tmpvar_8.x = dot (tmpvar_6, vec3(0.32, 0.49, 0.29));\\n  tmpvar_8.y = dot (tmpvar_7, vec3(0.32, 0.49, 0.29));\\n  vec4 tmpvar_9;\\n  tmpvar_9 = texture (sampler_noisevol_hq, ((vec3(0.05, 0.05, 0.0) * (\\n    ((uv_1.xyy + (tmpvar_8 * 0.5)) * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + (vec3(0.0, 0.0, 0.2) * time)));\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = dot (tmpvar_6, vec3(0.32, 0.49, 0.29));\\n  tmpvar_10.y = dot (tmpvar_7, vec3(0.32, 0.49, 0.29));\\n  uv_1 = (uv_1 - (tmpvar_10 * 0.04));\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = dot (((\\n    (texture (sampler_blur1, (uv2_3 + (vec2(1.0, 0.0) * tmpvar_5))).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (uv2_3 - (vec2(1.0, 0.0) * tmpvar_5))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  tmpvar_11.y = dot (((\\n    (texture (sampler_blur1, (uv2_3 + (vec2(0.0, 1.0) * tmpvar_5))).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (uv2_3 - (vec2(0.0, 1.0) * tmpvar_5))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  uv2_3 = (uv2_3 - (tmpvar_11 * 0.04));\\n  ret_4 = (abs((\\n    ((texture (sampler_main, uv_1).xyz + ((texture (sampler_blur1, uv_1).xyz * scale1) + bias1)) - ((texture (sampler_blur2, uv_1).xyz * scale2) + bias2))\\n   - \\n    ((texture (sampler_blur3, uv_1).xyz * scale3) + bias3)\\n  )) * (dot (tmpvar_9, vec4(0.32, 0.49, 0.29, 0.0)) * 3.0));\\n  ret2_2 = (abs((\\n    ((texture (sampler_main, uv2_3).xyz + ((texture (sampler_blur1, uv2_3).xyz * scale1) + bias1)) - ((texture (sampler_blur2, uv2_3).xyz * scale2) + bias2))\\n   - \\n    ((texture (sampler_blur3, uv2_3).xyz * scale3) + bias3)\\n  )) * (dot (tmpvar_9, vec4(0.32, 0.49, 0.29, 0.0)) * 3.0));\\n  ret2_2 = (0.5 - pow (ret2_2, vec3(0.5, 0.5, 0.5)));\\n  ret_4 = (pow (ret_4, vec3(0.5, 0.5, 0.5)) - (0.3 - ret2_2));\\n  vec4 tmpvar_12;\\n  tmpvar_12.w = 1.0;\\n  tmpvar_12.xyz = ret_4;\\n  ret = tmpvar_12.xyz;\\n }"}')},1258:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":4,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":4,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"darken":1,"wave_a":0.001,"wave_scale":2.233,"wave_smoothing":0.81,"wave_mystery":0.28,"modwavealphastart":0.47,"modwavealphaend":1.32,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.9,"wave_b":0.9,"ob_size":0.11,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"sides":100,"additive":1,"textured":1,"y":0.9,"rad":0.26913,"ang":1.5708,"tex_zoom":9.75346,"r":0.6,"g":0.6,"b":0.6,"a":0.4,"r2":0.29,"g2":0.3,"b2":0.3,"border_b":0,"border_a":0.4,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"textured = 1;\\nrot0 = rot0 + 1/fps * q1;\\n\\nposx = (1-q24)*posx + q24*(.3+rand(100)/200);\\nposy = (1-q24)*posy + q24*(.3+rand(100)/200);;\\n\\nrad0  = (1-q24)*rad0 + q24*(.05+rand(100)/300);\\nrad = rad0;\\n\\n\\nx =  posx;\\ny =  posy;\\nang = rot0;"},{"baseVals":{"sides":100,"rad":0.14451,"ang":1.13097,"tex_zoom":1.02315,"g":1,"b":1,"a":0.97,"r2":1,"b2":1,"a2":0.1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"a = q24*1; a2 = 0;"},{"baseVals":{"sides":63,"textured":1,"x":0.123,"y":0,"rad":0.27319,"tex_zoom":0.49981,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":63,"textured":1,"y":1,"rad":0.54822,"tex_zoom":0.49981,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"thick":1,"additive":1,"scaling":0.89152,"smoothing":0.82,"a":0.9},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"t2 = t2 + bass_att;","point_eqs_eel":"//Alle Funktionen muessen rel. zu t_rel sein\\n\\nk1 = cos(time/3);\\nk2 = sin(time/2);\\n\\nt_abs = sample;\\nt_rel = sample-time/2.12;\\nampl =  cos(t_rel)*5;\\n//ampl = 3;\\n\\nox = sin (t_rel*8) + ampl*sin (t_rel*12) ;\\noy = cos (t_rel*13) + ampl*cos (t_rel*11);\\noz =  ampl/3;\\n\\n\\n\\n\\n//r = sqr(sin(t_rel*3.4));\\n//g = sqr(sin(t_rel*2.3));\\n//b = sqr (cos(t_rel*1.9));\\n\\nr = 1;\\ng = 0.5;\\nb = 0;\\n\\na=0.25*(cos(t_abs*3.14/2)) + 0.2 *below (abs(1-t_abs- t1),0.0);\\n//a=0.25*(sin(t_abs*3.14)) + 0.4 *below (abs(1-t_abs-t1), bass_att/1);\\na=0.25*(cos(t_abs*1.5)) + 0.7 *below (abs(t_abs),0.0);\\n\\nxang = k1*3;\\nyang = 1;\\nzang = 3*k1;\\nfov = 0.22;\\n\\nmonitor = t2;\\n\\n// Rotation um x,y,z\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\n\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = -ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\noz = oz - 6;\\nx = ox*fov/oz +0.5;\\n//x = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;\\n"},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"tm = time*.1;\\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\\n\\ntic = min(time - tin,1);\\ntin = time;\\n\\ntva = (tic*q1*.5);\\ntvb = (tic*q2*.5);\\ntvc = (tic*q3*.5);\\n\\nq1 = tva;\\nq2 = tvb;\\nq3 = tvc;\\n\\nsz = .5;\\nlen = q4;\\nt4 = len;","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"tm = time*.1;\\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\\n\\ntic = min(time - tin,1);\\ntin = time;\\n\\ntva = (tic*q1*.5);\\ntvb = (tic*q2*.5);\\ntvc = (tic*q3*.5);\\n\\nq1 = tva;\\nq2 = tvb;\\nq3 = tvc;\\n\\nsz = .5;\\nlen = 1;\\nt4 = len;","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ra = .8;\\nrb = .5;\\npib = 6.28318530718;\\n\\n\\ntic = min(time-tin,.1);\\ntin = if(equal(sample,0),time,tin);\\n\\nmod = 1.5 + .5*sin(time*.15);\\nmed = 1.5 + .5*sin(time*.134);\\nmed = 5;\\namod = 3;\\n\\nvr = rand(10001)*.0001;\\nrb = rb + rand(10001)*.0001*.1;\\n\\na = vr;\\n\\nsa = vr*pib*.5;\\nsp = sa*mod + q1*1.3;\\nsam = sa*med - q1*.219;\\n\\nox = ra*sin(sam*pib);\\noy = ra*cos(sam*pib);\\nox = ox + rb*-cos(sp)*sin(sam*pib);\\noz = rb*-sin(sp);\\noy = oy + rb*-cos(sp)*cos(sam*pib);\\n\\n\\nxang = time*.132;\\nxang = q2;\\nyang = time*.153;\\nyang = q3;\\nzang = time*.110;\\nzang = q4;\\nfov = 0.6 + 0.2*sin(time);\\nfov = .5;\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = -ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\noz = oz - 2;\\nx = ox*fov/oz + 0.5;\\nx = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;\\n"}],"init_eqs_eel":"p1 = rand(16);\\np2 = p1;","frame_eqs_eel":"dec_med = pow (0.96, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb);\\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .4+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %8;\\nindex2 = (index2 + is_beat*bnot(index))%4;\\nindex3 = (index3 + is_beat*bnot(index)*bnot(index2))%3;\\n\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass + mid + treb;\\n\\n//k1 =  is_beat*bnot(index)*bnot(index2);\\n\\nk1 =  is_beat*equal(index,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.14159265359/4;\\n\\nq27 = 8-index;\\nq28 = sin(time/7);\\nq29 = index4;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\nmv_a = .5 * q1;\\n\\nmovez = movez + .01 * 30/fps ;\\nq29 = movez;\\n\\nmovex = movex + .003 * 30/fps *q2;\\nq30 = movex;\\n\\nq31 = sqr(sin(time/17));\\nq32 = sqr(cos(time/17));\\n\\nzoom = 1.0;\\nrot = .0;\\ndx = .0;\\nwarp = .2;","pixel_eqs_eel":"","warp":"vec3 xlat_mutablemus;\\n shader_body { \\n  vec2 d_1;\\n  vec2 uv6_2;\\n  vec2 uv1_3;\\n  vec3 ret_4;\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (uv - 0.5);\\n  uv1_3 = tmpvar_5;\\n  uv6_2 = tmpvar_5;\\n  float x_6;\\n  x_6 = (abs(tmpvar_5.x) - abs(tmpvar_5.y));\\n  float tmpvar_7;\\n  tmpvar_7 = (12.0 * sqrt((x_6 * x_6)));\\n  vec2 tmpvar_8;\\n  tmpvar_8 = normalize(tmpvar_5);\\n  d_1 = tmpvar_8;\\n  float tmpvar_9;\\n  tmpvar_9 = (float(mod (q28, 2.0)));\\n  if ((tmpvar_9 == 0.0)) {\\n    d_1 = ((q1 * tmpvar_8) - (q2 / tmpvar_8));\\n  };\\n  uv1_3 = (tmpvar_5 + ((-0.06 * \\n    dot (((texture (sampler_blur1, uv).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29))\\n  ) * normalize(tmpvar_5)));\\n  uv1_3 = (uv1_3 - (clamp (\\n    ((sin(tmpvar_7) / cos(tmpvar_7)) * d_1)\\n  , vec2(-4.0, -4.0), vec2(4.0, 4.0)) / 60.0));\\n  uv6_2 = (0.4 * cos((\\n    (uv1_3 * 2.0)\\n   * q28)));\\n  xlat_mutablemus = (clamp (vec3((0.0006 / \\n    (sqrt(dot (uv6_2, uv6_2)) - (0.002 * (q27 + (8.0 * q28))))\\n  )), 0.0, 1.0) * q31);\\n  xlat_mutablemus = (xlat_mutablemus * (1.0 + roam_cos).xyz);\\n  ret_4 = ((0.4 * (\\n    ((texture (sampler_main, ((uv1_3 * \\n      (0.8 + (0.2 * tmpvar_7))\\n    ) + 0.5)).xyz + xlat_mutablemus) * 0.95)\\n   - 0.025)) + (0.6 * texture (sampler_main, uv_orig)).xyz);\\n  ret_4 = (ret_4 * (1.0 - (0.5 * \\n    dot (((texture (sampler_blur2, vec2(0.55, 0.55)).xyz * scale2) + bias2), vec3(0.32, 0.49, 0.29))\\n  )));\\n  vec4 tmpvar_10;\\n  tmpvar_10.w = 1.0;\\n  tmpvar_10.xyz = ret_4;\\n  ret = tmpvar_10.xyz;\\n }","comp":"vec3 xlat_mutableblur;\\nvec3 xlat_mutableneu;\\nvec3 xlat_mutableret1;\\n shader_body { \\n  vec2 uv_1;\\n  float inten_3;\\n  float dist_4;\\n  float ang2_5;\\n  vec2 uv2_6;\\n  vec3 ret_7;\\n  uv_1 = (uv - 0.5);\\n  uv_1 = (uv_1 * aspect.xy);\\n  dist_4 = 1.0;\\n  inten_3 = 1.0;\\n  xlat_mutableret1 = vec3(0.0, 0.0, 0.0);\\n  for (float n_2 = 1.0; n_2 <= 8.0; n_2 += 1.0) {\\n    ang2_5 = (((6.28 * n_2) / 8.0) + (q5 * (n_2 - 1.0)));\\n    float tmpvar_8;\\n    tmpvar_8 = cos(ang2_5);\\n    float tmpvar_9;\\n    tmpvar_9 = sin(ang2_5);\\n    uv2_6.x = ((uv_1.x * tmpvar_8) - (uv_1.y * tmpvar_9));\\n    uv2_6.y = ((uv_1.x * tmpvar_9) + (uv_1.y * tmpvar_8));\\n    uv2_6 = (uv2_6 * aspect.yx);\\n    dist_4 = (1.0 - fract((\\n      (0.25 * n_2)\\n     + q29)));\\n    dist_4 = (dist_4 * dist_4);\\n    inten_3 = ((pow (dist_4, 0.2) * (1.0 - dist_4)) * 2.0);\\n    vec2 tmpvar_10;\\n    tmpvar_10.x = q18;\\n    tmpvar_10.y = q19;\\n    vec2 tmpvar_11;\\n    tmpvar_11 = (((\\n      (3.0 * uv2_6)\\n     * dist_4) + 0.5) + ((0.5 * \\n      (1.0 - (0.5 * q28))\\n    ) * tmpvar_10));\\n    xlat_mutableblur = ((texture (sampler_blur1, fract(tmpvar_11)).xyz * scale1) + bias1);\\n    xlat_mutableneu = (texture (sampler_main, tmpvar_11).xyz + xlat_mutableblur);\\n    xlat_mutableret1 = ((xlat_mutableret1 * 0.9) + (xlat_mutableneu * inten_3));\\n  };\\n  uv2_6 = (0.5 * cos((uv_1 * 16.0)));\\n  ret_7 = ((xlat_mutableret1 * 0.7) + ((\\n    clamp ((0.04 / sqrt(dot (uv2_6, uv2_6))), 0.0, 1.0)\\n   * vec3(1.0, 0.7, 0.0)) * q31));\\n  float tmpvar_12;\\n  tmpvar_12 = (0.5 / ((1.0 + uv_1.x) - (4.0 * \\n    fract((time * 3.0))\\n  )));\\n  ret_7 = (ret_7 + (vec3((q17 * \\n    clamp ((tmpvar_12 * tmpvar_12), 0.0, 1.0)\\n  )) * vec3(0.0, 0.0, 0.7)));\\n  vec4 tmpvar_13;\\n  tmpvar_13.w = 1.0;\\n  tmpvar_13.xyz = ret_7;\\n  ret = tmpvar_13.xyz;\\n }"}')},294:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":3,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":4,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"darken":1,"wave_a":0.001,"wave_scale":2.233,"wave_smoothing":0.81,"wave_mystery":0.28,"modwavealphastart":0.47,"modwavealphaend":1.32,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.9,"wave_b":0.9,"ob_size":0.015,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"sides":100,"additive":1,"textured":1,"y":0.9,"rad":0.26913,"ang":1.5708,"tex_zoom":9.75346,"r":0.6,"g":0.6,"b":0.6,"a":0.4,"r2":0.29,"g2":0.3,"b2":0.3,"border_b":0,"border_a":0.4,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"textured = 1;\\nrot0 = rot0 + 1/fps * q1;\\n\\nposx = (1-q24)*posx + q24*(.3+rand(100)/200);\\nposy = (1-q24)*posy + q24*(.3+rand(100)/200);;\\n\\nrad0  = (1-q24)*rad0 + q24*(.05+rand(100)/300);\\nrad = rad0;\\n\\n\\nx =  posx;\\ny =  posy;\\nang = rot0;"},{"baseVals":{"sides":100,"rad":0.14451,"ang":1.13097,"tex_zoom":1.02315,"g":1,"b":1,"a":0.97,"r2":1,"b2":1,"a2":0.1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"a = q24*1; a2 = 0;"},{"baseVals":{"sides":63,"textured":1,"x":0.123,"y":0,"rad":0.27319,"tex_zoom":0.49981,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":63,"textured":1,"y":1,"rad":0.54822,"tex_zoom":0.49981,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"thick":1,"additive":1,"scaling":0.89152,"smoothing":0.82,"a":0.9},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"t2 = t2 + bass_att;","point_eqs_eel":"//Alle Funktionen muessen rel. zu t_rel sein\\n\\nk1 = cos(time/3);\\nk2 = sin(time/2);\\n\\nt_abs = sample;\\nt_rel = sample-time/2.12;\\nampl =  cos(t_rel)*5;\\n//ampl = 3;\\n\\nox = sin (t_rel*8) + ampl*sin (t_rel*12) ;\\noy = cos (t_rel*13) + ampl*cos (t_rel*11);\\noz =  ampl/3;\\n\\n\\n\\n\\n//r = sqr(sin(t_rel*3.4));\\n//g = sqr(sin(t_rel*2.3));\\n//b = sqr (cos(t_rel*1.9));\\n\\nr = 1;\\ng = 0.5;\\nb = 0;\\n\\na=0.25*(cos(t_abs*3.14/2)) + 0.2 *below (abs(1-t_abs- t1),0.0);\\n//a=0.25*(sin(t_abs*3.14)) + 0.4 *below (abs(1-t_abs-t1), bass_att/1);\\na=0.25*(cos(t_abs*1.5)) + 0.7 *below (abs(t_abs),0.0);\\n\\nxang = k1*3;\\nyang = 1;\\nzang = 3*k1;\\nfov = 0.22;\\n\\nmonitor = t2;\\n\\n// Rotation um x,y,z\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\n\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = -ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\noz = oz - 6;\\nx = ox*fov/oz +0.5;\\n//x = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;\\n"},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"tm = time*.1;\\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\\n\\ntic = min(time - tin,1);\\ntin = time;\\n\\ntva = (tic*q1*.5);\\ntvb = (tic*q2*.5);\\ntvc = (tic*q3*.5);\\n\\nq1 = tva;\\nq2 = tvb;\\nq3 = tvc;\\n\\nsz = .5;\\nlen = q4;\\nt4 = len;","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"tm = time*.1;\\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\\n\\ntic = min(time - tin,1);\\ntin = time;\\n\\ntva = (tic*q1*.5);\\ntvb = (tic*q2*.5);\\ntvc = (tic*q3*.5);\\n\\nq1 = tva;\\nq2 = tvb;\\nq3 = tvc;\\n\\nsz = .5;\\nlen = 1;\\nt4 = len;","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ra = .8;\\nrb = .5;\\npib = 6.28318530718;\\n\\n\\ntic = min(time-tin,.1);\\ntin = if(equal(sample,0),time,tin);\\n\\nmod = 1.5 + .5*sin(time*.15);\\nmed = 1.5 + .5*sin(time*.134);\\nmed = 5;\\namod = 3;\\n\\nvr = rand(10001)*.0001;\\nrb = rb + rand(10001)*.0001*.1;\\n\\na = vr;\\n\\nsa = vr*pib*.5;\\nsp = sa*mod + q1*1.3;\\nsam = sa*med - q1*.219;\\n\\nox = ra*sin(sam*pib);\\noy = ra*cos(sam*pib);\\nox = ox + rb*-cos(sp)*sin(sam*pib);\\noz = rb*-sin(sp);\\noy = oy + rb*-cos(sp)*cos(sam*pib);\\n\\n\\nxang = time*.132;\\nxang = q2;\\nyang = time*.153;\\nyang = q3;\\nzang = time*.110;\\nzang = q4;\\nfov = 0.6 + 0.2*sin(time);\\nfov = .5;\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = -ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\noz = oz - 2;\\nx = ox*fov/oz + 0.5;\\nx = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;\\n"}],"init_eqs_eel":"","frame_eqs_eel":"dec_med = pow (0.7, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb);\\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .2+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %16;\\nindex2 = (index2 + is_beat*bnot(index))%4;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = (bass_att + mid_att + treb_att)/2;\\nq27 = index + 1;\\nq28 = index2;\\n\\n\\n\\nk1 =  is_\\nbeat*equal(index%2,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.1416/4;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\n\\np3 = p3*dec_med + (1-dec_med) * (100*index + .0*q26);\\nq30 = p3 ;\\n\\np4 = dec_med*p4 + (1-dec_med)*q27;\\nq31 = p4;\\n\\nzoom = 1+q28/4;\\nwarp = .0;\\ndx = .2*q2;","pixel_eqs_eel":"","warp":"vec3 xlat_mutablemus;\\n shader_body { \\n  vec2 d_1;\\n  vec2 uv6_2;\\n  vec2 uv1_3;\\n  vec3 ret_4;\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (uv - 0.5);\\n  uv1_3 = tmpvar_5;\\n  uv6_2 = tmpvar_5;\\n  float x_6;\\n  x_6 = (abs(tmpvar_5.x) - abs(tmpvar_5.y));\\n  float tmpvar_7;\\n  tmpvar_7 = (12.0 * sqrt((x_6 * x_6)));\\n  vec2 tmpvar_8;\\n  tmpvar_8 = normalize(tmpvar_5);\\n  d_1 = tmpvar_8;\\n  float tmpvar_9;\\n  tmpvar_9 = (float(mod (q28, 2.0)));\\n  if ((tmpvar_9 == 0.0)) {\\n    d_1 = ((q1 * tmpvar_8) - (q2 / tmpvar_8));\\n  };\\n  uv1_3 = (tmpvar_5 + ((-0.06 * \\n    dot (((texture (sampler_blur1, uv).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29))\\n  ) * normalize(tmpvar_5)));\\n  uv1_3 = (uv1_3 - (clamp (\\n    ((sin(tmpvar_7) / cos(tmpvar_7)) * d_1)\\n  , vec2(-4.0, -4.0), vec2(4.0, 4.0)) / 60.0));\\n  uv6_2 = (0.4 * cos((\\n    (uv1_3 * 2.0)\\n   * q28)));\\n  xlat_mutablemus = (clamp (vec3((0.0006 / \\n    (sqrt(dot (uv6_2, uv6_2)) - (0.002 * (q27 + (8.0 * q28))))\\n  )), 0.0, 1.0) * q31);\\n  xlat_mutablemus = (xlat_mutablemus * (1.0 + roam_cos).xyz);\\n  ret_4 = ((0.4 * (\\n    ((texture (sampler_main, ((uv1_3 * \\n      (0.8 + (0.2 * tmpvar_7))\\n    ) + 0.5)).xyz + xlat_mutablemus) * 0.95)\\n   - 0.025)) + (0.6 * texture (sampler_main, uv_orig)).xyz);\\n  ret_4 = (ret_4 * (1.0 - (0.5 * \\n    dot (((texture (sampler_blur2, vec2(0.55, 0.55)).xyz * scale2) + bias2), vec3(0.32, 0.49, 0.29))\\n  )));\\n  vec4 tmpvar_10;\\n  tmpvar_10.w = 1.0;\\n  tmpvar_10.xyz = ret_4;\\n  ret = tmpvar_10.xyz;\\n }","comp":"vec3 xlat_mutableret1;\\n shader_body { \\n  vec2 uv_1;\\n  float ang2_3;\\n  vec2 uv2_4;\\n  uv_1 = (uv - 0.5);\\n  uv_1 = (uv_1 * aspect.xy);\\n  xlat_mutableret1 = vec3(0.0, 0.0, 0.0);\\n  for (int n_2 = 0; n_2 <= 9; n_2++) {\\n    ang2_3 = ((6.28 * float(n_2)) / 9.0);\\n    float tmpvar_5;\\n    tmpvar_5 = cos(ang2_3);\\n    float tmpvar_6;\\n    tmpvar_6 = sin(ang2_3);\\n    uv2_4.x = ((uv_1.x * tmpvar_5) - (uv_1.y * tmpvar_6));\\n    uv2_4.y = ((uv_1.x * tmpvar_6) + (uv_1.y * tmpvar_5));\\n    xlat_mutableret1 = max (xlat_mutableret1, texture (sampler_main, (uv2_4 + 0.5)).xyz);\\n  };\\n  vec4 tmpvar_7;\\n  tmpvar_7.w = 1.0;\\n  tmpvar_7.xyz = (xlat_mutableret1 * 2.0);\\n  ret = tmpvar_7.xyz;\\n }"}')},7467:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":3,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":6,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":2.103,"wave_smoothing":0.54,"wave_mystery":0.38,"modwavealphastart":0.81,"modwavealphaend":1.4,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0,"wave_b":0,"ob_r":0.4,"ob_a":0.2,"ib_size":0,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":18,"textured":1,"rad":0.15416,"tex_ang":3.76991,"tex_zoom":5.27784,"g":1,"b":1,"a":0.7,"r2":1,"b2":1,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"tex_ang = 3+2*q1;"},{"baseVals":{"enabled":1,"sides":32,"rad":0.06892,"tex_zoom":1.8315,"g":1,"b":1,"a":0.9,"g2":0,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"a = q24/2; a2 = 0;\\n\\nr = rand(10)/10;\\ng = rand(10)/10;\\nb = rand(10)/10;\\n\\nrad = .06*q22;"},{"baseVals":{"sides":63,"x":0.123,"y":0,"rad":0.27319,"tex_zoom":0.49981,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = .5 + .1* sin (time*73);\\ny = .5 + .1* sin (time*23);\\n\\nr = 0; g = 0; b = 0;\\nr2 = 1; g2 = 1; b2 = 1;\\n\\nrad = mid_att/100;\\na = .7;\\na2 = a;"},{"baseVals":{"enabled":1,"y":0.51,"rad":0.19869,"tex_ang":1.00531,"tex_zoom":0.49981,"g":0.4,"a":0.7,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.05 + rand(900)/1000;\\ny = 0.05 + rand(900)/1000;\\n"}],"waves":[{"baseVals":{"enabled":1,"samples":442,"thick":1,"additive":1,"scaling":0.89152,"smoothing":0.82},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"","point_eqs_eel":"x = sample ;\\ny = .5+ value2*0;\\n\\na = .5*q24*((q27+1)%2);\\nr = 0;"},{"baseVals":{"enabled":1,"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"y = sample ;\\nx = .5+ value2*0;\\n\\na = .5*q24*(q27%2);\\nr = 0;"},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ra = .8;\\nrb = .5;\\npib = 6.28318530718;\\n\\n\\ntic = min(time-tin,.1);\\ntin = if(equal(sample,0),time,tin);\\n\\nmod = 1.5 + .5*sin(time*.15);\\nmed = 1.5 + .5*sin(time*.134);\\nmed = 5;\\namod = 3;\\n\\nvr = rand(10001)*.0001;\\nrb = rb + rand(10001)*.0001*.1;\\n\\na = vr;\\n\\nsa = vr*pib*.5;\\nsp = sa*mod + q1*1.3;\\nsam = sa*med - q1*.219;\\n\\nox = ra*sin(sam*pib);\\noy = ra*cos(sam*pib);\\nox = ox + rb*-cos(sp)*sin(sam*pib);\\noz = rb*-sin(sp);\\noy = oy + rb*-cos(sp)*cos(sam*pib);\\n\\n\\nxang = time*.132;\\nxang = q2;\\nyang = time*.153;\\nyang = q3;\\nzang = time*.110;\\nzang = q4;\\nfov = 0.6 + 0.2*sin(time);\\nfov = .5;\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = -ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\noz = oz - 2;\\nx = ox*fov/oz + 0.5;\\nx = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;\\n"}],"init_eqs_eel":"","frame_eqs_eel":"dec_med = pow (0.9, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb);\\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .2+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %8;\\nindex2 = (index2 + is_beat*bnot(index))%2;\\nindex3 = (index3 + is_beat*bnot(index)*bnot(index2))%3;\\n\\nmonitor = index4;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass + mid + treb;\\nq11 = min(q22,3);\\n\\n//k1 =  is_beat*bnot(index)*bnot(index2);\\n\\nk1 =  is_beat*equal(index,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.14159265359/2;\\n\\nq27 = 8-index;\\nq28 = index2;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\nzoom = 1.0 + .02*q1;\\nrot = .01*q2;\\ndx = .0*index;\\n\\nwave_a = 0;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = ((uv * texsize.xy) * 0.04);\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = (cos((tmpvar_1.y * q1)) * sin(-(tmpvar_1.y)));\\n  tmpvar_2.y = (sin(tmpvar_1.x) * cos((tmpvar_1.y * q2)));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ((texture (sampler_main, (uv - \\n    ((tmpvar_2 * texsize.zw) * (24.0 * q28))\\n  )).xyz * 0.99) - 0.006);\\n  ret = tmpvar_3.xyz;\\n }","comp":" shader_body { \\n  vec3 crisp_1;\\n  vec2 uv3_2;\\n  vec2 uv2_3;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = ((uv - 0.5) * aspect.xy);\\n  float tmpvar_5;\\n  tmpvar_5 = (0.1 / (sqrt(\\n    dot (tmpvar_4, tmpvar_4)\\n  ) + 0.1));\\n  vec2 tmpvar_6;\\n  float tmpvar_7;\\n  tmpvar_7 = (ang / 3.14);\\n  tmpvar_6.x = tmpvar_7;\\n  tmpvar_6.y = tmpvar_5;\\n  uv2_3.y = (tmpvar_5 + (0.1 * time));\\n  uv2_3.x = tmpvar_6.x;\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = tmpvar_7;\\n  tmpvar_8.y = (tmpvar_5 * 1.5);\\n  uv3_2.y = (tmpvar_8.y + (0.08 * time));\\n  uv3_2.x = (tmpvar_7 + (time / 32.0));\\n  crisp_1 = (((2.0 * texture (sampler_main, uv2_3).xyz) + texture (sampler_main, uv3_2).xyz) + ((2.0 * \\n    ((texture (sampler_blur2, fract(uv2_3)).xyz * scale2) + bias2)\\n  ) + (2.0 * \\n    ((texture (sampler_blur2, fract(uv3_2)).xyz * scale2) + bias2)\\n  )));\\n  crisp_1 = ((3.0 * crisp_1) * rad);\\n  float tmpvar_9;\\n  tmpvar_9 = clamp ((1.0 - (4.0 * rad)), 0.0, 1.0);\\n  vec4 tmpvar_10;\\n  tmpvar_10.w = 1.0;\\n  tmpvar_10.xyz = ((crisp_1 + (\\n    ((vec3(0.0, 0.0, 1.0) * uv.y) * pow ((1.0 - rad), 8.0))\\n   * tmpvar_9)) + (tmpvar_9 * texture (sampler_main, uv).xyz));\\n  ret = tmpvar_10.xyz;\\n }"}')},7095:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":2.26,"decay":0.97,"echo_zoom":1.007,"echo_alpha":0.5,"echo_orient":3,"wave_mode":6,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":0.001,"wave_scale":2.103,"wave_smoothing":0.54,"wave_mystery":0.38,"modwavealphastart":0.81,"modwavealphaend":1.4,"warpanimspeed":1.459,"warpscale":2.007,"fshader":0.53,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0.015,"ob_b":0.2,"ob_a":1,"ib_size":0.005,"ib_r":0,"ib_g":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":18,"textured":1,"rad":0.15416,"tex_ang":3.76991,"tex_zoom":5.27784,"g":1,"b":1,"a":0.7,"r2":1,"b2":1,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"tex_ang = 3+2*q1;"},{"baseVals":{"enabled":1,"sides":32,"rad":0.06892,"tex_zoom":1.8315,"g":1,"b":1,"a":0.9,"g2":0,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"a = q24/2; a2 = 0;\\n\\nr = rand(10)/10;\\ng = rand(10)/10;\\nb = rand(10)/10;\\n\\nrad = .06*q22;"},{"baseVals":{"sides":63,"x":0.123,"y":0,"rad":0.27319,"tex_zoom":0.49981,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = .5 + .1* sin (time*73);\\ny = .5 + .1* sin (time*23);\\n\\nr = 0; g = 0; b = 0;\\nr2 = 1; g2 = 1; b2 = 1;\\n\\nrad = mid_att/100;\\na = .7;\\na2 = a;"},{"baseVals":{"enabled":1,"y":0.51,"rad":0.19869,"tex_ang":1.00531,"tex_zoom":0.49981,"g":0.4,"a":0.7,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.05 + rand(900)/1000;\\ny = 0.05 + rand(900)/1000;\\n"}],"waves":[{"baseVals":{"enabled":1,"samples":442,"thick":1,"additive":1,"scaling":0.89152,"smoothing":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x = .4+sample*.2 ;\\ny = .5+ value2*.01*q22;\\n\\na = .5*q24*((q27+1)%2);\\nr = 0.2;b=1; g =.6;"},{"baseVals":{"enabled":1,"thick":1,"scaling":0.89152,"smoothing":0,"a":0.1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"y = .4+sample*.2 ;\\nx = .5+ value2*.01*q22;\\n\\na = .6*q24*((q27)%2);\\nr = 0.2;b=1; g =.6;"},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ra = .8;\\nrb = .5;\\npib = 6.28318530718;\\n\\n\\ntic = min(time-tin,.1);\\ntin = if(equal(sample,0),time,tin);\\n\\nmod = 1.5 + .5*sin(time*.15);\\nmed = 1.5 + .5*sin(time*.134);\\nmed = 5;\\namod = 3;\\n\\nvr = rand(10001)*.0001;\\nrb = rb + rand(10001)*.0001*.1;\\n\\na = vr;\\n\\nsa = vr*pib*.5;\\nsp = sa*mod + q1*1.3;\\nsam = sa*med - q1*.219;\\n\\nox = ra*sin(sam*pib);\\noy = ra*cos(sam*pib);\\nox = ox + rb*-cos(sp)*sin(sam*pib);\\noz = rb*-sin(sp);\\noy = oy + rb*-cos(sp)*cos(sam*pib);\\n\\n\\nxang = time*.132;\\nxang = q2;\\nyang = time*.153;\\nyang = q3;\\nzang = time*.110;\\nzang = q4;\\nfov = 0.6 + 0.2*sin(time);\\nfov = .5;\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = -ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\noz = oz - 2;\\nx = ox*fov/oz + 0.5;\\nx = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;\\n"}],"init_eqs_eel":"","frame_eqs_eel":"dec_med = pow (0.9, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb);\\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %4;\\nindex2 = (index2 + is_beat*bnot(index))%4;\\nmonitor = index2;\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = (bass + mid + treb)/16;\\n\\nk1 =  is_beat*bnot(index)*bnot(index2);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\np3 = dec_med * p3+ (1-dec_med)*p2;\\nrott = p3 * 3.1416/4;\\n\\npos = pos + q20/140;\\nq28 = pos;\\nq27 = index+1;\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\ntrel = time/10;\\nq5 = cos(trel);\\nq6 = sin(trel);\\nq7 = -q6;\\nq8 = q5;\\n\\ntrig = q24 * (index%4);\\nmox = bnot(trig)*mox + trig * (rand (100)/100-.5);\\nmoy = bnot(trig)*moy + trig * (rand (100)/100-.5);\\nq15 = mox/2;\\nq16 = moy/2;\\n\\n//speed\\nspeed = speed * bnot(trig) + trig * q26;\\nmovz = movz + speed/fps;\\nq9 = movz;\\n\\n\\nq30 = (1.2 + sin(time/7))*3;\\n\\nzoom = 1;\\nrot = -0.00;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = ((uv * texsize.xy) * 0.08);\\n  vec3 tmpvar_2;\\n  tmpvar_2 = (texture (sampler_main, (uv - (\\n    ((sin(tmpvar_1) / cos(tmpvar_1)) * texsize.zw)\\n   * 3.0))).xyz + (vec3(dot (texture (sampler_noise_lq, \\n    ((((texsize.xy * texsize_noise_lq.zw).x * uv) * 0.02) + (0.1 * rand_frame).xy)\\n  ), vec4(0.32, 0.49, 0.29, 0.0))) / 30.0));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ((mix (tmpvar_2, \\n    (1.0 - tmpvar_2.zyx)\\n  , vec3(0.01, 0.01, 0.01)) - 0.03) - (0.2 * pow (\\n    (1.0 - rad)\\n  , 18.0)));\\n  ret = tmpvar_3.xyz;\\n }","comp":"vec3 xlat_mutableblur;\\nvec3 xlat_mutableneu;\\nvec3 xlat_mutableret1;\\n shader_body { \\n  vec2 uv_1;\\n  float inten_3;\\n  float dist_4;\\n  float ang2_5;\\n  vec2 uv2_6;\\n  uv_1 = (uv - 0.5);\\n  uv_1 = (uv_1 * aspect.xy);\\n  dist_4 = 1.0;\\n  inten_3 = 1.0;\\n  xlat_mutableret1 = vec3(0.0, 0.0, 0.0);\\n  mat2 tmpvar_7;\\n  tmpvar_7[uint(0)] = _qa.xy;\\n  tmpvar_7[1u] = _qa.zw;\\n  uv_1 = (uv_1 * tmpvar_7);\\n  for (float n_2 = 1.0; n_2 <= 6.0; n_2 += 1.0) {\\n    ang2_5 = ((6.28 * n_2) / 6.0);\\n    float tmpvar_8;\\n    tmpvar_8 = cos(ang2_5);\\n    float tmpvar_9;\\n    tmpvar_9 = sin(ang2_5);\\n    uv2_6.x = ((uv_1.x * tmpvar_8) - (uv_1.y * tmpvar_9));\\n    uv2_6.y = ((uv_1.x * tmpvar_9) + (uv_1.y * tmpvar_8));\\n    uv2_6 = (uv2_6 * aspect.yx);\\n    dist_4 = (1.0 - fract((\\n      (0.1666667 * n_2)\\n     + q30)));\\n    inten_3 = ((pow (dist_4, 0.3) * (1.0 - dist_4)) * 2.0);\\n    vec2 tmpvar_10;\\n    tmpvar_10 = (((2.0 * uv2_6) * dist_4) + 0.5);\\n    xlat_mutableblur = ((texture (sampler_blur2, tmpvar_10).xyz * scale2) + bias2);\\n    xlat_mutableneu = (texture (sampler_main, tmpvar_10).xyz + xlat_mutableblur);\\n    xlat_mutableret1 = ((xlat_mutableret1 * 0.9) + (xlat_mutableneu * inten_3));\\n  };\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 1.0;\\n  tmpvar_11.xyz = (xlat_mutableret1 + (vec3(0.0, 0.0, 0.15) * rad));\\n  ret = tmpvar_11.xyz;\\n }"}')},7547:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":3,"gammaadj":1,"wave_thick":1,"wrap":0,"wave_a":0.004,"wave_scale":0.037,"wave_smoothing":0,"wave_mystery":-0.44,"modwavealphastart":1,"modwavealphaend":1,"warpanimspeed":0.803,"warpscale":1.22,"zoomexp":1.50374,"warp":0.31218,"wave_y":0.04,"ob_size":0,"ob_a":1,"ib_size":0,"ib_r":1,"ib_g":0,"ib_b":0.75,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_b":0,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"sides":41,"additive":1,"num_inst":50,"rad":0.01,"ang":3.20442,"tex_zoom":6.23873,"g":1,"b":1,"a":0,"r2":1,"b2":1,"border_a":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"index = instance*q32;\\n\\nx = gmegabuf(index);\\ny = gmegabuf(index+1);\\n\\nang = gmegabuf(index+9);\\nrad = gmegabuf(index+4)*2;\\n\\nr = gmegabuf(index+5);\\ng = gmegabuf(index+6);\\nb = gmegabuf(index+7);\\n\\nr2 = r; g2 = g; b2 = b;\\n\\n\\nx = 0.5 + (x-0.5)/q2;"},{"baseVals":{"sides":23,"additive":1,"num_inst":50,"x":0.74,"y":0.27,"rad":0.01,"tex_zoom":0.81948,"g":1,"b":1,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"vx = 0","frame_eqs_eel":"sample = instance/(num_inst-1);\\n\\nx1 = 0.5;\\ny1 = 0.5 + (q3-0.5)*0.01;\\ny2 = 0.5;\\nx = x1 + (sample-0.5)*0.2;\\ny = y2*sample + y1*(1-sample);"},{"baseVals":{"sides":100,"additive":1,"rad":0.0999,"tex_zoom":0.73458,"r":0,"g":1,"a":0,"border_a":1,"enabled":0},"init_eqs_eel":"vx = 0","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":3,"additive":1,"num_inst":400,"rad":0.16283,"tex_zoom":0.73458,"g":1,"b":1,"g2":0,"border_a":0},"init_eqs_eel":"i3 = 0;\\ni4 = 0;","frame_eqs_eel":"i3 = if(equal(instance,0),0,i3);\\ni4 = if(equal(instance,0),0,i4);\\nppo = 8;\\nindex = i4*q32;\\nsample = i3 % ppo;\\n\\nsize = gmegabuf(index+4)*40;\\n\\nx = gmegabuf(index);\\ny = gmegabuf(index+1);\\n\\nang = gmegabuf(index+9);\\nrad = size*0.05;\\n\\nr = gmegabuf(index+5);\\ng = gmegabuf(index+6);\\nb = gmegabuf(index+7);\\n\\n\\nsample = sample/ppo;\\nbending = gmegabuf(index + 12)*5 + gmegabuf(index + 10)*5;\\ndir = -ang + (sample-0.4)*bending;\\n\\n ang =  asin(1)*1.5 - dir + bending*0.05;\\n\\nx = x + ((sample-0.3)*0.06*cos(dir)*size + sin(dir)*size*bending*0.01);\\ny = y + ((sample-0.3)*0.06*sin(dir)*size - cos(dir)*size*bending*0.01);\\n\\nx = 0.5 + (x-0.5)/q2;\\n\\nrad = rad*1.5 - sample*0.05*size;\\n\\ni3 = i3 + 1;\\ni4 = if( equal(i3%ppo,0), i4 +1, i4);"}],"waves":[{"baseVals":{"samples":452,"additive":1,"scaling":2.44415,"smoothing":0,"a":0.15,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t1 = 0;\\nt2 = 0;","point_eqs_eel":"ppo = 9;\\nindex = t2*q32;\\nsample = t1 % ppo;\\n\\nnindex = gmegabuf(index + q30); // the next neighbor\'s index\\nnnindex = gmegabuf(index + q30+1); // the next neighbor\'s index\\nnnnindex = gmegabuf(index + q30+2); // the next neighbor\'s index\\n\\nx = gmegabuf(index);\\ny = gmegabuf(index+1);\\nr = 0.5 + gmegabuf(index+5)*0.5;\\ng = 0.5 + gmegabuf(index+6)*0.5;\\nb = 0.5 + gmegabuf(index+7)*0.5;\\n\\nnx = gmegabuf(nindex);\\nny = gmegabuf(nindex+1);\\nnnx = gmegabuf(nnindex);\\nnny = gmegabuf(nnindex+1);\\nnnnx = gmegabuf(nnnindex);\\nnnny = gmegabuf(nnnindex+1);\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q2;\\nnx = 0.5 + (nx-0.5)/q2;\\nny = 0.5 + (ny-0.5)/q2;\\nnnx = 0.5 + (nnx-0.5)/q2;\\nnny = 0.5 + (nny-0.5)/q2;\\nnnnx = 0.5 + (nnnx-0.5)/q2;\\nnnny = 0.5 + (nnny-0.5)/q2;\\n\\nx = if( equal(sample,2), nx, x);\\ny = if( equal(sample,2), ny, y);\\nx = if( equal(sample,4), nnx, x);\\ny = if( equal(sample,4), nny, y);\\nx = if( equal(sample,6), nnnx, x);\\ny = if( equal(sample,6), nnny, y);\\n\\na = above(sample,1)*below(sample,ppo-1)*a;\\n\\nt1 = t1 + 1;\\nt2 = if( equal(t1%ppo,0), t2 +1, t2);"},{"baseVals":{"scaling":7.7518,"smoothing":0,"a":0.21,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t8 = 1;\\n\\nt1 = 0.5;\\nt2 = 0.9;","point_eqs_eel":"d = d*0.85 + (value1)*1;\\n\\nx = 0.5 + d*sample*(1-sample);\\ny = 0.9 - sample*0.8;"},{"baseVals":{"samples":280,"additive":1,"scaling":5.92556,"smoothing":0,"a":0.5,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1 = 0;\\nt2 = 0;\\n\\n","point_eqs_eel":"// q32 number of attributes\\n// q31 number of objects\\n\\nppo = 7; // number of points used for each object\\nindex = t2*q32; // object\'s index\\n\\nx = 0.5 +(gmegabuf(index)-0.5)/q2;\\ny = 0.5 + (gmegabuf(index+1)-0.5)/q2;\\n\\n// collecting pairs of index and distance to the current object in a local buffer\\ni = 0;\\nj = 0;\\nloop(q31,\\n     d = sqrt( sqr(gmegabuf(index)-gmegabuf(i)) + sqr(gmegabuf(index+1)-gmegabuf(i+1)));\\n     d = if( equal(d,0), 1, d);\\n     megabuf(j)   = i; // store index/distance pairs\\n     megabuf(j+1) = d;\\n     j = j+2;\\n     i = i+q32;\\n    );\\n\\n// sort that buffer, but only 5 cycles for the 5 nearest objects\\ni = 0;\\nloop( 5,\\n      j = i;\\n      smallestfind = 100;\\n      findindex = 0;\\n      loop( q31-j,\\n            distance =megabuf(j*2+1);\\n            smaller = above( smallestfind, distance);\\n            smallestfind = if(smaller, distance, smallestfind);\\n            findindex = if( smaller, j*2, findindex);\\n            j = j + 1;\\n          );\\n\\n      // now that the nearest object was found, swap it to the buffer\'s top\\n\\n      j = megabuf(i);\\n      d = megabuf(i+1);\\n\\n      megabuf(i)   = megabuf(findindex);\\n      megabuf(i+1) = megabuf(findindex+1);\\n      megabuf(findindex)   = j;\\n      megabuf(findindex+1) = d;\\n\\n      i = i+1;\\n    );\\n\\n\\nindex2 = (t1)%ppo;\\ni = megabuf(index2-2);\\nxx = 0.5 + (gmegabuf(i)-0.5)/q2;\\nyy = 0.5 + (gmegabuf(i+1)-0.5)/q2;\\nw = asin(1)*index2/4;\\n//xx = x + sin(w)*0.1;\\n//yy = y + cos(w)*0.1;\\nx = if( equal(index2%2,0), x, xx);\\ny = if( equal(index2%2,0), y, yy);\\n\\n\\na = below(index2,ppo-1)*above(index2,1)*a;\\nr = 0.5 + gmegabuf(index + 5)*0.5;\\ng = 0.5 + gmegabuf(index + 6)*0.5;\\nb = 0.5 + gmegabuf(index + 7)*0.5;\\n\\n\\nt2 = t2 + equal(t1%ppo,ppo-1);\\nt1 = t1 + 1;\\n\\n//a = above(t1,128);"},{"baseVals":{"samples":15,"thick":1,"additive":1,"scaling":5.92556,"smoothing":0,"a":0.4,"enabled":0},"init_eqs_eel":"t2 = 0","frame_eqs_eel":"t1 = 0;\\nt2 = 0;\\nt3 = 0;\\nt4 = 0.5;","point_eqs_eel":"ppo = 5;\\n\\nindex = t2*q32;\\nneighbor = 1;\\nneighbor = gmegabuf(index+10+neighbor);\\nx = 0.5 + (gmegabuf(index)-0.5)/q2;\\ny = 0.5 + (gmegabuf(index+1)-0.5)/q2;\\nxx = 0.5 + ( gmegabuf(neighbor) - 0.5)/q2;\\nyy = 0.5 + ( gmegabuf(neighbor+1) - 0.5)/q2;\\n\\nx = if( equal(t1 % 2, 0), x, xx);\\ny = if( equal(t1 % 2, 0), y, yx);\\n\\n\\nt2 = t2 + equal(t1,ppo);\\nt1 = if(above(t1,ppo),t1-ppo,t1) + 1;\\n"}],"init_eqs_eel":"// clear buffer\\ni = 0; loop(1024*1024, gmegabuf(i) = 0; i = i+1;);\\n\\ncount = 50;\\nattributes = 32;\\nnListStart = 24; // starting index of neighbor list\\n\\nminradius = 0.01;\\nmaxradius = 0.0333;\\nv = 0.0;\\n\\n// randomize initial coordinates\\nindex = 0;\\nloop(count,\\n     gmegabuf(index*attributes) = rand(1000)/1000;\\n     gmegabuf(index*attributes+1) = rand(1000)/1000;\\n     gmegabuf(index*attributes+2) = v*(rand(1000)/1000-0.5);\\n     gmegabuf(index*attributes+3) = v*(rand(1000)/1000-0.5);\\n     gmegabuf(index*attributes+4) = minradius + (maxradius-minradius)*(index+1)/count;\\n     gmegabuf(index*attributes+5) = rand(1000)/1000;\\n     gmegabuf(index*attributes+6) = rand(1000)/1000;\\n     gmegabuf(index*attributes+7) = rand(1000)/1000;\\n     gmegabuf(index*attributes+8) = pow(gmegabuf(index*attributes+4),3) ;\\n     gmegabuf(index*attributes+9) = 4*asin(1)*rand(1000)/1000;\\n     gmegabuf(index*attributes+10) = 0;\\n     gmegabuf(index*attributes+13) = index/count;\\n     index = index+1;\\n    );\\n\\nq30 = nListStart;\\nq31 = count;\\nq32 = attributes;\\n\\n// 0, x\\n// 1, y\\n// 2, vx\\n// 3, vy\\n// 4, radius\\n// 5, red\\n// 6, green\\n// 7, blue\\n// 8, mass\\n// 9, angle\\n// 10, rotation\\n// 11, bend force\\n// 12, bending\\n// 13, sample","frame_eqs_eel":"random = rand(1000)/1000;\\n\\ndt = 1/fps;\\nbend_force = bend_force*0.92 - 4*bend*dt + 2*(random-0.5)*dt;\\n\\nbend = bend + 60*bend_force*dt;\\nq3 = bend*4;\\n\\nmonitor = bend;\\n\\nwarp = 0;\\nzoom = 1;\\n\\ngravity = 0.0015*dt*0;\\ndampening = 0.;\\nfriction = 2048*dt;\\nshock = 0.002;\\npi2 = asin(1);\\n\\nnn = 3; // number of nearest neighbors to search, reduce if not needed\\n        // provide enough attributes, otherwise the next object\'s coordinate will be overwritten\\n        // collision detection is based on nearest neighbors, so keep it at least at 1.\\n\\ncheck = 2; // how many neighbors will be checked for a possible collision. may not be above nn.\\n           // raise to avoid odd behavior in clusters of touching objects.\\n\\nbouncefactor = 0.1;\\nrotatefactor = 0.0; // relation between angular and translative momentum, when object hits a border. this is an empirical value for a convincing impression\\n\\n\\n\\nh = (aspecty-1)*0.5; w = (aspectx-1)*0.5;\\nindex = 0; index2 = 0;\\nloop(count,\\n\\n     random = rand(1000)/1000;\\n     sample = gmegabuf(index+13);\\n\\n     // bend force\\n     gmegabuf(index + 11) = gmegabuf(index + 11)*0.92 - 4*gmegabuf(index+12)*dt + 2*(random-0.5)*dt*(bass*0.4*sample + treb*0.5*(1-sample));\\n\\n     // bend\\n     gmegabuf(index + 12) += 60*gmegabuf(index + 11)*dt;\\n\\n     v = sqrt( sqr( gmegabuf(index + 2) ) + sqr( gmegabuf(index + 3) ) );\\n\\n     // apply friction\\n     fric = max(0,1 - sqr(v*friction) - v*2);\\n     gmegabuf(index + 2) *= fric;\\n     gmegabuf(index + 3) *= fric;\\n\\n     // apply direction change\\n     gmegabuf(index + 10) = gmegabuf(index + 10)*fric +  v*gmegabuf(index +12)*0;\\n\\n     // apply acceleration force\\n     acceleration = random*0.000 + abs(gmegabuf(index+11))*0.003;\\n     direction = gmegabuf(index + 9) - pi2;\\n     gmegabuf(index + 2) += sin(direction)*acceleration;\\n     gmegabuf(index + 3) += cos(direction)*acceleration;\\n\\n     // adding velocity vectors\\n     gmegabuf(index) = gmegabuf(index) + gmegabuf(index+2)*60*dt;\\n     gmegabuf(index+1) = gmegabuf(index+1) + gmegabuf(index+3)*60*dt;\\n     gmegabuf(index+9) = gmegabuf(index+9) + gmegabuf(index+10)*0.5;\\n\\n     // applying gravity\\n     gmegabuf(index+3) = gmegabuf(index+3) - gravity;\\n\\n     vr = sin(gmegabuf(index+10))*gmegabuf(index+4); // rotation speed at the surface\\n\\n     // bounce off ceiling\\n     bounce = above( gmegabuf(index+1), 1 - gmegabuf(index+4) + w);\\n     gmegabuf(index+2) = if( bounce, gmegabuf(index+2) + (vr+gmegabuf(index+2))*rotatefactor, gmegabuf(index+2));\\n     gmegabuf(index+3) = if( bounce, -abs(gmegabuf(index+3))*dampening - shock, gmegabuf(index+3));\\n     vr = if( bounce, vr - (gmegabuf(index+2) + vr)*(1-rotatefactor), vr);\\n\\n     // bounce off floor\\n     bounce = below( gmegabuf(index+1), gmegabuf(index+4) - w);\\n     gmegabuf(index+2) = if( bounce, gmegabuf(index+2) + (vr-gmegabuf(index+2))*rotatefactor, gmegabuf(index+2));\\n     gmegabuf(index+3) = if( bounce, abs(gmegabuf(index+3))*dampening + shock, gmegabuf(index+3));\\n     vr = if( bounce, vr + (gmegabuf(index+2) - vr)*(1-rotatefactor), vr);\\n\\n     // bounce off right border\\n     bounce = above( gmegabuf(index), 1 - gmegabuf(index+4) + h);\\n     gmegabuf(index+2) = if( bounce, -abs(gmegabuf(index+2))*dampening - shock, gmegabuf(index+2));\\n     gmegabuf(index+3) = if( bounce, gmegabuf(index+3) + (vr-gmegabuf(index+3))*rotatefactor, gmegabuf(index+3));\\n     vr = if( bounce, vr + (gmegabuf(index+3) - vr)*(1-rotatefactor), vr);\\n\\n     // bounce off left border\\n     bounce = below( gmegabuf(index), gmegabuf(index+4) - h);\\n     gmegabuf(index+2) = if( bounce, abs(gmegabuf(index+2))*dampening + shock, gmegabuf(index+2));\\n     gmegabuf(index+3) = if( bounce, gmegabuf(index+3) - (vr+gmegabuf(index+3))*rotatefactor, gmegabuf(index+3));\\n     vr = if( bounce, vr - (gmegabuf(index+3) + vr)*(1-rotatefactor), vr);\\n\\n     gmegabuf(index+10) = asin(vr/gmegabuf(index+4));\\n\\n     i = 0; j = 0; // collecting pairs of index and distance to the current object in a local buffer\\n     loop( count,\\n           d = sqrt( sqr(gmegabuf(index)-gmegabuf(i)) + sqr(gmegabuf(index+1)-gmegabuf(i+1)));\\n           d = if( equal(d,0), 10, d); // leave out comparison with itself (where d == 0, set d to a high value)\\n           d = d - (gmegabuf(index+4)+gmegabuf(i+4))*0.5; // subtract radius (surface to surface distance)\\n           megabuf(j)   = i; // store index/distance pairs\\n           megabuf(j+1) = d;\\n           j = j+2;\\n           i = i+attributes; );\\n     i = 0; // sort that buffer, but only as many cycles as needed for the _nn_ nearest neighbors\\n     loop( nn,\\n           j = i; smallestfind = 10; findindex = -1;\\n           loop( count-j,\\n                 distance =megabuf(j*2+1);\\n                 smaller = above( smallestfind, distance);\\n                 smallestfind = if(smaller, distance, smallestfind);\\n                 findindex = if( smaller, j*2, findindex);\\n                 j = j + 1; );\\n           j = megabuf(i*2); d = megabuf(i*2+1);\\n           megabuf(i*2)   = megabuf(findindex);\\n           megabuf(i*2+1) = megabuf(findindex+1);\\n           megabuf(findindex)   = j;\\n           megabuf(findindex+1) = d;\\n           i = i+1;\\n         );\\n     i = 0; // storing the indexes of the nearest neighbors in the list\\n     loop( nn,\\n           gmegabuf(index + nListStart + i) = megabuf(i*2);\\n           i = i +1;\\n         );\\n     i = 0; // collision detection and impulse transmission below\\n     loop( check,\\n           index2 = megabuf(i);\\n           hit = below( sqrt( sqr( gmegabuf(index) - gmegabuf(index2)) +\\n                              sqr( gmegabuf(index+1) - gmegabuf(index2+1))),\\n                        gmegabuf(index + 4) + gmegabuf(index2 + 4)\\n                      )\\n                 *\\n                 above( sqrt( sqr( gmegabuf(index)   - gmegabuf(index2))+\\n                        sqr( gmegabuf(index+1) - gmegabuf(index2+1))),\\n                        sqrt( sqr( gmegabuf(index+0) - gmegabuf(index2+0)+\\n                                   gmegabuf(index+2) - gmegabuf(index2+2))+\\n                              sqr( gmegabuf(index+1) - gmegabuf(index2+1)+\\n                                   gmegabuf(index+3) - gmegabuf(index2+3)) ) );\\n           ref_ang = atan2( gmegabuf(index2)-gmegabuf(index), // calculating the angle of the common tangent\\n                            gmegabuf(index2 + 1)-gmegabuf(index + 1)) + pi2;\\n           v1 = sqrt(sqr( gmegabuf(index + 2)) + sqr( gmegabuf(index + 3))); // velocity of object1\\n           v2 = sqrt(sqr( gmegabuf(index2 + 2)) + sqr( gmegabuf(index2 + 3)));  // velocity of object2\\n           w1 = atan2( gmegabuf(index + 2), gmegabuf(index + 3));   // object1 motion angle\\n           w2 = atan2( gmegabuf(index2 + 2), gmegabuf(index2 + 3)); // object2 motion angle\\n           vr2 = sin(gmegabuf(index2 + 10))*gmegabuf(index2+4); // the other object\'s surface velocity\\n           m1 = gmegabuf(index + 8); m2 = gmegabuf(index2 + 8);\\n           vv1 = ((m1-m2)*v1 + 2*m2*v2)/(m1+m2); vv2 = ((m2-m1)*v2 + 2*m1*v1)/(m1+m2);\\n           vrr = ((m1-m2)*vr + 2*m2*vr2)/(m1+m2); vrr2 = ((m2-m1)*vr2 + 2*m1*vr)/(m1+m2);\\n\\n           gmegabuf( index + 2) = if( hit, sin(ref_ang)*v1*cos(w1-ref_ang) + ((vr-vr2)-sin(ref_ang)*v1*cos(w1-ref_ang))*rotatefactor\\n                                         + cos(ref_ang)*vv1*sin(w2-ref_ang),\\n                                                  gmegabuf( index + 2) );\\n\\n           gmegabuf( index + 3) = if( hit, cos(ref_ang)*v1*cos(w1-ref_ang) + ((vr-vr2)-cos(ref_ang)*v1*cos(w1-ref_ang))*rotatefactor\\n                                         - sin(ref_ang)*vv1*sin(w2-ref_ang),\\n                                                 gmegabuf( index + 3) );\\n\\n           gmegabuf( index2 + 2) = if( hit, sin(ref_ang)*v2*cos(w2-ref_ang) + ((vr2-vr)-sin(ref_ang)*v2*cos(w2-ref_ang))*rotatefactor\\n                                          + cos(ref_ang)*vv2*sin(w1-ref_ang),\\n                                                  gmegabuf( index2 + 2) );\\n\\n           gmegabuf( index2 + 3) = if( hit, cos(ref_ang)*v2*cos(w2-ref_ang) + ((vr2-vr)-cos(ref_ang)*v2*cos(w2-ref_ang))*rotatefactor\\n                                          - sin(ref_ang)*vv2*sin(w1-ref_ang),\\n                                                  gmegabuf( index2 + 3) );\\n\\n           vr = if( hit, vrr + (cos(w1-ref_ang)*(v1-v2)-vrr)*(1-rotatefactor) , vr);\\n           gmegabuf( index + 10) = asin( vr / gmegabuf(index+4) );\\n\\n           vr2 = if( hit, vrr2 + (cos(w2-ref_ang)*(v2-v1)-vrr2)*(1-rotatefactor) , vr2);\\n           gmegabuf( index2 + 10) = asin( vr2 / gmegabuf(index2+4) );\\n\\n           i=i+2;\\n         );\\n     index = index+attributes;\\n    );\\n\\n\\nq1 = aspectx;\\nq2 = aspecty;","pixel_eqs_eel":"","warp":"vec2 pix;\\nfloat xlat_mutablebuf2;\\n shader_body { \\n  pix = (texsize.zw * 2.0);\\n  vec3 res_1;\\n  res_1 = (texture (sampler_main, (uv + (pix * vec2(1.0, 0.0)))).xyz - 0.5);\\n  res_1 = ((res_1 * res_1) * sign(res_1));\\n  vec3 res_2;\\n  res_2 = (texture (sampler_main, (uv + (pix * vec2(0.0, 1.0)))).xyz - 0.5);\\n  res_2 = ((res_2 * res_2) * sign(res_2));\\n  vec3 res_3;\\n  res_3 = (texture (sampler_main, (uv + (pix * vec2(-1.0, 0.0)))).xyz - 0.5);\\n  res_3 = ((res_3 * res_3) * sign(res_3));\\n  vec3 res_4;\\n  res_4 = (texture (sampler_main, (uv + (pix * vec2(0.0, -1.0)))).xyz - 0.5);\\n  res_4 = ((res_4 * res_4) * sign(res_4));\\n  vec3 res_5;\\n  res_5 = (texture (sampler_main, (uv + (pix * vec2(2.0, 0.0)))).xyz - 0.5);\\n  res_5 = ((res_5 * res_5) * sign(res_5));\\n  vec3 res_6;\\n  res_6 = (texture (sampler_main, (uv + (pix * vec2(0.0, 2.0)))).xyz - 0.5);\\n  res_6 = ((res_6 * res_6) * sign(res_6));\\n  vec3 res_7;\\n  res_7 = (texture (sampler_main, (uv + (pix * vec2(-2.0, 0.0)))).xyz - 0.5);\\n  res_7 = ((res_7 * res_7) * sign(res_7));\\n  vec3 res_8;\\n  res_8 = (texture (sampler_main, (uv + (pix * vec2(0.0, -2.0)))).xyz - 0.5);\\n  res_8 = ((res_8 * res_8) * sign(res_8));\\n  vec3 res_9;\\n  res_9 = (texture (sampler_main, uv).xyz - 0.5);\\n  res_9 = ((res_9 * res_9) * sign(res_9));\\n  xlat_mutablebuf2 = (((\\n    ((((\\n      (res_1.y + res_2.y)\\n     + \\n      (res_3.y + res_4.y)\\n    ) + (res_5.y / 2.0)) + (res_6.y / 2.0)) + (res_7.y / 2.0))\\n   + \\n    (res_8.y / 2.0)\\n  ) / 3.0) - res_9.x);\\n  xlat_mutablebuf2 = (xlat_mutablebuf2 * 0.98);\\n  vec3 tmpvar_10;\\n  tmpvar_10.z = 0.0;\\n  tmpvar_10.x = texture (sampler_pw_main, uv).y;\\n  tmpvar_10.y = ((sign(xlat_mutablebuf2) * sqrt(\\n    abs(xlat_mutablebuf2)\\n  )) + 0.5);\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 1.0;\\n  tmpvar_11.xyz = tmpvar_10;\\n  ret = tmpvar_11.xyz;\\n }","comp":"uniform sampler2D sampler_smalltiled_lizard_scales;\\nvec2 pix;\\nvec2 xlat_mutabledz;\\nvec2 xlat_mutabledz1;\\nvec2 xlat_mutableuv1;\\n shader_body { \\n  pix = (texsize.zw * 2.0);\\n  vec2 uv_1;\\n  vec2 uvi_2;\\n  uvi_2 = (uv + (pix * vec2(1.0, 0.0)));\\n  float res_3;\\n  res_3 = (mix ((\\n    (texture (sampler_blur1, uvi_2).xyz * scale1)\\n   + bias1).x, (\\n    (texture (sampler_blur1, uvi_2).xyz * scale1)\\n   + bias1).y, 0.5) - 0.5);\\n  res_3 = ((res_3 * res_3) * sign(res_3));\\n  vec2 uvi_4;\\n  uvi_4 = (uv + (pix * vec2(-1.0, 0.0)));\\n  float res_5;\\n  res_5 = (mix ((\\n    (texture (sampler_blur1, uvi_4).xyz * scale1)\\n   + bias1).x, (\\n    (texture (sampler_blur1, uvi_4).xyz * scale1)\\n   + bias1).y, 0.5) - 0.5);\\n  res_5 = ((res_5 * res_5) * sign(res_5));\\n  xlat_mutabledz1.x = (res_3 - res_5);\\n  vec2 uvi_6;\\n  uvi_6 = (uv + (pix * vec2(0.0, 1.0)));\\n  float res_7;\\n  res_7 = (mix ((\\n    (texture (sampler_blur1, uvi_6).xyz * scale1)\\n   + bias1).x, (\\n    (texture (sampler_blur1, uvi_6).xyz * scale1)\\n   + bias1).y, 0.5) - 0.5);\\n  res_7 = ((res_7 * res_7) * sign(res_7));\\n  vec2 uvi_8;\\n  uvi_8 = (uv + (pix * vec2(0.0, -1.0)));\\n  float res_9;\\n  res_9 = (mix ((\\n    (texture (sampler_blur1, uvi_8).xyz * scale1)\\n   + bias1).x, (\\n    (texture (sampler_blur1, uvi_8).xyz * scale1)\\n   + bias1).y, 0.5) - 0.5);\\n  res_9 = ((res_9 * res_9) * sign(res_9));\\n  xlat_mutabledz1.y = (res_7 - res_9);\\n  float res_10;\\n  vec4 tmpvar_11;\\n  tmpvar_11 = texture (sampler_blur1, uv);\\n  res_10 = (mix ((\\n    (tmpvar_11.xyz * scale1)\\n   + bias1).x, (\\n    (tmpvar_11.xyz * scale1)\\n   + bias1).y, 0.5) - 0.5);\\n  res_10 = ((res_10 * res_10) * sign(res_10));\\n  uv_1 = (uv + ((xlat_mutabledz1 * \\n    clamp ((1.0 - res_10), 0.0, 1.0)\\n  ) * 0.5));\\n  xlat_mutabledz.x = (texture (sampler_main, (uv_1 + (pix * vec2(1.0, 0.0)))).z - texture (sampler_main, (uv_1 + (pix * vec2(-1.0, 0.0)))).z);\\n  xlat_mutabledz.y = (texture (sampler_main, (uv_1 + (pix * vec2(0.0, 1.0)))).z - texture (sampler_main, (uv_1 + (pix * vec2(0.0, -1.0)))).z);\\n  xlat_mutableuv1 = ((uv_1 - 0.1) + (xlat_mutabledz1 * 8.0));\\n  vec2 x_12;\\n  x_12 = (xlat_mutableuv1 + (xlat_mutabledz * 0.6));\\n  vec2 x_13;\\n  x_13 = (xlat_mutableuv1 + xlat_mutabledz);\\n  vec2 x_14;\\n  x_14 = (xlat_mutableuv1 + (xlat_mutabledz * 2.6));\\n  vec3 tmpvar_15;\\n  tmpvar_15.x = sqrt(dot (x_12, x_12));\\n  tmpvar_15.y = sqrt(dot (x_13, x_13));\\n  tmpvar_15.z = sqrt(dot (x_14, x_14));\\n  vec4 tmpvar_16;\\n  tmpvar_16.w = 1.0;\\n  tmpvar_16.xyz = ((texture (sampler_smalltiled_lizard_scales, (\\n    (uv_1 + xlat_mutabledz1)\\n   - \\n    (time * 0.02)\\n  )) * 0.5).xyz + ((\\n    (0.1 / tmpvar_15)\\n   - \\n    (texture (sampler_main, uv).z * 0.2)\\n  ) - (texture (sampler_main, \\n    (0.8 - uv_1)\\n  ).z * 0.2)));\\n  ret = tmpvar_16.xyz;\\n }"}')},139:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":4,"gammaadj":1.98,"decay":0.5,"echo_zoom":0.952,"echo_alpha":0.5,"echo_orient":3,"wave_mode":4,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.527,"wave_smoothing":0.45,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.8,"wave_g":0.49,"ob_size":0.015,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"sides":33,"additive":1,"num_inst":81,"rad":0.04896,"tex_ang":1.00531,"tex_zoom":1.53117,"g":1,"b":1,"a":0,"g2":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"\\ntrel = time/8;\\nk1 = instance/num_inst;\\nk2 = k1 + trel - int(k1+trel);\\n\\ny0 = k2+.01 ;\\n\\nxwidth = .1*(cos(6*k1)+3); //breite\\nxofs = .1*cos(k2*6+trel)*y0;\\nx = .5 + .4*xwidth*(.2+y0)*sin(k1*1383*xwidth) + xofs;\\n//xwidth in der letzten Klammer : Test\\n\\ny = y0;\\n\\nbright = 1-sqr(y0); \\na = max(bright,0); a2 = 0;\\nrad = .4*y0+.1 - .0*sin(k1*954);\\n\\nr = .0; g = 0; b = .0;\\nr2 = 0; g2 = 0; b2= .48; //## rot mit ampl. mod !\\nadditive = 1; ///sonst andere farben im warp-s gestoert"},{"baseVals":{"enabled":1,"sides":12,"additive":1,"num_inst":571,"x":0.26,"y":0.2,"rad":0.39317,"tex_zoom":0.9355,"g2":0,"a2":0.2,"border_g":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"mov1 = q1;\\nRotMode = q3;\\nburst = q10;\\ncopies = q14;\\ncopy = (instance%copies)/copies;\\nk1 = int(instance/copies)*copies/num_inst;\\nk1 = int(k1*burst)/burst+k1/burst;\\n\\nmov1 = mov1 + k1 -copy*q2;//dt\\nmov1 = mov1 - int(mov1);\\n\\nRotMode = RotMode - copy*q4;\\nrota = mov1 * RotMode*q5*2 ;\\nmov1 = mov1*(1-RotMode) + RotMode*(.5+.025*k1);\\n\\nmov1 = pow(mov1,.9); //Schneller bei t=0;\\n\\nTht = sin(k1*k1*123.2)*(.2 + RotMode*.0);\\nPhi = k1*1613.3+rota;\\nv0 = (1.0 + .3*cos(k1*13234.7))*q5;\\n\\nz0 = q18/q5; //proximity\\n\\nt0 = .4;\\nspur = (mov1-t0) * above(mov1-t0,0)*q15 ;\\npy = spur*sin(copy*6.28);\\npx = spur*cos(copy*6.28);\\n\\nfov = z0*2; //kein vol hier, sonst y-skal daneben\\nox = (mov1-q19)*v0*sin(Tht) * cos(Phi); //### -.5 bis .5\\noy = mov1*v0*(1-mov1)*cos(2*Tht) -.25;\\noz = mov1*v0*sin(Tht)*sin(Phi); \\n\\nox = ox +  (k1-.5)*q17 +px; \\noy = oy -py;\\noz = oz +py*3;\\n\\n//flim = below(((ox+oy+oz)*800)%32,q13-.1); //ctrl\\n//flim = q13/(((ox+oy+oz)*600)%16+1); //ctrl\\nrad = .025*z0/(oz+z0)*(1-mov1*.5);\\n\\nx = .5 + fov*ox/(oz+z0);\\ny = .5 + fov*oy/(oz+z0);\\nvis = above(mov1,q11)*below(mov1,q12)*above(oz,-z0);\\n\\na = vis*.7/sqrt(copies)*(1+above(spur,0));\\na2 = 0.;\\ng = flim;"},{"baseVals":{"enabled":1,"sides":13,"additive":1,"num_inst":212,"x":0.65,"y":0.38,"rad":1.26467,"tex_zoom":0.73678,"g":1,"a":0.3,"r2":1,"g2":0,"border_r":0.5,"border_g":0.5,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"//q25 = time/4;\\n//trel = 2* (q25/2-int(q25/2));\\ntrel = q25;\\ncopies = 1;\\ncopy = (instance%copies)/copies;\\nk1 = int(instance/copies)*copies/num_inst;\\nk2 = k1 + .5;\\ntrel = trel ;\\nt0 = .5; //do not change\\n\\nphase = above(trel,t0);\\nmov1 = bnot(phase)* (t0-trel + .01*k1);\\nmov2 = phase * (trel-t0); //####\\n//mov2 = pow(mov2,.8);\\nstray = 1.2-phase;\\n\\nTht = 3.14*sin(1234.2*k1+time*bnot(phase)) * stray ;\\nPhi = 3245.1*k1;\\n\\nsize0 = .02;\\nox = mov1*q27 + sin(Tht)*cos(phi)* (size0+mov2*(2+k1));\\noy = mov1*12 + cos(Tht)* (size0+4*mov2*k2)*(1-mov2*k2)/2;\\noz = mov1*8 + sin(Tht)*sin(phi)* (size0+mov2*2*(2+k1));\\n\\nz0 = 1;\\nrad = .03 / (oz+z0)/(1+trel*rand(100)/50);\\n\\nx = .5 + ox/(oz+z0);\\ny = q29+.2+ oy/(oz+z0);\\n\\na = .1*bnot(phase)+phase*max(0,1-mov2*0)*above(oz+z0,0)*.8; "},{"baseVals":{"sides":14,"additive":1,"thickoutline":1,"textured":1,"num_inst":31,"x":0.75,"y":0.6,"rad":0.01,"tex_zoom":0.3357,"g":1,"a":0.5,"r2":1,"g2":0,"border_r":0.2,"border_g":0.7,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"samples":75,"sep":20,"usedots":1,"additive":1,"scaling":7.858,"smoothing":0.1,"g":0,"b":0,"a":0.2,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"usedots":1,"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"r":0,"g":0.2,"b":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"t0a = time; t0 = time+.5;\\nspb_ = .5; ;\\nvolb = .5; volx = .5;\\nvol_= 1; index = 0; mov1 = 0;","frame_eqs_eel":"dec_med = pow (0.85, 30/fps); dec_slow = pow (0.95, 30/fps);\\nvol = (bass+med+treb)/1.5; vol_ = vol_*dec_slow + (1-dec_slow)*vol;\\n\\nis_beat = above(vol, .1+vol_+2*peak) * above (time, t0+spb_*.45);\\nt0a  = if(is_beat,t0,t0a); t0 = if(is_beat,time,t0);\\npeak = if(is_beat,vol,peak*dec_med);\\nindex = (index + is_beat) %128;\\nspb_ = if(is_beat,spb_ *.9 +.1*min(t0-t0a + .01,2), spb_);\\n\\nq20 = vol_;\\nq21 = above(vol,2.7*vol_);\\nq22 = max(0,peak-.0)+.01;\\nhpeak = hpeak*dec_med + (1-dec_med)*q21;\\nq23 = hpeak * (1+rand(8));\\nq24 = is_beat;\\nvolb = bnot(q24)*volb + q24*vol_; //# vol oder vol_ ?\\nvolx = volx + .2/fps*max(min(volb-volx,1),-1)*bnot(RotMode);\\n\\n// *********** CENTRAL TIMELINE **************\\nrotmode = max(min(sin(mov1/2.4-1.5)*4-3,1),0); //####\\nstop = if(bnot(stop),bnot(index%24),below(lo,1))*bnot(rotmode);\\n//tmp = status%16;\\nspread = if (below(lo,1),spread,rand(2)*rand(12)/20);\\ncopies = if (below(lo,1),copies,3+rand(2)*rand(8));\\nspur  = if (below(lo,1),spur, above(copies,5)*.1);\\nbursts = if (below(lo,1),bursts,1+rand(2)*rand(6));\\nxbase = if (below(lo,1),xbase,rand(2)*(rand(10)/10-.5));\\nvs0 = if (is_beat * bnot(index%77),rand(5)/4-.7,vs0);\\nvshift =  vshift + 3/fps*max(min((vs0-vshift),.04),-.04);\\n//*********** SMOOTH MOVEMENTS q1 - q8 for SHAPE2 ********\\n//FONTAENE\\nspeed = .15/fps/spb_;\\ntmp = mov1; mov1 = mov1+speed; q2 = mov1-tmp; q1 = mov1;\\n\\n//ROTATION\\n//evtl q5 mit rotmode fixieren statt volx blockieren\\ntmp = RotMode; q3 = RotMode; q4 = RotMode-tmp;\\n\\n//VOLUME\\ntmp = volx; q5 = volx; q6 = q5-tmp; //nicht aendern waehrend Rotation\\n\\n//********* SWITCHES SHAPE2 *************\\nq10 = bursts; //num bursts\\nlo = if(stop,lo+speed,0); //ident. wie bei mov 1!!\\nhi = if(above(lo,1),0,hi+speed); //ident. wie bei mov 1!!\\nq11 = lo; //fade out\\nq12 = hi;\\nq13 = sqrt(q22)*0; //blink effect, ca. 0..16\\nq14 = copies; //copies - noch implementieren\\nq15 = spur*(1-RotMode); //Ampl. multiple spurs; nur mit >8 copies !\\nq16 = 0; //reserved for spur start\\nq17 = spread * (1-rotmode); //hor. spread, max. ca. 0.4\\nq18 = 1/min(max(sin(mov1/2)*10,1),4); //proximity - smaller values: closer;\\nq19 = xbase;\\n//********* CONTROL PARAMETERS SHAPE3 *************\\nxtime = if (stop*q21*above(xtime,2),0,xtime+.2/fps); //impact\\nq25 = xtime;\\nq26 = if (below(xtime,.55),pow(32,-sqr(xtime-.55)*512),pow(2,-sqr(xtime-.55)*3));\\nq27 = sin(time/29)*4; //x-direction impact\\n\\n//********* GENERAL CONTROL PARAMETERS ***************\\nwind = wind+.5/fps * (volx-1.5);\\nq28 = wind;//wind direction - warp shader\\nq29 = vshift ;// in warp+comp+impact shape\\nq30 = max(sin(mov1/2.2)*sin(time/7),0)+q26;// front cloud dens. - comp.\\nq31 = q5*2-2 + sin(time/17); //back cloud lighting - comp shader\\nq32 = 3+2*sin(time/27); //back cloud density - comp shader\\n\\nmonitor = vshift;;","pixel_eqs_eel":"zoom = 1;\\ndy = -.00;\\nwarp =.0;","warp":"mat2 ofs;\\nfloat xlat_mutablegreen;\\nfloat xlat_mutablek1;\\nfloat xlat_mutablered;\\nvec2 xlat_mutableuv2;\\nfloat xlat_mutablewave;\\nfloat xlat_mutablezv;\\n shader_body { \\n  mat2 tmpvar_1;\\n  tmpvar_1[uint(0)].x = texsize.z;\\n  tmpvar_1[uint(0)].y = 0.0;\\n  tmpvar_1[1u].x = 0.0;\\n  tmpvar_1[1u].y = texsize.w;\\n  ofs = (tmpvar_1 * 4.0);\\n  float delta_2;\\n  float ky_3;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = (uv.x - 0.5);\\n  tmpvar_4.y = ((uv.y - 0.5) + q29);\\n  vec2 v_5;\\n  v_5.x = ofs[0].x;\\n  v_5.y = ofs[1].x;\\n  vec2 v_6;\\n  v_6.x = ofs[0].x;\\n  v_6.y = ofs[1].x;\\n  vec2 v_7;\\n  v_7.x = ofs[0].y;\\n  v_7.y = ofs[1].y;\\n  vec2 v_8;\\n  v_8.x = ofs[0].y;\\n  v_8.y = ofs[1].y;\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = (texture (sampler_main, (uv + v_5)) - texture (sampler_main, (uv - v_6))).x;\\n  tmpvar_9.y = (texture (sampler_main, (uv + v_7)) - texture (sampler_main, (uv - v_8))).x;\\n  xlat_mutablered = (0.5 * texture (sampler_main, (uv - (0.004 * tmpvar_9))).x);\\n  xlat_mutablered = (xlat_mutablered + (0.5 * texture (sampler_main, uv).x));\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = tmpvar_4.x;\\n  tmpvar_10.y = (0.0078125 * (float(\\n    int((tmpvar_4.y * 128.0))\\n  ) + abs(\\n    (fract((tmpvar_4.y * 128.0)) - 0.5)\\n  )));\\n  vec2 tmpvar_11;\\n  tmpvar_11 = (tmpvar_10 * 4.0);\\n  ky_3 = clamp ((-0.5 - tmpvar_11.y), 0.0, 1.0);\\n  xlat_mutablek1 = (abs((\\n    fract((tmpvar_11.x * 2.0))\\n   - 0.5)) * 8.0);\\n  xlat_mutablek1 = (xlat_mutablek1 - sign(xlat_mutablek1));\\n  delta_2 = (0.1 + (rand_preset * 0.05)).x;\\n  xlat_mutablek1 = (xlat_mutablek1 - ((\\n    (4.0 * sign(xlat_mutablek1))\\n   * ky_3) * ky_3));\\n  ky_3 = clamp ((ky_3 - delta_2), 0.0, 1.0);\\n  xlat_mutablek1 = (xlat_mutablek1 - ((\\n    (8.0 * sign(xlat_mutablek1))\\n   * ky_3) * ky_3));\\n  ky_3 = clamp ((ky_3 - delta_2), 0.0, 1.0);\\n  xlat_mutablek1 = (xlat_mutablek1 - ((\\n    (12.0 * sign(xlat_mutablek1))\\n   * ky_3) * ky_3));\\n  ky_3 = clamp ((ky_3 - delta_2), 0.0, 1.0);\\n  xlat_mutablek1 = (xlat_mutablek1 - ((\\n    (16.0 * sign(xlat_mutablek1))\\n   * ky_3) * ky_3));\\n  ky_3 = clamp ((ky_3 - delta_2), 0.0, 1.0);\\n  float tmpvar_12;\\n  tmpvar_12 = clamp (xlat_mutablek1, -1.6, 1.6);\\n  xlat_mutablek1 = tmpvar_12;\\n  xlat_mutablegreen = (cos((tmpvar_12 * 2.0)) - 0.1);\\n  xlat_mutablewave = ((sin(\\n    ((q1 * 8.0) - (uv.x * 6.0))\\n  ) / 2.0) * q3);\\n  xlat_mutablewave = ((xlat_mutablewave * float(\\n    (xlat_mutablewave >= 0.0)\\n  )) + (q30 * 0.02));\\n  xlat_mutablered = (xlat_mutablered + ((\\n    (xlat_mutablewave / abs(sin((\\n      (1.0/(tmpvar_12))\\n     + \\n      (q1 / 8.0)\\n    ))))\\n   * xlat_mutablegreen) * ky_3));\\n  xlat_mutablezv = ((time * 0.08) + (0.2 * sin(\\n    ((uv * 16.0) + time)\\n  ))).x;\\n  vec2 tmpvar_13;\\n  tmpvar_13.x = q28;\\n  tmpvar_13.y = (0.2 * time);\\n  xlat_mutableuv2 = ((tmpvar_4 * 2.0) + tmpvar_13);\\n  vec3 tmpvar_14;\\n  tmpvar_14.xy = xlat_mutableuv2;\\n  tmpvar_14.z = xlat_mutablezv;\\n  vec3 tmpvar_15;\\n  tmpvar_15.xy = (xlat_mutableuv2 * vec2(2.0, 2.0));\\n  tmpvar_15.z = (xlat_mutablezv * 2.0);\\n  vec3 tmpvar_16;\\n  tmpvar_16.xy = (xlat_mutableuv2 * vec2(4.0, 4.0));\\n  tmpvar_16.z = (xlat_mutablezv * 3.0);\\n  vec3 tmpvar_17;\\n  tmpvar_17.xy = (xlat_mutableuv2 * vec2(8.0, 8.0));\\n  tmpvar_17.z = (xlat_mutablezv * 7.0);\\n  xlat_mutableuv2 = (tmpvar_4 + ((\\n    ((texture (sampler_noisevol_hq, tmpvar_14).z + (texture (sampler_noisevol_hq, tmpvar_15).z / 2.0)) + (texture (sampler_noisevol_hq, tmpvar_16).z / 4.0))\\n   + \\n    (texture (sampler_noisevol_hq, tmpvar_17).z / 8.0)\\n  ) * 0.1));\\n  vec3 tmpvar_18;\\n  tmpvar_18.x = xlat_mutablered;\\n  tmpvar_18.y = xlat_mutablegreen;\\n  tmpvar_18.z = ((1.0 + xlat_mutableuv2.y) * sqrt(dot (xlat_mutableuv2, xlat_mutableuv2)));\\n  vec4 tmpvar_19;\\n  tmpvar_19.w = 1.0;\\n  tmpvar_19.xyz = ((tmpvar_18 * 0.8) - 0.005);\\n  ret = tmpvar_19.xyz;\\n }","comp":"float trel;\\nfloat vshift;\\nvec3 xlat_mutableret1;\\nvec2 xlat_mutablers;\\nvec2 xlat_mutablers0;\\nfloat xlat_mutablesmoke;\\nfloat xlat_mutablesmoke2;\\nvec2 xlat_mutableuv_l;\\nfloat xlat_mutablew;\\nfloat xlat_mutablez;\\n shader_body { \\n  trel = (time / 2.0);\\n  vshift = (0.5 - q29);\\n  vec2 tmpvar_1;\\n  tmpvar_1.x = rand_preset.x;\\n  tmpvar_1.y = ((-0.1 - (rand_preset.y / 2.0)) + vshift);\\n  vec2 tmpvar_2;\\n  tmpvar_2.y = 0.0;\\n  tmpvar_2.x = (0.005 * time);\\n  xlat_mutableuv_l = (uv + tmpvar_2);\\n  vec2 tmpvar_3;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (uv - 0.5);\\n  tmpvar_3 = sin(((\\n    (tmpvar_4 * aspect.xy)\\n   + 0.5) - (tmpvar_1 * aspect.xy)));\\n  vec2 tmpvar_5;\\n  tmpvar_5 = fract(uv);\\n  vec3 tmpvar_6;\\n  tmpvar_6 = vec3((texture (sampler_fc_main, tmpvar_5).x + (2.0 * (\\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\\n   + bias2).x)));\\n  vec3 tmpvar_7;\\n  tmpvar_7.x = tmpvar_6.x;\\n  tmpvar_7.y = pow (tmpvar_6.x, 2.1);\\n  tmpvar_7.z = pow (tmpvar_6.x, 4.0);\\n  xlat_mutablew = ((uv.y - (\\n    ((dot (texture (sampler_noise_hq, vec2((xlat_mutableuv_l.x / 6.0))), vec4(0.32, 0.49, 0.29, 0.0)) + uv.x) - 0.5)\\n   / 4.0)) - vshift);\\n  xlat_mutablez = (0.2 / xlat_mutablew);\\n  float tmpvar_8;\\n  tmpvar_8 = clamp ((-0.2 - (\\n    (8.0 * q5)\\n   * xlat_mutablew)), 0.0, 1.0);\\n  xlat_mutablers0.x = (((uv.x - 0.5) * (1.0 + \\n    abs(xlat_mutablez)\\n  )) * 2.0);\\n  xlat_mutablers0.y = xlat_mutablez;\\n  xlat_mutablers0 = (xlat_mutablers0 * ((4.0 * \\n    float((xlat_mutablez <= 0.0))\\n  ) + 1.0));\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = 0.0;\\n  tmpvar_9.y = (1.5 + xlat_mutablew);\\n  vec2 x_10;\\n  x_10 = (xlat_mutablers0 - tmpvar_9);\\n  float tmpvar_11;\\n  tmpvar_11 = ((q26 / sqrt(\\n    dot (x_10, x_10)\\n  )) / 4.0);\\n  xlat_mutablers0 = (xlat_mutablers0 * (1.0 + (tmpvar_11 * tmpvar_11)));\\n  xlat_mutablers.x = (xlat_mutablers0 * 2.0).x;\\n  xlat_mutablers.y = (xlat_mutablers0.y + (trel * 0.5));\\n  float tmpvar_12;\\n  tmpvar_12 = (texture (sampler_main, uv).y * tmpvar_8);\\n  vec3 tmpvar_13;\\n  tmpvar_13.xy = (xlat_mutablers * 2.0);\\n  tmpvar_13.z = (0.2 * trel);\\n  float tmpvar_14;\\n  tmpvar_14 = dot (((\\n    ((2.0 * clamp ((texture (sampler_noisevol_hq, \\n      (tmpvar_13 * float((xlat_mutablez >= 0.0)))\\n    ) - 0.2), 0.0, 1.0)).xyz * clamp ((texture (sampler_noise_hq, (xlat_mutablers / 16.0)) - 0.5), 0.0, 1.0).x)\\n   / \\n    sqrt(abs(xlat_mutablez))\\n  ) + tmpvar_11), vec3(0.32, 0.49, 0.29));\\n  vec3 tmpvar_15;\\n  tmpvar_15.x = tmpvar_14;\\n  tmpvar_15.y = pow (tmpvar_14, 2.1);\\n  tmpvar_15.z = pow (tmpvar_14, 6.0);\\n  xlat_mutableret1 = (((\\n    ((uv.y * (1.0 + q23)) + (0.1 / sqrt(dot (tmpvar_3, tmpvar_3))))\\n   * vec3(0.1, 0.1, 0.2)) * tmpvar_8) + (clamp (tmpvar_15, 0.0, 1.0) * (1.0 - \\n    clamp ((-1.0 - (12.0 * xlat_mutablew)), 0.0, 1.0)\\n  )));\\n  xlat_mutableret1 = (xlat_mutableret1 * clamp ((1.0 - \\n    (tmpvar_12 * 8.0)\\n  ), 0.0, 1.0));\\n  vec4 tmpvar_16;\\n  tmpvar_16 = texture (sampler_main, fract((tmpvar_4 + 0.5)));\\n  xlat_mutablesmoke = (tmpvar_16.z * (tmpvar_16.z * q5));\\n  xlat_mutableret1 = (xlat_mutableret1 * clamp ((1.0 - \\n    ((xlat_mutablesmoke * q32) * tmpvar_8)\\n  ), 0.0, 1.0));\\n  xlat_mutablesmoke2 = (texture (sampler_main, ((tmpvar_4 / 2.0) + 0.5)).z * q30);\\n  xlat_mutableret1 = (xlat_mutableret1 + (clamp (tmpvar_7, 0.0, 1.0) - (\\n    ((xlat_mutablez * clamp ((xlat_mutablesmoke + \\n      (xlat_mutablew * q31)\\n    ), 0.0, 1.0)) * vec3(1.0, 0.4, 0.1))\\n   * tmpvar_8)));\\n  float tmpvar_17;\\n  tmpvar_17 = clamp (((\\n    (tmpvar_12 * xlat_mutablez)\\n   * xlat_mutablez) / 16.0), 0.0, 1.0);\\n  vec3 tmpvar_18;\\n  tmpvar_18.x = tmpvar_17;\\n  tmpvar_18.y = pow (tmpvar_17, 2.1);\\n  tmpvar_18.z = pow (tmpvar_17, 6.0);\\n  xlat_mutableret1 = (xlat_mutableret1 + clamp (tmpvar_18, 0.0, 1.0));\\n  xlat_mutableret1 = (xlat_mutableret1 * clamp ((\\n    (((dot (texture (sampler_noise_mq, vec2(\\n      ((xlat_mutableuv_l.x / 4.0) + (0.02 * trel))\\n    )), vec4(0.32, 0.49, 0.29, 0.0)) / 6.0) - uv.y) + 0.8)\\n   * 32.0), 0.0, 1.0));\\n  vec3 tmpvar_19;\\n  tmpvar_19.x = xlat_mutablesmoke2;\\n  tmpvar_19.y = pow (xlat_mutablesmoke2, 2.1);\\n  tmpvar_19.z = pow (xlat_mutablesmoke2, 6.0);\\n  xlat_mutableret1 = ((xlat_mutableret1 * clamp (\\n    (1.0 - xlat_mutablesmoke2)\\n  , 0.0, 1.0)) + clamp (tmpvar_19, 0.0, 1.0));\\n  vec4 tmpvar_20;\\n  tmpvar_20.w = 1.0;\\n  tmpvar_20.xyz = (1.0 - exp((\\n    -(xlat_mutableret1)\\n   * 2.0)));\\n  ret = tmpvar_20.xyz;\\n }"}')},5768:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":3,"gammaadj":1,"decay":1,"echo_zoom":0.907,"echo_orient":1,"wave_mode":6,"wave_thick":1,"wrap":0,"brighten":1,"wave_a":0,"wave_scale":0,"wave_smoothing":0.5,"modwavealphastart":0.5,"modwavealphaend":1,"warp":0,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_a":1,"ib_size":0,"ib_r":0.1,"ib_g":0.1,"ib_b":0.1,"ib_a":0.2,"mv_x":51.2,"mv_y":33.6,"mv_l":5,"mv_r":0.4,"mv_g":0.3,"mv_b":0.5,"mv_a":0,"b3x":0.3},"shapes":[{"baseVals":{"enabled":1,"additive":1,"thickoutline":1,"num_inst":5,"rad":0.0101,"tex_zoom":0.27705,"g":0.8,"a":0,"g2":0,"border_r":0.2,"border_g":0.14,"border_b":0,"border_a":0.3},"init_eqs_eel":"","frame_eqs_eel":"rad = 0.6 + .02*instance;\\nborder_a = .02*max(0,sin(instance*.15));\\n\\nborder_a = 0.15 * q30 * (frame%2);"},{"baseVals":{"enabled":1,"sides":16,"num_inst":800,"x":0.8,"rad":0.55692,"tex_ang":1.50796,"tex_zoom":4.72143,"g":1,"b":1,"a":0.5,"r2":1,"b2":1,"border_g":0.7,"border_b":0.4,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"n = instance;\\n\\nx1 = gmegabuf(n*4);\\ny1 = gmegabuf(n*4+1);\\nz1 = gmegabuf(n*4+2)+.7;\\n\\ndist = sqrt (pow(x1-x1_,2)+pow(y1-y1_,2)+pow(z1-z1_,2));\\n\\nx = 0.5 + x1/z1;\\ny = 0.5 + y1/z1*q6;\\n\\n\\n//b = sin(dist*315)/2+.5; \\n//r = sin(dist*1427)/2+.5; \\n//g = sin(dist*619)/2+.5; \\n\\ndx = x1-x1_;\\ndy = y1-y1_;\\nang1 = atan2(dy,dx)*1 ;\\n\\nk1 = 3.14*instance/num_inst+time/13;\\nb = .6 + .4*sin(ang1+k1);\\nr = .6 + .4*sin(k1+.3*treb);\\ng = .6 + .4*sin(k1-.3*treb);\\n\\nrad = 6*dist/z1 + q24*(n==0);\\nrad *= (2+sin(ang1+time))/3;\\nrad = min(rad,.2);\\n\\nbri = sqrt(r*r + b*b + g*g);\\nr = r/bri;\\ng = g/bri;\\nb = b/bri;\\n\\n\\n//g = b; r=min(1,rad*16); additive = (rad*16 >= 0.75)*0;\\nb2 = b/6;\\ng2 = g/6;\\nr2 = r/6;\\n//r2=g2=b2=0;\\n\\nx1_ = x1; y1_ = y1; z1_= z1;\\na = min(1,1); a2 = min(.5,abs(.02/rad));\\n//additive = (n%16==0);"},{"baseVals":{"enabled":1,"thickoutline":1,"textured":1,"num_inst":4,"rad":0.57386,"tex_ang":1.5079,"tex_zoom":1.13805,"r":0.8,"g":1,"b":1,"a":0,"r2":0.8,"b2":1,"border_r":0.8,"border_g":0.4,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x=0.5; y = 0.5;\\ntex_zoom = q23*2+.4;\\ntex_ang = 3.1416/2;\\ntrig = q22;\\na = trig/4; a2 = trig/2; \\n"},{"baseVals":{"rad":3.95513,"tex_zoom":1.54929,"r":0,"g2":0,"border_g":0.6,"border_b":0.1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"usedots":1,"scaling":60.80387,"smoothing":0.7,"a":0.05,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"scaling":67.1652,"smoothing":0.7,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"usedots":1,"b":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"usedots":1,"r":0.7,"g":0.7,"a":0.6,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"p1 = 0; p2 = 0; x1 = 0 ; y1 = 0; t1 = 0;\\nshapes = 820;\\nfrm = (rand(10) >= 5);","frame_eqs_eel":"dec_m = pow (0.8, 30/fps);\\ndec_s = pow (0.9, 30/fps);\\nvol = (bass+mid+treb)/3; \\nvol_ = dec_m * vol_ + (1-dec_m)*vol;\\navg = avg*dec_s + vol*(1-dec_s);\\nis_beat = above(vol, 1*avg+2*peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * vol + (1-is_beat)*peak*dec_m;\\nindex = (index + is_beat) %8;\\nindex2 = (index2 + is_beat*bnot(index)) %8;\\n\\ntrig = is_beat*(index==0);\\nt1 = t1+trig; \\n\\nran1 = dec_m * ran1 + (1-dec_m)*cos(3.14/6*t1);\\nran2 = dec_m * ran2 + (1-dec_m)*sin(3.14/6*t1);\\nran3 = dec_m * ran3 + (1-dec_m)*sin(3.14/5*t1);\\nq1 = ran1; q2 = ran2; q3 = ran3;\\n\\nn = 0; \\np1 *= .9; p2 = 0; p3 = 0;\\nmx = 0; my = 0; mz = 0;\\nvol2 = min(vol,2);\\nvol2 = sqrt(vol);\\nk5 = 1 / (rand(10)+.2); \\nloop (shapes,\\n  sa = n/shapes;\\n  p1 =  p1+.15*sin(sa*(vol-1)*200+time*.1)*vol;   \\n  p2 = p2-p1*vol*k5;\\n  x1 += sin(p2)*sa*.006*vol;\\n  y1 += cos(p2)*sa*.006*vol;\\n  z1 += cos(p1*.03)*.005*vol;\\n\\nmx += x1; my += y1; mz += z1;\\nx1 = atan(x1/16)*16;\\ny1 = atan(y1/16)*16;\\nz1 = atan(z1/16)*16;\\n//z1 = 1;\\n  gmegabuf(n*4) =   x1;\\n  gmegabuf(n*4+1) = y1;\\n  gmegabuf(n*4+2) = z1;\\n  n +=1;\\n);\\n\\ntrel = trel + vol_/fps*.3;\\nq4 = min(max(0,4*sin(trel)),1)*-.2;\\nmzoom = if(trig,.1*vol2*(rand(10)>=3),mzoom);\\nmzoom_ = mzoom_*dec_m + (1-dec_m)*mzoom;\\nq4 = mzoom_;\\nq5 = vol >= vol_;\\n\\nmonitor = q5;\\nq6=aspecty; \\nq27 = index;\\nq28 = index2;\\nq24 = is_beat;\\nq30 = min(1,.05/mzoom);;\\n\\ntrig1 = is_beat*(index%2);\\npk = if (trig1,1,pk*dec_m);\\nran5 = if(trig1, rand(1), ran5);\\n\\nq22 = pk * pk * (frame%2);\\nq22 = pk==1;\\nq23 = ran5;","pixel_eqs_eel":"x1 = x-0.5*abs(q1); y1 = y-.5*abs(q2);\\nk1 = q3/2; \\nlen = sqrt(pow(x1,3)*k1-pow(y1,3)*(1-k1))-.05;\\nzoom = 1 + (len)*q4; \\ndx = 0.0 * q1* (y-.5);\\ndy = 0.0 * q2* (x-.5);\\n\\n\\nwarp = 0.0;\\n\\nrot = (x1-y1)*.01*q1;","warp":" shader_body { \\n  vec3 ret_1;\\n  ret_1 = (texture (sampler_main, uv).xyz * ((0.97 - \\n    (0.05 * dot (((texture (sampler_blur2, uv_orig).xyz * scale2) + bias2), vec3(0.32, 0.49, 0.29)))\\n  ) - (0.1 * q5)));\\n  ret_1 = (ret_1 - 0.004);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ret_1;\\n  ret = tmpvar_2.xyz;\\n }","comp":" shader_body { \\n  vec2 uv_1;\\n  vec3 ret_2;\\n  uv_1 = (uv + (texsize.zw / 2.0));\\n  vec2 tmpvar_3;\\n  tmpvar_3 = ((0.5 - uv_1) + 0.5);\\n  ret_2 = (max (texture (sampler_main, uv_1).xyz, texture (sampler_main, tmpvar_3).xyz) / 1.5);\\n  ret_2 = ((2.0 * max (\\n    ((texture (sampler_blur3, uv_1).xyz * scale3) + bias3)\\n  , \\n    ((texture (sampler_blur3, tmpvar_3).xyz * scale3) + bias3)\\n  )) + (ret_2 * 3.0));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = max (ret_2, (texture (sampler_noise_lq, (uv_1 * 2.0)).x * (0.05 + \\n    (2.0 * (((texture (sampler_blur3, \\n      fract((((uv_1 - 0.5) * 0.8) + 0.5))\\n    ).xyz * scale3) + bias3) + ((texture (sampler_blur3, \\n      fract((((tmpvar_3 - 0.5) * 0.8) + 0.5))\\n    ).xyz * scale3) + bias3)))\\n  )));\\n  ret_2 = tmpvar_4;\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = tmpvar_4;\\n  ret = tmpvar_5.xyz;\\n }"}')},7215:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.980001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"wave_dots":1,"wave_thick":1,"wave_brighten":0,"darken":1,"wave_a":0.39158,"wave_scale":0.01,"wave_smoothing":0.504,"wave_mystery":-1,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1.4595,"warpscale":2.0067,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.7,"wave_g":0,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"textured":1,"x":0.3,"rad":0.379365,"tex_ang":0.628319,"tex_zoom":4.141529,"r":0.3,"g":0.7,"b":1,"r2":1,"b2":1,"a2":0.7,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = q1/6 + .5;\\ny = q2/6 + .5;"},{"baseVals":{"sides":5,"textured":1,"rad":0.986,"tex_ang":3.14159,"tex_zoom":0.99979,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ang =sin(time/65) ;// ang + (bass*.2) + (time*.4);"},{"baseVals":{"enabled":1,"sides":5,"additive":1,"x":0.9,"rad":0.22613,"g":0.6,"g2":0,"b2":0.4,"a2":0.3,"border_a":0},"init_eqs_eel":"t_rel = 5*time;\\nt1 = int(t_rel);","frame_eqs_eel":"dx =  rand(1000)/1000-.5;\\ndy =  rand(1000)/1000-.5;\\n\\nx = .5 + dx*(1-q22/4);\\ny = .5 + dy*(1-q22/4);\\n\\nang = time;\\n\\na = 1;\\nrad = .1*q24+0.08 +q22/40;"},{"baseVals":{"additive":1,"textured":1,"x":0.51,"rad":0.249779,"tex_ang":0.125664,"tex_zoom":5.536972,"r":0.6,"g":0.3,"b":0.4,"a":0.6,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"a = max(q22-2,0);"}],"waves":[{"baseVals":{"enabled":1,"samples":256,"spectrum":1,"usedots":1,"scaling":0.5033,"g":0.6,"b":0.4},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"\\nt_abs = sample;\\nt_rel = sample-time/1;\\nampl = time;\\n\\nox = ampl*10*sin (t_abs*68);\\noy = ampl*10*cos (t_abs*28);\\noz = ampl*10*cos (t_abs*128);\\n\\n\\nr = 1;\\ng = .5 ;\\nb = 1 ;\\na=q26/18;\\n\\nxang = t1 ;\\nyang = t1*2;\\nzang = t1;\\nfov = 0.12;\\n\\n\\n// Rotation um x,y,z\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\n\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = -ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\noz = oz - 6;\\nx = ox*fov/oz +0.5;\\n//x = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;"},{"baseVals":{"enabled":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"a = max(sin(time/8)-.5,0);\\nr = .4; g = .2; b = .7;\\n\\nx = sample + .01*cos(sample*243+time);\\ny = .5+.5*sin(time/13) + .02*sin(sample*143);\\na = .7 ;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"dec_med = pow (0.9, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb);\\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %8;\\nindex2 = (index2 + is_beat*bnot(index))%4;\\nindex3 = (index3 + is_beat*bnot(index)*bnot(index2))%3;\\n\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass + mid + treb;\\n\\n//k1 =  is_beat*bnot(index)*bnot(index2);\\n\\nk1 =  is_beat*equal(index,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_slow * p2+ (1-dec_slow)*p1;\\nrott = p2 * 3.14159265359/2;\\n\\nq27 = 8-index;\\nq28 = .5 + sin(time/7)/10;\\nq29 = index4;\\n\\nmv_a = 0.2;\\nt_rel = time/3;\\nwave_a = max(sin(time/8)-.5,0);\\nwave_a = 0;\\nwave_x = .5+.5*sin(time/13);\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\nmovez = movez + .01 * 30/fps ;\\nq29 = movez;\\n\\n\\nzoom = 1;\\nrot = .0;\\ndx = .003","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = (((uv - vec2(0.5, 0.5)) * texsize.xy) * 0.03);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ((0.99 * texture (sampler_main, (uv + \\n    (((clamp (\\n      (sin(tmpvar_1) / cos(tmpvar_1))\\n    , vec2(-12.0, -12.0), vec2(12.0, 12.0)) * cos(\\n      (tmpvar_1.yx * tmpvar_1.yx)\\n    )) * texsize.zw) * 12.0)\\n  )).xyz) - 0.01);\\n  ret = tmpvar_2.xyz;\\n }","comp":"vec3 xlat_mutableret1;\\nvec2 xlat_mutableuv2;\\n shader_body { \\n  vec2 uv_1;\\n  float inten_2;\\n  float dist_3;\\n  uv_1 = (uv - 0.5);\\n  uv_1 = (uv_1 * aspect.xy);\\n  dist_3 = (1.0 - fract((0.25 + q29)));\\n  inten_2 = (sqrt(dist_3) * (1.0 - (dist_3 * dist_3)));\\n  xlat_mutableret1 = max (vec3(0.0, 0.0, 0.0), (texture (sampler_main, fract(\\n    (((2.0 * uv_1) * dist_3) + 0.5)\\n  )).xyz * inten_2));\\n  xlat_mutableuv2.x = -(uv_1.y);\\n  xlat_mutableuv2.y = uv_1.x;\\n  dist_3 = (1.0 - fract((0.5 + q29)));\\n  inten_2 = (sqrt(dist_3) * (1.0 - (dist_3 * dist_3)));\\n  xlat_mutableret1 = max (xlat_mutableret1, (texture (sampler_main, fract(\\n    (((2.0 * xlat_mutableuv2) * dist_3) + 0.5)\\n  )).xyz * inten_2));\\n  dist_3 = (1.0 - fract((0.75 + q29)));\\n  inten_2 = (sqrt(dist_3) * (1.0 - (dist_3 * dist_3)));\\n  xlat_mutableret1 = max (xlat_mutableret1, (texture (sampler_main, fract(\\n    (((2.0 * uv_1) * dist_3) + 0.5)\\n  )).xyz * inten_2));\\n  xlat_mutableuv2.x = -(uv_1.y);\\n  xlat_mutableuv2.y = uv_1.x;\\n  dist_3 = (1.0 - fract((1.0 + q29)));\\n  inten_2 = (sqrt(dist_3) * (1.0 - (dist_3 * dist_3)));\\n  xlat_mutableret1 = max (xlat_mutableret1, (texture (sampler_main, fract(\\n    (((2.0 * xlat_mutableuv2) * dist_3) + 0.5)\\n  )).xyz * inten_2));\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = (xlat_mutableret1 * 3.0);\\n  ret = tmpvar_4.xyz;\\n }"}')},7500:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1.980001,"decay":0.5,"echo_zoom":0.952379,"echo_alpha":0.5,"echo_orient":3,"wave_mode":4,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.391579,"wave_scale":1.575857,"wave_smoothing":0.45,"wave_mystery":0.08,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.4595,"warpscale":2.0067,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.5,"wave_g":0.79,"ob_size":0,"ob_a":0.8,"ib_size":0.26,"mv_x":31.999998,"mv_y":24.000004,"mv_l":0.05,"mv_r":0.4999,"mv_g":0.4999,"mv_b":0.4999,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"textured":1,"rad":0.545996,"ang":2.199115,"tex_ang":0.502655,"tex_zoom":2.02311,"g":1,"b":0.9,"a":0.6,"r2":0.8,"g2":0.8,"b2":0.8,"a2":0.6,"border_b":0,"border_a":0.7},"init_eqs_eel":"","frame_eqs_eel":"tex_ang =  1 + sin(time/9);\\nrad = q29;\\ntex_zoom = (2 + sin(time/17));\\nadditive = q22/6;\\ntextured = 1-bnot(q23)*q24;"},{"baseVals":{"sides":34,"thickoutline":1,"rad":0.728634,"tex_zoom":0.9355,"r":0.5,"g":0.55,"b":0.5,"a":0.0999,"r2":0.7,"g2":0.4,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":100,"x":0.503,"rad":0.01,"tex_zoom":0.609857,"g":0.1,"a":0.9,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = .5 + rand(10)/25;\\ny = .5 + rand(10)/25;\\nang = rand(6);\\nr = rand(4)/3;\\ng = rand(4)/3;\\nb = rand(4)/3;\\nr2 = b;\\ng2 = r;\\nb2 = g;\\na = min(q21/2 ,.9);\\nrad = a/9 ;\\n\\na = .5;a2 = .8;"},{"baseVals":{"sides":63,"textured":1,"y":1,"rad":0.548217,"tex_zoom":0.499805,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"samples":142,"sep":120,"usedots":1,"additive":1,"scaling":0.01,"smoothing":0.82,"a":0.6,"enabled":0},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"t2 = t2 + bass_att;","point_eqs_eel":"\\nt_abs = sample;\\nt_rel = sample-time/8;\\n\\nox =  sin (sample*110) ;\\noy =  cos (sample*110);\\n\\noz = 4+1/(t_rel - int(t_rel));\\n\\nr = .3;\\ng = 0.7;\\nb = 1;\\n\\na = .8;\\n\\nxang = 0;\\nyang = 0;\\nzang = 0;\\nfov = .5;\\n\\n\\n// Rotation um x,y,z\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\n\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = -ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\nx = ox*fov/oz +0.45;\\ny = oy*fov/oz + 0.45;"},{"baseVals":{"usedots":1,"thick":1,"scaling":0.891519,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"tm = time*.1;\\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\\n\\ntic = min(time - tin,1);\\ntin = time;\\n\\ntva = (tic*q1*.5);\\ntvb = (tic*q2*.5);\\ntvc = (tic*q3*.5);\\n\\nq1 = tva;\\nq2 = tvb;\\nq3 = tvc;\\n\\nsz = .5;\\nlen = q4;\\nt4 = len;","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.891519,"smoothing":0.82,"r":0,"g":0.2,"b":0,"enabled":0},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"tm = time*.1;\\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\\n\\ntic = min(time - tin,1);\\ntin = time;\\n\\ntva = (tic*q1*.5);\\ntvb = (tic*q2*.5);\\ntvc = (tic*q3*.5);\\n\\nq1 = tva;\\nq2 = tvb;\\nq3 = tvc;\\n\\nsz = .5;\\nlen = 1;\\nt4 = len;","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"dec_med = pow (0.9, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb);\\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %4;\\nindex2 = (index2 + is_beat*bnot(index))%4;\\nindex3 = (index3 + is_beat*bnot(index)*bnot(index2))%3;\\n\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = max(peak,4);\\nq23 = index;\\nq24 = is_beat;\\nq26 = max(bass + mid + treb,3);\\n\\ngo = go*dec_slow + (1-dec_slow) * equal(index2,2);\\n\\nmovez = movez + .1*(1+.3*q26)*30/fps * go;\\nq30 = movez;\\n\\nk1 =  is_beat*equal(index,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\np3 = dec_med * p3+ (1-dec_med)*p2;\\nrott = p3*3.1416/2;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\n\\nstr = str * dec_slow + (1-dec_slow) * index3;\\nq27 = 4 - str;\\n\\ngrid = grid*(dec_med) + (1-dec_med)* equal(index2,2)*bnot(index);\\nmv_a = grid * .6;\\n\\nrot1 = dec_med * rot1 + (1-dec_med) * bnot(index2) ;\\nq28 = rot1 ;\\n\\ncopy = copy * dec_slow + (1-dec_slow)*index3;\\nq29 = .3*copy;","pixel_eqs_eel":"dx = 0.02*q28;\\nrot = .04*q2;\\nzoom = .96 + .1*sin(time/7);\\n//zoom = 1.04;","warp":" shader_body { \\n  vec2 zz_1;\\n  mat2 tmpvar_2;\\n  tmpvar_2[uint(0)] = _qa.xy;\\n  tmpvar_2[1u] = _qa.zw;\\n  zz_1 = (((\\n    (uv - vec2(0.5, 0.5))\\n   * texsize.xy) * 0.01) * tmpvar_2);\\n  zz_1 = -(zz_1.yx);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ((texture (sampler_main, (uv + \\n    (((clamp (\\n      (sin(zz_1.yx) / cos(zz_1.yx))\\n    , vec2(-8.0, -8.0), vec2(8.0, 8.0)) * cos(\\n      (4.0 * zz_1)\\n    )) * texsize.zw) * 16.0)\\n  )).xyz * 0.99) - 0.01);\\n  ret = tmpvar_3.xyz;\\n }","comp":" shader_body { \\n  vec2 uv3_1;\\n  vec2 uv2_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = ((uv - 0.5) * aspect.xy);\\n  float tmpvar_4;\\n  tmpvar_4 = (0.1 / (sqrt(\\n    dot (tmpvar_3, tmpvar_3)\\n  ) + 0.1));\\n  vec2 tmpvar_5;\\n  float tmpvar_6;\\n  tmpvar_6 = (ang / 3.14);\\n  tmpvar_5.x = tmpvar_6;\\n  tmpvar_5.y = (q27 * tmpvar_4);\\n  uv2_2.y = (tmpvar_5.y + (0.1 * q30));\\n  uv2_2.x = (tmpvar_6 + (0.2 * time));\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = tmpvar_6;\\n  tmpvar_7.y = (4.0 * tmpvar_4);\\n  uv3_1.y = (tmpvar_7.y - (0.2 * q30));\\n  uv3_1.x = tmpvar_7.x;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = fract(uv3_1);\\n  uv3_1 = tmpvar_8;\\n  float tmpvar_9;\\n  tmpvar_9 = clamp ((1.0 - (4.0 * rad)), 0.0, 1.0);\\n  vec4 tmpvar_10;\\n  tmpvar_10.w = 1.0;\\n  tmpvar_10.xyz = (((\\n    (3.0 * max (((2.0 * texture (sampler_main, uv2_2).xyz) + texture (sampler_main, tmpvar_8).xyz), ((2.0 * \\n      ((texture (sampler_blur2, fract(uv2_2)).xyz * scale2) + bias2)\\n    ) + (\\n      (texture (sampler_blur2, fract(tmpvar_8)).xyz * scale2)\\n     + bias2))))\\n   * rad) + (\\n    ((uv.y * pow ((1.0 - rad), 8.0)) * roam_cos)\\n  .xyz * tmpvar_9)) + ((tmpvar_9 * 2.0) * (\\n    (texture (sampler_blur1, fract(uv)).xyz * scale1)\\n   + bias1)));\\n  ret = tmpvar_10.xyz;\\n }"}')},9006:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":2,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.527,"wave_smoothing":0.45,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0.015,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b2x":0.3,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":32,"additive":1,"textured":1,"y":0.66,"rad":0.34546,"tex_ang":1.50796,"tex_zoom":0.61299,"r":0.8,"g":0.8,"b":1,"a":0.08,"g2":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":16,"thickoutline":1,"num_inst":32,"y":0.67,"rad":0.02007,"tex_zoom":1.25486,"r":0.7,"a":0.5,"g2":0,"border_r":0.3,"border_g":0.7,"border_b":0.8,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"//blood drooling\\n\\n// \\"random\\" values per instance\\nphase = sin(instance*3);\\nspeed = 2+cos(instance*12);\\nx0 = .5 + .06/q2*sin(instance*17);\\n\\ntrel = (time-phase)*speed/16;\\ntinst = trel - int(trel);\\n\\nx = x0;\\ny = .5-q3 - tinst;\\n\\na = min(sqrt(tinst)+.1,1);\\na = a*q17;"},{"baseVals":{"sides":3,"num_inst":6,"x":0.503,"y":0.37,"rad":0.06391,"ang":0.94248,"tex_zoom":9.18052,"g":1,"b":1,"r2":1,"b2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"k1 = instance/num_inst-.5;\\n\\nx = .5 + k1/8;\\n\\ny = .4 + (k1)*0;\\nang = 0;\\na = .1; a2 = .0;"},{"baseVals":{"enabled":1,"sides":9,"num_inst":2,"x":0.52,"y":0.51,"rad":0.018,"tex_zoom":1.91509,"r":0,"r2":0.5,"g2":0,"border_r":0.2,"border_g":0.7,"border_b":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = .5 + (instance-.5)*.04;\\nrad = .01+q22*.01;"}],"waves":[{"baseVals":{"samples":282,"sep":20,"usedots":1,"scaling":7.858,"smoothing":0.1,"g":0,"b":0,"a":0.6,"enabled":0},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"usedots":1,"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"scaling":0.89152,"smoothing":0,"r":0.5,"g":0,"b":0.5,"enabled":0},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"crumple = 0; \\nmwidth = .5;\\nmshape = 0;\\ndist = 4;\\ndist_ = 4;","frame_eqs_eel":"dec_med = pow (0.8, 30/fps);\\ndec_b = pow (0.9, 30/fps);\\ndec_slow = pow (0.9, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, avg+peak) * above (time, t0+.1);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %32;\\nindex2 = (index2 + is_beat*bnot(index))%4;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq24 = is_beat;\\nq26 = bass_att + mid_att + treb_att;\\nq27 = index +1;\\nq28 = index2;\\n\\nlight = light * dec_med + (1-dec_med)*q22;\\nlight = min(light,3);\\nq15 = light/3;\\n\\nph1 = below(q27,8);\\nph2 = above(q27,8)*below(q27,16);\\nph2a = above(q27,29); // open mouth\\nph3 = above(q27,30);\\n\\nblend = above(q27,30)+below(q27,2);\\nblend_ = dec_b*blend_ + (1-dec_b)*blend;\\nq19 = blend_;\\nq18 = 1-blend_;\\ndist = if(ph1,3,dist);\\ndist = if(ph2,max(dist -1/fps,1.8),dist);\\ndist = if(ph3,max(dist - 8/fps,-1),dist);\\ndist_ = dist_ * dec_med + dist*(1-dec_med);\\n\\nq11 = dist_;//q11 = 2;\\nopen = if(ph2a,open*dec_slow,4);\\nq16 = 4-open+q27/16+q15/2;\\nq17 = above(q27,16); //drool\\n\\ntrel1 = trel1 + 1/fps * (1 + q15*2*((q27%2)-.5));\\ntrel2 = trel2 + 1/fps * (1 + q15*2*((q27%4)-1.5));\\npx_ = sin(trel1)/5;\\npy_ = cos(trel2)/5-.1;\\n\\npx__ = dec_slow*px__ + px_ * (1-dec_slow);\\npy__ = dec_slow*py__ + py_ * (1-dec_slow);\\n\\nq5 = px_+.1*sin(time); \\nq6 = py_+.1*cos(2*time); //light pos\\n\\nq9 = px__*sqrt(dist_)/2;  //head pos\\nq10 = py__*sqrt(dist_)/2;\\n\\ntrig = equal(q27,31)*q24;\\ncrumple = if(trig,rand(20)-5,crumple);\\nmwidth =  if(trig,.2+rand(20)/15,mwidth);\\nmshape =  if(trig, rand(20)/40,mshape);\\n\\nq1 = crumple;;\\nq2 = mwidth;\\nq3 = .1; //y-pos mouth\\nq4 = mshape;\\n\\nmonitor = trig;","pixel_eqs_eel":"","warp":"float eyerad;\\nvec3 xlat_mutablenoise2;\\nvec2 xlat_mutableuv1;\\nvec2 xlat_mutableuv6;\\n shader_body { \\n  eyerad = (0.02 + (0.01 * q22));\\n  vec3 tmpvar_1;\\n  tmpvar_1 = vec3((dot ((\\n    (texture (sampler_blur1, fract(uv)).xyz * scale1)\\n   + bias1), vec3(0.32, 0.49, 0.29)) * q1));\\n  vec2 tmpvar_2;\\n  tmpvar_2.y = 0.0;\\n  tmpvar_2.x = texsize.z;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = ((tmpvar_2 * 8.0) * tmpvar_1.xy);\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = 0.0;\\n  tmpvar_4.y = texsize.w;\\n  vec2 tmpvar_5;\\n  tmpvar_5 = ((tmpvar_4 * 8.0) * tmpvar_1.xy);\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = dot ((texture (sampler_main, (uv + tmpvar_3)) - texture (sampler_main, (uv - tmpvar_3))), vec4(0.32, 0.49, 0.29, 0.0));\\n  tmpvar_6.y = dot ((texture (sampler_main, (uv + tmpvar_5)) - texture (sampler_main, (uv - tmpvar_5))), vec4(0.32, 0.49, 0.29, 0.0));\\n  float tmpvar_7;\\n  tmpvar_7 = abs((uv.x - 0.5));\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = tmpvar_7;\\n  tmpvar_8.y = (uv.y - 0.5);\\n  vec2 x_9;\\n  x_9 = (tmpvar_8 - vec2(0.1, -0.1));\\n  float tmpvar_10;\\n  tmpvar_10 = pow (clamp ((eyerad / \\n    sqrt(dot (x_9, x_9))\\n  ), 0.0, 1.0), 4.0);\\n  float tmpvar_11;\\n  float tmpvar_12;\\n  tmpvar_12 = (tmpvar_8.y - q3);\\n  tmpvar_11 = pow (clamp ((0.05 / \\n    sqrt((((tmpvar_7 * tmpvar_7) * q2) + ((\\n      ((0.05 / (0.01 + (q4 * tmpvar_7))) * (1.0 + q15))\\n     / q16) * (tmpvar_12 * tmpvar_12))))\\n  ), 0.0, 1.0), 3.0);\\n  float tmpvar_13;\\n  tmpvar_13 = max (tmpvar_10, tmpvar_11);\\n  vec2 x_14;\\n  x_14 = (tmpvar_8 - vec2(0.1, -0.1));\\n  vec2 tmpvar_15;\\n  tmpvar_15.x = 0.0;\\n  tmpvar_15.y = (q10 - -0.1);\\n  vec2 x_16;\\n  x_16 = ((tmpvar_8 - vec2(0.1, -0.1)) - (0.02 * tmpvar_15));\\n  xlat_mutableuv1 = (tmpvar_8 + (vec2((tmpvar_10 + \\n    (tmpvar_11 * q16)\\n  )) / 4.0));\\n  xlat_mutableuv6 = (xlat_mutableuv1 + (xlat_mutableuv1 * (2.0 * texture (sampler_noise_hq, \\n    ((xlat_mutableuv1 / 4.0) + (time / 400.0))\\n  ).xy)));\\n  xlat_mutablenoise2 = (vec3(((\\n    (abs((cos(\\n      (xlat_mutableuv6.y * 18.0)\\n    ) + sin(\\n      (xlat_mutableuv6.x * 18.0)\\n    ))) / 6.0)\\n   * \\n    (1.0 + abs((q1 / 16.0)))\\n  ) + 0.2)) * vec3(1.0, 0.9, 0.8));\\n  vec3 tmpvar_17;\\n  tmpvar_17 = mix (mix (xlat_mutablenoise2, vec3((\\n    (sin(((tmpvar_7 * 142.0) + (1.5 * \\n      sign((tmpvar_8.y - q3))\\n    ))) - ((q16 * 0.008) / abs((tmpvar_8.y - q3))))\\n   * tmpvar_11)), vec3(tmpvar_11)), ((\\n    ((clamp (cos(\\n      ((1.4 / eyerad) * sqrt(dot (x_14, x_14)))\\n    ), 0.0, 1.0) / 3.0) * roam_sin)\\n   * 2.0).xyz - float(\\n    (sqrt(dot (x_16, x_16)) < (0.01 * q15))\\n  )), vec3(tmpvar_10));\\n  xlat_mutablenoise2 = tmpvar_17;\\n  vec4 tmpvar_18;\\n  tmpvar_18.w = 1.0;\\n  tmpvar_18.xyz = (((\\n    (texture (sampler_main, fract((uv + (tmpvar_6 * 0.003)))).xyz + vec3(-((sqrt(\\n      dot (tmpvar_6, tmpvar_6)\\n    ) * 0.1))))\\n   * \\n    (0.99 - (tmpvar_13 / 2.0))\\n  ) - 0.01) + (tmpvar_17 * (0.045 + tmpvar_13)));\\n  ret = tmpvar_18.xyz;\\n }","comp":"vec2 hor;\\nvec2 ver;\\nvec3 xlat_mutablebeast;\\nvec2 xlat_mutableuv1;\\n shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1.y = 0.0;\\n  tmpvar_1.x = texsize.z;\\n  hor = (tmpvar_1 * 4.0);\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = 0.0;\\n  tmpvar_2.y = texsize.w;\\n  ver = (tmpvar_2 * 4.0);\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = q5;\\n  tmpvar_3.y = q6;\\n  vec3 ret_4;\\n  xlat_mutableuv1 = ((uv - 0.5) * aspect.xy);\\n  vec2 tmpvar_5;\\n  vec2 uv_in_6;\\n  uv_in_6.y = xlat_mutableuv1.y;\\n  uv_in_6.x = (xlat_mutableuv1.x + q9);\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = 0.0;\\n  tmpvar_7.y = (q10 + q3);\\n  float tmpvar_8;\\n  tmpvar_8 = (-1.0 / q11);\\n  float tmpvar_9;\\n  tmpvar_9 = (1.0/(q11));\\n  float tmpvar_10;\\n  tmpvar_10 = (4.0 * q9);\\n  tmpvar_5 = (((\\n    (uv_in_6 * q11)\\n   * \\n    ((0.4 + clamp (abs(uv_in_6.x), tmpvar_8, tmpvar_9)) + (tmpvar_10 * uv_in_6.x))\\n  ) - 0.5) + tmpvar_7);\\n  float x_11;\\n  x_11 = (xlat_mutableuv1.x + q9);\\n  vec2 tmpvar_12;\\n  tmpvar_12.x = q9;\\n  tmpvar_12.y = q10;\\n  vec2 x_13;\\n  x_13 = (xlat_mutableuv1 + tmpvar_12);\\n  vec3 tmpvar_14;\\n  tmpvar_14 = (texture (sampler_main, tmpvar_5) * clamp ((\\n    (0.2 / q11)\\n   / \\n    sqrt((x_11 * x_11))\\n  ), 0.0, 1.0)).xyz;\\n  vec2 uv_in_15;\\n  uv_in_15.y = xlat_mutableuv1.y;\\n  uv_in_15.x = (xlat_mutableuv1.x + (q9 * 0.96));\\n  vec2 tmpvar_16;\\n  tmpvar_16.x = 0.0;\\n  tmpvar_16.y = ((q10 * 0.96) + q3);\\n  vec2 tmpvar_17;\\n  tmpvar_17.x = dot ((texture (sampler_main, (tmpvar_5 + hor)) - texture (sampler_main, (tmpvar_5 - hor))), vec4(0.32, 0.49, 0.29, 0.0));\\n  tmpvar_17.y = dot ((texture (sampler_main, (tmpvar_5 + ver)) - texture (sampler_main, (tmpvar_5 - ver))), vec4(0.32, 0.49, 0.29, 0.0));\\n  vec2 x_18;\\n  x_18 = ((xlat_mutableuv1 + tmpvar_3) + (2.0 * tmpvar_17));\\n  float tmpvar_19;\\n  tmpvar_19 = (2.0 * clamp ((0.05 / \\n    sqrt(dot (x_18, x_18))\\n  ), 0.0, 1.0));\\n  vec2 x_20;\\n  x_20 = (xlat_mutableuv1 + tmpvar_3);\\n  float tmpvar_21;\\n  tmpvar_21 = clamp (((\\n    ((1.0 + q15) * 0.5)\\n   / q11) / sqrt(\\n    dot (x_20, x_20)\\n  )), 0.0, 1.0);\\n  xlat_mutablebeast = (tmpvar_14 * ((tmpvar_21 * tmpvar_21) * 0.7));\\n  xlat_mutablebeast = (xlat_mutablebeast + ((\\n    (dot (xlat_mutablebeast, vec3(0.32, 0.49, 0.29)) * tmpvar_19)\\n   * tmpvar_19) * (tmpvar_21 * tmpvar_21)));\\n  ret_4 = (xlat_mutablebeast + ((\\n    ((texture (sampler_main, ((\\n      (((uv_in_15 * 1.1) * q11) * ((0.4 + clamp (\\n        abs(uv_in_15.x)\\n      , tmpvar_8, tmpvar_9)) + (tmpvar_10 * uv_in_15.x)))\\n     - 0.5) + tmpvar_16)) * clamp ((1.0 - \\n      (8.0 * dot (tmpvar_14, vec3(0.32, 0.49, 0.29)))\\n    ), 0.0, 1.0)) * clamp (((0.05 / q11) / sqrt(\\n      dot (x_13, x_13)\\n    )), 0.0, 1.0))\\n   / 2.0).xyz * tmpvar_21));\\n  vec3 tmpvar_22;\\n  tmpvar_22.yz = vec2(0.0, 0.0);\\n  tmpvar_22.x = q22;\\n  vec3 tmpvar_23;\\n  tmpvar_23 = mix (clamp ((tmpvar_21 * tmpvar_22), 0.0, 1.0), ret_4, vec3(q18));\\n  ret_4 = tmpvar_23;\\n  vec4 tmpvar_24;\\n  tmpvar_24.w = 1.0;\\n  tmpvar_24.xyz = tmpvar_23;\\n  ret = tmpvar_24.xyz;\\n }"}')},1687:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":3,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"wave_thick":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":1.229,"wave_smoothing":0.9,"wave_mystery":0.2,"modwavealphastart":0,"modwavealphaend":0,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0,"ob_a":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"sides":33,"textured":1,"rad":0.80375,"tex_ang":0.06283,"tex_zoom":1.03922,"g":1,"b":1,"r2":1,"b2":1,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":39,"thickoutline":1,"num_inst":41,"x":0.6,"rad":0.033,"tex_zoom":6.16617,"r":0.4,"g":1,"b":0.7,"a":0.9,"g2":0,"a2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"rad = q21*.2;"},{"baseVals":{"enabled":1,"sides":12,"num_inst":256,"x":0.123,"y":0,"rad":0.20303,"tex_zoom":0.49981,"g":1,"b":1,"b2":1,"a2":1,"border_g":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"k1 = instance/num_inst*6.3;\\n//q15 = 0; q16 = 0;\\n\\nx = .5 +q15 *cos(k1+q17) + q11*-.2; \\ny = .5 +q16 *q32*sin(k1+q17+time)+q12*.2;\\n\\n\\na = .5;\\na2 = .1; r = .5; b = 1; g = 1;\\nrad = max(max(abs(q15),abs(q16))*.2,.04);\\n"},{"baseVals":{"sides":63,"rad":0.01645,"tex_zoom":1.31212,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"usedots":1,"additive":1,"scaling":0.89152,"smoothing":0.82,"a":0.6,"enabled":0},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"scaling":0.89152,"smoothing":1,"g":0.6,"b":0,"enabled":0},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"scaling":0.01348,"smoothing":0,"g":0.6,"b":0,"a":0.31,"enabled":0},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"g":0.6,"b":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"ran1 = (rand(100)/100-.5)*2;\\nran2 = (rand(100)/100-.5)*2;\\nran3 = (rand(100)/100-.5)*2;\\nindex2 = 3;","frame_eqs_eel":"dec_med = pow (0.85, 30/fps);\\ndec_slow = pow (0.96, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, -.5+avg+peak) * above (time, t0+.1);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %32;\\nindex2 = (index2 + is_beat*bnot(index))%4;\\nq22 = peak;\\nq27 = index;\\nq28 = index2+1;\\nq24 = is_beat;\\n\\ntrig =  is_beat*equal(index%2,0);\\np1 =  trig*(p1+1) + (1-trig)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.1416/4;\\nq1 = cos(rott);\\nq2 = sin(rott);\\n\\n\\ntrig = is_beat*equal(index%24,0);\\nran1 = if(trig,(rand(100)/100-.5)*2,ran1);\\n\\ntrig = is_beat*equal(index%16,0);\\nran2 = if(trig,(rand(100)/100-.5)*2,ran2);\\n\\ntrig = is_beat*equal(index%12,0);\\nran3 = if(trig,(rand(100)/100-.5)*2,ran3);\\n\\nran1_ = dec_med*ran1_ + (1-dec_med)*ran1;\\nran2_ = dec_med*ran2_ + (1-dec_med)*ran2;\\nran3_ = dec_med*ran3_ + (1-dec_med)*ran3;\\nq11 = ran1_;\\nq12 = ran2_;\\n\\n\\ndx = .02*ran1_;\\ndy = .02*ran2_;\\nzoom = 1+.05*ran3_;\\n\\npeak_ = dec_med*peak_ + (1-dec_med)*peak;\\npeak__ = dec_slow*peak__ + (1-dec_slow)*peak_;\\n//peak__ = 1;\\n\\nma = ma + (peak_-peak__)*50/fps * bnot(index%2);\\nmx=mx*dec_slow+(1-dec_slow)*cos(ma*1.3);\\nmy=my*dec_slow+(1-dec_slow)*sin(ma);\\n\\nq15 = mx;\\nq16 = my*.8;\\nq17 = ma*.8;\\nq32 = aspecty;\\nmonitor = dx;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 uv_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (uv - vec2(0.5, 0.5));\\n  float tmpvar_3;\\n  vec4 tmpvar_4;\\n  tmpvar_4 = texture (sampler_blur1, uv);\\n  tmpvar_3 = (dot ((\\n    (tmpvar_4.xyz * scale1)\\n   + bias1), vec3(0.32, 0.49, 0.29)) * 4.0);\\n  mat2 tmpvar_5;\\n  tmpvar_5[uint(0)].x = cos(tmpvar_3);\\n  tmpvar_5[uint(0)].y = -(sin(tmpvar_3));\\n  tmpvar_5[1u].x = sin(tmpvar_3);\\n  tmpvar_5[1u].y = cos(tmpvar_3);\\n  uv_1 = ((tmpvar_2 + (\\n    (0.1 * dot (((tmpvar_4.xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29)))\\n   * \\n    (tmpvar_2 * tmpvar_5)\\n  )) - 0.5);\\n  vec2 tmpvar_6;\\n  tmpvar_6 = ((uv_1 * texsize.xy) * 0.02);\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = (cos((tmpvar_6.y * q1)) * sin(-(tmpvar_6.y)));\\n  tmpvar_7.y = (sin(tmpvar_6.x) * cos((tmpvar_6.y * q2)));\\n  uv_1 = (uv_1 - ((tmpvar_7 * texsize.zw) * (q28 * 4.0)));\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = ((texture (sampler_main, uv_1).xyz * 0.99) - 0.02);\\n  ret = tmpvar_8.xyz;\\n }","comp":"vec2 xlat_mutabledz;\\n shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = ((uv - 0.5) * aspect.xy);\\n  vec2 tmpvar_3;\\n  tmpvar_3.y = 0.0;\\n  tmpvar_3.x = texsize.z;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (tmpvar_3 * 4.0);\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = 0.0;\\n  tmpvar_5.y = texsize.w;\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (tmpvar_5 * 4.0);\\n  xlat_mutabledz.x = ((2.0 * dot (texture (sampler_main, \\n    (uv + tmpvar_4)\\n  ).xyz, vec3(0.32, 0.49, 0.29))) - (2.0 * dot (texture (sampler_main, \\n    (uv - tmpvar_4)\\n  ).xyz, vec3(0.32, 0.49, 0.29))));\\n  xlat_mutabledz.y = ((2.0 * dot (texture (sampler_main, \\n    (uv + tmpvar_6)\\n  ).xyz, vec3(0.32, 0.49, 0.29))) - (2.0 * dot (texture (sampler_main, \\n    (uv - tmpvar_6)\\n  ).xyz, vec3(0.32, 0.49, 0.29))));\\n  vec4 tmpvar_7;\\n  tmpvar_7 = texture (sampler_main, uv);\\n  xlat_mutabledz = (xlat_mutabledz * 12.0);\\n  vec2 tmpvar_8;\\n  tmpvar_8 = sin(((\\n    (2.0 * tmpvar_2)\\n   + \\n    (xlat_mutabledz * 0.8)\\n  ) + vec2(1.0, 1.0)));\\n  vec2 tmpvar_9;\\n  tmpvar_9 = sin(((\\n    (2.0 * tmpvar_2)\\n   + xlat_mutabledz) + vec2(1.0, 1.0)));\\n  vec2 tmpvar_10;\\n  tmpvar_10 = sin(((\\n    (2.0 * tmpvar_2)\\n   + \\n    (xlat_mutabledz * 1.2)\\n  ) + vec2(1.0, 1.0)));\\n  vec3 tmpvar_11;\\n  tmpvar_11.x = (0.1 / sqrt(dot (tmpvar_8, tmpvar_8)));\\n  tmpvar_11.y = (0.1 / sqrt(dot (tmpvar_9, tmpvar_9)));\\n  tmpvar_11.z = (0.1 / sqrt(dot (tmpvar_10, tmpvar_10)));\\n  ret_1 = ((tmpvar_11 - (tmpvar_7.xyz * 0.15)) + (tmpvar_7.y / 2.0));\\n  ret_1 = (ret_1 * (1.0 + ret_1));\\n  vec4 tmpvar_12;\\n  tmpvar_12.w = 1.0;\\n  tmpvar_12.xyz = ret_1;\\n  ret = tmpvar_12.xyz;\\n }"}')},9442:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.980001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"wave_mode":3,"additivewave":1,"wave_dots":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.002217,"wave_scale":0.092461,"wave_smoothing":0,"wave_mystery":-0.2,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1.4595,"warpscale":2.0067,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0,"ob_b":0.2,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_a":1,"mv_x":31.999998,"mv_y":24.000004,"mv_l":5,"mv_r":0.2999,"mv_g":0.4999,"mv_b":0.3999,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":15,"rad":0.084012,"tex_ang":0.5026,"tex_zoom":1.125188,"r":0.8,"b":0.8,"a":0.2,"g2":0,"a2":1,"border_r":0.7,"border_g":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = .5 + .2*sin(time/12);\\ny = .5 + .2*cos(time/17);\\n\\nr = .5 + .2*sin(time/31);\\ng = .5 + .2*sin(time/41);\\nb = .5 + .2*sin(time/17);\\nx =.5; y = .5;\\nrad = .05;\\na = .2; a2 = 0;"},{"baseVals":{"sides":63,"rad":0.022167,"tex_zoom":0.499805,"g":1,"b":1,"a":0.1,"r2":1,"b2":1,"a2":0.07,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.5;\\ny = 0.5;\\na = 0.03;\\na2 = 0.0;\\nrad = bass_att/20;"},{"baseVals":{"enabled":1,"sides":14,"additive":1,"textured":1,"x":0.59,"y":0,"rad":1.215236,"ang":0.062832,"tex_ang":0.879646,"tex_zoom":0.514935,"r":0.6,"g":0.5,"b":0.7,"a":0.1,"r2":0.7,"g2":0.5,"b2":0.6,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = .5+.3*cos(time/78);\\ny = .5+.3*sin(time/78);\\n\\ntex_zoom = .2 / (sin(time/31)+1.1)\\n\\n"},{"baseVals":{"enabled":1,"sides":63,"additive":1,"textured":1,"x":0.76,"y":0.75,"rad":0.686364,"ang":0.439823,"tex_ang":0.502655,"tex_zoom":0.6159,"r":0.7,"g":0.7,"b":0.7,"a":0.15,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = .5+.3*cos(time/59);\\ny = .5+.3 *sin(time/59);"}],"waves":[{"baseVals":{"samples":132,"sep":49,"usedots":1,"scaling":0.067077,"smoothing":0.82,"g":0.2,"b":0,"a":0.6,"enabled":0},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"t2 = t2 + bass_att;","point_eqs_eel":"k1 = (100*sample+time*2)%2;\\nk2 = (100*sample+time*5)%2;\\n\\nx = .5 + .5*sin(sample*76+time/337);\\ny = .5 + .5*sin(sample*126);\\n\\n\\nr = .4;\\ng = .8;\\nb = 1*k2;\\n\\na = .3*k1;"},{"baseVals":{"thick":1,"scaling":0.891519,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.891519,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"tm = time*.1;\\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\\n\\ntic = min(time - tin,1);\\ntin = time;\\n\\ntva = (tic*q1*.5);\\ntvb = (tic*q2*.5);\\ntvc = (tic*q3*.5);\\n\\nq1 = tva;\\nq2 = tvb;\\nq3 = tvc;\\n\\nsz = .5;\\nlen = 1;\\nt4 = len;","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"p1 = 2000; p2 = 200; p3=50;","frame_eqs_eel":"dec_med = pow (0.9, 30/fps);\\ndec_slow = pow (0.9, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %16;\\nindex2 = (index2 + is_beat*bnot(index))%5;\\nmonitor = index2;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass + mid + treb;\\n\\n\\nk1 =  is_beat*bnot(index)*bnot(index2);\\np1 =  (index2-2);\\n\\np2 = dec_med * p2+ (1-dec_med)*p1;\\np3 = dec_med * p3+ (1-dec_med)*p2;\\nrott =  rott +  .002*30/fps*p3;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\nmovex = movex*dec_slow + .1*q1*30/fps;\\nq9 = movex;\\n\\nmovez = movez + .01*30/fps*(p3+3);\\nq10 = movez;\\nq30 = .3* (sin(time/45) + 1.5);\\n\\nmv_x = 30;\\nmv_y = 20;\\nmv_a = .08*pow(30/fps,1) * (1+q22);\\nmv_l = 0;\\n\\nq32 = pow(0.98, 30/fps); //fade","pixel_eqs_eel":"zoom = 1;\\nwarp = .0 * (1-rad);\\nwarp = 0.05;","warp":"vec3 xlat_mutablemus;\\n shader_body { \\n  vec3 crisp_1;\\n  float tmpvar_2;\\n  tmpvar_2 = (dot (texture (sampler_noise_hq, (\\n    (q30 * uv)\\n   + \\n    (0.001 * time)\\n  )), vec4(0.32, 0.49, 0.29, 0.0)) * 3.14);\\n  mat2 tmpvar_3;\\n  tmpvar_3[uint(0)].x = cos(tmpvar_2);\\n  tmpvar_3[uint(0)].y = sin(tmpvar_2);\\n  tmpvar_3[1u].x = -(sin(tmpvar_2));\\n  tmpvar_3[1u].y = cos(tmpvar_2);\\n  xlat_mutablemus = (abs(vec3((0.2 / \\n    (sqrt(((\\n      (uv - 0.5)\\n     * aspect.xy) * tmpvar_3).y) + 0.2)\\n  ))) * vec3(1.0, 0.96, 0.9));\\n  xlat_mutablemus = (xlat_mutablemus * (vec3(1.0, 0.96, 0.9) + (0.1 * \\n    (texture (sampler_noise_lq, uv) - 0.5)\\n  .xyz)));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = ((texture (sampler_blur1, fract(uv)).xyz * scale1) + bias1);\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = dot ((texture (sampler_main, (uv + vec2(0.004, 0.0))) - texture (sampler_main, (uv - vec2(0.004, 0.0)))), vec4(0.32, 0.49, 0.29, 0.0));\\n  tmpvar_5.y = dot ((texture (sampler_main, (uv + vec2(0.0, 0.004))) - texture (sampler_main, (uv - vec2(0.0, 0.004)))), vec4(0.32, 0.49, 0.29, 0.0));\\n  crisp_1 = (texture (sampler_main, (uv + (tmpvar_5 * 0.02))).xyz + (0.5 * texture (sampler_main, uv)).xyz);\\n  crisp_1 = (crisp_1 * 0.667);\\n  crisp_1 = (crisp_1 + (vec3(0.018, 0.018, 0.018) - (\\n    sqrt(dot (tmpvar_5, tmpvar_5))\\n   * tmpvar_4)));\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = (((\\n    (crisp_1 - (tmpvar_4 * 0.03))\\n   + \\n    (0.04 * xlat_mutablemus)\\n  ) * 0.99) - 0.04);\\n  ret = tmpvar_6.xyz;\\n }","comp":"float xlat_mutabledist;\\nfloat xlat_mutabledist2;\\nfloat xlat_mutableinten;\\nfloat xlat_mutablem;\\nfloat xlat_mutablemask;\\nvec3 xlat_mutableret1;\\nvec2 xlat_mutableuv2;\\n shader_body { \\n  vec2 uv_1;\\n  uv_1 = (uv - 0.5);\\n  uv_1 = (uv_1 * aspect.xy);\\n  mat2 tmpvar_2;\\n  tmpvar_2[uint(0)] = _qa.xy;\\n  tmpvar_2[1u] = _qa.zw;\\n  uv_1 = (uv_1 * tmpvar_2);\\n  int tmpvar_3;\\n  tmpvar_3 = int(q10);\\n  xlat_mutablem = (1.0 - float(tmpvar_3));\\n  float tmpvar_4;\\n  tmpvar_4 = -(q10);\\n  xlat_mutabledist = (1.0 - fract((0.25 - \\n    (fract(tmpvar_4) / 4.0)\\n  )));\\n  xlat_mutableuv2 = ((uv_1 * (float(mod (xlat_mutablem, 2.0)))) + (uv_1.yx * (float(mod (\\n    (xlat_mutablem + 1.0)\\n  , 2.0)))));\\n  xlat_mutabledist2 = (xlat_mutabledist * xlat_mutabledist);\\n  xlat_mutableinten = ((3.0 * sqrt(xlat_mutabledist)) * (1.0 - (xlat_mutabledist * xlat_mutabledist)));\\n  xlat_mutableuv2 = (((\\n    (4.0 * xlat_mutableuv2)\\n   * xlat_mutabledist) + (0.35 * xlat_mutablem)) + (q9 * xlat_mutabledist2));\\n  xlat_mutableret1 = (texture (sampler_main, xlat_mutableuv2).xyz * xlat_mutableinten);\\n  xlat_mutablem = (2.0 - float(tmpvar_3));\\n  xlat_mutabledist = (1.0 - fract((0.5 - \\n    (fract(tmpvar_4) / 4.0)\\n  )));\\n  xlat_mutableuv2 = ((uv_1 * (float(mod (xlat_mutablem, 2.0)))) + (uv_1.yx * (float(mod (\\n    (xlat_mutablem + 1.0)\\n  , 2.0)))));\\n  xlat_mutabledist2 = (xlat_mutabledist * xlat_mutabledist);\\n  xlat_mutableinten = ((3.0 * sqrt(xlat_mutabledist)) * (1.0 - (xlat_mutabledist * xlat_mutabledist)));\\n  xlat_mutableuv2 = (((\\n    (4.0 * xlat_mutableuv2)\\n   * xlat_mutabledist) + (0.35 * xlat_mutablem)) + (q9 * xlat_mutabledist2));\\n  vec4 tmpvar_5;\\n  tmpvar_5 = texture (sampler_main, xlat_mutableuv2);\\n  xlat_mutablemask = (1.0 - ((0.9 * \\n    clamp ((8.0 * xlat_mutabledist), 0.0, 1.0)\\n  ) * clamp (\\n    (64.0 * tmpvar_5.xyz)\\n  , 0.0, 1.0))).x;\\n  xlat_mutableret1 = ((xlat_mutableret1 * xlat_mutablemask) + (tmpvar_5.xyz * xlat_mutableinten));\\n  xlat_mutablem = (3.0 - float(tmpvar_3));\\n  xlat_mutabledist = (1.0 - fract((0.75 - \\n    (fract(tmpvar_4) / 4.0)\\n  )));\\n  xlat_mutableuv2 = ((uv_1 * (float(mod (xlat_mutablem, 2.0)))) + (uv_1.yx * (float(mod (\\n    (xlat_mutablem + 1.0)\\n  , 2.0)))));\\n  xlat_mutabledist2 = (xlat_mutabledist * xlat_mutabledist);\\n  xlat_mutableinten = ((3.0 * sqrt(xlat_mutabledist)) * (1.0 - (xlat_mutabledist * xlat_mutabledist)));\\n  xlat_mutableuv2 = (((\\n    (4.0 * xlat_mutableuv2)\\n   * xlat_mutabledist) + (0.35 * xlat_mutablem)) + (q9 * xlat_mutabledist2));\\n  vec4 tmpvar_6;\\n  tmpvar_6 = texture (sampler_main, xlat_mutableuv2);\\n  xlat_mutablemask = (1.0 - ((0.9 * \\n    clamp ((8.0 * xlat_mutabledist), 0.0, 1.0)\\n  ) * clamp (\\n    (64.0 * tmpvar_6.xyz)\\n  , 0.0, 1.0))).x;\\n  xlat_mutableret1 = ((xlat_mutableret1 * xlat_mutablemask) + (tmpvar_6.xyz * xlat_mutableinten));\\n  xlat_mutablem = (4.0 - float(tmpvar_3));\\n  xlat_mutabledist = (1.0 - fract((1.0 - \\n    (fract(tmpvar_4) / 4.0)\\n  )));\\n  xlat_mutableuv2 = ((uv_1 * (float(mod (xlat_mutablem, 2.0)))) + (uv_1.yx * (float(mod (\\n    (xlat_mutablem + 1.0)\\n  , 2.0)))));\\n  xlat_mutabledist2 = (xlat_mutabledist * xlat_mutabledist);\\n  xlat_mutableinten = ((3.0 * sqrt(xlat_mutabledist)) * (1.0 - (xlat_mutabledist * xlat_mutabledist)));\\n  xlat_mutableuv2 = (((\\n    (4.0 * xlat_mutableuv2)\\n   * xlat_mutabledist) + (0.35 * xlat_mutablem)) + (q9 * xlat_mutabledist2));\\n  vec4 tmpvar_7;\\n  tmpvar_7 = texture (sampler_main, xlat_mutableuv2);\\n  xlat_mutablemask = (1.0 - ((0.9 * \\n    clamp ((8.0 * xlat_mutabledist), 0.0, 1.0)\\n  ) * clamp (\\n    (64.0 * tmpvar_7.xyz)\\n  , 0.0, 1.0))).x;\\n  xlat_mutableret1 = ((xlat_mutableret1 * xlat_mutablemask) + (tmpvar_7.xyz * xlat_mutableinten));\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = (1.8 * xlat_mutableret1);\\n  ret = tmpvar_8.xyz;\\n }"}')},1154:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":2,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":6,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken_center":1,"darken":1,"wave_a":0.001,"wave_scale":0.236,"wave_smoothing":0,"wave_mystery":-0.64,"modwavealphastart":0.81,"modwavealphaend":1.4,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_b":0.6,"ob_size":0.005,"ob_a":0.8,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":18,"num_inst":4,"x":0.83,"rad":0.14349,"tex_ang":3.76991,"tex_zoom":5.27784,"r":0,"g":1,"b":1,"a":0.5,"r2":1,"g2":0.2,"b2":1,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"d = .3+(frame%8)/8*.2;\\n//d = .3;\\nk1 = instance/num_inst*6.28;\\nd = .3 + q22/8 ;\\n\\nx = .5 + d*cos(k1);\\ny = .5 + d*sin(k1);\\n\\na = min(1, .2+ .8*q22/2*((q27)%2));\\na2 = 0;\\nr = .6 + .4*sin(time/4+1.56);\\nb = .6 + .4*sin(time/4+3.14);\\ng = .6 + .4*sin(time/4);\\n\\nr0 = r0 * bnot(q24) + (.5+.5*sin(time))*q24;\\ng0 = g0 * bnot(q24) + (.5+.5*sin(time*1.7))*q24;\\nb0 = (2-r0-g0)/2;\\n\\nr = r0;\\nb = b0;\\ng = g0;\\n\\nr2 = 1-g;\\ng2 = 1-b;\\nb2 = 1-r;"},{"baseVals":{"sides":32,"num_inst":4,"rad":0.16218,"tex_zoom":1.8315,"g":1,"b":1,"a":0.9,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"a = q24/2; a2 = 0;\\na = min(1, .2+ .8*q22/2*((q27)%2));\\n\\nr = rand(10)/10;\\ng = rand(10)/10;\\nb = rand(10)/10;\\n\\nrad = .06*q22;\\n\\n\\n\\n\\nd = .3+(frame%8)/8*.2;\\nd = .3 + q22/12;\\n\\nx = .5 + d*cos(6.28*instance/num_inst);\\ny = .5 + d*sin(6.28*instance/num_inst);\\na = min(1, .2+ .8*q22/2*((q27)%2));\\nb = 1; g = 1; "},{"baseVals":{"sides":63,"textured":1,"rad":8.85459,"tex_zoom":0.03204,"g":1,"b":1,"a":0.4,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"x":0.4,"rad":0.14741,"tex_zoom":1.59918,"g":0.4,"r2":1,"g2":0.6,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"a = q24*.3;"}],"waves":[{"baseVals":{"enabled":1,"samples":128,"scaling":0.89152,"smoothing":0},"init_eqs_eel":"","frame_eqs_eel":"t1 = t1 * bnot(q24) + (.5+.5*sin(time))*q24;\\nt2 = t2 * bnot(q24) + (.5+.5*sin(time*1.7))*q24;","point_eqs_eel":"x = sample ;\\ny = .5;\\n\\na = q22*((q27+1)%2);\\n//a = 1;\\na = q24*((q27+1)%2)/2+.0;\\n\\nr = t1; b = t2; g = (2-r0-g0)/2;\\n;"},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ra = .8;\\nrb = .5;\\npib = 6.28318530718;\\n\\n\\ntic = min(time-tin,.1);\\ntin = if(equal(sample,0),time,tin);\\n\\nmod = 1.5 + .5*sin(time*.15);\\nmed = 1.5 + .5*sin(time*.134);\\nmed = 5;\\namod = 3;\\n\\nvr = rand(10001)*.0001;\\nrb = rb + rand(10001)*.0001*.1;\\n\\na = vr;\\n\\nsa = vr*pib*.5;\\nsp = sa*mod + q1*1.3;\\nsam = sa*med - q1*.219;\\n\\nox = ra*sin(sam*pib);\\noy = ra*cos(sam*pib);\\nox = ox + rb*-cos(sp)*sin(sam*pib);\\noz = rb*-sin(sp);\\noy = oy + rb*-cos(sp)*cos(sam*pib);\\n\\n\\nxang = time*.132;\\nxang = q2;\\nyang = time*.153;\\nyang = q3;\\nzang = time*.110;\\nzang = q4;\\nfov = 0.6 + 0.2*sin(time);\\nfov = .5;\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = -ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\noz = oz - 2;\\nx = ox*fov/oz + 0.5;\\nx = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;\\n"}],"init_eqs_eel":"speed_=1;","frame_eqs_eel":"dec_med = pow (0.9, 30/fps);\\ndec_slow = pow (0.96, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, 0.2+avg+peak) * above (time, t0+.1);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %12;\\nindex2 = (index2 + is_beat*bnot(index))%8;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq24 = is_beat;\\nvol = (bass_att + mid_att + treb_att)/2;\\nvol_ = dec_med * vol_ + (1-dec_med)* vol;\\nvol__ = dec_med * vol__ + (1-dec_med)* vol_;\\nq27 = index + 1;\\nq28 = index2 + 2;\\n\\nk1 =  is_beat*equal(index%4,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.1416/4;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\ntrig = q24 * bnot(index%8);\\nvx = vx*bnot(trig) + trig* (rand(100)/100-.5);\\nvy = vy*bnot(trig) + trig* (rand(100)/100-.5);\\nvz = vz*bnot(trig) + trig* (rand(100)/100-.5);\\n\\nspeed = min(vol_-vol__+.5,1);\\nspeed = max(speed,-.5);\\nspeed_ = bnot(trig)*speed_ + trig*speed;\\nspg = dec_med*spg + (1-dec_med)*speed_;\\nmovz = movz + 1/fps*(speed_+0*vol_/6);\\nq9 = movz;\\nq12 = min(q22,6)*2;\\n\\n//puls = puls*dec_med + (1-dec_med)*q22;\\n\\nq13 = 2* sin(movz/3-time/11);\\n\\ntrig = bnot(index%4) * q24;\\ndir = bnot(trig)*dir + trig*(rand(10)-5);\\ntrel = trel + .1/fps*dir;\\nq5 = cos(trel-movz);\\nq6 = sin(trel/2-movz);\\nq7 = -q6;\\nq8 = q5;\\n\\nang0 = ang0*dec_med + vz*(1-dec_med);\\nq17 = ang0*2; \\nq30 = .2*sin(time/8);\\n\\nq31 = .5 + .5*sin(time/3.3);\\n\\nzoom = 1;\\nrot = .0;\\ndx = .00;\\nmonitor = q28;","pixel_eqs_eel":"","warp":"vec3 xlat_mutablemus;\\n shader_body { \\n  vec2 d_1;\\n  vec2 uv6_2;\\n  vec2 uv1_3;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (uv - 0.5);\\n  uv1_3 = tmpvar_4;\\n  uv6_2 = tmpvar_4;\\n  float x_5;\\n  x_5 = (abs(tmpvar_4.x) - abs(tmpvar_4.y));\\n  float tmpvar_6;\\n  tmpvar_6 = (12.0 * sqrt((x_5 * x_5)));\\n  vec2 tmpvar_7;\\n  tmpvar_7 = normalize(tmpvar_4);\\n  d_1 = tmpvar_7;\\n  float tmpvar_8;\\n  tmpvar_8 = (float(mod (q28, 2.0)));\\n  if ((tmpvar_8 == 0.0)) {\\n    d_1 = ((q1 * tmpvar_7) - (q2 / tmpvar_7));\\n  };\\n  uv1_3 = (tmpvar_4 + ((-0.06 * \\n    dot (((texture (sampler_blur1, uv).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29))\\n  ) * normalize(tmpvar_4)));\\n  uv1_3 = (uv1_3 - (clamp (\\n    ((sin(tmpvar_6) / cos(tmpvar_6)) * d_1)\\n  , vec2(-4.0, -4.0), vec2(4.0, 4.0)) / 60.0));\\n  uv6_2 = (0.4 * cos((\\n    (uv1_3 * 2.0)\\n   * q28)));\\n  xlat_mutablemus = (clamp (vec3((0.0006 / \\n    (sqrt(dot (uv6_2, uv6_2)) - (0.002 * (q27 + (8.0 * q28))))\\n  )), 0.0, 1.0) * q31);\\n  xlat_mutablemus = (xlat_mutablemus * (1.0 + roam_cos).xyz);\\n  vec4 tmpvar_9;\\n  tmpvar_9.w = 1.0;\\n  tmpvar_9.xyz = ((0.4 * (\\n    ((texture (sampler_main, ((uv1_3 * \\n      (0.8 + (0.2 * tmpvar_6))\\n    ) + 0.5)).xyz + xlat_mutablemus) * 0.95)\\n   - 0.025)) + (0.6 * texture (sampler_main, uv_orig)).xyz);\\n  ret = tmpvar_9.xyz;\\n }","comp":"vec3 xlat_mutableneu;\\nvec3 xlat_mutableret2;\\nvec2 xlat_mutablers0;\\nvec2 xlat_mutablerss;\\nvec2 xlat_mutableuv2;\\n shader_body { \\n  vec2 uv_1;\\n  vec2 ofs_2;\\n  vec3 ret1_3;\\n  vec2 uv5_4;\\n  uv_1 = ((uv - 0.5) * aspect.xy);\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = q5;\\n  tmpvar_5.y = q6;\\n  uv_1 = (uv_1 + (tmpvar_5 / 4.0));\\n  uv5_4 = uv_1;\\n  mat2 tmpvar_6;\\n  tmpvar_6[uint(0)] = _qb.xy;\\n  tmpvar_6[1u] = _qb.zw;\\n  uv_1 = (uv_1 * tmpvar_6);\\n  float tmpvar_7;\\n  float tmpvar_8;\\n  tmpvar_8 = (min (abs(\\n    (uv5_4.y / uv5_4.x)\\n  ), 1.0) / max (abs(\\n    (uv5_4.y / uv5_4.x)\\n  ), 1.0));\\n  float tmpvar_9;\\n  tmpvar_9 = (tmpvar_8 * tmpvar_8);\\n  tmpvar_9 = (((\\n    ((((\\n      ((((-0.01213232 * tmpvar_9) + 0.05368138) * tmpvar_9) - 0.1173503)\\n     * tmpvar_9) + 0.1938925) * tmpvar_9) - 0.3326756)\\n   * tmpvar_9) + 0.9999793) * tmpvar_8);\\n  tmpvar_9 = (tmpvar_9 + (float(\\n    (abs((uv5_4.y / uv5_4.x)) > 1.0)\\n  ) * (\\n    (tmpvar_9 * -2.0)\\n   + 1.570796)));\\n  tmpvar_7 = (tmpvar_9 * sign((uv5_4.y / uv5_4.x)));\\n  if ((abs(uv5_4.x) > (1e-08 * abs(uv5_4.y)))) {\\n    if ((uv5_4.x < 0.0)) {\\n      if ((uv5_4.y >= 0.0)) {\\n        tmpvar_7 += 3.141593;\\n      } else {\\n        tmpvar_7 = (tmpvar_7 - 3.141593);\\n      };\\n    };\\n  } else {\\n    tmpvar_7 = (sign(uv5_4.y) * 1.570796);\\n  };\\n  xlat_mutablers0.x = (((tmpvar_7 / 3.1416) * 6.0) * q28);\\n  float tmpvar_10;\\n  tmpvar_10 = (16.0 * log(inversesqrt(\\n    dot (uv_1, uv_1)\\n  )));\\n  xlat_mutablers0.y = tmpvar_10;\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = (xlat_mutablers0.x + (q9 * 4.0));\\n  tmpvar_11.y = (tmpvar_10 + ((q9 * q28) * 4.0));\\n  xlat_mutablerss = (tmpvar_11 / 12.0);\\n  vec2 tmpvar_12;\\n  tmpvar_12.x = q5;\\n  tmpvar_12.y = q6;\\n  ofs_2 = (0.1 * tmpvar_12.yx);\\n  float tmpvar_13;\\n  float tmpvar_14;\\n  tmpvar_14 = -(q9);\\n  tmpvar_13 = fract(tmpvar_14);\\n  mat2 tmpvar_15;\\n  tmpvar_15[uint(0)].x = 1.0;\\n  tmpvar_15[uint(0)].y = -0.0;\\n  tmpvar_15[1u].x = 0.0;\\n  tmpvar_15[1u].y = 1.0;\\n  xlat_mutableuv2 = ((uv_1 * (\\n    (q13 * tmpvar_13)\\n   * tmpvar_15)) * aspect.yx);\\n  xlat_mutableneu = (3.0 * texture (sampler_main, fract((\\n    (xlat_mutableuv2 + 0.5)\\n   + ofs_2)))).xyz;\\n  ret1_3 = max (vec3(0.0, 0.0, 0.0), (xlat_mutableneu * (1.0 - \\n    (tmpvar_13 * tmpvar_13)\\n  )));\\n  float tmpvar_16;\\n  tmpvar_16 = fract((tmpvar_14 + 0.3333333));\\n  mat2 tmpvar_17;\\n  tmpvar_17[uint(0)].x = -0.4990803;\\n  tmpvar_17[uint(0)].y = -0.8665558;\\n  tmpvar_17[1u].x = 0.8665558;\\n  tmpvar_17[1u].y = -0.4990803;\\n  xlat_mutableuv2 = ((uv_1 * (\\n    (q13 * tmpvar_16)\\n   * tmpvar_17)) * aspect.yx);\\n  xlat_mutableneu = (3.0 * texture (sampler_main, fract((\\n    (xlat_mutableuv2 + 0.5)\\n   + ofs_2)))).xyz;\\n  ret1_3 = max (ret1_3, (xlat_mutableneu * (1.0 - \\n    (tmpvar_16 * tmpvar_16)\\n  )));\\n  float tmpvar_18;\\n  tmpvar_18 = fract((tmpvar_14 + 0.6666667));\\n  mat2 tmpvar_19;\\n  tmpvar_19[uint(0)].x = -0.5018377;\\n  tmpvar_19[uint(0)].y = 0.8649619;\\n  tmpvar_19[1u].x = -0.8649619;\\n  tmpvar_19[1u].y = -0.5018377;\\n  xlat_mutableuv2 = ((uv_1 * (\\n    (q13 * tmpvar_18)\\n   * tmpvar_19)) * aspect.yx);\\n  xlat_mutableneu = (3.0 * texture (sampler_main, fract((\\n    (xlat_mutableuv2 + 0.5)\\n   + ofs_2)))).xyz;\\n  ret1_3 = max (ret1_3, (xlat_mutableneu * (1.0 - \\n    (tmpvar_18 * tmpvar_18)\\n  )));\\n  float tmpvar_20;\\n  tmpvar_20 = fract((tmpvar_14 + 1.0));\\n  mat2 tmpvar_21;\\n  tmpvar_21[uint(0)].x = 0.9999949;\\n  tmpvar_21[uint(0)].y = 0.003185092;\\n  tmpvar_21[1u].x = -0.003185092;\\n  tmpvar_21[1u].y = 0.9999949;\\n  xlat_mutableuv2 = ((uv_1 * (\\n    (q13 * tmpvar_20)\\n   * tmpvar_21)) * aspect.yx);\\n  xlat_mutableneu = (3.0 * texture (sampler_main, fract((\\n    (xlat_mutableuv2 + 0.5)\\n   + ofs_2)))).xyz;\\n  ret1_3 = max (ret1_3, (xlat_mutableneu * (1.0 - \\n    (tmpvar_20 * tmpvar_20)\\n  )));\\n  vec2 tmpvar_22;\\n  tmpvar_22.x = (ret1_3.x + ret1_3.z);\\n  tmpvar_22.y = (ret1_3.x - ret1_3.y);\\n  xlat_mutableret2 = (((\\n    (texture (sampler_blur1, fract((xlat_mutablerss + (tmpvar_22 / 2.0)))).xyz * scale1)\\n   + bias1) / tmpvar_10) * 64.0);\\n  vec4 tmpvar_23;\\n  tmpvar_23.w = 1.0;\\n  tmpvar_23.xyz = ((ret1_3 + (\\n    ((bass_att * 0.004) / sqrt(dot (uv_1, uv_1)))\\n   * roam_sin).xyz) + (sqrt(xlat_mutableret2.zxy) * clamp (\\n    (1.0 - (ret1_3 * 4.0))\\n  , 0.0, 1.0)));\\n  ret = tmpvar_23.xyz;\\n }"}')},8999:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":4,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":6,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken_center":1,"darken":1,"wave_a":0.001,"wave_scale":0.236,"wave_smoothing":0,"wave_mystery":-0.64,"modwavealphastart":0.81,"modwavealphaend":1.4,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_b":0.6,"ob_size":0.005,"ob_a":0.8,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":18,"num_inst":4,"x":0.83,"rad":0.14349,"tex_ang":3.76991,"tex_zoom":5.27784,"r":0,"g":1,"b":1,"a":0.5,"r2":1,"g2":0.2,"b2":1,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"d = .3+(frame%8)/8*.2;\\n//d = .3;\\nk1 = instance/num_inst*6.28;\\nd = .3 + q22/8 ;\\n\\nx = .5 + d*cos(k1);\\ny = .5 + d*sin(k1);\\n\\na = min(1, .2+ .8*q22/2*((q27)%2));\\na2 = 0;\\nr = .6 + .4*sin(time/4+1.56);\\nb = .6 + .4*sin(time/4+3.14);\\ng = .6 + .4*sin(time/4);\\n\\nr0 = r0 * bnot(q24) + (.5+.5*sin(time))*q24;\\ng0 = g0 * bnot(q24) + (.5+.5*sin(time*1.7))*q24;\\nb0 = (2-r0-g0)/2;\\n\\nr = r0;\\nb = b0;\\ng = g0;\\n\\nr2 = 1-g;\\ng2 = 1-b;\\nb2 = 1-r;"},{"baseVals":{"sides":32,"num_inst":4,"rad":0.16218,"tex_zoom":1.8315,"g":1,"b":1,"a":0.9,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"a = q24/2; a2 = 0;\\na = min(1, .2+ .8*q22/2*((q27)%2));\\n\\nr = rand(10)/10;\\ng = rand(10)/10;\\nb = rand(10)/10;\\n\\nrad = .06*q22;\\n\\n\\n\\n\\nd = .3+(frame%8)/8*.2;\\nd = .3 + q22/12;\\n\\nx = .5 + d*cos(6.28*instance/num_inst);\\ny = .5 + d*sin(6.28*instance/num_inst);\\na = min(1, .2+ .8*q22/2*((q27)%2));\\nb = 1; g = 1;"},{"baseVals":{"sides":63,"textured":1,"rad":8.85459,"tex_zoom":0.03204,"g":1,"b":1,"a":0.4,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"x":0.4,"rad":0.14741,"tex_zoom":1.59918,"g":0.4,"r2":1,"g2":0.6,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"a = q24*.3;"}],"waves":[{"baseVals":{"enabled":1,"samples":128,"scaling":0.89152,"smoothing":0},"init_eqs_eel":"","frame_eqs_eel":"t1 = t1 * bnot(q24) + (.5+.5*sin(time))*q24;\\nt2 = t2 * bnot(q24) + (.5+.5*sin(time*1.7))*q24;","point_eqs_eel":"x = sample ;\\ny = .5;\\n\\na = q22*((q27+1)%2);\\n//a = 1;\\na = q24*((q27+1)%2)/2+.0;\\n\\nr = t1; b = t2; g = (2-r0-g0)/2;\\n;"},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ra = .8;\\nrb = .5;\\npib = 6.28318530718;\\n\\n\\ntic = min(time-tin,.1);\\ntin = if(equal(sample,0),time,tin);\\n\\nmod = 1.5 + .5*sin(time*.15);\\nmed = 1.5 + .5*sin(time*.134);\\nmed = 5;\\namod = 3;\\n\\nvr = rand(10001)*.0001;\\nrb = rb + rand(10001)*.0001*.1;\\n\\na = vr;\\n\\nsa = vr*pib*.5;\\nsp = sa*mod + q1*1.3;\\nsam = sa*med - q1*.219;\\n\\nox = ra*sin(sam*pib);\\noy = ra*cos(sam*pib);\\nox = ox + rb*-cos(sp)*sin(sam*pib);\\noz = rb*-sin(sp);\\noy = oy + rb*-cos(sp)*cos(sam*pib);\\n\\n\\nxang = time*.132;\\nxang = q2;\\nyang = time*.153;\\nyang = q3;\\nzang = time*.110;\\nzang = q4;\\nfov = 0.6 + 0.2*sin(time);\\nfov = .5;\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = -ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\noz = oz - 2;\\nx = ox*fov/oz + 0.5;\\nx = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;\\n"}],"init_eqs_eel":"speed_=1;","frame_eqs_eel":"dec_med = pow (0.9, 30/fps);\\ndec_slow = pow (0.96, 30/fps);\\nbeat = max (max (bass, mid), treb);\\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, 0.2+avg+peak) * above (time, t0+.1);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %12;\\nindex2 = (index2 + is_beat*bnot(index))%8;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq24 = is_beat;\\nvol = (bass_att + mid_att + treb_att)/2;\\nvol_ = dec_med * vol_ + (1-dec_med)* vol;\\nvol__ = dec_med * vol__ + (1-dec_med)* vol_;\\nq27 = index + 1;\\nq28 = index2 + 2;\\n\\nk1 =  is_beat*equal(index%4,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.1416/4;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\ntrig = q24 * bnot(index%8);\\nvx = vx*bnot(trig) + trig* (rand(100)/100-.5);\\nvy = vy*bnot(trig) + trig* (rand(100)/100-.5);\\nvz = vz*bnot(trig) + trig* (rand(100)/100-.5);\\n\\nspeed = min(vol_-vol__+.5,1);\\nspeed = max(speed,-.5);\\nspeed_ = bnot(trig)*speed_ + trig*speed;\\nspg = dec_med*spg + (1-dec_med)*speed_;\\nmovz = movz + 1/fps*(speed_+0*vol_/6);\\nq9 = movz;\\nq12 = min(q22,6)*2;\\n\\n//puls = puls*dec_med + (1-dec_med)*q22;\\n\\nq13 = 2* sin(movz/3-time/11);\\n\\ntrig = bnot(index%4) * q24;\\ndir = bnot(trig)*dir + trig*(rand(10)-5);\\ntrel = trel + .1/fps*dir;\\nq5 = cos(trel-movz);\\nq6 = sin(trel/2-movz);\\nq7 = -q6;\\nq8 = q5;\\n\\nang0 = ang0*dec_med + vz*(1-dec_med);\\nq17 = ang0*2;\\nq30 = .2*sin(time/8);\\n\\nq31 = .5 + .5*sin(time/3.3);\\n\\nzoom = 1;\\nrot = .0;\\ndx = .00;\\nmonitor = q28;","pixel_eqs_eel":"","warp":"vec3 xlat_mutablemus;\\n shader_body { \\n  vec2 d_1;\\n  vec2 uv6_2;\\n  vec2 uv1_3;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (uv - 0.5);\\n  uv1_3 = tmpvar_4;\\n  uv6_2 = tmpvar_4;\\n  float x_5;\\n  x_5 = (abs(tmpvar_4.x) - abs(tmpvar_4.y));\\n  float tmpvar_6;\\n  tmpvar_6 = (12.0 * sqrt((x_5 * x_5)));\\n  vec2 tmpvar_7;\\n  tmpvar_7 = normalize(tmpvar_4);\\n  d_1 = tmpvar_7;\\n  float tmpvar_8;\\n  tmpvar_8 = (float(mod (q28, 2.0)));\\n  if ((tmpvar_8 == 0.0)) {\\n    d_1 = ((q1 * tmpvar_7) - (q2 / tmpvar_7));\\n  };\\n  uv1_3 = (tmpvar_4 + ((-0.06 * \\n    dot (((texture (sampler_blur1, uv).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29))\\n  ) * normalize(tmpvar_4)));\\n  uv1_3 = (uv1_3 - (clamp (\\n    ((sin(tmpvar_6) / cos(tmpvar_6)) * d_1)\\n  , vec2(-4.0, -4.0), vec2(4.0, 4.0)) / 60.0));\\n  uv6_2 = (0.4 * cos((\\n    (uv1_3 * 2.0)\\n   * q28)));\\n  xlat_mutablemus = (clamp (vec3((0.0006 / \\n    (sqrt(dot (uv6_2, uv6_2)) - (0.002 * (q27 + (8.0 * q28))))\\n  )), 0.0, 1.0) * q31);\\n  xlat_mutablemus = (xlat_mutablemus * (1.0 + roam_cos).xyz);\\n  vec4 tmpvar_9;\\n  tmpvar_9.w = 1.0;\\n  tmpvar_9.xyz = ((0.4 * (\\n    ((texture (sampler_main, ((uv1_3 * \\n      (0.8 + (0.2 * tmpvar_6))\\n    ) + 0.5)).xyz + xlat_mutablemus) * 0.95)\\n   - 0.025)) + (0.6 * texture (sampler_main, uv_orig)).xyz);\\n  ret = tmpvar_9.xyz;\\n }","comp":"vec3 xlat_mutableneu;\\nvec3 xlat_mutableret2;\\nvec2 xlat_mutablers0;\\nvec2 xlat_mutablerss;\\nvec2 xlat_mutableuv2;\\n shader_body { \\n  vec2 uv_1;\\n  vec2 ofs_2;\\n  vec3 ret1_3;\\n  vec2 uv5_4;\\n  uv_1 = ((uv - 0.5) * aspect.xy);\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = q5;\\n  tmpvar_5.y = q6;\\n  uv_1 = (uv_1 + (tmpvar_5 / 4.0));\\n  uv5_4 = uv_1;\\n  mat2 tmpvar_6;\\n  tmpvar_6[uint(0)] = _qb.xy;\\n  tmpvar_6[1u] = _qb.zw;\\n  uv_1 = (uv_1 * tmpvar_6);\\n  float tmpvar_7;\\n  float tmpvar_8;\\n  tmpvar_8 = (min (abs(\\n    (uv5_4.y / uv5_4.x)\\n  ), 1.0) / max (abs(\\n    (uv5_4.y / uv5_4.x)\\n  ), 1.0));\\n  float tmpvar_9;\\n  tmpvar_9 = (tmpvar_8 * tmpvar_8);\\n  tmpvar_9 = (((\\n    ((((\\n      ((((-0.01213232 * tmpvar_9) + 0.05368138) * tmpvar_9) - 0.1173503)\\n     * tmpvar_9) + 0.1938925) * tmpvar_9) - 0.3326756)\\n   * tmpvar_9) + 0.9999793) * tmpvar_8);\\n  tmpvar_9 = (tmpvar_9 + (float(\\n    (abs((uv5_4.y / uv5_4.x)) > 1.0)\\n  ) * (\\n    (tmpvar_9 * -2.0)\\n   + 1.570796)));\\n  tmpvar_7 = (tmpvar_9 * sign((uv5_4.y / uv5_4.x)));\\n  if ((abs(uv5_4.x) > (1e-08 * abs(uv5_4.y)))) {\\n    if ((uv5_4.x < 0.0)) {\\n      if ((uv5_4.y >= 0.0)) {\\n        tmpvar_7 += 3.141593;\\n      } else {\\n        tmpvar_7 = (tmpvar_7 - 3.141593);\\n      };\\n    };\\n  } else {\\n    tmpvar_7 = (sign(uv5_4.y) * 1.570796);\\n  };\\n  xlat_mutablers0.x = (((tmpvar_7 / 3.1416) * 6.0) * q28);\\n  float tmpvar_10;\\n  tmpvar_10 = (1.5 / sqrt(dot (uv_1, uv_1)));\\n  xlat_mutablers0.y = tmpvar_10;\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = (xlat_mutablers0.x + (q9 * 4.0));\\n  tmpvar_11.y = (tmpvar_10 + ((q9 * q28) * 4.0));\\n  xlat_mutablerss = (tmpvar_11 / 12.0);\\n  vec2 tmpvar_12;\\n  tmpvar_12.x = q5;\\n  tmpvar_12.y = q6;\\n  ofs_2 = (0.1 * tmpvar_12.yx);\\n  float tmpvar_13;\\n  float tmpvar_14;\\n  tmpvar_14 = -(q9);\\n  tmpvar_13 = fract(tmpvar_14);\\n  mat2 tmpvar_15;\\n  tmpvar_15[uint(0)].x = 1.0;\\n  tmpvar_15[uint(0)].y = -0.0;\\n  tmpvar_15[1u].x = 0.0;\\n  tmpvar_15[1u].y = 1.0;\\n  xlat_mutableuv2 = ((uv_1 * (\\n    (q13 * tmpvar_13)\\n   * tmpvar_15)) * aspect.yx);\\n  xlat_mutableneu = (3.0 * texture (sampler_main, fract((\\n    (xlat_mutableuv2 + 0.5)\\n   + ofs_2)))).xyz;\\n  ret1_3 = max (vec3(0.0, 0.0, 0.0), (xlat_mutableneu * (1.0 - \\n    (tmpvar_13 * tmpvar_13)\\n  )));\\n  float tmpvar_16;\\n  tmpvar_16 = fract((tmpvar_14 + 0.3333333));\\n  mat2 tmpvar_17;\\n  tmpvar_17[uint(0)].x = -0.4990803;\\n  tmpvar_17[uint(0)].y = -0.8665558;\\n  tmpvar_17[1u].x = 0.8665558;\\n  tmpvar_17[1u].y = -0.4990803;\\n  xlat_mutableuv2 = ((uv_1 * (\\n    (q13 * tmpvar_16)\\n   * tmpvar_17)) * aspect.yx);\\n  xlat_mutableneu = (3.0 * texture (sampler_main, fract((\\n    (xlat_mutableuv2 + 0.5)\\n   + ofs_2)))).xyz;\\n  ret1_3 = max (ret1_3, (xlat_mutableneu * (1.0 - \\n    (tmpvar_16 * tmpvar_16)\\n  )));\\n  float tmpvar_18;\\n  tmpvar_18 = fract((tmpvar_14 + 0.6666667));\\n  mat2 tmpvar_19;\\n  tmpvar_19[uint(0)].x = -0.5018377;\\n  tmpvar_19[uint(0)].y = 0.8649619;\\n  tmpvar_19[1u].x = -0.8649619;\\n  tmpvar_19[1u].y = -0.5018377;\\n  xlat_mutableuv2 = ((uv_1 * (\\n    (q13 * tmpvar_18)\\n   * tmpvar_19)) * aspect.yx);\\n  xlat_mutableneu = (3.0 * texture (sampler_main, fract((\\n    (xlat_mutableuv2 + 0.5)\\n   + ofs_2)))).xyz;\\n  ret1_3 = max (ret1_3, (xlat_mutableneu * (1.0 - \\n    (tmpvar_18 * tmpvar_18)\\n  )));\\n  float tmpvar_20;\\n  tmpvar_20 = fract((tmpvar_14 + 1.0));\\n  mat2 tmpvar_21;\\n  tmpvar_21[uint(0)].x = 0.9999949;\\n  tmpvar_21[uint(0)].y = 0.003185092;\\n  tmpvar_21[1u].x = -0.003185092;\\n  tmpvar_21[1u].y = 0.9999949;\\n  xlat_mutableuv2 = ((uv_1 * (\\n    (q13 * tmpvar_20)\\n   * tmpvar_21)) * aspect.yx);\\n  xlat_mutableneu = (3.0 * texture (sampler_main, fract((\\n    (xlat_mutableuv2 + 0.5)\\n   + ofs_2)))).xyz;\\n  ret1_3 = max (ret1_3, (xlat_mutableneu * (1.0 - \\n    (tmpvar_20 * tmpvar_20)\\n  )));\\n  vec2 tmpvar_22;\\n  tmpvar_22.x = (ret1_3.x + ret1_3.z);\\n  tmpvar_22.y = (ret1_3.x - ret1_3.y);\\n  xlat_mutableret2 = (((\\n    (texture (sampler_blur1, fract((xlat_mutablerss + (tmpvar_22 / 2.0)))).xyz * scale1)\\n   + bias1) / tmpvar_10) * 12.0);\\n  vec4 tmpvar_23;\\n  tmpvar_23.w = 1.0;\\n  tmpvar_23.xyz = ((ret1_3 + (\\n    ((bass_att * 0.004) / sqrt(dot (uv_1, uv_1)))\\n   * roam_sin).xyz) + (sqrt(xlat_mutableret2.zxy) * clamp (\\n    (1.0 - (ret1_3 * 4.0))\\n  , 0.0, 1.0)));\\n  ret = tmpvar_23.xyz;\\n }"}')},3807:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.980001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"wave_mode":4,"modwavealphabyvolume":1,"darken":1,"wave_a":0.002705,"wave_scale":1.291486,"wave_smoothing":0.45,"wave_mystery":0.08,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.4595,"warpscale":2.0067,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0.99,"ob_size":0.025,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0.11,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.4999,"mv_g":0.4999,"mv_b":0.4999,"mv_a":0,"b1x":0.6999,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":44,"rad":0.108525,"tex_ang":1.00531,"tex_zoom":1.531168,"g":1,"b":1,"r2":0.83,"g2":0.93,"b2":0.8,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"trig = q24 * equal(q27%4,0);\\n\\ndist = bnot(trig)*(dist+q10/fps);\\n\\nx = .5 - ( 1/(dist+1))/2;\\ny = 1-x;\\n\\nr0 = bnot(trig)*r0 + trig*rand(100)/100;\\ng0 = bnot(trig)*g0 + trig*rand(100)/100;\\nb0 = bnot(trig)*b0 + trig*rand(100)/100;\\n\\ncmax = max(max(r0,g0),b0);\\n\\nr = r0/cmax; r2 = r;\\ng = g0/cmax; g2 = g;\\nb = b0/cmax; b2 = b;\\n\\nrad = q11/(dist+1);\\n//rad = .2;\\na = 1 / (1+dist/4) ; a2 = 0;"},{"baseVals":{"enabled":1,"sides":34,"thickoutline":1,"x":0.4,"rad":2.366958,"tex_ang":3.455753,"tex_zoom":0.993053,"r":0.5,"b":1,"a":0.2,"r2":0.7,"g2":0.4,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"trig = q24 * equal(q27%4,2);\\n\\ndist = bnot(trig)*(dist+q10/fps);\\n\\nx = .5 + ( 1/(dist+1))/1.9;\\ny = 1-x;\\n\\nr0 = bnot(trig)*r0 + trig*rand(100)/100;\\ng0 = bnot(trig)*g0 + trig*rand(100)/100;\\nb0 = bnot(trig)*b0 + trig*rand(100)/100;\\n\\ncmax = max(max(r0,g0),b0);\\n\\nr = r0/cmax; r2 = r;\\ng = g0/cmax; g2 = g;\\nb = b0/cmax; b2 = b;\\n\\nrad = q11/(dist+1);\\n//rad = .2;\\na = 1 / (1+dist/4) ; a2 = 0;"},{"baseVals":{"enabled":1,"sides":44,"x":0.503,"rad":0.038857,"tex_zoom":0.609857,"g":0.1,"a":0.9,"r2":1,"b2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"trig = q24 * equal(q27%4,1);\\n\\ndist = bnot(trig)*(dist+q10/fps);\\n\\nx = .5 - ( 1/(dist+1))/1.9;\\ny = x;\\n\\nr0 = bnot(trig)*r0 + trig*rand(100)/100;\\ng0 = bnot(trig)*g0 + trig*rand(100)/100;\\nb0 = bnot(trig)*b0 + trig*rand(100)/100;\\n\\ncmax = max(max(r0,g0),b0);\\n\\nr = r0/cmax; r2 = r;\\ng = g0/cmax; g2 = g;\\nb = b0/cmax; b2 = b;\\n\\nrad = q11/(dist+1);\\n//rad = .2;\\na = 1 / (1+dist/4) ; a2 = 0;"},{"baseVals":{"enabled":1,"sides":63,"y":1,"rad":0.548217,"tex_zoom":2.223327,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"trig = q24 * equal(q27%4,3);\\n\\ndist = bnot(trig)*(dist+q10/fps);\\n\\nx = .5 + ( 1/(dist+1))/1.9;\\ny = x;\\n\\nr0 = bnot(trig)*r0 + trig*rand(100)/100;\\ng0 = bnot(trig)*g0 + trig*rand(100)/100;\\nb0 = bnot(trig)*b0 + trig*rand(100)/100;\\n\\ncmax = max(max(r0,g0),b0);\\n\\nr = r0/cmax; r2 = r;\\ng = g0/cmax; g2 = g;\\nb = b0/cmax; b2 = b;\\n\\nrad = q11/(dist+1);\\n//rad = .2;\\na = 1 / (1+dist/4) ; a2 = 0;"}],"waves":[{"baseVals":{"sep":120,"additive":1,"scaling":0.891519,"smoothing":0.82,"a":0.6,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t2 = t2 + bass_att;","point_eqs_eel":"k1 = (sample*100)%8;\\nk2 = bnot (k1);\\nxi = value1*k2 + xi*(1-k2);\\nyi = value2*(1-k2) + yi*k2;\\n\\ndx = dx*.99 + xi;\\ndy = dy*.99 + yi;\\n\\nx = .5 + xi/2;\\ny = .5 + yi/2;\\n\\na = q22/8; \\na = min(a,.4);"},{"baseVals":{"usedots":1,"scaling":0.891519,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x = sample;\\ny = 1-sample;\\na = (q24 * equal(q27%4,0));\\n"},{"baseVals":{"thick":1,"scaling":0.891519,"smoothing":0.82,"r":0,"g":0.2,"b":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"dec_med = pow (0.5, 30/fps);\\ndec_slow = pow (0.9, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .2+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %8;\\nindex2 = (index2 + is_beat*bnot(index))%2;\\nindex3 = (index3 + is_beat*bnot(index)*bnot(index2))%3;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass_att + mid_att + treb_att ;\\nq27 = index + 1;\\nq28 = -index2/100;\\nq29 = bnot(below(index2+index3,1));\\n\\npuls = dec_slow*puls + (1-dec_slow)*q29;\\nq32 = puls;\\n\\nk1 =  is_beat*equal(index%2,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.1416/4;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\ntrel1 = trel1 + 4.2*q1/fps*(q22);\\ntrel2 = trel2 + 3*q2/fps*(1);\\npx = .2*sin(trel1);\\npy = .1*cos(trel2);\\nq5 = px;\\nq6 = py;\\n\\nrotx = rotx + q5/fps*4;\\nroty = roty + q6/fps*4;\\nq15 = rotx;\\nq16 = roty;\\n\\nppx = ppx*dec_slow + (1-dec_slow)*px;\\nppy = ppy*dec_slow + (1-dec_slow)*py;\\nq7 = ppx;\\nq8 = ppy;\\n\\n\\nq10 = 20; //speed shot\\nq11 = .8; //brightness shot\\n\\n\\nzoom = 1;\\ndy = .00;\\ndx = .0;\\nwarp = .1;","pixel_eqs_eel":"rot = .05 * q1 * (1-rad);","warp":" shader_body { \\n  vec2 uv_1;\\n  vec2 uv6_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (uv - vec2(0.5, 0.5));\\n  float x_4;\\n  x_4 = (tmpvar_3.x * tmpvar_3.y);\\n  float tmpvar_5;\\n  tmpvar_5 = (64.0 * sqrt((x_4 * x_4)));\\n  vec2 tmpvar_6;\\n  tmpvar_6 = normalize(tmpvar_3);\\n  uv_1 = (uv + ((q28 * tmpvar_6) * (1.0 - \\n    ((1.0/(tmpvar_5)) * (q2 + 1.0))\\n  )));\\n  uv_1 = (uv_1 - ((\\n    clamp (((sin(tmpvar_5) / cos(tmpvar_5)) * tmpvar_6), vec2(-2.0, -2.0), vec2(2.0, 2.0))\\n   / 20.0) * rad));\\n  uv6_2 = (0.2 * cos((\\n    (uv_1 * 32.0)\\n   + \\n    (rand_frame * 6.0)\\n  .xy)));\\n  vec4 tmpvar_7;\\n  tmpvar_7.w = 1.0;\\n  tmpvar_7.xyz = (((texture (sampler_main, \\n    (((uv_1 - 0.5) * (0.95 + (0.1 * tmpvar_5))) + 0.5)\\n  ).xyz + vec3(\\n    ((0.002 / (sqrt(\\n      dot (uv6_2, uv6_2)\\n    ) - 0.004)) * (1.0 - rad))\\n  )) * 0.94) - 0.01);\\n  ret = tmpvar_7.xyz;\\n }","comp":"vec2 xlat_mutablers;\\n shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1.x = q7;\\n  tmpvar_1.y = q8;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (((uv - 0.5) - tmpvar_1) * aspect.xy);\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = q5;\\n  tmpvar_3.y = q6;\\n  xlat_mutablers = (((uv_orig - 0.5) - tmpvar_3) * aspect.xy);\\n  float tmpvar_4;\\n  tmpvar_4 = (((22.0 * \\n    sqrt(dot (xlat_mutablers, xlat_mutablers))\\n  ) * q32) - 0.1);\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = q15;\\n  tmpvar_5.y = q16;\\n  vec2 tmpvar_6;\\n  tmpvar_6 = fract(((\\n    (tmpvar_2 * (1.0 - pow (sqrt(\\n      dot (tmpvar_2, tmpvar_2)\\n    ), 3.0)))\\n   - 0.5) - (\\n    (texture (sampler_noise_hq, (((0.1 * \\n      (sin(tmpvar_4) / cos(tmpvar_4))\\n    ) * normalize(xlat_mutablers)) + tmpvar_5)).xyz * 0.04)\\n   * \\n    clamp ((10.0 - (7.0 * tmpvar_4)), 0.0, 1.0)\\n  ).xy));\\n  vec4 tmpvar_7;\\n  tmpvar_7.w = 1.0;\\n  tmpvar_7.xyz = ((1.5 * texture (sampler_main, tmpvar_6).xyz) + ((texture (sampler_blur1, tmpvar_6).xyz * scale1) + bias1));\\n  ret = tmpvar_7.xyz;\\n }"}')},2714:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":6,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.005,"wave_scale":0.527,"wave_smoothing":0.09,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0,"wave_b":0,"wave_y":1,"ob_a":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"sides":14,"num_inst":32,"rad":0.03632,"tex_ang":1.00531,"tex_zoom":1.53117,"b":1,"a":0,"g2":0,"a2":0.6,"border_b":0,"border_a":0.3,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"k1 = instance/num_inst;\\nn = instance*4+2000;\\nx = gmegabuf(n);\\ny = gmegabuf(n+1);\\nz = gmegabuf(n+2);\\n\\nrad = .02/z;\\na = 0; a2 = 0;"},{"baseVals":{"enabled":1,"sides":6,"num_inst":128,"x":0.26,"y":0.2,"rad":0.39317,"tex_zoom":0.9355,"g":1,"b":0.6,"g2":0,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"k1 = instance/num_inst;\\n//n = instance*4+1000;\\n\\nn = gmegabuf(reg07+instance)+1000;\\n\\nx = k1;\\nx = x - int(x);\\nrad0 = 4/num_inst*q32;\\ny = 1-rad0/2;\\nrad = rad0;\\n\\na =  1;\\na2 = .8;\\n\\nk2 = gmegabuf(reg07+instance);\\n\\nr = k2/128;\\nb = 1-r;\\ng = pow(r-.5,2)*4;\\nang = q10;\\ntrel = q12*3;\\nm1 = (trel);\\nm2 = (trel*3);\\nm3 = (trel*7);\\n\\nr = sin(m1)*r + cos(m1)*g;\\ng = sin(m2)*g + cos(m2)*b;\\nb = sin(m3)*b + cos(m3)*r;"},{"baseVals":{"enabled":1,"sides":6,"textured":1,"num_inst":2,"x":0.6,"y":0.9,"rad":0.05785,"tex_zoom":0.40556,"r":0,"g2":0,"a2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"rad0 = 4/128*q32;\\ny = 1-rad0/2 + .0*y;\\nrad = rad0 * (1+0*gmegabuf(n));\\nang = q10;\\nx = (q10-q12+1)/2;\\n\\nk1 = max(3,80*abs(q12));\\n\\ntrel = frame;\\nx1 =  (trel%k1)/k1;\\nx2 =  1-(trel%k1)/k1;\\nif (instance%2==0, x = x1, x = x2);\\n\\na = .8 * (sin(q12*73) >= 0); a2 = a;"},{"baseVals":{"sides":14,"additive":1,"thickoutline":1,"textured":1,"x":0.6,"y":0.55,"rad":0.97237,"ang":1.25664,"tex_zoom":0.34933,"g":0.6,"g2":0,"b2":1,"border_r":0.2,"border_g":0.7,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"samples":128,"sep":128,"spectrum":1,"additive":1,"scaling":2.15542,"smoothing":0,"r":0,"a":0.7},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x = sample;\\n\\nn = int(sample*128);\\ngmegabuf(n) = gmegabuf(n)*.5 + .5* (value1+value2) * (1+0*(rand(100)-50));\\n\\na = 0;\\ny = gmegabuf (n)*.15+.2;"},{"baseVals":{"samples":128,"thick":1,"scaling":0.89152,"smoothing":0.82,"r":0,"g":0,"b":0,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"samples":32,"usedots":1,"scaling":0.89152,"smoothing":0.82,"r":0,"g":0.2,"b":0.6,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"index = 0;\\nloop (100000,\\n  megabuf(index) = 0;\\n  gmegabuf(index) = 0;\\n  index = index + 1;\\n);\\n\\nflen = 128; shapes = 32; sortbase = 7000;\\n\\nreg07 = sortbase;\\nn = 0;\\nloop (flen,\\n  gmegabuf(sortbase+n) = n;\\n  n = n+1; \\n);","frame_eqs_eel":"dec_m = pow (0.85, 30/fps);\\ndec_s = pow (0.9, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_s + beat*(1-dec_s);\\nis_beat = above(beat, 1.5*avg+2*peak) * above (time, t0+.3);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_m;\\nindex = (index + is_beat) %32;\\nindex2 = (index2 + is_beat*bnot(index)) %8;\\nq27 = index;\\nq24 = is_beat;\\n\\ntrig = is_beat;\\nvol1 = if(trig,.5+sqrt(peak)/4,vol1);\\nran1 = if (trig, (rand(100)/50-1)*vol1, ran1);\\nran2 = if (trig, (rand(100)/50-1)*vol1, ran2);\\n\\ntrig = is_beat * (index%8==0);\\nran3 = if (trig, (rand(100)/50-1)*vol1, ran3);\\n\\nran1_ = ran1_*dec_m + (1-dec_m) * ran1;\\nran2_ = ran2_*dec_m + (1-dec_m) * ran2;\\nran3_ = ran3_*dec_m + (1-dec_m) * ran3;\\ndec_m = pow (0.7, 30/fps);\\n\\nq10 = ran1_;\\nq11 = ran2_;\\nq12 = ran3_;\\n\\nreg10 = 5000; reg11 = 40;\\ngmegabuf(reg10 + frame%reg11) = ran1_;\\ngmegabuf(reg10 + reg11 + frame%reg11) = ran2_;\\ngmegabuf(reg10 + 2*reg11 + frame%reg11) = ran3_;\\n\\n\\n\\n//normalize spectrum\\nn = 0; vol = 0.1; mean = 0;\\nloop (flen,\\n  value = gmegabuf(n) * (1+1/(n+.5));\\n  dec = if(megabuf(n)<=value,0.2,pow(.95,30/fps));\\n  megabuf(n) = megabuf(n)*dec + (1-dec)*value;\\n  vol = vol + pow(megabuf(n),2);\\n  n= n+1;\\n);\\nvol = sqrt(vol);\\nvol_ = dec_m*vol_ + (1-dec_m)*vol;\\n\\n// post smoothing\\nn= 0;\\nloop (flen,\\n  dec = if (megabuf(n)/vol > gmegabuf(n+1000),.5,.8);\\n  gmegabuf(n+1000) = gmegabuf(n+1000)*dec+ (1-dec)*megabuf(n)/vol_;\\n  n = n+1;\\n);\\n\\n\\n//Lookup-Tabele sortieren \\nn0 = 1000; n=0;\\nloop (flen-1,\\n  q1 = n;  q2 = n+1;\\n  q3 = gmegabuf(n0+gmegabuf(sortbase+q1));  \\n  q4 = gmegabuf(n0+gmegabuf(sortbase+q2));\\n  if (q3<=q4, exec3 (q5 = gmegabuf(sortbase+q1),\\n                     gmegabuf(sortbase+q1) = gmegabuf(sortbase+q2), \\n                     gmegabuf(sortbase+q2) = q5), 0);\\n\\n  n = n+1;\\n);\\n\\n\\nmonitor = gmegabuf(sortbase+1);\\nmonitor = vol1;\\n\\n\\n\\nq32 = aspecty;","pixel_eqs_eel":"dd = 45/fps;\\nzoom =  1+  .06*dd*y * gmegabuf(reg10 + (frame+y*reg11)%reg11) ;\\nrot =      0.05 * dd* gmegabuf(reg10 + reg11   + (frame+y*reg11)%reg11); \\n\\ndx = 0;\\ndy = .008*dd; ;\\nwarp = 0;","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (texture (sampler_fc_main, uv) - (0.003921569 * float(\\n    (texture (sampler_noise_lq, ((uv * 2.0) + rand_frame.xy)).x > 0.8)\\n  ))).xyz;\\n  ret = tmpvar_1.xyz;\\n }","comp":" shader_body { \\n  vec2 uv_1;\\n  uv_1 = (((uv - 0.5) * 0.96) + 0.5);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ((texture (sampler_main, uv_1).xyz * 4.0) + ((texture (sampler_blur2, uv_1).xyz * scale2) + bias2));\\n  ret = tmpvar_2.xyz;\\n }"}')},5883:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":2,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":0.001,"wave_scale":0.958,"wave_smoothing":0.45,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0,"ob_g":0.1,"ob_b":1,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":25.6,"mv_y":9.6,"mv_l":0,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"textured":1,"x":0.09,"y":0.9,"rad":0.22437,"tex_zoom":1.76002,"r2":1,"g2":0,"a2":0.6,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"additive":1,"x":0.26,"y":0.2,"rad":0.39317,"tex_zoom":6.19589,"r":0,"g":0.55,"b":0.5,"g2":0.4,"b2":0.4,"a2":0.07,"border_r":0.3,"border_g":0.7,"border_b":0.8,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":44,"additive":1,"x":0.503,"rad":0.03886,"tex_zoom":0.60986,"g":0.1,"a":0.9,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"rad":0.01,"tex_zoom":0.49981,"r":0,"g2":0,"border_r":0.2,"border_g":0.7,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"samples":282,"sep":20,"usedots":1,"thick":1,"additive":1,"scaling":3.91581,"smoothing":0.1,"r":0.2,"g":0.3,"a":0.6,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"usedots":1,"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"r":0,"g":0.2,"b":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"//******** INITIALIZATION *********\\n//---------- some global vars, do not change -------------\\navg = 0.01;\\nq7 = .2; //MyZoom\\nq8 =  rand(200)/100-1; //fractal modifier\\n//q8 = -0; //#\\nq16 = 1.2; //Tele\\nq18 = rand(0.8)+.1; //brightness balance back/front\\nq17 = 2.6; //fractal density factor ffac\\nstart = 1; travel = 0; RotZ = 0; look = 0; slow = 0; t0 = time+3; lampx = .5; lampy = .5;\\ncran0 = rand(1);\\nn = 0; loop (10000, gmegabuf(n)=0; n=n+1; ); \\nn = 0; loop (10000,  megabuf(n)=0; n=n+1; ); \\ntrelx = 0;  trely = 0; trelz = 0;\\nreg20 = 1; reg21 = 0; reg22 = 0; reg23 = 0; reg24 = 1; reg25 = 0; reg26 = 0; reg27 = 0; reg28 = 1;\\n\\n//Find random starting point\\nwhile (exec2(\\n  ran1 = rand(800)/100;  ran2 = rand(800)/100;  ran3 = rand(800)/100;\\n  PosX = rand(10)-5;   PosY = rand(10)-5;   PosZ = rand(10)-5; \\n\\n//  PosX = 3.3; PosY = 2; PosZ = -2; ran1 = 0; ran2 = 0; ran3 = 0; //#\\n\\n  c1 = cos(ran1); c2 = cos(ran2); c3 = cos(ran3); \\n  s1 = sin(ran1); s2 = sin(ran2); s3 = sin(ran3);\\n\\n  reg20 = c2*c1; reg21 = c2*s1; reg22 = -s2;\\n  reg23 = s3*s2*c1 - c3*s1; reg24 = s3*s2*s1 + c3*c1; reg25 = s3*c2;\\n  reg26 = c3*s2*c1 + s3*s1; reg27 = c3*s2*s1 - s3*c1; reg28 = c3*c2;\\n\\n  //***********BOT*************\\n  //Coord. Trans. must exactly match def in warp S. !!!!\\n  dist = 0.001;\\n  while (exec2(\\n    uvx = reg26*dist/q7; uvy = reg27*dist/q7; uvz = reg28*dist/q7;\\n    uvx += PosX; uvy += PosY; uvz += PosZ;\\n    uvx = 8.0*((uvx/8+30.5 - int(uvx/8+30.5))-.5);\\n    uvy = 8.0*((uvy/8+30.5 - int(uvy/8+30.5))-.5);\\n    uvz = 8.0*((uvz/8+30.5 - int(uvz/8+30.5))-.5);\\n    uvx0 = uvx+q8; uvy0 = uvy+q8; uvz0 = uvz+q8;\\n    loop (7+1,\\n      uvx = if (uvx > 1, 2-uvx, if(uvx < -1, -2-uvx, uvx));\\n      uvy = if (uvy > 1, 2-uvy, if(uvy < -1, -2-uvy, uvy));\\n      uvz = if (uvz > 1, 2-uvz, if(uvz < -1, -2-uvz, uvz));\\n      slen = uvx*uvx + uvy*uvy + uvz*uvz;\\n      uvx = if (slen < 0.25, uvx*4, if (slen < 1, uvx/slen, uvx)) *q17 + uvx0; \\n      uvy = if (slen < 0.25, uvy*4, if (slen < 1, uvy/slen, uvy)) *q17 + uvy0; \\n      uvz = if (slen < 0.25, uvz*4, if (slen < 1, uvz/slen, uvz)) *q17 + uvz0; \\n    );\\n    len = sqrt(uvx*uvx + uvy*uvy + uvz*uvz);\\n    dist *= 1.05;\\n  ,(dist < 0.6)*(len > 30)));\\n,(dist < .06))); //end while","frame_eqs_eel":"fps_ = .0 * fps_ + 1*if(fps<=25,fps,25+.5*(fps-25)); \\ndec_s = 1-.03*30/fps_;\\ndec_m = 1-.1*30/fps_;\\nbeat = (time >  t0+3); t0 = if(beat, time, t0);\\n\\nspeed = min(0.2,dist_-.02) * (1+2*avg) *(1-slow*.0)*.1/q7; //#\\nds = ds * dec_s + (1-dec_s)*speed*.4/fps_; \\nRotZ = if (travel > 2,.5,0);\\nvol = vol*dec_m + (1-dec_m)*(bass_att +mid_att + treb_att)/4;\\nq1 = vol/2+.3;\\n//Position \\nDirX= reg26; DirY= reg27; DirZ = reg28;\\nPosX = PosX + ds*DirX ; PosY = PosY + ds*DirY; PosZ = PosZ + ds*DirZ; \\nq4 = PosX; q5 = PosY; q6 = PosZ;\\n\\nangchg = (.1-dist_)*(dist_ < .1);\\ntravel = if (angchg > 0,0,travel+ds);\\nv1 = v1 * dec_s + (1-dec_s)* RotZ * ds/2;\\nv2 = v2 *dec_s + (1-dec_s)*angchg *xslope/fps_;\\nv3 = v3 *dec_s + (1-dec_s)*(angchg *yslope/fps_ + 2*v1*sin(time*.1));\\n//v1 = 0.00;\\n//push old RotMat\\nreg30 =reg20; reg31 =reg21; reg32 =reg22; \\nreg33 =reg23; reg34 =reg24; reg35 =reg25; \\nreg36 =reg26; reg37 =reg27; reg38 =reg28; \\n\\nn = 0; avg = 0;\\nloop (5,\\n  n = n+1;\\n  //new Rot. Mat for infinitesimal angles\\n  ran1 = rand(100)/100;\\n  ran2 = rand(100)/200-.25;\\n  tx = cos(n*1.57+ran2) * (n <= 4)*ran1; ty = sin(n*1.57+ran2) * (n <= 4)*ran1;\\n  c1 = cos(v1); c2 = cos(v2+ty); c3 = cos(v3+tx); \\n  s1 = sin(v1); s2 = sin(v2+ty); s3 = sin(v3+tx);\\n  reg10 = c2*c1; reg11 = c2*s1; reg12 = -s2;\\n  reg13 = s3*s2*c1 - c3*s1; reg14 = s3*s2*s1 + c3*c1; reg15 = s3*c2;\\n  reg16 = c3*s2*c1 + s3*s1; reg17 = c3*s2*s1 - s3*c1; reg18 = c3*c2;\\n\\n  //pop old RotMat\\n  reg20 =reg30; reg21 =reg31; reg22 =reg32; \\n  reg23 =reg33; reg24 =reg34; reg25 =reg35; \\n  reg26 =reg36; reg27 =reg37; reg28 =reg38; \\n\\n  //Multiply new RotMat by old one\\n  q20 = reg10*reg20 + reg11*reg23 + reg12*reg26;\\n  q21 = reg10*reg21 + reg11*reg24 + reg12*reg27;\\n  q22 = reg10*reg22 + reg11*reg25 + reg12*reg28;\\n  q23 = reg13*reg20 + reg14*reg23 + reg15*reg26;\\n  q24 = reg13*reg21 + reg14*reg24 + reg15*reg27;\\n  q25 = reg13*reg22 + reg14*reg25 + reg15*reg28;\\n  q26 = reg16*reg20 + reg17*reg23 + reg18*reg26;\\n  q27 = reg16*reg21 + reg17*reg24 + reg18*reg27;\\n  q28 = reg16*reg22 + reg17*reg25 + reg18*reg28;\\n\\n  reg20 =q20; reg21 =q21; reg22 =q22;\\n  reg23 =q23; reg24 =q24; reg25 =q25;\\n  reg26 =q26; reg27 =q27; reg28 =q28;\\n\\n  //***********BOT*************\\n  //Coord. Trans. must exactly match def in warp S. !!!!\\n  dist = 0.002;\\n  while (exec2(\\n    uvx = reg26*dist/q7; uvy = reg27*dist/q7; uvz = reg28*dist/q7;\\n    uvx += PosX; uvy += PosY; uvz += PosZ;\\n    uvx = 8.0*((uvx/8+30.5 - int(uvx/8+30.5))-.5);\\n    uvy = 8.0*((uvy/8+30.5 - int(uvy/8+30.5))-.5);\\n    uvz = 8.0*((uvz/8+30.5 - int(uvz/8+30.5))-.5);\\n    uvx0 = uvx+q8; uvy0 = uvy+q8; uvz0 = uvz+q8;\\n    loop (7+1,\\n      uvx = if (uvx > 1, 2-uvx, if(uvx < -1, -2-uvx, uvx));\\n      uvy = if (uvy > 1, 2-uvy, if(uvy < -1, -2-uvy, uvy));\\n      uvz = if (uvz > 1, 2-uvz, if(uvz < -1, -2-uvz, uvz));\\n      slen = uvx*uvx + uvy*uvy + uvz*uvz;\\n      uvx = if (slen < 0.25, uvx*4, if (slen < 1, uvx/slen, uvx)) *q17 + uvx0; \\n      uvy = if (slen < 0.25, uvy*4, if (slen < 1, uvy/slen, uvy)) *q17 + uvy0; \\n      uvz = if (slen < 0.25, uvz*4, if (slen < 1, uvz/slen, uvz)) *q17 + uvz0; \\n    );\\n    len = sqrt(uvx*uvx + uvy*uvy + uvz*uvz);\\n    dist *= 1.1;\\n  ,(dist < 0.6)*(len > 30)));\\n  megabuf(n) = megabuf(n)*dec_s + (1-dec_s)*dist; //stores the 4 trial points\\n  avg = avg+abs(megabuf(n)/5);\\n); //end loop 5\\n\\nn = 0; avg = 0; loop (5, n=n+1; avg = avg+abs(megabuf(n)/5));\\n\\nxslope = min(max(2/avg*(megabuf(1)-megabuf(3)),-3),3);\\nyslope = min(max(2/avg*(megabuf(4)-megabuf(2)),-3),3);\\nmonitor = avg;\\ndist_ = dist_*dec_s + (1-dec_s)*dist;\\n\\nq10 = ds*q7; //compensation of lin. movement in GetDist and zoom uv\\nq14 = 1*abs(ds) + 2*(abs(v1) + abs(v2) + abs(v3)) + start*.05; \\nq19 = .6 + .4*sin(time*.02+cran0*6); //brightness backgd\\nstart = start * .9;\\n\\nwarp = 0.0; zoom = 1; \\ndx = -v2/q16; dy = v3/q16; rot = v1;\\nvx = vx -v2/q16; vy = vy +v3/q16; vz = vz + v1;\\nq11 = vx;  q12 = vy;\\nmovz = movz + ds;\\nq13 = movz;\\nmonitor = q13;","pixel_eqs_eel":"","warp":"float sustain;\\nfloat ffac;\\nfloat xlat_mutabledist;\\nfloat xlat_mutablelimit;\\nfloat xlat_mutablestruc;\\nvec2 xlat_mutableuv1;\\nvec3 xlat_mutableuv2;\\n shader_body { \\n  mat3 tmpvar_1;\\n  tmpvar_1[uint(0)].x = q20;\\n  tmpvar_1[uint(0)].y = q23;\\n  tmpvar_1[uint(0)].z = q26;\\n  tmpvar_1[1u].x = q21;\\n  tmpvar_1[1u].y = q24;\\n  tmpvar_1[1u].z = q27;\\n  tmpvar_1[2u].x = q22;\\n  tmpvar_1[2u].y = q25;\\n  tmpvar_1[2u].z = q28;\\n  vec3 tmpvar_2;\\n  tmpvar_2.x = q4;\\n  tmpvar_2.y = q5;\\n  tmpvar_2.z = q6;\\n  sustain = (0.98 - q14);\\n  ffac = q17;\\n  vec2 uv_3;\\n  uv_3 = (((uv - 0.5) * (1.0 - \\n    (q10 / (1.0 - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).z))\\n  )) + 0.5);\\n  xlat_mutableuv1 = (((uv_orig - 0.5) * aspect.xy) * q16);\\n  vec4 tmpvar_4;\\n  tmpvar_4 = fract((8.0 * texture (sampler_noise_lq, (uv_3 + rand_frame.yz))));\\n  vec3 tmpvar_5;\\n  tmpvar_5 = tmpvar_4.xyz;\\n  if ((tmpvar_4.y > (0.4 * rad))) {\\n    vec3 tmpvar_6;\\n    tmpvar_6 = (tmpvar_4.xyz - vec3(0.5, 0.5, 0.5));\\n    vec4 nb2_7;\\n    vec4 nb_8;\\n    vec2 tmpvar_9;\\n    tmpvar_9 = (0.0078125 * floor((\\n      (128.0 * texture (sampler_pc_main, (uv_3 - texsize.zw)).yz)\\n     + vec2(0.5, 0.5))));\\n    nb_8.x = (1.0 - (tmpvar_9.y + (0.015625 * \\n      (tmpvar_9.x - 0.5)\\n    )));\\n    vec2 tmpvar_10;\\n    tmpvar_10 = (0.0078125 * floor((\\n      (128.0 * texture (sampler_pc_main, (uv_3 + (texsize.zw * vec2(1.0, -1.0)))).yz)\\n     + vec2(0.5, 0.5))));\\n    nb_8.y = (1.0 - (tmpvar_10.y + (0.015625 * \\n      (tmpvar_10.x - 0.5)\\n    )));\\n    vec2 tmpvar_11;\\n    tmpvar_11 = (0.0078125 * floor((\\n      (128.0 * texture (sampler_pc_main, (uv_3 + texsize.zw)).yz)\\n     + vec2(0.5, 0.5))));\\n    nb_8.z = (1.0 - (tmpvar_11.y + (0.015625 * \\n      (tmpvar_11.x - 0.5)\\n    )));\\n    vec2 tmpvar_12;\\n    tmpvar_12 = (0.0078125 * floor((\\n      (128.0 * texture (sampler_pc_main, (uv_3 + (texsize.zw * vec2(-1.0, 1.0)))).yz)\\n     + vec2(0.5, 0.5))));\\n    nb_8.w = (1.0 - (tmpvar_12.y + (0.015625 * \\n      (tmpvar_12.x - 0.5)\\n    )));\\n    vec2 tmpvar_13;\\n    tmpvar_13 = (0.0078125 * floor((\\n      (128.0 * texture (sampler_pc_main, (uv_3 + (texsize.zw * vec2(0.0, -1.0)))).yz)\\n     + vec2(0.5, 0.5))));\\n    nb2_7.x = (1.0 - (tmpvar_13.y + (0.015625 * \\n      (tmpvar_13.x - 0.5)\\n    )));\\n    vec2 tmpvar_14;\\n    tmpvar_14 = (0.0078125 * floor((\\n      (128.0 * texture (sampler_pc_main, (uv_3 + (texsize.zw * vec2(1.0, 0.0)))).yz)\\n     + vec2(0.5, 0.5))));\\n    nb2_7.y = (1.0 - (tmpvar_14.y + (0.015625 * \\n      (tmpvar_14.x - 0.5)\\n    )));\\n    vec2 tmpvar_15;\\n    tmpvar_15 = (0.0078125 * floor((\\n      (128.0 * texture (sampler_pc_main, (uv_3 + (texsize.zw * vec2(0.0, 1.0)))).yz)\\n     + vec2(0.5, 0.5))));\\n    nb2_7.z = (1.0 - (tmpvar_15.y + (0.015625 * \\n      (tmpvar_15.x - 0.5)\\n    )));\\n    vec2 tmpvar_16;\\n    tmpvar_16 = (0.0078125 * floor((\\n      (128.0 * texture (sampler_pc_main, (uv_3 + (texsize.zw * vec2(-1.0, 0.0)))).yz)\\n     + vec2(0.5, 0.5))));\\n    nb2_7.w = (1.0 - (tmpvar_16.y + (0.015625 * \\n      (tmpvar_16.x - 0.5)\\n    )));\\n    vec4 tmpvar_17;\\n    tmpvar_17 = min (nb_8, nb2_7);\\n    nb_8.zw = tmpvar_17.zw;\\n    nb_8.xy = min (tmpvar_17.xy, tmpvar_17.zw);\\n    xlat_mutabledist = (min (nb_8.x, nb_8.y) + ((0.006 * tmpvar_6.x) * abs(tmpvar_6.y)));\\n  } else {\\n    xlat_mutabledist = tmpvar_5.x;\\n  };\\n  vec2 tmpvar_18;\\n  tmpvar_18 = (0.0078125 * floor((\\n    (128.0 * texture (sampler_pc_main, uv_3).yz)\\n   + vec2(0.5, 0.5))));\\n  xlat_mutabledist = (min (xlat_mutabledist, (1.0 - \\n    (tmpvar_18.y + (0.015625 * (tmpvar_18.x - 0.5)))\\n  )) - (q10 * 0.8));\\n  xlat_mutablelimit = (15.0 + (10.0 * xlat_mutabledist));\\n  vec3 tmpvar_19;\\n  tmpvar_19.xy = (xlat_mutableuv1 * xlat_mutabledist);\\n  tmpvar_19.z = xlat_mutabledist;\\n  xlat_mutableuv2 = (((tmpvar_19 / q7) * tmpvar_1) + tmpvar_2);\\n  xlat_mutableuv2 = ((fract(\\n    ((xlat_mutableuv2 / 8.0) + 0.5)\\n  ) - 0.5) * 8.0);\\n  int iterations_21;\\n  vec3 zz0_22;\\n  vec3 zz_23;\\n  zz_23 = xlat_mutableuv2;\\n  zz0_22 = (xlat_mutableuv2 + q8);\\n  iterations_21 = int((8.0 - float(\\n    (xlat_mutabledist > 0.8)\\n  )));\\n  for (int n_20 = 0; n_20 <= iterations_21; n_20++) {\\n    zz_23 = ((2.0 * clamp (zz_23, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_23);\\n    zz_23 = (zz_23 * (clamp (\\n      max ((0.25 / dot (zz_23, zz_23)), 0.25)\\n    , 0.0, 1.0) * 4.0));\\n    zz_23 = ((ffac * zz_23) + zz0_22);\\n  };\\n  xlat_mutablestruc = (sqrt(dot (zz_23.xz, zz_23.xz)) / xlat_mutablelimit);\\n  vec2 tmpvar_24;\\n  tmpvar_24 = (0.0078125 * floor((\\n    (128.0 * vec2((1.0 - xlat_mutabledist)))\\n   + vec2(0.5, 0.5))));\\n  vec2 tmpvar_25;\\n  tmpvar_25.x = ((64.0 * (\\n    (1.0 - xlat_mutabledist)\\n   - tmpvar_24.x)) + 0.5);\\n  tmpvar_25.y = tmpvar_24.x;\\n  vec3 tmpvar_26;\\n  float tmpvar_27;\\n  tmpvar_27 = (q14 * 2.0);\\n  tmpvar_26.x = (((1.0 - sustain) * xlat_mutablestruc) + (sustain * mix (texture (sampler_main, uv_3).xyz, \\n    ((texture (sampler_blur1, uv_3).xyz * scale1) + bias1)\\n  , vec3(tmpvar_27)).x));\\n  tmpvar_26.yz = tmpvar_25;\\n  vec3 tmpvar_28;\\n  tmpvar_28.y = 1.0;\\n  tmpvar_28.x = sustain;\\n  tmpvar_28.z = 1.0;\\n  vec3 tmpvar_29;\\n  tmpvar_29.y = 0.0;\\n  tmpvar_29.x = 0.003921569;\\n  tmpvar_29.z = (0.01568628 * (0.2 + rad));\\n  vec4 tmpvar_30;\\n  tmpvar_30.w = 1.0;\\n  tmpvar_30.xyz = mix (tmpvar_26, ((\\n    mix (texture (sampler_main, uv_3).xyz, ((texture (sampler_blur1, uv_3).xyz * scale1) + bias1), vec3(tmpvar_27))\\n   * tmpvar_28) - tmpvar_29), vec3(clamp ((\\n    sqrt(dot (zz_23, zz_23))\\n   - xlat_mutablelimit), 0.0, 1.0)));\\n  ret = tmpvar_30.xyz;\\n }","comp":"float xlat_mutableinten;\\nfloat xlat_mutabletmp;\\nvec2 xlat_mutableuv1;\\nvec2 xlat_mutableuv2;\\nfloat xlat_mutablez;\\n shader_body { \\n  float t_rel_2;\\n  vec3 ret1_3;\\n  float struc_4;\\n  xlat_mutableuv1 = ((uv * aspect.xy) - vec2(0.5, 0.5));\\n  vec4 tmpvar_5;\\n  tmpvar_5 = texture (sampler_main, uv);\\n  float tmpvar_6;\\n  vec4 tmpvar_7;\\n  tmpvar_7 = texture (sampler_blur1, uv);\\n  tmpvar_6 = mix (min ((1.0 - tmpvar_5.z), (1.0 - \\n    ((texture (sampler_blur2, uv).xyz * scale2) + bias2)\\n  .z)), (1.0 - (\\n    (tmpvar_7.xyz * scale1)\\n   + bias1).z), 0.5);\\n  struc_4 = ((mix (tmpvar_5.xyz, \\n    ((tmpvar_7.xyz * scale1) + bias1)\\n  , vec3(tmpvar_6)).x * (1.0 - tmpvar_6)) * tmpvar_6);\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = q11;\\n  tmpvar_8.y = q12;\\n  xlat_mutableuv2 = ((xlat_mutableuv1 * 0.2) - (tmpvar_8 * 0.2));\\n  vec2 uvi_9;\\n  uvi_9 = (xlat_mutableuv2 * 4.0);\\n  float zv_10;\\n  zv_10 = (0.008 * time);\\n  xlat_mutabletmp = clamp (dot ((texture (sampler_noise_hq, \\n    (xlat_mutableuv2 + (0.03 * ((\\n      (dot (texture (sampler_noise_hq, uvi_9), vec4(0.32, 0.49, 0.29, 0.0)) + (dot (texture (sampler_noise_hq, (\\n        (uvi_9 * 2.0)\\n       + zv_10)), vec4(0.32, 0.49, 0.29, 0.0)) / 2.0))\\n     + \\n      (dot (texture (sampler_noise_hq, ((uvi_9 * 4.0) + (2.0 * zv_10))), vec4(0.32, 0.49, 0.29, 0.0)) / 4.0)\\n    ) + (\\n      dot (texture (sampler_noise_hq, ((uvi_9 * 8.0) + (4.0 * zv_10))), vec4(0.32, 0.49, 0.29, 0.0))\\n     / 8.0))))\\n  ) - 0.4), vec4(0.32, 0.49, 0.29, 0.0)), 0.0, 1.0);\\n  float tmpvar_11;\\n  tmpvar_11 = clamp ((pow (xlat_mutabletmp, 1.2) * sign(xlat_mutabletmp)), 0.0, 1.0);\\n  xlat_mutabletmp = tmpvar_11;\\n  vec3 tmpvar_12;\\n  tmpvar_12.xy = vec2(0.1, 0.1);\\n  tmpvar_12.z = (1.2 - uv.y);\\n  ret1_3 = ((tmpvar_12 + 0.07) + ((\\n    clamp (((tmpvar_6 * 2.0) - 1.5), 0.0, 1.0)\\n   * tmpvar_11) * 4.0));\\n  t_rel_2 = (q13 * 6.0);\\n  for (int n_1 = 1; n_1 <= 3; n_1++) {\\n    xlat_mutablez = (1.0 - fract((\\n      (float(n_1) / 3.0)\\n     - \\n      (fract(-(t_rel_2)) / 3.0)\\n    )));\\n    xlat_mutableinten = (((1.0 - xlat_mutablez) * xlat_mutablez) * 2.0);\\n    vec2 tmpvar_13;\\n    tmpvar_13.x = q11;\\n    tmpvar_13.y = q12;\\n    xlat_mutableuv2 = (((xlat_mutablez * xlat_mutableuv1) / 4.0) - (tmpvar_13 / 6.0));\\n    vec2 uvi_14;\\n    uvi_14 = (xlat_mutableuv2 * 4.0);\\n    float zv_15;\\n    zv_15 = (0.008 * time);\\n    xlat_mutabletmp = clamp (dot ((\\n      (texture (sampler_noise_hq, (xlat_mutableuv2 + (0.03 * (\\n        ((dot (texture (sampler_noise_hq, uvi_14), vec4(0.32, 0.49, 0.29, 0.0)) + (dot (texture (sampler_noise_hq, \\n          ((uvi_14 * 2.0) + zv_15)\\n        ), vec4(0.32, 0.49, 0.29, 0.0)) / 2.0)) + (dot (texture (sampler_noise_hq, (\\n          (uvi_14 * 4.0)\\n         + \\n          (2.0 * zv_15)\\n        )), vec4(0.32, 0.49, 0.29, 0.0)) / 4.0))\\n       + \\n        (dot (texture (sampler_noise_hq, ((uvi_14 * 8.0) + (4.0 * zv_15))), vec4(0.32, 0.49, 0.29, 0.0)) / 8.0)\\n      )))) - (xlat_mutablez * 0.5))\\n     - 0.3), vec4(0.32, 0.49, 0.29, 0.0)), 0.0, 1.0);\\n    xlat_mutabletmp = (((\\n      clamp ((xlat_mutabletmp * sign(xlat_mutabletmp)), 0.0, 1.0)\\n     * xlat_mutableinten) * q1) * 2.0);\\n    ret1_3 = (((ret1_3 + \\n      ((vec3(4.0, 3.0, 0.8) * q1) * struc_4)\\n    ) * clamp (\\n      (1.0 - xlat_mutabletmp)\\n    , 0.0, 1.0)) + xlat_mutabletmp);\\n  };\\n  vec4 tmpvar_16;\\n  tmpvar_16.w = 1.0;\\n  tmpvar_16.xyz = (1.0 - exp((-1.6 * ret1_3)));\\n  ret = tmpvar_16.xyz;\\n }"}')},5916:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":4,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"additivewave":1,"wave_dots":1,"wave_thick":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.527,"wave_smoothing":0,"wave_mystery":0.6,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_g":0.49,"ob_a":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b2x":0.6,"b3x":0.4,"b1ed":0},"shapes":[{"baseVals":{"sides":8,"additive":1,"num_inst":256,"rad":0.03632,"tex_ang":1.00531,"tex_zoom":1.53117,"g":1,"b":1,"a":0,"g2":0,"border_r":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":5,"additive":1,"num_inst":256,"x":0.26,"y":0.2,"rad":0.39317,"tex_zoom":0.9355,"g2":0,"a2":0.2,"border_g":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"n = (instance);\\nFLen = reg00;\\nSLen = reg00/2;\\n\\nz0 = 10;\\ny0 = gmegabuf(2000+n+FLen)/z0;\\nx0 = gmegabuf(2000+n)/z0;\\n\\na0 = (gmegabuf(n+10000));\\n\\nk1 = instance/num_inst-.5;\\nx = .5 + x0 + sin(k1*8*sin(q12*.07)) * sin(q11*.13)*q3*.7; \\ny = .5 + q32*(y0 + sin(k1*8*sin(q14*.1)) * sin(q13*.2)*q3*.7); \\n\\narg = q2/8;\\nhigh = exp(-500*pow(arg+.5-instance/num_inst,2));\\nhigh += exp(-500*pow(-arg+.5-instance/num_inst,2));\\n\\nexc = sqrt((pow(x-.5,2)+pow(y-.5,2)));\\nrad0 = above(z0,0)*min (.1, a0/60)+.005;\\nrad0 = rad0 * (1+2*exc) * (1+high);\\n\\np1 = .5 + sin(q12)/2;\\np2 = .5 + sin(q13*1.4)/2;\\n//p1 = rand(1)-.5;\\n//p2 = rand(1)-.5;\\nexc = ((pow(x-p1,2)+pow(y-p2,2)));\\nrad = min(rad0 * (1 + .004*q3/abs(exc)),1) ;\\n\\na = min(a0*8+.4,1);\\n\\nk1 = instance/num_inst*5 + high;\\nw = 1-exp(-treb_att/2-.5);\\ng = w + (1-w)*sin(k1);\\nr = w + (1-w)*sin(k1-6.28/3);\\nb = w + (1-w)*sin(k1-6.28*2/3);\\n\\na2 = a/4;\\ng2 = g*0; b2 = b*0; r2 = r*0;"},{"baseVals":{"sides":13,"additive":1,"num_inst":5,"x":0.65,"y":0.38,"rad":0.57049,"tex_zoom":0.73678,"a":0.7,"g2":0,"border_r":0.5,"border_g":0.5,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"k1 = instance/num_inst;\\nx = .5 + .3*sin(instance*k1*413);\\ny = .5 + .3 * sin(instance*k1*113);\\n\\nrad = .1 + .4*sin(k1*333);\\n\\nr =  .5*sin(k1*234);\\nb =  .5*sin(k1*534);\\ng =  .5*sin(k1*34);"},{"baseVals":{"sides":14,"additive":1,"thickoutline":1,"textured":1,"x":0.6,"y":0.55,"rad":0.97237,"ang":1.25664,"tex_zoom":0.34933,"g":0.6,"g2":0,"b2":1,"border_r":0.2,"border_g":0.7,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"sep":120,"spectrum":1,"additive":1,"scaling":7.52386,"smoothing":0,"r":0,"a":0.7},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"FLen = reg00;\\n\\nn = int(sample*FLen);\\nvol = (value1+value2) * (1+ .1 / (sample+.03));\\n\\nchg = min(max(vol- gmegabuf(n),-1),1);\\ndec = if (chg>0, 1-chg*0.3, 1+chg*0.2);\\n\\nchg = q1 -q2;\\ndec = .94 - abs(chg) * if (chg> 0, .2,.1);\\n\\ndec = min(max(dec,0),1);\\ngmegabuf(n) = gmegabuf(n)*dec + vol*(1-dec);\\n\\ndec = q2/4;\\n//dec = .90;\\ndec = max(min(dec,1),.1);\\n\\ngmegabuf(n) = gmegabuf(n)*dec + gmegabuf(n+(q2<.8))*(1-dec);\\ngmegabuf(n+10000) = gmegabuf(n+10000)*.2 + .8* vol/3;\\na = .0;\\nx = sample;\\ny = .2 + gmegabuf(n+0)*.23;"},{"baseVals":{"samples":256,"usedots":1,"scaling":0.89152,"smoothing":0.82,"a":0.9,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"samples":32,"thick":1,"scaling":0.89152,"smoothing":0.82,"r":0,"g":0.2,"b":0.6,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"n = 0;\\nloop (50000,\\ngmegabuf(n) = 0;\\nmegabuf(n) = 0;\\nn = n+1;\\n);\\n\\nsw1 = rand(8);\\nsw2 = rand(8);\\nsw3 = rand(8);\\nsw4 = rand(8);","frame_eqs_eel":"flen = 512; //Wave Punkte\\nreg00 = FLen;\\nSLen = FLen/2;\\ndec_m = pow(.94, 30/fps);\\n\\n//Volume\\nn = 0; vol = 0;\\nloop (SLen,\\n  vol = vol + pow(gmegabuf(n),2)/FLen;  \\n  n = n+1;\\n);\\nvol = sqrt(vol)/2;\\nvol_ = vol_*dec_m + (1-dec_m)* (vol);\\n\\n//switches\\nlev1 = lev1 * dec_m + (1-dec_m) * gmegabuf(1);\\nlev2 = lev2 * dec_m + (1-dec_m) * gmegabuf(20);\\nlev3 = lev3 * dec_m + (1-dec_m) * gmegabuf(50);\\nlev4 = lev4 * dec_m + (1-dec_m) * gmegabuf(100);\\nsw1 = sw1 + (lev1-gmegabuf(1)>0)/fps;\\nsw2 = sw2 + (lev2-gmegabuf(20)>0)/fps;\\nsw3 = sw3 + (lev3-gmegabuf(50)>0)/fps;\\nsw4 = sw4 + (lev4-gmegabuf(100)>0)/fps;\\n\\ndif = (1+sin(sw3/4))*16+2;\\nofs = sin(sw2/3)*8;\\nn = 0; k1 = frame*0; \\nloop (SLen,\\n      m1 = (n)%SLen;\\n      m2 = (n+ofs)%SLen;\\n\\n      k = (m1+dif)%SLen;\\n      i = (SLen+m2-dif)%SLen;\\n\\n      in1 = (gmegabuf(m1)-gmegabuf(k))/pow(vol_+.03,.8)*1.2;\\n      in2 = (gmegabuf(m2)-gmegabuf(i))/pow(vol_+.03,.8)*1.2;\\n\\n      dec = if (pow(gmegabuf(2000+n),2) + pow(gmegabuf(2000+FLen+n),2)> in1*in1+in2*in2,.8,.94) ;\\n      dec = pow (dec, 30/fps); \\n\\n      gmegabuf(2000+n) =       gmegabuf(2000+n)*dec      +(1-dec)* in1;\\n      gmegabuf(2000+FLen+n) =  gmegabuf(2000+FLen+n)*dec +(1-dec)* in2;\\n      n=n+1;\\n);\\n\\nq1 = (bass+treb+mid)/3;\\nq2 = (bass_att+treb_att+mid_att)/3;\\nq3 = vol_;\\nq11 = sw1;\\nq12 = sw2;\\nq13 = sw3;\\nq14 = sw4;\\n\\nrot = 0; zoom = .98; warp = .3; rot = 0;\\n\\nq32 = aspecty;\\nmonitor = dif;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = ((texture (sampler_main, uv).xyz * clamp (\\n    (q1 - 0.8)\\n  , 0.0, 1.0)) * 0.92);\\n  ret = tmpvar_1.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  ret_1 = (texture (sampler_main, uv).xyz + ((texture (sampler_blur2, uv).xyz * scale2) + bias2));\\n  ret_1 = (ret_1 + ((0.8 * \\n    (hue_shader - 0.8)\\n  ) * (1.0 - uv.y)));\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ret_1;\\n  ret = tmpvar_2.xyz;\\n }"}')},9890:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":4,"gammaadj":1.88,"decay":0.5,"echo_zoom":0.952,"echo_alpha":0.5,"wave_mode":6,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0,"wave_scale":1.211,"wave_smoothing":0.09,"wave_mystery":0.4,"modwavealphastart":1.42,"modwavealphaend":2,"warpanimspeed":1.459,"warpscale":2.007,"zoom":1.0099,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_x":1,"ob_size":0,"ob_r":0.1,"ob_b":0.3,"ib_size":0.15,"ib_r":0.6,"ib_g":0.5,"ib_b":0.4,"mv_l":0,"mv_a":0,"b1x":0.6,"b2x":0.6,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":25,"thickoutline":1,"textured":1,"rad":0.5703,"g":1,"b":1,"a":0,"r2":1,"b2":1,"a2":0.5,"border_a":0},"init_eqs_eel":"bob = 1.5;\\nro = 0;\\nred = rand(20);","frame_eqs_eel":"rad = 0.57 + 0.1*sin(q1*1.24);\\n\\ntex_zoom = 1.2+0.4*sin(q3);\\ntex_ang = sin(q4*3.29);\\n\\nborder_a = q24/4;\\n\\nx = 0.5 + 0.10*sin(q2*0.62);\\ny = 0.5 + 0.10*sin(q3*0.73);\\na = 0.5 + 0.5*sin(q4*0.452);\\n\\na2 = min(0.8,1+sin(q4*1.6));\\na = 1-a2;"},{"baseVals":{"enabled":1,"sides":15,"thickoutline":1,"num_inst":4,"g":1,"b":1,"g2":0,"a2":0.5,"border_r":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"arg = (q10/num_inst + instance/num_inst)*6.283;\\n\\nrad1 = 0.25 ;\\n\\nccx = 0.5 + 0.1*sin(q4*2.7);\\nccy = 0.5 + 0.1*sin(q1*4.8);\\n\\nx = ccx + rad1*cos(arg * q11-q1*0.31)/q11;\\ny = ccy + rad1*sin(arg)*q32;\\n\\nrad = min(0.3,(bass_att+mid_att)*0.04);\\n\\n//rad *= 0.5+pow(sin(cos(q1)),4)*3;\\n\\nr = 0.5 + 0.4*sin(frame/4);\\nb = 0.5 + 0.4*sin(frame/4 + 2.1);\\ng = 0.5 + 0.4*sin(frame/4 + 4.2);\\nfac = 0.5;\\nr2 = r*fac; b2=b*fac; g2=g*fac;\\na = 1 ; a2 = q11/2;\\n\\nborder_a = (q27<3);"},{"baseVals":{"textured":1,"num_inst":4,"rad":0.40272,"tex_ang":2.51327,"tex_zoom":0.55045,"g":0.95,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"tex_ang = q3;\\nk1 = instance/num_inst*6.28+3.14/4;\\nx = 0.5 + 0.5*cos(k1);\\ny = 0.5 + 0.5*sin(k1);\\n\\n//border_a = q24;"},{"baseVals":{"enabled":1,"sides":5,"num_inst":25,"rad":0.08195,"tex_zoom":0.90529,"g":1,"b":1,"a":0.2,"r2":0.3,"g2":0.3,"b2":0.3,"a2":0.2,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"if (instance==0,k1=0,k1 += 0.05*bass_att);\\n\\nk2 = k1+q10*6.283;\\nccx = 0.2*sin(q4*.96);\\nccy = 0.2*-sin(q3*.296);\\n\\nx = 0.5 + ccx + 0.3*cos(k2+sin(q2*2.29));\\ny = 0.5 + ccy + 0.3*sin(k2)*q32;\\n\\nang = k2;\\nrad = min(0.1,0.035*treb_att);\\n\\n//rad = 0.4; a=1; textured = 1;"}],"waves":[{"baseVals":{"additive":1,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"n = -5000; loop (20000, megabuf(n)=0; gmegabuf(n)=0; n +=1; );\\n\\nMINBPM = 50; MAXBPM = 180; num_res = 80; num_sig=3;\\nblocksize = num_res*12+12; \\nreg04 = blocksize;\\n\\nsig = 0;\\nloop (num_sig,\\n  index = 0;\\n  loop (num_res,\\n    n = blocksize*sig + 12*index;\\n    BPM      = minbpm * pow(maxbpm/minbpm,index/num_res);\\n    gmegabuf(n) = BPM;\\n    index += 1;\\n  );\\nsig+=1);\\n\\npi = 3.1416;\\nOCTAVE = (num_res) * log(2) / log (MAXBPM / MINBPM);\\n\\nprog = 0;\\nbindex = int (rand(8));\\ncount5 = int (rand(8));","frame_eqs_eel":"dt = min (1/fps,0.1) ; //Stability !\\ndec_f = 0.8; dec_m = 1 - 4*dt; dec_s = 1 - dt;\\n\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_s + beat*(1-dec_s);\\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.25);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_m;\\nbindex = (bindex + is_beat) %16;\\nq24 = is_beat;\\nq27 = bindex;\\n\\nsig=0; \\nloop (num_sig,\\n  excite = if (sig==0, bass-bass_att, if (sig==1, mid-mid_att, treb-treb_att));\\n  index = 0; maxquad = 0;\\n  m = sig*blocksize+num_res*12; // Start Infoblock;\\n  gmegabuf(m+2) = 0.001; //lok. MW\\n  gmegabuf(m+3) = 0; //lok. MAX\\n  loop (num_res, \\n    n = sig*blocksize+index*12;  omega=gmegabuf(n) * 6.283/60;\\n    gmegabuf (n+1) *= 1- 0.22*dt; \\n    EC_Steps = int (10*dt*omega)+1; dt1 = dt/EC_Steps;\\n    ex = excite / sqrt(omega);\\n    loop (EC_Steps, // Euler-Cauchy \\n      gmegabuf (n+1) += (ex - sqr(omega)*gmegabuf(n+2)) * dt1;\\n      gmegabuf (n+2) += gmegabuf(n+1) * dt1);\\n    beatcos  = gmegabuf(n+1);  beatsin = gmegabuf(n+2)*omega;\\n    quad     = sqrt (pow(beatsin,2) + pow(beatcos,2)) ;\\n    gmegabuf (m+4) += abs (gmegabuf(n+3)-Quad); //Lok Aenderung\\n    gmegabuf (n+3) = gmegabuf(n+3) *dec_m +  quad* (1-dec_m);\\n    if (gmegabuf(n+3) > gmegabuf(m+3),gmegabuf(m+3)=gmegabuf(n+3),0); //LOK MAX\\n    gmegabuf (m+2) += gmegabuf(n+3)/num_res; //LOK MW\\n    gmegabuf(n+4)= beatcos;\\n    gmegabuf(n+5)= beatsin;\\n  index += 1;);\\nsig+=1;);\\n\\n\\n//Beste raussuchen\\nsig = 0; quali = 0; bestsig = -1;\\nloop (num_sig,\\n  m = sig*blocksize+num_res*12; // Start Infoblock;\\n  tmp = gmegabuf(m+3)/gmegabuf(m+2) ;\\n  if (tmp > quali, quali = tmp; bestsig = sig;, 0);\\nsig += 1);\\n\\nindex = 0; maxind1 = 0; maxv *= dec_s;\\nloop (num_res, \\n  n = bestsig*blocksize+index*12; // Start Infoblock;\\n  tmpv = gmegabuf(n+3);\\n  if (tmpv > maxv, maxv=tmpv; maxind1=index, 0);\\nindex += 1;);\\n\\nBPM   = minbpm * pow(maxbpm/minbpm,maxind1/num_res);\\ntrel1 += BPM/60*dt;\\nq10 = trel1;\\nq11 = (BPM < 125) * (sin(q10*6.283/128)>0.3) * (quali >4) +1;\\nq12 = max(0,quali-2);\\n\\ntrig = is_beat && (bindex%2==0);\\nr1 = if (trig, rand(2)-1, r1);\\nr2 = if (trig, rand(2)-1, r2);\\nr3 = if (trig, rand(2)-1, r3);\\nr4 = if (trig, rand(2)-1, r4);\\n\\nv0 = (bass+mid+treb)/3;\\ndec = if (v0>vol,0.5,dec_s);\\nvol = vol*dec + (1-dec)*v0;\\ndir = if (bindex<12,1,-1);\\ntm1 += (r1>0.3)*dt*(0.8+vol)/1.8*dir;\\ntm2 += (r2>0.3)*dt*(0.8+vol)/2.3;\\ntm3 += (r3>0.3)*dt*(0.8+vol)/3.4;\\ntm4 += (r4>0.3)*dt*(0.8+vol)/3.6;\\n\\ntm1_ = dec_f*tm1_ + (1-dec_f)*tm1;\\ntm2_ = dec_f*tm2_ + (1-dec_f)*tm2;\\ntm3_ = dec_f*tm3_ + (1-dec_f)*tm3;\\ntm4_ = dec_f*tm4_ + (1-dec_f)*tm4;\\n\\nq1 = tm1_;\\nq2 = tm2_;\\nq3 = tm3_;\\nq4 = tm4_;\\n\\nq25 = is_beat * (v0 > 4)* (prog > 30);\\ncount5 += (is_beat && (v0 > 5));;\\n\\ncount6 += (bindex==0)*is_beat*(v0>3);\\nq26 = count5;\\n\\nwarp = cos(q1*0.29)/4;\\nzoom = 1 + 0.025*sin(q3-q1*1.32);\\nrot = .0;\\n\\ntrel3 += sin(q10*6.283)*dt;\\nq18 = trel3;\\n\\nq32 = aspecty;\\nprog += 1;\\nreg50 = dt;\\n\\ntrel4 += (q12 >1.5) * BPM/60*pi/2*dt;\\nq28 = -trel4;\\n\\ndec = if (v0 > vol2, 0.5, dec_m);\\nvol2 = vol2*dec + (1-dec)*v0;\\nq21 = min(1.8,(vol2/5+0.6));\\n\\ntrig = is_beat && (bindex%8==0);\\nif (trig,\\n  obs = rand(10)/30;\\n  iba =   rand(10)/100 * rand(10)/10;\\n,0);\\nob_size = obs;\\nib_a = iba;\\nib_r = 0.3 + 0.2*sin(time/11);\\nib_g = 0.3 + 0.2*sin(time/17);\\nib_b = 0.3 + 0.2*sin(time/7);\\n\\nmonitor = q12;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = ((uv * texsize.xy) * 0.03);\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = (cos(tmpvar_1.y) * sin(-(tmpvar_1.y)));\\n  tmpvar_2.y = (sin(tmpvar_1.x) * cos(-(tmpvar_1.y)));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ((texture (sampler_main, (uv - \\n    ((tmpvar_2 * texsize.zw) * 12.0)\\n  )) * 0.98) - 0.008).xyz;\\n  ret = tmpvar_3.xyz;\\n }","comp":"uniform sampler2D sampler_rand00;\\nfloat fc;\\nfloat size;\\nvec2 hor;\\nvec2 ver;\\nfloat xlat_mutableang1;\\nfloat xlat_mutableca;\\nvec2 xlat_mutabledz;\\nfloat xlat_mutablesa;\\nvec2 xlat_mutableuv1;\\nvec2 xlat_mutableuv4;\\n shader_body { \\n  fc = (0.5 + (0.3 * sin(q4)));\\n  size = (0.4 + (0.1 * sin(q2)));\\n  vec2 tmpvar_1;\\n  tmpvar_1.y = 0.0;\\n  tmpvar_1.x = texsize.z;\\n  hor = (tmpvar_1 * 2.0);\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = 0.0;\\n  tmpvar_2.y = texsize.w;\\n  ver = (tmpvar_2 * 2.0);\\n  vec2 uv_3;\\n  float noise_4;\\n  vec3 ret_5;\\n  uv_3 = (((\\n    (uv - 0.5)\\n   * 2.0) / (1.0 + rad)) + 0.5);\\n  xlat_mutableuv1 = (((\\n    (uv_3 - 0.5)\\n   * aspect.xy) * (1.2 + \\n    (rand_preset.y * 0.4)\\n  )) + 0.5);\\n  xlat_mutableang1 = (((\\n    (q1 / 7.0)\\n   + \\n    (q2 / 9.0)\\n  ) + (q3 / 11.0)) - q26);\\n  xlat_mutableang1 = (xlat_mutableang1 * 1.8);\\n  xlat_mutableca = cos(xlat_mutableang1);\\n  xlat_mutablesa = sin(xlat_mutableang1);\\n  mat2 tmpvar_6;\\n  tmpvar_6[uint(0)].x = xlat_mutableca;\\n  tmpvar_6[uint(0)].y = -(xlat_mutablesa);\\n  tmpvar_6[1u].x = xlat_mutablesa;\\n  tmpvar_6[1u].y = xlat_mutableca;\\n  xlat_mutableuv1 = (((xlat_mutableuv1 - 0.5) * tmpvar_6) + 0.5);\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = xlat_mutableuv1.x;\\n  tmpvar_7.y = (abs((xlat_mutableuv1.y - size)) + size);\\n  mat2 tmpvar_8;\\n  tmpvar_8[uint(0)].x = xlat_mutableca;\\n  tmpvar_8[uint(0)].y = -(xlat_mutablesa);\\n  tmpvar_8[1u].x = xlat_mutablesa;\\n  tmpvar_8[1u].y = xlat_mutableca;\\n  xlat_mutableuv1 = (((tmpvar_7 - 0.5) * tmpvar_8) + 0.5);\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = xlat_mutableuv1.x;\\n  tmpvar_9.y = (abs((xlat_mutableuv1.y - size)) + size);\\n  mat2 tmpvar_10;\\n  tmpvar_10[uint(0)].x = xlat_mutableca;\\n  tmpvar_10[uint(0)].y = -(xlat_mutablesa);\\n  tmpvar_10[1u].x = xlat_mutablesa;\\n  tmpvar_10[1u].y = xlat_mutableca;\\n  xlat_mutableuv1 = (((tmpvar_9 - 0.5) * tmpvar_10) + 0.5);\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = xlat_mutableuv1.x;\\n  tmpvar_11.y = (abs((xlat_mutableuv1.y - size)) + size);\\n  mat2 tmpvar_12;\\n  tmpvar_12[uint(0)].x = xlat_mutableca;\\n  tmpvar_12[uint(0)].y = -(xlat_mutablesa);\\n  tmpvar_12[1u].x = xlat_mutablesa;\\n  tmpvar_12[1u].y = xlat_mutableca;\\n  xlat_mutableuv1 = (((tmpvar_11 - 0.5) * tmpvar_12) + 0.5);\\n  vec2 tmpvar_13;\\n  tmpvar_13.x = xlat_mutableuv1.x;\\n  tmpvar_13.y = (abs((xlat_mutableuv1.y - size)) + size);\\n  mat2 tmpvar_14;\\n  tmpvar_14[uint(0)].x = xlat_mutableca;\\n  tmpvar_14[uint(0)].y = -(xlat_mutablesa);\\n  tmpvar_14[1u].x = xlat_mutablesa;\\n  tmpvar_14[1u].y = xlat_mutableca;\\n  xlat_mutableuv1 = (((tmpvar_13 - 0.5) * tmpvar_14) + 0.5);\\n  vec2 tmpvar_15;\\n  tmpvar_15.x = xlat_mutableuv1.x;\\n  tmpvar_15.y = (abs((xlat_mutableuv1.y - size)) + size);\\n  xlat_mutableuv1 = (((\\n    (tmpvar_15 - fc)\\n   * aspect.yx) + fc) + (0.1 * cos(\\n    (q4 * 2.72)\\n  )));\\n  vec2 tmpvar_16;\\n  tmpvar_16 = fract(xlat_mutableuv1);\\n  xlat_mutabledz.x = dot (((2.0 * \\n    ((texture (sampler_blur1, (tmpvar_16 - hor)).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (tmpvar_16 + hor)).xyz * scale1) + bias1)\\n  )), vec3(0.32, 0.49, 0.29));\\n  xlat_mutabledz.y = dot (((2.0 * \\n    ((texture (sampler_blur1, (tmpvar_16 - ver)).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (tmpvar_16 + ver)).xyz * scale1) + bias1)\\n  )), vec3(0.32, 0.49, 0.29));\\n  float tmpvar_17;\\n  tmpvar_17 = (0.5 / log((1.0 + \\n    pow ((uv_3.x - 0.5), 0.5)\\n  )));\\n  xlat_mutableuv4 = (uv_3 - 0.5);\\n  vec2 tmpvar_18;\\n  tmpvar_18.x = (tmpvar_17 + (time * 0.1));\\n  tmpvar_18.y = (xlat_mutableuv4.y * tmpvar_17);\\n  xlat_mutableuv4 = tmpvar_18;\\n  noise_4 = ((texture (sampler_noise_lq, tmpvar_18).x + 0.25) * (1.0 - texture (sampler_noise_lq, (tmpvar_18 + \\n    (texsize.zw * -4.0)\\n  )).x));\\n  noise_4 = (noise_4 * (0.5 + dot (\\n    vec4(greaterThan (texture (sampler_rand00, tmpvar_18), vec4(0.5, 0.5, 0.5, 0.5)))\\n  , vec4(0.32, 0.49, 0.29, 0.0))));\\n  float tmpvar_19;\\n  tmpvar_19 = clamp ((q21 - (1.1 * rad)), 0.0, 1.0);\\n  ret_5 = ((0.08 + (\\n    (1.3 * (1.2 - tmpvar_19))\\n   * \\n    ((texture (sampler_blur2, tmpvar_16).xyz * scale2) + bias2)\\n  )) * (0.2 + noise_4));\\n  vec2 x_20;\\n  x_20 = (cos((12.0 * tmpvar_16)) + (xlat_mutabledz * 16.0));\\n  vec3 tmpvar_21;\\n  tmpvar_21 = ((tmpvar_19 / (\\n    sqrt(dot (x_20, x_20))\\n   + 0.07)) * ((texture (sampler_blur1, tmpvar_16).xyz * scale1) + bias1));\\n  ret_5 = (max (ret_5, tmpvar_21) + ((0.2 * tmpvar_19) * tmpvar_21));\\n  xlat_mutableang1 = (q28 / 2.0);\\n  xlat_mutableca = cos(xlat_mutableang1);\\n  xlat_mutablesa = sin(xlat_mutableang1);\\n  mat2 tmpvar_22;\\n  tmpvar_22[uint(0)].x = xlat_mutableca;\\n  tmpvar_22[uint(0)].y = -(xlat_mutablesa);\\n  tmpvar_22[1u].x = xlat_mutablesa;\\n  tmpvar_22[1u].y = xlat_mutableca;\\n  xlat_mutableuv1 = (((tmpvar_16 - 0.5) * tmpvar_22) + 0.5);\\n  vec2 tmpvar_23;\\n  tmpvar_23.x = xlat_mutableuv1.y;\\n  tmpvar_23.y = (abs((xlat_mutableuv1.x - size)) + size);\\n  mat2 tmpvar_24;\\n  tmpvar_24[uint(0)].x = xlat_mutableca;\\n  tmpvar_24[uint(0)].y = -(xlat_mutablesa);\\n  tmpvar_24[1u].x = xlat_mutablesa;\\n  tmpvar_24[1u].y = xlat_mutableca;\\n  xlat_mutableuv1 = (((tmpvar_23 - 0.5) * tmpvar_24) + 0.5);\\n  vec2 tmpvar_25;\\n  tmpvar_25.x = xlat_mutableuv1.y;\\n  tmpvar_25.y = (abs((xlat_mutableuv1.x - size)) + size);\\n  xlat_mutableuv1 = tmpvar_25;\\n  float tmpvar_26;\\n  tmpvar_26 = cos((8.0 * tmpvar_25.x));\\n  ret_5 = (ret_5 + ((\\n    ((1.0 - rad) * 0.6)\\n   * \\n    clamp (((0.05 / abs(\\n      sqrt((tmpvar_26 * tmpvar_26))\\n    )) - 0.5), 0.0, 1.0)\\n  ) * noise_4));\\n  vec2 x_27;\\n  x_27 = (uv_3 - 0.5);\\n  vec3 tmpvar_28;\\n  tmpvar_28 = mix (vec3(dot (ret_5, vec3(0.32, 0.49, 0.29))), ret_5, vec3(clamp ((2.2 - \\n    (3.0 * sqrt(dot (x_27, x_27)))\\n  ), 0.0, 1.0)));\\n  ret_5 = tmpvar_28;\\n  vec4 tmpvar_29;\\n  tmpvar_29.w = 1.0;\\n  tmpvar_29.xyz = tmpvar_28;\\n  ret = tmpvar_29.xyz;\\n }"}')},7110:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":0.001,"wave_scale":0.958,"wave_smoothing":0.45,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0.005,"ob_g":0.5,"ob_b":0.5,"ob_a":0.1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":25.6,"mv_y":9.6,"mv_l":0,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"textured":1,"x":0.09,"y":0.9,"rad":0.22437,"tex_zoom":1.76002,"r2":1,"g2":0,"a2":0.6,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"additive":1,"x":0.26,"y":0.2,"rad":0.39317,"tex_zoom":6.19589,"r":0,"g":0.55,"b":0.5,"g2":0.4,"b2":0.4,"a2":0.07,"border_r":0.3,"border_g":0.7,"border_b":0.8,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":44,"additive":1,"x":0.503,"rad":0.03886,"tex_zoom":0.60986,"g":0.1,"a":0.9,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"rad":0.01,"tex_zoom":0.49981,"r":0,"g2":0,"border_r":0.2,"border_g":0.7,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"samples":282,"sep":20,"usedots":1,"thick":1,"additive":1,"scaling":3.91581,"smoothing":0.1,"r":0.2,"g":0.3,"a":0.6,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"usedots":1,"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"r":0,"g":0.2,"b":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"//******** INITIALIZATION *********\\nmyzoom = .1; //MyZoom\\n\\ntele = 1.5; //tele\\nffac = 2.4; //fractal density factor ffac\\nstart = 1;\\n\\nn = 0; loop (10000, gmegabuf(n)=0; n=n+1; );\\nn = 0; loop (10000,  megabuf(n)=0; n=n+1; );\\n\\ngmegabuf(0) = 0;  gmegabuf (1) = 2;  gmegabuf(2) = 1;  gmegabuf (3) = -4;\\ngmegabuf(4) = 3;  gmegabuf (5) = 0;  gmegabuf(6) = 1;  gmegabuf (7) = 5;\\ngmegabuf(8) = 1;  gmegabuf (9) = -3;  gmegabuf(10) = 2; gmegabuf (11) = -4;\\ngmegabuf(12) = -4; gmegabuf (13) = 1; gmegabuf(14) = 2; gmegabuf (15) = 0;\\n\\n\\ngvol = 1;\\nwait = 1;","frame_eqs_eel":"fps_ = .0 * fps_ + 1*if(fps<=25,fps,25+.5*(fps-25));\\ndec_s = 1-.05*30/fps_;\\ndec_xs = 1-.01*30/fps_;\\n\\ndvol = (bass_att + mid_att + treb_att) - (bass+mid+treb);\\ngvol = gvol*dec_xs + (1-dec_xs) * max(0.1,dvol)*6;\\nq8 = min(gvol*.9,1);\\n\\ntrel = trel + sqrt(gvol)/fps_;\\nctrl = pow(max(0,sin(trel*.25)*5-4),4);\\nq31 = ctrl;\\nq32 = .2/(ctrl+.05);\\n\\nchange = (ctrl >= 0.8) && (t0 > 2) || (start == 1);\\nt0 = if ( change, 0, t0 + 1/fps);\\n\\nq7 = myzoom;\\nq16 = tele;\\nq17 = ffac;\\n\\n//Find random starting point\\nif (change == 1,\\n  par1 =  rand(100)/40-.5; //fractal parameter\\n  q19 = par1;\\n  while (exec2(\\n    up = rand(120)/100; //look up\\n\\n    ran1 = rand(800)/100;  ran2 = 0;  ran3 = 1.5 + up;\\n    PosX = rand(10);   PosY = rand(10);\\n    PosZ = if ((up >= 0.4) && (rand(10)> 5), 1.8+rand(100)/100, 2*(rand(100)/100-.5)-.75);\\n\\n    index = 0; mindist = 1; maxdist = 0; avg = 0;\\n    loop (17,\\n      dax = (index%4-1.5) * q16/8; day = (floor(index/4) -1.5) * q16/8;\\n      if (index==16, dax=0; day=0; ,0);\\n      c1 = cos(ran1+dax); c2 = cos(ran2); c3 = cos(ran3+day);\\n      s1 = sin(ran1+dax); s2 = sin(ran2); s3 = sin(ran3+day);\\n\\n      reg20 = c2*c1; reg21 = c2*s1; reg22 = -s2;\\n      reg23 = s3*s2*c1 - c3*s1; reg24 = s3*s2*s1 + c3*c1; reg25 = s3*c2;\\n      reg26 = c3*s2*c1 + s3*s1; reg27 = c3*s2*s1 - s3*c1; reg28 = c3*c2;\\n\\n      //***********BOT*************\\n      //Coord. Trans. must exactly match def in warp S. !!!!\\n      dist = 0.004;\\n      while (exec2(\\n        uvx = reg26*dist/q7; uvy = reg27*dist/q7; uvz = reg28*dist/q7;\\n        uvx += PosX; uvy += PosY; uvz += PosZ;\\n\\n        uv3x = (floor(uvx+511.99))%4;\\n        uv3y = (floor(uvy+511.99))%4;\\n\\n        uvx = 1-abs( 2*(uvx*.5-.25 - int(uvx*.5-.25))-1);\\n        uvy = 1-abs( 2*(uvy*.5-.25 - int(uvy*.5-.25))-1);\\n\\n       ang1 = atan2(uvy,uvx); len = sqrt(uvx*uvx+uvy*uvy)*7.5;\\n        mod1 = .3*gmegabuf( uv3y+uv3x*4);\\n        uvz -= mod1;\\n        len *= 1-.3*floor(uvz*12*mod1+q19);\\n        uvx = len; uvy = ang1; uvz = uvz;\\n\\n        uvx0 = uvx; uvy0 = uvy; uvz0 = uvz;\\n        loop (7+1,\\n          uvx = if (uvx > 1, 2-uvx, if(uvx < -1, -2-uvx, uvx));\\n          uvy = if (uvy > 1, 2-uvy, if(uvy < -1, -2-uvy, uvy));\\n          uvz = if (uvz > 1, 2-uvz, if(uvz < -1, -2-uvz, uvz));\\n          slen = uvx*uvx + uvy*uvy + uvz*uvz;\\n          uvx = if (slen < 0.25, uvx*4, if (slen < 1, uvx/slen, uvx)) *q17 + uvx0;\\n          uvy = if (slen < 0.25, uvy*4, if (slen < 1, uvy/slen, uvy)) *q17 + uvy0;\\n          uvz = if (slen < 0.25, uvz*4, if (slen < 1, uvz/slen, uvz)) *q17 + uvz0;\\n        );\\n        len = sqrt(uvx*uvx + uvy*uvy + uvz*uvz);\\n        dist *= 1.05;\\n      ,(dist < 0.8) && (len > 15)));\\n       if (dist > maxdist, maxdist = dist, 0);\\n       if (dist < mindist, mindist = dist, 0);\\n       avg += dist/17;\\n      index += 1;\\n    ); //loop 17\\n  , (avg > 0.7) || (mindist < 0.1))); //end while\\n\\n  lposx = rand(100)/100;\\n  lposy = rand(100)/100;\\n\\n,0);\\n\\n\\n//Position\\nq4 = PosX; q5 = PosY; q6 = PosZ;\\nq1 = lposx+.3*sin(time*.07);\\nq2 = lposy+.3*sin(time*.1);\\n\\n  //Multiply new RotMat by old one\\n  q20 = reg20;\\n  q21 = reg21;\\n  q22 = reg22;\\n  q23 = reg23;\\n  q24 = reg24;\\n  q25 = reg25;\\n  q26 = reg26;\\n  q27 = reg27;\\n  q28 = reg28;\\n\\nq14 =  (start + ctrl)*.05;\\nstart = start * .95;\\n\\nwarp = 0.0; zoom = 1; dx = 0; dy = 0; rot = 0;\\nmonitor = dist;\\nq30 = start;\\nq3 = up;\\nq19 = par1;\\n\\nif (time > ttrig + wait, trig = 1, trig = 0);\\nif (trig, ttrig = time; wait = rand(20)/100, 0);\\nif (trig, flashx = rand(100)/70-.2; flashy = rand(100)/70-.2,0);\\nq10 = flashx; q11 = flashy;\\n\\nmonitor = q31;","pixel_eqs_eel":"","warp":"float sustain;\\nfloat xlat_mutabledist;\\nfloat xlat_mutablelimit;\\nfloat xlat_mutablestruc;\\nvec2 xlat_mutableuv1;\\nvec3 xlat_mutableuv2;\\n shader_body { \\n  mat3 tmpvar_1;\\n  tmpvar_1[uint(0)].x = q20;\\n  tmpvar_1[uint(0)].y = q23;\\n  tmpvar_1[uint(0)].z = q26;\\n  tmpvar_1[1u].x = q21;\\n  tmpvar_1[1u].y = q24;\\n  tmpvar_1[1u].z = q27;\\n  tmpvar_1[2u].x = q22;\\n  tmpvar_1[2u].y = q25;\\n  tmpvar_1[2u].z = q28;\\n  vec3 tmpvar_2;\\n  tmpvar_2.x = q4;\\n  tmpvar_2.y = q5;\\n  tmpvar_2.z = q6;\\n  sustain = (0.98 - (2.0 * q14));\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = q1;\\n  tmpvar_3.y = q2;\\n  float sus_4;\\n  vec3 ret_5;\\n  xlat_mutableuv1 = (((uv_orig - 0.5) * aspect.xy) * q16);\\n  vec4 tmpvar_6;\\n  tmpvar_6 = texture (sampler_pw_noise_lq, (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.yz));\\n  vec3 tmpvar_7;\\n  tmpvar_7 = tmpvar_6.xyz;\\n  vec3 tmpvar_8;\\n  tmpvar_8 = (tmpvar_6.xyz - 0.5);\\n  bool tmpvar_9;\\n  tmpvar_9 = (tmpvar_6.y < 0.2);\\n  if (tmpvar_9) {\\n    xlat_mutabledist = tmpvar_7.x;\\n  } else {\\n    vec4 na_10;\\n    vec4 tmpvar_11;\\n    tmpvar_11.xy = texture (sampler_pc_main, (uv_orig + (texsize.zw * vec2(0.0, 1.0)))).yz;\\n    tmpvar_11.zw = texture (sampler_pc_main, (uv_orig + (texsize.zw * vec2(-1.0, 0.0)))).yz;\\n    vec4 tmpvar_12;\\n    tmpvar_12 = floor(((255.0 * tmpvar_11) + vec4(0.5, 0.5, 0.5, 0.5)));\\n    vec4 tmpvar_13;\\n    tmpvar_13.xy = texture (sampler_pc_main, (uv_orig - texsize.zw)).yz;\\n    tmpvar_13.zw = texture (sampler_pc_main, (uv_orig + (texsize.zw * vec2(1.0, -1.0)))).yz;\\n    vec4 tmpvar_14;\\n    tmpvar_14 = floor(((255.0 * tmpvar_13) + vec4(0.5, 0.5, 0.5, 0.5)));\\n    vec4 tmpvar_15;\\n    tmpvar_15.xy = texture (sampler_pc_main, (uv_orig + texsize.zw)).yz;\\n    tmpvar_15.zw = texture (sampler_pc_main, (uv_orig + (texsize.zw * vec2(-1.0, 1.0)))).yz;\\n    vec4 tmpvar_16;\\n    tmpvar_16 = floor(((255.0 * tmpvar_15) + vec4(0.5, 0.5, 0.5, 0.5)));\\n    vec4 tmpvar_17;\\n    tmpvar_17.xy = texture (sampler_pc_main, (uv_orig + (texsize.zw * vec2(0.0, -1.0)))).yz;\\n    tmpvar_17.zw = texture (sampler_pc_main, (uv_orig + (texsize.zw * vec2(1.0, 0.0)))).yz;\\n    vec4 tmpvar_18;\\n    tmpvar_18 = floor(((255.0 * tmpvar_17) + vec4(0.5, 0.5, 0.5, 0.5)));\\n    vec4 tmpvar_19;\\n    tmpvar_19.xy = (tmpvar_12.yw + (0.015625 * tmpvar_12.xz));\\n    tmpvar_19.zw = (tmpvar_14.yw + (0.015625 * tmpvar_14.xz));\\n    vec4 tmpvar_20;\\n    tmpvar_20.xy = (tmpvar_16.yw + (0.015625 * tmpvar_16.xz));\\n    tmpvar_20.zw = (tmpvar_18.yw + (0.015625 * tmpvar_18.xz));\\n    vec4 tmpvar_21;\\n    tmpvar_21 = max (tmpvar_19, tmpvar_20);\\n    na_10.zw = tmpvar_21.zw;\\n    na_10.xy = max (tmpvar_21.xy, tmpvar_21.zw);\\n    xlat_mutabledist = ((1.007812 - (\\n      max (na_10.x, na_10.y)\\n     * 0.0039216)) + (0.0013 * tmpvar_8.x));\\n  };\\n  vec2 tmpvar_22;\\n  tmpvar_22 = (0.0039216 * floor((\\n    (255.0 * texture (sampler_pc_main, uv_orig).yz)\\n   + vec2(0.5, 0.5))));\\n  float tmpvar_23;\\n  tmpvar_23 = min (xlat_mutabledist, ((1.007812 - tmpvar_22.y) - (0.015625 * tmpvar_22.x)));\\n  xlat_mutabledist = tmpvar_23;\\n  xlat_mutablelimit = (15.0 + (15.0 * tmpvar_23));\\n  vec3 tmpvar_24;\\n  tmpvar_24.xy = (xlat_mutableuv1 * tmpvar_23);\\n  tmpvar_24.z = tmpvar_23;\\n  xlat_mutableuv2 = (((tmpvar_24 / q7) * tmpvar_1) + tmpvar_2);\\n  vec3 uvi_25;\\n  uvi_25.z = xlat_mutableuv2.z;\\n  float mod1_26;\\n  float len_27;\\n  vec3 zzlo_28;\\n  vec3 zz_29;\\n  vec2 tmpvar_30;\\n  tmpvar_30 = floor((xlat_mutableuv2.xy + 63.99));\\n  mod1_26 = mat4(0.0, 0.9, 0.3, -1.2, 0.6, 0.0, -0.9, 0.3, 0.3, 0.3, 0.6, 0.6, -1.2, 1.5, -1.2, 0.0)[int((float(mod (tmpvar_30.y, 4.0))))][int((float(mod (tmpvar_30.x, 4.0))))];\\n  uvi_25.xy = (1.0 - abs((\\n    (fract(((xlat_mutableuv2.xy - 0.5) * 0.5)) * 2.0)\\n   - 1.0)));\\n  float angle_31;\\n  float tmpvar_32;\\n  tmpvar_32 = abs(uvi_25.y);\\n  if ((uvi_25.x >= 0.0)) {\\n    angle_31 = (1.0 - ((uvi_25.x - tmpvar_32) / (uvi_25.x + tmpvar_32)));\\n  } else {\\n    angle_31 = (3.0 - ((uvi_25.x + tmpvar_32) / (tmpvar_32 - uvi_25.x)));\\n  };\\n  angle_31 = ((angle_31 * 3.141593) / 4.0);\\n  float tmpvar_33;\\n  if ((uvi_25.y < 0.0)) {\\n    tmpvar_33 = -(angle_31);\\n  } else {\\n    tmpvar_33 = angle_31;\\n  };\\n  len_27 = (sqrt(dot (uvi_25.xy, uvi_25.xy)) * 7.5);\\n  uvi_25.z = (xlat_mutableuv2.z - mod1_26);\\n  len_27 = (len_27 * (1.0 - (0.3 * \\n    floor((((12.0 * uvi_25.z) * mod1_26) + q19))\\n  )));\\n  vec3 tmpvar_34;\\n  tmpvar_34.x = len_27;\\n  tmpvar_34.y = tmpvar_33;\\n  tmpvar_34.z = uvi_25.z;\\n  zz_29 = ((2.0 * clamp (tmpvar_34, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - tmpvar_34);\\n  zz_29 = (zz_29 * (clamp (\\n    max ((0.25 / dot (zz_29, zz_29)), 0.25)\\n  , 0.0, 1.0) * 4.0));\\n  zz_29 = ((q17 * zz_29) + tmpvar_34);\\n  zz_29 = ((2.0 * clamp (zz_29, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_29);\\n  zz_29 = (zz_29 * (clamp (\\n    max ((0.25 / dot (zz_29, zz_29)), 0.25)\\n  , 0.0, 1.0) * 4.0));\\n  zz_29 = ((q17 * zz_29) + tmpvar_34);\\n  zz_29 = ((2.0 * clamp (zz_29, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_29);\\n  zz_29 = (zz_29 * (clamp (\\n    max ((0.25 / dot (zz_29, zz_29)), 0.25)\\n  , 0.0, 1.0) * 4.0));\\n  zz_29 = ((q17 * zz_29) + tmpvar_34);\\n  zz_29 = ((2.0 * clamp (zz_29, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_29);\\n  zz_29 = (zz_29 * (clamp (\\n    max ((0.25 / dot (zz_29, zz_29)), 0.25)\\n  , 0.0, 1.0) * 4.0));\\n  zz_29 = ((q17 * zz_29) + tmpvar_34);\\n  zz_29 = ((2.0 * clamp (zz_29, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_29);\\n  zz_29 = (zz_29 * (clamp (\\n    max ((0.25 / dot (zz_29, zz_29)), 0.25)\\n  , 0.0, 1.0) * 4.0));\\n  zz_29 = ((q17 * zz_29) + tmpvar_34);\\n  zz_29 = ((2.0 * clamp (zz_29, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_29);\\n  zz_29 = (zz_29 * (clamp (\\n    max ((0.25 / dot (zz_29, zz_29)), 0.25)\\n  , 0.0, 1.0) * 4.0));\\n  zz_29 = ((q17 * zz_29) + tmpvar_34);\\n  zzlo_28 = zz_29;\\n  zz_29 = ((2.0 * clamp (zz_29, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_29);\\n  zz_29 = (zz_29 * (clamp (\\n    max ((0.25 / dot (zz_29, zz_29)), 0.25)\\n  , 0.0, 1.0) * 4.0));\\n  zz_29 = ((q17 * zz_29) + tmpvar_34);\\n  zz_29 = ((2.0 * clamp (zz_29, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_29);\\n  zz_29 = (zz_29 * (clamp (\\n    max ((0.25 / dot (zz_29, zz_29)), 0.25)\\n  , 0.0, 1.0) * 4.0));\\n  zz_29 = ((q17 * zz_29) + tmpvar_34);\\n  float tmpvar_35;\\n  tmpvar_35 = sqrt(dot (zz_29, zz_29));\\n  vec3 tmpvar_36;\\n  tmpvar_36.x = sqrt(dot (zzlo_28, zzlo_28));\\n  tmpvar_36.y = tmpvar_35;\\n  tmpvar_36.z = (((tmpvar_33 - mod1_26) - fract(\\n    (zz_29.y * 0.0001)\\n  )) * 0.3);\\n  float tmpvar_37;\\n  tmpvar_37 = mix (tmpvar_35, tmpvar_36.x, tmpvar_23);\\n  vec2 tmpvar_38;\\n  tmpvar_38 = (0.0039216 * floor((\\n    (255.0 * texture (sampler_pc_main, uv_orig).yz)\\n   + vec2(0.5, 0.5))));\\n  xlat_mutablestruc = (clamp ((\\n    (((-(xlat_mutablelimit) + tmpvar_35) * 0.02) + 1.0)\\n   + tmpvar_36.z), 0.0, 1.0) - (float(\\n    (((1.007812 - tmpvar_38.y) - (0.015625 * tmpvar_38.x)) > (1.1 - ((texture (sampler_blur1, \\n      (uv_orig + (0.1 * (tmpvar_3 - 0.5)))\\n    ).xyz * scale1) + bias1).z))\\n  ) * 0.5));\\n  sus_4 = sustain;\\n  if (tmpvar_9) {\\n    sus_4 = 1.0;\\n  };\\n  float x_39;\\n  x_39 = (1.0 - tmpvar_23);\\n  vec2 tmpvar_40;\\n  tmpvar_40 = (0.0039216 * floor((\\n    (255.0 * vec2(x_39))\\n   + vec2(0.5, 0.5))));\\n  vec2 tmpvar_41;\\n  tmpvar_41.x = ((64.0 * (x_39 - tmpvar_40.x)) + 0.495);\\n  tmpvar_41.y = tmpvar_40.x;\\n  vec3 tmpvar_42;\\n  vec4 tmpvar_43;\\n  tmpvar_43 = texture (sampler_main, uv_orig);\\n  tmpvar_42.x = mix (clamp (xlat_mutablestruc, 0.0, 1.0), tmpvar_43.x, sus_4);\\n  tmpvar_42.yz = tmpvar_41;\\n  vec3 tmpvar_44;\\n  tmpvar_44 = mix (tmpvar_42, ((tmpvar_43.xyz * sus_4) - 0.003921569), vec3(clamp ((tmpvar_37 - xlat_mutablelimit), 0.0, 1.0)));\\n  ret_5.yz = tmpvar_44.yz;\\n  ret_5.x = (tmpvar_44.x + (tmpvar_8.x * -0.02));\\n  vec4 tmpvar_45;\\n  tmpvar_45.w = 1.0;\\n  tmpvar_45.xyz = ret_5;\\n  ret = tmpvar_45.xyz;\\n }","comp":"vec3 skycol;\\nfloat xlat_mutablebdist;\\nfloat xlat_mutablecloud;\\nvec3 xlat_mutablestruc;\\nvec2 xlat_mutableuv1;\\nvec2 xlat_mutableuv2;\\nvec2 xlat_mutableuv3;\\nfloat xlat_mutablez;\\n shader_body { \\n  skycol = (vec3(0.1333333, 0.1666667, 0.3333333) * (2.0 - q8));\\n  vec2 tmpvar_1;\\n  tmpvar_1.x = q1;\\n  tmpvar_1.y = q2;\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = q10;\\n  tmpvar_2.y = q11;\\n  vec2 uv_3;\\n  vec3 sky_4;\\n  vec2 trel_5;\\n  float z0_6;\\n  uv_3 = (uv + (texsize.zw * 0.5));\\n  uv_3 = (uv_3 + ((q31 * 0.1) * (texture (sampler_pw_noise_lq, \\n    (((uv_3 - 0.5) * q32) + (rand_frame.xy * q31))\\n  ) - 0.5)).xy);\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = 0.5;\\n  tmpvar_7.y = (0.5 + q3);\\n  xlat_mutableuv1 = (uv_3 - tmpvar_7);\\n  vec3 tmpvar_8;\\n  tmpvar_8 = mix (texture (sampler_main, uv_3).xyz, ((texture (sampler_blur1, uv_3).xyz * scale1) + bias1), vec3(0.2, 0.2, 0.2));\\n  xlat_mutablebdist = (1.0 - tmpvar_8.z);\\n  z0_6 = clamp ((0.25 / (xlat_mutableuv1.y - 0.3)), -0.7, 0.0);\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = q20;\\n  tmpvar_9.y = q21;\\n  trel_5 = ((0.015 * time) * tmpvar_9);\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = (xlat_mutableuv1.x * z0_6);\\n  tmpvar_10.y = z0_6;\\n  xlat_mutableuv2 = (tmpvar_10 - trel_5);\\n  vec2 uvi_11;\\n  uvi_11 = ((xlat_mutableuv2 * 3.0) + (2.0 * trel_5));\\n  xlat_mutablecloud = dot (texture (sampler_noise_hq, (xlat_mutableuv2 + (0.015 * \\n    (texture (sampler_noise_hq, uvi_11).xy + (texture (sampler_noise_hq, (uvi_11 * 2.0)).xy / 2.0))\\n  ))), vec4(0.32, 0.49, 0.29, 0.0));\\n  xlat_mutablez = (z0_6 + (xlat_mutablecloud * 0.015));\\n  vec2 tmpvar_12;\\n  tmpvar_12.x = (xlat_mutableuv1.x * xlat_mutablez);\\n  tmpvar_12.y = xlat_mutablez;\\n  xlat_mutableuv2 = (tmpvar_12 - trel_5);\\n  vec2 uvi_13;\\n  uvi_13 = ((xlat_mutableuv2 * 3.0) + (2.0 * trel_5));\\n  xlat_mutablecloud = dot (texture (sampler_noise_hq, (xlat_mutableuv2 + (0.015 * \\n    (texture (sampler_noise_hq, uvi_13).xy + (texture (sampler_noise_hq, (uvi_13 * 2.0)).xy / 2.0))\\n  ))), vec4(0.32, 0.49, 0.29, 0.0));\\n  xlat_mutablez = (z0_6 + (xlat_mutablecloud * 0.015));\\n  vec2 tmpvar_14;\\n  tmpvar_14.x = (xlat_mutableuv1.x * xlat_mutablez);\\n  tmpvar_14.y = xlat_mutablez;\\n  xlat_mutableuv2 = (tmpvar_14 - trel_5);\\n  vec2 uvi_15;\\n  uvi_15 = ((xlat_mutableuv2 * 3.0) + (2.0 * trel_5));\\n  xlat_mutablecloud = dot (texture (sampler_noise_hq, (xlat_mutableuv2 + (0.015 * \\n    (texture (sampler_noise_hq, uvi_15).xy + (texture (sampler_noise_hq, (uvi_15 * 2.0)).xy / 2.0))\\n  ))), vec4(0.32, 0.49, 0.29, 0.0));\\n  xlat_mutablez = (z0_6 + (xlat_mutablecloud * 0.015));\\n  vec2 tmpvar_16;\\n  tmpvar_16.x = (xlat_mutableuv1.x * xlat_mutablez);\\n  tmpvar_16.y = xlat_mutablez;\\n  xlat_mutableuv2 = (tmpvar_16 - trel_5);\\n  vec2 uvi_17;\\n  uvi_17 = ((xlat_mutableuv2 * 3.0) + (2.0 * trel_5));\\n  xlat_mutablecloud = dot (texture (sampler_noise_hq, (xlat_mutableuv2 + (0.015 * \\n    (texture (sampler_noise_hq, uvi_17).xy + (texture (sampler_noise_hq, (uvi_17 * 2.0)).xy / 2.0))\\n  ))), vec4(0.32, 0.49, 0.29, 0.0));\\n  vec2 x_18;\\n  x_18 = ((uv_3 - (xlat_mutablecloud * 0.2)) - tmpvar_2);\\n  xlat_mutableuv3 = (uv_3 * vec2(6.0, 3.0));\\n  sky_4 = (((\\n    (1.0 - xlat_mutablecloud)\\n   * skycol) + (\\n    ((clamp ((bass_att - 1.0), 0.0, 1.0) / sqrt(dot (x_18, x_18))) * (1.0 - xlat_mutablecloud))\\n   * vec3(0.0, 0.3, 0.6))) * clamp ((\\n    (16.0 * ((texture (sampler_blur1, fract(\\n      (xlat_mutableuv3 + (floor(xlat_mutableuv3.x) * 0.3))\\n    )).xyz * scale1) + bias1).x)\\n   - \\n    (64.0 * (xlat_mutableuv1.y + 0.1))\\n  ), 0.0, 1.0));\\n  sky_4 = (sky_4 * clamp ((\\n    (xlat_mutablebdist * 16.0)\\n   - 15.0), 0.0, 1.0));\\n  vec2 x_19;\\n  x_19 = (uv_3 - tmpvar_1);\\n  xlat_mutablestruc = ((mix (\\n    (q8 * clamp (pow (tmpvar_8.xxx, vec3(1.0, 1.8, 4.0)), 0.0, 1.0))\\n  , tmpvar_8.xxx, vec3(xlat_mutablebdist)) * (1.2 - xlat_mutablebdist)) * clamp ((1.25 - \\n    sqrt(dot (x_19, x_19))\\n  ), 0.0, 1.0));\\n  xlat_mutablestruc = (xlat_mutablestruc + ((\\n    ((((8.0 * tmpvar_8.x) * tmpvar_8.x) * clamp ((\\n      (2.0 * treb_att)\\n     - 3.0), 0.0, 1.0)) * mix (xlat_mutablebdist, (1.0 - xlat_mutablebdist), float((rand_frame.x > 0.5))))\\n   * \\n    (1.2 - clamp ((4.0 * (\\n      (((texture (sampler_blur1, fract(\\n        (uv_3 - ((2.0 - tmpvar_2) * 0.01))\\n      )).xyz * scale1) + bias1).z - 0.1)\\n     - tmpvar_8.z)), 0.0, 1.0))\\n  ) * skycol));\\n  vec4 tmpvar_20;\\n  tmpvar_20.w = 1.0;\\n  tmpvar_20.xyz = (sky_4 + xlat_mutablestruc);\\n  ret = tmpvar_20.xyz;\\n }"}')},5577:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":4,"gammaadj":1.98,"decay":0.5,"echo_zoom":0.952,"echo_alpha":0.5,"echo_orient":3,"wave_mode":6,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.312,"wave_scale":1.229,"wave_smoothing":0,"wave_mystery":0.2,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0.005,"ob_a":0.2,"ib_size":0,"ib_r":0,"ib_g":0,"ib_a":1,"mv_x":32,"mv_y":24,"mv_l":0,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"sides":23,"additive":1,"num_inst":128,"rad":0.01,"tex_zoom":4.57482,"r":0,"g":1,"b":1,"g2":0,"border_r":0.8,"border_g":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"k1 = instance/num_inst*6.28;\\n\\noz = k1  +time*.1;\\noz = 1+int(oz)-oz;\\n\\nfov = .001;\\ntrel = time;\\n\\np1 = sin(trel);\\np2 = sin(trel/3);\\np3 = sin(trel/5);\\np4 = sin(trel/7);\\n\\n\\nang1 = 6.28*sin(k1*17);\\nrad1 = 4*pow(cos(k1*7),2)+1;\\n\\n\\nox = rad1*cos(ang1)+ oz*oz*.0/fov*(0*p1*oz + 5*p2*(1-oz));\\noy = rad1*sin(ang1)+ oz*oz*.0/fov*(0*p3*oz + 5*p4*(1-oz));\\n\\n//oz = oz*oz;\\n//oz = sqrt(oz);\\n\\nk2 = .002;\\nx = fov*ox/(oz+k2)+.5;\\ny = 0*fov*oy/(oz+k2)+.5;\\ny = 0;\\nrad = abs(fov/oz);\\na = above(oz,0) *(2-oz)/2*q23;\\na2 = 0;\\n\\n"},{"baseVals":{"sides":24,"additive":1,"y":1,"rad":0.08277,"tex_zoom":0.49981,"r":0,"g":0.4,"b":1,"g2":0,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":32,"textured":1,"rad":0.73893,"tex_zoom":1.22384,"g":1,"b":1,"g2":0,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":63,"textured":1,"y":1,"rad":0.54822,"tex_zoom":0.49981,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0,"a":0.6,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"y = sample;\\nx = .0 + value1*.1;"},{"baseVals":{"samples":232,"usedots":1,"additive":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"index2 = rand(8);\\npx = rand(100);\\npy = rand(100);\\npz = rand(100);","frame_eqs_eel":"dec_med = pow (0.85, 30/fps);\\ndec_slow = pow (0.95, 30/fps);\\nbeat = mid;\\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, 1.2*avg) * above (time, t0+.1);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %32;\\nindex2 = (index2 + is_beat*bnot(index))%8;\\n\\nspb = min(t0-t0a + .01,2); t0a = t0;\\nspb_ = if(is_beat,spb_ *.9 +.1*spb, spb_);\\nmindev = min(min(abs(spb-spb_),abs(spb*2-spb_)),abs(spb-spb_*2));\\nsdev = if(is_beat,sdev * .96 + .04*pow(mindev+.01,2),sdev);\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak+.01;\\nq24 = is_beat;\\nq27 = index;\\nq28 = index2;\\npuls = puls*dec_med + (1-dec_med)*q24*16*bnot(index%4);\\nq23 = min(1,puls);\\n\\ntest = test + above(beat,avg*1.2) * (beat-avg)/fps*30*4;\\ntic = q27/2;\\n\\nl1angz = tic*0+ test;\\nl1angy = (1+sin(2*test))*1.6/2;\\nsw1 = (q28%2) * above(avg,1);\\nl1angy = l1angy-1/q22*sw1+ (1-sw1)*q22/8;\\nl1angy = l1angy+above(avg,1.2)*2*sin(q22);\\nl1angz = l1angz+above(avg,1.2)*(q22)*above(q28,4);\\n\\nq10 = cos(l1angz)*sin(l1angy);\\nq11 = sin(l1angz)*sin(l1angy);\\nq12 = abs(cos(l1angy)*cos(l1angy));\\n\\ntrig = q24 * bnot(index%2);\\nran1 = if (trig,rand(100)/100-.5, ran1);\\nran2 = if (trig,rand(100)/100-.5, ran2);\\nq13 = ran1/2;\\nq14 = ran2/2;\\n\\npp =  4*avg*q13/fps;\\npp = 1/fps;\\ncrit= int(q27/8);\\npx = px + equal(crit,0)*pp;\\npy = py + equal(crit,1)*pp;\\npz = pz + equal(crit,2)*pp;\\n\\ntrel = trel + 1/spb_/fps;\\njump = int(trel) * below(sdev,.004*avg);\\n\\nq15 = px+jump;\\nq16 = py+jump;\\nq17 = pz+jump;\\n\\nq30 = above(q28,5);\\nmonitor = avg;\\n\\nq29 = q22/16*(above(q22,1.5)+.8-avg)+(sin(time/5)-.8)*.1;\\n\\nzoom = 1;\\nwarp = 0.0; rot = 0;\\ndx = 0;\\ndy = -.02;","pixel_eqs_eel":"","warp":"float clip1;\\nvec2 xlat_mutableKugel1;\\nvec3 xlat_mutablelight;\\nfloat xlat_mutablerad1;\\nfloat xlat_mutableray1;\\nvec2 xlat_mutablersk;\\nfloat xlat_mutablesun1;\\nvec2 xlat_mutableuv1;\\nvec2 xlat_mutableuv3;\\nvec2 xlat_mutableuv4;\\nvec2 xlat_mutableuv5;\\n shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1.x = q13;\\n  tmpvar_1.y = q14;\\n  clip1 = (float((rand_preset.x >= 0.5)) + 1.0);\\n  vec2 uv_2;\\n  uv_2 = uv;\\n  vec2 uv2_3;\\n  float ff_5;\\n  float k1_6;\\n  float ky_7;\\n  vec3 ret_8;\\n  xlat_mutableuv1 = ((uv - vec2(0.5, 0.5)) * aspect.xy);\\n  xlat_mutableuv3 = (58.0 * xlat_mutableuv1);\\n  ky_7 = clamp ((0.04 - (xlat_mutableuv3.y / 40.0)), 0.0, 1.0);\\n  k1_6 = (xlat_mutableuv3.x - (sign(xlat_mutableuv3.x) * 14.0));\\n  k1_6 = (k1_6 - ((\\n    sign(k1_6)\\n   * q28) * 2.0));\\n  k1_6 = (k1_6 - (sign(k1_6) * 8.0));\\n  ff_5 = (16.0 + (16.0 * rand_preset.z));\\n  for (int n_4 = 1; float(n_4) <= 6.0; n_4++) {\\n    k1_6 = (k1_6 + ((\\n      ((-(ff_5) * float(n_4)) * sign(k1_6))\\n     * ky_7) * ky_7));\\n    ky_7 = clamp ((ky_7 - 0.1), 0.0, 1.0);\\n  };\\n  float tmpvar_9;\\n  tmpvar_9 = clamp (k1_6, -1.57, 1.57);\\n  k1_6 = tmpvar_9;\\n  float tmpvar_10;\\n  tmpvar_10 = clamp ((cos(tmpvar_9) - 0.02), 0.0, 1.0);\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = cos(q15);\\n  tmpvar_11.y = 0.0;\\n  xlat_mutablersk = (xlat_mutableuv1 + (0.3 * tmpvar_11));\\n  xlat_mutablerad1 = ((16.0 * sqrt(\\n    dot (xlat_mutablersk, xlat_mutablersk)\\n  )) * (2.0 + cos(q17)));\\n  xlat_mutableuv4 = ((sin(xlat_mutablerad1) / cos(xlat_mutablerad1)) * normalize(xlat_mutablersk));\\n  xlat_mutableKugel1 = (xlat_mutableuv4 * clamp ((9.0 - \\n    (7.0 * xlat_mutablerad1)\\n  ), 0.0, 1.0));\\n  vec4 tmpvar_12;\\n  tmpvar_12 = (1.0 + slow_roam_sin);\\n  xlat_mutablelight = ((0.1 / xlat_mutablerad1) * pow (vec4(q23), tmpvar_12)).xyz;\\n  uv_2 = (uv + (xlat_mutableKugel1 * 0.1));\\n  vec2 tmpvar_13;\\n  tmpvar_13.x = 0.0;\\n  tmpvar_13.y = cos((q16 / 2.0));\\n  xlat_mutablersk = (xlat_mutableuv1 + (0.3 * tmpvar_13));\\n  xlat_mutablerad1 = ((16.0 * sqrt(\\n    dot (xlat_mutablersk, xlat_mutablersk)\\n  )) * (2.0 + cos(\\n    (q17 * 2.0)\\n  )));\\n  xlat_mutableuv4 = ((sin(xlat_mutablerad1) / cos(xlat_mutablerad1)) * normalize(xlat_mutablersk));\\n  xlat_mutableKugel1 = (xlat_mutableuv4 * clamp ((9.0 - \\n    (7.0 * xlat_mutablerad1)\\n  ), 0.0, 1.0));\\n  xlat_mutablelight = (xlat_mutablelight + ((0.1 / xlat_mutablerad1) * pow (vec4(q23), tmpvar_12)).xyz);\\n  uv_2 = (uv_2 + (xlat_mutableKugel1 * 0.1));\\n  vec2 tmpvar_14;\\n  tmpvar_14.x = cos((q15 / 3.0));\\n  tmpvar_14.y = 0.0;\\n  xlat_mutablersk = (xlat_mutableuv1 + (0.3 * tmpvar_14));\\n  xlat_mutablerad1 = ((16.0 * sqrt(\\n    dot (xlat_mutablersk, xlat_mutablersk)\\n  )) * (2.0 + cos(\\n    (q17 * 3.0)\\n  )));\\n  xlat_mutableuv4 = ((sin(xlat_mutablerad1) / cos(xlat_mutablerad1)) * normalize(xlat_mutablersk));\\n  xlat_mutableKugel1 = (xlat_mutableuv4 * clamp ((9.0 - \\n    (7.0 * xlat_mutablerad1)\\n  ), 0.0, 1.0));\\n  xlat_mutablelight = (xlat_mutablelight + ((0.1 / xlat_mutablerad1) * pow (vec4(q23), tmpvar_12)).xyz);\\n  uv_2 = (uv_2 + (xlat_mutableKugel1 * 0.1));\\n  uv_2 = (uv_2 + (tmpvar_10 * 0.05));\\n  vec2 tmpvar_15;\\n  tmpvar_15 = ((uv_2.yx - 0.5) * (2.0 + tmpvar_10));\\n  float ex_16;\\n  ex_16 = (0.5 + ((0.3 * q28) / 8.0));\\n  float tmpvar_17;\\n  tmpvar_17 = sqrt(((tmpvar_15.x * tmpvar_15.x) + (tmpvar_15.y * tmpvar_15.y)));\\n  float tmpvar_18;\\n  float tmpvar_19;\\n  tmpvar_19 = (min (abs(\\n    (tmpvar_15.y / tmpvar_15.x)\\n  ), 1.0) / max (abs(\\n    (tmpvar_15.y / tmpvar_15.x)\\n  ), 1.0));\\n  float tmpvar_20;\\n  tmpvar_20 = (tmpvar_19 * tmpvar_19);\\n  tmpvar_20 = (((\\n    ((((\\n      ((((-0.01213232 * tmpvar_20) + 0.05368138) * tmpvar_20) - 0.1173503)\\n     * tmpvar_20) + 0.1938925) * tmpvar_20) - 0.3326756)\\n   * tmpvar_20) + 0.9999793) * tmpvar_19);\\n  tmpvar_20 = (tmpvar_20 + (float(\\n    (abs((tmpvar_15.y / tmpvar_15.x)) > 1.0)\\n  ) * (\\n    (tmpvar_20 * -2.0)\\n   + 1.570796)));\\n  tmpvar_18 = (tmpvar_20 * sign((tmpvar_15.y / tmpvar_15.x)));\\n  if ((abs(tmpvar_15.x) > (1e-08 * abs(tmpvar_15.y)))) {\\n    if ((tmpvar_15.x < 0.0)) {\\n      if ((tmpvar_15.y >= 0.0)) {\\n        tmpvar_18 += 3.141593;\\n      } else {\\n        tmpvar_18 = (tmpvar_18 - 3.141593);\\n      };\\n    };\\n  } else {\\n    tmpvar_18 = (sign(tmpvar_15.y) * 1.570796);\\n  };\\n  vec2 tmpvar_21;\\n  tmpvar_21.x = (pow (tmpvar_17, ex_16) * cos((tmpvar_18 * ex_16)));\\n  tmpvar_21.y = (pow (tmpvar_17, ex_16) * sin((tmpvar_18 * ex_16)));\\n  uv2_3 = (0.5 + ((1.0 - \\n    abs(((fract(\\n      ((vec2(mod (tmpvar_21, clip1))) * 0.5)\\n    ) * 2.0) - 1.0))\\n  ) - 0.5));\\n  ret_8 = ((texture (sampler_main, uv2_3.yx).xyz + texture (sampler_main, uv_orig).xyz) / 2.0);\\n  xlat_mutableuv4 = (((uv_2 - 0.5) - tmpvar_1) + tmpvar_10);\\n  vec2 tmpvar_22;\\n  tmpvar_22.x = q10;\\n  tmpvar_22.y = q11;\\n  xlat_mutableuv5 = (normalize(xlat_mutableuv4) - tmpvar_22);\\n  vec2 x_23;\\n  x_23 = (xlat_mutableuv5 / q12);\\n  xlat_mutableray1 = (clamp ((1.0 - \\n    sqrt(dot (x_23, x_23))\\n  ), 0.0, 1.0) + ((0.001 / \\n    sqrt(dot (xlat_mutableuv5, xlat_mutableuv5))\\n  ) / sqrt(\\n    dot (xlat_mutableuv4, xlat_mutableuv4)\\n  )));\\n  xlat_mutablesun1 = (clamp ((0.002 / \\n    sqrt(dot (xlat_mutableuv4, xlat_mutableuv4))\\n  ), 0.0, 1.0) / (1.05 - q12));\\n  vec3 tmpvar_24;\\n  tmpvar_24.x = q27;\\n  tmpvar_24.y = (q27 + 3.0);\\n  tmpvar_24.z = (q27 + 6.0);\\n  ret_8 = (ret_8 + ((xlat_mutableray1 + xlat_mutablesun1) * fract(\\n    (tmpvar_24 / 16.0)\\n  )));\\n  vec2 tmpvar_25;\\n  tmpvar_25 = sin(((uv2_3 * 2.0) + (0.2 * \\n    ((float(mod (q27, 8.0))) - 4.0)\\n  )));\\n  ret_8 = (ret_8 + (0.015 / sqrt(\\n    dot (tmpvar_25, tmpvar_25)\\n  )));\\n  ret_8 = (ret_8 + ((\\n    pow (tmpvar_10, 3.0)\\n   * q29) * (1.0 + roam_sin)).xyz);\\n  ret_8 = (ret_8 + xlat_mutablelight);\\n  ret_8 = (ret_8 * ((1.0 - \\n    (3.3 / fps)\\n  ) - (0.02 * \\n    dot (((texture (sampler_blur2, uv_orig).xyz * scale2) + bias2), vec3(0.32, 0.49, 0.29))\\n  )));\\n  vec4 tmpvar_26;\\n  tmpvar_26.w = 1.0;\\n  tmpvar_26.xyz = ret_8;\\n  ret = tmpvar_26.xyz;\\n }","comp":" shader_body { \\n  vec3 tmpvar_1;\\n  vec3 tmpvar_2;\\n  tmpvar_2 = clamp ((pow (texture (sampler_main, uv).xyz, vec3(1.2, 1.2, 1.2)) / vec3(1.2, 1.2, 1.2)), 0.0, 1.0);\\n  tmpvar_1 = (tmpvar_2 * (tmpvar_2 * (3.0 - \\n    (2.0 * tmpvar_2)\\n  )));\\n  float tmpvar_3;\\n  tmpvar_3 = clamp (q20, 0.0, 1.0);\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = mix (vec3(dot (tmpvar_1, vec3(0.32, 0.49, 0.29))), tmpvar_1, vec3((tmpvar_3 * (tmpvar_3 * \\n    (3.0 - (2.0 * tmpvar_3))\\n  ))));\\n  ret = tmpvar_4.xyz;\\n }"}')},4431:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":6,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":2.103,"wave_smoothing":0.54,"wave_mystery":0.38,"modwavealphastart":0.81,"modwavealphaend":1.4,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0,"wave_b":0,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1x":0.7,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":64,"thickoutline":1,"num_inst":24,"rad":0.02988,"tex_zoom":1.35028,"r":0,"g":1,"b":1,"r2":1,"g2":0,"b2":1,"border_b":0,"border_a":0},"init_eqs_eel":"t1 = rand(6);","frame_eqs_eel":"\\nx = .5 + .1*sin(instance*17+t1);\\ny = .55 + .06*sin(instance*12);"},{"baseVals":{"enabled":1,"sides":3,"num_inst":251,"x":0.6,"rad":0.02217,"tex_zoom":60.80383,"g":1,"b":1,"a":0.9,"g2":0,"border_g":0.59,"border_b":0,"border_a":1},"init_eqs_eel":"t1 = rand(6);\\nt2 = 11 + rand(100)/3;","frame_eqs_eel":"speed = .02;\\ntrel = int(time*speed)- time*speed+1;\\nk1 = instance/num_inst;\\nk1 = k1 - int(k1);\\ndist = 1.2-k1; //################# soll 1 sein\\n//dist = dist - int(dist);\\n\\n\\nfov = .1;\\narg = dist-time*.02;\\nposx = fov/dist * (sin(arg*13) + .1*sin(dist*332));\\nposy = fov/dist * (cos(arg*t2+t1)+ .1*sin(dist*332));\\n\\nx = .5 + posx;\\ny = .5 + posy;\\n\\nang = time * sin(k1*44)*12;\\na = 1; border_a = min(radi*4,1)*0; a2 = 1;\\nrad = .01/dist;\\n\\n"},{"baseVals":{"sides":63,"x":0.123,"y":0,"rad":0.27319,"tex_zoom":0.49981,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"y":0.51,"rad":0.19869,"tex_ang":1.00531,"tex_zoom":0.49981,"g":0.4,"a":0.7,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"samples":128,"thick":1,"additive":1,"scaling":0.89152,"smoothing":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"trel = time/4;\\ndx = cos(trel);\\ndy = sin(trel);\\ndx = 1; dy = 0;\\nx = .5 + (sample-.5)*dx ;\\ny = .5 + (sample-.5)*dy;\\n\\nr = .5 + .5 * sin(time/7);\\ng = .5 + .5 * sin(time/11);\\nb = .5 + .5 * sin(time/5);"},{"baseVals":{"samples":100,"usedots":1,"thick":1,"scaling":0.89152,"smoothing":0,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"mul = sin(time/17)*51;\\n\\nx = q5/3+.5+ .15*sin(sample*mul);\\ny = q6/3+.5 + .15*sin(sample*32+time/13);"},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ra = .8;\\nrb = .5;\\npib = 6.28318530718;\\n\\n\\ntic = min(time-tin,.1);\\ntin = if(equal(sample,0),time,tin);\\n\\nmod = 1.5 + .5*sin(time*.15);\\nmed = 1.5 + .5*sin(time*.134);\\nmed = 5;\\namod = 3;\\n\\nvr = rand(10001)*.0001;\\nrb = rb + rand(10001)*.0001*.1;\\n\\na = vr;\\n\\nsa = vr*pib*.5;\\nsp = sa*mod + q1*1.3;\\nsam = sa*med - q1*.219;\\n\\nox = ra*sin(sam*pib);\\noy = ra*cos(sam*pib);\\nox = ox + rb*-cos(sp)*sin(sam*pib);\\noz = rb*-sin(sp);\\noy = oy + rb*-cos(sp)*cos(sam*pib);\\n\\n\\nxang = time*.132;\\nxang = q2;\\nyang = time*.153;\\nyang = q3;\\nzang = time*.110;\\nzang = q4;\\nfov = 0.6 + 0.2*sin(time);\\nfov = .5;\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = -ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\noz = oz - 2;\\nx = ox*fov/oz + 0.5;\\nx = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;\\n"}],"init_eqs_eel":"vol = 0; p1 = 0;\\nvx = .2; vy = -0.1;\\nkx = 0; ky = 0;","frame_eqs_eel":"","pixel_eqs_eel":"","warp":" shader_body { \\n  float k1_1;\\n  float ky_2;\\n  vec2 uv3_3;\\n  uv3_3 = (100.0 * ((uv - vec2(0.5, 0.5)) * aspect.xy));\\n  ky_2 = clamp ((0.25 - (uv3_3.y / 40.0)), 0.0, 1.0);\\n  float tmpvar_4;\\n  tmpvar_4 = (uv3_3.x * 2.0);\\n  k1_1 = (tmpvar_4 - (sign(tmpvar_4) * 16.0));\\n  k1_1 = (k1_1 + ((\\n    -((102.0 * sign(k1_1)))\\n   * ky_2) * ky_2));\\n  ky_2 = clamp ((ky_2 - 0.1), 0.0, 1.0);\\n  k1_1 = (k1_1 + ((\\n    -((102.0 * sign(k1_1)))\\n   * ky_2) * ky_2));\\n  ky_2 = clamp ((ky_2 - 0.1), 0.0, 1.0);\\n  k1_1 = (k1_1 + ((\\n    -((102.0 * sign(k1_1)))\\n   * ky_2) * ky_2));\\n  ky_2 = clamp ((ky_2 - 0.1), 0.0, 1.0);\\n  k1_1 = (k1_1 + ((\\n    -((102.0 * sign(k1_1)))\\n   * ky_2) * ky_2));\\n  ky_2 = clamp ((ky_2 - 0.1), 0.0, 1.0);\\n  float tmpvar_5;\\n  tmpvar_5 = clamp (k1_1, -1.6, 1.6);\\n  k1_1 = tmpvar_5;\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = ((abs(\\n    cos(tmpvar_5)\\n  ) * vec3(0.8, 0.8, 0.2)) - 0.1);\\n  ret = tmpvar_6.xyz;\\n }","comp":"vec2 xlat_mutabledz;\\nvec3 xlat_mutableret1;\\nvec2 xlat_mutableuv3;\\n shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1.y = 0.0;\\n  tmpvar_1.x = texsize.z;\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = 0.0;\\n  tmpvar_2.y = texsize.w;\\n  vec2 uv_3;\\n  float inten_4;\\n  float dist_5;\\n  vec2 uv1_6;\\n  vec3 ret_7;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = ((uv - 0.5) * aspect.xy);\\n  float tmpvar_9;\\n  tmpvar_9 = (time / 18.0);\\n  dist_5 = (1.0 - fract((0.25 + tmpvar_9)));\\n  inten_4 = ((sqrt(dist_5) * (1.0 - dist_5)) * 4.0);\\n  uv_3 = (tmpvar_8 * aspect.yx);\\n  xlat_mutableuv3 = (vec2(0.51, 0.55) + (uv_3 * dist_5));\\n  xlat_mutabledz.x = (inten_4 * ((2.0 * \\n    dot (texture (sampler_main, (xlat_mutableuv3 + tmpvar_1)).xyz, vec3(0.32, 0.49, 0.29))\\n  ) - (2.0 * \\n    dot (texture (sampler_main, (xlat_mutableuv3 - tmpvar_1)).xyz, vec3(0.32, 0.49, 0.29))\\n  )));\\n  xlat_mutabledz.y = (inten_4 * ((2.0 * \\n    dot (texture (sampler_main, (xlat_mutableuv3 + tmpvar_2)).xyz, vec3(0.32, 0.49, 0.29))\\n  ) - (2.0 * \\n    dot (texture (sampler_main, (xlat_mutableuv3 - tmpvar_2)).xyz, vec3(0.32, 0.49, 0.29))\\n  )));\\n  xlat_mutableret1 = max (vec3(0.0, 0.0, 0.0), (texture (sampler_main, xlat_mutableuv3).xyz * inten_4));\\n  dist_5 = (1.0 - fract((0.5 + tmpvar_9)));\\n  inten_4 = ((sqrt(dist_5) * (1.0 - dist_5)) * 4.0);\\n  uv_3 = (tmpvar_8 * aspect.yx);\\n  xlat_mutableuv3 = (vec2(0.49, 0.55) + (uv_3 * dist_5));\\n  xlat_mutabledz.x = (xlat_mutabledz.x + (inten_4 * (\\n    (2.0 * dot (texture (sampler_main, (xlat_mutableuv3 + tmpvar_1)).xyz, vec3(0.32, 0.49, 0.29)))\\n   - \\n    (2.0 * dot (texture (sampler_main, (xlat_mutableuv3 - tmpvar_1)).xyz, vec3(0.32, 0.49, 0.29)))\\n  )));\\n  xlat_mutabledz.y = (xlat_mutabledz.y + (inten_4 * (\\n    (2.0 * dot (texture (sampler_main, (xlat_mutableuv3 + tmpvar_2)).xyz, vec3(0.32, 0.49, 0.29)))\\n   - \\n    (2.0 * dot (texture (sampler_main, (xlat_mutableuv3 - tmpvar_2)).xyz, vec3(0.32, 0.49, 0.29)))\\n  )));\\n  xlat_mutableret1 = max (xlat_mutableret1, (texture (sampler_main, xlat_mutableuv3).xyz * inten_4));\\n  dist_5 = (1.0 - fract((0.75 + tmpvar_9)));\\n  inten_4 = ((sqrt(dist_5) * (1.0 - dist_5)) * 4.0);\\n  uv_3 = (tmpvar_8 * aspect.yx);\\n  xlat_mutableuv3 = (vec2(0.51, 0.55) + (uv_3 * dist_5));\\n  xlat_mutabledz.x = (xlat_mutabledz.x + (inten_4 * (\\n    (2.0 * dot (texture (sampler_main, (xlat_mutableuv3 + tmpvar_1)).xyz, vec3(0.32, 0.49, 0.29)))\\n   - \\n    (2.0 * dot (texture (sampler_main, (xlat_mutableuv3 - tmpvar_1)).xyz, vec3(0.32, 0.49, 0.29)))\\n  )));\\n  xlat_mutabledz.y = (xlat_mutabledz.y + (inten_4 * (\\n    (2.0 * dot (texture (sampler_main, (xlat_mutableuv3 + tmpvar_2)).xyz, vec3(0.32, 0.49, 0.29)))\\n   - \\n    (2.0 * dot (texture (sampler_main, (xlat_mutableuv3 - tmpvar_2)).xyz, vec3(0.32, 0.49, 0.29)))\\n  )));\\n  xlat_mutableret1 = max (xlat_mutableret1, (texture (sampler_main, xlat_mutableuv3).xyz * inten_4));\\n  dist_5 = (1.0 - fract((1.0 + tmpvar_9)));\\n  inten_4 = ((sqrt(dist_5) * (1.0 - dist_5)) * 4.0);\\n  uv_3 = (tmpvar_8 * aspect.yx);\\n  xlat_mutableuv3 = (vec2(0.49, 0.55) + (uv_3 * dist_5));\\n  xlat_mutabledz.x = (xlat_mutabledz.x + (inten_4 * (\\n    (2.0 * dot (texture (sampler_main, (xlat_mutableuv3 + tmpvar_1)).xyz, vec3(0.32, 0.49, 0.29)))\\n   - \\n    (2.0 * dot (texture (sampler_main, (xlat_mutableuv3 - tmpvar_1)).xyz, vec3(0.32, 0.49, 0.29)))\\n  )));\\n  xlat_mutabledz.y = (xlat_mutabledz.y + (inten_4 * (\\n    (2.0 * dot (texture (sampler_main, (xlat_mutableuv3 + tmpvar_2)).xyz, vec3(0.32, 0.49, 0.29)))\\n   - \\n    (2.0 * dot (texture (sampler_main, (xlat_mutableuv3 - tmpvar_2)).xyz, vec3(0.32, 0.49, 0.29)))\\n  )));\\n  xlat_mutableret1 = max (xlat_mutableret1, (texture (sampler_main, xlat_mutableuv3).xyz * inten_4));\\n  xlat_mutabledz = (xlat_mutabledz * (0.5 + rand_preset.z));\\n  vec2 tmpvar_10;\\n  tmpvar_10 = (2.0 * (rand_preset.xy - 0.5));\\n  uv1_6 = (4.0 * tmpvar_8);\\n  vec2 tmpvar_11;\\n  tmpvar_11 = sin(((uv1_6 + xlat_mutabledz) + tmpvar_10));\\n  vec2 tmpvar_12;\\n  tmpvar_12 = sin(((uv1_6 + \\n    (xlat_mutabledz * 1.4)\\n  ) + tmpvar_10));\\n  vec2 tmpvar_13;\\n  tmpvar_13 = sin(((uv1_6 + \\n    (xlat_mutabledz * 1.8)\\n  ) + tmpvar_10));\\n  vec3 tmpvar_14;\\n  tmpvar_14.x = inversesqrt(dot (tmpvar_11, tmpvar_11));\\n  tmpvar_14.y = inversesqrt(dot (tmpvar_12, tmpvar_12));\\n  tmpvar_14.z = inversesqrt(dot (tmpvar_13, tmpvar_13));\\n  ret_7 = (((\\n    (tmpvar_14 * ((vec3(0.01, 0.01, 0.01) * (1.0 + \\n      (rand_preset.xyz / 2.0)\\n    )) * (0.5 + rand_preset.y)))\\n   * \\n    ((((rand_preset.x - 0.5) * 4.0) * xlat_mutableret1) + (8.0 * (1.0 + rand_preset)).xyz)\\n  ) - (xlat_mutableret1.x * 0.5)) + ((xlat_mutableret1.y + xlat_mutableret1.z) / 3.0));\\n  ret_7 = (ret_7 * (1.0 + ret_7));\\n  vec4 tmpvar_15;\\n  tmpvar_15.w = 1.0;\\n  tmpvar_15.xyz = ret_7;\\n  ret = tmpvar_15.xyz;\\n }"}')},2686:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1.980001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"wave_mode":5,"wave_dots":1,"wave_thick":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":5.552,"wave_smoothing":0.504,"wave_mystery":-1,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1.4595,"warpscale":2.0067,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_g":0,"wave_b":0,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"sides":100,"textured":1,"x":0.8,"rad":0.242435,"tex_ang":1.884956,"tex_zoom":1.728514,"r":0.8,"g":1,"b":0.5,"a":0.6,"r2":0.9,"g2":0.9,"b2":1,"a2":0.3,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"textured":1,"x":0.13,"y":0.19,"rad":0.11045,"tex_ang":3.14159,"tex_zoom":1.711049,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":5,"additive":1,"x":0.9,"rad":0.22613,"g":0.2,"b":0.2,"g2":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":36,"additive":1,"rad":0.18717,"r":0,"g":0.02,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"spectrum":1,"usedots":1,"thick":1,"additive":1,"scaling":0.5033,"g":0.6,"b":0.4,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"\\nx0 = .5 + .4 * sin(time/2);\\n\\nangle = rand(1000)/1000*6.28;\\nrad =  rand(1000)/1000;\\nrad = rad * rad;\\n\\nx = x0 + .1*rad*sin(angle);\\ny = .5 + .1*rad*cos(angle);\\n a = 1-rad;"},{"baseVals":{"thick":1,"additive":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"trel = q11-.0;\\nt1 = int(trel);\\nt2 = trel - int(trel);","point_eqs_eel":""},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"trel = q11-.33;\\nt1 = int(trel);\\nt2 = trel - int(trel);","point_eqs_eel":""},{"baseVals":{"thick":1,"additive":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"trel = q11-.66;\\nt1 = int(trel);\\nt2 = trel - int(trel);","point_eqs_eel":""}],"init_eqs_eel":"vol = 0; p1 = 0;\\nvx = .2; vy = -0.1;\\nkx = 0; ky = 0;","frame_eqs_eel":"dec_med = pow (0.96, 30/fps);\\ndec_slow = pow (0.98, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %8;\\nindex2 = (index2 + is_beat*bnot(index))%2;\\nindex3 = (index3 + is_beat*bnot(index) * bnot(index2))%2;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\n\\nvol = bass_att + treb_att;\\nv2 = v2 * dec_slow + vol * (1-dec_slow) ;\\nq26 = max(atan (vol - v2*.8),.3);\\n\\nq27 = index + 1;\\n\\nsw = sw*dec_med + (1-dec_med)*(index2%2);\\nq28 = sw;\\n\\nk1 =  is_beat*bnot(index);\\nk2 =  is_beat*bnot(index);\\n\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_slow * p2+ (1-dec_slow)*p1;\\nrott = p2 * 3.1416/2;\\nmonitor = k1;\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\n\\nq5 = cos(time/6);\\nq6 = -sin(time/6);\\nq7 = -q6;\\nq8 = q5;\\n\\nzoom = 1;\\nrot = -0;\\n\\nmovez = movez + .006*(q1+1.1)*30/fps;\\nq29 = movez;\\nrota = rota + .003*(2-q1)*30/fps;\\nq30 = rota;\\nq31 = 2 + 16*abs(cos(time/18));\\nq32 = cos(time/23)/4;","pixel_eqs_eel":"","warp":"vec2 xlat_mutablers;\\nvec2 xlat_mutableuv1;\\nvec2 xlat_mutableuv6;\\n shader_body { \\n  vec2 uv_1;\\n  vec3 xlat_varmod_2;\\n  vec2 uv2_3;\\n  float ang2_4;\\n  float dist_5;\\n  float z_6;\\n  vec3 ret_7;\\n  uv_1 = uv_orig;\\n  xlat_mutableuv1 = ((uv_orig - 0.5) * aspect.xy);\\n  float tmpvar_8;\\n  tmpvar_8 = ((16.0 * sqrt(\\n    dot (xlat_mutableuv1, xlat_mutableuv1)\\n  )) + time);\\n  z_6 = tmpvar_8;\\n  xlat_mutablers = (clamp ((\\n    (sin(tmpvar_8) / cos(tmpvar_8))\\n   * \\n    normalize(xlat_mutableuv1)\\n  ), vec2(-5.0, -5.0), vec2(5.0, 5.0)) / 2.0);\\n  vec2 tmpvar_9;\\n  tmpvar_9 = sin((xlat_mutableuv1 * q31));\\n  dist_5 = (sqrt(dot (tmpvar_9, tmpvar_9)) * ((\\n    abs(xlat_mutableuv1.x)\\n   + \\n    abs(xlat_mutableuv1.y)\\n  ) + q32));\\n  float tmpvar_10;\\n  float tmpvar_11;\\n  tmpvar_11 = (min (abs(\\n    (tmpvar_9.y / tmpvar_9.x)\\n  ), 1.0) / max (abs(\\n    (tmpvar_9.y / tmpvar_9.x)\\n  ), 1.0));\\n  float tmpvar_12;\\n  tmpvar_12 = (tmpvar_11 * tmpvar_11);\\n  tmpvar_12 = (((\\n    ((((\\n      ((((-0.01213232 * tmpvar_12) + 0.05368138) * tmpvar_12) - 0.1173503)\\n     * tmpvar_12) + 0.1938925) * tmpvar_12) - 0.3326756)\\n   * tmpvar_12) + 0.9999793) * tmpvar_11);\\n  tmpvar_12 = (tmpvar_12 + (float(\\n    (abs((tmpvar_9.y / tmpvar_9.x)) > 1.0)\\n  ) * (\\n    (tmpvar_12 * -2.0)\\n   + 1.570796)));\\n  tmpvar_10 = (tmpvar_12 * sign((tmpvar_9.y / tmpvar_9.x)));\\n  if ((abs(tmpvar_9.x) > (1e-08 * abs(tmpvar_9.y)))) {\\n    if ((tmpvar_9.x < 0.0)) {\\n      if ((tmpvar_9.y >= 0.0)) {\\n        tmpvar_10 += 3.141593;\\n      } else {\\n        tmpvar_10 = (tmpvar_10 - 3.141593);\\n      };\\n    };\\n  } else {\\n    tmpvar_10 = (sign(tmpvar_9.y) * 1.570796);\\n  };\\n  ang2_4 = (0.1 * floor((16.0 * tmpvar_10)));\\n  vec2 tmpvar_13;\\n  tmpvar_13.x = cos(ang2_4);\\n  tmpvar_13.y = sin(ang2_4);\\n  z_6 = (1.0 - cos((8.0 * dist_5)));\\n  float tmpvar_14;\\n  tmpvar_14 = clamp (z_6, 0.0, 1.0);\\n  z_6 = tmpvar_14;\\n  float tmpvar_15;\\n  tmpvar_15 = float((tmpvar_14 >= 0.5));\\n  xlat_mutablers = ((q28 * xlat_mutablers) + ((1.0 - q28) * xlat_mutablers.yx));\\n  uv_1 = (uv_orig + ((\\n    ((1.0 - tmpvar_15) * 0.03)\\n   * xlat_mutablers.yx) + (\\n    ((0.5 * tmpvar_15) * tmpvar_14)\\n   * \\n    normalize(((0.5 * tmpvar_9) + tmpvar_13))\\n  )));\\n  mat2 tmpvar_16;\\n  tmpvar_16[uint(0)] = _qb.xy;\\n  tmpvar_16[1u] = _qb.zw;\\n  xlat_mutableuv6 = (xlat_mutableuv1 * tmpvar_16);\\n  vec2 tmpvar_17;\\n  tmpvar_17.x = q5;\\n  tmpvar_17.y = q6;\\n  uv2_3 = (((0.7 * xlat_mutableuv1) + (0.3 * \\n    sin(((xlat_mutableuv1 * 16.0) + (4.0 * tmpvar_17)))\\n  )) * 0.2);\\n  vec4 tmpvar_18;\\n  tmpvar_18 = texture (sampler_main, uv_1);\\n  vec3 tmpvar_19;\\n  tmpvar_19 = ((tmpvar_18.xyz + vec3((\\n    abs((0.01 / (sqrt(xlat_mutableuv6.x) + 0.001)))\\n   * \\n    (rad + 0.2)\\n  ))) + vec3((q26 * clamp (\\n    (0.001 / sqrt(dot (uv2_3, uv2_3)))\\n  , 0.0, 1.0))));\\n  xlat_varmod_2 = (1.0 - ((texture (sampler_noise_lq, \\n    ((0.5 * uv_1) + (time * 0.01))\\n  ) - 0.2).xyz * (tmpvar_18.xyz - \\n    (0.5 * ((texture (sampler_blur1, fract(uv_1)).xyz * scale1) + bias1))\\n  )));\\n  ret_7 = (((\\n    (1.0 - tmpvar_15)\\n   * tmpvar_19) * xlat_varmod_2) + ((tmpvar_15 * tmpvar_19) * xlat_varmod_2));\\n  ret_7 = ((ret_7 * 0.98) - 0.03);\\n  vec4 tmpvar_20;\\n  tmpvar_20.w = 1.0;\\n  tmpvar_20.xyz = ret_7;\\n  ret = tmpvar_20.xyz;\\n }","comp":"vec3 xlat_mutableblur;\\nvec3 xlat_mutableret1;\\nvec2 xlat_mutableuv2;\\nvec2 xlat_mutableuv3;\\n shader_body { \\n  vec2 uv_1;\\n  float inten_2;\\n  float dist_3;\\n  float ang2_4;\\n  uv_1 = (uv - 0.5);\\n  uv_1 = (uv_1 * aspect.xy);\\n  float tmpvar_5;\\n  tmpvar_5 = cos(q30);\\n  float tmpvar_6;\\n  tmpvar_6 = sin(q30);\\n  xlat_mutableuv2.x = ((uv_1.x * tmpvar_5) - (uv_1.y * tmpvar_6));\\n  xlat_mutableuv2.y = ((uv_1.x * tmpvar_6) + (uv_1.y * tmpvar_5));\\n  xlat_mutableuv2 = (xlat_mutableuv2 * aspect.yx);\\n  dist_3 = (1.0 - fract(q29));\\n  inten_2 = ((4.0 * dist_3) * (1.0 - (dist_3 * dist_3)));\\n  xlat_mutableuv3 = (((3.0 * xlat_mutableuv2) * dist_3) + 0.5);\\n  xlat_mutableblur = (((texture (sampler_blur1, \\n    fract(xlat_mutableuv3)\\n  ).xyz * scale1) + bias1) * vec3(0.8, 0.9, 1.0));\\n  xlat_mutableret1 = max (vec3(0.0, 0.0, 0.0), ((texture (sampler_main, xlat_mutableuv3).xyz + xlat_mutableblur) * inten_2));\\n  ang2_4 = (2.093333 + q30);\\n  float tmpvar_7;\\n  tmpvar_7 = cos(ang2_4);\\n  float tmpvar_8;\\n  tmpvar_8 = sin(ang2_4);\\n  xlat_mutableuv2.x = ((uv_1.x * tmpvar_7) - (uv_1.y * tmpvar_8));\\n  xlat_mutableuv2.y = ((uv_1.x * tmpvar_8) + (uv_1.y * tmpvar_7));\\n  xlat_mutableuv2 = (xlat_mutableuv2 * aspect.yx);\\n  dist_3 = (1.0 - fract((0.3333333 + q29)));\\n  inten_2 = ((4.0 * dist_3) * (1.0 - (dist_3 * dist_3)));\\n  xlat_mutableuv3 = (((3.0 * xlat_mutableuv2) * dist_3) + 0.5);\\n  xlat_mutableblur = (((texture (sampler_blur1, \\n    fract(xlat_mutableuv3)\\n  ).xyz * scale1) + bias1) * vec3(0.8, 0.9, 1.0));\\n  xlat_mutableret1 = max (xlat_mutableret1, ((texture (sampler_main, xlat_mutableuv3).xyz + xlat_mutableblur) * inten_2));\\n  ang2_4 = (4.186667 + q30);\\n  float tmpvar_9;\\n  tmpvar_9 = cos(ang2_4);\\n  float tmpvar_10;\\n  tmpvar_10 = sin(ang2_4);\\n  xlat_mutableuv2.x = ((uv_1.x * tmpvar_9) - (uv_1.y * tmpvar_10));\\n  xlat_mutableuv2.y = ((uv_1.x * tmpvar_10) + (uv_1.y * tmpvar_9));\\n  xlat_mutableuv2 = (xlat_mutableuv2 * aspect.yx);\\n  dist_3 = (1.0 - fract((0.6666667 + q29)));\\n  inten_2 = ((4.0 * dist_3) * (1.0 - (dist_3 * dist_3)));\\n  xlat_mutableuv3 = (((3.0 * xlat_mutableuv2) * dist_3) + 0.5);\\n  xlat_mutableblur = (((texture (sampler_blur1, \\n    fract(xlat_mutableuv3)\\n  ).xyz * scale1) + bias1) * vec3(0.8, 0.9, 1.0));\\n  xlat_mutableret1 = max (xlat_mutableret1, ((texture (sampler_main, xlat_mutableuv3).xyz + xlat_mutableblur) * inten_2));\\n  ang2_4 = (6.28 + q30);\\n  float tmpvar_11;\\n  tmpvar_11 = cos(ang2_4);\\n  float tmpvar_12;\\n  tmpvar_12 = sin(ang2_4);\\n  xlat_mutableuv2.x = ((uv_1.x * tmpvar_11) - (uv_1.y * tmpvar_12));\\n  xlat_mutableuv2.y = ((uv_1.x * tmpvar_12) + (uv_1.y * tmpvar_11));\\n  xlat_mutableuv2 = (xlat_mutableuv2 * aspect.yx);\\n  dist_3 = (1.0 - fract((1.0 + q29)));\\n  inten_2 = ((4.0 * dist_3) * (1.0 - (dist_3 * dist_3)));\\n  xlat_mutableuv3 = (((3.0 * xlat_mutableuv2) * dist_3) + 0.5);\\n  xlat_mutableblur = (((texture (sampler_blur1, \\n    fract(xlat_mutableuv3)\\n  ).xyz * scale1) + bias1) * vec3(0.8, 0.9, 1.0));\\n  xlat_mutableret1 = max (xlat_mutableret1, ((texture (sampler_main, xlat_mutableuv3).xyz + xlat_mutableblur) * inten_2));\\n  vec4 tmpvar_13;\\n  tmpvar_13.w = 1.0;\\n  tmpvar_13.xyz = (xlat_mutableret1 - 0.1);\\n  ret = tmpvar_13.xyz;\\n }"}')},7122:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.980001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"darken":1,"wave_a":0.001,"wave_scale":2.232543,"wave_smoothing":0.81,"wave_mystery":0.28,"modwavealphastart":0.47,"modwavealphaend":1.32,"warpanimspeed":0.01,"warpscale":0.01,"zoom":1.001832,"dx":1,"warp":0.01,"sx":0.999997,"wave_r":0,"wave_g":0,"wave_b":0,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.4999,"mv_g":0.4999,"mv_b":0.4999,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"sides":18,"additive":1,"x":0.57,"rad":0.060499,"tex_zoom":3.264423,"r":0,"a":0,"r2":0.1,"g2":0.1,"b2":0.2,"a2":0.7,"border_r":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"textured":1,"rad":0.476928,"ang":1.130974,"tex_zoom":1.02315,"g":1,"b":1,"a":0.97,"r2":1,"b2":1,"a2":0.1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0.81,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":63,"textured":1,"x":0.123,"y":0,"rad":0.273185,"tex_zoom":0.499805,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":63,"textured":1,"y":1,"rad":0.548217,"tex_zoom":0.499805,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"additive":1,"scaling":0.891519,"smoothing":0.82,"a":0.6,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.891519,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.891519,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"shift = 0;\\nfade = 0.5;","frame_eqs_eel":"dec_med = pow (0.9, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .1+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %4;\\nindex2 = (index2 + is_beat*bnot(index))%4;\\nindex3 = (index3 + is_beat*bnot(index)*bnot(index2))%4;\\n\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass + mid + treb;\\n\\nready = is_beat * bnot(ready) + bnot(is_beat2)*ready;\\nis_beat2 = ready * above (time, t0+.2);\\nq19 = is_beat2;\\n\\n\\n//k1 =  is_beat*bnot(index)*bnot(index2);\\n\\nk1 =  is_beat*equal(index,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.14159265359/4;\\n\\nq27 = index+1;\\nq28 = index2+1;\\nq29 = index3*4+1;\\nq30 = index4;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\nmovex = movex +.002*30/fps;\\nq30 = movex;\\n\\nfade = dec_med * fade + (1-dec_med);\\nq32 = fade;\\n\\nzoom = .98;\\ndx = .04*q2 * bnot(index2);\\ndy = .04*q1 * bnot(index2);\\nrot = .02;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 uv_1;\\n  vec2 uv6_2;\\n  vec3 ret_3;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = ((uv - 0.5) * aspect.xy);\\n  float tmpvar_5;\\n  tmpvar_5 = (sqrt(dot (tmpvar_4, tmpvar_4)) + (rand_frame * 116.0)).x;\\n  uv_1 = (uv + ((\\n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\\n  .xy * vec2(0.0, 1.0)) + (0.01 * \\n    clamp (((sin(tmpvar_5) / cos(tmpvar_5)) * normalize(tmpvar_4)), vec2(-18.0, -18.0), vec2(18.0, 18.0))\\n  )));\\n  uv6_2 = (0.4 * sin((\\n    ((tmpvar_4 * 2.0) * q27)\\n   + rand_frame.xy)));\\n  ret_3 = ((q24 * (\\n    (((texture (sampler_main, (0.95 + uv_1)).xyz - (\\n      ((texture (sampler_blur2, fract(uv_1)).xyz * scale2) + bias2)\\n     * 0.03)) + (0.2 * (vec3(\\n      (0.051 / sqrt(dot (uv6_2, uv6_2)))\\n    ) * roam_sin.xyz))) * 0.95)\\n   - 0.02)) + ((1.0 - q24) * texture (sampler_main, uv_orig).xyz));\\n  ret_3 = (ret_3 * q32);\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = ret_3;\\n  ret = tmpvar_6.xyz;\\n }","comp":"vec2 xlat_mutabledz;\\nvec3 xlat_mutablemus;\\nvec3 xlat_mutableneu;\\nvec3 xlat_mutableret1;\\nvec2 xlat_mutableuv3;\\n shader_body { \\n  float inten_1;\\n  float dist_2;\\n  vec2 uv2_3;\\n  vec3 ret_4;\\n  vec2 tmpvar_5;\\n  tmpvar_5.y = 0.0;\\n  tmpvar_5.x = texsize.z;\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = 0.0;\\n  tmpvar_6.y = texsize.w;\\n  xlat_mutabledz.x = dot ((texture (sampler_main, (uv + tmpvar_5)).xyz - texture (sampler_main, (uv - tmpvar_5)).xyz), vec3(0.32, 0.49, 0.29));\\n  xlat_mutabledz.y = dot ((texture (sampler_main, (uv + tmpvar_6)).xyz - texture (sampler_main, (uv - tmpvar_6)).xyz), vec3(0.32, 0.49, 0.29));\\n  xlat_mutablemus = (texture (sampler_main, (uv + (0.03 * xlat_mutabledz))).xyz + 0.02);\\n  uv2_3 = (uv - 0.5);\\n  float tmpvar_7;\\n  tmpvar_7 = (time / 4.0);\\n  dist_2 = (1.0 - fract(tmpvar_7));\\n  float tmpvar_8;\\n  tmpvar_8 = (1.0 - rad);\\n  inten_1 = (((\\n    sqrt(dist_2)\\n   * \\n    (1.0 - (dist_2 * dist_2))\\n  ) * 8.0) * tmpvar_8);\\n  xlat_mutableuv3 = (((2.0 * uv2_3) * dist_2) + 0.6);\\n  vec2 tmpvar_9;\\n  tmpvar_9 = fract(xlat_mutableuv3);\\n  xlat_mutabledz.x = (texture (sampler_main, (tmpvar_9 + tmpvar_5)).xyz - texture (sampler_main, (tmpvar_9 - tmpvar_5)).xyz).x;\\n  xlat_mutabledz.y = (texture (sampler_main, (tmpvar_9 + tmpvar_6)).xyz - texture (sampler_main, (tmpvar_9 - tmpvar_6)).xyz).x;\\n  xlat_mutableneu = ((dist_2 * texture (sampler_main, tmpvar_9).xyz) + ((1.0 - dist_2) * dot (\\n    ((texture (sampler_blur2, tmpvar_9).xyz * scale2) + bias2)\\n  , vec3(0.32, 0.49, 0.29))));\\n  xlat_mutableret1 = max (vec3(0.0, 0.0, 0.0), (xlat_mutableneu * inten_1));\\n  dist_2 = (1.0 - fract((0.3333333 + tmpvar_7)));\\n  inten_1 = (((\\n    sqrt(dist_2)\\n   * \\n    (1.0 - (dist_2 * dist_2))\\n  ) * 8.0) * tmpvar_8);\\n  xlat_mutableuv3 = (((2.0 * uv2_3) * dist_2) + 0.6);\\n  vec2 tmpvar_10;\\n  tmpvar_10 = fract(xlat_mutableuv3);\\n  xlat_mutabledz.x = (xlat_mutabledz.x + (texture (sampler_main, (tmpvar_10 + tmpvar_5)).xyz - texture (sampler_main, (tmpvar_10 - tmpvar_5)).xyz).x);\\n  xlat_mutabledz.y = (xlat_mutabledz.y + (texture (sampler_main, (tmpvar_10 + tmpvar_6)).xyz - texture (sampler_main, (tmpvar_10 - tmpvar_6)).xyz).x);\\n  xlat_mutableneu = ((dist_2 * texture (sampler_main, tmpvar_10).xyz) + ((1.0 - dist_2) * dot (\\n    ((texture (sampler_blur2, tmpvar_10).xyz * scale2) + bias2)\\n  , vec3(0.32, 0.49, 0.29))));\\n  xlat_mutableret1 = max (xlat_mutableret1, (xlat_mutableneu * inten_1));\\n  dist_2 = (1.0 - fract((0.6666667 + tmpvar_7)));\\n  inten_1 = (((\\n    sqrt(dist_2)\\n   * \\n    (1.0 - (dist_2 * dist_2))\\n  ) * 8.0) * tmpvar_8);\\n  xlat_mutableuv3 = (((2.0 * uv2_3) * dist_2) + 0.6);\\n  vec2 tmpvar_11;\\n  tmpvar_11 = fract(xlat_mutableuv3);\\n  xlat_mutabledz.x = (xlat_mutabledz.x + (texture (sampler_main, (tmpvar_11 + tmpvar_5)).xyz - texture (sampler_main, (tmpvar_11 - tmpvar_5)).xyz).x);\\n  xlat_mutabledz.y = (xlat_mutabledz.y + (texture (sampler_main, (tmpvar_11 + tmpvar_6)).xyz - texture (sampler_main, (tmpvar_11 - tmpvar_6)).xyz).x);\\n  xlat_mutableneu = ((dist_2 * texture (sampler_main, tmpvar_11).xyz) + ((1.0 - dist_2) * dot (\\n    ((texture (sampler_blur2, tmpvar_11).xyz * scale2) + bias2)\\n  , vec3(0.32, 0.49, 0.29))));\\n  xlat_mutableret1 = max (xlat_mutableret1, (xlat_mutableneu * inten_1));\\n  dist_2 = (1.0 - fract((1.0 + tmpvar_7)));\\n  inten_1 = (((\\n    sqrt(dist_2)\\n   * \\n    (1.0 - (dist_2 * dist_2))\\n  ) * 8.0) * tmpvar_8);\\n  xlat_mutableuv3 = (((2.0 * uv2_3) * dist_2) + 0.6);\\n  vec2 tmpvar_12;\\n  tmpvar_12 = fract(xlat_mutableuv3);\\n  xlat_mutableuv3 = tmpvar_12;\\n  xlat_mutabledz.x = (xlat_mutabledz.x + (texture (sampler_main, (tmpvar_12 + tmpvar_5)).xyz - texture (sampler_main, (tmpvar_12 - tmpvar_5)).xyz).x);\\n  xlat_mutabledz.y = (xlat_mutabledz.y + (texture (sampler_main, (tmpvar_12 + tmpvar_6)).xyz - texture (sampler_main, (tmpvar_12 - tmpvar_6)).xyz).x);\\n  xlat_mutableneu = ((dist_2 * texture (sampler_main, tmpvar_12).xyz) + ((1.0 - dist_2) * dot (\\n    ((texture (sampler_blur2, tmpvar_12).xyz * scale2) + bias2)\\n  , vec3(0.32, 0.49, 0.29))));\\n  xlat_mutableret1 = max (xlat_mutableret1, (xlat_mutableneu * inten_1));\\n  ret_4 = ((xlat_mutableret1 * (1.0 - \\n    dot (xlat_mutablemus, vec3(0.32, 0.49, 0.29))\\n  )) + ((\\n    (4.0 * xlat_mutablemus)\\n   * \\n    (1.0 + (3.0 * xlat_mutableret1))\\n  ) * tmpvar_8));\\n  ret_4 = (ret_4 * q32);\\n  vec4 tmpvar_13;\\n  tmpvar_13.w = 1.0;\\n  tmpvar_13.xyz = ret_4;\\n  ret = tmpvar_13.xyz;\\n }"}')},3756:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.980001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"wave_mode":2,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":0.001,"wave_scale":20.944651,"wave_smoothing":0,"wave_mystery":0.08,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.4595,"warpscale":2.0067,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0.99,"ob_size":0.015,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.4999,"mv_g":0.4999,"mv_b":0.4999,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"textured":1,"y":0.47,"rad":0.24057,"tex_zoom":0.14057,"g":0.3,"b":0.5,"g2":0,"b2":0.3,"a2":1,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"\\nx = .5; y = .5;\\na = q24; \\na2 = q24;\\n//a = 1;"},{"baseVals":{"enabled":1,"sides":100,"additive":1,"thickoutline":1,"rad":0.05134,"tex_zoom":0.12288,"r":0.3,"g":0.2,"b":0.2,"a":0.7,"g2":0,"border_r":0,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"r = .5 + .3 * sin(time);\\ng = .5 + .3 * sin(time/1.5);\\nb = .5 + .3 * sin(time/3.7);\\n\\nr2 = 0; b2 = 0; g2 = 0;\\n\\na = .05; a2 = 0;"},{"baseVals":{"x":0.503,"rad":0.01,"tex_zoom":0.609857,"r":0,"a":0,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"\\ndy = .1 * sin(time*14);;\\ndx = q1*dy;\\n\\nx = .5 + dx;\\ny = .5 + dy;\\n\\na = q25; a2 = q25;\\nrad = q21/110;"},{"baseVals":{"sides":63,"textured":1,"y":1,"rad":0.548217,"tex_zoom":0.499805,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"samples":100,"thick":1,"scaling":0.045052,"smoothing":0.1,"a":0.6},"init_eqs_eel":"","frame_eqs_eel":"t2 = .45 + rand(10)/100;","point_eqs_eel":"k1 = bnot((sample*100+time)%2);\\n\\ndy = .015*above(sin(sample*11),0) \\n    +.008*above(sin(time+sample*74),0)\\n    +.008*above(sin(time+sample*128),0);\\n \\ndx = .01*above(sin(sample*27),0) + \\n      +.01*above(sin(time+sample*134),0);\\n\\nx = .2*(sample-.5) + .5 + dx;\\ny = t2 + dy;\\n\\na = q24 * k1 * bnot(q27%4);\\n\\nr = .6; g = 0; b = .6;"},{"baseVals":{"thick":1,"scaling":0.891519,"smoothing":0.82,"a":0.02,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"tm = time*.1;\\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\\n\\ntic = min(time - tin,1);\\ntin = time;\\n\\ntva = (tic*q1*.5);\\ntvb = (tic*q2*.5);\\ntvc = (tic*q3*.5);\\n\\nq1 = tva;\\nq2 = tvb;\\nq3 = tvc;\\n\\nsz = .5;\\nlen = q4;\\nt4 = len;","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.891519,"smoothing":0.82,"r":0,"g":0.2,"b":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"tm = time*.1;\\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\\n\\ntic = min(time - tin,1);\\ntin = time;\\n\\ntva = (tic*q1*.5);\\ntvb = (tic*q2*.5);\\ntvc = (tic*q3*.5);\\n\\nq1 = tva;\\nq2 = tvb;\\nq3 = tvc;\\n\\nsz = .5;\\nlen = 1;\\nt4 = len;","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"xk = 0;","frame_eqs_eel":"dec_med = pow (0.8, 30/fps);\\ndec_slow = pow (0.95, 30/fps);\\ndec_xlow = pow (0.995, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .2+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %16;\\nindex2 = (index2 + is_beat*bnot(index))%2;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass_att + mid_att + treb_att;\\nq27 = index + 1;\\n\\npeakx = above(q22,1.5*maxp);\\nmaxp = max(maxp, q22);\\nmaxp = maxp*dec_xlow;\\n\\nk1 =  is_beat*equal(index%3,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.1416/4;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\ntrig = q24 * bnot(index%4);\\ndir = dir + trig * q26*(rand(100)/100-.5)/2 + peakx;\\ndir_ = dir_ * dec_slow + dir*(1-dec_slow);\\ndir__ = dir__ * dec_slow + dir_*(1-dec_slow);\\n\\nq5 = cos(dir__); \\nq6 = sin(dir__);\\n\\nspeed = speed * bnot(trig) + trig*q26*5/fps ;\\nspeed_= speed_* dec_slow + speed*(1-dec_slow);\\n\\nmovx = movx + speed_*q6;\\nmovy = movy + speed_*q5;\\n\\n//movx = movx + speed;\\n//movy = movy + speed;\\n\\n\\nq7 = movx;\\nq8 = movy;\\n\\ntilt = dir - dir__;\\ntilt_ = dec_slow*tilt_ + (1-dec_slow)*tilt;\\n\\n\\nmonitor = maxp;\\nq9 = cos(tilt_*speed_);\\nq10 = sin(tilt_*speed_);\\n\\nq12 = time;","pixel_eqs_eel":"zoom = 1.3;","warp":" shader_body { \\n  vec2 uv_1;\\n  vec2 uv6_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = ((uv - 0.5) * aspect.xy);\\n  float tmpvar_4;\\n  tmpvar_4 = ((2.0 * sqrt(\\n    dot (tmpvar_3, tmpvar_3)\\n  )) + (rand_frame * 64.0)).x;\\n  uv_1 = (uv + (clamp (\\n    ((sin(tmpvar_4) / cos(tmpvar_4)) * normalize(tmpvar_3))\\n  , vec2(-2.0, -2.0), vec2(2.0, 2.0)) / 20.0));\\n  uv6_2 = (0.4 * sin((tmpvar_3 * 22.0)));\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = (((q24 * \\n    (((texture (sampler_main, uv_1).xyz - (\\n      ((texture (sampler_blur1, fract(uv_1)).xyz * scale1) + bias1)\\n     * 0.04)) + (0.15 * (vec3(\\n      (0.1 / sqrt(dot (uv6_2, uv6_2)))\\n    ) * roam_cos.xyz))) - 0.02)\\n  ) * 0.98) + ((1.0 - q24) * texture (sampler_main, uv_orig).xyz));\\n  ret = tmpvar_5.xyz;\\n }","comp":"vec3 xlat_mutableret1;\\nvec2 xlat_mutablers;\\n shader_body { \\n  vec2 uv1_1;\\n  mat2 tmpvar_2;\\n  tmpvar_2[uint(0)].x = q9;\\n  tmpvar_2[uint(0)].y = -(q10);\\n  tmpvar_2[1u].x = q10;\\n  tmpvar_2[1u].y = q9;\\n  uv1_1 = (((uv_orig - 0.5) * aspect.xy) * tmpvar_2);\\n  uv1_1 = (uv1_1 * aspect.yx);\\n  float tmpvar_3;\\n  tmpvar_3 = (3.0 / abs(uv1_1.y));\\n  xlat_mutablers.x = (uv1_1.x * tmpvar_3);\\n  xlat_mutablers.y = (tmpvar_3 / 2.0);\\n  mat2 tmpvar_4;\\n  tmpvar_4[uint(0)].x = q5;\\n  tmpvar_4[uint(0)].y = -(q6);\\n  tmpvar_4[1u].x = q6;\\n  tmpvar_4[1u].y = q5;\\n  xlat_mutablers = (tmpvar_4 * xlat_mutablers);\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = q7;\\n  tmpvar_5.y = q8;\\n  xlat_mutablers = (xlat_mutablers + tmpvar_5);\\n  xlat_mutableret1 = ((texture (sampler_blur1, fract(\\n    (xlat_mutablers / 12.0)\\n  )).xyz * scale1) + bias1);\\n  vec2 tmpvar_6;\\n  tmpvar_6.y = 0.0;\\n  tmpvar_6.x = q5;\\n  vec4 tmpvar_7;\\n  tmpvar_7.w = 1.0;\\n  tmpvar_7.xyz = (((xlat_mutableret1 * 32.0) / tmpvar_3) + ((\\n    ((q22 * sqrt(tmpvar_3)) / 4.0)\\n   * \\n    sin(((uv1_1 - q12) * q27))\\n  .x) * texture (sampler_main, (\\n    (((4.0 * xlat_mutableret1) / tmpvar_3).xy + ((uv1_1 / 2.0) / (0.5 + abs(uv1_1.y))))\\n   + tmpvar_6)).xyz));\\n  ret = tmpvar_7.xyz;\\n }"}')},5832:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":4,"gammaadj":1.98,"decay":0.5,"echo_zoom":0.952,"echo_alpha":0.5,"echo_orient":3,"wave_mode":4,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken_center":1,"darken":1,"wave_a":0.001,"wave_scale":2.107,"wave_smoothing":0,"wave_mystery":-0.22,"modwavealphastart":0.81,"modwavealphaend":1.4,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.6,"wave_g":0.5,"wave_b":0,"ob_size":0,"ob_a":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":16,"textured":1,"num_inst":5,"x":0.73,"rad":0.29466,"tex_zoom":2.79176,"r":0.7,"g":0.7,"b":1,"g2":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"trig = q25;\\na = trig*min(bass+treb,1); a2 = trig*0;\\n//a = min(bass+treb-1,1);\\nx0 = x0 *bnot(trig) + trig*int(rand(100))/100;\\ny0 = y0 *bnot(trig) + trig*int(rand(100))/100;\\n\\n\\nk1 = instance/num_inst*6.28;\\nampl = .1*q22+.1;\\n\\n\\nx0 = .5 +q15*ampl *cos(k1+q17); y0 = .5+ q16*ampl*sin(k1+q17);\\n\\n\\ntex_ang = int(rand(20))/3;\\n//tex_ang = time;\\nrad = .1 + int(rand(8))/12;\\n\\nx = x0; y = y0;\\nr = .7+.3*sin(time/12);\\nb = .7+.3*sin(time/15);\\ng = .7+.3*sin(time/8);\\nr2 = r; b2 = b; g2 = g;"},{"baseVals":{"enabled":1,"sides":32,"num_inst":37,"rad":0.0364,"ang":0.81681,"tex_ang":0.37699,"tex_zoom":1.02841,"g":1,"b":1,"a":0.05,"r2":1,"b2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"k1 = instance/num_inst*6.28;\\ntmp = q17/32+time*.1;\\ntrel = tmp-int(tmp);\\n\\nyes = above(sin(time/9.5),0);\\n\\nbright = 6*q2*q2*yes+.1*min(q8,1);\\nborder_a = bright;\\n\\ntmp = 2*sin(time/12)-1;\\na = .5*yes*pow(2,-18*abs(k1-6.28*trel)) * above(tmp,0)*tmp*tmp;\\nampl = .1;\\nrad = .02+.0*sin(k1*4+time);\\nx = .5 +q15*ampl *cos(k1+q17); y = .5+ q16*ampl*sin(k1+q17);\\n\\nr0 = sin(time/7);\\ng0 = sin(time/5);\\nb0 = sin(time/9);\\n\\nborder_r = .8 + .2*r0;\\nborder_g = .8 + .2*g0;\\nborder_b = .8 + .2*b0;\\n\\n\\n//r = .5*r0; g = .5*g0; b = 0.5*b0; ;\\n\\n//r2 = 0; g2 = 0; b2 = 0;\\n\\na2 = 0;\\n"},{"baseVals":{"enabled":1,"sides":32,"additive":1,"thickoutline":1,"num_inst":33,"r":0,"g":0.5,"g2":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"trans = int(rand(int(q1)))/5+instance-instance;\\ntrans2 = int(rand(int(q1)))/5+instance-instance;\\ntrans3 = int(rand(int(q1)))/5+instance-instance;\\na = trans;\\n\\nx = (sin(q23)+1.57)*.3 + int(rand(15))*0.004*(bass_att+treb_att+mid_att)*if(equal(int(rand(2)),1),1,-1)+instance-instance;\\ny = (cos(q23)+1.57)*.3 + int(rand(15))*0.004*(bass_att+treb_att+mid_att)*if(equal(int(rand(2)),1),1,-1)+instance-instance;\\nrad = .09 + int(rand(int(q1)))/15+instance-instance;\\nr=int(rand(q1))*.1+instance-instance;\\ng=int(rand(q1))*.1+instance-instance;\\nb=int(rand(q1))*.1+instance-instance;\\nr2=int(rand(q1))*.1+instance-instance;\\ng2=int(rand(q1))*.1+instance-instance;\\nb2=int(rand(q1))*.1+instance-instance;\\nborder_r=int(rand(q1))*.1+instance-instance;\\nborder_g=int(rand(q1))*.1+instance-instance;\\nborder_b=int(rand(q1))*.1+instance-instance;"},{"baseVals":{"enabled":1,"sides":3,"thickoutline":1,"textured":1,"num_inst":311,"rad":0.01,"tex_ang":0.62832,"r":0,"g2":0,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*tan(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=1-mx;\\ny=1-my;\\n\\nang=(sin(time*.35)+1)*3;\\n//a=(above(bass+mid+treb,.8));\\npi23=4*asin(1)*.333333333;\\nt1=bass+mid+treb;"}],"waves":[{"baseVals":{"enabled":1,"sep":256,"spectrum":1,"smoothing":0.8,"a":0.04},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"sw = (1-sw)*above(sample,0);\\n\\nosa = sample*above(sample,0);\\n\\nmod = pow(value1*2,2)*sign(value1)*.5;\\n\\nmod = value1;\\nmod = mod*sw;\\n\\ny = if(sw,osa,sample*.5+.25);\\ny = sample*.5+.25;\\ny = (y-0.5)/(q32) + 0.5;\\nx = 1 - mod*.5;\\n\\nosa = sample;\\n\\nmo = 3.7 + mod*6 + q1;\\n\\nr = .5 + sin(q23*.9 +mo)*.5;\\ng = .5 + sin(q23*.89+mo + 1.5472)*.5;\\nb = .5 + sin(q23*.88+mo + 2.8944)*.5;\\n\\n//a = 3 - abs(mod)*12;\\n//a = 3-sw;\\n//a = max(0,min(a,1));"},{"baseVals":{"enabled":1,"sep":256,"spectrum":1,"smoothing":0.8,"a":0.04},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"sw = (1-sw)*below(sample,1);\\n\\nosa = sample*above(sample,0);\\n\\nmod = pow(value2*2,2)*sign(value2)*.5;\\n\\nmod = value2;\\nmod = mod*sw;\\n\\ny = if(sw,osa,sample*.5+.25);\\ny = sample*.5+.25;\\ny = (y-0.5)/(q32) + 0.5;\\nx = 0+ mod*.5;\\n\\nosa = sample;\\n\\nmo = 3.7 + mod*6 + q1;\\n\\nr = .5 + sin(q23*.95+mo)*.5;\\ng = .5 + sin(q23*.96+mo + 1.5472)*.5;\\nb = .5 + sin(q23*.97+mo + 2.8944)*.5;\\n\\n//a = 3 - abs(mod)*12;\\n//a = 3-sw;\\n//a = max(0,min(a,1));"},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"avg = 1;\\nindex = int(rand(8));\\nindex2 = int(rand(8));\\nran = 1;\\nspb_=.3;\\nsdev = .1;\\ntrel2 = rand (100)/100;","frame_eqs_eel":"vol=bass+treb+mid;\\nq1=max(1,min(5.5,vol*1.15));\\natime=atime+vol;\\nq23=atime*.02;\\ndec_med = pow (0.9, 30/fps); dec_slow = pow (0.98, 30/fps);\\nbeat = bass+mid+treb;\\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .2+avg+peak) * above (time, t0+.1);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %16;\\nindex2 = (index2 + is_beat*bnot(index))%12;\\n\\nspb = min(t0-t0a + .01,2); t0a = t0;\\nspb_ = if(is_beat,spb_ *.9 +.1*spb, spb_);\\nmindev = min(min(abs(spb-spb_),abs(spb*2-spb_)),abs(spb-spb_*2));\\nsdev = if(is_beat,sdev * .9 + .1*pow(mindev+.02,2),sdev);\\n\\nq20 = avg; q21 = beat;\\nq22 = peak+.1; \\nq24 = is_beat;\\nq27 = index; q28 = index2;\\n\\ntrel = trel + 1/fps/spb_*4; itrel = int(trel);\\nq25 =  above(itrel, itrel_);\\nq30 = itrel%2;\\nitrel_ = itrel;\\nq31 = itrel;\\n\\nma = ma + peak/fps ;\\nmx=mx*dec_med+(1-dec_med)*cos(ma);\\nmy=my*dec_med+(1-dec_med)*sin(ma+trel/16);\\nq15 = mx ; q16 = my ; q17 = ma;\\n\\n//first par: off; second: on\\nsw1 = if(sw1,bnot(q24*bnot(int(rand(20)))),q24*bnot(int(rand(20))));\\nsw2 = if(sw2,bnot(q24*bnot(int(rand(10)))),q24*bnot(int(rand(80))));\\nsw3 = if(sw3,bnot(q24*bnot(int(rand(10)))),q24*bnot(int(rand(100+10000*sdev))));\\n\\n//********* variation parameters warp shader\\nq6 = sin(time/15)*sin(time/27)*.2; //zz weighting\\nq10 = sin(time/8); //ring\\nq10 = q10*q10*.1; \\nq11 = 1.5+sin(time/7.8); //zoom uv2\\nq12 = if(below(sdev,.015)*bnot(q8),q25,1); //go\\nq13 = .5+sin(time/17); //pow noise warp s\\nq19 = sin(time/5.3)*.2; //sunpos\\n\\n//********* variation parameters comp shader\\nq3 = sw1;//mirror \\nq4 = .02/sdev; //unused ###\\nq5 = max(min(4*sin(trel/64)-3,1),0)*.4; //water\\nq7 = below(sdev,.004)*(index2%2); //flash\\nq2 = abs(q19)*sqrt(q15*q15+q16*q16); //avoid black - frame eq2\\n\\ntrel2 = trel2+.003*q22*q22/fps;\\ntmp = sin(trel2);\\ntmp = 20*tmp-19;\\nq8 =  tmp*above(tmp,0)*(4/max(q22-4,0.2)+4); // dyn zoom\\nq26 = above(q22,12)*(q22-12)*2; //# ok???\\n\\ntmp = index2/6;\\nq14 = abs((tmp-int(tmp))-.5)*6+1; //ang multi\\n\\ntmp =sin(trel/4*3.14); //sym rot\\njmp = jmp + above(tmp,.5)*tmp/fps*8*sw2;\\nq9 = jmp*equal(q14,1)*below(sdev,0.04)+time*above(sin(q17/23),.9);\\nq18 = tmp * bnot(q8) * sw3; //waber\\n\\nmonitor = sw1;\\nrot = .003;\\nwarp = .0;\\nzoom = 1+(avg-log(sdev))/200;\\n//dx = tmp*.01*above(abs(tmp),.95);\\nq32=aspecty;monitor=vol;\\nchng=sin(time*.5);\\ncthr=.99;\\nmq21=if(above(chng,cthr),rand(3),mq21);\\nmq22=if(above(chng,cthr),rand(3),mq22);\\nmq23=if(above(chng,cthr),rand(3),mq23);\\nmq24=if(above(chng,cthr),rand(2),mq24);\\nmq25=if(above(chng,cthr),rand(2),mq25);\\nmq26=if(above(chng,cthr),rand(2),mq26);\\nmq27=if(above(chng,cthr),rand(1),mq27);\\nmq28=if(above(chng,cthr),rand(1),mq28);\\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\\nmq30=if(above(chng,cthr),rand(1)*.3,mq30);\\nmonitor=chng;\\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\\nq27=mq27;q28=mq28;q29=mq29;q30=mq30;\\n\\nmonitor=mq1;","pixel_eqs_eel":"","warp":"mat2 ofs;\\nfloat xlat_mutablenoise;\\nvec2 xlat_mutableuv1;\\nvec2 xlat_mutableuv2;\\nfloat xlat_mutablezv;\\n shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1.x = q15;\\n  tmpvar_1.y = q16;\\n  mat2 tmpvar_2;\\n  tmpvar_2[uint(0)].x = texsize.z;\\n  tmpvar_2[uint(0)].y = 0.0;\\n  tmpvar_2[1u].x = 0.0;\\n  tmpvar_2[1u].y = texsize.w;\\n  ofs = (tmpvar_2 * 2.0);\\n  vec3 ret_3;\\n  xlat_mutableuv1 = (uv - 0.5);\\n  vec2 v_4;\\n  v_4.x = ofs[0].x;\\n  v_4.y = ofs[1].x;\\n  vec2 v_5;\\n  v_5.x = ofs[0].x;\\n  v_5.y = ofs[1].x;\\n  vec2 v_6;\\n  v_6.x = ofs[0].y;\\n  v_6.y = ofs[1].y;\\n  vec2 v_7;\\n  v_7.x = ofs[0].y;\\n  v_7.y = ofs[1].y;\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = (texture (sampler_main, (uv + v_4)) - texture (sampler_main, (uv - v_5))).z;\\n  tmpvar_8.y = (texture (sampler_main, (uv + v_6)) - texture (sampler_main, (uv - v_7))).z;\\n  xlat_mutablezv = (time * 0.1);\\n  xlat_mutableuv2 = ((q11 * xlat_mutableuv1) + (0.04 * time));\\n  vec3 tmpvar_9;\\n  tmpvar_9.xy = xlat_mutableuv2;\\n  tmpvar_9.z = xlat_mutablezv;\\n  vec3 tmpvar_10;\\n  tmpvar_10.xy = (xlat_mutableuv2 * vec2(2.0, 2.0));\\n  tmpvar_10.z = (xlat_mutablezv * 2.0);\\n  vec3 tmpvar_11;\\n  tmpvar_11.xy = (xlat_mutableuv2 * vec2(4.0, 4.0));\\n  tmpvar_11.z = (xlat_mutablezv * 3.0);\\n  vec3 tmpvar_12;\\n  tmpvar_12.xy = (xlat_mutableuv2 * vec2(8.0, 8.0));\\n  tmpvar_12.z = (xlat_mutablezv * 7.0);\\n  xlat_mutablenoise = (((\\n    (texture (sampler_noisevol_hq, tmpvar_9).z + (texture (sampler_noisevol_hq, tmpvar_10).z / 2.0))\\n   + \\n    (texture (sampler_noisevol_hq, tmpvar_11).z / 4.0)\\n  ) + (texture (sampler_noisevol_hq, tmpvar_12).z / 8.0)) - 1.0);\\n  float tmpvar_13;\\n  tmpvar_13 = pow (xlat_mutablenoise, q13);\\n  xlat_mutablenoise = tmpvar_13;\\n  xlat_mutableuv2 = ((xlat_mutableuv1 * (1.0 + \\n    (0.5 * q2)\\n  )) + (tmpvar_13 * 0.1));\\n  float tmpvar_14;\\n  tmpvar_14 = (((texture (sampler_blur3, \\n    ((xlat_mutableuv1 / 4.0) + 0.5)\\n  ).xyz * scale3) + bias3) + 0.2).x;\\n  vec2 x_15;\\n  x_15 = (xlat_mutableuv2 - (tmpvar_1 * q19));\\n  ret_3 = ((q12 * (\\n    ((((\\n      clamp ((0.0005 / abs((\\n        sqrt(dot (x_15, x_15))\\n       - \\n        (q10 / q22)\\n      ))), 0.0, 1.0)\\n     * \\n      (0.5 + normalize(roam_cos))\\n    .xyz) / tmpvar_14) + (texture (sampler_main, (\\n      (xlat_mutableuv1 + 0.5)\\n     + \\n      (q6 * tmpvar_8)\\n    )) * 0.98).xyz) - 0.01)\\n   - \\n    (tmpvar_14 * 0.1)\\n  )) + ((1.0 - q12) * texture (sampler_main, uv).xyz));\\n  vec4 tmpvar_16;\\n  tmpvar_16 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv.xyy) * (\\n    (q27 * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\\n  if (((ret_3.x > (q21 * roam_cos.y)) && (ret_3.x <= (q24 * roam_sin.x)))) {\\n    ret_3.y = (ret_3.y - (tmpvar_16.x * 0.5));\\n  };\\n  if (((ret_3.y > (q22 * roam_sin.x)) && (ret_3.y <= (q25 * roam_cos.x)))) {\\n    ret_3.z = (ret_3.z - (tmpvar_16.y * 0.5));\\n  };\\n  if (((ret_3.z > (q23 * roam_cos.x)) && (ret_3.z <= (q26 * roam_sin.y)))) {\\n    ret_3.x = (ret_3.x - (tmpvar_16.z * 0.5));\\n  };\\n  vec4 tmpvar_17;\\n  tmpvar_17.w = 1.0;\\n  tmpvar_17.xyz = ret_3;\\n  ret = tmpvar_17.xyz;\\n }","comp":"float xlat_mutableang2;\\nvec3 xlat_mutableret1;\\nvec2 xlat_mutableuv2;\\n shader_body { \\n  vec2 uv_1;\\n  vec3 ret_2;\\n  uv_1 = ((uv - 0.5) * aspect.xy);\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = ((0.1 / rad) * q15);\\n  tmpvar_3.y = ((ang * 0.2) * q22);\\n  uv_1 = (uv_1 / (1.0 + (q8 * \\n    sqrt(dot (uv_1, uv_1))\\n  )));\\n  uv_1 = (uv_1 * (1.0 - (\\n    (float(mod (q28, 2.0)))\\n   / 4.0)));\\n  uv_1 = (uv_1 * (1.0 + (\\n    (q5 * texture (sampler_noise_mq, tmpvar_3).x)\\n   * rad)));\\n  xlat_mutableret1 = vec3(0.0, 0.0, 0.0);\\n  xlat_mutableang2 = ((1.57 * q14) + ((q28 * 3.14) / 4.0));\\n  float tmpvar_4;\\n  tmpvar_4 = cos(xlat_mutableang2);\\n  float tmpvar_5;\\n  tmpvar_5 = sin(xlat_mutableang2);\\n  xlat_mutableuv2.x = ((uv_1.x * tmpvar_4) - (uv_1.y * tmpvar_5));\\n  xlat_mutableuv2.y = ((uv_1.x * tmpvar_5) + (uv_1.y * tmpvar_4));\\n  xlat_mutableuv2 = (xlat_mutableuv2 / (1.0 + (q26 * \\n    sqrt(dot (uv_1, uv_1))\\n  )));\\n  xlat_mutableuv2 = (xlat_mutableuv2 * (1.0 + (0.5 * q18)));\\n  if ((q3 == 1.0)) {\\n    xlat_mutableuv2 = xlat_mutableuv2.yx;\\n  };\\n  xlat_mutableret1 = max (vec3(0.0, 0.0, 0.0), texture (sampler_main, (xlat_mutableuv2 + 0.5)).xyz);\\n  float tmpvar_6;\\n  tmpvar_6 = (q28 * 3.14);\\n  xlat_mutableang2 = ((3.14 * q14) + (tmpvar_6 / 4.0));\\n  float tmpvar_7;\\n  tmpvar_7 = cos(xlat_mutableang2);\\n  float tmpvar_8;\\n  tmpvar_8 = sin(xlat_mutableang2);\\n  xlat_mutableuv2.x = ((uv_1.x * tmpvar_7) - (uv_1.y * tmpvar_8));\\n  xlat_mutableuv2.y = ((uv_1.x * tmpvar_8) + (uv_1.y * tmpvar_7));\\n  xlat_mutableuv2 = (xlat_mutableuv2 * (1.0 + (-0.5 * q18)));\\n  xlat_mutableret1 = max (xlat_mutableret1, texture (sampler_main, (xlat_mutableuv2 + 0.5)).xyz);\\n  xlat_mutableang2 = ((4.71 * q14) + (tmpvar_6 / 4.0));\\n  float tmpvar_9;\\n  tmpvar_9 = cos(xlat_mutableang2);\\n  float tmpvar_10;\\n  tmpvar_10 = sin(xlat_mutableang2);\\n  xlat_mutableuv2.x = ((uv_1.x * tmpvar_9) - (uv_1.y * tmpvar_10));\\n  xlat_mutableuv2.y = ((uv_1.x * tmpvar_10) + (uv_1.y * tmpvar_9));\\n  xlat_mutableuv2 = (xlat_mutableuv2 / (1.0 + (q26 * \\n    sqrt(dot (uv_1, uv_1))\\n  )));\\n  xlat_mutableuv2 = (xlat_mutableuv2 * (1.0 + (0.5 * q18)));\\n  if ((q3 == 1.0)) {\\n    xlat_mutableuv2 = xlat_mutableuv2.yx;\\n  };\\n  xlat_mutableret1 = max (xlat_mutableret1, texture (sampler_main, (xlat_mutableuv2 + 0.5)).xyz);\\n  xlat_mutableang2 = ((6.28 * q14) + ((q28 * 3.14) / 4.0));\\n  float tmpvar_11;\\n  tmpvar_11 = cos(xlat_mutableang2);\\n  float tmpvar_12;\\n  tmpvar_12 = sin(xlat_mutableang2);\\n  xlat_mutableuv2.x = ((uv_1.x * tmpvar_11) - (uv_1.y * tmpvar_12));\\n  xlat_mutableuv2.y = ((uv_1.x * tmpvar_12) + (uv_1.y * tmpvar_11));\\n  xlat_mutableuv2 = (xlat_mutableuv2 * (1.0 + (-0.5 * q18)));\\n  xlat_mutableret1 = max (xlat_mutableret1, texture (sampler_main, (xlat_mutableuv2 + 0.5)).xyz);\\n  xlat_mutableret1 = (xlat_mutableret1 * ((1.0 - q7) + (\\n    (q7 * q25)\\n   / 2.0)));\\n  ret_2 = (1.0 - exp((\\n    -(xlat_mutableret1)\\n   * 4.0)));\\n  vec3 tmpvar_13;\\n  tmpvar_13 = pow (ret_2, vec3(1.5, 1.5, 1.5));\\n  vec3 tmpvar_14;\\n  tmpvar_14 = mix (vec3(dot (tmpvar_13, vec3(0.32, 0.49, 0.29))), tmpvar_13, vec3(clamp ((q20 / 3.0), 0.0, 1.0)));\\n  ret_2 = tmpvar_14;\\n  vec4 tmpvar_15;\\n  tmpvar_15 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv_1.xyy) * (\\n    (q28 * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q30)));\\n  if (((tmpvar_14.x > (q26 * roam_cos.y)) && (tmpvar_14.x <= (q23 * roam_sin.x)))) {\\n    ret_2.z = (tmpvar_14.z - (tmpvar_15.x * 0.5));\\n  };\\n  if (((tmpvar_14.y > (q25 * roam_sin.x)) && (tmpvar_14.y <= (q22 * roam_cos.x)))) {\\n    ret_2.x = (tmpvar_14.x - (tmpvar_15.y * 0.5));\\n  };\\n  if (((ret_2.z > (q24 * roam_cos.x)) && (ret_2.z <= (q21 * roam_sin.y)))) {\\n    ret_2.y = (tmpvar_14.y - (tmpvar_15.z * 0.5));\\n  };\\n  vec4 tmpvar_16;\\n  tmpvar_16.w = 1.0;\\n  tmpvar_16.xyz = ret_2;\\n  ret = tmpvar_16.xyz;\\n }"}')},1289:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1.98,"decay":0.5,"echo_zoom":0.952,"echo_alpha":0.5,"echo_orient":3,"wave_mode":5,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.474,"wave_smoothing":0.45,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.8,"wave_g":0.49,"ob_size":0,"ob_a":0.3,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1x":0.8,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":7,"additive":1,"num_inst":1024,"rad":0.04896,"tex_ang":1.00531,"tex_zoom":1.53117,"r":0,"g":1,"b":1,"a":0,"g2":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"max_age = reg00;\\nn = instance*12;\\n\\nx0 = gmegabuf (n);\\ny0 = gmegabuf (n+1);\\nz0 = gmegabuf (n+2); \\nif (z0 < -100, rad = 0; gmegabuf(n+8) = max_age,\\n  rad0 = pow(1-gmegabuf(n+8)/max_age,0.2)/z0* gmegabuf(n+7) + 0.01;\\n  rad = abs(rad0)*0.032 ;\\n\\n  x = 0.5 + x0/z0;\\n  y = 0.5 + y0/z0;\\n);\\n\\na = 1; a2 = 0.2;\\n\\ng = .8; g2 = .0;\\n//b = (gmegabuf(n+7)>0)*0.04/abs(rad0); b2 = 0;\\nb = (rand(10)>3)*0.2 + 0.2*(z0<0); b2 =0;\\n\\n"},{"baseVals":{"sides":12,"thickoutline":1,"x":0.9,"y":0.7,"rad":0.02958,"tex_zoom":0.9355,"g":0.5,"b":1,"g2":0,"b2":0.4,"border_r":0.3,"border_g":0.7,"border_b":0.8,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"a = 1;"},{"baseVals":{"sides":44,"textured":1,"rad":1.397,"tex_zoom":0.44799,"a":0.5,"r2":1,"g2":0,"border_r":0.5,"border_g":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":34,"thickoutline":1,"x":0.65,"y":0.8,"rad":0.14595,"tex_zoom":0.3357,"g2":0,"border_r":0.2,"border_g":0.7,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"a = q22;"}],"waves":[{"baseVals":{"enabled":1,"samples":160,"sep":20,"usedots":1,"additive":1,"scaling":7.858,"smoothing":0.1,"r":0.2,"g":0.3,"a":0.6},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x = rand(100)/100;\\ny =  0.5 - (1-0.7)/q32- 0.15*(rand(100)/100-0.5);\\na = 0.15;\\n\\nr= 0; b=1; g = 0;"},{"baseVals":{"usedots":1,"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"r":0,"g":0.2,"b":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"max_age =  4.5; // Sekunden\\nreg00 = max_age;\\n\\nn = 0;\\nloop (12*1024, gmegabuf(n) = max_age-1 + rand(2); n+=1);\\n\\n\\nq9 = (rand(25)-10)*2;\\nq3 = rand (100)/100;\\nq4 = rand (100)/100;\\n\\n//q2 = q3 = q4 = 0;\\n//record\\n// 0 : xpos\\n// 1 : ypos\\n// 2 : zpos\\n// 3 :vx\\n// 4 :vy\\n// 5 :vz\\n\\n\\n// 8 : age","frame_eqs_eel":"dec_fast = 1 - 0.22*40/fps;\\ndec_med  = 1 - 0.15*40/fps;\\ndec_slow = 1 - 0.04* 40/fps;\\n\\nvol = (bass+med+treb)/3;\\nvol_ = vol_*dec_slow + (1-dec_slow)*vol;\\nbeat = vol;\\nis_beat = above(beat, 1+peak*4) * above (time, t0+.2);\\nt0   = if (is_beat,time,t0);\\npeak = if (is_beat, beat, peak*dec_med);\\n\\nindex = (index + is_beat) %1024;\\nind1 = ind1*dec_med + (1-dec_fast)*index;\\nind2 = ind2*dec_med + (1-dec_fast)*ind1;\\nq27 = ind2;\\nq24 = is_beat;\\n\\n//Partikel\\nran1 = if (is_beat, rand(100)/100-0.5, ran1);\\nran2 = if (is_beat, rand(100)/50+1, ran2);\\nran1_ = dec_med * ran1_ + (1-dec_med)*ran1;\\nhigh = ran2 > 2.9;\\nq5 = ran1_;\\n\\nn = 0;\\npush = max(0,vol-vol_alt)*vol_; air = 0.1*dt; \\ndt = 1/fps;\\nv00 = pow(push,0.25)+0.4; Free = 512; New = 0;\\n\\ny0 = -0.68; yobf = y0+0.1;\\nloop (512,\\n   megabuf (n) = gmegabuf (n);\\n   megabuf (n+1) = gmegabuf (n+1);\\n   megabuf (n+2) = gmegabuf (n+2);\\n  if (gmegabuf(n+8) > max_age,\\n    if (band(push >= dt*10 * !high,New < 200), \\n    Free -= 1; New +=1;\\n    // Init Neues Partikel\\n     Tht = rand (100) / 500 * (1+high*1.5);\\n     Phi   = rand (12);\\n     v0 = v00 * (1 + rand(10)/40);\\n     gmegabuf (n) = ran1*1.7;\\n     gmegabuf (n+1) = y0 + 2.2 * high;\\n     gmegabuf (n+2) = 2;\\n     gmegabuf (n+3) = v0*sin(Tht) * cos(Phi);\\n     gmegabuf (n+4) = v0*cos(4*Tht) * (1-high*1.5);\\n     gmegabuf (n+5) = v0*sin(Tht)*sin(Phi)*1.5*vol;\\n     gmegabuf (n+7) = 0;\\n     gmegabuf (n+8) = rand(100)/100;,0)\\n  ,\\n  //Integration\\n   Free -= 1;\\n   gmegabuf (n)   += gmegabuf(n+3)*dt;\\n   gmegabuf (n+1) += gmegabuf(n+4)*dt;\\n   gmegabuf (n+2) += gmegabuf(n+5)*dt;\\n\\n   gmegabuf (n+3) *= (1-air);\\n   gmegabuf (n+4) *= (1-air);\\n   gmegabuf (n+4) -= 0.8*dt;\\n   gmegabuf (n+5) *= (1-air);\\n   gmegabuf (n+7) = (gmegabuf(n+1)>yobf) * min(1,18*(gmegabuf(n+1)-yobf));\\n   if (band(gmegabuf(n+1)<yobf,gmegabuf(n+4)<0),gmegabuf(8) = max_age,0);\\n//  gmegabuf(n+7)=1;\\n   gmegabuf (n+8) += dt;);\\nn += 12);\\n  \\n//Kopien\\nn = 0;\\nloop (512,\\n  m = 511*12+n;\\n  gmegabuf (m) = (gmegabuf(n) + megabuf(n))/2;  \\n  gmegabuf (m+1) = (gmegabuf(n+1) + megabuf(n+1))/2;  \\n  gmegabuf (m+2) = (gmegabuf(n+2) + megabuf(n+2))/2;  \\n  gmegabuf (m+7) = gmegabuf(n+7);  \\n  gmegabuf (m+8) = gmegabuf(n+8);  \\nn += 12);\\n\\n\\n\\ndec = if (bass>bass1,0.5,0.9);\\nbass1 = bass1*dec + bass*(1-dec);\\nq1 = min(1,max(0,bass1-1.5) * abs(q3-0.5)*3);\\n\\nq10 = max (vol_-0.1,0.1);\\nvol_alt = vol;\\n\\n\\nq32 = aspecty;\\n\\n\\nnew1 = if (new>0,new,new1);\\n\\nmonitor = New1;","pixel_eqs_eel":"dy = -.007*y;\\nwarp =.0;\\nrot = .025*sin(q27+x*7+y*0)*0.2/(abs(y-0.7)+0.1) * q10;// * (1-2*(y>0.7));\\nzoom = 1.003 + 0.2*max(0,y-0.7);","warp":"vec2 ver;\\nfloat xlat_mutablecloud;\\nvec2 xlat_mutabledz;\\nvec2 xlat_mutableuv1;\\nvec2 xlat_mutableuv2;\\nfloat xlat_mutablez;\\n shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1.y = 0.0;\\n  tmpvar_1.x = texsize.z;\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = 0.0;\\n  tmpvar_2.y = texsize.w;\\n  ver = (tmpvar_2 * 2.0);\\n  vec3 ret_3;\\n  xlat_mutabledz.x = (2.0 * dot (vec3((texture (sampler_main, \\n    (uv + tmpvar_1)\\n  ).z - texture (sampler_main, \\n    (uv - tmpvar_1)\\n  ).z)), vec3(0.32, 0.49, 0.29)));\\n  xlat_mutabledz.y = (2.0 * dot (vec3((texture (sampler_main, \\n    (uv + ver)\\n  ).z - texture (sampler_main, \\n    (uv - ver)\\n  ).z)), vec3(0.32, 0.49, 0.29)));\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = q3;\\n  tmpvar_4.y = (0.4 + (q4 * 0.4));\\n  xlat_mutableuv1 = (uv_orig - tmpvar_4);\\n  vec4 tmpvar_5;\\n  tmpvar_5 = texture (sampler_main, uv_orig);\\n  xlat_mutablez = ((0.8 * (xlat_mutableuv1.y - 0.4)) - (mix (tmpvar_5.x, \\n    ((texture (sampler_blur1, uv_orig).xyz * scale1) + bias1)\\n  .x, 0.5) * 0.03));\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = (xlat_mutableuv1.x * xlat_mutablez);\\n  tmpvar_6.y = xlat_mutablez;\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = 0.0;\\n  tmpvar_7.y = (-(time) * 0.014);\\n  xlat_mutableuv2 = (tmpvar_6 + tmpvar_7);\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = 0.0;\\n  tmpvar_8.y = (time * 0.004);\\n  vec2 uvi_9;\\n  uvi_9 = ((xlat_mutableuv2 * 1.5) + tmpvar_8);\\n  float zv_10;\\n  zv_10 = (0.002 * time);\\n  xlat_mutablecloud = (1.0 - (1.5 * abs(\\n    (texture (sampler_noise_hq, ((xlat_mutableuv2 + (0.07 * \\n      abs((((\\n        (dot (texture (sampler_noise_hq, uvi_9), vec4(0.32, 0.49, 0.29, 0.0)) + (dot (texture (sampler_noise_hq, (\\n          (uvi_9 * 2.0)\\n         + zv_10)), vec4(0.32, 0.49, 0.29, 0.0)) / 2.0))\\n       + \\n        (dot (texture (sampler_noise_hq, ((uvi_9 * 4.0) + zv_10)), vec4(0.32, 0.49, 0.29, 0.0)) / 4.0)\\n      ) + (\\n        dot (texture (sampler_noise_hq, ((uvi_9 * 8.0) + zv_10)), vec4(0.32, 0.49, 0.29, 0.0))\\n       / -8.0)) - 1.0))\\n    )) / 2.0)) - 0.5)\\n  ))).x;\\n  xlat_mutablecloud = (xlat_mutablecloud * clamp ((\\n    (texture (sampler_noise_hq, (xlat_mutableuv2 * vec2(2.0, 0.5))).x + 0.5)\\n   - \\n    (3.0 * abs(xlat_mutableuv2.x))\\n  ), 0.0, 1.0));\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = 0.0;\\n  tmpvar_11.y = ((-0.01 * time) * (0.125 * float(\\n    int((8.0 * pow (xlat_mutablecloud, 4.0)))\\n  )));\\n  float tmpvar_12;\\n  tmpvar_12 = (texture (sampler_noise_hq, (18.0 * (\\n    (xlat_mutableuv2 + (0.05 * xlat_mutablecloud))\\n   + tmpvar_11))) - 0.75).x;\\n  xlat_mutablecloud = (xlat_mutablecloud * (1.0 + (\\n    (0.2 * tmpvar_12)\\n   * \\n    (xlat_mutablecloud * xlat_mutablecloud)\\n  )));\\n  ret_3.x = ((0.3 * xlat_mutablecloud) + (0.7 * tmpvar_5.xyz)).x;\\n  xlat_mutableuv1 = (uv - vec2(0.0, 0.71));\\n  vec4 tmpvar_13;\\n  tmpvar_13 = texture (sampler_blur1, uv);\\n  float tmpvar_14;\\n  tmpvar_14 = clamp (((12.0 * \\n    (((10.0 * xlat_mutableuv1.y) + ((\\n      (tmpvar_13.xyz * scale1)\\n     + bias1).x / 2.0)) - 1.0)\\n  ) + tmpvar_12), 0.0, 1.0);\\n  xlat_mutableuv1 = (uv - 0.7);\\n  ret_3.z = (((\\n    ((((4.0 * tmpvar_14) * (1.0 - tmpvar_14)) * clamp ((tmpvar_5.x - 0.2), 0.0, 1.0)) + texture (sampler_main, (uv + (xlat_mutabledz * 0.003))).z)\\n   - \\n    (0.03 * sqrt(dot (xlat_mutabledz, xlat_mutabledz)))\\n  ) - (\\n    pow (((tmpvar_13.xyz * scale1) + bias1).z, 8.0)\\n   * 0.2)) - 0.01);\\n  ret_3.y = (texture (sampler_main, mix (uv, uv_orig, vec2(0.5, 0.5))).y * (0.85 - (0.2 * \\n    ((tmpvar_13.xyz * scale1) + bias1)\\n  .y)));\\n  ret_3.x = (ret_3.x + ((texture (sampler_noise_lq, \\n    (2.0 * xlat_mutableuv2)\\n  ) * 0.08) * clamp (\\n    (1.0 - (3.0 * ret_3.x))\\n  , 0.0, 1.0)).x);\\n  vec4 tmpvar_15;\\n  tmpvar_15.w = 1.0;\\n  tmpvar_15.xyz = ret_3;\\n  ret = tmpvar_15.xyz;\\n }","comp":"float dunk;\\nfloat xlat_mutablenoise;\\nvec2 xlat_mutablers;\\nvec2 xlat_mutablers0;\\nfloat xlat_mutablesmask;\\nfloat xlat_mutablesmoke;\\nvec2 xlat_mutableuv1;\\nfloat xlat_mutablez;\\n shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1.y = 0.0;\\n  tmpvar_1.x = texsize.z;\\n  dunk = ((rand_preset.x * 0.3) + 0.1);\\n  vec2 uv_2;\\n  vec3 ret_3;\\n  uv_2 = (uv + (texsize.zw / 2.0));\\n  xlat_mutableuv1 = (uv_2 - vec2(0.0, 0.7));\\n  xlat_mutablesmask = (((10.0 * xlat_mutableuv1.y) + (\\n    ((texture (sampler_blur1, uv_2).xyz * scale1) + bias1)\\n  .x / 2.0)) - 1.0);\\n  float tmpvar_4;\\n  tmpvar_4 = clamp (((2.0 * xlat_mutablesmask) + 0.3), 0.0, 1.0);\\n  xlat_mutablenoise = ((3.0 * (1.0 - tmpvar_4)) * texture (sampler_noise_lq, ((xlat_mutableuv1 * 1.5) + (rand_frame * 0.2).xy)).x);\\n  float tmpvar_5;\\n  tmpvar_5 = clamp (((12.0 * xlat_mutablesmask) + (xlat_mutablenoise / 2.0)), 0.0, 1.0);\\n  xlat_mutablez = ((0.35 / xlat_mutableuv1.y) + (xlat_mutablenoise / 2.0));\\n  xlat_mutablers0.x = (xlat_mutableuv1.x * xlat_mutablez);\\n  xlat_mutablers0.y = xlat_mutablez;\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = (xlat_mutablers0.x + (time / 4.0));\\n  tmpvar_6.y = (xlat_mutablez + (time * 0.21));\\n  xlat_mutablers = (tmpvar_6 * tmpvar_5);\\n  float t_7;\\n  t_7 = ((texture (sampler_main, uv_2).x - dunk) * (1.0 - (tmpvar_5 * \\n    pow (uv_2.y, 4.0)\\n  )));\\n  float tmpvar_8;\\n  tmpvar_8 = clamp (((1.2 * t_7) - 0.2), 0.0, 1.0);\\n  t_7 = tmpvar_8;\\n  vec3 tmpvar_9;\\n  tmpvar_9.x = tmpvar_8;\\n  tmpvar_9.y = (tmpvar_8 * tmpvar_8);\\n  tmpvar_9.z = pow (tmpvar_8, 8.0);\\n  vec3 tmpvar_10;\\n  tmpvar_10 = clamp ((tmpvar_9 / vec3(0.8, 0.8, 0.8)), 0.0, 1.0);\\n  float t_11;\\n  t_11 = ((texture (sampler_blur2, (uv_2 + 0.03)).xyz * scale2) + bias2).x;\\n  float tmpvar_12;\\n  tmpvar_12 = clamp (((1.2 * t_11) - 0.2), 0.0, 1.0);\\n  t_11 = tmpvar_12;\\n  vec3 tmpvar_13;\\n  tmpvar_13.x = tmpvar_12;\\n  tmpvar_13.y = (tmpvar_12 * tmpvar_12);\\n  tmpvar_13.z = pow (tmpvar_12, 8.0);\\n  vec3 tmpvar_14;\\n  tmpvar_14 = clamp ((tmpvar_13 / vec3(0.8, 0.8, 0.8)), 0.0, 1.0);\\n  ret_3 = ((tmpvar_10 * (tmpvar_10 * \\n    (3.0 - (2.0 * tmpvar_10))\\n  )) + ((\\n    (((1.0 - texture (sampler_main, uv_2).x) * (1.0 - tmpvar_5)) * abs((texture (sampler_main, (uv_2 - tmpvar_1)).x - texture (sampler_main, (uv_2 + tmpvar_1)).x)))\\n   * \\n    (tmpvar_14 * (tmpvar_14 * (3.0 - (2.0 * tmpvar_14))))\\n  ) * q9));\\n  xlat_mutablesmoke = ((texture (sampler_blur1, uv_2).xyz * scale1) + bias1).z;\\n  vec2 tmpvar_15;\\n  tmpvar_15.x = uv_2.x;\\n  tmpvar_15.y = ((0.85 - xlat_mutableuv1.y) + ((\\n    ((texture (sampler_noise_hq, xlat_mutablers) + texture (sampler_noise_hq, ((xlat_mutablers / 4.0) - (time / 8.0)))) - 1.0)\\n  .x * 0.2) * q10));\\n  float t_16;\\n  t_16 = ((texture (sampler_main, tmpvar_15).x + texture (sampler_main, tmpvar_15).y) - dunk);\\n  float tmpvar_17;\\n  tmpvar_17 = clamp (((1.2 * t_16) - 0.2), 0.0, 1.0);\\n  t_16 = tmpvar_17;\\n  vec3 tmpvar_18;\\n  tmpvar_18.x = tmpvar_17;\\n  tmpvar_18.y = (tmpvar_17 * tmpvar_17);\\n  tmpvar_18.z = pow (tmpvar_17, 8.0);\\n  vec3 tmpvar_19;\\n  tmpvar_19 = clamp ((tmpvar_18 / vec3(0.8, 0.8, 0.8)), 0.0, 1.0);\\n  ret_3 = (ret_3 + ((\\n    (tmpvar_19 * (tmpvar_19 * (3.0 - (2.0 * tmpvar_19))))\\n   * tmpvar_5) * 0.85));\\n  float tmpvar_20;\\n  tmpvar_20 = ((3.6 * tmpvar_4) * (1.0 - tmpvar_4));\\n  ret_3 = (ret_3 * (clamp (\\n    (1.0 - (xlat_mutablesmoke * (1.0 - tmpvar_20)))\\n  , 0.0, 1.0) * clamp (\\n    (1.0 - (tmpvar_20 * float((rand_preset.x > 0.5))))\\n  , 0.0, 1.0)));\\n  vec3 tmpvar_21;\\n  tmpvar_21.z = 0.0;\\n  tmpvar_21.xy = (((texture (sampler_blur3, uv_2).xyz * scale3) + bias3).xy * vec2(3.0, 5.0));\\n  ret_3 = (ret_3 + ((xlat_mutablesmoke * \\n    dot (tmpvar_21, vec3(0.32, 0.49, 0.29))\\n  ) * vec3(1.0, 0.84, 0.62)));\\n  float tmpvar_22;\\n  tmpvar_22 = clamp (((1.2 * \\n    clamp (texture (sampler_main, uv_2).y, 0.0, 1.0)\\n  ) - 0.2), 0.0, 1.0);\\n  vec3 tmpvar_23;\\n  tmpvar_23.x = tmpvar_22;\\n  tmpvar_23.y = (tmpvar_22 * tmpvar_22);\\n  tmpvar_23.z = pow (tmpvar_22, 8.0);\\n  vec3 tmpvar_24;\\n  tmpvar_24 = clamp ((tmpvar_23 / vec3(0.8, 0.8, 0.8)), 0.0, 1.0);\\n  ret_3 = (ret_3 + (tmpvar_24 * (tmpvar_24 * \\n    (3.0 - (2.0 * tmpvar_24))\\n  )));\\n  float tmpvar_25;\\n  tmpvar_25 = clamp (0.52, 0.0, 1.0);\\n  vec3 tmpvar_26;\\n  tmpvar_26.x = tmpvar_25;\\n  tmpvar_26.y = (tmpvar_25 * tmpvar_25);\\n  tmpvar_26.z = pow (tmpvar_25, 8.0);\\n  vec3 tmpvar_27;\\n  tmpvar_27 = clamp ((tmpvar_26 / vec3(0.8, 0.8, 0.8)), 0.0, 1.0);\\n  vec3 tmpvar_28;\\n  tmpvar_28 = mix (clamp (ret_3, 0.0, 1.0), (tmpvar_27 * (tmpvar_27 * \\n    (3.0 - (2.0 * tmpvar_27))\\n  )), vec3((pow (\\n    ((1.0 - uv_2.y) - ((uv_2.x - 0.5) * (q3 - 0.5)))\\n  , 4.0) * q1)));\\n  ret_3 = tmpvar_28;\\n  vec4 tmpvar_29;\\n  tmpvar_29.w = 1.0;\\n  tmpvar_29.xyz = tmpvar_28;\\n  ret = tmpvar_29.xyz;\\n }"}')},6401:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":0.001,"wave_scale":0.698,"wave_smoothing":0.45,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0,"ob_g":0.1,"ob_b":1,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":25.6,"mv_y":9.6,"mv_l":5,"mv_g":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"textured":1,"x":0.09,"y":0.9,"rad":0.22437,"tex_zoom":1.76002,"r2":1,"g2":0,"a2":0.6,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"additive":1,"x":0.26,"y":0.2,"rad":0.39317,"tex_zoom":6.19589,"r":0,"g":0.55,"b":0.5,"g2":0.4,"b2":0.4,"a2":0.07,"border_r":0.3,"border_g":0.7,"border_b":0.8,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"additive":1,"x":0.803,"rad":0.314,"tex_zoom":1.49332,"g":1,"b":1,"a":0,"g2":0,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"rad":0.01,"tex_zoom":0.49981,"r":0,"g2":0,"border_r":0.2,"border_g":0.7,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"samples":132,"sep":20,"thick":1,"additive":1,"scaling":0.48454,"smoothing":0.1,"g":0,"b":0.2,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"usedots":1,"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"r":0,"g":0.2,"b":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"n = 0; loop (20000, megabuf(n)=0; gmegabuf(n)=0; n +=1; );\\n\\nMINBPM = 30; MAXBPM = 230; num_res = 100;\\nindex = 0;\\nloop (num_res,\\n  n = 12*index;\\n  BPM      = minbpm * pow(maxbpm/minbpm,index/num_res);\\n  gmegabuf(n) = BPM;\\n  index += 1;);\\npi = 3.1416;\\nOCTAVE = (num_res) * log(2) / log (MAXBPM / MINBPM);\\n\\nq7 = .15; //MyZoom\\nq8 =  0.2 + rand(1); //fractal modifier\\nq16 = 1.6; //#fish eye\\nstart = 1; travel = 0; RotZ = 0; t0 = time+3;\\ncran0 = rand(1);\\ntrelx = 0;  trely = 0; trelz = 0;\\nreg20 = 1; reg21 = 0; reg22 = 0; reg23 = 0; reg24 = 1; reg25 = 0; reg26 = 0; reg27 = 0; reg28 = 1;\\n\\n//Find random starting point\\nwhile (exec2(\\n  ran1 = rand(8); ran2 = rand(8); ran3 = rand(8);\\n  PosX = rand(8); PosY = rand(8); PosZ = rand(8); \\n\\n  c1 = cos(ran1); c2 = cos(ran2); c3 = cos(ran3); \\n  s1 = sin(ran1); s2 = sin(ran2); s3 = sin(ran3);\\n\\n  reg20 = c2*c1; reg21 = c2*s1; reg22 = -s2;\\n  reg23 = s3*s2*c1 - c3*s1; reg24 = s3*s2*s1 + c3*c1; reg25 = s3*c2;\\n  reg26 = c3*s2*c1 + s3*s1; reg27 = c3*s2*s1 - s3*c1; reg28 = c3*c2;\\n\\n  //***********BOT*************\\n  //Coord. Trans. must exactly match def in warp S. !!!!\\n  dist = 0.001;\\n  while (exec2(\\n    uvx = reg26*dist/q7; uvy = reg27*dist/q7; uvz = reg28*dist/q7;\\n    uvx += PosX; uvy += PosY; uvz += PosZ;\\n    uvx = 1+2*((uvx/4+30.5 - int(uvx/4+30.5))-.5);\\n    uvy = 2+2*((uvy/4+30.5 - int(uvy/4+30.5))-.5);\\n    uvz = 3+2*((uvz/4+30.5 - int(uvz/4+30.5))-.5);\\n    uvx0 = uvx+q8; uvy0 = uvy+q8; uvz0 = uvz+q8;\\n    loop (7+1,\\n      uvx = if (uvx > 1, 2-uvx, if(uvx < -1, -2-uvx, uvx));\\n      uvy = if (uvy > 1, 2-uvy, if(uvy < -1, -2-uvy, uvy));\\n      uvz = if (uvz > 1, 2-uvz, if(uvz < -1, -2-uvz, uvz));\\n      slen = uvx*uvx + uvy*uvy + uvz*uvz;\\n      uvx = if (slen < 0.25, uvx*4, if (slen < 1, uvx/slen, uvx)) *2.6 + uvx0; \\n      uvy = if (slen < 0.25, uvy*4, if (slen < 1, uvy/slen, uvy)) *2.6 + uvy0; \\n      uvz = if (slen < 0.25, uvz*4, if (slen < 1, uvz/slen, uvz)) *2.6 + uvz0; \\n    );\\n    len = sqrt(uvx*uvx + uvy*uvy + uvz*uvz);\\n    dist *= 1.05;\\n  ,(dist < 0.6)*(len > 30)));\\n,(dist < .06))); //end while","frame_eqs_eel":"dt = min (1/fps,0.1);\\ndec_f = 0.8; dec_m = 1 - 4*dt; dec_s = 1 - dt;\\nvol = (bass+mid/2+treb)/3;\\nvol_ = vol_*dec_m + (1-dec_m)*vol;\\ndec = dec_s;\\nvol2 = vol2*dec + (1-dec)*min(3,vol);\\nmaxvol = if (vol>maxvol,vol,maxvol*dec_s);\\n\\nexcite = vol-vol_;\\nindex = 0; maxind1 = 0; mean = 0;\\nloop (num_res, \\n  n = index*12;  omega=gmegabuf(n) * 2*pi/60;\\n  gmegabuf (n+1) *= 1- 0.25*dt; \\n  EC_Steps = int (10*dt*omega)+1; dt1 = dt/EC_Steps;\\n  ex = excite ;\\n  loop (EC_Steps, // Euler-Cauchy \\n    gmegabuf (n+1) += (ex - sqr(omega)*gmegabuf(n+2)) * dt1;\\n    gmegabuf (n+2) += gmegabuf(n+1) * dt1);\\n  beatcos  = gmegabuf(n+1);  beatsin = gmegabuf(n+2)*omega;\\n  quad     = sqrt (pow(beatsin,2) + pow(beatcos,2)) ;\\n   mean += quad/num_res;\\n  gmegabuf (n+3) = gmegabuf(n+3) *dec_m +  quad* (1-dec_m);\\n  if (gmegabuf(n+3) > gmegabuf(maxind1*12+3), maxind1 = index, 0); \\nindex += 1;);\\nquali = gmegabuf(maxind1*12+3)/mean;\\n\\nBPM   = minbpm * pow(maxbpm/minbpm,maxind1/num_res);\\nif (BPM>160, BPM/=2,0);\\ntrel1 += (BPM/60*pi+excite*cosb) * (maxvol>0.7)*dt;\\nq32 = trel1;\\n\\nspeed = (0.15 + dist_*0.25)* (1+avg)/q7*(0.34+vol_*0.34)*(q8+0.8);\\nds = ds * dec_s + (1-dec_s)*speed*.25*dt; \\nRotZ = 0.8*pow (sin(time/12),5);\\n\\n//Position \\nDirX= reg26; DirY= reg27; DirZ = reg28;\\nPosX += ds*DirX ; PosY += ds*DirY; PosZ += ds*DirZ; \\nq4 = PosX; q5 = PosY; q6 = PosZ;\\n\\nangchg = max(0,.4-dist_);\\nv1 = v1 * dec_m + (1-dec_m)* RotZ * ds;\\ndec = 1-3*dt;\\nv2p = v2p *dec + (1-dec)*(angchg*xslope + p2*0.02)*dt;\\nv3p = v3p *dec + (1-dec)*(angchg*yslope + p3*0.02)*dt ;\\nv2 = v2 *dec + (1-dec)* v2p;\\nv3 = v3 *dec + (1-dec)* v3p;\\np3 = sign(v3);\\np4 = sign(v2);\\n//push old RotMat\\nreg30 =reg20; reg31 =reg21; reg32 =reg22; \\nreg33 =reg23; reg34 =reg24; reg35 =reg25; \\nreg36 =reg26; reg37 =reg27; reg38 =reg28; \\n\\nn = 0; avg = 0;\\nloop (5,\\n  n = n+1;\\n  //new Rot. Mat for infinitesimal angles\\n  ran1 = rand(100)/100;\\n  ran2 = rand(100)/200-.25;\\n  tx = cos(n*1.57+ran2) * (n <= 4)*ran1; ty = sin(n*1.57+ran2) * (n <= 4)*ran1;\\n  c1 = cos(v1); c2 = cos(v2+ty); c3 = cos(v3+tx); \\n  s1 = sin(v1); s2 = sin(v2+ty); s3 = sin(v3+tx);\\n  reg10 = c2*c1; reg11 = c2*s1; reg12 = -s2;\\n  reg13 = s3*s2*c1 - c3*s1; reg14 = s3*s2*s1 + c3*c1; reg15 = s3*c2;\\n  reg16 = c3*s2*c1 + s3*s1; reg17 = c3*s2*s1 - s3*c1; reg18 = c3*c2;\\n\\n  //pop old RotMat\\n  reg20 =reg30; reg21 =reg31; reg22 =reg32; \\n  reg23 =reg33; reg24 =reg34; reg25 =reg35; \\n  reg26 =reg36; reg27 =reg37; reg28 =reg38; \\n\\n  //Multiply new RotMat by old one\\n  q20 = reg10*reg20 + reg11*reg23 + reg12*reg26;\\n  q21 = reg10*reg21 + reg11*reg24 + reg12*reg27;\\n  q22 = reg10*reg22 + reg11*reg25 + reg12*reg28;\\n  q23 = reg13*reg20 + reg14*reg23 + reg15*reg26;\\n  q24 = reg13*reg21 + reg14*reg24 + reg15*reg27;\\n  q25 = reg13*reg22 + reg14*reg25 + reg15*reg28;\\n  q26 = reg16*reg20 + reg17*reg23 + reg18*reg26;\\n  q27 = reg16*reg21 + reg17*reg24 + reg18*reg27;\\n  q28 = reg16*reg22 + reg17*reg25 + reg18*reg28;\\n\\n  reg20 =q20; reg21 =q21; reg22 =q22;\\n  reg23 =q23; reg24 =q24; reg25 =q25;\\n  reg26 =q26; reg27 =q27; reg28 =q28;\\n\\n  //***********BOT*************\\n  //Coord. Trans. must exactly match def in warp S. !!!!\\n  dist = 0.002;\\n  while (exec2(\\n    uvx = reg26*dist/q7; uvy = reg27*dist/q7; uvz = reg28*dist/q7;\\n    uvx += PosX; uvy += PosY; uvz += PosZ;\\n//    uvx = 8.0*((uvx/8+30.5 - int(uvx/8+30.5))-.5);\\n//    uvy = 8.0*((uvy/8+30.5 - int(uvy/8+30.5))-.5);\\n//    uvz = 8.0*((uvz/8+30.5 - int(uvz/8+30.5))-.5);\\n    uvx = 1+2*((uvx/4+30.5 - int(uvx/4+30.5))-.5);\\n    uvy = 2+2*((uvy/4+30.5 - int(uvy/4+30.5))-.5);\\n    uvz = 3+2*((uvz/4+30.5 - int(uvz/4+30.5))-.5);\\n    uvx0 = uvx+q8; uvy0 = uvy+q8; uvz0 = uvz+q8;\\n    loop (7+1,\\n      uvx = if (uvx > 1, 2-uvx, if(uvx < -1, -2-uvx, uvx));\\n      uvy = if (uvy > 1, 2-uvy, if(uvy < -1, -2-uvy, uvy));\\n      uvz = if (uvz > 1, 2-uvz, if(uvz < -1, -2-uvz, uvz));\\n      slen = uvx*uvx + uvy*uvy + uvz*uvz;\\n      uvx = if (slen < 0.25, uvx*4, if (slen < 1, uvx/slen, uvx)) *2.6 + uvx0; \\n      uvy = if (slen < 0.25, uvy*4, if (slen < 1, uvy/slen, uvy)) *2.6 + uvy0; \\n      uvz = if (slen < 0.25, uvz*4, if (slen < 1, uvz/slen, uvz)) *2.6 + uvz0; \\n    );\\n    len = sqrt(uvx*uvx + uvy*uvy + uvz*uvz);\\n    dist *= 1.1;\\n  ,(dist < 0.6)*(len > 30)));\\n  megabuf(n) = megabuf(n)*dec_s + (1-dec_s)*dist; //stores the 4 trial points\\n  avg = avg+abs(megabuf(n)/5);\\n); //end loop 5\\nn = 0; avg = 0; loop (5, n=n+1; avg = avg+abs(megabuf(n)/5));\\n\\nxslope = min(max(8*(megabuf(1)-megabuf(3)),-2),2);\\nyslope = min(max(8*(megabuf(4)-megabuf(2)),-2),2);\\ndist_ = dist_*dec_m + (1-dec_m)*dist;\\n\\nq10 = ds*q7; //compensation of lin. movement in GetDist and zoom uv\\nq14 = 1*abs(ds) + 2*(abs(v1) + abs(v2) + abs(v3)) + 1.0/255 + start*.0; \\nstart = start * .9;\\nreg52 = -v2; reg53 = v3;\\n//forward comp. of Rotation\\nwarp = 0.0; zoom = 1;  \\nrot = v1;\\n\\n//light ctrl\\nsinb = sin(trel1);\\ncosb = cos(trel1);\\n\\nbt1 = sinb*sinb_<0; bt2 = cosb*cosb_<0;\\n\\nif (bt1, b1x = rand(2)-1; b1y = rand(2)-1;,0);\\nif (bt2, b2x = rand(2)-1; b2y = rand(2)-1;,0);\\nsinb_=sinb; cosb_=cosb;\\n\\nbri = vol2*0.012*sqrt(100/bpm)+excite*0.01;\\nmov = sqrt (v3*v3+v2*v2)/dt; \\n\\nq1= b1x*abs(b1x);\\nq2= b1y*abs(b1y);\\n\\nq17 =b2x*0.4;\\nq18= b2y*0.4;\\n\\nlen = pow(q1,2)+ pow(q2,2);\\nq3 = pow(sinb,2)*bri * (1+len*4)* max(0,1-5*mov);\\nq19= pow(cosb,2)*bri*1.2;\\n\\nmonitor = q8;\\n//frei: q9, q11, q12, q13, q15, q29m q30, q31, q32","pixel_eqs_eel":"warp = 0.0; zoom = 1; \\ntx = tan((2*x-1)*0.9);\\nty = tan((2*y-1)*0.9);\\n\\ndx = reg52/q16* (1+0.5*abs(tx)); \\ndy = reg53/q16* (1+0.5*abs(ty)); \\n\\n\\ndx += reg53*ty*(x-0.5)*1; \\ndy += reg52*tx*(y-0.5)*1; \\n\\n//muss experimentell an tele angepasst werden; momentan 1.5 !!!","warp":"float sustain;\\nfloat pix;\\nvec3 mod1;\\nfloat xlat_mutabledist;\\nfloat xlat_mutablestruc;\\nvec2 xlat_mutableuv1;\\nvec3 xlat_mutableuv2;\\n shader_body { \\n  mat3 tmpvar_1;\\n  tmpvar_1[uint(0)].x = q20;\\n  tmpvar_1[uint(0)].y = q23;\\n  tmpvar_1[uint(0)].z = q26;\\n  tmpvar_1[1u].x = q21;\\n  tmpvar_1[1u].y = q24;\\n  tmpvar_1[1u].z = q27;\\n  tmpvar_1[2u].x = q22;\\n  tmpvar_1[2u].y = q25;\\n  tmpvar_1[2u].z = q28;\\n  vec3 tmpvar_2;\\n  tmpvar_2.x = q4;\\n  tmpvar_2.y = q5;\\n  tmpvar_2.z = q6;\\n  sustain = (0.97 - q14);\\n  pix = (texsize.z * 2.0);\\n  mod1 = (rand_preset.xyz - 0.5);\\n  vec2 uv_3;\\n  vec3 ret_4;\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (uv - 0.5);\\n  xlat_mutableuv1 = ((tmpvar_5 * aspect.xy) * q16);\\n  vec4 tmpvar_6;\\n  tmpvar_6 = texture (sampler_pw_main, uv);\\n  uv_3 = ((tmpvar_5 * (1.0 - \\n    (q10 / (1.0 - (tmpvar_6.z + (0.003921569 * tmpvar_6.y))))\\n  )) + 0.5);\\n  vec4 tmpvar_7;\\n  tmpvar_7 = fract((8.0 * texture (sampler_noise_lq, (uv_3 + rand_frame.yz))));\\n  xlat_mutabledist = tmpvar_7.x;\\n  if ((tmpvar_7.y > 0.16)) {\\n    vec4 nb2_8;\\n    vec4 nb_9;\\n    vec4 tmpvar_10;\\n    tmpvar_10 = texture (sampler_pw_main, (uv_3 + vec2(-(pix))));\\n    nb_9.x = (1.0 - (tmpvar_10.z + (0.003921569 * tmpvar_10.y)));\\n    vec4 tmpvar_11;\\n    tmpvar_11 = texture (sampler_pw_main, (uv_3 + (pix * vec2(1.0, -1.0))));\\n    nb_9.y = (1.0 - (tmpvar_11.z + (0.003921569 * tmpvar_11.y)));\\n    vec4 tmpvar_12;\\n    tmpvar_12 = texture (sampler_pw_main, (uv_3 + vec2(pix)));\\n    nb_9.z = (1.0 - (tmpvar_12.z + (0.003921569 * tmpvar_12.y)));\\n    vec4 tmpvar_13;\\n    tmpvar_13 = texture (sampler_pw_main, (uv_3 + (pix * vec2(-1.0, 1.0))));\\n    nb_9.w = (1.0 - (tmpvar_13.z + (0.003921569 * tmpvar_13.y)));\\n    vec4 tmpvar_14;\\n    tmpvar_14 = texture (sampler_pw_main, (uv_3 + (pix * vec2(0.0, -1.0))));\\n    nb2_8.x = (1.0 - (tmpvar_14.z + (0.003921569 * tmpvar_14.y)));\\n    vec4 tmpvar_15;\\n    tmpvar_15 = texture (sampler_pw_main, (uv_3 + (pix * vec2(1.0, 0.0))));\\n    nb2_8.y = (1.0 - (tmpvar_15.z + (0.003921569 * tmpvar_15.y)));\\n    vec4 tmpvar_16;\\n    tmpvar_16 = texture (sampler_pw_main, (uv_3 + (pix * vec2(0.0, 1.0))));\\n    nb2_8.z = (1.0 - (tmpvar_16.z + (0.003921569 * tmpvar_16.y)));\\n    vec4 tmpvar_17;\\n    tmpvar_17 = texture (sampler_pw_main, (uv_3 + (pix * vec2(-1.0, 0.0))));\\n    nb2_8.w = (1.0 - (tmpvar_17.z + (0.003921569 * tmpvar_17.y)));\\n    vec4 tmpvar_18;\\n    tmpvar_18 = min (nb_9, nb2_8);\\n    nb_9.zw = tmpvar_18.zw;\\n    nb_9.xy = min (tmpvar_18.xy, tmpvar_18.zw);\\n    xlat_mutabledist = ((min (nb_9.x, nb_9.y) + (\\n      (0.006 * (tmpvar_7.xyz - 0.5).x)\\n     * tmpvar_7.y)) - (q10 * 0.5));\\n  };\\n  float theta_19;\\n  theta_19 = (xlat_mutabledist * 1.35);\\n  float theta_20;\\n  theta_20 = (xlat_mutabledist * 1.35);\\n  vec3 tmpvar_21;\\n  tmpvar_21.xy = (xlat_mutableuv1 * ((\\n    sin(theta_19)\\n   / \\n    cos(theta_19)\\n  ) / 1.35));\\n  tmpvar_21.z = ((sin(theta_20) / cos(theta_20)) / 1.35);\\n  xlat_mutableuv2 = (((tmpvar_21 / q7) * tmpvar_1) + tmpvar_2);\\n  xlat_mutableuv2 = (((\\n    fract(((xlat_mutableuv2 / 4.0) + 0.5))\\n   - 0.5) * 2.0) + vec3(1.0, 2.0, 3.0));\\n  vec3 zz0_23;\\n  vec3 zz_24;\\n  zz_24 = xlat_mutableuv2;\\n  zz0_23 = (xlat_mutableuv2 + q8);\\n  for (int n_22 = 0; n_22 <= 8; n_22++) {\\n    zz_24 = ((2.0 * clamp (zz_24, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_24);\\n    zz_24 = (zz_24 * max ((1.0/(\\n      dot (zz_24, zz_24)\\n    )), 1.0));\\n    zz_24 = ((2.6 * zz_24) + zz0_23);\\n  };\\n  vec4 tmpvar_25;\\n  tmpvar_25.w = 0.0;\\n  tmpvar_25.xyz = zz_24;\\n  float tmpvar_26;\\n  tmpvar_26 = sqrt(dot (zz_24, zz_24));\\n  vec4 tmpvar_27;\\n  tmpvar_27.w = 0.0;\\n  tmpvar_27.xyz = mod1;\\n  xlat_mutablestruc = ((1.0 - (\\n    (1.4 * dot (tmpvar_25, tmpvar_27))\\n   / 40.0)) - (xlat_mutabledist * 0.3));\\n  if (((tmpvar_26 < 40.0) && (xlat_mutabledist > (0.04 * \\n    (1.0 - rad)\\n  )))) {\\n    ret_4.x = mix (xlat_mutablestruc, texture (sampler_main, uv_3).x, sustain);\\n    float x_28;\\n    x_28 = ((1.0 - xlat_mutabledist) * 255.0);\\n    float ip_29;\\n    ip_29 = float(int(x_28));\\n    vec2 tmpvar_30;\\n    tmpvar_30.x = (x_28 - ip_29);\\n    tmpvar_30.y = (ip_29 / 255.0);\\n    ret_4.yz = tmpvar_30;\\n  } else {\\n    ret_4 = ((texture (sampler_fc_main, uv_3) * sustain) - 0.003921569).xyz;\\n  };\\n  vec4 tmpvar_31;\\n  tmpvar_31.w = 1.0;\\n  tmpvar_31.xyz = ret_4;\\n  ret = tmpvar_31.xyz;\\n }","comp":"float xlat_mutablecross1;\\nvec2 xlat_mutabledz1;\\nfloat xlat_mutablerdist;\\nvec2 xlat_mutableuv0;\\nvec2 xlat_mutableuv4;\\nvec2 xlat_mutableuva;\\nvec2 xlat_mutableuvb;\\n shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1.x = q1;\\n  tmpvar_1.y = q2;\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = q17;\\n  tmpvar_2.y = q18;\\n  vec2 uv_3;\\n  vec3 ret_4;\\n  uv_3 = (uv + (texsize.zw / 2.0));\\n  xlat_mutableuv0 = uv_3;\\n  vec2 uvi_5;\\n  uvi_5 = (uv_3 + vec2(0.002, 0.0));\\n  float tmpvar_6;\\n  tmpvar_6 = mix (((texture (sampler_blur1, uvi_5).xyz * scale1) + bias1).x, texture (sampler_main, uvi_5).x, 0.1);\\n  vec2 uvi_7;\\n  uvi_7 = (uv_3 - vec2(0.002, 0.0));\\n  float tmpvar_8;\\n  tmpvar_8 = mix (((texture (sampler_blur1, uvi_7).xyz * scale1) + bias1).x, texture (sampler_main, uvi_7).x, 0.1);\\n  xlat_mutabledz1.x = ((tmpvar_6 * float(\\n    (tmpvar_6 > 0.02)\\n  )) - (tmpvar_8 * float(\\n    (tmpvar_8 > 0.02)\\n  )));\\n  vec2 uvi_9;\\n  uvi_9 = (uv_3 + vec2(0.0, 0.002));\\n  float tmpvar_10;\\n  tmpvar_10 = mix (((texture (sampler_blur1, uvi_9).xyz * scale1) + bias1).x, texture (sampler_main, uvi_9).x, 0.1);\\n  vec2 uvi_11;\\n  uvi_11 = (uv_3 - vec2(0.0, 0.002));\\n  float tmpvar_12;\\n  tmpvar_12 = mix (((texture (sampler_blur1, uvi_11).xyz * scale1) + bias1).x, texture (sampler_main, uvi_11).x, 0.1);\\n  xlat_mutabledz1.y = ((tmpvar_10 * float(\\n    (tmpvar_10 > 0.02)\\n  )) - (tmpvar_12 * float(\\n    (tmpvar_12 > 0.02)\\n  )));\\n  uv_3 = (uv_3 + (xlat_mutabledz1 * 0.26));\\n  xlat_mutablerdist = ((texture (sampler_blur1, uv_3).xyz * scale1) + bias1).z;\\n  vec4 tmpvar_13;\\n  tmpvar_13.w = 0.0;\\n  tmpvar_13.xyz = texture (sampler_noise_hq, vec2(((xlat_mutablerdist * 0.05) + (time * 0.02)))).xyz;\\n  vec4 tmpvar_14;\\n  tmpvar_14 = mix (tmpvar_13, roam_sin, vec4(0.5, 0.5, 0.5, 0.5));\\n  xlat_mutableuv4 = (uv_3 - 0.4);\\n  xlat_mutableuva = ((xlat_mutableuv4 - tmpvar_1) - ((\\n    ((texture (sampler_blur1, uv_3).xyz * scale1) + bias1)\\n  .x * 0.4) * float(\\n    (xlat_mutablerdist > 0.2)\\n  )));\\n  xlat_mutableuvb = ((xlat_mutableuv4 - tmpvar_2) - ((\\n    (texture (sampler_blur1, uv_3).xyz * scale1)\\n   + bias1).x * 0.4));\\n  float angle_15;\\n  float tmpvar_16;\\n  tmpvar_16 = abs(xlat_mutableuva.x);\\n  if ((xlat_mutableuva.y >= 0.0)) {\\n    angle_15 = (1.0 - ((xlat_mutableuva.y - tmpvar_16) / (xlat_mutableuva.y + tmpvar_16)));\\n  } else {\\n    angle_15 = (3.0 - ((xlat_mutableuva.y + tmpvar_16) / (tmpvar_16 - xlat_mutableuva.y)));\\n  };\\n  float tmpvar_17;\\n  if ((xlat_mutableuva.x < 0.0)) {\\n    tmpvar_17 = -(angle_15);\\n  } else {\\n    tmpvar_17 = angle_15;\\n  };\\n  xlat_mutablecross1 = ((pow (\\n    sin((3.141593 * (tmpvar_17 + (5.1 * q20))))\\n  , 1.5) + (xlat_mutablerdist / 2.0)) + 0.1);\\n  vec3 tmpvar_18;\\n  tmpvar_18 = vec3((((1.0/(\\n    dot (xlat_mutableuva, xlat_mutableuva)\\n  )) / xlat_mutablecross1) * q3));\\n  vec3 tmpvar_19;\\n  tmpvar_19 = vec3(((1.0/(dot (xlat_mutableuvb, xlat_mutableuvb))) * q19));\\n  ret_4 = (clamp ((1.0 - \\n    (2.0 * xlat_mutablerdist)\\n  ), 0.0, 1.0) * ((\\n    (tmpvar_18 * tmpvar_14.xyz)\\n   + \\n    (tmpvar_19 * (1.0 - tmpvar_14.xyz))\\n  ) + 0.1));\\n  ret_4 = (ret_4 + (clamp (\\n    (2.0 * xlat_mutablerdist)\\n  , 0.0, 1.0) * (\\n    (tmpvar_18 * tmpvar_14.zyx)\\n   + \\n    (tmpvar_19 * (1.0 - tmpvar_14.zyx))\\n  )));\\n  ret_4 = (ret_4 + ((\\n    (texture (sampler_blur1, xlat_mutableuv0).xyz * scale1)\\n   + bias1).x * 0.05));\\n  ret_4 = (1.0 - exp(-(ret_4)));\\n  vec4 tmpvar_20;\\n  tmpvar_20.w = 1.0;\\n  tmpvar_20.xyz = ret_4;\\n  ret = tmpvar_20.xyz;\\n }"}')},7769:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":2,"gammaadj":1.980001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"wave_mode":5,"wave_dots":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":1.169162,"wave_smoothing":0,"wave_mystery":0.08,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.4595,"warpscale":2.0067,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0.99,"ob_size":0.015,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0,"mv_r":0.4999,"mv_g":0.4999,"mv_b":0.4999,"mv_a":0,"b2x":0.3,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":53,"rad":0.05408,"tex_ang":1.00531,"tex_zoom":1.531168,"r":0.2,"g":0.7,"g2":0,"a2":1,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"\\nx = .5;\\ny = .5;\\na = q24; \\na2 = 0;\\n//a = 1; \\na = 0;\\nrad0 = bnot(q24) * rad0 + rand(10)/50*q24;\\nrad = rad0;\\nb = 0; r = rand(10)/10; g = 1;\\na2 = q24;"},{"baseVals":{"enabled":1,"sides":44,"textured":1,"x":0.7,"rad":0.2173,"tex_zoom":3.277448,"g":1,"b":0.5,"r2":1,"b2":1,"a2":1,"border_r":0.5,"border_g":0.5,"border_b":0},"init_eqs_eel":"","frame_eqs_eel":"textured = 1;\\nrot0 = rot0 + 1/fps * q1;\\n\\n\\nposx = (1-q24)*posx + q24*(.3+rand(100)/200);\\nposy = (1-q24)*posy + q24*(.3+rand(100)/200);;\\n\\nrad0  = (1-q24)*rad0 + q24*(.05+rand(100)/300);\\nrad = rad0;\\n\\n\\nx =  posx;\\ny =  posy;\\nang = rot0;"},{"baseVals":{"enabled":1,"sides":63,"x":0.503,"rad":0.038857,"tex_zoom":2.2233,"g":0.1,"r2":1,"b2":1,"a2":0.7,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"textured = 1;\\nrot0 = rot0 + .1/fps * q2;\\n\\n\\nposx = (1-q24)*posx + q24*(.3+rand(100)/200);\\nposy = (1-q24)*posy + q24*(.3+rand(100)/200);;\\n\\nrad0  = (1-q24)*rad0 + q24*(.05+rand(100)/400);\\nrad = rad0;\\n\\n\\nx =  posx+q26;\\ny =  posy;\\nang = rot0;"},{"baseVals":{"sides":63,"textured":1,"y":1,"rad":0.548217,"tex_zoom":0.499805,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"sep":120,"usedots":1,"additive":1,"scaling":0.891519,"smoothing":0.82,"a":0.6,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t2 = t2 + bass_att;","point_eqs_eel":"k1 = (sample*100)%8;\\nk2 = bnot (k1);\\nxi = value1*k2 + xi*(1-k2);\\nyi = value2*(1-k2) + yi*k2;\\n\\ndx = dx*.99 + xi;\\ndy = dy*.99 + yi;\\n\\nx = .5 + xi/2;\\ny = .5 + yi/2;\\n\\na = q22/8; \\na = min(a,.4);"},{"baseVals":{"thick":1,"scaling":0.891519,"smoothing":0.82,"a":0.02,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"tm = time*.1;\\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\\n\\ntic = min(time - tin,1);\\ntin = time;\\n\\ntva = (tic*q1*.5);\\ntvb = (tic*q2*.5);\\ntvc = (tic*q3*.5);\\n\\nq1 = tva;\\nq2 = tvb;\\nq3 = tvc;\\n\\nsz = .5;\\nlen = q4;\\nt4 = len;","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.891519,"smoothing":0.82,"r":0,"g":0.2,"b":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"tm = time*.1;\\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\\n\\ntic = min(time - tin,1);\\ntin = time;\\n\\ntva = (tic*q1*.5);\\ntvb = (tic*q2*.5);\\ntvc = (tic*q3*.5);\\n\\nq1 = tva;\\nq2 = tvb;\\nq3 = tvc;\\n\\nsz = .5;\\nlen = 1;\\nt4 = len;","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"dec_med = pow (0.7, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb); \\n\\nbeat = bass+mid+treb;\\nbeat = beat*beat;\\n\\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .2*avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %8;\\nindex2 = (index2 + is_beat*bnot(index))%2;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass_att + mid_att + treb_att + 3;\\nq27 = index + 1;\\nq28 = index2;\\nq29 = index2;\\nmonitor = q29;\\nk1 =  is_\\nbeat*equal(index%2,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.1416/4;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\n\\nq5 = cos(time/17);\\nq6 = sin(time/17);\\nq7 = -q2;\\nq8 = q1;\\n\\n\\nds = ds*dec_med + q24*(1-dec_med);\\nq25 = q24;\\n//q25 = above(ds,.5);\\n\\nq10 = q22+3;\\n\\nt_rel = time*8;\\n//q25 = below((t_rel)-int(t_rel),.2);\\n\\n\\np3 = p3*dec_med + (1-dec_med) * (100*index + .0*q26);\\nq30 = p3 ;\\n\\np4 = dec_med*p4 + (1-dec_med)*q27;\\nq31 = p4;\\n\\n\\nzoom = 1.1 + q1*.2;\\nwarp =0;\\nob_size = .01;\\nob_r = .9;\\nob_g = 1;\\nob_b = 0;\\nob_a = .2*sin(time/7);","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 uv_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = ((uv - 0.5) * aspect.xy);\\n  float tmpvar_3;\\n  tmpvar_3 = (sqrt(dot (tmpvar_2, tmpvar_2)) + (rand_frame * 13.0)).x;\\n  uv_1 = (uv + (clamp (\\n    ((sin(tmpvar_3) / cos(tmpvar_3)) / normalize(tmpvar_2))\\n  , vec2(-2.0, -2.0), vec2(2.0, 2.0)) / 16.0));\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = ((q24 * (\\n    ((texture (sampler_main, uv_1).xyz + ((0.1 * vec3(\\n      ((q1 * cos((uv_1.x * 44.0))) - cos((uv_1.y * 82.0)))\\n    )) * (1.0 + texture (sampler_noise_lq, \\n      ((uv_1 / 16.0) + (time / 100.0))\\n    )).xyz)) * 0.98)\\n   - 0.025)) + ((1.0 - q24) * texture (sampler_main, uv_orig).xyz));\\n  ret = tmpvar_4.xyz;\\n }","comp":"vec2 xlat_mutabledz;\\nvec3 xlat_mutableneu;\\nvec3 xlat_mutableret1;\\nvec2 xlat_mutableuv3;\\n shader_body { \\n  vec2 uv2_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2.y = 0.0;\\n  tmpvar_2.x = texsize.z;\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = 0.0;\\n  tmpvar_3.y = texsize.w;\\n  xlat_mutabledz.x = dot ((texture (sampler_main, (uv + tmpvar_2)).xyz - texture (sampler_main, (uv - tmpvar_2)).xyz), vec3(0.32, 0.49, 0.29));\\n  xlat_mutabledz.y = dot ((texture (sampler_main, (uv + tmpvar_3)).xyz - texture (sampler_main, (uv - tmpvar_3)).xyz), vec3(0.32, 0.49, 0.29));\\n  uv2_1 = (uv - 0.5);\\n  vec2 tmpvar_4;\\n  tmpvar_4.y = 0.0;\\n  float tmpvar_5;\\n  tmpvar_5 = (time / 8.0);\\n  tmpvar_4.x = tmpvar_5;\\n  float tmpvar_6;\\n  tmpvar_6 = (q27 * 2.0);\\n  xlat_mutableuv3 = (((tmpvar_6 * uv2_1) * 0.1) + tmpvar_4);\\n  xlat_mutableuv3 = (fract(xlat_mutableuv3) * aspect.yx);\\n  xlat_mutableuv3 = ((0.1 * cos(\\n    (22.0 * xlat_mutableuv3)\\n  )) + (18.0 * xlat_mutabledz));\\n  float tmpvar_7;\\n  tmpvar_7 = clamp ((0.02 / sqrt(\\n    dot (xlat_mutableuv3, xlat_mutableuv3)\\n  )), 0.0, 1.0);\\n  vec4 tmpvar_8;\\n  tmpvar_8 = (1.0 + roam_cos);\\n  xlat_mutableneu = ((0.1 * vec3(tmpvar_7)) + ((0.45 * \\n    dot (vec3(tmpvar_7), vec3(0.32, 0.49, 0.29))\\n  ) * tmpvar_8).xyz);\\n  xlat_mutableret1 = max (vec3(0.0, 0.0, 0.0), (xlat_mutableneu * 1.252262));\\n  vec2 tmpvar_9;\\n  tmpvar_9.y = 0.0;\\n  tmpvar_9.x = tmpvar_5;\\n  xlat_mutableuv3 = (((tmpvar_6 * uv2_1) * 0.1) + tmpvar_9);\\n  xlat_mutableuv3 = (fract(xlat_mutableuv3) * aspect.yx);\\n  xlat_mutableuv3 = ((0.1 * cos(\\n    (22.0 * xlat_mutableuv3)\\n  )) + (18.0 * xlat_mutabledz));\\n  float tmpvar_10;\\n  tmpvar_10 = clamp ((0.02 / sqrt(\\n    dot (xlat_mutableuv3, xlat_mutableuv3)\\n  )), 0.0, 1.0);\\n  xlat_mutableneu = ((0.1 * vec3(tmpvar_10)) + ((0.45 * \\n    dot (vec3(tmpvar_10), vec3(0.32, 0.49, 0.29))\\n  ) * tmpvar_8).xyz);\\n  xlat_mutableret1 = max (xlat_mutableret1, (xlat_mutableneu * 1.252262));\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 1.0;\\n  tmpvar_11.xyz = (xlat_mutableret1 + clamp ((\\n    (texture (sampler_main, uv).xyz * 4.0)\\n   * \\n    (0.2 + xlat_mutableret1)\\n  ), 0.0, 1.0));\\n  ret = tmpvar_11.xyz;\\n }"}')},2691:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1.980001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"wave_mode":2,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":20.944651,"wave_smoothing":0,"wave_mystery":0.08,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.4595,"warpscale":2.0067,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0.99,"ob_size":0,"ob_a":1,"ib_size":0,"ib_a":0.3,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.4999,"mv_g":0.4999,"mv_b":0.4999,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"textured":1,"y":0.47,"rad":0.24057,"tex_zoom":0.14057,"g2":0,"b2":0.3,"a2":1,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"\\nx = .5; y = .5;\\na = q24; \\na2 = q24;\\n//a = 1;"},{"baseVals":{"enabled":1,"sides":100,"additive":1,"thickoutline":1,"rad":0.05134,"tex_zoom":0.12288,"r":0.5,"g2":0,"a2":0.3,"border_r":0,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"x":0.503,"rad":0.01,"tex_zoom":0.609857,"r":0,"a":0,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"\\ndy = .1 * sin(time*14);;\\ndx = q1*dy;\\n\\nx = .5 + dx;\\ny = .5 + dy;\\n\\na = q25; a2 = q25;\\nrad = q21/110;"},{"baseVals":{"sides":63,"textured":1,"y":1,"rad":0.548217,"tex_zoom":0.499805,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"samples":100,"thick":1,"scaling":0.045052,"smoothing":0.1,"a":0.6},"init_eqs_eel":"","frame_eqs_eel":"t2 = .45 + rand(10)/100;","point_eqs_eel":"k1 = bnot((sample*100+time)%2);\\n\\ndy = .015*above(sin(sample*11),0) \\n    +.008*above(sin(time+sample*74),0)\\n    +.008*above(sin(time+sample*128),0);\\n \\ndx = .01*above(sin(sample*27),0) + \\n      +.01*above(sin(time+sample*134),0);\\n\\nx = .2*(sample-.5) + .5 + dx;\\ny = t2 + dy;\\n\\na = q24 * k1 * bnot(q27%4);\\n\\nr = .6; g = 0; b = .6;"},{"baseVals":{"thick":1,"scaling":0.891519,"smoothing":0.82,"a":0.02,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"tm = time*.1;\\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\\n\\ntic = min(time - tin,1);\\ntin = time;\\n\\ntva = (tic*q1*.5);\\ntvb = (tic*q2*.5);\\ntvc = (tic*q3*.5);\\n\\nq1 = tva;\\nq2 = tvb;\\nq3 = tvc;\\n\\nsz = .5;\\nlen = q4;\\nt4 = len;","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.891519,"smoothing":0.82,"r":0,"g":0.2,"b":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"tm = time*.1;\\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\\n\\ntic = min(time - tin,1);\\ntin = time;\\n\\ntva = (tic*q1*.5);\\ntvb = (tic*q2*.5);\\ntvc = (tic*q3*.5);\\n\\nq1 = tva;\\nq2 = tvb;\\nq3 = tvc;\\n\\nsz = .5;\\nlen = 1;\\nt4 = len;","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"dec_med = pow (0.9, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %4;\\nindex2 = (index2 + is_beat*bnot(index))%4;\\nindex3 = (index3 + is_beat*bnot(index)*bnot(index2))%3;\\n\\nmonitor = index4;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass + mid + treb;\\n\\nhld = hld * dec_med + q24;\\nq25 = min(hld,1);\\nmonitor = q25;\\n\\nk1 =  is_beat*equal(index,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.14159265359/2;\\n\\nq27 = index;\\nq28 = index2;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\nrota = rota * dec_med + q1 * bnot(index2) * (1-dec_med);\\nq5 = .2*rota;","pixel_eqs_eel":"rot = q5*(sin(q22*4*(1-rad)));\\nzoom = 1.08 ;","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (((0.99 * vec3(\\n    dot ((texture (sampler_main, uv).xyz + 0.03), vec3(0.32, 0.49, 0.29))\\n  )) - 0.02) - ((0.02 / \\n    (rad + (0.002 * q27))\\n  ) * (\\n    (texture (sampler_blur1, (uv * (1.0 + (0.01 * q1)))).xyz * scale1)\\n   + bias1)));\\n  ret = tmpvar_1.xyz;\\n }","comp":" shader_body { \\n  vec2 uv1_1;\\n  vec3 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv).xyz;\\n  vec2 tmpvar_3;\\n  tmpvar_3.y = 0.0;\\n  tmpvar_3.x = texsize.z;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = 0.0;\\n  tmpvar_4.y = texsize.w;\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = (texture (sampler_main, (uv - tmpvar_3)).xyz - texture (sampler_main, (uv + tmpvar_3)).xyz).x;\\n  tmpvar_5.y = (texture (sampler_main, (uv - tmpvar_4)).xyz - texture (sampler_main, (uv + tmpvar_4)).xyz).x;\\n  uv1_1 = ((0.3 * cos(\\n    (((uv - 0.5) * 2.0) + 1.7)\\n  )) - (2.0 * tmpvar_5));\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = ((-(tmpvar_2) / 4.0) + ((6.0 * vec3(\\n    clamp ((0.03 / sqrt(dot (uv1_1, uv1_1))), 0.0, 1.0)\\n  )) * (-0.08 + tmpvar_2)));\\n  ret = tmpvar_6.xyz;\\n }"}')},4990:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.980001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"wave_mode":6,"wave_thick":1,"modwavealphabyvolume":1,"darken":1,"wave_a":0.001,"wave_scale":0.159809,"wave_smoothing":0.45,"wave_mystery":0.08,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.4595,"warpscale":2.0067,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0,"wave_b":0,"wave_y":0.9,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.4999,"mv_g":0.4999,"mv_b":0.4999,"mv_a":0,"b1x":0.6999,"b1ed":0},"shapes":[{"baseVals":{"textured":1,"x":0.48,"y":0.4,"rad":0.21778,"tex_zoom":1.140166,"g":1,"b":1,"r2":1,"g2":0.6,"a2":1,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"thickoutline":1,"x":0.4,"rad":2.366958,"tex_ang":3.455753,"tex_zoom":0.993053,"r":0.5,"b":1,"a":0.2,"r2":0.7,"g2":0.4,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"a2 =0;a = 0;\\na = q24/2;"},{"baseVals":{"x":0.503,"rad":0.038857,"tex_zoom":0.609857,"g":0.1,"a":0.9,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = .3+rand(10)/30;\\ny = .3+rand(10)/30;\\n\\nr = rand(4)/3;\\ng = rand(4)/3;\\nb = rand(4)/3;\\n\\n\\nis_beat = above(time, t0+.03);\\nt0 = is_beat*time + (1-is_beat)*t0;\\n\\n\\na = min(q21/2 ,.9) * is_beat;\\nrad = a*a/3 ;"},{"baseVals":{"sides":63,"textured":1,"y":1,"rad":0.548217,"tex_zoom":0.499805,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"sep":120,"additive":1,"scaling":0.891519,"smoothing":0.82,"a":0.6,"enabled":0},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"t2 = t2 + bass_att;","point_eqs_eel":"k1 = (sample*100)%8;\\nk2 = bnot (k1);\\nxi = value1*k2 + xi*(1-k2);\\nyi = value2*(1-k2) + yi*k2;\\n\\ndx = dx*.99 + xi;\\ndy = dy*.99 + yi;\\n\\nx = .5 + xi/2;\\ny = .5 + yi/2;\\n\\na = q22/8; \\na = min(a,.4);"},{"baseVals":{"usedots":1,"thick":1,"scaling":0.891519,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"tm = time*.1;\\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\\n\\ntic = min(time - tin,1);\\ntin = time;\\n\\ntva = (tic*q1*.5);\\ntvb = (tic*q2*.5);\\ntvc = (tic*q3*.5);\\n\\nq1 = tva;\\nq2 = tvb;\\nq3 = tvc;\\n\\nsz = .5;\\nlen = q4;\\nt4 = len;","point_eqs_eel":"xi = rand(100)/100;\\nyi = rand(100)/100;\\n\\nx = xi; y = yi;\\n\\na = q21/15;"},{"baseVals":{"usedots":1,"thick":1,"scaling":0.891519,"smoothing":0.82,"r":0,"g":0.2,"b":0,"enabled":0},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"tm = time*.1;\\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\\n\\ntic = min(time - tin,1);\\ntin = time;\\n\\ntva = (tic*q1*.5);\\ntvb = (tic*q2*.5);\\ntvc = (tic*q3*.5);\\n\\nq1 = tva;\\nq2 = tvb;\\nq3 = tvc;\\n\\nsz = .5;\\nlen = 1;\\nt4 = len;","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"dec_med = pow (0.9, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .2+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %8;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass + mid + treb;\\n\\nk1 =  is_beat*equal(index,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_slow * p2+ (1-dec_slow)*p1;\\nrott = p2 * 3.1416/4;\\nq27 = index + 1;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\nzoom = 1.0;\\nrot = -0.00 * index;\\n\\nq32 = pow(0.996, 30/fps); //fade\\nq5 = (sin(time/11)+1)/5;\\n\\nmovez = movez + .06/fps*(1.1+q1);\\nq6 = movez;\\n\\nq7 = .005*sin(time/15);","pixel_eqs_eel":"","warp":"vec3 xlat_mutablenoise;\\nvec2 xlat_mutablers;\\nvec2 xlat_mutablers0;\\nvec2 xlat_mutableuv1;\\n shader_body { \\n  vec3 copy_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = 0.5;\\n  tmpvar_2.y = q5;\\n  xlat_mutableuv1 = (uv - tmpvar_2);\\n  float tmpvar_3;\\n  tmpvar_3 = (1.0/(xlat_mutableuv1.y));\\n  xlat_mutablers0.x = (xlat_mutableuv1.x * tmpvar_3);\\n  xlat_mutablers0.y = tmpvar_3;\\n  xlat_mutablers.x = xlat_mutablers0.x;\\n  xlat_mutablers.y = (tmpvar_3 + (time * 0.3));\\n  xlat_mutablenoise = (vec3(dot (texture (sampler_pw_noise_lq, (xlat_mutablers / 63.0)), vec4(0.32, 0.49, 0.29, 0.0))) * (dot (texture (sampler_pw_noise_lq, \\n    (xlat_mutablers / 12.0)\\n  ), vec4(0.32, 0.49, 0.29, 0.0)) + 0.5));\\n  xlat_mutablenoise = (xlat_mutablenoise * (clamp (\\n    ((10.0 * xlat_mutablenoise) - 8.0)\\n  , 0.0, 1.0) * clamp (\\n    (2.0 / tmpvar_3)\\n  , 0.0, 1.0)));\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = uv.x;\\n  tmpvar_4.y = (uv.y - (0.024 / tmpvar_3));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = uv.x;\\n  tmpvar_5.y = (uv.y - (0.012 / tmpvar_3));\\n  copy_1 = (texture (sampler_main, tmpvar_4).xyz + texture (sampler_main, tmpvar_5).xyz);\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = uv.x;\\n  tmpvar_6.y = (uv.y - (0.006 / tmpvar_3));\\n  copy_1 = (copy_1 + texture (sampler_main, tmpvar_6).xyz);\\n  vec4 tmpvar_7;\\n  tmpvar_7.w = 1.0;\\n  tmpvar_7.xyz = ((xlat_mutablenoise + (\\n    (((copy_1 / 3.0) * (1.0 + slow_roam_cos).xyz) / 2.0)\\n   * 0.99)) - 0.005);\\n  ret = tmpvar_7.xyz;\\n }","comp":"vec3 xlat_mutablecont;\\nvec3 xlat_mutableneu;\\nvec3 xlat_mutableret1;\\nvec2 xlat_mutablers2;\\n shader_body { \\n  vec2 uv_1;\\n  float inten_2;\\n  float dist_3;\\n  uv_1 = (uv - 0.5);\\n  uv_1 = (uv_1 * aspect.xy);\\n  dist_3 = (1.0 - fract(q6));\\n  inten_2 = ((dist_3 * (1.0 - dist_3)) * 6.0);\\n  vec2 tmpvar_4;\\n  tmpvar_4 = fract(((uv_1 * dist_3) + 0.55));\\n  xlat_mutableneu = texture (sampler_main, tmpvar_4).xyz;\\n  xlat_mutableret1 = max (vec3(0.0, 0.0, 0.0), (xlat_mutableneu * inten_2));\\n  xlat_mutablecont = max (vec3(0.0, 0.0, 0.0), ((\\n    -(texture (sampler_main, tmpvar_4).xyz)\\n   + \\n    ((texture (sampler_blur1, (tmpvar_4 + q7)).xyz * scale1) + bias1)\\n  ) * inten_2));\\n  dist_3 = (1.0 - fract((0.5 + q6)));\\n  inten_2 = ((dist_3 * (1.0 - dist_3)) * 6.0);\\n  vec2 tmpvar_5;\\n  tmpvar_5 = fract(((uv_1 * dist_3) + 0.55));\\n  xlat_mutableneu = texture (sampler_main, tmpvar_5).xyz;\\n  xlat_mutableret1 = max (xlat_mutableret1, (xlat_mutableneu * inten_2));\\n  xlat_mutablecont = max (xlat_mutablecont, ((\\n    -(texture (sampler_main, tmpvar_5).xyz)\\n   + \\n    ((texture (sampler_blur1, (tmpvar_5 + q7)).xyz * scale1) + bias1)\\n  ) * inten_2));\\n  dist_3 = (1.0 - fract((1.0 + q6)));\\n  inten_2 = ((dist_3 * (1.0 - dist_3)) * 6.0);\\n  vec2 tmpvar_6;\\n  tmpvar_6 = fract(((uv_1 * dist_3) + 0.55));\\n  xlat_mutableneu = texture (sampler_main, tmpvar_6).xyz;\\n  xlat_mutableret1 = max (xlat_mutableret1, (xlat_mutableneu * inten_2));\\n  xlat_mutablecont = max (xlat_mutablecont, ((\\n    -(texture (sampler_main, tmpvar_6).xyz)\\n   + \\n    ((texture (sampler_blur1, (tmpvar_6 + q7)).xyz * scale1) + bias1)\\n  ) * inten_2));\\n  vec2 tmpvar_7;\\n  tmpvar_7.y = 5.0;\\n  tmpvar_7.x = (time / 12.0);\\n  xlat_mutablers2 = ((0.1 * cos(\\n    ((uv_1 * 3.0) + tmpvar_7)\\n  )) + (0.1 * xlat_mutableret1).xy);\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = (((-0.1 * xlat_mutableret1) + (\\n    (clamp ((0.005 / sqrt(\\n      dot (xlat_mutablers2, xlat_mutablers2)\\n    )), 0.0, 1.0) * vec3(18.0, 16.2, 10.8))\\n   * \\n    (0.2 + (0.3 * xlat_mutableret1))\\n  )) + ((\\n    dot (xlat_mutablecont, vec3(0.32, 0.49, 0.29))\\n   * \\n    (1.0 + slow_roam_cos)\\n  ) / 2.0).xyz);\\n  ret = tmpvar_8.xyz;\\n }"}')},159:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":2,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":6,"wave_dots":1,"modwavealphabyvolume":1,"darken":1,"wave_a":0.001,"wave_scale":1.741,"wave_smoothing":0.45,"wave_mystery":0.08,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_g":0.99,"ob_size":0,"ob_r":1,"ob_b":1,"ob_a":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"textured":1,"x":0.71,"rad":0.65721,"tex_zoom":0.39173,"g":1,"b":1,"a":0.8,"r2":0.83,"g2":0.93,"b2":0.8,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"rad":1.26458,"tex_ang":1.4451,"tex_zoom":1.49331,"r":0.7,"g":0.4,"a":0.01,"r2":0.7,"g2":0.4,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":44,"x":0.503,"rad":0.03886,"tex_zoom":0.60986,"g":0.1,"r2":1,"b2":1,"a2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = int(rand(10))/10;\\ny = int(rand(10))/10;\\n\\nr = 0;\\ng = 0;\\nb = 0;\\n\\nr2= .5;\\nb2 = 0;\\ng2 = 0;\\na = 0; a2 = 1;\\nrad = bass_att/30;"},{"baseVals":{"sides":63,"textured":1,"y":1,"rad":0.54822,"tex_zoom":0.49981,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"sep":120,"thick":1,"additive":1,"scaling":0.89152,"smoothing":0.82,"r":0,"g":0.5,"a":0.9,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t2 = t2 + bass_att;","point_eqs_eel":"k1 = (sample*100)%2;\\n\\nxi = value1*k1 + xi*(1-k1);\\nyi = value2*(1-k1) + yi*k1;\\n\\nx = .5 + xi/2;\\ny = .5 + yi/2;\\n\\n\\na = bass + mid + treb ;\\na = a/10 * sqrt(xi*xi+yi*yi);"},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"r":0,"g":0.2,"b":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x0 = .5 + (-1) * q1/1;\\ny0 = .0 - (-1)* .5;\\n\\n//x0 = .5; y0 = .5;\\n\\nk1 = int(100.0*sample);\\nk2 = int(100.0*sample+1);\\nk1 = k1%2;\\nf1 = int(rand(100))/200-.25;\\nf2 = int(rand(100))/200-.25;\\n\\nx = x0 + k1* f1;;\\ny = y0 + k1* f2;\\na = k2%2 /4;"},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ra = .8;\\nrb = .5;\\npib = 6.28318530718;\\n\\n\\ntic = min(time-tin,.1);\\ntin = if(equal(sample,0),time,tin);\\n\\nmod = 1.5 + .5*sin(time*.15);\\nmed = 1.5 + .5*sin(time*.134);\\nmed = 5;\\namod = 3;\\n\\nvr = int(rand(10001))*.0001;\\nrb = rb + int(rand(10001))*.0001*.1;\\n\\na = vr;\\n\\nsa = vr*pib*.5;\\nsp = sa*mod + q1*1.3;\\nsam = sa*med - q1*.219;\\n\\nox = ra*sin(sam*pib);\\noy = ra*cos(sam*pib);\\nox = ox + rb*-cos(sp)*sin(sam*pib);\\noz = rb*-sin(sp);\\noy = oy + rb*-cos(sp)*cos(sam*pib);\\n\\n\\nxang = time*.132;\\nxang = q2;\\nyang = time*.153;\\nyang = q3;\\nzang = time*.110;\\nzang = q4;\\nfov = 0.6 + 0.2*sin(time);\\nfov = .5;\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = - ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\noz = oz - 2;\\nx = ox*fov/oz + 0.5;\\nx = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;\\n"}],"init_eqs_eel":"p3 = 0;\\nt_rel = 0;","frame_eqs_eel":"dec_med = pow (0.9, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %8;\\nindex2 = (index2 + is_beat*bnot(index))%4;\\nindex3 = (index3 + is_beat*bnot(index)*bnot(index2))%3;\\n\\nmonitor = index4;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass_att + mid_att + treb_att+1;\\n\\n//k1 =  is_beat*bnot(index)*bnot(index2);\\n\\nk1 =  is_beat*equal(index,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\np3 = dec_med * p3+ (1-dec_med)*p2;\\nrott = p3 * 3.14159265359/2;\\n\\n\\nq27 = 8-index;\\nq28 = index2+1;\\n\\n//q28 = sin(time)+1;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\nt_rel = t_rel + .02*30/fps*q1*q1;\\n\\nq5 = cos(t_rel);\\nq6 = sin(t_rel);\\nq7 = -q6;\\nq8 = q5;\\n\\nmovez = movez + .02*30/fps / ((1.4-q5)*(1.4-q5));\\nq30 = movez;\\n\\n\\nzoom = 1.0;","pixel_eqs_eel":"dx = 0*q28/8;","warp":"vec3 xlat_mutablenoise;\\nvec3 xlat_mutableret1;\\nvec2 xlat_mutablers;\\n shader_body { \\n  float z_1;\\n  mat2 tmpvar_2;\\n  tmpvar_2[uint(0)] = _qb.xy;\\n  tmpvar_2[1u] = _qb.zw;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = ((uv * tmpvar_2) - 0.5);\\n  float tmpvar_4;\\n  tmpvar_4 = (0.4 / abs(tmpvar_3.y));\\n  z_1 = tmpvar_4;\\n  xlat_mutablers.x = (tmpvar_3.x * tmpvar_4);\\n  xlat_mutablers.y = (tmpvar_4 + q30);\\n  vec4 tmpvar_5;\\n  tmpvar_5 = texture (sampler_pw_noise_lq, (xlat_mutablers / 32.0));\\n  xlat_mutablenoise = (tmpvar_5.xyz * vec3(greaterThanEqual (tmpvar_5.xyz, vec3(0.9, 0.9, 0.9))));\\n  xlat_mutablenoise = (xlat_mutablenoise * (1.0 + (0.5 * \\n    (dot (texture (sampler_noise_hq, (16.0 * xlat_mutablers)), vec4(0.32, 0.49, 0.29, 0.0)) - 0.5)\\n  )));\\n  vec4 tmpvar_6;\\n  tmpvar_6 = texture (sampler_noisevol_hq, (((xlat_mutablers.xyy * vec3(0.12, 0.12, 0.0)) * (texsize.xyy * texsize_noisevol_hq.zww)) + (vec3(0.0, 0.0, 0.2) * time)));\\n  if ((((xlat_mutablenoise.x + xlat_mutablenoise.y) + xlat_mutablenoise.z) > 0.01)) {\\n    xlat_mutablenoise = (xlat_mutablenoise + (tmpvar_6 * 0.8).xyz);\\n  };\\n  xlat_mutableret1 = xlat_mutablenoise;\\n  z_1 = (1.2 / abs(tmpvar_3.y));\\n  xlat_mutablers.x = (tmpvar_3.x * z_1);\\n  xlat_mutablers.y = (z_1 + q30);\\n  vec4 tmpvar_7;\\n  tmpvar_7 = texture (sampler_pw_noise_lq, (xlat_mutablers / 32.0));\\n  xlat_mutablenoise = (tmpvar_7.xyz * vec3(greaterThanEqual (tmpvar_7.xyz, vec3(0.9, 0.9, 0.9))));\\n  if ((((xlat_mutablenoise.x + xlat_mutablenoise.y) + xlat_mutablenoise.z) > 0.01)) {\\n    xlat_mutablenoise = (xlat_mutablenoise + (tmpvar_6 * 0.8).xyz);\\n  };\\n  xlat_mutableret1 = (xlat_mutableret1 + xlat_mutablenoise);\\n  z_1 = (0.4 / abs(tmpvar_3.x));\\n  xlat_mutablers.y = (tmpvar_3.y * z_1);\\n  xlat_mutablers.x = (z_1 + q30);\\n  vec4 tmpvar_8;\\n  tmpvar_8 = texture (sampler_pw_noise_lq, (xlat_mutablers / 32.0));\\n  xlat_mutablenoise = (tmpvar_8.xyz * vec3(greaterThanEqual (tmpvar_8.xyz, vec3(0.9, 0.9, 0.9))));\\n  xlat_mutablenoise = (xlat_mutablenoise * (1.0 + (0.5 * \\n    (dot (texture (sampler_noise_hq, (16.0 * xlat_mutablers)), vec4(0.32, 0.49, 0.29, 0.0)) - 0.5)\\n  )));\\n  if ((((xlat_mutablenoise.x + xlat_mutablenoise.y) + xlat_mutablenoise.z) > 0.01)) {\\n    xlat_mutablenoise = (xlat_mutablenoise + (tmpvar_6 * 0.8).xyz);\\n  };\\n  xlat_mutableret1 = (xlat_mutableret1 + xlat_mutablenoise);\\n  z_1 = (1.2 / abs(tmpvar_3.x));\\n  xlat_mutablers.y = (tmpvar_3.y * z_1);\\n  xlat_mutablers.x = (z_1 + q30);\\n  vec4 tmpvar_9;\\n  tmpvar_9 = texture (sampler_pw_noise_lq, (xlat_mutablers / 32.0));\\n  xlat_mutablenoise = (tmpvar_9.xyz * vec3(greaterThanEqual (tmpvar_9.xyz, vec3(0.9, 0.9, 0.9))));\\n  if ((((xlat_mutablenoise.x + xlat_mutablenoise.y) + xlat_mutablenoise.z) > 0.01)) {\\n    xlat_mutablenoise = (xlat_mutablenoise + (tmpvar_6 * 0.8).xyz);\\n  };\\n  xlat_mutableret1 = (xlat_mutableret1 + xlat_mutablenoise);\\n  vec4 tmpvar_10;\\n  tmpvar_10.w = 1.0;\\n  tmpvar_10.xyz = xlat_mutableret1;\\n  ret = tmpvar_10.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  vec3 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv).zzz;\\n  ret_1 = ((pow (\\n    mix (vec3((((texture (sampler_blur1, uv).xyz * scale1) + bias1).z + ((texture (sampler_blur3, uv).xyz * scale3) + bias3).z)), tmpvar_2, tmpvar_2)\\n  , vec3(0.8, 2.0, 8.0)) * 1.25) - 0.25);\\n  ret_1 = (ret_1 * ((\\n    (texture (sampler_blur2, (uv + vec2(0.0, 0.01))).xyz * scale2)\\n   + bias2).y * 1.2));\\n  ret_1 = (ret_1 * 2.0);\\n  ret_1 = (ret_1 - (texture (sampler_noisevol_hq, (\\n    ((vec3(0.05, 0.05, 0.0) * uv.xyy) * (texsize.xyy * texsize_noisevol_hq.zww))\\n   + \\n    (vec3(0.0, 0.0, 0.4) * time)\\n  )) * 0.5).xyz);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_1;\\n  ret = tmpvar_3.xyz;\\n }"}')},4470:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1.980001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"wave_mode":6,"wave_dots":1,"modwavealphabyvolume":1,"darken":1,"wave_a":0.001,"wave_scale":1.740724,"wave_smoothing":0.45,"wave_mystery":0.08,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.4595,"warpscale":2.0067,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_g":0.99,"ob_size":0,"ob_r":1,"ob_b":1,"ob_a":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.4999,"mv_g":0.4999,"mv_b":0.4999,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"textured":1,"x":0.71,"rad":0.657209,"tex_zoom":0.391734,"g":1,"b":1,"a":0.8,"r2":0.83,"g2":0.93,"b2":0.8,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"rad":1.264578,"tex_ang":1.4451,"tex_zoom":1.493308,"r":0.7,"g":0.4,"a":0.01,"r2":0.7,"g2":0.4,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":44,"x":0.503,"rad":0.038857,"tex_zoom":0.609857,"g":0.1,"r2":1,"b2":1,"a2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = rand(10)/10;\\ny = rand(10)/10;\\n\\nr = 0;\\ng = 0;\\nb = 0;\\n\\nr2= .5;\\nb2 = 0;\\ng2 = 0;\\na = 0; a2 = 1;\\nrad = bass_att/30;"},{"baseVals":{"sides":63,"textured":1,"y":1,"rad":0.548217,"tex_zoom":0.499805,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"sep":120,"thick":1,"additive":1,"scaling":0.891519,"smoothing":0.82,"r":0,"g":0.5,"a":0.9,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t2 = t2 + bass_att;","point_eqs_eel":"k1 = (sample*100)%2;\\n\\nxi = value1*k1 + xi*(1-k1);\\nyi = value2*(1-k1) + yi*k1;\\n\\nx = .5 + xi/2;\\ny = .5 + yi/2;\\n\\n\\na = bass + mid + treb ;\\na = a/10 * sqrt(xi*xi+yi*yi);"},{"baseVals":{"thick":1,"scaling":0.891519,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.891519,"smoothing":0.82,"r":0,"g":0.2,"b":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x0 = .5 + (-1) * q1/1;\\ny0 = .0 - (-1)* .5;\\n\\n//x0 = .5; y0 = .5;\\n\\nk1 = int(100.0*sample);\\nk2 = int(100.0*sample+1);\\nk1 = k1%2;\\nf1 = rand(100)/200-.25;\\nf2 = rand(100)/200-.25;\\n\\nx = x0 + k1* f1;;\\ny = y0 + k1* f2;\\na = k2%2 /4;"},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ra = .8;\\nrb = .5;\\npib = 6.28318530718;\\n\\n\\ntic = min(time-tin,.1);\\ntin = if(equal(sample,0),time,tin);\\n\\nmod = 1.5 + .5*sin(time*.15);\\nmed = 1.5 + .5*sin(time*.134);\\nmed = 5;\\namod = 3;\\n\\nvr = rand(10001)*.0001;\\nrb = rb + rand(10001)*.0001*.1;\\n\\na = vr;\\n\\nsa = vr*pib*.5;\\nsp = sa*mod + q1*1.3;\\nsam = sa*med - q1*.219;\\n\\nox = ra*sin(sam*pib);\\noy = ra*cos(sam*pib);\\nox = ox + rb*-cos(sp)*sin(sam*pib);\\noz = rb*-sin(sp);\\noy = oy + rb*-cos(sp)*cos(sam*pib);\\n\\n\\nxang = time*.132;\\nxang = q2;\\nyang = time*.153;\\nyang = q3;\\nzang = time*.110;\\nzang = q4;\\nfov = 0.6 + 0.2*sin(time);\\nfov = .5;\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = -ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\noz = oz - 2;\\nx = ox*fov/oz + 0.5;\\nx = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;\\n"}],"init_eqs_eel":"p3 = 0;\\nt_rel = 0;","frame_eqs_eel":"dec_med = pow (0.9, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb);\\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %8;\\nindex2 = (index2 + is_beat*bnot(index))%4;\\nindex3 = (index3 + is_beat*bnot(index)*bnot(index2))%3;\\n\\nmonitor = index4;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass_att + mid_att + treb_att+1;\\n\\n//k1 =  is_beat*bnot(index)*bnot(index2);\\n\\nk1 =  is_beat*equal(index,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\np3 = dec_med * p3+ (1-dec_med)*p2;\\nrott = p3 * 3.14159265359/2;\\n\\n\\nq27 = 8-index;\\nq28 = index2+1;\\n\\n//q28 = sin(time)+1;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\nt_rel = t_rel + .02*30/fps*q1*q1;\\n\\nq5 = cos(t_rel);\\nq6 = sin(t_rel);\\nq7 = -q6;\\nq8 = q5;\\n\\nmovez = movez + .02*30/fps / ((1.4-q5)*(1.4-q5));\\nq30 = movez;\\n\\n\\nzoom = 1.0;","pixel_eqs_eel":"dx = 0*q28/8;","warp":"vec3 xlat_mutablenoise;\\nvec3 xlat_mutableret1;\\nvec2 xlat_mutablers;\\n shader_body { \\n  float z_1;\\n  mat2 tmpvar_2;\\n  tmpvar_2[uint(0)] = _qb.xy;\\n  tmpvar_2[1u] = _qb.zw;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = ((uv * tmpvar_2) - 0.5);\\n  float tmpvar_4;\\n  tmpvar_4 = (0.4 / abs(tmpvar_3.y));\\n  xlat_mutablers.x = (tmpvar_3.x * tmpvar_4);\\n  xlat_mutablers.y = (tmpvar_4 + q30);\\n  vec4 tmpvar_5;\\n  tmpvar_5 = texture (sampler_pw_noise_lq, (xlat_mutablers / 32.0));\\n  xlat_mutablenoise = (tmpvar_5.xyz * vec3(greaterThanEqual (tmpvar_5.xyz, vec3(0.9, 0.9, 0.9))));\\n  xlat_mutablenoise = (xlat_mutablenoise * (1.0 + (0.5 * \\n    (dot (texture (sampler_noise_hq, (16.0 * xlat_mutablers)), vec4(0.32, 0.49, 0.29, 0.0)) - 0.5)\\n  )));\\n  xlat_mutableret1 = xlat_mutablenoise;\\n  z_1 = (1.2 / abs(tmpvar_3.y));\\n  xlat_mutablers.x = (tmpvar_3.x * z_1);\\n  xlat_mutablers.y = (z_1 + q30);\\n  vec4 tmpvar_6;\\n  tmpvar_6 = texture (sampler_pw_noise_lq, (xlat_mutablers / 32.0));\\n  xlat_mutablenoise = (tmpvar_6.xyz * vec3(greaterThanEqual (tmpvar_6.xyz, vec3(0.9, 0.9, 0.9))));\\n  xlat_mutableret1 = (xlat_mutableret1 + xlat_mutablenoise);\\n  z_1 = (0.4 / abs(tmpvar_3.x));\\n  xlat_mutablers.y = (tmpvar_3.y * z_1);\\n  xlat_mutablers.x = (z_1 + q30);\\n  vec4 tmpvar_7;\\n  tmpvar_7 = texture (sampler_pw_noise_lq, (xlat_mutablers / 32.0));\\n  xlat_mutablenoise = (tmpvar_7.xyz * vec3(greaterThanEqual (tmpvar_7.xyz, vec3(0.9, 0.9, 0.9))));\\n  xlat_mutablenoise = (xlat_mutablenoise * (1.0 + (0.5 * \\n    (dot (texture (sampler_noise_hq, (16.0 * xlat_mutablers)), vec4(0.32, 0.49, 0.29, 0.0)) - 0.5)\\n  )));\\n  xlat_mutableret1 = (xlat_mutableret1 + xlat_mutablenoise);\\n  z_1 = (1.2 / abs(tmpvar_3.x));\\n  xlat_mutablers.y = (tmpvar_3.y * z_1);\\n  xlat_mutablers.x = (z_1 + q30);\\n  vec4 tmpvar_8;\\n  tmpvar_8 = texture (sampler_pw_noise_lq, (xlat_mutablers / 32.0));\\n  xlat_mutablenoise = (tmpvar_8.xyz * vec3(greaterThanEqual (tmpvar_8.xyz, vec3(0.9, 0.9, 0.9))));\\n  xlat_mutableret1 = (xlat_mutableret1 + xlat_mutablenoise);\\n  vec4 tmpvar_9;\\n  tmpvar_9.w = 1.0;\\n  tmpvar_9.xyz = xlat_mutableret1;\\n  ret = tmpvar_9.xyz;\\n }","comp":"uniform sampler2D sampler_clouds2;\\n shader_body { \\n  vec2 uv_1;\\n  vec2 uv1_2;\\n  uv_1 = (uv * aspect.xy);\\n  vec2 tmpvar_3;\\n  tmpvar_3.y = 0.0;\\n  tmpvar_3.x = texsize.z;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = 0.0;\\n  tmpvar_4.y = texsize.w;\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = (dot (texture (sampler_main, (uv_1 - tmpvar_3)).xyz, vec3(0.32, 0.49, 0.29)) - dot (texture (sampler_main, (uv_1 + tmpvar_3)).xyz, vec3(0.32, 0.49, 0.29)));\\n  tmpvar_5.y = (dot (texture (sampler_main, (uv_1 - tmpvar_4)).xyz, vec3(0.32, 0.49, 0.29)) - dot (texture (sampler_main, (uv_1 + tmpvar_4)).xyz, vec3(0.32, 0.49, 0.29)));\\n  uv1_2 = ((0.3 * sin(\\n    ((uv_1 + (0.02 * time)) * 6.0)\\n  )) + (0.2 * tmpvar_5));\\n  vec4 tmpvar_6;\\n  tmpvar_6 = texture (sampler_clouds2, (uv_orig + tmpvar_5));\\n  vec4 tmpvar_7;\\n  tmpvar_7.w = 1.0;\\n  tmpvar_7.xyz = (((-2.0 * \\n    (0.1 * texture (sampler_main, uv_1))\\n  .xyz) + (\\n    clamp (((0.004 * q26) / sqrt(dot (uv1_2, uv1_2))), 0.0, 1.0)\\n   * vec3(1.0, 0.8, 0.4))) + (0.4 * (tmpvar_6.xyz + \\n    (dot (tmpvar_6.xyz, vec3(0.32, 0.49, 0.29)) - 0.7)\\n  )));\\n  ret = tmpvar_7.xyz;\\n }"}')},3555:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.980001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"wave_mode":4,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.5274,"wave_smoothing":0.45,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":0.442,"warpscale":0.498,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.8,"wave_g":0.49,"ob_size":0,"ob_r":1,"ob_g":1,"ob_b":1,"ob_a":0.05,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.4999,"mv_g":0.4999,"mv_b":0.4999,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"additive":1,"rad":0.048958,"tex_ang":1.00531,"tex_zoom":1.531168,"r":0,"g":1,"b":1,"r2":0.83,"g2":0.93,"b2":0.8,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"\\ntrel = time/3;\\n\\nx = .5+sin(trel*2);\\ny = .5+cos(trel*1.3);\\n\\n\\n\\n\\nrad = .1;\\na = .8;"},{"baseVals":{"thickoutline":1,"textured":1,"x":0.26,"y":0.2,"rad":0.393173,"tex_zoom":0.9355,"r":0,"g":0.55,"b":0.5,"g2":0.4,"b2":0.4,"a2":0.07,"border_r":0.3,"border_g":0.7,"border_b":0.8,"border_a":0.4,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"tex_zoom = q27;"},{"baseVals":{"sides":44,"x":0.503,"rad":0.038857,"tex_zoom":0.609857,"g":0.1,"a":0.9,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = rand(50)/50;\\ny = .5;\\n\\nr = .4;\\ng = .6;\\nb = 1;\\nr2 = r;\\ng2 = g;\\nb2 = b;\\n\\na2 = min(q21/2 ,1)/2;\\n\\na = 0;\\n\\nrad = a2 * (.1+abs(x-.5))/2 ;"},{"baseVals":{"thickoutline":1,"textured":1,"x":0.26,"y":0.76,"rad":0.39478,"tex_zoom":0.499805,"g":1,"b":1,"r2":1,"b2":1,"a2":0.8,"border_r":0.2,"border_g":0.7,"border_b":0.5,"border_a":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"tex_zoom = q27/2;"}],"waves":[{"baseVals":{"samples":282,"sep":20,"thick":1,"additive":1,"scaling":7.858,"smoothing":0.1,"r":0.2,"g":0.3,"a":0.6,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"usedots":1,"thick":1,"scaling":0.891519,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"xi = rand(100)/100;\\nyi = rand(100)/100;\\n\\nx = xi; y = yi;\\n\\na = q21/15;"},{"baseVals":{"thick":1,"scaling":0.891519,"smoothing":0.82,"r":0,"g":0.2,"b":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"dirx = 1;","frame_eqs_eel":"dec_med = pow (0.7, 30/fps);\\ndec_slow = pow (0.9, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, avg+peak) * above (time, t0+.1);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %16;\\nindex2 = (index2 + is_beat*bnot(index))%4;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass + mid + treb;\\nq29 = 2 * (index2%2-.5);\\nq25 = min(1,q22/2);\\n\\nk1 =  is_beat*equal(index%4,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.1416/4;\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\n\\nq27 = index;\\nq28 = index2;\\n\\nmov = mov*dec_med + (1-dec_med)*above(index%8,2);\\nmovez = movez + 1/fps*mov;\\nq30 = movez;\\n//**************************\\n\\nq8 = movex; q9 = movey;\\n\\ntrel1 = trel1 + (q1*q22*3)/fps;\\ntrel2 = trel2 + (q2*q22*2)/fps;\\ntrel3 = trel3 + 4*(1-mov)/fps;\\ntrel4 = trel4 + 1 * mov/fps;\\n\\nq11 = .3*sin(trel1); \\nq12 = .1*cos(trel2); \\nq13 = 8 + 6*sin(trel3);\\n\\nq14 = .3*sin(trel2); \\nq15 = .2*cos(trel3) ; \\nq16 = 6 + 3*sin(trel1);\\n\\nq17 = .3*sin(trel4); \\nq18 = .3*cos(trel2); \\nq19 = 3 + sin(trel3);\\n\\ntrot = trel1/2;\\ntrot = index2*6.28/4;\\nq5 = cos(trot);\\nq6 = sin(trot);\\nq7 = -q6;\\nq8 = q5;","pixel_eqs_eel":"","warp":"float xlat_mutableq25;\\n shader_body { \\n  vec2 uv_1;\\n  vec2 uv6_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = ((uv - 0.5) * aspect.xy);\\n  float tmpvar_4;\\n  tmpvar_4 = ((2.0 * sqrt(\\n    dot (tmpvar_3, tmpvar_3)\\n  )) + (rand_frame * 64.0)).x;\\n  uv_1 = (uv + ((\\n    clamp (((sin(tmpvar_4) / cos(tmpvar_4)) * normalize(tmpvar_3)), vec2(-2.0, -2.0), vec2(2.0, 2.0))\\n   / 20.0) * q29));\\n  uv6_2 = (0.4 * sin((tmpvar_3 * 32.0)));\\n  xlat_mutableq25 = (q24 + 0.01);\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = (((xlat_mutableq25 * \\n    (((texture (sampler_main, uv_1).xyz - (\\n      ((texture (sampler_blur1, fract(uv_1)).xyz * scale1) + bias1)\\n     * 0.04)) + (0.15 * (vec3(\\n      (0.1 / sqrt(dot (uv6_2, uv6_2)))\\n    ) * roam_cos.xyz))) - 0.02)\\n  ) * 0.99) + ((0.995 * \\n    (1.0 - xlat_mutableq25)\\n  ) * texture (sampler_main, uv_orig).xyz));\\n  ret = tmpvar_5.xyz;\\n }","comp":"vec2 xlat_mutableKugel1;\\nvec2 xlat_mutableKugel2;\\nfloat xlat_mutablerad1;\\nfloat xlat_mutablerad2;\\nfloat xlat_mutablerad3;\\nvec3 xlat_mutableret1;\\nvec3 xlat_mutableret2;\\nvec2 xlat_mutablers0;\\nvec2 xlat_mutablersk;\\nvec2 xlat_mutableuv4;\\n shader_body { \\n  vec2 uv1_1;\\n  mat2 tmpvar_2;\\n  tmpvar_2[uint(0)] = _qb.xy;\\n  tmpvar_2[1u] = _qb.zw;\\n  uv1_1 = (((uv - 0.5) * aspect.xy) * tmpvar_2);\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = q11;\\n  tmpvar_3.y = q12;\\n  xlat_mutablersk = (uv1_1 + tmpvar_3);\\n  xlat_mutablerad1 = ((8.0 * q13) * sqrt(dot (xlat_mutablersk, xlat_mutablersk)));\\n  xlat_mutableuv4 = ((sin(xlat_mutablerad1) / cos(xlat_mutablerad1)) * normalize(xlat_mutablersk));\\n  xlat_mutableKugel1 = (((xlat_mutableuv4 * \\n    clamp ((10.0 - (7.0 * xlat_mutablerad1)), 0.0, 1.0)\\n  ) / (1.0 + \\n    (q13 * q13)\\n  )) * q13);\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = q14;\\n  tmpvar_4.y = q15;\\n  xlat_mutablersk = (uv1_1 + tmpvar_4);\\n  xlat_mutablerad2 = ((2.0 * (1.0 + q16)) * sqrt(dot (xlat_mutablersk, xlat_mutablersk)));\\n  xlat_mutableuv4 = ((sin(xlat_mutablerad2) / cos(xlat_mutablerad2)) * normalize(xlat_mutablersk));\\n  xlat_mutableKugel2 = (((xlat_mutableuv4 * \\n    clamp ((10.0 - (7.0 * xlat_mutablerad2)), 0.0, 1.0)\\n  ) / (1.0 + \\n    (q16 * q16)\\n  )) * q16);\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = q17;\\n  tmpvar_5.y = q18;\\n  xlat_mutablersk = (uv1_1 + tmpvar_5);\\n  xlat_mutablerad3 = ((4.0 * (1.0 + q19)) * sqrt(dot (xlat_mutablersk, xlat_mutablersk)));\\n  xlat_mutableuv4 = ((sin(xlat_mutablerad3) / cos(xlat_mutablerad3)) * normalize(xlat_mutablersk));\\n  float tmpvar_6;\\n  tmpvar_6 = (0.1 / abs((\\n    (uv1_1.y * rad)\\n   * rad)));\\n  xlat_mutablers0.y = tmpvar_6;\\n  xlat_mutablers0.x = ((uv1_1.x * tmpvar_6) * 4.0);\\n  mat2 tmpvar_7;\\n  tmpvar_7[uint(0)] = _qa.xy;\\n  tmpvar_7[1u] = _qa.zw;\\n  xlat_mutablers0 = (xlat_mutablers0 * tmpvar_7);\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = 0.0;\\n  tmpvar_8.y = q30;\\n  xlat_mutableret2 = (((texture (sampler_blur1, \\n    fract((xlat_mutablers0 + tmpvar_8))\\n  ).xyz * scale1) + bias1) / tmpvar_6);\\n  uv1_1 = (uv1_1 + ((\\n    ((xlat_mutableKugel1 + xlat_mutableKugel2) + (((xlat_mutableuv4 * \\n      clamp ((10.0 - (7.0 * xlat_mutablerad3)), 0.0, 1.0)\\n    ) / (1.0 + \\n      (q19 * q19)\\n    )) * q19))\\n   * 0.25) + (xlat_mutableret2 / 4.0).xy));\\n  xlat_mutableret1 = (((\\n    (xlat_mutableret2 + texture (sampler_main, ((uv1_1 / 2.0) + 0.5)).xyz)\\n   + \\n    ((((0.4 / xlat_mutablerad1) * (0.5 - \\n      ((texture (sampler_blur1, vec2(0.1, 0.1)).xyz * scale1) + bias1)\\n    )) * q22) * (float(mod (q27, 4.0))))\\n  ) + (\\n    (((0.3 / xlat_mutablerad2) * (0.5 - (\\n      (texture (sampler_blur1, vec2(0.2, 0.2)).xyz * scale1)\\n     + bias1))) * q22)\\n   * \\n    (float(mod ((q27 + 1.0), 4.0)))\\n  )) + ((\\n    ((0.2 / xlat_mutablerad3) * (0.5 - ((texture (sampler_blur1, vec2(0.0, 0.0)).xyz * scale1) + bias1)))\\n   * q22) * (float(mod (\\n    (q27 + 2.0)\\n  , 4.0)))));\\n  vec4 tmpvar_9;\\n  tmpvar_9.w = 1.0;\\n  tmpvar_9.xyz = clamp ((xlat_mutableret1 * (1.0 + xlat_mutableret1)), 0.0, 1.0);\\n  ret = tmpvar_9.xyz;\\n }"}')},4185:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":2,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_brighten":0,"darken":1,"wave_a":0.002,"wave_scale":0.14,"wave_smoothing":0,"wave_mystery":-0.84,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_g":0,"wave_b":0.6,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":23,"textured":1,"rad":0.72143,"tex_ang":0.62832,"tex_zoom":0.0402,"g":1,"b":1,"a":0.9,"r2":0.9,"b2":1,"a2":0.3,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"vis = bnot(q27%8)*q22/2;\\nvis = min(vis,1);\\na = vis/2; a2 = vis/2;\\n//tex_ang = 3*(1-vis);\\n\\ntex_zoom = 1;\\nrad = vis*.3; "},{"baseVals":{"sides":5,"textured":1,"rad":4.77803,"tex_zoom":1.78051,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_g":0.99,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ang =sin(time/65) ;\\nrad = q24/8;"},{"baseVals":{"enabled":1,"sides":5,"additive":1,"num_inst":4,"x":0.9,"rad":0.24732,"tex_zoom":0.40839,"g":0.6,"a":0.4,"g2":0,"b2":0.6,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"steps = q28+1;\\nsteps = 4;\\nampl = .2; //.2 bis .5 praktisch\\n\\nx = .5 + ampl*cos((q27/steps+instance/4)*6.28);\\ny = .5 + ampl*sin((q27/steps+instance/4)*6.28);\\n\\na = .4; a2 = .0;\\n\\n\\ntrig = q24 * bnot(q27%4);\\nred = bnot(trig)*red+ (rand(100)/100)*trig;\\ngreen = bnot(trig)*green+ (rand(100)/100)*trig;\\nblue = bnot(trig)*blue+ (rand(100)/100)*trig;\\n\\nk1 = instance / num_inst;\\n\\nr = red *k1;\\ng = green * (1-k1);\\nb = blue * 4*k1*(1-k1);\\n\\nr = red;\\ng = green;\\nb = blue;\\n\\n\\n\\nr2 = r; b2 = b; g2 = g;"},{"baseVals":{"sides":36,"additive":1,"rad":0.01,"r":0,"g":0.12,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"spectrum":1,"usedots":1,"additive":1,"scaling":0.5033,"r":0.5,"g":0.1,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"dec_med = pow (0.9, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .1+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %12;\\nindex2 = (index2 + is_beat*bnot(index))%4;\\nindex3 = (index3 + is_beat*bnot(index)*bnot(index2))%3;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass + mid + treb;\\nq27 = index + 1;\\nq28 = index2;\\n\\nk1 =  is_beat*equal(index%2,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.1416/4;\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\nq5 = q1*.01;\\n\\ndrot = (index%4-2) * 30/fps;\\np3 = p3*dec_slow + (1-dec_slow)*30/fps * drot;\\nq30 = p3 ;\\n\\nstag = (q27+index2*1);\\nstag = max(stag,1);\\np4 = dec_med*p4 + (1-dec_med)*stag;\\nq31 = p4;\\n\\nzoom = 1 + .05*q1;\\nrot = -0.007 * index;\\n\\nq32 = pow(0.996, 30/fps); //fade\\n\\nmonitor = index2;","pixel_eqs_eel":"dy = -.005;","warp":" shader_body { \\n  vec2 uv_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (uv - vec2(0.5, 0.5));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 0.0;\\n  vec4 tmpvar_4;\\n  tmpvar_4 = texture (sampler_blur1, uv);\\n  tmpvar_3.xyz = ((tmpvar_4.xyz * scale1) + bias1);\\n  float tmpvar_5;\\n  tmpvar_5 = (dot (tmpvar_3, roam_sin) * 8.0);\\n  mat2 tmpvar_6;\\n  tmpvar_6[uint(0)].x = cos(tmpvar_5);\\n  tmpvar_6[uint(0)].y = -(sin(tmpvar_5));\\n  tmpvar_6[1u].x = sin(tmpvar_5);\\n  tmpvar_6[1u].y = cos(tmpvar_5);\\n  uv_1 = (((tmpvar_2 + \\n    ((0.2 * dot ((\\n      (tmpvar_4.xyz * scale1)\\n     + bias1), vec3(0.32, 0.49, 0.29))) * (tmpvar_2 * tmpvar_6))\\n  ) - 0.5) + q5);\\n  vec2 tmpvar_7;\\n  tmpvar_7 = ((uv_1 * texsize.xy) * 0.02);\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = (cos((tmpvar_7.y * q1)) * sin(-(tmpvar_7.y)));\\n  tmpvar_8.y = (sin(tmpvar_7.x) * cos((tmpvar_7.y * q2)));\\n  uv_1 = (uv_1 - ((tmpvar_8 * texsize.zw) * 12.0));\\n  vec4 tmpvar_9;\\n  tmpvar_9.w = 1.0;\\n  tmpvar_9.xyz = ((texture (sampler_main, uv_1).xyz * 0.99) - 0.01);\\n  ret = tmpvar_9.xyz;\\n }","comp":"vec3 xlat_mutableret1;\\nvec2 xlat_mutablers;\\nvec2 xlat_mutableuv1;\\nfloat xlat_mutablez;\\n shader_body { \\n  xlat_mutableuv1 = ((uv - 0.5) * aspect.xy);\\n  xlat_mutablez = (8.0 / pow (xlat_mutableuv1.y, 0.05));\\n  xlat_mutablers.x = (xlat_mutableuv1.x * xlat_mutablez);\\n  xlat_mutablers.y = ((xlat_mutablez / 2.0) + time);\\n  vec4 tmpvar_1;\\n  tmpvar_1 = texture (sampler_noise_hq, xlat_mutablers);\\n  xlat_mutableret1 = ((tmpvar_1.xyz * vec3(\\n    greaterThanEqual (tmpvar_1.xyz, vec3(0.0, 0.0, 0.0))\\n  )) - 0.5);\\n  vec2 tmpvar_2;\\n  tmpvar_2 = fract(((xlat_mutableuv1 - 0.5) - (\\n    (xlat_mutableret1 * 0.1)\\n   * \\n    clamp ((xlat_mutableuv1.y * 32.0), 0.0, 1.0)\\n  ).xy));\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = (1.0 - tmpvar_2.x);\\n  tmpvar_3.y = tmpvar_2.y;\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (texture (sampler_main, tmpvar_2) + texture (sampler_main, tmpvar_3)).xyz;\\n  xlat_mutableret1 = tmpvar_4;\\n  xlat_mutableuv1 = (xlat_mutableuv1 * aspect.xy);\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = ((tmpvar_4 * (1.0 + \\n    dot (tmpvar_4, vec3(0.32, 0.49, 0.29))\\n  )) / 3.0);\\n  ret = tmpvar_5.xyz;\\n }"}')},4144:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":3,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_brighten":0,"darken":1,"wave_a":0.002,"wave_scale":0.14,"wave_smoothing":0,"wave_mystery":-0.84,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_g":0,"wave_b":0.6,"ob_size":0.015,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":23,"textured":1,"rad":0.72143,"tex_ang":0.62832,"tex_zoom":0.0402,"g":1,"b":1,"a":0.9,"r2":0.9,"b2":1,"a2":0.3,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"vis = bnot(q27%8)*q22/2;\\nvis = min(vis,1);\\na = vis/2; a2 = vis/2;\\n//tex_ang = 3*(1-vis);\\n\\ntex_zoom = 1;\\nrad = vis*.3; "},{"baseVals":{"sides":5,"textured":1,"rad":4.77803,"tex_zoom":1.78051,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_g":0.99,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ang =sin(time/65) ;\\nrad = q24/8;"},{"baseVals":{"enabled":1,"sides":5,"additive":1,"num_inst":4,"x":0.9,"rad":0.24732,"tex_zoom":0.40839,"g":0.6,"a":0.4,"g2":0,"b2":0.6,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"steps = q28+1;\\nsteps = 4;\\nampl = .2; //.2 bis .5 praktisch\\n\\nx = .5 + ampl*cos((q27/steps+instance/4)*6.28);\\ny = .5 + ampl*sin((q27/steps+instance/4)*6.28);\\n\\na = .4; a2 = .0;\\n\\n\\ntrig = q24 * bnot(q27%4);\\nred = bnot(trig)*red+ (rand(100)/100)*trig;\\ngreen = bnot(trig)*green+ (rand(100)/100)*trig;\\nblue = bnot(trig)*blue+ (rand(100)/100)*trig;\\n\\nk1 = instance / num_inst;\\n\\nr = red *k1;\\ng = green * (1-k1);\\nb = blue * 4*k1*(1-k1);\\n\\nr = red;\\ng = green;\\nb = blue;\\n\\n\\n\\nr2 = r; b2 = b; g2 = g;"},{"baseVals":{"sides":36,"additive":1,"rad":0.01,"r":0,"g":0.12,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"spectrum":1,"usedots":1,"additive":1,"scaling":0.5033,"r":0.5,"g":0.1,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x = .5 + .5*sample*sin(sample*50);\\ny = .5 + .5*sample*cos(sample*50);\\n\\ntrel = time;\\n\\nx = .5 + .5*sample*sin(time); \\ny = .5 + .5*sample*cos(time); \\n\\nx = rand(100)/100;\\ny = rand(100)/100;\\n\\na=.2;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"speed_=1;vx = 0; vy = 0; vz = 0;\\ntrel = 0; p1 = 0; dir = 0;\\nang0 = 0;","frame_eqs_eel":"dec_med = pow (0.9, 30/fps);\\ndec_slow = pow (0.96, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .2+avg+peak) * above (time, t0+.5);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %16;\\nindex2 = (index2 + is_beat*bnot(index))%8;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq24 = is_beat;\\nvol = bass_att + mid_att + treb_att;\\nvol_ = dec_med * vol_ + (1-dec_med)* vol;\\nvol__ = dec_med * vol__ + (1-dec_med)* vol_;\\nq27 = index + 1;\\nq28 = index2 + 1;\\n\\nk1 =  is_beat*equal(index%4,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.1416/4;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\ntrig = q24 * bnot(index%8);\\nvx = vx*bnot(trig) + trig* (rand(100)/100-.5);\\nvy = vy*bnot(trig) + trig* (rand(100)/100-.5);\\nvz = vz*bnot(trig) + trig* (rand(100)/100-.5);\\n\\nq10 = 0.2+vy*vy*4;\\nq11 = cos(time/9)*.5+.3;\\n\\nspeed = min(vol_-vol__+.5,1);\\nspeed = max(speed,-.5);\\nspeed_ = bnot(trig)*speed_ + trig*speed;\\nmovz = movz + 1/fps*speed_;\\nq9 = movz;\\n\\nq12 = min(q22,6)*2;\\n//q13 = 1.5+sin(time/5);\\ntrig = bnot(index%4) * q24;\\ndir = bnot(trig)*dir + trig*(rand(10)-5);\\n\\ntrel = trel + .2/fps*dir;\\n\\nq5 = cos(trel);\\nq6 = sin(trel+0*q27*(q28%2));\\nq7 = -q6;\\nq8 = q5;\\n\\npx = px * dec_med + (1-dec_med)*vx;\\npy = py * dec_med + (1-dec_med)*vy;\\nq15 = px/3;\\nq16 = py/3;\\n\\nq13 = min(2,1+abs(8*px*py));\\n\\nang0 = ang0*dec_med + vz*(1-dec_med);\\nq17 = ang0*2; \\n\\nzoom = 1.1;\\nrot = .2*sin(bnot(q28%2)*q28) ;\\ndx = .00;\\n\\nmonitor = q11;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 uv6_1;\\n  vec2 uv1_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (uv - 0.5);\\n  float x_4;\\n  x_4 = (abs(tmpvar_3.x) - abs(tmpvar_3.y));\\n  float tmpvar_5;\\n  tmpvar_5 = (18.0 * sqrt((x_4 * x_4)));\\n  uv1_2 = (tmpvar_3 - (clamp (\\n    ((sin(tmpvar_5) / cos(tmpvar_5)) * normalize(tmpvar_3))\\n  , vec2(-3.0, -3.0), vec2(3.0, 3.0)) / 60.0));\\n  uv6_1 = (0.4 * cos((\\n    (uv1_2 * 4.0)\\n   * q28)));\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = (((texture (sampler_main, \\n    ((uv1_2 * (q11 + (q10 * tmpvar_5))) + 0.5)\\n  ).xyz + \\n    (vec3((0.006 / sqrt(dot (uv6_1, uv6_1)))) * (1.0 + roam_cos).xyz)\\n  ) * 0.99) - 0.025);\\n  ret = tmpvar_6.xyz;\\n }","comp":"float xlat_mutableang2;\\nvec2 xlat_mutablers0;\\nvec2 xlat_mutableuv2;\\n shader_body { \\n  vec2 uv_1;\\n  vec3 ret1_3;\\n  uv_1 = ((uv - 0.5) * aspect.xy);\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = q15;\\n  tmpvar_4.y = q16;\\n  uv_1 = (uv_1 + tmpvar_4);\\n  mat2 tmpvar_5;\\n  tmpvar_5[uint(0)] = _qb.xy;\\n  tmpvar_5[1u] = _qb.zw;\\n  uv_1 = (uv_1 * tmpvar_5);\\n  float tmpvar_6;\\n  float tmpvar_7;\\n  tmpvar_7 = (min (abs(\\n    (uv_1.y / uv_1.x)\\n  ), 1.0) / max (abs(\\n    (uv_1.y / uv_1.x)\\n  ), 1.0));\\n  float tmpvar_8;\\n  tmpvar_8 = (tmpvar_7 * tmpvar_7);\\n  tmpvar_8 = (((\\n    ((((\\n      ((((-0.01213232 * tmpvar_8) + 0.05368138) * tmpvar_8) - 0.1173503)\\n     * tmpvar_8) + 0.1938925) * tmpvar_8) - 0.3326756)\\n   * tmpvar_8) + 0.9999793) * tmpvar_7);\\n  tmpvar_8 = (tmpvar_8 + (float(\\n    (abs((uv_1.y / uv_1.x)) > 1.0)\\n  ) * (\\n    (tmpvar_8 * -2.0)\\n   + 1.570796)));\\n  tmpvar_6 = (tmpvar_8 * sign((uv_1.y / uv_1.x)));\\n  if ((abs(uv_1.x) > (1e-08 * abs(uv_1.y)))) {\\n    if ((uv_1.x < 0.0)) {\\n      if ((uv_1.y >= 0.0)) {\\n        tmpvar_6 += 3.141593;\\n      } else {\\n        tmpvar_6 = (tmpvar_6 - 3.141593);\\n      };\\n    };\\n  } else {\\n    tmpvar_6 = (sign(uv_1.y) * 1.570796);\\n  };\\n  xlat_mutablers0.x = ((tmpvar_6 / 3.1416) * 2.0);\\n  xlat_mutablers0.y = (0.03 / sqrt(dot (uv_1, uv_1)));\\n  ret1_3 = vec3(0.0, 0.0, 0.0);\\n  for (int n_2 = 0; n_2 <= 10; n_2++) {\\n    float tmpvar_9;\\n    tmpvar_9 = fract((-(q9) + (\\n      float(n_2)\\n     / 10.0)));\\n    xlat_mutableang2 = (((q1 * 3.14) * float(n_2)) / 10.0);\\n    float tmpvar_10;\\n    tmpvar_10 = cos(xlat_mutableang2);\\n    float tmpvar_11;\\n    tmpvar_11 = sin(xlat_mutableang2);\\n    mat2 tmpvar_12;\\n    tmpvar_12[uint(0)].x = tmpvar_10;\\n    tmpvar_12[uint(0)].y = -(tmpvar_11);\\n    tmpvar_12[1u].x = tmpvar_11;\\n    tmpvar_12[1u].y = tmpvar_10;\\n    xlat_mutableuv2 = (uv_1 * ((q13 * tmpvar_9) * tmpvar_12));\\n    ret1_3 = max (ret1_3, (texture (sampler_main, (xlat_mutableuv2 + 0.5)).xyz * (1.0 - tmpvar_9)));\\n  };\\n  vec4 tmpvar_13;\\n  tmpvar_13.w = 1.0;\\n  tmpvar_13.xyz = ((ret1_3 * 2.0) + ((\\n    (bass_att * xlat_mutablers0.y)\\n   * texture (sampler_main, \\n    ((uv_1 * q12) + vec2(0.5, 0.0))\\n  ).yzx) * clamp (\\n    (1.0 - (ret1_3 * 32.0))\\n  , 0.0, 1.0)));\\n  ret = tmpvar_13.xyz;\\n }"}')},4468:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":2,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":6,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.312,"wave_scale":1.229,"wave_smoothing":0,"wave_mystery":0.2,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0,"ob_b":0.2,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":3.3,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1x":0.7,"b1ed":0},"shapes":[{"baseVals":{"thickoutline":1,"textured":1,"rad":1.85483,"ang":1.5708,"tex_zoom":0.53907,"g":0.94,"b":0.89,"r2":0.84,"g2":0.93,"b2":1,"a2":1,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = .4998;\\ny = .5002;\\n\\nti = time*.3;\\nr = .925 + .05*sin(ti*1.721);\\ng = .925 + .05*sin(ti*1.838);\\nb = .925 + .05*sin(ti*1.968);\\n\\nr2 = 1.875 - r;\\ng2 = 1.875 - g;\\nb2 = 1.875 - b;\\n"},{"baseVals":{"sides":63,"textured":1,"rad":1.99863,"tex_zoom":0.49981,"g":1,"b":1,"a":0.1,"r2":1,"b2":1,"a2":0.6,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":63,"textured":1,"x":0.123,"y":0,"rad":0.27319,"tex_zoom":0.49981,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":63,"textured":1,"y":1,"rad":0.54822,"tex_zoom":0.49981,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"samples":189,"usedots":1,"scaling":0.89152,"smoothing":0.82,"a":0.6},"init_eqs_eel":"","frame_eqs_eel":"ofs = 0;\\n\\nt1 = 2*sin(time/15-ofs);\\nt2 = 2*sin(time/11-ofs);\\nt3 = 2*sin(time/19-ofs);\\nmonitor = time;","point_eqs_eel":"\\nmul = 10;\\nt_abs = (sample)*mul;\\nampl = 2;\\n\\nox = ampl*sin (t_abs*68);\\noy = ampl*cos (t_abs*28);\\noz = 2+ampl*cos (t_abs*128);\\n\\n\\nr = min(sin(t_abs*335)+1,1);\\ng = min(sin(t_abs*783)+1,1) ;\\nb = min(sin(t_abs*456)+1,1);\\n\\na=.5 + .02*(rand(10)-5);\\n\\nxang = t1;\\nyang = t2;\\nzang = t3;\\nfov = 0.12;\\n\\n\\n// Rotation um x,y,z\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\n\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = - ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\nx = ox*fov/oz +0.5;\\n//x = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;"},{"baseVals":{"samples":189,"usedots":1,"additive":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1 = 2*sin(time/15);\\nt2 = 2*sin(time/11);\\nt3 = 2*sin(time/19);\\nmonitor = time;","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"fade = .1;","frame_eqs_eel":"dec_med = pow (0.5, 30/fps);\\ndec_slow = pow (0.9, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .0+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %16;\\nindex2 = (index2 + is_beat*bnot(index))%4;\\nmonitor = index2;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass + mid + treb;\\nq27 = index;\\nq28 = index2;\\nsb = sb*dec_med + q21*(1-dec_med);\\nq29 = sb;\\n\\nk1 =  is_beat*bnot(index)*bnot(index2);\\np1 =  (index2-2);\\n\\np2 = dec_slow * p2+ (1-dec_slow)*p1;\\np3 = dec_slow * p3+ (1-dec_slow)*p2;\\nrott =  rott +  .003*30/fps*p3;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\ntrel = time/10;\\nq5 = cos(trel);\\nq6 = sin(trel);\\nq7 = -q6;\\nq8 = q5;\\n\\nq9 = .01*sin(time/7);\\nmovez = movez + .004*30/fps*(p3+4);\\nq10 = movez;\\nq30 = .3* (sin(time/45) + 1.5);\\n\\nmv_a = 0;\\n\\nq32 = pow(0.98, 30/fps); //fade\\n\\nq31 = equal(frame%10,0);\\n\\ntrig = q24*bnot(index%3);\\nfx = fx*bnot(trig) + trig*rand(100)/100;\\nfy = fy*bnot(trig) + trig*rand(100)/100;\\nq15 = fx-.5;\\nq16 = fy-.5;\\n\\nfade = fade * dec_slow;\\nq32 = 1-fade;\\nmonitor = q32;","pixel_eqs_eel":"zoom = 1 + .01*sin(time/8);\\nwarp = .0 * (1-rad);\\nwarp = 0.05;\\nrot = .0;\\ndx = 0; dy = 0;","warp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1.x = dot ((texture (sampler_main, (uv + vec2(0.002, 0.0))) - texture (sampler_main, (uv - vec2(0.002, 0.0)))), vec4(0.32, 0.49, 0.29, 0.0));\\n  tmpvar_1.y = dot ((texture (sampler_main, (uv + vec2(0.0, 0.002))) - texture (sampler_main, (uv - vec2(0.0, 0.002)))), vec4(0.32, 0.49, 0.29, 0.0));\\n  vec3 tmpvar_2;\\n  tmpvar_2 = ((texture (sampler_blur1, fract(uv)).xyz * scale1) + bias1);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = (((\\n    (((-0.1 * tmpvar_2) * tmpvar_2) + (0.47 * ((texture (sampler_main, \\n      (uv + (tmpvar_1 * 0.0003))\\n    ).xyz + texture (sampler_main, uv).xyz) + (tmpvar_2 / 8.0))))\\n   * q32) - (0.003 * q31)) - ((0.01 * q31) * (rad * rad)));\\n  ret = tmpvar_3.xyz;\\n }","comp":"float xlat_mutablem;\\nvec3 xlat_mutableneu;\\nvec3 xlat_mutableret1;\\n shader_body { \\n  vec2 uv_1;\\n  float maskn_2;\\n  float inten_3;\\n  uv_1 = (uv - 0.5);\\n  uv_1 = (uv_1 * aspect.xy);\\n  mat2 tmpvar_4;\\n  tmpvar_4[uint(0)] = _qa.xy;\\n  tmpvar_4[1u] = _qa.zw;\\n  uv_1 = (uv_1 * tmpvar_4);\\n  int tmpvar_5;\\n  tmpvar_5 = int(q10);\\n  xlat_mutablem = (1.0 - float(tmpvar_5));\\n  float tmpvar_6;\\n  float tmpvar_7;\\n  tmpvar_7 = -(q10);\\n  tmpvar_6 = fract((0.75 + (\\n    fract(tmpvar_7)\\n   / 4.0)));\\n  inten_3 = ((4.0 * (1.0 - tmpvar_6)) * pow (tmpvar_6, 0.2));\\n  vec2 tmpvar_8;\\n  tmpvar_8 = fract(((\\n    ((3.0 * uv_1) * tmpvar_6)\\n   + \\n    (xlat_mutablem * 0.35)\\n  ) + (\\n    (q7 * tmpvar_6)\\n   * tmpvar_6)));\\n  xlat_mutableneu = (texture (sampler_main, tmpvar_8).xyz + ((texture (sampler_blur1, tmpvar_8).xyz * scale1) + bias1));\\n  xlat_mutableret1 = ((xlat_mutableneu * inten_3) * 0.7);\\n  xlat_mutablem = (2.0 - float(tmpvar_5));\\n  float tmpvar_9;\\n  tmpvar_9 = fract((0.5 + (\\n    fract(tmpvar_7)\\n   / 4.0)));\\n  inten_3 = ((4.0 * (1.0 - tmpvar_9)) * pow (tmpvar_9, 0.2));\\n  vec2 tmpvar_10;\\n  tmpvar_10 = fract(((\\n    ((3.0 * uv_1) * tmpvar_9)\\n   + \\n    (xlat_mutablem * 0.35)\\n  ) + (\\n    (q7 * tmpvar_9)\\n   * tmpvar_9)));\\n  xlat_mutableneu = (texture (sampler_main, tmpvar_10).xyz + ((texture (sampler_blur1, tmpvar_10).xyz * scale1) + bias1));\\n  maskn_2 = (1.0 - (pow (tmpvar_9, 0.1) * clamp (\\n    (8.0 * xlat_mutableneu)\\n  , 0.0, 1.0))).x;\\n  xlat_mutableret1 = ((xlat_mutableret1 * maskn_2) + ((xlat_mutableneu * inten_3) * 0.7));\\n  xlat_mutablem = (3.0 - float(tmpvar_5));\\n  float tmpvar_11;\\n  tmpvar_11 = fract((0.25 + (\\n    fract(tmpvar_7)\\n   / 4.0)));\\n  inten_3 = ((4.0 * (1.0 - tmpvar_11)) * pow (tmpvar_11, 0.2));\\n  vec2 tmpvar_12;\\n  tmpvar_12 = fract(((\\n    ((3.0 * uv_1) * tmpvar_11)\\n   + \\n    (xlat_mutablem * 0.35)\\n  ) + (\\n    (q7 * tmpvar_11)\\n   * tmpvar_11)));\\n  xlat_mutableneu = (texture (sampler_main, tmpvar_12).xyz + ((texture (sampler_blur1, tmpvar_12).xyz * scale1) + bias1));\\n  maskn_2 = (1.0 - (pow (tmpvar_11, 0.1) * clamp (\\n    (8.0 * xlat_mutableneu)\\n  , 0.0, 1.0))).x;\\n  xlat_mutableret1 = ((xlat_mutableret1 * maskn_2) + ((xlat_mutableneu * inten_3) * 0.7));\\n  xlat_mutablem = (4.0 - float(tmpvar_5));\\n  float tmpvar_13;\\n  tmpvar_13 = fract((fract(tmpvar_7) / 4.0));\\n  inten_3 = ((4.0 * (1.0 - tmpvar_13)) * pow (tmpvar_13, 0.2));\\n  vec2 tmpvar_14;\\n  tmpvar_14 = fract(((\\n    ((3.0 * uv_1) * tmpvar_13)\\n   + \\n    (xlat_mutablem * 0.35)\\n  ) + (\\n    (q7 * tmpvar_13)\\n   * tmpvar_13)));\\n  xlat_mutableneu = (texture (sampler_main, tmpvar_14).xyz + ((texture (sampler_blur1, tmpvar_14).xyz * scale1) + bias1));\\n  maskn_2 = (1.0 - (pow (tmpvar_13, 0.1) * clamp (\\n    (8.0 * xlat_mutableneu)\\n  , 0.0, 1.0))).x;\\n  xlat_mutableret1 = ((xlat_mutableret1 * maskn_2) + ((xlat_mutableneu * inten_3) * 0.7));\\n  vec2 tmpvar_15;\\n  tmpvar_15.x = q15;\\n  tmpvar_15.y = q16;\\n  vec2 tmpvar_16;\\n  tmpvar_16 = sin(((tmpvar_15 + \\n    (2.0 * uv_1)\\n  ) + (0.2 * rand_frame).xy));\\n  float tmpvar_17;\\n  tmpvar_17 = ((dot (xlat_mutableret1, vec3(0.32, 0.49, 0.29)) * (1.0 - \\n    dot (xlat_mutableret1, vec3(0.32, 0.49, 0.29))\\n  )) * 4.0);\\n  vec4 tmpvar_18;\\n  tmpvar_18.w = 1.0;\\n  tmpvar_18.xyz = ((pow (xlat_mutableret1, vec3(1.5, 1.5, 1.5)) + (\\n    clamp (((0.01 * (q21 - 2.0)) / sqrt(dot (tmpvar_16, tmpvar_16))), 0.0, 1.0)\\n   * \\n    clamp ((1.0 - (tmpvar_17 / 2.0)), 0.0, 1.0)\\n  )) + ((\\n    (clamp ((1.0 - tmpvar_17), 0.0, 1.0) * q29)\\n   * \\n    float((q27 == 2.0))\\n  ) * float(\\n    (q28 <= 2.0)\\n  )));\\n  ret = tmpvar_18.xyz;\\n }"}')},9851:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1.980001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"wave_mode":6,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.3116,"wave_scale":1.22891,"wave_smoothing":0,"wave_mystery":0.2,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1.4595,"warpscale":2.0067,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0,"wave_b":0,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0,"ib_a":0.5,"mv_x":64,"mv_y":48,"mv_l":0,"mv_b":0.4999,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"textured":1,"x":0.4999,"rad":0.143922,"tex_zoom":4.574821,"g":1,"b":1,"a":0.9,"r2":0.84,"g2":0.93,"b2":1,"border_r":0.8,"border_g":0,"border_a":0.4},"init_eqs_eel":"","frame_eqs_eel":"textured = bnot(q24);\\nrad = .2*max(sin(time/9)-.6,0);\\nx = .5 + .01 * sin(time/2); //slightly off-center\\n\\nborder_r = .4 * (1.5+sin(time/18));\\nborder_g = .4 * (1.5+sin(time/38));\\nborder_b = .4 * (1.5+sin(time/28));"},{"baseVals":{"enabled":1,"sides":63,"additive":1,"rad":1.998625,"tex_zoom":0.499805,"g":1,"b":1,"a":0.1,"r2":1,"b2":1,"a2":0.6,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"\\ntrel = time/2+q20;\\n\\nx = .5+sin(trel);\\ny = .5+cos(trel*1.3 +q28/3);\\nrad = .03;\\na = q26/4+.2;  a2 = 0;\\na = 1;"},{"baseVals":{"sides":63,"textured":1,"x":0.123,"y":0,"rad":0.273185,"tex_zoom":0.499805,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":63,"textured":1,"y":1,"rad":0.548217,"tex_zoom":0.499805,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"scaling":0.891519,"smoothing":0.82,"a":0.6},"init_eqs_eel":"","frame_eqs_eel":"t1 = 1*cos(time/3);\\nt2 = 1*sin(time/7);\\n\\nvol = mid_att + treb_att;\\nvol_m = vol_m*0.999+vol*0.001;\\nexc = above (vol, vol_m*1.1);\\n\\npulse = 0.95*pulse + 0.05*exc;\\nwinkel = winkel + pulse/3;\\nt3 = winkel;\\n\\n\\n","point_eqs_eel":"  //Alle Funktionen muessen rel. zu t_rel sein\\n\\n\\nt_abs = sample;\\nt_rel = sample-time/6;\\nampl = sin(t_abs*3)-0.0;\\n\\nox = 3*sin (time) + ampl*(sin (t_rel*267)) ;\\noy = 3*cos (time) + ampl*(cos (t_rel*277)) ;\\noz = 0*cos (t_rel*time/23)+t_abs*4 ;\\n\\n\\nr = sqr(sin(t_rel*3.4));\\ng = sqr(sin(t_rel*2.3));\\nb = sqr (cos(t_rel*.9));\\n\\na= 0.2*(cos(t_abs*1 )) + q26/16 ;\\n\\nxang = t2+t3/3;\\nyang = t1*t2-t3/4;\\nzang = t3;\\nfov = 0.2;\\n\\nmonitor = t2;\\n\\n// Rotation um x,y,z\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\n\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = -ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz =  mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\noz = oz - 6;\\nx = ox*fov/oz +0.5;\\n//x = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;\\n"},{"baseVals":{"enabled":1,"samples":232,"usedots":1,"additive":1,"scaling":0.891519,"smoothing":0.82,"a":0.1},"init_eqs_eel":"","frame_eqs_eel":"t1 = 2*sin(time/15);\\nt2 = 2*sin(time/11);\\nmonitor = time;","point_eqs_eel":"\\nt_abs = sample;\\nt_rel = sample-time/5;\\nampl = time;\\n\\nox = ampl*10*sin (t_abs*68);\\noy = ampl*10*cos (t_abs*28);\\noz = ampl*10*cos (t_abs*128);\\n\\n\\nr = sin(t_abs*1335)+1;\\ng = sin(t_abs*1783)+1 ;\\nb = rand(5)/5 ;\\n\\na=0.5+0.25 * sin(t_rel*15);\\nxang = t1 ;\\nyang = t1;\\nzang = t1;\\nfov = 0.12;\\n\\n\\n// Rotation um x,y,z\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\n\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = -ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\noz = oz - 6;\\nx = ox*fov/oz +0.5;\\n//x = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;"},{"baseVals":{"scaling":0.891519,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ampl = time - int(time);\\naml = ampl/2;\\nx = .5 + ampl * sin(sample*230);\\ny = .5 + ampl * cos(sample*230);\\na = .03;"},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"index4 = rand(12); p1 = 0;","frame_eqs_eel":"dec_med = pow (0.9, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb);\\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %8;\\nindex2 = (index2 + is_beat*bnot(index))%4;\\nindex3 = (index3 + is_beat*bnot(index)*bnot(index2))%3;\\nindex4 = (index4 + is_beat*bnot(index)*bnot(index2)*bnot(index3))%8;\\nmonitor = index4;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass + mid + treb;\\n\\n//k1 =  is_beat*bnot(index)*bnot(index2);\\n\\nk1 =  is_beat*equal(index,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.14159265359/2;\\n\\nq27 = 8-index;\\nq28 = index3;\\nq29 = index4;\\n\\nstop = equal (index,4);\\nstop2 = .9 * stop2 + .1 * stop;\\naccel = stop - stop2;\\n\\n//movez = movez + .01*(2+ q21)*30/fps;\\nmovez = movez + .01*4*30/fps;\\nq30 = movez;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\nzoom = 1.0;\\nq32 = pow(0.996, 30/fps); //fade","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 uv_1;\\n  uv_1 = uv;\\n  vec2 zz_2;\\n  vec2 arg_3;\\n  int tmpvar_4;\\n  tmpvar_4 = int(q29);\\n  int tmpvar_5;\\n  tmpvar_5 = int((float(mod (float(tmpvar_4), 4.0))));\\n  vec3 tmpvar_6;\\n  tmpvar_6 = (0.03 * texture (sampler_noise_lq, ((uv * 0.3) + (0.01 * rand_frame).xy))).xyz;\\n  zz_2 = (((\\n    ((uv - 0.5) * texsize.xy)\\n   * 0.015) * q27) * aspect.zw);\\n  mat2 tmpvar_7;\\n  tmpvar_7[uint(0)] = _qa.xy;\\n  tmpvar_7[1u] = _qa.zw;\\n  zz_2 = (zz_2 * tmpvar_7);\\n  if ((tmpvar_5 == 0)) {\\n    arg_3 = clamp ((sin(zz_2) / cos(zz_2)), vec2(-8.0, -8.0), vec2(8.0, 8.0));\\n  } else {\\n    if ((tmpvar_5 == 1)) {\\n      arg_3 = clamp (((\\n        sin(zz_2)\\n       / \\n        cos(zz_2)\\n      ) / cos(zz_2.yx)), vec2(-8.0, -8.0), vec2(8.0, 8.0));\\n    } else {\\n      if ((tmpvar_5 == 2)) {\\n        arg_3 = clamp (exp(zz_2.yx), vec2(-8.0, -8.0), vec2(8.0, 8.0));\\n      } else {\\n        if ((tmpvar_5 == 3)) {\\n          arg_3 = clamp (sin((2.0 * zz_2.yx)), vec2(-8.0, -8.0), vec2(8.0, 8.0));\\n        };\\n      };\\n    };\\n  };\\n  if ((tmpvar_4 >= 4)) {\\n    arg_3 = (arg_3 - (sqrt(\\n      dot (zz_2, zz_2)\\n    ) / 4.0));\\n  };\\n  uv_1 = (uv + ((arg_3 * texsize.zw) * (1.0 + \\n    (4.0 * q28)\\n  )));\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = (((q32 * texture (sampler_main, uv_1).xyz) + (tmpvar_6 * 0.8)) - 0.03);\\n  ret = tmpvar_8.xyz;\\n }","comp":"vec3 xlat_mutableblur;\\nvec3 xlat_mutableneu;\\nvec3 xlat_mutableret1;\\n shader_body { \\n  vec2 uv_1;\\n  float inten_2;\\n  float dist_3;\\n  vec2 uv2_4;\\n  uv_1 = (uv - 0.5);\\n  uv_1 = (uv_1 * aspect.xy);\\n  mat2 tmpvar_5;\\n  tmpvar_5[uint(0)] = _qa.xy;\\n  tmpvar_5[1u] = _qa.zw;\\n  uv_1 = (uv_1 * tmpvar_5);\\n  uv2_4.x = ((uv_1.x * 0.0007962743) - (uv_1.y * 0.9999997));\\n  uv2_4.y = ((uv_1.x * 0.9999997) + (uv_1.y * 0.0007962743));\\n  uv2_4 = (uv2_4 * aspect.yx);\\n  dist_3 = (1.0 - fract((0.25 + q30)));\\n  inten_2 = ((pow (dist_3, 0.3) * (1.0 - dist_3)) * 2.0);\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (((2.0 * uv2_4) * dist_3) + 0.5);\\n  xlat_mutableblur = ((texture (sampler_blur2, tmpvar_6).xyz * scale2) + bias2);\\n  xlat_mutableneu = (texture (sampler_main, tmpvar_6).xyz + xlat_mutableblur);\\n  xlat_mutableret1 = (xlat_mutableneu * inten_2);\\n  uv2_4.x = ((uv_1.x * -0.9999987) - (uv_1.y * 0.001592548));\\n  uv2_4.y = ((uv_1.x * 0.001592548) + (uv_1.y * -0.9999987));\\n  uv2_4 = (uv2_4 * aspect.yx);\\n  dist_3 = (1.0 - fract((0.5 + q30)));\\n  inten_2 = ((pow (dist_3, 0.3) * (1.0 - dist_3)) * 2.0);\\n  vec2 tmpvar_7;\\n  tmpvar_7 = (((2.0 * uv2_4) * dist_3) + 0.5);\\n  xlat_mutableblur = ((texture (sampler_blur2, tmpvar_7).xyz * scale2) + bias2);\\n  xlat_mutableneu = (texture (sampler_main, tmpvar_7).xyz + xlat_mutableblur);\\n  xlat_mutableret1 = ((xlat_mutableret1 * 0.9) + (xlat_mutableneu * inten_2));\\n  uv2_4.x = ((uv_1.x * -0.00238894) - (uv_1.y * -0.9999971));\\n  uv2_4.y = ((uv_1.x * -0.9999971) + (uv_1.y * -0.00238894));\\n  uv2_4 = (uv2_4 * aspect.yx);\\n  dist_3 = (1.0 - fract((0.75 + q30)));\\n  inten_2 = ((pow (dist_3, 0.3) * (1.0 - dist_3)) * 2.0);\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (((2.0 * uv2_4) * dist_3) + 0.5);\\n  xlat_mutableblur = ((texture (sampler_blur2, tmpvar_8).xyz * scale2) + bias2);\\n  xlat_mutableneu = (texture (sampler_main, tmpvar_8).xyz + xlat_mutableblur);\\n  xlat_mutableret1 = ((xlat_mutableret1 * 0.9) + (xlat_mutableneu * inten_2));\\n  uv2_4.x = ((uv_1.x * 0.9999949) - (uv_1.y * -0.003185092));\\n  uv2_4.y = ((uv_1.x * -0.003185092) + (uv_1.y * 0.9999949));\\n  uv2_4 = (uv2_4 * aspect.yx);\\n  dist_3 = (1.0 - fract((1.0 + q30)));\\n  inten_2 = ((pow (dist_3, 0.3) * (1.0 - dist_3)) * 2.0);\\n  vec2 tmpvar_9;\\n  tmpvar_9 = (((2.0 * uv2_4) * dist_3) + 0.5);\\n  xlat_mutableblur = ((texture (sampler_blur2, tmpvar_9).xyz * scale2) + bias2);\\n  xlat_mutableneu = (texture (sampler_main, tmpvar_9).xyz + xlat_mutableblur);\\n  xlat_mutableret1 = ((xlat_mutableret1 * 0.9) + (xlat_mutableneu * inten_2));\\n  vec4 tmpvar_10;\\n  tmpvar_10.w = 1.0;\\n  tmpvar_10.xyz = (xlat_mutableret1 + (vec3(0.0, 0.0, 0.15) * rad));\\n  ret = tmpvar_10.xyz;\\n }"}')},5929:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":3,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":0.001,"wave_scale":0.958,"wave_smoothing":0.45,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0.05,"ob_g":0.1,"ob_b":1,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":25.6,"mv_y":9.6,"mv_l":0,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"textured":1,"x":0.09,"y":0.9,"rad":0.22437,"tex_zoom":1.76002,"r2":1,"g2":0,"a2":0.6,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"additive":1,"x":0.26,"y":0.2,"rad":0.39317,"tex_zoom":6.19589,"r":0,"g":0.55,"b":0.5,"g2":0.4,"b2":0.4,"a2":0.07,"border_r":0.3,"border_g":0.7,"border_b":0.8,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":44,"additive":1,"x":0.503,"rad":0.03886,"tex_zoom":0.60986,"g":0.1,"a":0.9,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"rad":0.01,"tex_zoom":0.49981,"r":0,"g2":0,"border_r":0.2,"border_g":0.7,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"samples":282,"sep":20,"usedots":1,"thick":1,"additive":1,"scaling":3.91581,"smoothing":0.1,"r":0.2,"g":0.3,"a":0.6,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"usedots":1,"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"r":0,"g":0.2,"b":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"//******** INITIALIZATION *********\\n//---------- some global vars, do not change -------------\\navg = 0.01;\\nq7 = .25; //MyZoom\\nq8 =  rand(2.0)-1.0; //fractal modifier\\n//q8 = 1; //#\\nq16 = 1 + rand(2); //Tele ; rather fish eye\\n//q16 = 1; //#\\nq18 = rand(0.8)+.1; //brightness balance back/front\\nq30 = 1; //logarithmic Z-Dist storage; unused\\nq31 =128;\\nstart = 1; travel = 0; RotZ = 0; look = 0; slow = 0; t0 = time+3; lampx = .5; lampy = .5;\\ncran0 = rand(1);\\nn = 0; loop (10000, gmegabuf(n)=0; n=n+1; );\\nn = 0; loop (10000,  megabuf(n)=0; n=n+1; );\\ntrelx = 0;  trely = 0; trelz = 0;\\nreg20 = 1; reg21 = 0; reg22 = 0; reg23 = 0; reg24 = 1; reg25 = 0; reg26 = 0; reg27 = 0; reg28 = 1;\\n\\n//Find random starting point\\nwhile (exec2(\\n  ran1 = rand(800)/100;  ran2 = rand(800)/100;  ran3 = rand(800)/100;\\n  PosX = rand(5)-2;   PosY = rand(5)-2;   PosZ = rand(5)-2;\\n\\n//  PosX = 3.3; PosY = 2; PosZ = -2; ran1 = 0; ran2 = 0; ran3 = 0; //#\\n\\n  c1 = cos(ran1); c2 = cos(ran2); c3 = cos(ran3);\\n  s1 = sin(ran1); s2 = sin(ran2); s3 = sin(ran3);\\n\\n  reg20 = c2*c1; reg21 = c2*s1; reg22 = -s2;\\n  reg23 = s3*s2*c1 - c3*s1; reg24 = s3*s2*s1 + c3*c1; reg25 = s3*c2;\\n  reg26 = c3*s2*c1 + s3*s1; reg27 = c3*s2*s1 - s3*c1; reg28 = c3*c2;\\n\\n  //***********BOT*************\\n  //Coord. Trans. must exactly match def in warp S. !!!!\\n  dist = 0.001;\\n  while (exec2(\\n    uvx = reg26*dist/q7; uvy = reg27*dist/q7; uvz = reg28*dist/q7;\\n    uvx += PosX; uvy += PosY; uvz += PosZ;\\n    uvx = 8.0*((uvx/8+30.5 - int(uvx/8+30.5))-.5);\\n    uvy = 8.0*((uvy/8+30.5 - int(uvy/8+30.5))-.5);\\n    uvz = 8.0*((uvz/8+30.5 - int(uvz/8+30.5))-.5);\\n    uvx0 = uvx+q8; uvy0 = uvy+q8; uvz0 = uvz+q8;\\n    loop (7+1,\\n      uvx = if (uvx > 1, 2-uvx, if(uvx < -1, -2-uvx, uvx));\\n      uvy = if (uvy > 1, 2-uvy, if(uvy < -1, -2-uvy, uvy));\\n      uvz = if (uvz > 1, 2-uvz, if(uvz < -1, -2-uvz, uvz));\\n      slen = uvx*uvx + uvy*uvy + uvz*uvz;\\n      uvx = if (slen < 0.25, uvx*4, if (slen < 1, uvx/slen, uvx)) *2.6 + uvx0;\\n      uvy = if (slen < 0.25, uvy*4, if (slen < 1, uvy/slen, uvy)) *2.6 + uvy0;\\n      uvz = if (slen < 0.25, uvz*4, if (slen < 1, uvz/slen, uvz)) *2.6 + uvz0;\\n    );\\n    len = sqrt(uvx*uvx + uvy*uvy + uvz*uvz);\\n    dist *= 1.05;\\n  ,(dist < 0.6)*(len > 30)));\\n,(dist < .06))); //end while","frame_eqs_eel":"fps_ = .0 * fps_ + 1*if(fps<=25,fps,25+.5*(fps-25));\\ndec_s = 1-.06*30/fps_;\\nbeat = (time >  t0+3); t0 = if(beat, time, t0);\\n\\nspeed = min(0.2,dist_-.02) * (1+2*avg) *(1-slow*.0)*.7/q7; //#\\nds = ds * dec_s + (1-dec_s)*speed*.25/fps_;\\nRotZ = if (RotZ==0,beat*(rand(100)<20*travel)*(rand(10)/10-.3),\\n                   bnot(beat*(rand(100)<30))*RotZ);\\nslow = if (bnot(slow), beat*(rand(1000*avg)<6), bnot(beat*(rand(100)<50)));\\nlook = if (bnot(look), beat*(rand(1000*speed)<12), bnot(beat*(rand(100)<50)));\\n\\n//Lamp View\\nlx = if (beat,rand(150)/200+.15,lx);\\nly = if (beat,rand(150)/200+.15,ly);\\nlampx = lampx * dec_s + (1-dec_s)*if (look,lx,0.5);\\nlampy = lampy * dec_s + (1-dec_s)*if (look,ly,0.5);\\nq1 = lampx; q2 = lampy;\\n\\n//Position\\nDirX= reg26; DirY= reg27; DirZ = reg28;\\nPosX = PosX + ds*DirX ; PosY = PosY + ds*DirY; PosZ = PosZ + ds*DirZ;\\nq4 = PosX; q5 = PosY; q6 = PosZ;\\n\\nangchg = (.2-dist_)*(dist_ < .2)*2;\\ntravel = if (angchg > 0,0,travel+ds);\\nv1 = v1 * dec_s + (1-dec_s)* RotZ * ds;\\nv2 = v2 *dec_s + (1-dec_s)*angchg *xslope/fps_;\\nv3 = v3 *dec_s + (1-dec_s)*(angchg *yslope/fps_ + 2*v1*sin(time*.1));\\n//v2 = .008;\\n//push old RotMat\\nreg30 =reg20; reg31 =reg21; reg32 =reg22;\\nreg33 =reg23; reg34 =reg24; reg35 =reg25;\\nreg36 =reg26; reg37 =reg27; reg38 =reg28;\\n\\nn = 0; avg = 0;\\nloop (5,\\n  n = n+1;\\n  //new Rot. Mat for infinitesimal angles\\n  ran1 = rand(100)/100;\\n  ran2 = rand(100)/200-.25;\\n  tx = cos(n*1.57+ran2) * (n <= 4)*ran1; ty = sin(n*1.57+ran2) * (n <= 4)*ran1;\\n  c1 = cos(v1); c2 = cos(v2+ty); c3 = cos(v3+tx);\\n  s1 = sin(v1); s2 = sin(v2+ty); s3 = sin(v3+tx);\\n  reg10 = c2*c1; reg11 = c2*s1; reg12 = -s2;\\n  reg13 = s3*s2*c1 - c3*s1; reg14 = s3*s2*s1 + c3*c1; reg15 = s3*c2;\\n  reg16 = c3*s2*c1 + s3*s1; reg17 = c3*s2*s1 - s3*c1; reg18 = c3*c2;\\n\\n  //pop old RotMat\\n  reg20 =reg30; reg21 =reg31; reg22 =reg32;\\n  reg23 =reg33; reg24 =reg34; reg25 =reg35;\\n  reg26 =reg36; reg27 =reg37; reg28 =reg38;\\n\\n  //Multiply new RotMat by old one\\n  q20 = reg10*reg20 + reg11*reg23 + reg12*reg26;\\n  q21 = reg10*reg21 + reg11*reg24 + reg12*reg27;\\n  q22 = reg10*reg22 + reg11*reg25 + reg12*reg28;\\n  q23 = reg13*reg20 + reg14*reg23 + reg15*reg26;\\n  q24 = reg13*reg21 + reg14*reg24 + reg15*reg27;\\n  q25 = reg13*reg22 + reg14*reg25 + reg15*reg28;\\n  q26 = reg16*reg20 + reg17*reg23 + reg18*reg26;\\n  q27 = reg16*reg21 + reg17*reg24 + reg18*reg27;\\n  q28 = reg16*reg22 + reg17*reg25 + reg18*reg28;\\n\\n  reg20 =q20; reg21 =q21; reg22 =q22;\\n  reg23 =q23; reg24 =q24; reg25 =q25;\\n  reg26 =q26; reg27 =q27; reg28 =q28;\\n\\n  //***********BOT*************\\n  //Coord. Trans. must exactly match def in warp S. !!!!\\n  dist = 0.002;\\n  while (exec2(\\n    uvx = reg26*dist/q7; uvy = reg27*dist/q7; uvz = reg28*dist/q7;\\n    uvx += PosX; uvy += PosY; uvz += PosZ;\\n    uvx = 8.0*((uvx/8+30.5 - int(uvx/8+30.5))-.5);\\n    uvy = 8.0*((uvy/8+30.5 - int(uvy/8+30.5))-.5);\\n    uvz = 8.0*((uvz/8+30.5 - int(uvz/8+30.5))-.5);\\n    uvx0 = uvx+q8; uvy0 = uvy+q8; uvz0 = uvz+q8;\\n    loop (7+1,\\n      uvx = if (uvx > 1, 2-uvx, if(uvx < -1, -2-uvx, uvx));\\n      uvy = if (uvy > 1, 2-uvy, if(uvy < -1, -2-uvy, uvy));\\n      uvz = if (uvz > 1, 2-uvz, if(uvz < -1, -2-uvz, uvz));\\n      slen = uvx*uvx + uvy*uvy + uvz*uvz;\\n      uvx = if (slen < 0.25, uvx*4, if (slen < 1, uvx/slen, uvx)) *2.6 + uvx0;\\n      uvy = if (slen < 0.25, uvy*4, if (slen < 1, uvy/slen, uvy)) *2.6 + uvy0;\\n      uvz = if (slen < 0.25, uvz*4, if (slen < 1, uvz/slen, uvz)) *2.6 + uvz0;\\n    );\\n    len = sqrt(uvx*uvx + uvy*uvy + uvz*uvz);\\n    dist *= 1.1;\\n  ,(dist < 0.6)*(len > 30)));\\n  megabuf(n) = megabuf(n)*dec_s + (1-dec_s)*dist; //stores the 4 trial points\\n  avg = avg+abs(megabuf(n)/5);\\n); //end loop 5\\n\\nn = 0; avg = 0; loop (5, n=n+1; avg = avg+abs(megabuf(n)/5));\\n\\nxslope = min(max(2/avg*(megabuf(1)-megabuf(3)),-3),3);\\nyslope = min(max(2/avg*(megabuf(4)-megabuf(2)),-3),3);\\nmonitor = avg;\\ndist_ = dist_*dec_s + (1-dec_s)*dist;\\n\\nq10 = ds*q7; //compensation of lin. movement in GetDist and zoom uv\\nq14 = 1*abs(ds) + 2*(abs(v1) + abs(v2) + abs(v3)) + 1.0/255 + start*.05;\\nq19 = .6 + .4*sin(time*.02+cran0*6); //brightness backgd\\nstart = start * .9;\\nq11 = v1; q12 = v2; q13 = v3;\\n//forward comp. of Rotation\\nmonitor = q16;","pixel_eqs_eel":"warp = 0.0; zoom = 1; dx = -q12/q16*(1+0*pow(x-.5,2)); dy = q13/q16*(1+0*pow(y-.5,2)); rot =q11;","warp":"float sustain;\\nfloat xlat_mutabledist;\\nfloat xlat_mutablestruc;\\nvec2 xlat_mutableuv1;\\nvec3 xlat_mutableuv2;\\n shader_body { \\n  mat3 tmpvar_1;\\n  tmpvar_1[uint(0)].x = q20;\\n  tmpvar_1[uint(0)].y = q23;\\n  tmpvar_1[uint(0)].z = q26;\\n  tmpvar_1[1u].x = q21;\\n  tmpvar_1[1u].y = q24;\\n  tmpvar_1[1u].z = q27;\\n  tmpvar_1[2u].x = q22;\\n  tmpvar_1[2u].y = q25;\\n  tmpvar_1[2u].z = q28;\\n  vec3 tmpvar_2;\\n  tmpvar_2.x = q4;\\n  tmpvar_2.y = q5;\\n  tmpvar_2.z = q6;\\n  sustain = (0.98 - q14);\\n  vec2 uv_3;\\n  vec3 ret_4;\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (uv - 0.5);\\n  xlat_mutableuv1 = ((tmpvar_5 * aspect.xy) * q16);\\n  vec4 tmpvar_6;\\n  tmpvar_6 = texture (sampler_pc_main, uv);\\n  uv_3 = ((tmpvar_5 * (1.0 - \\n    (q10 / (1.0 - ((tmpvar_6.z + \\n      (0.003921569 * tmpvar_6.y)\\n    ) + (q10 * 0.7))))\\n  )) + 0.5);\\n  vec4 tmpvar_7;\\n  tmpvar_7 = fract((8.0 * texture (sampler_noise_lq, (uv_3 + rand_frame.yz))));\\n  xlat_mutabledist = tmpvar_7.x;\\n  if ((tmpvar_7.y > 0.2)) {\\n    vec3 tmpvar_8;\\n    tmpvar_8 = (tmpvar_7.xyz - vec3(0.4, 0.5, 0.5));\\n    vec2 uvi_9;\\n    uvi_9 = ((tmpvar_8.zy * 0.003) + uv_3);\\n    vec2 pix_10;\\n    vec4 nb2_11;\\n    vec4 nb_12;\\n    vec2 x_13;\\n    x_13 = (uvi_9 - 0.5);\\n    pix_10 = (texsize.zw * (1.0 + (\\n      sqrt(dot (x_13, x_13))\\n     * 8.0)));\\n    float tmpvar_14;\\n    tmpvar_14 = (q10 * 0.7);\\n    vec4 tmpvar_15;\\n    tmpvar_15 = texture (sampler_pc_main, (uvi_9 - pix_10));\\n    nb_12.x = (1.0 - ((tmpvar_15.z + \\n      (0.003921569 * tmpvar_15.y)\\n    ) + tmpvar_14));\\n    vec4 tmpvar_16;\\n    tmpvar_16 = texture (sampler_pc_main, (uvi_9 + (pix_10 * vec2(1.0, -1.0))));\\n    nb_12.y = (1.0 - ((tmpvar_16.z + \\n      (0.003921569 * tmpvar_16.y)\\n    ) + tmpvar_14));\\n    vec4 tmpvar_17;\\n    tmpvar_17 = texture (sampler_pc_main, (uvi_9 + pix_10));\\n    nb_12.z = (1.0 - ((tmpvar_17.z + \\n      (0.003921569 * tmpvar_17.y)\\n    ) + tmpvar_14));\\n    vec4 tmpvar_18;\\n    tmpvar_18 = texture (sampler_pc_main, (uvi_9 + (pix_10 * vec2(-1.0, 1.0))));\\n    nb_12.w = (1.0 - ((tmpvar_18.z + \\n      (0.003921569 * tmpvar_18.y)\\n    ) + tmpvar_14));\\n    vec4 tmpvar_19;\\n    tmpvar_19 = texture (sampler_pc_main, (uvi_9 + (pix_10 * vec2(0.0, -1.0))));\\n    nb2_11.x = (1.0 - ((tmpvar_19.z + \\n      (0.003921569 * tmpvar_19.y)\\n    ) + tmpvar_14));\\n    vec4 tmpvar_20;\\n    tmpvar_20 = texture (sampler_pc_main, (uvi_9 + (pix_10 * vec2(1.0, 0.0))));\\n    nb2_11.y = (1.0 - ((tmpvar_20.z + \\n      (0.003921569 * tmpvar_20.y)\\n    ) + tmpvar_14));\\n    vec4 tmpvar_21;\\n    tmpvar_21 = texture (sampler_pc_main, (uvi_9 + (pix_10 * vec2(0.0, 1.0))));\\n    nb2_11.z = (1.0 - ((tmpvar_21.z + \\n      (0.003921569 * tmpvar_21.y)\\n    ) + tmpvar_14));\\n    vec4 tmpvar_22;\\n    tmpvar_22 = texture (sampler_pc_main, (uvi_9 + (pix_10 * vec2(-1.0, 0.0))));\\n    nb2_11.w = (1.0 - ((tmpvar_22.z + \\n      (0.003921569 * tmpvar_22.y)\\n    ) + tmpvar_14));\\n    vec4 tmpvar_23;\\n    tmpvar_23 = min (nb_12, nb2_11);\\n    nb_12.zw = tmpvar_23.zw;\\n    nb_12.xy = min (tmpvar_23.xy, tmpvar_23.zw);\\n    xlat_mutabledist = (min (nb_12.x, nb_12.y) + ((0.008 * tmpvar_8.x) * abs(tmpvar_8.y)));\\n  };\\n  vec4 tmpvar_24;\\n  tmpvar_24 = texture (sampler_pc_main, uv_3);\\n  float tmpvar_25;\\n  tmpvar_25 = min (xlat_mutabledist, (1.0 - (\\n    (tmpvar_24.z + (0.003921569 * tmpvar_24.y))\\n   + \\n    (q10 * 0.7)\\n  )));\\n  xlat_mutabledist = tmpvar_25;\\n  float tmpvar_26;\\n  tmpvar_26 = (tmpvar_25 + pow (tmpvar_25, 3.0));\\n  vec3 tmpvar_27;\\n  tmpvar_27.xy = (xlat_mutableuv1 * tmpvar_26);\\n  tmpvar_27.z = tmpvar_26;\\n  xlat_mutableuv2 = (((tmpvar_27 / q7) * tmpvar_1) + tmpvar_2);\\n  xlat_mutableuv2 = ((fract(\\n    ((xlat_mutableuv2 / 8.0) + 0.5)\\n  ) - 0.5) * 8.0);\\n  float li_28;\\n  vec3 zz0_29;\\n  vec3 zz_30;\\n  zz0_29 = (xlat_mutableuv2 + q8);\\n  li_28 = 0.0;\\n  zz_30 = ((2.0 * clamp (xlat_mutableuv2, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - xlat_mutableuv2);\\n  float tmpvar_31;\\n  tmpvar_31 = dot (zz_30, zz_30);\\n  if ((tmpvar_31 <= 0.25)) {\\n    zz_30 = (zz_30 * 4.0);\\n    li_28 = 24.0;\\n  } else {\\n    if ((tmpvar_31 <= 1.0)) {\\n      zz_30 = (zz_30 / tmpvar_31);\\n    };\\n  };\\n  zz_30 = ((2.6 * zz_30) + zz0_29);\\n  zz_30 = ((2.0 * clamp (zz_30, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_30);\\n  float tmpvar_32;\\n  tmpvar_32 = dot (zz_30, zz_30);\\n  if ((tmpvar_32 <= 0.25)) {\\n    zz_30 = (zz_30 * 4.0);\\n    li_28 = 24.0;\\n  } else {\\n    if ((tmpvar_32 <= 1.0)) {\\n      zz_30 = (zz_30 / tmpvar_32);\\n    };\\n  };\\n  zz_30 = ((2.6 * zz_30) + zz0_29);\\n  zz_30 = ((2.0 * clamp (zz_30, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_30);\\n  float tmpvar_33;\\n  tmpvar_33 = dot (zz_30, zz_30);\\n  if ((tmpvar_33 <= 0.25)) {\\n    zz_30 = (zz_30 * 4.0);\\n    li_28 = 24.0;\\n  } else {\\n    if ((tmpvar_33 <= 1.0)) {\\n      zz_30 = (zz_30 / tmpvar_33);\\n    };\\n  };\\n  zz_30 = ((2.6 * zz_30) + zz0_29);\\n  zz_30 = ((2.0 * clamp (zz_30, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_30);\\n  float tmpvar_34;\\n  tmpvar_34 = dot (zz_30, zz_30);\\n  if ((tmpvar_34 <= 0.25)) {\\n    zz_30 = (zz_30 * 4.0);\\n    li_28 = 24.0;\\n  } else {\\n    if ((tmpvar_34 <= 1.0)) {\\n      zz_30 = (zz_30 / tmpvar_34);\\n    };\\n  };\\n  zz_30 = ((2.6 * zz_30) + zz0_29);\\n  zz_30 = ((2.0 * clamp (zz_30, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_30);\\n  float tmpvar_35;\\n  tmpvar_35 = dot (zz_30, zz_30);\\n  if ((tmpvar_35 <= 0.25)) {\\n    zz_30 = (zz_30 * 4.0);\\n    li_28 = 24.0;\\n  } else {\\n    if ((tmpvar_35 <= 1.0)) {\\n      zz_30 = (zz_30 / tmpvar_35);\\n    };\\n  };\\n  zz_30 = ((2.6 * zz_30) + zz0_29);\\n  zz_30 = ((2.0 * clamp (zz_30, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_30);\\n  float tmpvar_36;\\n  tmpvar_36 = dot (zz_30, zz_30);\\n  if ((tmpvar_36 <= 0.25)) {\\n    zz_30 = (zz_30 * 4.0);\\n    li_28 = 24.0;\\n  } else {\\n    if ((tmpvar_36 <= 1.0)) {\\n      zz_30 = (zz_30 / tmpvar_36);\\n    };\\n  };\\n  zz_30 = ((2.6 * zz_30) + zz0_29);\\n  zz_30 = ((2.0 * clamp (zz_30, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_30);\\n  float tmpvar_37;\\n  tmpvar_37 = dot (zz_30, zz_30);\\n  if ((tmpvar_37 <= 0.25)) {\\n    zz_30 = (zz_30 * 4.0);\\n    li_28 = 24.0;\\n  } else {\\n    if ((tmpvar_37 <= 1.0)) {\\n      zz_30 = (zz_30 / tmpvar_37);\\n    };\\n  };\\n  zz_30 = ((2.6 * zz_30) + zz0_29);\\n  zz_30 = ((2.0 * clamp (zz_30, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_30);\\n  float tmpvar_38;\\n  tmpvar_38 = dot (zz_30, zz_30);\\n  if ((tmpvar_38 <= 0.25)) {\\n    zz_30 = (zz_30 * 4.0);\\n    li_28 = 24.0;\\n  } else {\\n    if ((tmpvar_38 <= 1.0)) {\\n      zz_30 = (zz_30 / tmpvar_38);\\n    };\\n  };\\n  zz_30 = ((2.6 * zz_30) + zz0_29);\\n  vec4 tmpvar_39;\\n  tmpvar_39.xyz = zz_30;\\n  tmpvar_39.w = li_28;\\n  float tmpvar_40;\\n  tmpvar_40 = sqrt(dot (zz_30, zz_30));\\n  xlat_mutablestruc = (sqrt(dot (tmpvar_39.xyw, tmpvar_39.xyw)) / 24.0);\\n  vec4 tmpvar_41;\\n  tmpvar_41 = texture (sampler_pc_main, uv_3);\\n  float tmpvar_42;\\n  float tmpvar_43;\\n  tmpvar_43 = (q10 * 0.7);\\n  tmpvar_42 = ((log(\\n    (1.0 + (tmpvar_40 / 24.0))\\n  ) * 0.02) * (1.0 - (1.0 - \\n    ((tmpvar_41.z + (0.003921569 * tmpvar_41.y)) + tmpvar_43)\\n  )));\\n  float tmpvar_44;\\n  vec4 tmpvar_45;\\n  tmpvar_45 = texture (sampler_pc_main, uv_3);\\n  tmpvar_44 = (1.0 - ((tmpvar_45.z + \\n    (0.003921569 * tmpvar_45.y)\\n  ) + tmpvar_43));\\n  if ((((tmpvar_25 <= tmpvar_44) && (tmpvar_40 < 24.0)) && (tmpvar_25 > 0.005))) {\\n    ret_4.x = (((1.0 - sustain) * xlat_mutablestruc) + (sustain * mix (texture (sampler_main, uv_3).xyz, \\n      ((texture (sampler_blur1, uv_3).xyz * scale1) + bias1)\\n    , vec3(\\n      (q14 * 4.0)\\n    )).x));\\n    float x_46;\\n    x_46 = ((1.0 - tmpvar_25) * 255.0);\\n    float ip_47;\\n    ip_47 = float(int(x_46));\\n    vec2 tmpvar_48;\\n    tmpvar_48.x = (x_46 - ip_47);\\n    tmpvar_48.y = (ip_47 / 255.0);\\n    ret_4.yz = tmpvar_48;\\n  } else {\\n    vec3 tmpvar_49;\\n    tmpvar_49.y = 0.0;\\n    tmpvar_49.x = sustain;\\n    tmpvar_49.z = (1.0 - tmpvar_42);\\n    vec3 tmpvar_50;\\n    tmpvar_50.xy = vec2(0.003921569, 0.0);\\n    tmpvar_50.z = (q14 / 6.0);\\n    ret_4 = ((texture (sampler_fc_main, uv_3).xyz * tmpvar_49) - tmpvar_50);\\n  };\\n  vec4 tmpvar_51;\\n  tmpvar_51.w = 1.0;\\n  tmpvar_51.xyz = ret_4;\\n  ret = tmpvar_51.xyz;\\n }","comp":" shader_body { \\n  vec3 tmpvar_1;\\n  tmpvar_1.x = q4;\\n  tmpvar_1.y = q5;\\n  tmpvar_1.z = q6;\\n  mat3 tmpvar_2;\\n  tmpvar_2[uint(0)].x = q20;\\n  tmpvar_2[uint(0)].y = q23;\\n  tmpvar_2[uint(0)].z = q26;\\n  tmpvar_2[1u].x = q21;\\n  tmpvar_2[1u].y = q24;\\n  tmpvar_2[1u].z = q27;\\n  tmpvar_2[2u].x = q22;\\n  tmpvar_2[2u].y = q25;\\n  tmpvar_2[2u].z = q28;\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = q1;\\n  tmpvar_3.y = q2;\\n  vec2 uv_4;\\n  vec3 ret_5;\\n  uv_4 = (((uv - 0.5) * 0.9) + 0.5);\\n  vec3 tmpvar_6;\\n  tmpvar_6.xy = ((uv_4 - 0.5) * min ((1.0 - texture (sampler_main, uv_4).z), (1.0 - \\n    ((texture (sampler_blur2, uv_4).xyz * scale2) + bias2)\\n  .z)));\\n  tmpvar_6.z = min ((1.0 - texture (sampler_main, uv_4).z), (1.0 - (\\n    (texture (sampler_blur2, uv_4).xyz * scale2)\\n   + bias2).z));\\n  float tmpvar_7;\\n  tmpvar_7 = clamp ((abs(\\n    ((1.0 - ((texture (sampler_blur2, uv_4).xyz * scale2) + bias2).z) - clamp ((1.0 - (\\n      (texture (sampler_blur2, tmpvar_3).xyz * scale2)\\n     + bias2).z), 0.1, 0.4))\\n  ) + 0.2), 0.0, 1.0);\\n  float tmpvar_8;\\n  tmpvar_8 = clamp (((1.0 - \\n    exp(-(((texture (sampler_blur1, uv_4).xyz * scale1) + bias1).x))\\n  ) - 0.2), 0.0, 1.0);\\n  ret_5 = ((mix (texture (sampler_main, uv_4).xyz, \\n    ((texture (sampler_blur1, uv_4).xyz * scale1) + bias1)\\n  , vec3(tmpvar_7)).x * (0.2 + \\n    ((1.0 - tmpvar_7) * (1.0 - min ((1.0 - texture (sampler_main, uv_4).z), (1.0 - \\n      ((texture (sampler_blur2, uv_4).xyz * scale2) + bias2)\\n    .z))))\\n  )) * (1.0 + (0.5 * \\n    sin((((tmpvar_6 / q7) * tmpvar_2) + tmpvar_1))\\n  )));\\n  vec3 tmpvar_9;\\n  tmpvar_9.xy = vec2(0.0, 1.0);\\n  tmpvar_9.z = (tmpvar_8 * 3.0);\\n  ret_5 = (mix (ret_5, tmpvar_9, vec3(tmpvar_8)) + ((\\n    pow ((1.0 - mix (texture (sampler_main, uv_4).xyz, (\\n      (texture (sampler_blur1, uv_4).xyz * scale1)\\n     + bias1), vec3(0.8, 0.8, 0.8)).z), 3.0)\\n   * \\n    (0.5 + (0.5 * slow_roam_cos))\\n  ) * q19).xyz);\\n  ret_5 = (1.0 - exp((-2.0 * ret_5)));\\n  vec4 tmpvar_10;\\n  tmpvar_10.w = 1.0;\\n  tmpvar_10.xyz = ret_5;\\n  ret = tmpvar_10.xyz;\\n }"}')},4926:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.780001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"wave_mode":6,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.3116,"wave_scale":1.22891,"wave_smoothing":0,"wave_mystery":0.2,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1.4595,"warpscale":2.0067,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0,"wave_b":0,"ob_r":0.3999,"ob_b":0.5,"ib_size":0,"mv_x":12.799999,"mv_y":9.600006,"mv_l":0.05,"mv_b":0.4999,"mv_a":0,"b1x":0.6999,"b1ed":0},"shapes":[{"baseVals":{"sides":100,"x":0.4999,"rad":0.143922,"tex_zoom":4.574821,"g":1,"b":1,"a":0.1,"r2":0.84,"g2":0.93,"b2":1,"border_r":0.8,"border_g":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":63,"additive":1,"rad":1.998625,"tex_zoom":0.499805,"g":1,"b":1,"a":0.1,"r2":1,"b2":1,"a2":0.6,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"\\ntrel = time/2+q20;\\n\\nx = .5+sin(trel);\\ny = .5+cos(trel*1.3 +q28/3);\\nrad = .03;\\na = q26/4+.2;  a2 = 0;\\na = .3;"},{"baseVals":{"sides":63,"textured":1,"x":0.123,"y":0,"rad":0.273185,"tex_zoom":0.499805,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":63,"textured":1,"y":1,"rad":0.548217,"tex_zoom":0.499805,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"thick":1,"scaling":0.891519,"smoothing":0.82,"a":0.6},"init_eqs_eel":"","frame_eqs_eel":"t1 = 1*cos(time/3);\\nt2 = 1*sin(time/7);\\n\\nvol = mid_att + treb_att;\\nvol_m = vol_m*0.999+vol*0.001;\\nexc = above (vol, vol_m*1.1);\\n\\npulse = 0.95*pulse + 0.05*exc;\\nwinkel = winkel + pulse/3;\\nt3 = winkel;\\n\\n\\n","point_eqs_eel":"  //Alle Funktionen muessen rel. zu t_rel sein\\n\\n\\nt_abs = sample;\\nt_rel = sample-time/6;\\nampl = sin(t_abs*3)-0.0;\\n\\nox = 3*sin (time) + ampl*(sin (t_rel*267)) ;\\noy = 3*cos (time) + ampl*(cos (t_rel*277)) ;\\noz = 0*cos (t_rel*time/23)+t_abs*4 ;\\n\\n\\nr = (1+sqr(sin(t_rel*3.4)))/2;\\ng = (1+sqr(sin(t_rel*2.3)))/2;\\nb = (1+sqr (cos(t_rel*.9)))/2;\\n\\na = .1;\\n\\nxang = t2+t3/3;\\nyang = t1*t2-t3/4;\\nzang = t3;\\nfov = 0.2;\\n\\n\\n// Rotation um x,y,z\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\n\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = -ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz =  mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\noz = oz - 6;\\nx = ox*fov/oz +0.5;\\n//x = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;\\n"},{"baseVals":{"samples":232,"usedots":1,"additive":1,"scaling":0.891519,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1 = 2*sin(time/15);\\nt2 = 2*sin(time/11);\\nmonitor = time;","point_eqs_eel":"\\nt_abs = sample;\\nt_rel = sample-time/5;\\nampl = time;\\n\\nox = ampl*10*sin (t_abs*68);\\noy = ampl*10*cos (t_abs*28);\\noz = ampl*10*cos (t_abs*128);\\n\\n\\nr = sin(t_abs*1335)+1;\\ng = sin(t_abs*1783)+1 ;\\nb = rand(5)/5 ;\\n\\na=0.5+0.25 * sin(t_rel*15);\\nxang = t1 ;\\nyang = t1;\\nzang = t1;\\nfov = 0.12;\\n\\n\\n// Rotation um x,y,z\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\n\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = -ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\noz = oz - 6;\\nx = ox*fov/oz +0.5;\\n//x = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;"},{"baseVals":{"scaling":0.891519,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ampl = time - int(time);\\naml = ampl/2;\\nx = .5 + ampl * sin(sample*230);\\ny = .5 + ampl * cos(sample*230);\\na = .03;"},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"dec_med = pow (0.8, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb);\\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .2+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %8;\\nindex2 = (index2 + is_beat*bnot(index))%2;\\nindex3 = (index3 + is_beat*bnot(index)*bnot(index2))%3;\\n\\nmonitor = index4;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass + mid + treb;\\nq11 = min(q22,3);\\n\\n//k1 =  is_beat*bnot(index)*bnot(index2);\\n\\nk1 =  is_beat*equal(index,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.14159265359/2;\\n\\nq27 = 8-index;\\nq28 = index2;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\nrota = rota*dec_med + (1-dec_med)*q22/2;\\n\\nzoom = 1.0 + .02*q1;\\nrot = .01*q2+rota/12*q2;\\ndx = .02*q1;\\ndy = .02*q2;\\n\\nwave_a = 0;\\n\\nmovex = movex + dx;\\nmovey = movey + dy;\\nmovez = movez + zoom-1;\\nq16 = rota;\\nq17 = movez;\\nq18 = movex; q19 = movey;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = (0.1 * sin((12.0 * uv)));\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = (((\\n    (0.0 / sqrt(dot (tmpvar_1, tmpvar_1)))\\n   * q24) + (texture (sampler_main, uv).xyz * 0.994)) - 0.004);\\n  ret = tmpvar_2.xyz;\\n }","comp":"vec2 xlat_mutabledz;\\nvec3 xlat_mutableneu;\\nvec3 xlat_mutableret1;\\nvec2 xlat_mutableuv3;\\n shader_body { \\n  vec2 uv_1;\\n  float inten_2;\\n  float dist_3;\\n  vec2 uv2_4;\\n  uv_1 = (((uv - 0.5) * aspect.xy) + 0.5);\\n  vec2 tmpvar_5;\\n  tmpvar_5.y = 0.0;\\n  tmpvar_5.x = texsize.z;\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = 0.0;\\n  tmpvar_6.y = texsize.w;\\n  xlat_mutabledz.x = dot ((texture (sampler_main, (uv_1 + tmpvar_5)).xyz - texture (sampler_main, (uv_1 - tmpvar_5)).xyz), vec3(0.32, 0.49, 0.29));\\n  xlat_mutabledz.y = dot ((texture (sampler_main, (uv_1 + tmpvar_6)).xyz - texture (sampler_main, (uv_1 - tmpvar_6)).xyz), vec3(0.32, 0.49, 0.29));\\n  uv2_4 = (uv_1 - 0.5);\\n  dist_3 = (1.0 - fract(q17));\\n  inten_2 = ((sqrt(dist_3) * (1.0 - \\n    (dist_3 * dist_3)\\n  )) * 4.0);\\n  xlat_mutableuv3 = (((2.0 * uv2_4) * dist_3) + 0.5);\\n  xlat_mutableuv3 = (xlat_mutableuv3 * aspect.yx);\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = q18;\\n  tmpvar_7.y = q19;\\n  xlat_mutableuv3 = (cos((\\n    (42.0 * fract(xlat_mutableuv3))\\n   - \\n    (8.0 * tmpvar_7)\\n  )) + xlat_mutabledz);\\n  float tmpvar_8;\\n  tmpvar_8 = clamp ((0.01 / sqrt(\\n    dot (xlat_mutableuv3, xlat_mutableuv3)\\n  )), 0.0, 1.0);\\n  xlat_mutableneu = ((dist_3 * vec3(tmpvar_8)) + ((1.0 - dist_3) * dot (vec3(tmpvar_8), vec3(0.32, 0.49, 0.29))));\\n  xlat_mutableret1 = max (vec3(0.0, 0.0, 0.0), (xlat_mutableneu * inten_2));\\n  dist_3 = (1.0 - fract((0.3333333 + q17)));\\n  inten_2 = ((sqrt(dist_3) * (1.0 - \\n    (dist_3 * dist_3)\\n  )) * 4.0);\\n  xlat_mutableuv3 = (((2.0 * uv2_4) * dist_3) + 0.5);\\n  xlat_mutableuv3 = (xlat_mutableuv3 * aspect.yx);\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = q18;\\n  tmpvar_9.y = q19;\\n  xlat_mutableuv3 = (cos((\\n    (42.0 * fract(xlat_mutableuv3))\\n   - \\n    (8.0 * tmpvar_9)\\n  )) + xlat_mutabledz);\\n  float tmpvar_10;\\n  tmpvar_10 = clamp ((0.01 / sqrt(\\n    dot (xlat_mutableuv3, xlat_mutableuv3)\\n  )), 0.0, 1.0);\\n  xlat_mutableneu = ((dist_3 * vec3(tmpvar_10)) + ((1.0 - dist_3) * dot (vec3(tmpvar_10), vec3(0.32, 0.49, 0.29))));\\n  xlat_mutableret1 = max (xlat_mutableret1, (xlat_mutableneu * inten_2));\\n  dist_3 = (1.0 - fract((0.6666667 + q17)));\\n  inten_2 = ((sqrt(dist_3) * (1.0 - \\n    (dist_3 * dist_3)\\n  )) * 4.0);\\n  xlat_mutableuv3 = (((2.0 * uv2_4) * dist_3) + 0.5);\\n  xlat_mutableuv3 = (xlat_mutableuv3 * aspect.yx);\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = q18;\\n  tmpvar_11.y = q19;\\n  xlat_mutableuv3 = (cos((\\n    (42.0 * fract(xlat_mutableuv3))\\n   - \\n    (8.0 * tmpvar_11)\\n  )) + xlat_mutabledz);\\n  float tmpvar_12;\\n  tmpvar_12 = clamp ((0.01 / sqrt(\\n    dot (xlat_mutableuv3, xlat_mutableuv3)\\n  )), 0.0, 1.0);\\n  xlat_mutableneu = ((dist_3 * vec3(tmpvar_12)) + ((1.0 - dist_3) * dot (vec3(tmpvar_12), vec3(0.32, 0.49, 0.29))));\\n  xlat_mutableret1 = max (xlat_mutableret1, (xlat_mutableneu * inten_2));\\n  dist_3 = (1.0 - fract((1.0 + q17)));\\n  inten_2 = ((sqrt(dist_3) * (1.0 - \\n    (dist_3 * dist_3)\\n  )) * 4.0);\\n  xlat_mutableuv3 = (((2.0 * uv2_4) * dist_3) + 0.5);\\n  xlat_mutableuv3 = (xlat_mutableuv3 * aspect.yx);\\n  vec2 tmpvar_13;\\n  tmpvar_13.x = q18;\\n  tmpvar_13.y = q19;\\n  xlat_mutableuv3 = (cos((\\n    (42.0 * fract(xlat_mutableuv3))\\n   - \\n    (8.0 * tmpvar_13)\\n  )) + xlat_mutabledz);\\n  float tmpvar_14;\\n  tmpvar_14 = clamp ((0.01 / sqrt(\\n    dot (xlat_mutableuv3, xlat_mutableuv3)\\n  )), 0.0, 1.0);\\n  xlat_mutableneu = ((dist_3 * vec3(tmpvar_14)) + ((1.0 - dist_3) * dot (vec3(tmpvar_14), vec3(0.32, 0.49, 0.29))));\\n  xlat_mutableret1 = max (xlat_mutableret1, (xlat_mutableneu * inten_2));\\n  vec4 tmpvar_15;\\n  tmpvar_15.w = 1.0;\\n  tmpvar_15.xyz = ((xlat_mutableret1 * q22) + ((\\n    (texture (sampler_blur1, (uv_1 + (0.1 * xlat_mutabledz))).xyz * scale1)\\n   + bias1) * 2.0));\\n  ret = tmpvar_15.xyz;\\n }"}')},8248:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.980001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.958178,"wave_smoothing":0.45,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.4595,"warpscale":2.0067,"zoom":0.9999,"warp":0.01,"sx":0.9999,"ob_r":0.3999,"ob_a":0.2,"ib_size":0,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.4999,"mv_g":0.4999,"mv_b":0.4999,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"rad":0.048958,"tex_ang":1.00531,"tex_zoom":1.531168,"r":0.5,"g":1,"b":0.9,"r2":0.83,"g2":0.93,"b2":0.8,"a2":1,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"\\ntrel = time/3;\\n\\nx = .5+sin(trel*2);\\ny = .5+cos(trel*1.3);\\n\\n\\n\\ncent = sqrt((x-.5)*(x-.5)+(y-.5)*(y-.5));\\n\\nrad = .1*cent;\\na = .8;"},{"baseVals":{"enabled":1,"sides":100,"additive":1,"x":0.26,"y":0.2,"rad":0.393173,"tex_zoom":0.9355,"r":0,"g":0.55,"b":0.5,"g2":0.4,"b2":0.4,"a2":0.07,"border_r":0.3,"border_g":0.7,"border_b":0.8,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"trig = q24;\\n\\n\\nx0 = x0*bnot(trig) + trig*(.5+ rand(100)/200); \\ny0 = y0*bnot(trig) + trig*(.5+ rand(100)/200); \\n\\n\\nx0 = x0 + .1*q1*(3+q26)/fps;\\ny0 = y0 + .1*q2*(3+q26)/fps;\\n\\nx0 = x0 - int(x0);\\ny0 = y0 - int(y0);\\n\\ntex_ang = time;\\ntex_zoom = q1;\\nang = time/100*q2;\\nx = x0; y = y0;\\nrad0 = rad0*bnot(trig) + trig*(.04+rand(100)/1000);\\nrad = rad0;\\n\\n\\nr0 = bnot(trig)*r0 + trig * rand(10)/10;\\ng0 = bnot(trig)*g0 + trig * rand(10)/10;\\nb0 = bnot(trig)*b0 + trig * rand(10)/10;\\n\\nr = r0; b = b0; g = g0;\\nr2 = 0; b2 = 0; g2 = 0;\\na= 1; a2 = .3; "},{"baseVals":{"sides":44,"additive":1,"x":0.503,"rad":0.038857,"tex_zoom":0.609857,"g":0.1,"a":0.9,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = rand(50)/50;\\ny = .5 - 0*rand(15)/200;\\n\\nr = .4;\\ng = .6;\\nb = 1;\\nr2 = r;\\ng2 = g;\\nb2 = b;\\n\\na = min(q21/2 ,.9);\\nrad = a * (.1+abs(x-.5))/2 ;"},{"baseVals":{"sides":100,"rad":0.01,"tex_zoom":0.499805,"r":0,"g2":0,"border_r":0.2,"border_g":0.7,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"rad = q2+.02\\n;"}],"waves":[{"baseVals":{"samples":282,"sep":20,"thick":1,"additive":1,"scaling":3.915805,"smoothing":0.1,"r":0.2,"g":0.3,"a":0.6,"enabled":0},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"t2 = t2 + bass_att;","point_eqs_eel":"\\nx = sample;\\ny = value1 * rand(50)/100 * abs(sample-.5)+ .49;\\n\\na = q26/4 * (.2 + abs(sample-.5)); "},{"baseVals":{"usedots":1,"thick":1,"scaling":0.891519,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"xi = rand(100)/100;\\nyi = rand(100)/100;\\n\\nx = xi; y = yi;\\n\\na = q21/15;"},{"baseVals":{"thick":1,"scaling":0.891519,"smoothing":0.82,"r":0,"g":0.2,"b":0,"enabled":0},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"dec_med = pow (0.9, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .2+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %8;\\nindex2 = (index2 + is_beat*bnot(index))%2;\\nindex3 = (index3 + is_beat*bnot(index)*bnot(index2))%3;\\n\\nmonitor = index4;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass + mid + treb;\\nq11 = min(q22,3);\\n\\n//k1 =  is_beat*bnot(index)*bnot(index2);\\n\\nk1 =  is_beat*equal(index,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.14159265359/2;\\n\\nq27 = 8-index;\\nq28 = index2;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\nzoom = 1.0 + .02*q1;\\nrot = .01*q2;\\ndx = .0*index;\\n\\nwave_a = 0;","pixel_eqs_eel":"","warp":"float xlat_mutabledx;\\nfloat xlat_mutabledy;\\nvec2 xlat_mutableuv2;\\nvec2 xlat_mutablezz;\\n shader_body { \\n  vec2 uv_1;\\n  vec3 crisp_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3.y = 0.0;\\n  tmpvar_3.x = texsize.w;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = 0.0;\\n  tmpvar_4.y = texsize.z;\\n  xlat_mutablezz = ((uv * texsize.xy) * 0.01);\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = (cos((xlat_mutablezz.y * q1)) * sin(-(xlat_mutablezz.y)));\\n  tmpvar_5.y = (sin(xlat_mutablezz.x) * cos((xlat_mutablezz.y * q2)));\\n  uv_1 = (uv - ((tmpvar_5 * texsize.zw) * (8.0 + \\n    (6.0 * q11)\\n  )));\\n  xlat_mutableuv2 = (((uv_1 / 2.0) * q27) / 4.0);\\n  xlat_mutabledx = dot ((texture (sampler_main, (xlat_mutableuv2 + tmpvar_3)).xyz - texture (sampler_main, (xlat_mutableuv2 - tmpvar_3)).xyz), vec3(0.32, 0.49, 0.29));\\n  xlat_mutabledy = dot ((texture (sampler_main, (xlat_mutableuv2 + tmpvar_4)).xyz - texture (sampler_main, (xlat_mutableuv2 - tmpvar_4)).xyz), vec3(0.32, 0.49, 0.29));\\n  float tmpvar_6;\\n  tmpvar_6 = (0.15 + (0.1 * q28));\\n  vec2 tmpvar_7;\\n  tmpvar_7 = (xlat_mutableuv2 + (time / 100.0));\\n  xlat_mutabledx = (xlat_mutabledx + (tmpvar_6 * (texture (sampler_noise_hq, tmpvar_7).x - 0.5)));\\n  xlat_mutabledy = (xlat_mutabledy + (tmpvar_6 * (texture (sampler_noise_hq, tmpvar_7).y - 0.5)));\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = xlat_mutabledx;\\n  tmpvar_8.y = xlat_mutabledy;\\n  xlat_mutablezz = tmpvar_8;\\n  crisp_2 = (texture (sampler_main, (uv_1 + (tmpvar_8 * 0.04))).xyz + texture (sampler_main, uv_1).xyz);\\n  crisp_2 = (crisp_2 * 0.5);\\n  crisp_2 = (crisp_2 + ((0.05 * \\n    (0.9 + (0.1 * roam_cos))\\n  .xyz) - (\\n    sqrt(dot (tmpvar_8, tmpvar_8))\\n   * 0.3)));\\n  vec4 tmpvar_9;\\n  tmpvar_9.w = 1.0;\\n  tmpvar_9.xyz = ((crisp_2 * 0.97) - 0.015);\\n  ret = tmpvar_9.xyz;\\n }","comp":"vec2 xlat_mutabledz;\\nvec3 xlat_mutableneu;\\nvec3 xlat_mutableret1;\\nvec2 xlat_mutableuv3;\\n shader_body { \\n  vec2 uv2_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2.y = 0.0;\\n  tmpvar_2.x = texsize.z;\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = 0.0;\\n  tmpvar_3.y = texsize.w;\\n  xlat_mutabledz.x = dot ((texture (sampler_main, (uv + tmpvar_2)).xyz - texture (sampler_main, (uv - tmpvar_2)).xyz), vec3(0.32, 0.49, 0.29));\\n  xlat_mutabledz.y = dot ((texture (sampler_main, (uv + tmpvar_3)).xyz - texture (sampler_main, (uv - tmpvar_3)).xyz), vec3(0.32, 0.49, 0.29));\\n  uv2_1 = (uv - 0.5);\\n  xlat_mutableuv3 = ((0.2 * uv2_1) + 0.5);\\n  float tmpvar_4;\\n  tmpvar_4 = (time / 2.0);\\n  xlat_mutableuv3 = ((0.2 * cos(\\n    ((42.0 * fract(xlat_mutableuv3)) + tmpvar_4)\\n  )) + (99.0 * xlat_mutabledz));\\n  float tmpvar_5;\\n  tmpvar_5 = clamp ((0.01 / sqrt(\\n    dot (xlat_mutableuv3, xlat_mutableuv3)\\n  )), 0.0, 1.0);\\n  xlat_mutableneu = ((0.1 * vec3(tmpvar_5)) + (0.9 * dot (vec3(tmpvar_5), vec3(0.32, 0.49, 0.29))));\\n  xlat_mutableret1 = max (vec3(0.0, 0.0, 0.0), (xlat_mutableneu * 1.252262));\\n  xlat_mutableuv3 = ((0.2 * uv2_1) + 0.5);\\n  xlat_mutableuv3 = ((0.2 * cos(\\n    ((42.0 * fract(xlat_mutableuv3)) + tmpvar_4)\\n  )) + (99.0 * xlat_mutabledz));\\n  float tmpvar_6;\\n  tmpvar_6 = clamp ((0.01 / sqrt(\\n    dot (xlat_mutableuv3, xlat_mutableuv3)\\n  )), 0.0, 1.0);\\n  xlat_mutableneu = ((0.1 * vec3(tmpvar_6)) + (0.9 * dot (vec3(tmpvar_6), vec3(0.32, 0.49, 0.29))));\\n  xlat_mutableret1 = max (xlat_mutableret1, (xlat_mutableneu * 1.252262));\\n  vec4 tmpvar_7;\\n  tmpvar_7.w = 1.0;\\n  tmpvar_7.xyz = (xlat_mutableret1 + clamp ((\\n    (16.0 * ((0.5 * texture (sampler_main, (uv + \\n      (0.1 * xlat_mutabledz)\\n    )).xyz) + 0.01))\\n   * \\n    (0.1 + xlat_mutableret1)\\n  ), 0.0, 1.0));\\n  ret = tmpvar_7.xyz;\\n }"}')},7667:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0,"ob_b":0.2,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":25,"additive":1,"num_inst":4,"rad":0.02339,"tex_ang":0.62832,"g":1,"b":1,"a":0.5,"g2":0,"a2":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.002*cos(ma));\\nmy=my+(.002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx+instance*.005;\\ny=my+instance*.005;\\n\\na=(above(bass+mid+treb,.2));\\npi23=4*asin(1)*.333333333;\\nvol=bass+mid+treb;\\nr=(sin(1/instance*time*.2+vol-0*pi23)+1)*.5;\\ng=(sin(1/instance*time*.2+vol-1*pi23)+1)*.5;\\nb=(sin(1/instance*time*.2+vol-2*pi23)+1)*.5;"},{"baseVals":{"enabled":1,"sides":25,"additive":1,"num_inst":6,"rad":0.02248,"a":0.7,"g2":0,"a2":0.1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,.7)*3.1415*.03*bass);\\nma=ma-(above(treb,.7)*3.1415*.03*treb);\\n\\nmx=mx+(.0015*cos(ma));\\nmy=my+(.0015*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx+instance*.003;\\ny=my+instance*.003;\\n\\na=(above(bass+mid+treb,.2));\\npi23=4*asin(1)*.333333333;\\nvol=bass+mid+treb;\\nr=(sin(1/instance*time*.3+vol-0*pi23)+1)*.5;\\ng=(sin(1/instance*time*.4+vol-1*pi23)+1)*.5;\\nb=(sin(1/instance*time*.35+vol-2*pi23)+1)*.5;"},{"baseVals":{"enabled":1,"sides":25,"additive":1,"num_inst":4,"rad":0.0303,"a":0.7,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,.3)*3.1415*.05*bass);\\nma=ma-(above(treb,.3)*3.1415*.05*treb);\\n\\nmx=mx+(.0055*cos(ma));\\nmy=my+(.0055*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx+instance*.003;\\ny=my+instance*.003;\\n\\na=(above(bass+mid+treb,.2));\\npi23=4*asin(1)*.333333333;\\nvol=bass+mid+treb;\\nr=(sin(1/instance*time*.5+vol-0*pi23)+1)*.5;\\ng=(sin(1/instance*time*.8+vol-1*pi23)+1)*.5;\\nb=(sin(1/instance*time*.25+vol-2*pi23)+1)*.5;"},{"baseVals":{"enabled":1,"sides":25,"additive":1,"num_inst":4,"rad":0.02248,"r":0,"a":0.7,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,.11)*3.1415*.07*bass);\\nma=ma-(above(treb,.11)*3.1415*.07*treb);\\n\\nmx=mx+(.0085*cos(ma));\\nmy=my+(.0085*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx+instance*.003;\\ny=my+instance*.003;\\n\\na=(above(bass+mid+treb,.2));\\npi23=4*asin(1)*.333333333;\\nvol=bass+mid+treb;\\nr=(sin(1/instance*time*.3+vol-0*pi23)+1)*.5;\\ng=(sin(1/instance*time*.4+vol-1*pi23)+1)*.5;\\nb=(sin(1/instance*time*.35+vol-2*pi23)+1)*.5;"}],"waves":[{"baseVals":{"enabled":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));\\npi23=4*asin(1)*.333333333;\\nvol=bass+mid+treb;\\nr=(sin(time*.3+vol-0*pi23)+1)*.5;\\ng=(sin(time*.3+vol-1*pi23)+1)*.5;\\nb=(sin(time*.3+vol-2*pi23)+1)*.5;"},{"baseVals":{"enabled":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));\\npi23=4*asin(1)*.333333333;\\nvol=bass+mid+treb;\\nr=(sin(time*.3+vol-0*pi23)+1)*.5;\\ng=(sin(time*.3+vol-1*pi23)+1)*.5;\\nb=(sin(time*.3+vol-2*pi23)+1)*.5;"},{"baseVals":{"enabled":1,"usedots":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));\\npi23=4*asin(1)*.333333333;\\nvol=bass+mid+treb;\\nr=(sin(time*.3+vol-0*pi23)+1)*.5;\\ng=(sin(time*.3+vol-1*pi23)+1)*.5;\\nb=(sin(time*.3+vol-2*pi23)+1)*.5;"},{"baseVals":{"enabled":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));\\npi23=4*asin(1)*.333333333;\\nvol=bass+mid+treb;\\nr=(sin(time*.3+vol-0*pi23)+1)*.5;\\ng=(sin(time*.3+vol-1*pi23)+1)*.5;\\nb=(sin(time*.3+vol-2*pi23)+1)*.5;"}],"init_eqs_eel":"p1 = 2000; p2 = 200; p3=50;","frame_eqs_eel":"dec_med = pow (0.9, 30/fps);\\ndec_slow = pow (0.9, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .1+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %16;\\nindex2 = (index2 + is_beat*bnot(index))%5;\\nmonitor = index2;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass + mid + treb;\\nq27 = index;\\nq28 = index2;\\n\\nk1 =  is_beat*equal(index%2,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott_ = p2 * 3.1416/4;\\n\\nrott =  rott +  .2*30/fps*q2;\\n\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\nran = bnot(q24)*ran + q24 * (int(rand(50))-24);\\ntran = tan(ran);\\ntran = max(tran,-5);\\ntran = min(tran,5);\\n\\ntrel = trel + .02*30/fps*tran+q24;\\nq5 = cos(trel);\\nq6 = sin(trel);\\nq7 = -q6;\\nq8 = q5;\\n\\nmovex = movex*dec_slow + .1*sin(rott)*30/fps;\\nq9 = movex;\\n\\nspd = spd*bnot(q24) + q26*q24;\\nmovez = movez + .005*30/fps*spd;\\nq30 = movez;\\n//q30 = .3* (sin(time/45) + 1.5);\\n\\nmv_x = 20;\\nmv_y = 15;\\nmv_a = .1;\\nmv_l = 0;\\n\\nq18 = sin(time/7);\\nq19 = sin(time/11);\\n\\nq32 = pow(0.98, 30/fps); //fade","pixel_eqs_eel":"zoom = 1;\\nwarp = .1;","warp":" shader_body { \\n  float dy_1;\\n  float dx_2;\\n  vec3 ret_3;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = ((uv * texsize.xy) * texsize_noise_lq.zw);\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (texsize.zw * 4.0);\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = (((2.0 * \\n    ((texture (sampler_blur1, (uv + (vec2(1.0, 0.0) * tmpvar_5))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv - (vec2(1.0, 0.0) * tmpvar_5))).xyz * scale1) + bias1)\\n  )).y * 0.5);\\n  tmpvar_6.y = (((2.0 * \\n    ((texture (sampler_blur1, (uv + (vec2(0.0, 1.0) * tmpvar_5))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv - (vec2(0.0, 1.0) * tmpvar_5))).xyz * scale1) + bias1)\\n  )).y * 0.5);\\n  ret_3.y = texture (sampler_fw_main, clamp ((uv + (\\n    (tmpvar_6 * texsize.zw)\\n   * 4.0)), 0.0, 1.0)).y;\\n  ret_3.y = (ret_3.y + ((\\n    (ret_3 - ((texture (sampler_blur1, uv).xyz * scale1) + bias1))\\n  .y * 0.025) + -0.01));\\n  ret_3.y = (ret_3.y + ((texture (sampler_noise_lq, tmpvar_4).y - 0.5) * 0.02));\\n  dx_2 = (((2.0 * \\n    ((texture (sampler_blur1, (uv + (vec2(1.0, 0.0) * tmpvar_5))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv - (vec2(1.0, 0.0) * tmpvar_5))).xyz * scale1) + bias1)\\n  )).z * 0.5);\\n  dy_1 = (((2.0 * \\n    ((texture (sampler_blur1, (uv + (vec2(0.0, 1.0) * tmpvar_5))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv - (vec2(0.0, 1.0) * tmpvar_5))).xyz * scale1) + bias1)\\n  )).z * 0.5);\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = dx_2;\\n  tmpvar_7.y = dy_1;\\n  ret_3.z = ((texture (sampler_main, (uv - \\n    ((tmpvar_7 * texsize.zw) * 4.0)\\n  )).z - (ret_3.y * 0.01)) + 0.004);\\n  ret_3.z = (ret_3.z + ((texture (sampler_noise_lq, tmpvar_4).y - 0.5) * 0.01));\\n  dx_2 = (((2.0 * \\n    ((texture (sampler_blur1, (uv + (tmpvar_5 * vec2(1.0, 0.0)))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv + (tmpvar_5 * vec2(-1.0, 0.0)))).xyz * scale1) + bias1)\\n  )).x * 0.5);\\n  dy_1 = (((2.0 * \\n    ((texture (sampler_blur1, (uv + (tmpvar_5 * vec2(0.0, 1.0)))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv + (tmpvar_5 * vec2(0.0, -1.0)))).xyz * scale1) + bias1)\\n  )).x * 0.5);\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = dx_2;\\n  tmpvar_8.y = dy_1;\\n  vec2 tmpvar_9;\\n  tmpvar_9 = (tmpvar_8 * texsize.zw);\\n  vec2 domain_10;\\n  domain_10 = (uv - (tmpvar_9 * 2.5));\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 0.0;\\n  tmpvar_11.xyz = max (vec4(0.0, 0.0, 0.0, 0.0), texture (sampler_fc_main, (domain_10 + (texsize.zw * vec2(-1.0, 0.0))))).xyz;\\n  vec4 tmpvar_12;\\n  tmpvar_12.w = 0.0;\\n  tmpvar_12.xyz = max (tmpvar_11, texture (sampler_fc_main, (domain_10 + (texsize.zw * vec2(0.0, -1.0))))).xyz;\\n  vec4 tmpvar_13;\\n  tmpvar_13.w = 0.0;\\n  tmpvar_13.xyz = max (tmpvar_12, texture (sampler_fc_main, domain_10)).xyz;\\n  vec4 tmpvar_14;\\n  tmpvar_14.w = 0.0;\\n  tmpvar_14.xyz = max (tmpvar_13, texture (sampler_fc_main, (domain_10 + (texsize.zw * vec2(0.0, 1.0))))).xyz;\\n  ret_3.x = ((max (tmpvar_14, texture (sampler_fc_main, \\n    (domain_10 + (texsize.zw * vec2(1.0, 0.0)))\\n  )).x + (\\n    (texture (sampler_main, (uv + (tmpvar_9 * 4.0))).x - ((texture (sampler_blur1, (uv + \\n      (tmpvar_9 * 4.0)\\n    )).xyz * scale1) + bias1).x)\\n   * 0.206)) - 0.09);\\n  vec4 tmpvar_15;\\n  tmpvar_15.w = 1.0;\\n  tmpvar_15.xyz = ret_3;\\n  ret = tmpvar_15.xyz;\\n }","comp":" shader_body { \\n  vec2 dz_1;\\n  vec3 dy_2;\\n  vec3 dx_3;\\n  vec2 d_4;\\n  vec3 ret_5;\\n  vec2 tmpvar_6;\\n  vec2 tmpvar_7;\\n  tmpvar_7 = (vec2(1.0, 0.0) * texsize.zw);\\n  tmpvar_6.x = (texture (sampler_main, (uv + tmpvar_7)).xyz - texture (sampler_main, (uv - tmpvar_7)).xyz).y;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (vec2(0.0, 1.0) * texsize.zw);\\n  tmpvar_6.y = (texture (sampler_main, (uv + tmpvar_8)).xyz - texture (sampler_main, (uv - tmpvar_8)).xyz).y;\\n  d_4 = (texsize.zw * 2.0);\\n  dx_3 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * d_4))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * d_4))\\n  ).xyz * scale1) + bias1));\\n  dy_2 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * d_4))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * d_4))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = dx_3.y;\\n  tmpvar_9.y = dy_2.y;\\n  dz_1 = ((tmpvar_6 * 3.0) + tmpvar_9);\\n  ret_5 = (vec3(((\\n    pow ((sqrt(dot (dz_1, dz_1)) * 0.8), 0.7)\\n   + \\n    (((texture (sampler_blur2, uv).xyz * scale2) + bias2).y * 0.4)\\n  ) - 0.1)) * vec3(0.3, 0.5, 0.7));\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = dx_3.x;\\n  tmpvar_10.y = dy_2.x;\\n  vec3 tmpvar_11;\\n  tmpvar_11 = mix (mix (ret_5, vec3(0.2, 0.1, 0.0), vec3((texture (sampler_main, \\n    (uv + ((tmpvar_10 * texsize.zw) * 18.0))\\n  ).x * 6.0))), vec3(1.0, 1.0, 1.0), texture (sampler_main, uv).zzz);\\n  ret_5 = tmpvar_11;\\n  vec4 tmpvar_12;\\n  tmpvar_12.w = 1.0;\\n  tmpvar_12.xyz = tmpvar_11;\\n  ret = tmpvar_12.xyz;\\n }"}')},4324:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1.980001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"modwavealphabyvolume":1,"darken":1,"wave_a":0.001,"wave_scale":10.437056,"wave_smoothing":0.45,"wave_mystery":0.08,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.4595,"warpscale":2.0067,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0.99,"ob_size":0,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.4999,"mv_g":0.4999,"mv_b":0.4999,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"rad":0.048958,"tex_ang":1.00531,"tex_zoom":1.531168,"r":0.5,"g":1,"b":0.9,"r2":0.83,"g2":0.93,"b2":0.8,"a2":1,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"\\ntrel = time/2+q20;\\n\\nx = .5+sin(trel*2);\\ny = .5+cos(trel*1.3 +q28/3);\\n\\na = q26/4+.2; \\n//a = 1;"},{"baseVals":{"thickoutline":1,"x":0.4,"rad":2.366958,"tex_ang":3.455753,"tex_zoom":0.993053,"r":0.5,"b":1,"a":0.2,"r2":0.7,"g2":0.4,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"a2 =0;a = 0;\\na = q24/2;"},{"baseVals":{"enabled":1,"x":0.503,"rad":0.038857,"tex_zoom":0.609857,"g":0.1,"a":0.9,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = rand(10)/10;\\ny = rand(10)/10;\\n\\nr = rand(4)/3;\\ng = rand(4)/3;\\nb = rand(4)/3;\\n\\n\\nis_beat = above(time, t0+.03);\\nt0 = is_beat*time + (1-is_beat)*t0;\\n\\n \\na = min(q21/2 ,.9) * is_beat;\\nrad = a*a/3 ;"},{"baseVals":{"sides":63,"textured":1,"y":1,"rad":0.548217,"tex_zoom":0.499805,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"sep":120,"additive":1,"scaling":0.891519,"smoothing":0.82,"a":0.6},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"t2 = t2 + bass_att;","point_eqs_eel":"k1 = (sample*100)%8;\\nk2 = bnot (k1);\\nxi = value1*k2 + xi*(1-k2);\\nyi = value2*(1-k2) + yi*k2;\\n\\ndx = dx*.99 + xi;\\ndy = dy*.99 + yi;\\n\\nx = .5 + xi/2;\\ny = .5 + yi/2;\\n\\na = q22/8; \\na = min(a,.2);"},{"baseVals":{"usedots":1,"thick":1,"scaling":0.891519,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"tm = time*.1;\\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\\n\\ntic = min(time - tin,1);\\ntin = time;\\n\\ntva = (tic*q1*.5);\\ntvb = (tic*q2*.5);\\ntvc = (tic*q3*.5);\\n\\nq1 = tva;\\nq2 = tvb;\\nq3 = tvc;\\n\\nsz = .5;\\nlen = q4;\\nt4 = len;","point_eqs_eel":"xi = rand(100)/100;\\nyi = rand(100)/100;\\n\\nx = xi; y = yi;\\n\\na = q21/15;"},{"baseVals":{"thick":1,"scaling":0.891519,"smoothing":0.82,"r":0,"g":0.2,"b":0,"enabled":0},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"tm = time*.1;\\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\\n\\ntic = min(time - tin,1);\\ntin = time;\\n\\ntva = (tic*q1*.5);\\ntvb = (tic*q2*.5);\\ntvc = (tic*q3*.5);\\n\\nq1 = tva;\\nq2 = tvb;\\nq3 = tvc;\\n\\nsz = .5;\\nlen = 1;\\nt4 = len;","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"fade = .5;","frame_eqs_eel":"dec_med = pow (0.9, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %8;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass + mid + treb;\\n\\nk1 =  is_beat*equal(index,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.14159265358/2;\\nq27 = index + 1;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\nzoom = 1.0;\\nrot = -0.00 * index;\\n\\nfade = fade*dec_med + pow(0.996, 30/fps) * (1-dec_med);\\nq32 = fade;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 zz_1;\\n  mat2 tmpvar_2;\\n  tmpvar_2[uint(0)] = _qa.xy;\\n  tmpvar_2[1u] = _qa.zw;\\n  zz_1 = (((\\n    (uv - vec2(0.5, 0.5))\\n   * texsize.xy) * (0.015 * q27)) * tmpvar_2);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = (((q32 * texture (sampler_main, \\n    (uv + ((clamp (\\n      (sin(zz_1) / cos(zz_1))\\n    , vec2(-20.0, -20.0), vec2(20.0, 20.0)) * texsize.zw) * 8.0))\\n  ).xyz) + (\\n    (0.03 * texture (sampler_noise_lq, ((uv * 0.3) + (0.01 * rand_frame).xy)))\\n  .xyz * \\n    (1.0 - ((texture (sampler_blur1, uv).xyz * scale1) + bias1))\\n  )) - 0.02);\\n  ret = tmpvar_3.xyz;\\n }","comp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1 = texture (sampler_main, uv);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ((tmpvar_1.xyz + clamp (\\n    (3.0 * (((texture (sampler_blur1, \\n      (uv - (0.01 * tmpvar_1.xyz).xy)\\n    ).xyz * scale1) + bias1) - vec3(0.1, 0.1, 0.2)))\\n  , 0.0, 1.0)) * 1.3);\\n  ret = tmpvar_2.xyz;\\n }"}')},357:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":3,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"darken":1,"wave_a":0.005,"wave_scale":0.118,"wave_smoothing":0.9,"wave_mystery":-0.48,"modwavealphastart":0.4,"modwavealphaend":1.6,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0.15,"ob_r":0.2,"ob_g":0.2,"ob_b":0.2,"ib_size":0.1,"ib_r":0.6,"ib_g":0.6,"ib_b":0.6,"mv_x":64,"mv_y":48,"mv_l":2.5,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b3x":0.7,"b1ed":0},"shapes":[{"baseVals":{"sides":34,"additive":1,"thickoutline":1,"x":0.9,"rad":0.10864,"tex_ang":1.00531,"tex_zoom":0.12726,"g":1,"b":1,"a":0,"r2":0.1,"g2":0,"b2":0.3,"border_a":0.4,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"num_inst":100,"x":0.26,"y":0.2,"rad":0.02007,"tex_zoom":0.9355,"r2":0.4,"g2":0,"a2":1,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":14,"num_inst":400,"x":0.65,"y":0.38,"rad":0.01645,"tex_zoom":0.73678,"r":0.6,"g":0.4,"b":1,"a":0.2,"g2":0,"a2":0.4,"border_r":0.5,"border_g":0.5,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":10,"thickoutline":1,"num_inst":400,"x":0.8,"y":0.75,"rad":0.07316,"tex_zoom":1.04372,"g":1,"b2":1,"a2":1,"border_g":0.8,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"thick":1,"additive":1,"scaling":1.07408,"smoothing":0,"r":0,"g":0.5},"init_eqs_eel":"","frame_eqs_eel":"t1 = 0;\\nt2 = 0;\\nt3 = 0;","point_eqs_eel":"num_inst = reg00;\\ninstance = t1;\\n\\nrx1 = gmegabuf (instance*8+5);\\nrx2 = gmegabuf ((num_inst-instance-1)*8+5); //mirrored\\n\\nry1 = gmegabuf (instance*8+6);\\nry2 = gmegabuf ((num_inst-instance-1)*8+6);//mirrored\\n\\nkx = 0.1* q1;\\nky = 0.15 * q1;\\n\\n\\nx0 = (rx1 - rx2)*kx * (abs (sample-0.5)*2+0);;\\n\\ncx = 0.75 ;\\nx = x0+(1-cx)/2 + cx*sample + q13*q3 * (abs(sample-0.5)-0.);\\n\\n\\ny0 = (ry1+ry2)*ky + .0*q13*(abs(sample-0.5)-0.3);\\ny = y0+0.55;\\n\\n\\nang1 = atan2 (x0,y0);\\n\\na = 0.5 + sin(ang1)/3;\\n\\nr = 0.5 + 0.3*sin(rx1*12+sample*12+2);\\ng = 0.5 + 0.3*sin(rx2*12+sample*12+1);\\nb = 0.5 + 0.3*sin(ry1*12+sample*12);\\n\\n\\nt1 += 1;"},{"baseVals":{"samples":128,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"samples":32,"scaling":0.89152,"smoothing":0.82,"r":0,"g":0.2,"b":0.6,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"additive":1,"scaling":1.81669,"smoothing":0,"r":0.8,"g":0.4,"b":0.7,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"n = -10000; loop (20000, megabuf(n)=0; gmegabuf(n)=0; n +=1; );\\n\\nMINBPM = 35; MAXBPM = 220; num_res = 512; \\nindex = 0;\\nloop (num_res,\\n  n = index*8;\\n  BPM      = minbpm * pow(maxbpm/minbpm,index/(num_res-1));\\n  megabuf(n) = BPM;\\n  index += 1;\\n);\\n\\n\\n//structure of resonator data, starting at megabuf (0)\\n//size = 8\\n//0: BPM\\n//1: v\\n//2: y\\n//3: amplitude\\n//4: amplitude after harmonics post processing\\n//5: beatcos\\n//6: beatsin\\n\\n\\npi = 3.1416;\\nreg00 = num_res;","frame_eqs_eel":"dt = min (1/fps,0.1) ; //Stability !\\ndec_m = 1 - 4*dt; dec_s = 1 - 1.25*dt;\\nvol =  (bass+mid+treb); \\n\\nvol_ = vol_*dec_m + (1-dec_m)*vol; exc = vol-vol_;\\nexcite = atan (exc*2)/1.6;\\n\\nindex=0; ratio = log(maxbpm/minbpm); maxquad = .5; meanquad = 0;\\nloop (num_res,\\n  n = index*8;\\n  omega      =   megabuf(n) * 6.2832/60;\\n  megabuf (n+1) *= 1-0.22*dt; //damping\\n  EC_Steps = int (10*omega*dt)+1; \\n  loop (EC_Steps, // Euler-Cauchy steps\\n    megabuf (n+1) += (excite - sqr(omega)*megabuf(n + 2)) * dt/EC_Steps;\\n    megabuf (n+2) += megabuf(n+1) * dt/EC_Steps);\\n  beatcos  = megabuf(n+1);  \\n  beatsin = megabuf(n+2)*omega; //2pi/60\\n  quad     = sqrt (pow(beatsin,2) + pow(beatcos,2)) ;\\n  if (maxquad < quad, maxquad = quad, 0);\\n  meanquad += quad / num_res;\\n  megabuf (n+3) = megabuf(n+3) *dec_s +  quad* (1-dec_s);\\n  megabuf (n+4) = megabuf(n+3);\\n  megabuf (n+5) = beatcos;\\n  megabuf (n+6) = beatsin ;\\n  index += 1;\\n);\\n\\nn = 0; maxind = 0;\\nloop (num_res,\\n  scale =  (1+megabuf(n+3)/2)/3; \\n  if (megabuf(n+3) > megabuf(maxind+3), maxind = n, 0);\\n  gmegabuf(n+5) = megabuf(n+5) * scale;\\n  gmegabuf(n+6) = megabuf(n+6) * scale;\\nn+=8;);\\n\\n\\nsig0 = sig;\\nsig = megabuf(maxind+6);\\ngp = (maxquad* (1+gp*0.3) > 3.5*meanquad );\\nprog += (sig*sig0 <0) * gp;\\nq27 = ((prog%8)/4-1);\\n\\ngp2 = (maxquad* (1+gp2*0.3) > 7*meanquad );\\nprog2 += (sig*sig0 <0) * gp2;\\nq28 = prog2/3;\\nflash = if ((sig*sig0 < 0)* (maxquad > 8.5*meanquad),4, flash * 0.5) ;\\nq29 = flash;\\nmaxind0 = maxind;\\n\\nn = 0; imax = 0;\\nloop (num_res,\\n  q12 += megabuf(n*8+1);\\n  q13 += megabuf(n*8+2);\\nn+=1;);\\n\\nmaxquad_ = maxquad_*dec_m + (1-dec_m)*maxquad;\\nq1 = sqrt(3/maxquad_);\\ntr2 += maxquad_/fps;\\nq2 = tr2*1.85; //vert. mov. muster\\n\\nq3 = 0.01; //scale x-shift shapes\\n\\nq32 = aspecty;\\n\\n\\nmonitor = q15;","pixel_eqs_eel":"rot = 0; warp = 0; dy = -0.00;  dx = 0.00;\\n\\nzoom = 1.03;","warp":" shader_body { \\n  vec3 ret_1;\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ret_1;\\n  ret = tmpvar_2.xyz;\\n }","comp":"float iter;\\nvec2 xlat_mutableuv2;\\nfloat xlat_mutablez;\\n shader_body { \\n  iter = floor((10.0 * clamp (\\n    (texsize.x / 2048.0)\\n  , 0.0, 1.0)));\\n  vec2 uv_1;\\n  uv_1 = uv;\\n  float noise_3;\\n  vec3 ret_4;\\n  xlat_mutablez = (1.0/((uv.y - 0.2)));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = (xlat_mutablez * (uv.x - 0.5));\\n  tmpvar_5.y = xlat_mutablez;\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = 0.0;\\n  tmpvar_6.y = q2;\\n  xlat_mutableuv2 = ((tmpvar_5 + q28) + tmpvar_6);\\n  noise_3 = (texture (sampler_noise_lq, xlat_mutableuv2).x - (texture (sampler_noise_lq, (xlat_mutableuv2 + \\n    (texsize.z * 8.0)\\n  )).x * 0.8));\\n  noise_3 = (noise_3 * (1.0 - (\\n    (float((texture (sampler_pw_noise_lq, (\\n      (noise_3 * 0.001)\\n     + \\n      (xlat_mutableuv2 * vec2(0.08, 0.008))\\n    )).x > 0.85)) * float((xlat_mutablez >= 0.0)))\\n   / xlat_mutablez)));\\n  noise_3 = (noise_3 * (float(\\n    (xlat_mutablez > 0.0)\\n  ) / xlat_mutablez));\\n  ret_4 = texture (sampler_main, uv).xyz;\\n  for (int n_2 = 1; float(n_2) < iter; n_2++) {\\n    vec2 tmpvar_7;\\n    tmpvar_7.y = 0.0;\\n    tmpvar_7.x = float(n_2);\\n    vec2 tmpvar_8;\\n    tmpvar_8.y = 0.0;\\n    tmpvar_8.x = float(-(n_2));\\n    ret_4 = max (max (ret_4, texture (sampler_main, (uv_1 + \\n      (texsize.zw * tmpvar_7)\\n    )).xyz), texture (sampler_main, (uv_1 + (texsize.zw * tmpvar_8))).xyz);\\n  };\\n  float tmpvar_9;\\n  tmpvar_9 = clamp ((1.0 - (16.0 * \\n    dot (ret_4, vec3(0.32, 0.49, 0.29))\\n  )), 0.0, 1.0);\\n  float x_10;\\n  x_10 = ((uv.y * 8.0) - (dot (ret_4, vec3(0.32, 0.49, 0.29)) * 5.0));\\n  ret_4 = (ret_4 * vec3((0.1 + (0.15 / \\n    sqrt((x_10 * x_10))\\n  ))));\\n  ret_4 = (ret_4 + ((noise_3 * tmpvar_9) / 5.0));\\n  vec2 tmpvar_11;\\n  tmpvar_11.y = -0.5;\\n  tmpvar_11.x = (q27 + 0.5);\\n  vec2 x_12;\\n  x_12 = (uv - tmpvar_11);\\n  float tmpvar_13;\\n  tmpvar_13 = (1.0 - uv.y);\\n  ret_4 = (ret_4 + ((\\n    (((rand_preset / 2.0) * 2.0) * (tmpvar_13 * tmpvar_13))\\n   / 4.0) * tmpvar_9).xyz);\\n  ret_4 = (ret_4 + ((\\n    (pow (sqrt(dot (x_12, x_12)), -2.0) * vec3(0.4, 0.8, 1.0))\\n   * \\n    (0.2 + noise_3)\\n  ) * tmpvar_9));\\n  ret_4 = (ret_4 + ((\\n    (64.0 * ((texture (sampler_blur3, (\\n      (tmpvar_5 * vec2(0.33, 0.16))\\n     + vec2(0.5, 0.1))).xyz * scale3) + bias3))\\n   * tmpvar_9) * clamp (noise_3, 0.0, 1.0)));\\n  vec2 tmpvar_14;\\n  tmpvar_14.y = -0.1;\\n  float tmpvar_15;\\n  tmpvar_15 = (q27 / 5.0);\\n  tmpvar_14.x = (0.5 + tmpvar_15);\\n  ret_4 = (ret_4 * (1.0 - (\\n    dot (vec3(greaterThan ((\\n      (texture (sampler_blur1, ((tmpvar_5 * vec2(0.5, 0.37)) + tmpvar_14)).xyz * scale1)\\n     + bias1), vec3(0.02, 0.02, 0.02))), vec3(0.32, 0.49, 0.29))\\n   * 0.2)));\\n  vec2 tmpvar_16;\\n  tmpvar_16.y = -0.1;\\n  tmpvar_16.x = (0.505 + tmpvar_15);\\n  ret_4 = (ret_4 * (1.0 - (\\n    dot (vec3(greaterThan ((\\n      (texture (sampler_blur1, ((tmpvar_5 * vec2(0.5, 0.37)) + tmpvar_16)).xyz * scale1)\\n     + bias1), vec3(0.02, 0.02, 0.02))), vec3(0.32, 0.49, 0.29))\\n   * 0.2)));\\n  vec2 tmpvar_17;\\n  tmpvar_17.y = -0.1;\\n  tmpvar_17.x = (0.51 + tmpvar_15);\\n  ret_4 = (ret_4 * (1.0 - (\\n    dot (vec3(greaterThan ((\\n      (texture (sampler_blur1, ((tmpvar_5 * vec2(0.5, 0.37)) + tmpvar_17)).xyz * scale1)\\n     + bias1), vec3(0.02, 0.02, 0.02))), vec3(0.32, 0.49, 0.29))\\n   * 0.2)));\\n  vec4 tmpvar_18;\\n  tmpvar_18.w = 1.0;\\n  tmpvar_18.xyz = ret_4;\\n  ret = tmpvar_18.xyz;\\n }"}')},8341:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1.980001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"wave_mode":1,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"darken":1,"wave_a":0.001,"wave_scale":2.232543,"wave_smoothing":0.81,"wave_mystery":-0.12,"modwavealphastart":0.47,"modwavealphaend":1.32,"warpanimspeed":1.4595,"warpscale":2.0067,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0,"wave_b":0.3,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.4999,"mv_g":0.4999,"mv_b":0.4999,"mv_a":0,"b1ed":0.7},"shapes":[{"baseVals":{"enabled":1,"y":0.06,"rad":0.981146,"ang":0.753982,"tex_zoom":0.33105,"r":0,"g":0.7,"b":0.79,"a":0.08,"g2":0.5,"b2":0.69,"a2":0.03,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"textured":1,"rad":0.476928,"ang":1.130974,"tex_zoom":1.02315,"g":1,"b":1,"a":0.97,"r2":1,"b2":1,"a2":0.1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0.81,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ang = time;"},{"baseVals":{"sides":63,"textured":1,"x":0.123,"y":0,"rad":0.273185,"tex_zoom":0.499805,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":63,"textured":1,"y":1,"rad":0.548217,"tex_zoom":0.499805,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"spectrum":1,"usedots":1,"thick":1,"scaling":0.891519,"smoothing":0,"a":0.6,"enabled":0},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"t2 = t2 + bass_att;","point_eqs_eel":"\\nx = .5 + sample*((100*sample)%2-.5);\\nk1 = (100*sample)%4;\\nx = sample ;\\n\\nval = value1;\\ny = val * (.25-(sample-.5)*(sample-.5)) + .45;\\n\\nk1 = (10*bass_att)%4;\\n\\n\\nr = .8; g = .8; b = 1;\\na = bnot(k1); a = .1;"},{"baseVals":{"thick":1,"scaling":0.891519,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.891519,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ra = .8;\\nrb = .5;\\npib = 6.28318530718;\\n\\n\\ntic = min(time-tin,.1);\\ntin = if(equal(sample,0),time,tin);\\n\\nmod = 1.5 + .5*sin(time*.15);\\nmed = 1.5 + .5*sin(time*.134);\\nmed = 5;\\namod = 3;\\n\\nvr = rand(10001)*.0001;\\nrb = rb + rand(10001)*.0001*.1;\\n\\na = vr;\\n\\nsa = vr*pib*.5;\\nsp = sa*mod + q1*1.3;\\nsam = sa*med - q1*.219;\\n\\nox = ra*sin(sam*pib);\\noy = ra*cos(sam*pib);\\nox = ox + rb*-cos(sp)*sin(sam*pib);\\noz = rb*-sin(sp);\\noy = oy + rb*-cos(sp)*cos(sam*pib);\\n\\n\\nxang = time*.132;\\nxang = q2;\\nyang = time*.153;\\nyang = q3;\\nzang = time*.110;\\nzang = q4;\\nfov = 0.6 + 0.2*sin(time);\\nfov = .5;\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = - ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\noz = oz - 2;\\nx = ox*fov/oz + 0.5;\\nx = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;\\n"}],"init_eqs_eel":"","frame_eqs_eel":"dec_med = pow (0.9, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %8;\\nindex2 = (index2 + is_beat*bnot(index))%5;\\nindex3 = (index3 + is_beat*bnot(index)*bnot(index2))%3;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass + mid + treb;\\n\\n//k1 =  is_beat*bnot(index)*bnot(index2);\\n\\nk1 =  is_beat*equal(index,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_slow * p2+ (1-dec_slow)*p1;\\nrott = p2 * 3.14159265359/2;\\n\\nq27 = 8-index;\\nq28 = index3;\\nq29 = index4;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\nwarp = .3 * sin((index+index2)/8*6.28);","pixel_eqs_eel":"rot = -.04*q2*(1-rad);\\ndx = .0;\\nzoom = 1.002+.04*rad ;","warp":" shader_body { \\n  vec2 dz_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = dot ((texture (sampler_main, (uv + vec2(0.002, 0.0))) - texture (sampler_main, (uv - vec2(0.002, 0.0)))), vec4(0.32, 0.49, 0.29, 0.0));\\n  tmpvar_2.y = dot ((texture (sampler_main, (uv + vec2(0.0, 0.002))) - texture (sampler_main, (uv - vec2(0.0, 0.002)))), vec4(0.32, 0.49, 0.29, 0.0));\\n  dz_1 = (sqrt(tmpvar_2) / 8.0);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ((texture (sampler_main, (\\n    (uv - (dz_1 * 0.01))\\n   + \\n    ((((texture (sampler_blur1, uv).xyz * scale1) + bias1) * 0.01) * q22)\\n  .xy)).xyz - (\\n    sqrt(dot (dz_1, dz_1))\\n   * 0.5)) + ((0.02 * vec3(\\n    (dot (texture (sampler_noise_lq, uv), vec4(0.32, 0.49, 0.29, 0.0)) - 0.2)\\n  )) * (1.0 - rad)));\\n  ret = tmpvar_3.xyz;\\n }","comp":"vec3 xlat_mutableret1;\\nvec2 xlat_mutablers;\\nvec2 xlat_mutablers0;\\nvec2 xlat_mutableuv3;\\n shader_body { \\n  vec2 uv_1;\\n  uv_1.x = uv.x;\\n  float z_2;\\n  uv_1.y = (uv.y - 0.1);\\n  vec2 tmpvar_3;\\n  tmpvar_3 = ((uv_1 - 0.5) * aspect.xy);\\n  z_2 = (0.3 / tmpvar_3.y);\\n  xlat_mutablers0.x = (tmpvar_3.x * z_2);\\n  xlat_mutablers0.y = z_2;\\n  xlat_mutablers.x = (xlat_mutablers0.x + (time / 2.0));\\n  xlat_mutablers.y = (z_2 + time);\\n  float tmpvar_4;\\n  tmpvar_4 = clamp ((12.0 * tmpvar_3.y), 0.0, 1.0);\\n  vec2 tmpvar_5;\\n  tmpvar_5 = fract(((tmpvar_3 + 0.5) - (\\n    ((vec3(dot (texture (sampler_noise_hq, (xlat_mutablers / 2.0)), vec4(0.32, 0.49, 0.29, 0.0))) - 0.55) * 0.1)\\n   * tmpvar_4).xy));\\n  vec2 tmpvar_6;\\n  tmpvar_6.y = 0.0;\\n  tmpvar_6.x = texsize.z;\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = 0.0;\\n  tmpvar_7.y = texsize.w;\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = dot ((texture (sampler_main, (tmpvar_5 + tmpvar_6)).xyz - texture (sampler_main, (tmpvar_5 - tmpvar_6)).xyz), vec3(0.32, 0.49, 0.29));\\n  tmpvar_8.y = dot ((texture (sampler_main, (tmpvar_5 + tmpvar_7)).xyz - texture (sampler_main, (tmpvar_5 - tmpvar_7)).xyz), vec3(0.32, 0.49, 0.29));\\n  xlat_mutableuv3 = (tmpvar_5 + (tmpvar_8 * (1.0 - tmpvar_4)));\\n  vec2 x_9;\\n  x_9 = ((tmpvar_3 + 0.45) + (tmpvar_8 * 16.0));\\n  xlat_mutableret1 = (texture (sampler_main, fract(xlat_mutableuv3)).xyz * (1.0 - (tmpvar_4 / 2.0)));\\n  float tmpvar_10;\\n  tmpvar_10 = clamp ((1.0 - dot (\\n    (xlat_mutableret1 * 4.0)\\n  , vec3(0.32, 0.49, 0.29))), 0.0, 1.0);\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 1.0;\\n  tmpvar_11.xyz = (max ((xlat_mutableret1 + \\n    ((vec3((0.02 / sqrt(\\n      dot (x_9, x_9)\\n    ))) * (1.0 - tmpvar_4)) * 2.0)\\n  ), vec3((\\n    (clamp ((1.0/((float(mod (\\n      ((uv.x * 3234224.0) * uv_1.y)\\n    , 22345.0))))), 0.0, 1.0) * (1.0 - tmpvar_4))\\n   * tmpvar_10))) + clamp ((\\n    (q22 * clamp (((\\n      (0.01 * abs((xlat_mutableuv3.x - 0.5)))\\n     / \\n      abs((xlat_mutableuv3.y - 0.55))\\n    ) - (tmpvar_8 * 4.0)), 0.0, 1.0).x)\\n   * tmpvar_10), 0.0, 1.0));\\n  ret = tmpvar_11.xyz;\\n }"}')},8851:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1.980001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"darken":1,"wave_a":0.001,"wave_scale":2.232543,"wave_smoothing":0.81,"wave_mystery":0.28,"modwavealphastart":0.47,"modwavealphaend":1.32,"warpanimspeed":0.01,"warpscale":0.01,"zoom":1.001832,"dx":1,"warp":0.01,"sx":0.999997,"wave_r":0,"wave_g":0,"wave_b":0,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.4999,"mv_g":0.4999,"mv_b":0.4999,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"sides":18,"textured":1,"x":0.57,"rad":0.099499,"tex_zoom":3.264423,"g":1,"b":1,"a":0.6,"r2":1,"b2":1,"border_b":0,"border_a":0.02,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"textured":1,"rad":0.476928,"ang":1.130974,"tex_zoom":1.02315,"g":1,"b":1,"a":0.97,"r2":1,"b2":1,"a2":0.1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0.81,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":63,"textured":1,"x":0.123,"y":0,"rad":0.273185,"tex_zoom":0.499805,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":63,"textured":1,"y":1,"rad":0.548217,"tex_zoom":0.499805,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"additive":1,"scaling":0.891519,"smoothing":0.82,"a":0.6,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.891519,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.891519,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"shift = 0;\\nstep = 0;","frame_eqs_eel":"dec_med = pow (0.8, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .4+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %4;\\nindex2 = (index2 + is_beat*bnot(index))%4;\\n\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass_att + mid_att + treb_att;\\n\\nready = is_beat * bnot(ready) + bnot(is_beat2)*ready;\\nis_beat2 = ready * above (time, t0+.2);\\nq19 = is_beat2;\\n\\n//k1 =  is_beat*bnot(index)*bnot(index2);\\n\\nk1 =  is_beat*equal(index,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.14159265359/2;\\n\\nq27 = index+1;\\nq28 = index2+1;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\nmovex = movex +.002*30/fps;\\nq30 = movex;\\n\\nalt = alt * (1-dec_med) + q26*dec_med;\\nq26 = q26 - alt;\\nstep = step + 1*max(q26,0) + q24 -int(step);\\nq30 = step;\\nq30 = movex;\\n\\nlx = lx + .001*30/fps;\\nly = ly + .01*30/fps*q2;\\nq10 = lx;\\nq11 = 0;\\n\\n\\nzoom = (1.0  + .0*rad);\\ndx = .0;\\ndy = .00;\\nrot = .1*q1;","pixel_eqs_eel":"","warp":"vec3 xlat_mutablemus;\\n shader_body { \\n  vec2 uv_1;\\n  vec2 uv6_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = ((uv - 0.5) * aspect.xy);\\n  float tmpvar_4;\\n  tmpvar_4 = (((q28 - 1.0) * sqrt(\\n    dot (tmpvar_3, tmpvar_3)\\n  )) + (rand_frame * 86.0)).x;\\n  uv_1 = (uv + ((\\n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\\n  .xy * vec2(0.0, 1.0)) + (0.01 * \\n    clamp (((sin(tmpvar_4) / cos(tmpvar_4)) * normalize(tmpvar_3)), vec2(-18.0, -18.0), vec2(18.0, 18.0))\\n  )));\\n  uv6_2 = (0.4 * sin((\\n    ((tmpvar_3 * 2.0) * q28)\\n   + rand_frame.xy)));\\n  xlat_mutablemus = (vec3((0.06 / sqrt(\\n    dot (uv6_2, uv6_2)\\n  ))) * roam_sin.xyz);\\n  vec3 tmpvar_5;\\n  tmpvar_5 = mix (xlat_mutablemus, vec3(dot (xlat_mutablemus, vec3(0.32, 0.49, 0.29))), vec3(clamp ((0.2 * \\n    dot (xlat_mutablemus, vec3(0.32, 0.49, 0.29))\\n  ), 0.0, 1.0)));\\n  xlat_mutablemus = tmpvar_5;\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = ((q24 * (\\n    (((texture (sampler_main, (\\n      ((uv_1 - 0.5) * 1.01)\\n     + 0.48)).xyz - (\\n      ((texture (sampler_blur2, fract(uv_1)).xyz * scale2) + bias2)\\n     * 0.03)) + (0.15 * tmpvar_5)) * 0.97)\\n   - 0.02)) + ((1.0 - q24) * texture (sampler_main, uv_orig).xyz));\\n  ret = tmpvar_6.xyz;\\n }","comp":"vec2 xlat_mutabledz;\\nvec3 xlat_mutablemus;\\nvec3 xlat_mutableneu;\\nvec3 xlat_mutableret1;\\nvec2 xlat_mutableuv3;\\n shader_body { \\n  vec2 uv2_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2.y = 0.0;\\n  tmpvar_2.x = texsize.z;\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = 0.0;\\n  tmpvar_3.y = texsize.w;\\n  xlat_mutabledz.x = dot ((texture (sampler_main, (uv + tmpvar_2)).xyz - texture (sampler_main, (uv - tmpvar_2)).xyz), vec3(0.32, 0.49, 0.29));\\n  xlat_mutabledz.y = dot ((texture (sampler_main, (uv + tmpvar_3)).xyz - texture (sampler_main, (uv - tmpvar_3)).xyz), vec3(0.32, 0.49, 0.29));\\n  xlat_mutablemus = (texture (sampler_main, (0.1 * xlat_mutabledz)).xyz + 0.01);\\n  uv2_1 = (uv - 0.5);\\n  xlat_mutabledz = vec2(0.0, 0.0);\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = q30;\\n  float tmpvar_5;\\n  tmpvar_5 = (q30 / 2.0);\\n  tmpvar_4.y = tmpvar_5;\\n  xlat_mutableuv3 = (((0.01999998 * uv2_1) + 0.5) + tmpvar_4);\\n  xlat_mutableuv3 = (fract(xlat_mutableuv3) * aspect.xy);\\n  xlat_mutableuv3 = (0.4 * cos((16.0 * xlat_mutableuv3)));\\n  vec3 tmpvar_6;\\n  tmpvar_6 = vec3((0.03 / sqrt(dot (xlat_mutableuv3, xlat_mutableuv3))));\\n  xlat_mutableneu = ((0.00999999 * tmpvar_6) + (0.99 * dot (tmpvar_6, vec3(0.32, 0.49, 0.29))));\\n  xlat_mutableret1 = max (vec3(0.0, 0.0, 0.0), xlat_mutableneu);\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = q30;\\n  tmpvar_7.y = tmpvar_5;\\n  xlat_mutableuv3 = (((1.353333 * uv2_1) + 0.5) + tmpvar_7);\\n  xlat_mutableuv3 = (fract(xlat_mutableuv3) * aspect.xy);\\n  xlat_mutableuv3 = (0.4 * cos((16.0 * xlat_mutableuv3)));\\n  vec3 tmpvar_8;\\n  tmpvar_8 = vec3((0.03 / sqrt(dot (xlat_mutableuv3, xlat_mutableuv3))));\\n  xlat_mutableneu = ((0.6766666 * tmpvar_8) + (0.3233334 * dot (tmpvar_8, vec3(0.32, 0.49, 0.29))));\\n  xlat_mutableret1 = max (xlat_mutableret1, xlat_mutableneu);\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = q30;\\n  tmpvar_9.y = tmpvar_5;\\n  xlat_mutableuv3 = (((0.6866666 * uv2_1) + 0.5) + tmpvar_9);\\n  xlat_mutableuv3 = (fract(xlat_mutableuv3) * aspect.xy);\\n  xlat_mutableuv3 = (0.4 * cos((16.0 * xlat_mutableuv3)));\\n  vec3 tmpvar_10;\\n  tmpvar_10 = vec3((0.03 / sqrt(dot (xlat_mutableuv3, xlat_mutableuv3))));\\n  xlat_mutableneu = ((0.3433333 * tmpvar_10) + (0.6566667 * dot (tmpvar_10, vec3(0.32, 0.49, 0.29))));\\n  xlat_mutableret1 = max (xlat_mutableret1, xlat_mutableneu);\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = q30;\\n  tmpvar_11.y = tmpvar_5;\\n  xlat_mutableuv3 = (((0.01999998 * uv2_1) + 0.5) + tmpvar_11);\\n  xlat_mutableuv3 = (fract(xlat_mutableuv3) * aspect.xy);\\n  xlat_mutableuv3 = (0.4 * cos((16.0 * xlat_mutableuv3)));\\n  vec3 tmpvar_12;\\n  tmpvar_12 = vec3((0.03 / sqrt(dot (xlat_mutableuv3, xlat_mutableuv3))));\\n  xlat_mutableneu = ((0.00999999 * tmpvar_12) + (0.99 * dot (tmpvar_12, vec3(0.32, 0.49, 0.29))));\\n  xlat_mutableret1 = max (xlat_mutableret1, xlat_mutableneu);\\n  vec4 tmpvar_13;\\n  tmpvar_13.w = 1.0;\\n  tmpvar_13.xyz = ((texture (sampler_main, (uv_orig * 0.8)).xyz + (xlat_mutablemus * 6.0)) + (32.0 * (xlat_mutableret1 * xlat_mutablemus)));\\n  ret = tmpvar_13.xyz;\\n }"}')},3324:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.5,"echo_zoom":1,"echo_orient":3,"wave_mode":1,"wave_dots":1,"modwavealphabyvolume":1,"darken_center":1,"wave_a":4.574,"wave_scale":1.286,"wave_smoothing":0.81,"modwavealphastart":0.54,"modwavealphaend":1,"warpanimspeed":0.442,"warpscale":0.498,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_b":0,"ob_size":0,"ob_r":1,"ob_g":1,"ob_b":1,"ob_a":0.05,"ib_size":0.26,"mv_l":0,"mv_a":0,"b3x":0.2},"shapes":[{"baseVals":{"enabled":1,"sides":16,"textured":1,"rad":1.18647,"tex_zoom":1.66609,"g":1,"b":1,"a":0.8,"r2":1,"b2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"tex_zoom = .8;\\na = max(0,q29);"},{"baseVals":{"sides":40,"textured":1,"x":0.1,"y":0.8,"rad":0.83346,"ang":3.14159,"tex_ang":5.40354,"tex_zoom":0.49981,"g":1,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":40,"textured":1,"x":0.8,"y":0.2,"rad":0.41532,"ang":3.14159,"tex_ang":5.40354,"tex_zoom":0.49981,"g":1,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":40,"textured":1,"rad":1.84754,"ang":3.14159,"tex_ang":5.59203,"tex_zoom":0.49981,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"enabled":0},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":1,"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"tm = time*.1;\\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\\n\\ntic = min(time - tin,1);\\ntin = time;\\n\\ntva = (tic*q1*.5);\\ntvb = (tic*q2*.5);\\ntvc = (tic*q3*.5);\\n\\nq1 = tva;\\nq2 = tvb;\\nq3 = tvc;\\n\\nsz = .5;\\nra = .1;\\nlen = if(above(q6,0),if(below(len,sz),len + ra*sz*tic,min(sz,len)),if(above(len,0),len - ra*sz*tic,max(0,len)));\\nt4 = len;","point_eqs_eel":"ang = 0;\\nlen = t4;\\nmad = .6;\\n\\nit = if(above(sample,0),(it+equal(lev,7)),1);\\nita = (ita + 1)*above(sample,0);\\n\\nmod = if(equal(it%2,0),1,  if(equal((it+1)%4,0),2,  if(equal((it+3)%8,0),3,  if(equal((it+7)%16,0),4,  if(equal((it+15)%32,0),5,  if(equal((it+31)%64,0),6,  if(equal((it+63)%128,0),7,7)  ))))));\\n\\nsw = sw - 1;\\nsw = if(equal(lev,7),mod,sw)*above(sample,0);\\n\\nlev = if(above(sample,0),if(above(sw,0),lev-1,lev+1),7);\\na = lev*.1*1.46;\\na = equal(lev,7) + equal(lev,4) + equal(lev,1);\\n\\nar = if(above(sample,0),ar,1);\\nar = if(equal(lev,0),ar*-1,ar);\\nbr = if(above(sample,0),br,1);\\nbr = if(equal(lev,1),br*-1,br);\\ncr = if(above(sample,0),cr,1);\\ncr = if(equal(lev,2),cr*-1,cr);\\ndr = if(above(sample,0),dr,1);\\ndr = if(equal(lev,3),dr*-1,dr);\\ner = if(above(sample,0),er,1);\\ner = if(equal(lev,4),er*-1,er);\\nfr = if(above(sample,0),fr,1);\\nfr = if(equal(lev,5),fr*-1,fr);\\ngr = if(above(sample,0),gr,1);\\ngr = if(equal(lev,6),gr*-1,gr);\\n\\nmlev = lev*above(sample,0);\\n\\nswi = equal(q4,0)*equal(sample,0);\\n\\nha = if(swi,1-2*rand(2),ha);\\nhb = if(swi,1-2*rand(2),hb);\\nhc = if(swi,1-2*rand(2),hc);\\nhd = if(swi,1-2*rand(2),hd);\\nhe = if(swi,1-2*rand(2),he);\\nhf = if(swi,1-2*rand(2),hf);\\nhg = if(swi,1-2*rand(2),hg);\\n\\naang = if(above(sample,0),aang,aang + (q1*.8 + q2*.1 + q3*.1)*ha*1);\\nbang = if(above(sample,0),bang,bang + (q1*.57 + q2*.33 + q3*.1)*hb*1.33);\\ncang = if(above(sample,0),cang,cang + (q1*.33 + q2*.57 + q3*.1)*hc*1.67);\\ndang = if(above(sample,0),dang,dang + (q1*.1 + q2*.8 + q3*.1)*hd*2);\\neang = if(above(sample,0),eang,eang + (q1*.1 + q2*.57 + q3*.33)*he*2.33);\\nfang = if(above(sample,0),fang,fang + (q1*.1 + q2*.33 + q3*.57)*hf*2.67);\\ngang = if(above(sample,0),gang,gang + (q1*.1 + q2*.1 + q3*.8)*hg*3);\\n\\nlen = len*mad;\\nx = .5 + above(lev,0)*sin(aang)*len*ar;\\ny = 0.5 + above(lev,0)*cos(aang)*len;\\n\\nan = bang*(ar + br)*br;\\nlen = len*mad;\\nx = x + above(lev,1)*sin(an)*len*br;\\ny = y + above(lev,1)*cos(an)*len;\\n\\nan = cang*(ar + br + cr)*cr;\\nlen = len*mad;\\nx = x + above(lev,2)*sin(an)*len*cr;\\ny = y + above(lev,2)*cos(an)*len;\\n\\nan = dang*(ar + br + cr + dr)*dr;\\nlen = len*mad;\\nx = x + above(lev,3)*sin(an)*len*dr;\\ny = y + above(lev,3)*cos(an)*len;\\n\\nan = eang*(ar + br + cr + dr + er)*er;\\nlen = len*mad;\\nx = x + above(lev,4)*sin(an)*len*er;\\ny = y + above(lev,4)*cos(an)*len;\\n\\nan = fang*(ar + br + cr + dr + er + fr)*fr;\\nlen = len*mad;\\nx = x + above(lev,5)*sin(an)*len*fr;\\ny = y + above(lev,5)*cos(an)*len;\\n\\nan = gang*(ar + br + cr + dr + er + fr + gr)*gr;\\nlen = len*mad;\\nx = x + above(lev,6)*sin(an)*len*gr;\\ny = y + above(lev,6)*cos(an)*len;\\n\\nx = (x-.5)*.75 + .5;\\n\\ng = t1 + lev*.1;\\nr = t2 - lev*.1;\\nb = t3;\\n\\nr = if(equal(q5,1),1,r);\\ng = if(equal(q5,2),1,g);\\nb = if(equal(q5,3),1,b);\\n\\nr = r - int(r);\\ng = g - int(g);\\nb = b - int(b);\\n\\ny = (y-.5)/q20+.5;"}],"init_eqs_eel":"index = rand(32);\\nindex2 = rand(32);","frame_eqs_eel":"dec_med = pow (0.7, 30/fps);\\ndec_slow = pow (0.9, 30/fps);\\nbeat = max (max (bass, mid), treb);\\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, -.5+avg+peak) * above (time, t0+.1);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %64;\\nindex2 = (index2 + is_beat*bnot(index))%4;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq24 = is_beat;\\nq29 = 2 * (index2%2-.5);\\nq25 = min(1,q22/2);\\n\\nk1 =  is_beat*equal(index%4,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.1416/4;\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\nq26 = (8+index2*8);\\nq27 = index;\\nq28 = index2;\\n\\n\\ntrot = index*6.28/4;\\nq5 = cos(trot);\\nq6 = sin(trot);\\nq7 = -q6;\\nq8 = q5;\\n\\nq29= sin(time/4);\\nwave_mystery = q29/2;\\n\\nq30 = .03*(index%32)/32;\\n\\nmonitor = q30;","pixel_eqs_eel":"zoom = 1 +.02*rad;","warp":" shader_body { \\n  vec2 uv_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (uv - vec2(0.5, 0.5));\\n  float tmpvar_3;\\n  vec4 tmpvar_4;\\n  tmpvar_4 = texture (sampler_blur1, uv);\\n  tmpvar_3 = (((tmpvar_4.xyz * scale1) + bias1) * 4.0).x;\\n  mat2 tmpvar_5;\\n  tmpvar_5[uint(0)].x = cos(tmpvar_3);\\n  tmpvar_5[uint(0)].y = -(sin(tmpvar_3));\\n  tmpvar_5[1u].x = sin(tmpvar_3);\\n  tmpvar_5[1u].y = cos(tmpvar_3);\\n  uv_1 = ((tmpvar_2 + (\\n    (0.2 * dot (((tmpvar_4.xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29)))\\n   * \\n    (tmpvar_2 * tmpvar_5)\\n  )) - 0.5);\\n  vec2 tmpvar_6;\\n  tmpvar_6 = ((uv_1 * texsize.xy) * q30);\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = (cos((tmpvar_6.y * q1)) * sin(-(tmpvar_6.y)));\\n  tmpvar_7.y = (sin(tmpvar_6.x) * cos((tmpvar_6.y * q2)));\\n  uv_1 = (uv_1 - ((tmpvar_7 * texsize.zw) * q26));\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = ((texture (sampler_main, uv_1).xyz * 0.996) - 0.006);\\n  ret = tmpvar_8.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = (1.0 - uv.x);\\n  tmpvar_2.y = uv.y;\\n  vec3 tmpvar_3;\\n  tmpvar_3 = vec3((texture (sampler_main, uv).x + texture (sampler_main, tmpvar_2).x));\\n  vec2 tmpvar_4;\\n  vec4 tmpvar_5;\\n  tmpvar_5 = texture (sampler_blur1, uv);\\n  tmpvar_4 = (((uv - 0.5) * (1.0 - \\n    ((tmpvar_5.xyz * scale1) + bias1)\\n  .zzz).xy) + 0.5);\\n  vec3 tmpvar_6;\\n  tmpvar_6 = (tmpvar_3 + clamp ((\\n    pow (texture (sampler_main, tmpvar_4).zzz, vec3(0.5, 0.5, 0.5))\\n   * \\n    (1.0 - (tmpvar_3.x * 2.0))\\n  ), 0.0, 1.0));\\n  vec3 tmpvar_7;\\n  tmpvar_7 = (tmpvar_6 + clamp ((\\n    pow (((texture (sampler_blur1, tmpvar_4).xyz * scale1) + bias1).zzz, vec3(0.5, 0.5, 0.5))\\n   * \\n    (1.0 - (tmpvar_6.x * 2.0))\\n  ), 0.0, 1.0));\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 0.0;\\n  tmpvar_8.xyz = mix ((vec3((\\n    ((tmpvar_5.xyz * scale1) + bias1)\\n  .x + \\n    ((texture (sampler_blur3, uv).xyz * scale3) + bias3)\\n  .x)) + (\\n    ((texture (sampler_blur1, tmpvar_2).xyz * scale1) + bias1)\\n  .x + \\n    ((texture (sampler_blur3, tmpvar_2).xyz * scale3) + bias3)\\n  .x)), tmpvar_7, tmpvar_7);\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = uv.x;\\n  tmpvar_9.y = (1.0 - uv.y);\\n  ret_1 = (pow (tmpvar_8, (0.5 + \\n    (4.0 * roam_cos)\\n  )).xyz + pow ((texture (sampler_main, tmpvar_9).yyy + texture (sampler_main, \\n    (1.0 - uv)\\n  ).yyy), vec3(0.6, 0.95, 5.0)));\\n  ret_1 = (1.0 - exp((-2.0 * ret_1)));\\n  vec4 tmpvar_10;\\n  tmpvar_10.w = 1.0;\\n  tmpvar_10.xyz = ret_1;\\n  ret = tmpvar_10.xyz;\\n }"}')},3496:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_dots":1,"modwavealphabyvolume":1,"darken":1,"wave_a":0.005,"wave_scale":10.437,"wave_smoothing":0.45,"wave_mystery":0.08,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0.99,"ob_size":0.015,"ob_b":0.2,"ob_a":1,"ib_size":0.005,"ib_r":0,"ib_g":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"textured":1,"rad":1.30581,"ang":2.32478,"tex_ang":1.00531,"tex_zoom":1.53117,"r":0.5,"g":1,"b":0.9,"a":0.03,"r2":0.83,"g2":0.93,"b2":0.8,"a2":0.06,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"rad":1.26458,"tex_ang":1.4451,"tex_zoom":1.49331,"r":0.7,"g":0.4,"a":0.01,"r2":0.7,"g2":0.4,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"x":0.503,"rad":0.03886,"tex_zoom":0.60986,"g":0.1,"a":0.9,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = rand(10)/10;\\ny = rand(10)/10;\\n\\nr = rand(4)/3;\\ng = rand(4)/3;\\nb = rand(4)/3;\\n\\nrad = .1;"},{"baseVals":{"sides":63,"textured":1,"y":1,"rad":0.54822,"tex_zoom":0.49981,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"sep":120,"thick":1,"additive":1,"scaling":0.89152,"smoothing":0.82,"r":0,"g":0.5,"a":0.9,"enabled":0},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"t2 = t2 + bass_att;","point_eqs_eel":"k1 = (sample*100)%2;\\n\\nxi = value1*k1 + xi*(1-k1);\\nyi = value2*(1-k1) + yi*k1;\\n\\nx = .5 + xi/2;\\ny = .5 + yi/2;\\n\\n\\na = bass + mid + treb ;\\na = a/10 * sqrt(xi*xi+yi*yi);"},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"tm = time*.1;\\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\\n\\ntic = min(time - tin,1);\\ntin = time;\\n\\ntva = (tic*q1*.5);\\ntvb = (tic*q2*.5);\\ntvc = (tic*q3*.5);\\n\\nq1 = tva;\\nq2 = tvb;\\nq3 = tvc;\\n\\nsz = .5;\\nlen = q4;\\nt4 = len;","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"r":0,"g":0.2,"b":0,"enabled":0},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"tm = time*.1;\\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\\n\\ntic = min(time - tin,1);\\ntin = time;\\n\\ntva = (tic*q1*.5);\\ntvb = (tic*q2*.5);\\ntvc = (tic*q3*.5);\\n\\nq1 = tva;\\nq2 = tvb;\\nq3 = tvc;\\n\\nsz = .5;\\nlen = 1;\\nt4 = len;","point_eqs_eel":"x0 = .5 + (-1) * q1/1;\\ny0 = .0 - (-1)* .5;\\n\\n//x0 = .5; y0 = .5;\\n\\nk1 = int(100.0*sample);\\nk2 = int(100.0*sample+1);\\nk1 = k1%2;\\nf1 = rand(100)/200-.25;\\nf2 = rand(100)/200-.25;\\n\\nx = x0 + k1* f1;;\\ny = y0 + k1* f2;\\na = k2%2 /4;"},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ra = .8;\\nrb = .5;\\npib = 6.28318530718;\\n\\n\\ntic = min(time-tin,.1);\\ntin = if(equal(sample,0),time,tin);\\n\\nmod = 1.5 + .5*sin(time*.15);\\nmed = 1.5 + .5*sin(time*.134);\\nmed = 5;\\namod = 3;\\n\\nvr = rand(10001)*.0001;\\nrb = rb + rand(10001)*.0001*.1;\\n\\na = vr;\\n\\nsa = vr*pib*.5;\\nsp = sa*mod + q1*1.3;\\nsam = sa*med - q1*.219;\\n\\nox = ra*sin(sam*pib);\\noy = ra*cos(sam*pib);\\nox = ox + rb*-cos(sp)*sin(sam*pib);\\noz = rb*-sin(sp);\\noy = oy + rb*-cos(sp)*cos(sam*pib);\\n\\n\\nxang = time*.132;\\nxang = q2;\\nyang = time*.153;\\nyang = q3;\\nzang = time*.110;\\nzang = q4;\\nfov = 0.6 + 0.2*sin(time);\\nfov = .5;\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = -ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\noz = oz - 2;\\nx = ox*fov/oz + 0.5;\\nx = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;\\n"}],"init_eqs_eel":"","frame_eqs_eel":"dec_med = pow (0.9, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb);\\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %4;\\nindex2 = (index2 + is_beat*bnot(index))%4;\\nmonitor = index2;\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = (bass + mid + treb)/16;\\n\\nk1 =  is_beat*bnot(index)*bnot(index2);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\np3 = dec_med * p3+ (1-dec_med)*p2;\\nrott = p3 * 3.1416/4;\\n\\npos = pos + q20/140;\\nq28 = pos;\\nq27 = index+1;\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\ntrel = time/10;\\nq5 = cos(trel);\\nq6 = sin(trel);\\nq7 = -q6;\\nq8 = q5;\\n\\ntrig = q24 * (index%4);\\nmox = bnot(trig)*mox + trig * (rand (100)/100-.5);\\nmoy = bnot(trig)*moy + trig * (rand (100)/100-.5);\\nq15 = mox/2;\\nq16 = moy/2;\\n\\n//speed\\nspeed = speed * bnot(trig) + trig * q26;\\nmovz = movz + speed/fps;\\nq9 = movz;\\n\\n\\nq30 = (1.2 + sin(time/7))*3;\\n\\nzoom = 1;\\nrot = -0.00;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 zz_1;\\n  zz_1 = -(((\\n    (uv - vec2(0.5, 0.5))\\n   * aspect.xy) * (texsize.xy * 0.2)));\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ((texture (sampler_main, (uv + \\n    ((clamp ((\\n      sin(zz_1)\\n     / \\n      cos(zz_1)\\n    ), vec2(-8.0, -8.0), vec2(8.0, 8.0)) * texsize.zw) * 4.0)\\n  )).xyz + (0.02 * texture (sampler_noise_lq, \\n    ((uv * 0.3) + (0.01 * rand_frame).xy)\\n  )).xyz) - 0.015);\\n  ret = tmpvar_2.xyz;\\n }","comp":" shader_body { \\n  vec2 uvm_1;\\n  vec2 uv1_2;\\n  vec2 p0_3;\\n  p0_3.x = (q15 + 0.5);\\n  p0_3.y = (q16 + 0.5);\\n  mat2 tmpvar_4;\\n  tmpvar_4[uint(0)] = _qb.xy;\\n  tmpvar_4[1u] = _qb.zw;\\n  uv1_2 = (((uv - p0_3) * aspect.xy) * tmpvar_4);\\n  float tmpvar_5;\\n  float tmpvar_6;\\n  tmpvar_6 = (min (abs(\\n    (uv1_2.y / uv1_2.x)\\n  ), 1.0) / max (abs(\\n    (uv1_2.y / uv1_2.x)\\n  ), 1.0));\\n  float tmpvar_7;\\n  tmpvar_7 = (tmpvar_6 * tmpvar_6);\\n  tmpvar_7 = (((\\n    ((((\\n      ((((-0.01213232 * tmpvar_7) + 0.05368138) * tmpvar_7) - 0.1173503)\\n     * tmpvar_7) + 0.1938925) * tmpvar_7) - 0.3326756)\\n   * tmpvar_7) + 0.9999793) * tmpvar_6);\\n  tmpvar_7 = (tmpvar_7 + (float(\\n    (abs((uv1_2.y / uv1_2.x)) > 1.0)\\n  ) * (\\n    (tmpvar_7 * -2.0)\\n   + 1.570796)));\\n  tmpvar_5 = (tmpvar_7 * sign((uv1_2.y / uv1_2.x)));\\n  if ((abs(uv1_2.x) > (1e-08 * abs(uv1_2.y)))) {\\n    if ((uv1_2.x < 0.0)) {\\n      if ((uv1_2.y >= 0.0)) {\\n        tmpvar_5 += 3.141593;\\n      } else {\\n        tmpvar_5 = (tmpvar_5 - 3.141593);\\n      };\\n    };\\n  } else {\\n    tmpvar_5 = (sign(uv1_2.y) * 1.570796);\\n  };\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = (tmpvar_5 / 3.14);\\n  tmpvar_8.y = (1.0/((abs(\\n    (abs((abs(uv1_2.x) - abs(uv1_2.y))) * uv1_2.x)\\n  ) * q30)));\\n  uvm_1.y = ((tmpvar_8.y / 8.0) + q9);\\n  uvm_1.x = tmpvar_8.x;\\n  vec2 tmpvar_9;\\n  tmpvar_9 = (64.0 * ((uv * mat2(0.6, -0.8, 0.8, 0.6)) + (time / 64.0)));\\n  vec2 tmpvar_10;\\n  tmpvar_10 = abs((fract(tmpvar_9) - 0.5));\\n  vec3 tmpvar_11;\\n  tmpvar_11 = clamp (((0.5 / \\n    sqrt(dot (tmpvar_10, tmpvar_10))\\n  ) * vec3((texture (sampler_pw_noise_lq, \\n    (tmpvar_9 / 256.0)\\n  ).y - 0.9))), 0.0, 1.0);\\n  float tmpvar_12;\\n  tmpvar_12 = clamp ((0.01 / sqrt(\\n    dot (uv1_2, uv1_2)\\n  )), 0.0, 1.0);\\n  float tmpvar_13;\\n  tmpvar_13 = clamp ((128.0 / (tmpvar_8.y * tmpvar_8.y)), 0.0, 1.0);\\n  vec4 tmpvar_14;\\n  tmpvar_14.w = 1.0;\\n  tmpvar_14.xyz = (((\\n    (texture (sampler_main, uvm_1).xyz * tmpvar_13)\\n   + \\n    (((texture (sampler_blur1, fract(uvm_1)).xyz * scale1) + bias1) * clamp ((2.0 / tmpvar_8.y), 0.0, 1.0))\\n  ) + (vec3(0.0, 0.0, 0.2) * \\n    clamp ((0.05 / (tmpvar_13 + 0.1)), 0.0, 1.0)\\n  )) + clamp ((\\n    ((tmpvar_11.x * tmpvar_11.x) + (tmpvar_12 * tmpvar_12))\\n   - \\n    (tmpvar_13 * 16.0)\\n  ), 0.0, 1.0));\\n  ret = tmpvar_14.xyz;\\n }"}')},5584:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1.980001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"wave_mode":4,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.038558,"wave_scale":0.372353,"wave_smoothing":0,"wave_mystery":0.2,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1.4595,"warpscale":2.0067,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.8,"wave_g":0.3,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.4999,"mv_g":0.4999,"mv_b":0.4999,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"sides":44,"additive":1,"thickoutline":1,"rad":0.126338,"ang":1.570796,"tex_zoom":0.539067,"r":0,"g":0.54,"b":0.89,"a":0.1,"r2":0.84,"g2":0.93,"b2":1,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = .5 + .5 * sin(time);\\ny = .5 + .5 * sin(time);"},{"baseVals":{"sides":63,"textured":1,"rad":1.998625,"tex_zoom":0.499805,"g":1,"b":1,"a":0.1,"r2":1,"b2":1,"a2":0.6,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":63,"textured":1,"x":0.123,"y":0,"rad":0.273185,"tex_zoom":0.499805,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":63,"textured":1,"y":1,"rad":0.548217,"tex_zoom":0.499805,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"usedots":1,"additive":1,"scaling":0.891519,"smoothing":0.82,"a":0.6,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"k0 = int(100.0*sample);\\nk2 = int(100.0*sample+1);\\nk1 = equal(k0%2,0);\\nk2 = equal(k0%2,1);\\n\\n\\nix = (100*value1)%7-2.5;\\niy = (100*value2)%7-2.5;\\n\\nsp = bass + treb;\\nsp = sp /3000;\\n\\n\\ndx = (dx+sp*ix) * .998;\\ndy = (dy+sp*iy) * .998 ;\\n\\n\\nox = k1*dx + (1-k1)*ox;\\noy = k2*dy + (1-k2)*oy;\\n\\n\\n\\n//ox = 0; oy = 0;\\n\\nx = ox+.5;\\ny = oy+.5;\\n\\nr = 1;\\ng = 1;\\nb = 1;\\na = 1;"},{"baseVals":{"enabled":1,"usedots":1,"scaling":0.891519,"smoothing":0.82,"a":0.1},"init_eqs_eel":"","frame_eqs_eel":"t1 = 2*sin(time/15);\\nt2 = 2*sin(time/11);\\nmonitor = time;","point_eqs_eel":"\\nt_abs = sample ;\\n\\nox = sin (t_abs*68);\\noy = cos (t_abs*63);\\noz = sin (t_abs*125);\\n\\nr = 1;\\ng = .5 ;\\nb = 1 ;\\n\\nt_rel = sample - time/127;\\nt_rel = t_rel - int(t_rel);\\n\\na = (512*sample-time*2)%2;\\na = 1;\\n\\nxang = 0 ;\\nyang = t1;\\nzang = t1;\\nfov = 0.15;\\n\\n\\n// Rotation um x,y,z\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\n\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = -ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\n//oz = oz - 6;\\nx = ox*fov/oz +0.5;\\n//x = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;"},{"baseVals":{"thick":1,"scaling":0.891519,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"k1 = (sample*512) % 8;\\n\\nt1 = equal (k1,0)*((t1 * 61 + 27) % 4096)\\n   + (1-equal(k1,0))*t1;\\n\\nexc = 1+rand(5);\\nampl = sample*sqrt(t2) * (1+exc);\\n\\nf1 = q4*ampl* sin(t1*6.28/4096);\\nf2 = q4*ampl* cos(t1*6.28/4096);\\n\\nx = q2 + k1* f1 ;\\ny = q3 + k1* f2;\\n\\na = equal(k1,6) + equal (k1,0);\\n\\nr = 1;\\nb = equal (k1,0);\\ng = .6* (1+.6*equal (k1,0))  ;\\na = a * q5 * (1-0*t2*t2);\\n//a = 0;\\n\\n"},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"\\nt_abs = sample;\\nt_rel = sample-time/8;\\n\\nox =  sin (sample*110) ;\\noy =  cos (sample*110);\\n\\noz = 4+1/(t_rel - int(t_rel));\\n\\nr = .3;\\ng = 0.7;\\nb = 1;\\n\\na = .8;\\n\\nxang = 0;\\nyang = 0;\\nzang = 0;\\nfov = .5;\\n\\n\\n// Rotation um x,y,z\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\n\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = -ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\nx = ox*fov/oz +0.45;\\ny = oy*fov/oz + 0.45;"}],"init_eqs_eel":"","frame_eqs_eel":"dec_med = pow (0.96, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb);\\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %4;\\nindex2 = (index2 + is_beat*bnot(index))%8;\\nindex3 = (index3 + is_beat*bnot(index)*bnot(index2))%3;\\n\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass + mid + treb;\\n\\n//k1 =  is_beat*bnot(index)*bnot(index2);\\n\\nk1 =  is_beat*equal(index,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\np3 = dec_med * p3+ (1-dec_med)*p2;\\nrott = p3*3.1416/2;\\n\\nrot1 = rot1 + q26;\\nq25 = .01*rot1;\\n\\nq27 = 8-index;\\nq28 = index3;\\n\\ndx1 = dec_med*dx1 + (1-dec_med)*bnot(index2);\\nq29 = dx1;\\nmonitor = q29;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;","pixel_eqs_eel":"rot = 0;\\ndx = .02*q29;\\nzoom = 1;","warp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = (((uv - vec2(0.5, 0.5)) * texsize.xy) * 0.015);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = (((0.995 * texture (sampler_main, \\n    (uv + (((\\n      (clamp ((sin(tmpvar_1) / cos(tmpvar_1)), vec2(-12.0, -12.0), vec2(12.0, 12.0)) * cos(((4.0 * \\n        (q2 + 1.0)\\n      ) * tmpvar_1.yx)))\\n     * texsize.zw) * 4.0) * (2.0 + q1)))\\n  ).xyz) + vec3(0.01, 0.01, 0.01)) - 0.02);\\n  ret = tmpvar_2.xyz;\\n }","comp":" shader_body { \\n  vec3 crisp_1;\\n  vec2 uv3_2;\\n  vec2 uv2_3;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = ((uv - 0.5) * aspect.xy);\\n  float tmpvar_5;\\n  tmpvar_5 = (0.1 / (sqrt(\\n    dot (tmpvar_4, tmpvar_4)\\n  ) + 0.1));\\n  vec2 tmpvar_6;\\n  float tmpvar_7;\\n  tmpvar_7 = (ang / 3.14);\\n  tmpvar_6.x = tmpvar_7;\\n  tmpvar_6.y = tmpvar_5;\\n  uv2_3.y = (tmpvar_5 + (0.1 * time));\\n  uv2_3.x = tmpvar_6.x;\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = tmpvar_7;\\n  tmpvar_8.y = (tmpvar_5 * 1.5);\\n  uv3_2.y = (tmpvar_8.y + (0.08 * time));\\n  uv3_2.x = (tmpvar_7 + (time / 32.0));\\n  crisp_1 = (((2.0 * texture (sampler_main, uv2_3).xyz) + texture (sampler_main, uv3_2).xyz) + ((2.0 * \\n    ((texture (sampler_blur2, fract(uv2_3)).xyz * scale2) + bias2)\\n  ) + (2.0 * \\n    ((texture (sampler_blur2, fract(uv3_2)).xyz * scale2) + bias2)\\n  )));\\n  crisp_1 = ((3.0 * crisp_1) * rad);\\n  float tmpvar_9;\\n  tmpvar_9 = clamp ((1.0 - (4.0 * rad)), 0.0, 1.0);\\n  vec4 tmpvar_10;\\n  tmpvar_10.w = 1.0;\\n  tmpvar_10.xyz = ((crisp_1 + (\\n    ((vec3(0.0, 0.0, 1.0) * uv.y) * pow ((1.0 - rad), 8.0))\\n   * tmpvar_9)) + (tmpvar_9 * texture (sampler_main, uv).xyz));\\n  ret = tmpvar_10.xyz;\\n }"}')},3785:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.980001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"wave_mode":4,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.527429,"wave_smoothing":0.45,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.4595,"warpscale":2.0067,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.8,"wave_g":0.49,"ob_size":0.015,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.4999,"mv_g":0.4999,"mv_b":0.4999,"mv_a":0,"b1ed":0.7},"shapes":[{"baseVals":{"rad":0.048958,"tex_ang":1.00531,"tex_zoom":1.531168,"r":0.5,"g":1,"b":0.9,"r2":0.83,"g2":0.93,"b2":0.8,"a2":1,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"\\ntrel = time/3;\\n\\nx = .5+sin(trel*2);\\ny = .5+cos(trel*1.3);\\n\\n\\n\\n\\nrad = .04;\\na = .6; a2 = 0;"},{"baseVals":{"enabled":1,"sides":100,"thickoutline":1,"textured":1,"x":0.26,"y":0.2,"rad":0.393173,"tex_zoom":0.9355,"r":0,"g":0.55,"b":0.5,"a":0.7,"g2":0.4,"b2":0.4,"a2":0.7,"border_r":0.3,"border_g":0.7,"border_b":0.8,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"trig = q24;\\n\\ntextured = 1;\\nadditive = q24;\\nx0 = x0*bnot(trig) + trig*(.2+ rand(100)/200); \\ny0 = y0*bnot(trig) + trig*(.2+ rand(100)/200); \\n\\n\\nx0 = x0 + .1*q1*(3+q22)/fps;\\ny0 = y0 + .1*q2*(3+q22)/fps;\\n\\nx0 = x0 - int(x0);\\ny0 = y0 - int(y0);\\n\\nang = 4*q1+time;\\nx = x0; y = y0;\\nrad0 = rad0*bnot(trig) + trig*rand(100)/200;\\nrad = rad0;\\n\\nr0 = bnot(trig)*r0 + trig * rand(10)/10;\\nb0 = bnot(trig)*b0 + trig * rand(10)/10;\\ng0 = bnot(trig)*g0 + trig * rand(10)/10;\\n\\nr0 =1; b0 = 1; g0 = 1;\\nr = r0; b = b0; g = g0;\\nr2 = r; b2 = n; g2 = g;"},{"baseVals":{"additive":1,"x":0.503,"rad":0.038857,"tex_zoom":0.609857,"g":0.1,"a":0.9,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = rand(50)/50;\\ny = .5 - 0*rand(15)/200;\\n\\nr = .4;\\ng = .6;\\nb = 1;\\nr2 = r;\\ng2 = g;\\nb2 = b;\\n\\na = min(q21/2 ,.9);\\nrad = a * (.1+abs(x-.5))/2 ;"},{"baseVals":{"thickoutline":1,"textured":1,"x":0.26,"y":0.76,"rad":0.39478,"tex_zoom":0.499805,"g":1,"b":1,"r2":1,"b2":1,"a2":0.8,"border_r":0.2,"border_g":0.7,"border_b":0.5,"border_a":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"tex_zoom = q27/2;"}],"waves":[{"baseVals":{"samples":282,"sep":20,"thick":1,"additive":1,"scaling":3.915805,"smoothing":0.1,"r":0.2,"g":0.3,"a":0.6,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"\\nx = sample;\\ny = value1 * rand(50)/100 * abs(sample-.5)+ .49;\\n\\na = q26/4 * (.2 + abs(sample-.5)); "},{"baseVals":{"usedots":1,"thick":1,"scaling":0.891519,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"xi = rand(100)/100;\\nyi = rand(100)/100;\\n\\nx = xi; y = yi;\\n\\na = q21/15;"},{"baseVals":{"thick":1,"scaling":0.891519,"smoothing":0.82,"r":0,"g":0.2,"b":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"dec_med = pow (0.7, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .2+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %8;\\nindex2 = (index2 + is_beat*bnot(index))%2;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass_att + mid_att + treb_att;\\nq27 = index +1;\\nq28 = index2;\\n\\n\\nk1 =  is_\\nbeat*equal(index%2,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.1416/4;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\nalt = alt * .2 + q26*.8;\\nq26 = q26 - alt;\\n\\nstep = step + 100*max(q26-0.01,0) + q24 ;\\nq30 = step;\\n\\np4 = dec_med*p4 + (1-dec_med)*q27;\\nq31 = p4;\\n\\ntrig = q24;\\ntrel = bnot(trig)*(trel + 1/fps);\\nq6 = trel;\\nmonitor = trel;","pixel_eqs_eel":"zoom = 1.1;","warp":" shader_body { \\n  vec2 uv_1;\\n  uv_1 = uv;\\n  vec2 rs_2;\\n  vec2 uv6_3;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = ((uv_orig - 0.5) * aspect.xy);\\n  uv6_3 = tmpvar_4;\\n  vec4 theta_5;\\n  theta_5 = ((q1 * (\\n    (6.0 * q2)\\n   * \\n    sqrt(dot (tmpvar_4, tmpvar_4))\\n  )) + rand_frame);\\n  vec2 tmpvar_6;\\n  tmpvar_6 = clamp (((\\n    sin(theta_5)\\n   / \\n    cos(theta_5)\\n  ).xy * -(\\n    normalize((1.0/(tmpvar_4)))\\n  )), vec2(-8.0, -8.0), vec2(8.0, 8.0));\\n  rs_2 = tmpvar_6;\\n  if ((q28 == 1.0)) {\\n    rs_2 = (tmpvar_6 * cos((\\n      (tmpvar_4.yx * 3.0)\\n     * q27)));\\n  };\\n  uv_1 = (uv + (rs_2 / 20.0));\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = rad;\\n  tmpvar_7.y = sqrt(dot (tmpvar_4, tmpvar_4));\\n  uv6_3 = (1.5 * tmpvar_7);\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = ((q24 * (\\n    ((texture (sampler_main, uv_1).xyz + (vec3((0.01 / \\n      sqrt(dot (uv6_3, uv6_3))\\n    )) * roam_cos.xyz)) * 0.98)\\n   - 0.02)) + ((1.0 - q24) * texture (sampler_main, (\\n    (uv_orig - 0.5)\\n   + 0.5)).xyz));\\n  ret = tmpvar_8.xyz;\\n }","comp":"vec3 xlat_mutableneu;\\nvec2 xlat_mutablers0;\\nvec2 xlat_mutablerss;\\nvec2 xlat_mutableuv2;\\n shader_body { \\n  vec2 uv_1;\\n  vec3 ret1_2;\\n  vec3 dots_3;\\n  uv_1 = (uv - 0.5);\\n  uv_1 = (uv_1 * aspect.xy);\\n  float tmpvar_4;\\n  float tmpvar_5;\\n  tmpvar_5 = (min (abs(\\n    (uv_1.y / uv_1.x)\\n  ), 1.0) / max (abs(\\n    (uv_1.y / uv_1.x)\\n  ), 1.0));\\n  float tmpvar_6;\\n  tmpvar_6 = (tmpvar_5 * tmpvar_5);\\n  tmpvar_6 = (((\\n    ((((\\n      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)\\n     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)\\n   * tmpvar_6) + 0.9999793) * tmpvar_5);\\n  tmpvar_6 = (tmpvar_6 + (float(\\n    (abs((uv_1.y / uv_1.x)) > 1.0)\\n  ) * (\\n    (tmpvar_6 * -2.0)\\n   + 1.570796)));\\n  tmpvar_4 = (tmpvar_6 * sign((uv_1.y / uv_1.x)));\\n  if ((abs(uv_1.x) > (1e-08 * abs(uv_1.y)))) {\\n    if ((uv_1.x < 0.0)) {\\n      if ((uv_1.y >= 0.0)) {\\n        tmpvar_4 += 3.141593;\\n      } else {\\n        tmpvar_4 = (tmpvar_4 - 3.141593);\\n      };\\n    };\\n  } else {\\n    tmpvar_4 = (sign(uv_1.y) * 1.570796);\\n  };\\n  xlat_mutablers0.x = ((tmpvar_4 / 3.1416) * 2.0);\\n  xlat_mutablers0.y = (0.02 / sqrt(dot (uv_1, uv_1)));\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = xlat_mutablers0.x;\\n  tmpvar_7.y = (xlat_mutablers0.y + time);\\n  xlat_mutablerss = (tmpvar_7 * mat2(0.7, -0.7, 0.7, 0.7));\\n  vec4 tmpvar_8;\\n  tmpvar_8 = vec4(greaterThanEqual ((texture (sampler_pw_noise_lq, \\n    (xlat_mutablerss / 32.0)\\n  ) - 0.7), vec4(0.0, 0.0, 0.0, 0.0)));\\n  vec2 tmpvar_9;\\n  tmpvar_9 = abs((fract(\\n    (xlat_mutablerss * 8.0)\\n  ) - 0.5));\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = (xlat_mutablers0.x * 2.0);\\n  tmpvar_10.y = (xlat_mutablers0.y + (time / 2.0));\\n  xlat_mutablerss = (tmpvar_10 * mat2(0.7, -0.7, 0.7, 0.7));\\n  vec4 tmpvar_11;\\n  tmpvar_11 = vec4(greaterThanEqual ((texture (sampler_pw_noise_lq, \\n    (xlat_mutablerss / 32.0)\\n  ) - 0.7), vec4(0.0, 0.0, 0.0, 0.0)));\\n  vec2 tmpvar_12;\\n  tmpvar_12 = abs((fract(\\n    (xlat_mutablerss * 8.0)\\n  ) - 0.5));\\n  xlat_mutablerss = tmpvar_12;\\n  dots_3 = (vec3((clamp (\\n    (0.04 / sqrt(dot (tmpvar_9, tmpvar_9)))\\n  , 0.0, 1.0) * tmpvar_8.x)) + (clamp (\\n    (0.04 / sqrt(dot (tmpvar_12, tmpvar_12)))\\n  , 0.0, 1.0) * tmpvar_11.x));\\n  dots_3 = (dots_3 * clamp ((0.04 / \\n    abs(((0.01 / xlat_mutablers0.y) - q6))\\n  ), 0.0, 1.0));\\n  dots_3 = (dots_3 * (dots_3 * 2.0));\\n  xlat_mutableneu = (texture (sampler_main, (uv_1 + 0.5)).xyz + ((texture (sampler_blur1, \\n    (uv_1 + 0.5)\\n  ).xyz * scale1) + bias1));\\n  ret1_2 = max (vec3(0.0, 0.0, 0.0), xlat_mutableneu);\\n  xlat_mutableuv2.x = ((uv_1.x * -0.9999987) - (uv_1.y * 0.001592548));\\n  xlat_mutableuv2.y = ((uv_1.x * 0.001592548) + (uv_1.y * -0.9999987));\\n  xlat_mutableneu = (texture (sampler_main, (xlat_mutableuv2 + 0.5)).xyz + ((texture (sampler_blur1, \\n    (xlat_mutableuv2 + 0.5)\\n  ).xyz * scale1) + bias1));\\n  ret1_2 = max (ret1_2, xlat_mutableneu);\\n  xlat_mutableuv2.x = ((uv_1.x * 0.9999949) - (uv_1.y * -0.003185092));\\n  xlat_mutableuv2.y = ((uv_1.x * -0.003185092) + (uv_1.y * 0.9999949));\\n  xlat_mutableneu = (texture (sampler_main, (xlat_mutableuv2 + 0.5)).xyz + ((texture (sampler_blur1, \\n    (xlat_mutableuv2 + 0.5)\\n  ).xyz * scale1) + bias1));\\n  ret1_2 = max (ret1_2, xlat_mutableneu);\\n  vec4 tmpvar_13;\\n  tmpvar_13.w = 1.0;\\n  tmpvar_13.xyz = (ret1_2 + (dots_3 * (1.0 + ret1_2)));\\n  ret = tmpvar_13.xyz;\\n }"}')},340:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.980001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"modwavealphabyvolume":1,"darken":1,"wave_a":0.001,"wave_scale":10.437056,"wave_smoothing":0.45,"wave_mystery":0.08,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.4595,"warpscale":2.0067,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0.99,"ob_size":0,"ob_b":0.2,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_r":0.4999,"mv_g":0.4999,"mv_b":0.4999,"mv_a":0.1,"b1ed":0},"shapes":[{"baseVals":{"rad":0.048958,"tex_ang":1.00531,"tex_zoom":1.531168,"r":0.5,"g":1,"b":0.9,"r2":0.83,"g2":0.93,"b2":0.8,"a2":1,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"\\ntrel = time/2+q20;\\n\\nx = .5+sin(trel*2);\\ny = .5+cos(trel*1.3 +q28/3);\\n\\na = q26/4+.2;\\n//a = 1;"},{"baseVals":{"enabled":1,"thickoutline":1,"x":0.4,"rad":2.366958,"tex_ang":3.455753,"tex_zoom":0.993053,"r":0.5,"b":1,"a":0.2,"r2":0.7,"g2":0.4,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"a2 =0;a = 0;\\na = q24/12;"},{"baseVals":{"enabled":1,"sides":100,"x":0.503,"rad":0.038857,"tex_zoom":0.609857,"g":0.1,"a":0.9,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = rand(10)/10;\\ny = rand(10)/10;\\n\\nr = rand(50)/50;\\ng = rand(50)/50;\\nb = rand(50)/50;\\n\\nr2 = 1;\\ng2 = 1;\\nb2 = 1;\\n\\na = min(q21/2 ,1);\\na = .5;\\nrad = a*a/16 ;\\na2 = .5;"},{"baseVals":{"enabled":1,"textured":1,"rad":0.845919,"tex_zoom":0.622112,"g":1,"b":1,"a":0.9,"r2":1,"b2":1,"a2":0.5,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0.2999},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"samples":182,"sep":120,"usedots":1,"scaling":0.891519,"smoothing":0.82,"a":0.6},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"t1 = sin(t/7);","point_eqs_eel":"\\nt_abs = sample ;\\n\\nox = sin (t_abs*68);\\noy = cos (t_abs*63);\\noz = sin (t_abs*125);\\n\\nr = 0;\\ng = 1 ;\\nb = 1 ;\\n\\nt_rel = sample - time/127;\\nt_rel = t_rel - int(t_rel);\\n\\na = (512*sample-time*2)%2;\\na = 1;\\n\\nxang = 0 ;\\nyang = t1;\\nzang = t1;\\nfov = 0.15;\\n\\n\\n// Rotation um x,y,z\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\n\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = -ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\n//oz = oz - 6;\\nx = ox*fov/oz +0.5;\\n//x = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;"},{"baseVals":{"usedots":1,"thick":1,"scaling":0.891519,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"tm = time*.1;\\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\\n\\ntic = min(time - tin,1);\\ntin = time;\\n\\ntva = (tic*q1*.5);\\ntvb = (tic*q2*.5);\\ntvc = (tic*q3*.5);\\n\\nq1 = tva;\\nq2 = tvb;\\nq3 = tvc;\\n\\nsz = .5;\\nlen = q4;\\nt4 = len;","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.891519,"smoothing":0.82,"r":0,"g":0.2,"b":0,"enabled":0},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"tm = time*.1;\\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\\n\\ntic = min(time - tin,1);\\ntin = time;\\n\\ntva = (tic*q1*.5);\\ntvb = (tic*q2*.5);\\ntvc = (tic*q3*.5);\\n\\nq1 = tva;\\nq2 = tvb;\\nq3 = tvc;\\n\\nsz = .5;\\nlen = 1;\\nt4 = len;","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"dec_med = pow (0.9, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb);\\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %4;\\nindex2 = (index2 + is_beat*bnot(index))%4;\\nmonitor = index2;\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass + mid + treb;\\n\\nk1 =  is_beat*bnot(index)*bnot(index2);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\np3 = dec_med * p3+ (1-dec_med)*p2;\\nrott = p3 * 3.1416/4;\\n\\npos = pos + q20/140;\\nq28 = pos;\\nq27 = index+1;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\nmovez = movez + .005*(1.5+q1)*30/fps;\\nq30 = movez;\\n\\n\\nzoom = 1.0;\\nrot = -0.00 * index;","pixel_eqs_eel":"zoom = 1 + q1/25;","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = ((texture (sampler_main, uv).xyz * 0.99) - 0.002);\\n  ret = tmpvar_1.xyz;\\n }","comp":" shader_body { \\n  vec3 crisp_1;\\n  vec2 uv3_2;\\n  vec2 uv2_3;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = ((uv - 0.5) * aspect.xy);\\n  float tmpvar_5;\\n  tmpvar_5 = (0.1 / (sqrt(\\n    dot (tmpvar_4, tmpvar_4)\\n  ) + 0.05));\\n  vec2 tmpvar_6;\\n  float tmpvar_7;\\n  tmpvar_7 = (ang / 3.14);\\n  tmpvar_6.x = tmpvar_7;\\n  tmpvar_6.y = (tmpvar_5 * 1.5);\\n  uv2_3.y = (tmpvar_6.y + (0.1 * time));\\n  uv2_3.x = (tmpvar_7 + (0.02 * time));\\n  uv3_2.y = (tmpvar_5 + q30);\\n  uv3_2.x = (tmpvar_7 + (time / 32.0));\\n  crisp_1 = ((texture (sampler_main, uv2_3).xyz + (2.0 * texture (sampler_main, uv3_2).xyz)) + ((2.0 * \\n    ((texture (sampler_blur2, fract(uv2_3)).xyz * scale2) + bias2)\\n  ) + (2.0 * \\n    ((texture (sampler_blur2, fract(uv3_2)).xyz * scale2) + bias2)\\n  )));\\n  crisp_1 = ((3.0 * crisp_1) * rad);\\n  float tmpvar_8;\\n  tmpvar_8 = clamp ((1.0 - (4.0 * rad)), 0.0, 1.0);\\n  vec4 tmpvar_9;\\n  tmpvar_9.w = 1.0;\\n  tmpvar_9.xyz = ((crisp_1 + (\\n    ((vec3(1.0, 0.0, 1.0) * uv.y) * pow ((1.0 - rad), 8.0))\\n   * tmpvar_8)) + (tmpvar_8 * texture (sampler_main, uv).xyz));\\n  ret = tmpvar_9.xyz;\\n }"}')},5164:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":4,"gammaadj":1.98,"decay":0.5,"echo_zoom":0.952,"echo_alpha":0.5,"echo_orient":3,"wave_mode":6,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":2.103,"wave_smoothing":0.54,"wave_mystery":0.38,"modwavealphastart":0.81,"modwavealphaend":1.4,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0.015,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":16,"thickoutline":1,"textured":1,"num_inst":3,"x":0.73,"rad":0.29466,"tex_zoom":1.87511,"r":0.7,"g":0.7,"b":1,"g2":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"trig = q25;\\na = trig*.8; a2 = 0;\\n\\nx0 = x0 *bnot(trig) + trig*rand(100)/100;\\ny0 = y0 *bnot(trig) + trig*rand(100)/100;\\ntex_ang = rand(20);\\nrad = .1+rand(10)/8;\\n\\nx = x0; y = y0;\\nr = .7+.3*sin(time/12);\\nb = .7+.3*sin(time/15);\\ng = .7+.3*sin(time/8);\\nr2 = r; b2 = b; g2 = g;"},{"baseVals":{"enabled":1,"sides":36,"thickoutline":1,"textured":1,"num_inst":4,"x":0.3,"rad":0.05429,"ang":1.25664,"tex_ang":0.37699,"tex_zoom":1.02841,"g":0.7,"b":0.5,"r2":1,"g2":0,"border_g":0.59,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = q31; y = q32;\\nrad = .06;\\ntex_ang = time;\\na = q30;"},{"baseVals":{"sides":63,"x":0.123,"y":0,"rad":0.27319,"tex_zoom":0.49981,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":24,"textured":1,"x":0.7,"y":0.51,"rad":0.19869,"tex_ang":1.00531,"tex_zoom":0.49981,"g":1,"b":0.99,"a":0,"g2":0,"a2":1,"border_r":0,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"thick":1,"additive":1,"scaling":0.04505,"smoothing":0,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"samples":100,"usedots":1,"thick":1,"scaling":0.89152,"smoothing":0,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"t0a = time; t0 = time+.5;\\nspb_ = .5; ;\\nvolb = .5; volx = .5;\\nvol_= 1; index = 0; mov1 = 0;\\nsdev = .1; wamp_ = .1;","frame_eqs_eel":"dec_med = pow (0.8, 30/fps); dec_slow = pow (0.95, 30/fps);\\nvol = (bass+med+treb)/1.5; vol_ = vol_*dec_slow + (1-dec_slow)*vol;\\n\\nis_beat = above(vol, vol_+2*peak) * above (time, t0+spb_*.45);\\nt0a  = if(is_beat,t0,t0a); t0 = if(is_beat,time,t0);\\npeak = if(is_beat,vol,peak*dec_med);\\nindex = (index + is_beat) %128;\\n\\nspb = min(t0-t0a + .01,2);\\nspb_ = if(is_beat,spb_ *.9 +.1*spb, spb_);\\n\\n\\nq20 = vol_;\\nq21 = above(vol,2.7*vol_);\\nq22 = max(0,peak-.0)+.01;\\nhpeak = hpeak*dec_med + (1-dec_med)*q21;\\nq23 = hpeak * (1+rand(8));\\nq24 = is_beat;\\nq25 = q22*(1+rand(8))/8;\\n\\nmindev = min(min(abs(spb-spb_),abs(spb*2-spb_)),abs(spb-spb_*2));\\nsdev = if(is_beat,sdev * .8 + .2*pow(mindev+.02,2),sdev);\\n\\nspeed = 1/fps/spb_;\\ntrel = trel + speed;\\nq10 = trel;\\n\\nwamp =  min(.001/sdev,.15);\\nwamp_ = wamp_*dec_slow + (1-dec_slow)*wamp;\\nq11 = sin(trel/2)*wamp_;\\nq12 = wamp_/2;\\n\\nrota = 2*wamp_*sin(trel/3);\\n//rota = .2*sin(wamp_*32);\\nq5 = cos(rota);\\nq6 = sin(rota);\\nq7 = -q6;\\nq8 = q5;\\n\\nq15 = -sin(trel*.5)*.05;\\nq16 = cos(trel)*wamp_/2;\\n\\nq19 = .1*sin(trel/12);\\n\\n//ODD PLANET MOVEMENT\\ntrig1 = bnot(vis)*bnot(rand(100*fps));\\nvis = if (trig1,1,vis*below(mov1,1));\\nq30 = vis;\\nmov1 = if (vis,mov1+2*speed/fps,-1);\\ndir = if(trig1,rand(100),dir); \\nq31 = .5+.5*cos(dir)*mov1;\\nq32 = .5+.5*sin(dir)*mov1;\\n\\nq29 = (2+sin(time/17)); //reflection water\\n\\nmonitor = wamp;","pixel_eqs_eel":"zoom = 1+.02*rad*q20;\\ndy = -.00;\\nwarp =.1; dx = .0;","warp":"mat2 ofs;\\nvec2 xlat_mutableuv2;\\nfloat xlat_mutablezv;\\n shader_body { \\n  mat2 tmpvar_1;\\n  tmpvar_1[uint(0)].x = texsize.z;\\n  tmpvar_1[uint(0)].y = 0.0;\\n  tmpvar_1[1u].x = 0.0;\\n  tmpvar_1[1u].y = texsize.w;\\n  ofs = (tmpvar_1 * 4.0);\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = ((uv.x - 0.5) + q19);\\n  tmpvar_2.y = (uv.y - 0.5);\\n  vec2 v_3;\\n  v_3.x = ofs[0].x;\\n  v_3.y = ofs[1].x;\\n  vec2 v_4;\\n  v_4.x = ofs[0].x;\\n  v_4.y = ofs[1].x;\\n  vec2 v_5;\\n  v_5.x = ofs[0].y;\\n  v_5.y = ofs[1].y;\\n  vec2 v_6;\\n  v_6.x = ofs[0].y;\\n  v_6.y = ofs[1].y;\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = (texture (sampler_main, (uv + v_3)) - texture (sampler_main, (uv - v_4))).z;\\n  tmpvar_7.y = (texture (sampler_main, (uv + v_5)) - texture (sampler_main, (uv - v_6))).z;\\n  xlat_mutablezv = (time * 0.08);\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = (0.02 * time);\\n  tmpvar_8.y = (-0.05 * time);\\n  xlat_mutableuv2 = ((3.0 * tmpvar_2) + tmpvar_8);\\n  vec3 tmpvar_9;\\n  tmpvar_9.xy = xlat_mutableuv2;\\n  tmpvar_9.z = xlat_mutablezv;\\n  vec3 tmpvar_10;\\n  tmpvar_10.xy = (xlat_mutableuv2 * vec2(2.0, 2.0));\\n  tmpvar_10.z = (xlat_mutablezv * 2.0);\\n  vec3 tmpvar_11;\\n  tmpvar_11.xy = (xlat_mutableuv2 * vec2(4.0, 4.0));\\n  tmpvar_11.z = (xlat_mutablezv * 3.0);\\n  vec3 tmpvar_12;\\n  tmpvar_12.xy = (xlat_mutableuv2 * vec2(8.0, 8.0));\\n  tmpvar_12.z = (xlat_mutablezv * 7.0);\\n  xlat_mutableuv2 = (tmpvar_2 + ((\\n    (((texture (sampler_noisevol_hq, tmpvar_9).z + (texture (sampler_noisevol_hq, tmpvar_10).z / 2.0)) + (texture (sampler_noisevol_hq, tmpvar_11).z / 4.0)) + (texture (sampler_noisevol_hq, tmpvar_12).z / 8.0))\\n   - 1.0) * 0.1));\\n  vec4 tmpvar_13;\\n  tmpvar_13.w = 1.0;\\n  tmpvar_13.xyz = (((\\n    (((0.2 + (\\n      (((1.0 + bass_att) * 0.01) / sqrt(dot (xlat_mutableuv2, xlat_mutableuv2)))\\n     * \\n      (1.0 + normalize(slow_roam_cos))\\n    .xyz)) + ((rand_preset.z - 0.5) * xlat_mutableuv2.y)) * 0.1)\\n   / 2.0) + (texture (sampler_main, \\n    (uv - (0.02 * tmpvar_7))\\n  ).xyz * 0.9)) - 0.01);\\n  ret = tmpvar_13.xyz;\\n }","comp":"float xlat_mutablerain;\\nvec3 xlat_mutableret1;\\nvec2 xlat_mutablers;\\nvec2 xlat_mutablers0;\\nvec2 xlat_mutableuv1;\\nfloat xlat_mutablewater;\\nfloat xlat_mutablez;\\n shader_body { \\n  vec2 uv_1;\\n  mat2 tmpvar_2;\\n  tmpvar_2[uint(0)] = _qb.xy;\\n  tmpvar_2[1u] = _qb.zw;\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = q15;\\n  tmpvar_3.y = q16;\\n  uv_1 = (((\\n    (((uv - 0.5) * tmpvar_2) * 0.7)\\n   * aspect.xy) + 0.5) + tmpvar_3);\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = 0.5;\\n  tmpvar_4.y = ((q11 + 0.6) + (q12 * (\\n    sin(((uv_1.x * 6.0) + q10))\\n   * \\n    cos(((uv_1.y * 8.0) + (time * 0.6)))\\n  )));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = (uv_1.x * 4.0);\\n  tmpvar_5.y = uv_1.y;\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = (uv_1.x * 4.0);\\n  tmpvar_6.y = uv_1.y;\\n  xlat_mutablerain = (texture (sampler_noise_lq, ((tmpvar_5 * 0.2) - time)).x + texture (sampler_noise_lq, ((tmpvar_6 * 0.5) - time)).x);\\n  float tmpvar_7;\\n  tmpvar_7 = (time / 4.0);\\n  xlat_mutablerain = (xlat_mutablerain * clamp ((\\n    (q20 / 2.0)\\n   - \\n    abs(sin(((uv.x / 4.0) - tmpvar_7)))\\n  ), 0.0, 1.0));\\n  xlat_mutableuv1 = ((uv_1 - tmpvar_4) + (xlat_mutablerain * 0.01));\\n  vec3 tmpvar_8;\\n  tmpvar_8.x = xlat_mutableuv1.y;\\n  tmpvar_8.y = (xlat_mutableuv1.x * 2.0);\\n  tmpvar_8.z = (time * 0.2);\\n  xlat_mutableuv1 = (xlat_mutableuv1 + ((texture (sampler_noisevol_hq, tmpvar_8) * \\n    (0.5 - abs(xlat_mutableuv1.y))\\n  ).x * 0.05));\\n  float tmpvar_9;\\n  tmpvar_9 = clamp ((128.0 * xlat_mutableuv1.y), 0.0, 1.0);\\n  xlat_mutablez = (0.4 / xlat_mutableuv1.y);\\n  xlat_mutablers0.x = (xlat_mutableuv1.x * xlat_mutablez);\\n  xlat_mutablers0.y = xlat_mutablez;\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = (xlat_mutablers0.x + tmpvar_7);\\n  tmpvar_10.y = (xlat_mutablez + (time * 4.0));\\n  xlat_mutablers = (tmpvar_10 * tmpvar_9);\\n  xlat_mutablewater = (texture (sampler_noise_hq, xlat_mutablers) + texture (sampler_noise_hq, ((xlat_mutablers / 4.0) - (time / 8.0)))).x;\\n  xlat_mutablewater = (xlat_mutablewater - 1.0);\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = (xlat_mutableuv1.x + 0.5);\\n  tmpvar_11.y = abs((0.5 - xlat_mutableuv1.y));\\n  xlat_mutableret1 = (((texture (sampler_main, uv_1).xyz * \\n    (1.0 - tmpvar_9)\\n  ) + (\\n    ((texture (sampler_main, (tmpvar_11 - (0.2 * xlat_mutablewater))).xyz * tmpvar_9) * pow ((1.0/(xlat_mutablez)), 0.2))\\n   * \\n    (2.0 - rand_preset.y)\\n  )) + ((\\n    (((0.25 + rand_preset.y) * (1.0 + (rand_preset.x * xlat_mutablewater))) * tmpvar_9)\\n   / xlat_mutablez) * vec3(0.0, 0.1, 0.1)));\\n  xlat_mutableret1 = (xlat_mutableret1 + (0.06 * xlat_mutablerain));\\n  vec4 tmpvar_12;\\n  tmpvar_12.w = 1.0;\\n  tmpvar_12.xyz = (1.0 - exp((\\n    (-(pow (xlat_mutableret1, vec3(1.5, 1.5, 1.5))) * 8.0)\\n   * \\n    (1.0 + (q23 * 4.0))\\n  )));\\n  ret = tmpvar_12.xyz;\\n }"}')},9069:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1,"decay":0,"echo_zoom":0,"echo_orient":3,"wave_mode":1,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0,"wave_scale":0,"wave_smoothing":0,"modwavealphastart":0,"modwavealphaend":1,"warpanimspeed":1.4595,"warpscale":2.0067,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0,"wave_b":0,"wave_x":0,"wave_y":0,"ob_size":0,"ob_b":0.2,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_a":1,"mv_x":31,"mv_y":24,"mv_l":0,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"textured":1,"x":0,"y":0.13,"rad":0.591236,"ang":0.628319,"tex_ang":0.628319,"tex_zoom":0.591233,"r2":1,"g2":0,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"textured":1,"x":0,"y":0,"rad":0,"tex_zoom":0,"g":1,"b":1,"a":0,"r2":1,"b2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":14,"additive":1,"textured":1,"x":0,"y":0,"rad":1,"tex_zoom":0,"r":0,"a":0,"g2":0,"border_r":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = .5+.3*cos(time/78);\\ny = .5+.3*sin(time/78);\\n\\ntex_zoom = .2 / (sin(time/31)+1.1)\\n\\n"},{"baseVals":{"sides":63,"additive":1,"textured":1,"x":0,"y":0,"rad":0,"tex_zoom":0,"r":0,"a":0,"r2":1,"b2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = .5+.3*cos(time/59);\\ny = .5+.3 *sin(time/59);"}],"waves":[{"baseVals":{"enabled":1,"samples":187,"sep":9,"usedots":1,"additive":1,"scaling":0,"smoothing":0,"r":0,"b":0},"init_eqs_eel":"","frame_eqs_eel":"t1 = 1;\\nt3 = sin(time/2);\\nt3 = max (t3,0);\\nt3 = 4.9*min(t3,.2);\\n","point_eqs_eel":"t1 = (t1*67+37)%4096;\\nt2 = t1/4096;\\n\\nk1 = (100*sample+time*2)%2;\\nk2 = (100*sample+time*5)%2;\\n\\nx = .49 + .48*sin(sample*31+t2*time/27);\\ny =  0 + .2*t2 + .2*sin(sample*131+t2*time/7);\\n\\n\\n\\na = 1;\\nr = .07;\\n "},{"baseVals":{"enabled":1,"scaling":0,"smoothing":0,"a":0},"init_eqs_eel":"","frame_eqs_eel":"t1 = 1; t2 = 7;","point_eqs_eel":"r = .31;\\nb = 0;\\ng = .0;\\n\\na = 1;\\n//g = 1;b=1;\\n\\nt1 = (t1*67 + 37)%4096;\\npx = (t1-2047)/4096;\\n\\nt2 = (t2*67 + 37)%4096;\\npy = (t2-0)/4096;\\n\\n\\nk1 = (sample*100)%8;\\n\\ny = py/3.5 + .0;\\na = below(y,.2);\\n\\nx = .5 + .4*sin(sample*26)  ;\\n"},{"baseVals":{"enabled":1,"samples":100,"scaling":0,"smoothing":0,"a":0},"init_eqs_eel":"","frame_eqs_eel":"\\nt1 = sin(time*3);\\nt2 = cos(time*3);\\n\\nt3 = sin(time/3);\\nt4 = cos(time/3);\\n\\nt5 = cos(time/4)/2;\\n\\n//give him a break\\n//bird = 1;\\n\\nground = below(t5,-.9);\\ntrig = below(rand(100),1);\\ntrig = trig * bnot(ground) * bnot(bird);\\nbird = bird * bnot(ground);\\n\\nbird = bnot(bird)*trig;\\n\\nt6 = bird;","point_eqs_eel":"\\nr = 1; g = 0; b = 0;\\nk1 = below(sample,.5);\\n\\ndx = .01*k1*sin(sample*50);\\n\\n\\nf1 = sqr(dx);\\n\\ndy =  40*f1*t1 + t2/150;\\ndy = dy+ (1-k1) * .002*sin(sample*50);\\n\\nx = dx + .5 + .1*t3;\\n\\ndy = dy + .2*dx*t4;\\n\\ny0 = t5;\\ny = dy+ .5 + y0/8;\\n\\na = .04;\\n\\n"},{"baseVals":{"spectrum":1,"usedots":1,"smoothing":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"dec_med = pow (0.8, 30/fps);\\ndec_slow = pow (0.9, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %16;\\nindex2 = (index2 + is_beat*bnot(index))%5;\\nmonitor = index2;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass + mid + treb;\\n\\nsb = sb*dec_med + q21*(1-dec_med);\\nq29 = sb;\\n\\nk1 =  is_beat*bnot(index)*bnot(index2);\\np1 =  (index2-2);\\n\\np2 = dec_med * p2+ (1-dec_med)*p1;\\np3 = dec_med * p3+ (1-dec_med)*p2;\\nq5 = cos(p3*3.14/2);\\n\\nrott =  rott +  .003*30/fps*p3;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\nmovx = movx + .002*30/fps;\\nq28 = movx;\\n\\nq15 = (1+sin(time/23))*.15;\\nq29 = 4*(.5+sin(time/17));\\nq30 = 5/(1.2+sin(time/50)); \\nq31 = sin(time/38)/3;\\nq32 = 2+sin(time/18);\\n\\nwarp = .06;\\nzoom = .998;","pixel_eqs_eel":"","warp":" shader_body { \\n  float k1_1;\\n  float ky_2;\\n  vec2 uv3_3;\\n  uv3_3 = (100.0 * (uv - vec2(0.5, 0.5)));\\n  float tmpvar_4;\\n  tmpvar_4 = dot (texture (sampler_noise_lq, uv), vec4(0.32, 0.49, 0.29, 0.0));\\n  ky_2 = clamp (((\\n    (-(uv3_3.y) / 100.0)\\n   + \\n    ((tmpvar_4 / 4.0) * cos((16.0 * tmpvar_4)))\\n  ) + 0.23), 0.0, 1.0);\\n  k1_1 = (uv3_3.x - (sign(uv3_3.x) * 24.0));\\n  k1_1 = (k1_1 - (sign(k1_1) * 9.0));\\n  k1_1 = (k1_1 + ((\\n    (k1_1 - (12.0 * sign(k1_1)))\\n   * ky_2) * ky_2));\\n  ky_2 = clamp ((ky_2 - 0.1), 0.0, 1.0);\\n  k1_1 = (k1_1 + ((\\n    (k1_1 - (24.0 * sign(k1_1)))\\n   * ky_2) * ky_2));\\n  ky_2 = clamp ((ky_2 - 0.1), 0.0, 1.0);\\n  k1_1 = (k1_1 + ((\\n    (k1_1 - (36.0 * sign(k1_1)))\\n   * ky_2) * ky_2));\\n  ky_2 = clamp ((ky_2 - 0.1), 0.0, 1.0);\\n  k1_1 = (k1_1 + ((\\n    (k1_1 - (48.0 * sign(k1_1)))\\n   * ky_2) * ky_2));\\n  ky_2 = clamp ((ky_2 - 0.1), 0.0, 1.0);\\n  k1_1 = (k1_1 + ((\\n    (k1_1 - (60.0 * sign(k1_1)))\\n   * ky_2) * ky_2));\\n  ky_2 = clamp ((ky_2 - 0.1), 0.0, 1.0);\\n  float tmpvar_5;\\n  tmpvar_5 = clamp (k1_1, -1.6, 1.6);\\n  k1_1 = tmpvar_5;\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = ((texture (sampler_main, fract(uv)).xyz * 0.5) + (vec3(0.1, 0.0, 0.0) * cos(tmpvar_5)));\\n  ret = tmpvar_6.xyz;\\n }","comp":"float xlat_mutablehoriz;\\nvec3 xlat_mutableret1;\\nvec2 xlat_mutablers;\\nvec2 xlat_mutableuv2;\\nvec2 xlat_mutableuv5;\\nvec3 xlat_mutablewater;\\n shader_body { \\n  vec2 uv_1;\\n  vec3 clouds_2;\\n  vec3 ret_3;\\n  uv_1 = (uv - 0.5);\\n  uv_1 = (uv_1 * aspect.xy);\\n  uv_1.x = uv_1.x;\\n  float tmpvar_4;\\n  tmpvar_4 = clamp ((1.0/((uv_1.y - 0.1))), 0.0, 200.0);\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = ((uv_1.x * tmpvar_4) + time);\\n  tmpvar_5.y = tmpvar_4;\\n  xlat_mutablers = (tmpvar_5 / 44.0);\\n  xlat_mutablewater = (vec3((dot (texture (sampler_noise_lq, xlat_mutablers), vec4(0.32, 0.49, 0.29, 0.0)) - 0.5)) * clamp ((16.0 * \\n    (uv_1.y - 0.1)\\n  ), 0.0, 1.0));\\n  float tmpvar_6;\\n  tmpvar_6 = (xlat_mutablewater / 16.0).x;\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = (uv_1.x + q31);\\n  tmpvar_7.y = (abs((uv_1.y - 0.1)) - abs((q31 / 2.0)));\\n  float tmpvar_8;\\n  tmpvar_8 = clamp ((1.0/(abs(\\n    (uv_1.y - 0.1)\\n  ))), 0.0, 200.0);\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = (tmpvar_7.x * tmpvar_8);\\n  tmpvar_9.y = tmpvar_8;\\n  xlat_mutablers = ((tmpvar_9 / 16.0) + tmpvar_6);\\n  clouds_2 = (vec3(dot (texture (sampler_noise_hq, xlat_mutablers), vec4(0.32, 0.49, 0.29, 0.0))) * ((\\n    clamp ((0.6 - (2.0 * (uv_1.y - 0.1))), 0.0, 1.0)\\n   * 0.5) / (0.04 + \\n    sqrt(dot (tmpvar_7, tmpvar_7))\\n  )));\\n  vec3 tmpvar_10;\\n  tmpvar_10.xy = vec2(1.0, 0.6);\\n  tmpvar_10.z = (q32 / tmpvar_8);\\n  clouds_2 = (clouds_2 * tmpvar_10);\\n  vec2 tmpvar_11;\\n  tmpvar_11.y = 0.0;\\n  tmpvar_11.x = (q28 / 4.0);\\n  xlat_mutableuv5 = ((uv_1 + tmpvar_11) + tmpvar_6);\\n  vec2 tmpvar_12;\\n  tmpvar_12.x = (xlat_mutableuv5.x * 8.0);\\n  tmpvar_12.y = (xlat_mutableuv5.y * 4.0);\\n  xlat_mutablehoriz = ((abs(\\n    (xlat_mutableuv5.y - 0.1)\\n  ) * (1.0 + texture (sampler_noise_lq, tmpvar_12).x)) * (1.0 + texture (sampler_noise_hq, vec2((xlat_mutableuv5.x / 4.0))).x));\\n  float tmpvar_13;\\n  tmpvar_13 = clamp ((1.0 - (q30 * xlat_mutablehoriz)), 0.0, 1.0);\\n  xlat_mutablehoriz = tmpvar_13;\\n  xlat_mutableuv2.y = uv_1.y;\\n  xlat_mutableuv2.x = (uv_1.x + 0.65);\\n  xlat_mutableuv2 = (((1.12 * xlat_mutableuv2) - 0.1) - 0.4);\\n  vec2 tmpvar_14;\\n  tmpvar_14 = (q28 * vec2(1.0, 0.0));\\n  xlat_mutableret1 = texture (sampler_main, fract((xlat_mutableuv2 + tmpvar_14))).xyz;\\n  xlat_mutableuv2.y = uv_1.y;\\n  xlat_mutableuv2.x = (uv_1.x + 1.3);\\n  xlat_mutableuv2 = (((0.92 * xlat_mutableuv2) - 0.1) - 0.4);\\n  xlat_mutableret1 = (xlat_mutableret1 + texture (sampler_main, fract((xlat_mutableuv2 + tmpvar_14))).xyz);\\n  xlat_mutableuv2.y = uv_1.y;\\n  xlat_mutableuv2.x = (uv_1.x + 1.95);\\n  xlat_mutableuv2 = (((0.72 * xlat_mutableuv2) - 0.1) - 0.4);\\n  xlat_mutableret1 = (xlat_mutableret1 + texture (sampler_main, fract((xlat_mutableuv2 + tmpvar_14))).xyz);\\n  ret_3 = (((\\n    ((0.1 * (0.5 + xlat_mutablewater)) + (0.2 / q30))\\n   * vec3(0.0, 0.5, 0.6)) + clamp (\\n    (clouds_2 * (1.0 - (4.0 * tmpvar_13)))\\n  , 0.0, 1.0)) + (vec3(tmpvar_13) * 0.06));\\n  ret_3 = (ret_3 * clamp ((1.0 - \\n    (xlat_mutableret1.x * 8.0)\\n  ), 0.0, 1.0));\\n  vec4 tmpvar_15;\\n  tmpvar_15.w = 1.0;\\n  tmpvar_15.xyz = ret_3;\\n  ret = tmpvar_15.xyz;\\n }"}')},8517:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1.98,"decay":0.5,"echo_zoom":0.952,"echo_alpha":0.5,"echo_orient":3,"wave_mode":4,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.527,"wave_smoothing":0.45,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.8,"wave_g":0.49,"ob_size":0.015,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"sides":33,"additive":1,"num_inst":81,"rad":0.04896,"tex_ang":1.00531,"tex_zoom":1.53117,"g":1,"b":1,"a":0,"g2":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"\\ntrel = time/8;\\nk1 = instance/num_inst;\\nk2 = k1 + trel - int(k1+trel);\\n\\ny0 = k2+.01 ;\\n\\nxwidth = .1*(cos(6*k1)+3); //breite\\nxofs = .1*cos(k2*6+trel)*y0;\\nx = .5 + .4*xwidth*(.2+y0)*sin(k1*1383*xwidth) + xofs;\\n//xwidth in der letzten Klammer : Test\\n\\ny = y0;\\n\\nbright = 1-sqr(y0); \\na = max(bright,0); a2 = 0;\\nrad = .4*y0+.1 - .0*sin(k1*954);\\n\\nr = .0; g = 0; b = .0;\\nr2 = 0; g2 = 0; b2= .48; //## rot mit ampl. mod !\\nadditive = 1; ///sonst andere farben im warp-s gestoert"},{"baseVals":{"enabled":1,"sides":12,"additive":1,"num_inst":571,"x":0.26,"y":0.2,"rad":0.39317,"tex_zoom":0.9355,"g2":0,"a2":0.2,"border_g":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"mov1 = q1;\\nRotMode = q3;\\nburst = q10;\\ncopies = q14;\\ncopy = (instance%copies)/copies;\\nk1 = int(instance/copies)*copies/num_inst;\\nk1 = int(k1*burst)/burst+k1/burst;\\n\\nmov1 = mov1 + k1 -copy*q2;//dt\\nmov1 = mov1 - int(mov1);\\n\\nRotMode = RotMode - copy*q4;\\nrota = mov1 * RotMode*q5*2 ;\\nmov1 = mov1*(1-RotMode) + RotMode*(.5+.025*k1);\\n\\nmov1 = pow(mov1,.9); //Schneller bei t=0;\\n\\nTht = sin(k1*k1*123.2)*(.2 + RotMode*.0);\\nPhi = k1*1613.3+rota;\\nv0 = (1.0 + .3*cos(k1*13234.7))*q5;\\n\\nz0 = q18/q5; //proximity\\n\\nt0 = .4;\\nspur = (mov1-t0) * above(mov1-t0,0)*q15 ;\\npy = spur*sin(copy*6.28);\\npx = spur*cos(copy*6.28);\\n\\nfov = z0*2; //kein vol hier, sonst y-skal daneben\\nox = (mov1-q19)*v0*sin(Tht) * cos(Phi); //### -.5 bis .5\\noy = mov1*v0*(1-mov1)*cos(2*Tht) -.25;\\noz = mov1*v0*sin(Tht)*sin(Phi); \\n\\nox = ox +  (k1-.5)*q17 +px; \\noy = oy -py;\\noz = oz +py*3;\\n\\n//flim = below(((ox+oy+oz)*800)%32,q13-.1); //ctrl\\n//flim = q13/(((ox+oy+oz)*600)%16+1); //ctrl\\nrad = .025*z0/(oz+z0)*(1-mov1*.5);\\n\\nx = .5 + fov*ox/(oz+z0);\\ny = .5 + fov*oy/(oz+z0);\\nvis = above(mov1,q11)*below(mov1,q12)*above(oz,-z0);\\n\\na = vis*.7/sqrt(copies)*(1+above(spur,0));\\na2 = 0.;\\ng = flim;"},{"baseVals":{"enabled":1,"sides":13,"additive":1,"num_inst":212,"x":0.65,"y":0.38,"rad":1.26467,"tex_zoom":0.73678,"g":1,"a":0.3,"r2":1,"g2":0,"border_r":0.5,"border_g":0.5,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"//q25 = time/4;\\n//trel = 2* (q25/2-int(q25/2));\\ntrel = q25;\\ncopies = 1;\\ncopy = (instance%copies)/copies;\\nk1 = int(instance/copies)*copies/num_inst;\\nk2 = k1 + .5;\\ntrel = trel ;\\nt0 = .5; //do not change\\n\\nphase = above(trel,t0);\\nmov1 = bnot(phase)* (t0-trel + .01*k1);\\nmov2 = phase * (trel-t0); //####\\n//mov2 = pow(mov2,.8);\\nstray = 1.2-phase;\\n\\nTht = 3.14*sin(1234.2*k1+time*bnot(phase)) * stray ;\\nPhi = 3245.1*k1;\\n\\nsize0 = .02;\\nox = mov1*q27 + sin(Tht)*cos(phi)* (size0+mov2*(2+k1));\\noy = mov1*8 + cos(Tht)* (size0+4*mov2*k2)*(1-mov2*k2)/2;\\noz = mov1*8 + sin(Tht)*sin(phi)* (size0+mov2*2*(2+k1));\\n\\nz0 = 1;\\nrad = .03 / (oz+z0)/(1+trel*int(rand(100))/50);\\n\\nx = .5 + ox/(oz+z0);\\ny = q29+.2+ oy/(oz+z0);\\n\\na = .1*bnot(phase)+phase*max(0,1-mov2*0)*above(oz+z0,0)*.8; "},{"baseVals":{"sides":14,"additive":1,"thickoutline":1,"textured":1,"num_inst":31,"x":0.75,"y":0.6,"rad":0.01,"tex_zoom":0.3357,"g":1,"a":0.5,"r2":1,"g2":0,"border_r":0.2,"border_g":0.7,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"samples":75,"sep":20,"usedots":1,"additive":1,"scaling":7.858,"smoothing":0.1,"g":0,"b":0,"a":0.2,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"usedots":1,"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"r":0,"g":0.2,"b":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"t0a = time; t0 = time+.5;\\nspb_ = .5; ;\\nvolb = .5; volx = .5;\\nvol_= 1; index = 0; mov1 = 0;","frame_eqs_eel":"dec_med = pow (0.85, 30/fps); dec_slow = pow (0.95, 30/fps);\\nvol = (bass+med+treb)/1.5; vol_ = vol_*dec_slow + (1-dec_slow)*vol;\\n\\nis_beat = above(vol, .1+vol_+2*peak) * above (time, t0+spb_*.45);\\nt0a  = if(is_beat,t0,t0a); t0 = if(is_beat,time,t0);\\npeak = if(is_beat,vol,peak*dec_med);\\nindex = (index + is_beat) %128;\\nspb_ = if(is_beat,spb_ *.9 +.1*min(t0-t0a + .01,2), spb_);\\n\\nq20 = vol_;\\nq21 = above(vol,2.7*vol_);\\nq22 = max(0,peak-.0)+.01;\\nhpeak = hpeak*dec_med + (1-dec_med)*q21;\\nq23 = hpeak * (1+int(rand(8)));\\nq24 = is_beat;\\nvolb = bnot(q24)*volb + q24*vol_; //# vol oder vol_ ?\\nvolx = volx + .2/fps*max(min(volb-volx,1),-1)*bnot(RotMode);\\n\\n// *********** CENTRAL TIMELINE **************\\nrotmode = max(min(sin(mov1/2.4-1.5)*4-2,1),0); //####\\nstop = if(bnot(stop),bnot(index%32),below(lo,1))*bnot(rotmode);\\n//tmp = status%16;\\nspread = if (below(lo,1),spread,int(rand(2))*int(rand(12))/20);\\ncopies = if (below(lo,1),copies,3+int(rand(2))*int(rand(8)));\\nspur  = if (below(lo,1),spur, above(copies,7)*.1);\\nbursts = if (below(lo,1),bursts,1+int(rand(2))*int(rand(6)));\\nxbase = if (below(lo,1),xbase,int(rand(2))*(int(rand(10))/10-.5));\\nvs0 = if (is_beat * bnot(index%77),int(rand(100))/100-.7,vs0);\\nvshift = vshift + 6/fps*max(min((vs0-vshift),.02),-.02);\\n//*********** SMOOTH MOVEMENTS q1 - q8 for SHAPE2 ********\\n//FONTAENE\\nspeed = .15/fps/spb_;\\ntmp = mov1; mov1 = mov1+speed; q2 = mov1-tmp; q1 = mov1;\\n\\n//ROTATION\\n//evtl q5 mit rotmode fixieren statt volx blockieren\\ntmp = RotMode; q3 = RotMode; q4 = RotMode-tmp;\\n\\n//VOLUME\\ntmp = volx; q5 = volx; q6 = q5-tmp; //nicht aendern waehrend Rotation\\n\\n//********* SWITCHES SHAPE2 *************\\nq10 = bursts; //num bursts\\nlo = if(stop,lo+speed,0); //ident. wie bei mov 1!!\\nhi = if(above(lo,1),0,hi+speed); //ident. wie bei mov 1!!\\nq11 = lo; //fade out\\nq12 = hi;\\nq13 = sqrt(q22)*0; //blink effect, ca. 0..16\\nq14 = copies; //copies - noch implementieren\\nq15 = spur*(1-RotMode); //Ampl. multiple spurs; nur mit >8 copies !\\nq16 = 0; //reserved for spur start\\nq17 = spread * (1-rotmode); //hor. spread, max. ca. 0.4\\nq18 = 1/min(max(sin(mov1/2)*10,1),4); //proximity - smaller values: closer;\\nq19 = xbase;\\n//********* CONTROL PARAMETERS SHAPE3 *************\\nxtime = if (stop*q21*above(xtime,2),0,xtime+.3/fps); //impact\\nq25 = xtime;\\nq26 = if (below(xtime,.55),pow(32,-sqr(xtime-.55)*512),pow(2,-sqr(xtime-.55)*3));\\nq27 = sin(time/29)*4; //x-direction impact\\n\\n//********* GENERAL CONTROL PARAMETERS ***************\\nwind = wind+.5/fps * (volx-1.5);\\nq28 = wind;//wind direction - warp shader\\nq29 = sigmoid(sin(mov1/4)*18,1)*.6-.6; //vshift, in warp+comp+impact shape\\nq29 = vshift;\\nq30 = max(sin(mov1/2.2)*sin(time/7),0)+q26;// front cloud dens. - comp.\\nq31 = q5*2-2 + sin(time/17); //back cloud lighting - comp shader\\nq32 = 3+2*sin(time/27); //back cloud density - comp shader\\n\\nmonitor = vshift;;","pixel_eqs_eel":"zoom = 1;\\ndy = -.00;\\nwarp =.0;","warp":"mat2 ofs;\\nfloat xlat_mutablegreen;\\nfloat xlat_mutablek1;\\nfloat xlat_mutablered;\\nvec2 xlat_mutableuv2;\\nfloat xlat_mutablewave;\\nfloat xlat_mutablezv;\\n shader_body { \\n  mat2 tmpvar_1;\\n  tmpvar_1[uint(0)].x = texsize.z;\\n  tmpvar_1[uint(0)].y = 0.0;\\n  tmpvar_1[1u].x = 0.0;\\n  tmpvar_1[1u].y = texsize.w;\\n  ofs = (tmpvar_1 * 4.0);\\n  float delta_2;\\n  float ky_3;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = (uv.x - 0.5);\\n  tmpvar_4.y = ((uv.y - 0.5) + q29);\\n  vec2 v_5;\\n  v_5.x = ofs[0].x;\\n  v_5.y = ofs[1].x;\\n  vec2 v_6;\\n  v_6.x = ofs[0].x;\\n  v_6.y = ofs[1].x;\\n  vec2 v_7;\\n  v_7.x = ofs[0].y;\\n  v_7.y = ofs[1].y;\\n  vec2 v_8;\\n  v_8.x = ofs[0].y;\\n  v_8.y = ofs[1].y;\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = (texture (sampler_main, (uv + v_5)) - texture (sampler_main, (uv - v_6))).x;\\n  tmpvar_9.y = (texture (sampler_main, (uv + v_7)) - texture (sampler_main, (uv - v_8))).x;\\n  xlat_mutablered = (0.5 * texture (sampler_main, (uv - (0.004 * tmpvar_9))).x);\\n  xlat_mutablered = (xlat_mutablered + (0.5 * texture (sampler_main, uv).x));\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = tmpvar_4.x;\\n  tmpvar_10.y = (0.0078125 * (float(\\n    int((tmpvar_4.y * 128.0))\\n  ) + abs(\\n    (fract((tmpvar_4.y * 128.0)) - 0.5)\\n  )));\\n  vec2 tmpvar_11;\\n  tmpvar_11 = (tmpvar_10 * 4.0);\\n  ky_3 = clamp ((-0.5 - tmpvar_11.y), 0.0, 1.0);\\n  xlat_mutablek1 = (abs((\\n    fract((tmpvar_11.x * 2.0))\\n   - 0.5)) * 8.0);\\n  xlat_mutablek1 = (xlat_mutablek1 - sign(xlat_mutablek1));\\n  delta_2 = (0.1 + (rand_preset * 0.05)).x;\\n  xlat_mutablek1 = (xlat_mutablek1 - ((\\n    (4.0 * sign(xlat_mutablek1))\\n   * ky_3) * ky_3));\\n  ky_3 = clamp ((ky_3 - delta_2), 0.0, 1.0);\\n  xlat_mutablek1 = (xlat_mutablek1 - ((\\n    (8.0 * sign(xlat_mutablek1))\\n   * ky_3) * ky_3));\\n  ky_3 = clamp ((ky_3 - delta_2), 0.0, 1.0);\\n  xlat_mutablek1 = (xlat_mutablek1 - ((\\n    (12.0 * sign(xlat_mutablek1))\\n   * ky_3) * ky_3));\\n  ky_3 = clamp ((ky_3 - delta_2), 0.0, 1.0);\\n  xlat_mutablek1 = (xlat_mutablek1 - ((\\n    (16.0 * sign(xlat_mutablek1))\\n   * ky_3) * ky_3));\\n  ky_3 = clamp ((ky_3 - delta_2), 0.0, 1.0);\\n  float tmpvar_12;\\n  tmpvar_12 = clamp (xlat_mutablek1, -1.6, 1.6);\\n  xlat_mutablek1 = tmpvar_12;\\n  xlat_mutablegreen = (cos((tmpvar_12 * 2.0)) - 0.1);\\n  xlat_mutablewave = ((sin(\\n    ((q1 * 8.0) - (uv.x * 6.0))\\n  ) / 2.0) * q3);\\n  xlat_mutablewave = ((xlat_mutablewave * float(\\n    (xlat_mutablewave >= 0.0)\\n  )) + (q30 * 0.02));\\n  xlat_mutablered = (xlat_mutablered + ((\\n    (xlat_mutablewave / abs(sin((\\n      (1.0/(tmpvar_12))\\n     + \\n      (q1 / 8.0)\\n    ))))\\n   * xlat_mutablegreen) * ky_3));\\n  xlat_mutablezv = ((time * 0.08) + (0.2 * sin(\\n    ((uv * 16.0) + time)\\n  ))).x;\\n  vec2 tmpvar_13;\\n  tmpvar_13.x = q28;\\n  tmpvar_13.y = (0.2 * time);\\n  xlat_mutableuv2 = ((tmpvar_4 * 2.0) + tmpvar_13);\\n  vec3 tmpvar_14;\\n  tmpvar_14.xy = xlat_mutableuv2;\\n  tmpvar_14.z = xlat_mutablezv;\\n  vec3 tmpvar_15;\\n  tmpvar_15.xy = (xlat_mutableuv2 * vec2(2.0, 2.0));\\n  tmpvar_15.z = (xlat_mutablezv * 2.0);\\n  vec3 tmpvar_16;\\n  tmpvar_16.xy = (xlat_mutableuv2 * vec2(4.0, 4.0));\\n  tmpvar_16.z = (xlat_mutablezv * 3.0);\\n  vec3 tmpvar_17;\\n  tmpvar_17.xy = (xlat_mutableuv2 * vec2(8.0, 8.0));\\n  tmpvar_17.z = (xlat_mutablezv * 7.0);\\n  xlat_mutableuv2 = (tmpvar_4 + ((\\n    ((texture (sampler_noisevol_hq, tmpvar_14).z + (texture (sampler_noisevol_hq, tmpvar_15).z / 2.0)) + (texture (sampler_noisevol_hq, tmpvar_16).z / 4.0))\\n   + \\n    (texture (sampler_noisevol_hq, tmpvar_17).z / 8.0)\\n  ) * 0.1));\\n  vec3 tmpvar_18;\\n  tmpvar_18.x = xlat_mutablered;\\n  tmpvar_18.y = xlat_mutablegreen;\\n  tmpvar_18.z = ((1.0 + xlat_mutableuv2.y) * sqrt(dot (xlat_mutableuv2, xlat_mutableuv2)));\\n  vec4 tmpvar_19;\\n  tmpvar_19.w = 1.0;\\n  tmpvar_19.xyz = ((tmpvar_18 * 0.8) - 0.005);\\n  ret = tmpvar_19.xyz;\\n }","comp":"float trel;\\nfloat vshift;\\nvec2 sunpos;\\nvec3 xlat_mutablelava;\\nvec3 xlat_mutableret1;\\nvec2 xlat_mutablers;\\nvec2 xlat_mutablers0;\\nfloat xlat_mutablesmoke;\\nfloat xlat_mutablesmoke2;\\nfloat xlat_mutablesun;\\nvec2 xlat_mutableuv_l;\\nvec3 xlat_mutableuv_vol;\\nvec2 xlat_mutableuvc;\\nfloat xlat_mutablew;\\nfloat xlat_mutablez;\\n shader_body { \\n  trel = (time / 2.0);\\n  vshift = (0.5 - q29);\\n  vec2 tmpvar_1;\\n  tmpvar_1.x = rand_preset.x;\\n  tmpvar_1.y = ((-0.1 - (rand_preset.y / 2.0)) + vshift);\\n  sunpos = (tmpvar_1 * aspect.xy);\\n  float tmpvar_2;\\n  tmpvar_2 = (time * 0.1);\\n  vec2 tmpvar_3;\\n  tmpvar_3 = ((uv - 0.5) * aspect.wz);\\n  float tmpvar_4;\\n  float tmpvar_5;\\n  tmpvar_5 = (min (abs(\\n    (tmpvar_3.x / tmpvar_3.y)\\n  ), 1.0) / max (abs(\\n    (tmpvar_3.x / tmpvar_3.y)\\n  ), 1.0));\\n  float tmpvar_6;\\n  tmpvar_6 = (tmpvar_5 * tmpvar_5);\\n  tmpvar_6 = (((\\n    ((((\\n      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)\\n     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)\\n   * tmpvar_6) + 0.9999793) * tmpvar_5);\\n  tmpvar_6 = (tmpvar_6 + (float(\\n    (abs((tmpvar_3.x / tmpvar_3.y)) > 1.0)\\n  ) * (\\n    (tmpvar_6 * -2.0)\\n   + 1.570796)));\\n  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.x / tmpvar_3.y)));\\n  if ((abs(tmpvar_3.y) > (1e-08 * abs(tmpvar_3.x)))) {\\n    if ((tmpvar_3.y < 0.0)) {\\n      if ((tmpvar_3.x >= 0.0)) {\\n        tmpvar_4 += 3.141593;\\n      } else {\\n        tmpvar_4 = (tmpvar_4 - 3.141593);\\n      };\\n    };\\n  } else {\\n    tmpvar_4 = (sign(tmpvar_3.x) * 1.570796);\\n  };\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = ((0.3183098 * tmpvar_4) + tmpvar_2);\\n  tmpvar_7.y = (((\\n    (aspect.w * log(sqrt(dot (tmpvar_3, tmpvar_3))))\\n   * 0.6) + (0.3183098 * tmpvar_4)) - (tmpvar_2 * 4.0));\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (0.5 + (0.5 - abs(\\n    ((fract((tmpvar_7 * 0.5)) * 2.0) - 1.0)\\n  )));\\n  xlat_mutableuvc = (((tmpvar_8 - 0.5) * aspect.xy) + 0.5);\\n  vec2 tmpvar_9;\\n  tmpvar_9.y = 0.0;\\n  tmpvar_9.x = (0.005 * time);\\n  xlat_mutableuv_l = (tmpvar_8 + tmpvar_9);\\n  vec2 tmpvar_10;\\n  tmpvar_10 = sin((xlat_mutableuvc - sunpos));\\n  xlat_mutablesun = (0.1 / sqrt(dot (tmpvar_10, tmpvar_10)));\\n  vec2 tmpvar_11;\\n  tmpvar_11 = fract(tmpvar_8);\\n  vec3 tmpvar_12;\\n  tmpvar_12 = vec3((texture (sampler_fc_main, tmpvar_11).x + (2.0 * (\\n    (texture (sampler_blur2, tmpvar_11).xyz * scale2)\\n   + bias2).x)));\\n  vec3 tmpvar_13;\\n  tmpvar_13.x = tmpvar_12.x;\\n  tmpvar_13.y = pow (tmpvar_12.x, 2.1);\\n  tmpvar_13.z = pow (tmpvar_12.x, 4.0);\\n  xlat_mutablew = ((tmpvar_8.y - (\\n    ((dot (texture (sampler_noise_hq, vec2((xlat_mutableuv_l.x / 6.0))), vec4(0.32, 0.49, 0.29, 0.0)) + tmpvar_8.x) - 0.5)\\n   / 4.0)) - vshift);\\n  xlat_mutablez = (0.2 / xlat_mutablew);\\n  float tmpvar_14;\\n  tmpvar_14 = clamp ((-0.2 - (\\n    (8.0 * q5)\\n   * xlat_mutablew)), 0.0, 1.0);\\n  xlat_mutablers0.x = (((tmpvar_8.x - 0.5) * (1.0 + \\n    abs(xlat_mutablez)\\n  )) * 2.0);\\n  xlat_mutablers0.y = xlat_mutablez;\\n  xlat_mutablers0 = (xlat_mutablers0 * ((4.0 * \\n    float((xlat_mutablez <= 0.0))\\n  ) + 1.0));\\n  vec2 tmpvar_15;\\n  tmpvar_15.x = 0.0;\\n  tmpvar_15.y = (1.5 + xlat_mutablew);\\n  vec2 x_16;\\n  x_16 = (xlat_mutablers0 - tmpvar_15);\\n  float tmpvar_17;\\n  tmpvar_17 = ((q26 / sqrt(\\n    dot (x_16, x_16)\\n  )) / 4.0);\\n  xlat_mutablers0 = (xlat_mutablers0 * (1.0 + (tmpvar_17 * tmpvar_17)));\\n  xlat_mutablers.x = (xlat_mutablers0 * 2.0).x;\\n  xlat_mutablers.y = (xlat_mutablers0.y + (trel * 0.5));\\n  float tmpvar_18;\\n  tmpvar_18 = (texture (sampler_main, tmpvar_8).y * tmpvar_14);\\n  vec3 tmpvar_19;\\n  tmpvar_19.xy = (xlat_mutablers * 2.0);\\n  tmpvar_19.z = (0.2 * trel);\\n  xlat_mutableuv_vol = (tmpvar_19 * float((xlat_mutablez >= 0.0)));\\n  xlat_mutablelava = (((\\n    (2.0 * clamp ((texture (sampler_noisevol_hq, xlat_mutableuv_vol) - 0.2), 0.0, 1.0))\\n  .xyz * \\n    clamp ((texture (sampler_noise_hq, (xlat_mutablers / 16.0)) - 0.5), 0.0, 1.0)\\n  .x) / sqrt(\\n    abs(xlat_mutablez)\\n  )) + tmpvar_17);\\n  float tmpvar_20;\\n  tmpvar_20 = dot (xlat_mutablelava, vec3(0.32, 0.49, 0.29));\\n  vec3 tmpvar_21;\\n  tmpvar_21.x = tmpvar_20;\\n  tmpvar_21.y = pow (tmpvar_20, 2.1);\\n  tmpvar_21.z = pow (tmpvar_20, 6.0);\\n  xlat_mutableret1 = (((\\n    ((tmpvar_8.y * (1.0 + q23)) + xlat_mutablesun)\\n   * vec3(0.1, 0.1, 0.2)) * tmpvar_14) + (clamp (tmpvar_21, 0.0, 1.0) * (1.0 - \\n    clamp ((-1.0 - (12.0 * xlat_mutablew)), 0.0, 1.0)\\n  )));\\n  xlat_mutableret1 = (xlat_mutableret1 * clamp ((1.0 - \\n    (tmpvar_18 * 8.0)\\n  ), 0.0, 1.0));\\n  xlat_mutablesmoke = texture (sampler_main, fract(((tmpvar_8 - 0.5) + 0.5))).z;\\n  xlat_mutablesmoke = (xlat_mutablesmoke * (xlat_mutablesmoke * q5));\\n  xlat_mutableret1 = (xlat_mutableret1 * clamp ((1.0 - \\n    ((xlat_mutablesmoke * q32) * tmpvar_14)\\n  ), 0.0, 1.0));\\n  xlat_mutablesmoke2 = (texture (sampler_main, ((\\n    (tmpvar_8 - 0.5)\\n   / 2.0) + 0.5)).z * q30);\\n  xlat_mutableret1 = (xlat_mutableret1 + (clamp (tmpvar_13, 0.0, 1.0) - (\\n    ((xlat_mutablez * clamp ((xlat_mutablesmoke + \\n      (xlat_mutablew * q31)\\n    ), 0.0, 1.0)) * vec3(1.0, 0.4, 0.1))\\n   * tmpvar_14)));\\n  float tmpvar_22;\\n  tmpvar_22 = clamp (((\\n    (tmpvar_18 * xlat_mutablez)\\n   * xlat_mutablez) / 16.0), 0.0, 1.0);\\n  vec3 tmpvar_23;\\n  tmpvar_23.x = tmpvar_22;\\n  tmpvar_23.y = pow (tmpvar_22, 2.1);\\n  tmpvar_23.z = pow (tmpvar_22, 6.0);\\n  xlat_mutableret1 = (xlat_mutableret1 + clamp (tmpvar_23, 0.0, 1.0));\\n  xlat_mutableret1 = (xlat_mutableret1 * clamp ((\\n    (((dot (texture (sampler_noise_mq, vec2(\\n      ((xlat_mutableuv_l.x / 4.0) + (0.02 * trel))\\n    )), vec4(0.32, 0.49, 0.29, 0.0)) / 6.0) - tmpvar_8.y) + 0.8)\\n   * 32.0), 0.0, 1.0));\\n  vec3 tmpvar_24;\\n  tmpvar_24.x = xlat_mutablesmoke2;\\n  tmpvar_24.y = pow (xlat_mutablesmoke2, 2.1);\\n  tmpvar_24.z = pow (xlat_mutablesmoke2, 6.0);\\n  xlat_mutableret1 = ((xlat_mutableret1 * clamp (\\n    (1.0 - xlat_mutablesmoke2)\\n  , 0.0, 1.0)) + clamp (tmpvar_24, 0.0, 1.0));\\n  vec4 tmpvar_25;\\n  tmpvar_25.w = 1.0;\\n  tmpvar_25.xyz = (1.0 - exp((\\n    -(xlat_mutableret1)\\n   * 2.0)));\\n  ret = tmpvar_25.xyz;\\n }"}')},1656:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1.980001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"wave_mode":4,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.5274,"wave_smoothing":0.45,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.4595,"warpscale":2.0067,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.8,"wave_g":0.49,"ob_size":0.015,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.4999,"mv_g":0.4999,"mv_b":0.4999,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"additive":1,"rad":0.048958,"tex_ang":1.00531,"tex_zoom":1.531168,"r":0,"g":1,"b":1,"r2":0.83,"g2":0.93,"b2":0.8,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"\\ntrel = time/3;\\n\\nx = .5+sin(trel*2);\\ny = .5+cos(trel*1.3);\\n\\n\\n\\n\\nrad = .1;\\na = .8;"},{"baseVals":{"thickoutline":1,"textured":1,"x":0.26,"y":0.2,"rad":0.393173,"tex_zoom":0.9355,"r":0,"g":0.55,"b":0.5,"g2":0.4,"b2":0.4,"a2":0.07,"border_r":0.3,"border_g":0.7,"border_b":0.8,"border_a":0.4,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"tex_zoom = q27;"},{"baseVals":{"sides":44,"x":0.503,"rad":0.038857,"tex_zoom":0.609857,"g":0.1,"a":0.9,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = rand(50)/50;\\ny = .5;\\n\\nr = .4;\\ng = .6;\\nb = 1;\\nr2 = r;\\ng2 = g;\\nb2 = b;\\n\\na2 = min(q21/2 ,1)/2;\\n\\na = 0;\\n\\nrad = a2 * (.1+abs(x-.5))/2 ;"},{"baseVals":{"thickoutline":1,"textured":1,"x":0.26,"y":0.76,"rad":0.39478,"tex_zoom":0.499805,"g":1,"b":1,"r2":1,"b2":1,"a2":0.8,"border_r":0.2,"border_g":0.7,"border_b":0.5,"border_a":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"tex_zoom = q27/2;"}],"waves":[{"baseVals":{"samples":282,"sep":20,"usedots":1,"scaling":7.858,"smoothing":0.1,"r":0,"g":0.3,"a":0.6,"enabled":0},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"t2 = t2 + bass_att;","point_eqs_eel":"x = rand(100)/100;\\ny = rand(100)/100;"},{"baseVals":{"usedots":1,"thick":1,"scaling":0.891519,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"tm = time*.1;\\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\\n\\ntic = min(time - tin,1);\\ntin = time;\\n\\ntva = (tic*q1*.5);\\ntvb = (tic*q2*.5);\\ntvc = (tic*q3*.5);\\n\\nq1 = tva;\\nq2 = tvb;\\nq3 = tvc;\\n\\nsz = .5;\\nlen = q4;\\nt4 = len;","point_eqs_eel":"xi = rand(100)/100;\\nyi = rand(100)/100;\\n\\nx = xi; y = yi;\\n\\na = q21/15;"},{"baseVals":{"thick":1,"scaling":0.891519,"smoothing":0.82,"r":0,"g":0.2,"b":0,"enabled":0},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"tm = time*.1;\\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\\n\\ntic = min(time - tin,1);\\ntin = time;\\n\\ntva = (tic*q1*.5);\\ntvb = (tic*q2*.5);\\ntvc = (tic*q3*.5);\\n\\nq1 = tva;\\nq2 = tvb;\\nq3 = tvc;\\n\\nsz = .5;\\nlen = 1;\\nt4 = len;","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"dec_med = pow (0.5, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .6+avg+peak) * above (time, t0+.4);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %12;\\nindexa = (indexa + is_beat) %5;\\nindex2 = (index2 + is_beat*bnot(index))%2;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass_att + mid_att + treb_att + 1;\\nq27 = index + 1;\\nq28 = -index2 + indexa/5;\\nq29 = index1+index2;\\nmonitor = q29;\\nk1 =  is_\\nbeat*equal(index%2,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.1416/4;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\nds = ds*dec_med + q24*(1-dec_med);\\nq25 = q24;\\n//q25 = above(q26,4);\\n\\nt_rel = time*8;\\n//q25 = below((t_rel)-int(t_rel),.2);\\n\\n\\np3 = p3*dec_med + (1-dec_med) * (100*index + .0*q26);\\nq30 = p3 ;\\n\\np4 = dec_med*p4 + (1-dec_med)*q27;\\nq31 = p4;\\n\\n//zoom = 1 + .05*q1;\\n//rot = -0.01 * (index);\\n\\nzoom = 1.00;\\nrot = .0;\\n//dy = .01*q25;\\ndy = .001*q1;\\nwarp = .03;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 uv_1;\\n  vec2 uv6_2;\\n  uv_1 = (uv + ((0.004 * \\n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\\n  ).xy * vec2(0.0, 1.0)));\\n  uv6_2 = (0.4 * sin((\\n    (((uv - 0.5) * aspect.xy) * 18.0)\\n   * rand_frame.xy)));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = (((\\n    (texture (sampler_main, uv_1).xyz - (((texture (sampler_blur2, \\n      fract(uv_1)\\n    ).xyz * scale2) + bias2) * 0.03))\\n   + \\n    (vec3((0.051 / sqrt(dot (uv6_2, uv6_2)))) * vec3(0.15, 0.12, 0.075))\\n  ) * 0.99) - 0.02);\\n  ret = tmpvar_3.xyz;\\n }","comp":"vec3 xlat_mutableret1;\\nvec2 xlat_mutablers;\\nvec2 xlat_mutablers0;\\nvec2 xlat_mutableuv3;\\n shader_body { \\n  vec2 uv_1;\\n  uv_1.x = uv.x;\\n  float z_2;\\n  uv_1.y = (uv.y - 0.1);\\n  vec2 tmpvar_3;\\n  tmpvar_3 = ((uv_1 - 0.5) * aspect.xy);\\n  z_2 = (0.3 / tmpvar_3.y);\\n  xlat_mutablers0.x = (tmpvar_3.x * z_2);\\n  xlat_mutablers0.y = z_2;\\n  float tmpvar_4;\\n  tmpvar_4 = (time / 2.0);\\n  xlat_mutablers.x = (xlat_mutablers0.x + tmpvar_4);\\n  xlat_mutablers.y = (z_2 + tmpvar_4);\\n  xlat_mutableret1 = (texture (sampler_noise_hq, (xlat_mutablers / 2.0)).xyz - 0.54);\\n  float tmpvar_5;\\n  tmpvar_5 = clamp ((32.0 * tmpvar_3.y), 0.0, 1.0);\\n  vec2 tmpvar_6;\\n  tmpvar_6 = fract(((\\n    (((1.5 * tmpvar_3) * (q28 - abs(tmpvar_3.x))) * (1.0 - ((0.5 * tmpvar_3.y) * (float(mod (q29, 2.0))))))\\n   - \\n    (q27 / 4.0)\\n  ) - (\\n    (xlat_mutableret1 * 0.04)\\n   * tmpvar_5).xy));\\n  vec2 tmpvar_7;\\n  tmpvar_7.y = 0.0;\\n  tmpvar_7.x = texsize.z;\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = 0.0;\\n  tmpvar_8.y = texsize.w;\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = dot ((texture (sampler_main, (tmpvar_6 + tmpvar_7)).xyz - texture (sampler_main, (tmpvar_6 - tmpvar_7)).xyz), vec3(0.32, 0.49, 0.29));\\n  tmpvar_9.y = dot ((texture (sampler_main, (tmpvar_6 + tmpvar_8)).xyz - texture (sampler_main, (tmpvar_6 - tmpvar_8)).xyz), vec3(0.32, 0.49, 0.29));\\n  xlat_mutableuv3 = (tmpvar_6 + tmpvar_9);\\n  xlat_mutableret1 = ((2.0 * (\\n    (texture (sampler_blur1, fract(xlat_mutableuv3)).xyz * scale1)\\n   + bias1)) + texture (sampler_main, xlat_mutableuv3).xyz);\\n  xlat_mutableret1 = (xlat_mutableret1 * (1.0 - (tmpvar_5 / 3.0)));\\n  vec4 tmpvar_10;\\n  tmpvar_10.w = 1.0;\\n  tmpvar_10.xyz = xlat_mutableret1;\\n  ret = tmpvar_10.xyz;\\n }"}')},1942:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.980001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"wave_mode":6,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":0.001,"wave_scale":2.103075,"wave_smoothing":0.54,"wave_mystery":0.38,"modwavealphastart":0.81,"modwavealphaend":1.4,"warpanimspeed":1.4595,"warpscale":2.0067,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0,"ob_b":1,"ob_a":0.3,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.4999,"mv_g":0.4999,"mv_b":0.4999,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"sides":18,"textured":1,"rad":0.154155,"tex_ang":3.769911,"tex_zoom":5.277839,"g":1,"b":1,"a":0.7,"r2":1,"b2":1,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"tex_ang = 3+2*q1;"},{"baseVals":{"sides":32,"rad":0.06892,"tex_zoom":1.831505,"g":1,"b":1,"a":0.9,"g2":0,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"a = q24/2; a2 = 0;\\n\\nr = rand(10)/10;\\ng = rand(10)/10;\\nb = rand(10)/10;\\n\\nrad = .06*q22;"},{"baseVals":{"sides":63,"x":0.123,"y":0,"rad":0.273185,"tex_zoom":0.499805,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = .5 + .1* sin (time*73);\\ny = .5 + .1* sin (time*23);\\n\\nr = 0; g = 0; b = 0;\\nr2 = 1; g2 = 1; b2 = 1;\\n\\nrad = mid_att/100;\\na = .7;\\na2 = a;"},{"baseVals":{"y":0.51,"rad":0.198688,"tex_ang":1.00531,"tex_zoom":0.499805,"g":0.4,"a":0.7,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.05 + rand(900)/1000;\\ny = 0.05 + rand(900)/1000;\\n"}],"waves":[{"baseVals":{"enabled":1,"samples":128,"additive":1,"scaling":0.891519,"smoothing":0,"g":0,"b":0},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"","point_eqs_eel":"x = sample ;\\ny = .5+ value2*.01;\\n\\na = 1*q24*((q27+1)%2);\\n\\nr = .5+.5*sin(time/5);\\ng = .5+.5*sin(time/6);\\nb = .5+.5*sin(time/13);"},{"baseVals":{"enabled":1,"samples":128,"thick":1,"scaling":0.891519,"smoothing":0,"r":0,"g":0,"a":0.1},"init_eqs_eel":"t","frame_eqs_eel":"","point_eqs_eel":"y = sample ;\\nx = .5+ value2*0.01;\\n\\na = 1*q24*(q27%2);\\n\\nr = .5+.5*sin(time/7);\\ng = .5+.5*sin(time/9);\\nb = .5+.5*sin(time/11);"},{"baseVals":{"thick":1,"scaling":0.891519,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ra = .8;\\nrb = .5;\\npib = 6.28318530718;\\n\\n\\ntic = min(time-tin,.1);\\ntin = if(equal(sample,0),time,tin);\\n\\nmod = 1.5 + .5*sin(time*.15);\\nmed = 1.5 + .5*sin(time*.134);\\nmed = 5;\\namod = 3;\\n\\nvr = rand(10001)*.0001;\\nrb = rb + rand(10001)*.0001*.1;\\n\\na = vr;\\n\\nsa = vr*pib*.5;\\nsp = sa*mod + q1*1.3;\\nsam = sa*med - q1*.219;\\n\\nox = ra*sin(sam*pib);\\noy = ra*cos(sam*pib);\\nox = ox + rb*-cos(sp)*sin(sam*pib);\\noz = rb*-sin(sp);\\noy = oy + rb*-cos(sp)*cos(sam*pib);\\n\\n\\nxang = time*.132;\\nxang = q2;\\nyang = time*.153;\\nyang = q3;\\nzang = time*.110;\\nzang = q4;\\nfov = 0.6 + 0.2*sin(time);\\nfov = .5;\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = -ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\noz = oz - 2;\\nx = ox*fov/oz + 0.5;\\nx = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;\\n"}],"init_eqs_eel":"prox = 1;","frame_eqs_eel":"dec_med = pow (0.8, 30/fps);\\ndec_slow = pow (0.95, 30/fps);\\n//dec_xlow = pow (0.999, 30/fps);\\nbeat = max (max (bass, mid), treb);\\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .2+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %32;\\nindex2 = (index2 + is_beat*bnot(index))%4;\\n\\nq22 = peak;\\nq24 = is_beat;\\nq26 = bass_att + mid_att + treb_att;\\nvol = vol*dec_med + (1-dec_med)*q26;\\nq27 = index + 1;\\nq28 = index2 +1;\\n\\np2 = .3*sin(time) + .3*cos(time/3);\\n//*****tunnel tilting\\nq1 = cos(p2 * 3.1416/4);\\nq2 = sin(p2 * 3.1416/4);\\nq3 = -q2;\\nq4 = q1;\\n\\n//****tunnel viewpoint x,y\\nvtrig = is_beat * bnot(index%2);\\nvx = vx * bnot(vtrig) + vtrig * (rand(100)/100-.5);\\nvy = vy * bnot(vtrig) + vtrig * (rand(100)/100-.5);\\nvx = vx* below(index%15,5); //###\\nvy = vy* below(index%15,5);\\nq5 = vx*10;\\nq6 = vy*12;\\n\\n//***tunnel width\\nq21 = (1+sin(time/12))/8+.01;\\n\\n//**floor proximity\\nprox = prox - above(vy,.3)*prox*2;\\nq32 = .5 + .2*prox;\\nmonitor = prox;\\n\\n//****tunnel rotation\\nrota = rota +.01*below(index%16,8)/fps*30;\\nrota1 = rota1*dec_med + (1-dec_med)*rota;\\nq7 = rota1;\\n\\n//****tunnel speed\\nmovez = movez + 1.2/(1+abs(vx)+abs(vy))/fps;\\nq8 = movez * (1+q21/4);\\n//dyn. Aenderung von q21 bewirkt auch Richt.wechsel\\n\\n//***********************\\ntrig1= q24*bnot(index%12);\\ntrig2= q24*bnot((index+4)%12);\\ntrig3= q24*bnot((index+8)%12);\\ntrel = trel + vol/fps;\\nz0 = 1;\\nspeed = vol/2;\\nhx = sin(trel);\\nhy = cos(trel);\\n\\np1z = bnot(trig1)* (p1z + (5+p1z)*speed/fps)+trig1*z0;\\np1z = max(p1z,.1);\\nq9 = hx/(p1z);\\nq10 = hy/(p1z);\\nq11 = p1z;\\nq12 = .1+.02*q26*bnot((index+2)%3)*p1z*exp(-p1z/100);\\n\\np2z = bnot(trig2)* (p2z + (5+p2z)*speed/fps)+trig2*z0;\\np2z = max(p2z,.1);\\nq13 = 2*hx/(p2z);\\nq14 = -.5*hy/(p2z);\\nq15 = p2z;\\nq16 = .1+.02*q26*bnot((index+2)%3)*p2z*exp(-p2z/100);\\n\\n\\np3z = bnot(trig3)* (p3z + (5+p3z)*speed/fps)+trig3*z0;\\np3z = max(p3z,.1);\\nq17 = -1.4*hx/(p3z);\\nq18 = 2*hy/(p3z);\\nq19 = p3z;\\nq20 = .1+.02*q26*bnot((index+2)%3)*p3z*exp(-p3z/100);","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 uv6_1;\\n  vec2 uv1_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (uv - 0.5);\\n  float x_4;\\n  x_4 = (abs(tmpvar_3.x) - abs(tmpvar_3.y));\\n  float tmpvar_5;\\n  tmpvar_5 = (14.0 * sqrt((x_4 * x_4)));\\n  uv1_2 = (tmpvar_3 - (clamp (\\n    ((sin(tmpvar_5) / cos(tmpvar_5)) * normalize(tmpvar_3))\\n  , vec2(-2.0, -2.0), vec2(2.0, 2.0)) / 40.0));\\n  uv6_1 = (0.4 * cos((uv1_2 * 4.0)));\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = (((texture (sampler_main, \\n    ((uv1_2 * ((0.95 - \\n      (q28 / 16.0)\\n    ) + (0.4 * tmpvar_5))) + 0.5)\\n  ).xyz + \\n    (vec3((0.003 / sqrt(dot (uv6_1, uv6_1)))) * (1.0 + roam_cos).xyz)\\n  ) * 0.99) - 0.025);\\n  ret = tmpvar_6.xyz;\\n }","comp":"vec2 xlat_mutableKugel1;\\nvec2 xlat_mutableKugel2;\\nfloat xlat_mutablerad1;\\nfloat xlat_mutablerad2;\\nfloat xlat_mutablerad3;\\nvec3 xlat_mutableret2;\\nvec2 xlat_mutablers;\\nvec2 xlat_mutablers0;\\nvec2 xlat_mutablersk;\\nvec2 xlat_mutablerss;\\nvec2 xlat_mutablerss0;\\nvec2 xlat_mutableuv2;\\nvec2 xlat_mutableuv4;\\n shader_body { \\n  vec2 uv_1;\\n  float z_2;\\n  vec3 dots_3;\\n  vec2 uv1_4;\\n  vec3 ret_5;\\n  mat2 tmpvar_6;\\n  tmpvar_6[uint(0)] = _qa.xy;\\n  tmpvar_6[1u] = _qa.zw;\\n  uv_1 = ((uv * aspect.xy) * tmpvar_6);\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = q5;\\n  tmpvar_7.y = q6;\\n  uv_1 = (uv_1 - (0.1 * tmpvar_7));\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (uv_1 - 0.5);\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = q9;\\n  tmpvar_9.y = q10;\\n  xlat_mutablersk = (tmpvar_8 + tmpvar_9);\\n  vec2 tmpvar_10;\\n  tmpvar_10 = normalize(xlat_mutablersk);\\n  xlat_mutablerad1 = (q11 * sqrt(dot (xlat_mutablersk, xlat_mutablersk)));\\n  xlat_mutableuv4 = ((sin(xlat_mutablerad1) / cos(xlat_mutablerad1)) * tmpvar_10);\\n  xlat_mutableKugel1 = (xlat_mutableuv4 * clamp ((8.0 - \\n    (8.0 * xlat_mutablerad1)\\n  ), 0.0, 1.0));\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = q13;\\n  tmpvar_11.y = q14;\\n  xlat_mutablersk = (tmpvar_8 + tmpvar_11);\\n  vec2 tmpvar_12;\\n  tmpvar_12 = normalize(xlat_mutablersk);\\n  xlat_mutablerad2 = (q15 * sqrt(dot (xlat_mutablersk, xlat_mutablersk)));\\n  xlat_mutableuv4 = ((sin(xlat_mutablerad2) / cos(xlat_mutablerad2)) * tmpvar_12);\\n  xlat_mutableKugel2 = (xlat_mutableuv4 * clamp ((8.0 - \\n    (8.0 * xlat_mutablerad2)\\n  ), 0.0, 1.0));\\n  vec2 tmpvar_13;\\n  tmpvar_13.x = q17;\\n  tmpvar_13.y = q18;\\n  xlat_mutablersk = (tmpvar_8 + tmpvar_13);\\n  vec2 tmpvar_14;\\n  tmpvar_14 = normalize(xlat_mutablersk);\\n  xlat_mutablerad3 = (q19 * sqrt(dot (xlat_mutablersk, xlat_mutablersk)));\\n  xlat_mutableuv4 = ((sin(xlat_mutablerad3) / cos(xlat_mutablerad3)) * tmpvar_14);\\n  uv1_4 = (tmpvar_8 + ((\\n    (xlat_mutableKugel2 + xlat_mutableKugel1)\\n   + \\n    (xlat_mutableuv4 * clamp ((8.0 - (8.0 * xlat_mutablerad3)), 0.0, 1.0))\\n  ) * 0.2));\\n  float tmpvar_15;\\n  float tmpvar_16;\\n  tmpvar_16 = (min (abs(\\n    (uv1_4.x / uv1_4.y)\\n  ), 1.0) / max (abs(\\n    (uv1_4.x / uv1_4.y)\\n  ), 1.0));\\n  float tmpvar_17;\\n  tmpvar_17 = (tmpvar_16 * tmpvar_16);\\n  tmpvar_17 = (((\\n    ((((\\n      ((((-0.01213232 * tmpvar_17) + 0.05368138) * tmpvar_17) - 0.1173503)\\n     * tmpvar_17) + 0.1938925) * tmpvar_17) - 0.3326756)\\n   * tmpvar_17) + 0.9999793) * tmpvar_16);\\n  tmpvar_17 = (tmpvar_17 + (float(\\n    (abs((uv1_4.x / uv1_4.y)) > 1.0)\\n  ) * (\\n    (tmpvar_17 * -2.0)\\n   + 1.570796)));\\n  tmpvar_15 = (tmpvar_17 * sign((uv1_4.x / uv1_4.y)));\\n  if ((abs(uv1_4.y) > (1e-08 * abs(uv1_4.x)))) {\\n    if ((uv1_4.y < 0.0)) {\\n      if ((uv1_4.x >= 0.0)) {\\n        tmpvar_15 += 3.141593;\\n      } else {\\n        tmpvar_15 = (tmpvar_15 - 3.141593);\\n      };\\n    };\\n  } else {\\n    tmpvar_15 = (sign(uv1_4.x) * 1.570796);\\n  };\\n  xlat_mutablerss0.x = (tmpvar_15 / 3.1416);\\n  xlat_mutablerss0.y = ((0.1 * q21) / sqrt(dot (uv1_4, uv1_4)));\\n  vec2 tmpvar_18;\\n  tmpvar_18.x = xlat_mutablerss0.x;\\n  tmpvar_18.y = (xlat_mutablerss0.y + time);\\n  xlat_mutablerss = (tmpvar_18 * mat2(0.7, -0.7, 0.7, 0.7));\\n  vec4 tmpvar_19;\\n  tmpvar_19 = vec4(greaterThanEqual ((texture (sampler_pw_noise_lq, \\n    (xlat_mutablerss / 32.0)\\n  ) - 0.5), vec4(0.0, 0.0, 0.0, 0.0)));\\n  vec2 tmpvar_20;\\n  tmpvar_20 = abs((fract(\\n    (xlat_mutablerss * 8.0)\\n  ) - 0.5));\\n  vec2 tmpvar_21;\\n  tmpvar_21.x = xlat_mutablerss0.x;\\n  tmpvar_21.y = (xlat_mutablerss0.y + (time / 4.0));\\n  xlat_mutablerss = (tmpvar_21 * mat2(0.7, -0.7, 0.7, 0.7));\\n  vec2 tmpvar_22;\\n  tmpvar_22 = abs((fract(\\n    (xlat_mutablerss * 8.0)\\n  ) - 0.5));\\n  dots_3 = (vec3((clamp (\\n    (0.04 / sqrt(dot (tmpvar_20, tmpvar_20)))\\n  , 0.0, 1.0) * tmpvar_19.x)) + (clamp (\\n    (0.02 / sqrt(dot (tmpvar_22, tmpvar_22)))\\n  , 0.0, 1.0) * vec4(\\n    greaterThanEqual ((texture (sampler_pw_noise_lq, (xlat_mutablerss / 32.0)) - 0.5), vec4(0.0, 0.0, 0.0, 0.0))\\n  ).x));\\n  dots_3 = (dots_3 * clamp ((0.2 / \\n    abs(xlat_mutablerss0.y)\\n  ), 0.0, 1.0));\\n  dots_3 = (dots_3 * (dots_3 * 0.6));\\n  float tmpvar_23;\\n  tmpvar_23 = (q32 / (uv1_4.y - 0.02));\\n  float tmpvar_24;\\n  tmpvar_24 = clamp ((4.0 / tmpvar_23), 0.0, 1.0);\\n  xlat_mutablers0.x = (uv1_4.x * tmpvar_23);\\n  xlat_mutablers0.y = (tmpvar_23 / 4.0);\\n  xlat_mutablers.x = xlat_mutablers0.x;\\n  xlat_mutablers.y = (xlat_mutablers0.y + (q8 * 3.0));\\n  vec3 tmpvar_25;\\n  tmpvar_25 = vec3((dot (texture (sampler_pw_noise_lq, (0.02 * xlat_mutablers)), vec4(0.32, 0.49, 0.29, 0.0)) - 0.5));\\n  z_2 = (0.2 / (sqrt(\\n    dot (uv1_4, uv1_4)\\n  ) - q21));\\n  xlat_mutableuv2.y = (z_2 + q8);\\n  xlat_mutableuv2.x = (xlat_mutablerss0.x + q7);\\n  ret_5 = (max ((\\n    (texture (sampler_main, fract(xlat_mutableuv2)) / z_2)\\n  .xyz * \\n    (1.0 - (0.5 * tmpvar_24))\\n  ), (tmpvar_25 * tmpvar_24)) + dots_3);\\n  ret_5 = (ret_5 + ((\\n    abs((((\\n      (inversesqrt(xlat_mutablerad1) * tmpvar_10.x)\\n     * roam_sin).xyz + (\\n      (inversesqrt(xlat_mutablerad2) * tmpvar_12.y)\\n     * roam_sin.xzy)) + ((\\n      inversesqrt(xlat_mutablerad3)\\n     * tmpvar_14.x) * roam_sin.zyx)))\\n   * \\n    (0.2 + (tmpvar_25 * tmpvar_24))\\n  ) * (q22 * 2.0)));\\n  xlat_mutableret2 = (vec3(clamp ((\\n    (((0.02 * q22) * q21) / sqrt(dot (uv1_4, uv1_4)))\\n   * \\n    dot (texture (sampler_main, (uv1_4 + 0.5)), vec4(0.32, 0.49, 0.29, 0.0))\\n  ), 0.0, 1.0)) / (sqrt(\\n    dot (uv1_4, uv1_4)\\n  ) + 0.02));\\n  float tmpvar_26;\\n  tmpvar_26 = dot (xlat_mutableret2, vec3(0.32, 0.49, 0.29));\\n  vec3 tmpvar_27;\\n  tmpvar_27.x = 1.0;\\n  tmpvar_27.y = tmpvar_26;\\n  tmpvar_27.z = (tmpvar_26 / 2.0);\\n  ret_5 = (ret_5 + (tmpvar_26 * tmpvar_27));\\n  vec4 tmpvar_28;\\n  tmpvar_28.w = 1.0;\\n  tmpvar_28.xyz = ret_5;\\n  ret = tmpvar_28.xyz;\\n }"}')},5677:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.980001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"modwavealphabyvolume":1,"darken":1,"wave_a":0.001,"wave_scale":10.437056,"wave_smoothing":0.45,"wave_mystery":0.08,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.4595,"warpscale":2.0067,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0.99,"ob_size":0,"ob_a":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0,"mv_r":0.4999,"mv_g":0.4999,"mv_b":0.4999,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"sides":100,"textured":1,"rad":3.544901,"ang":0.816814,"tex_zoom":1.386143,"r":0,"g":1,"b":1,"a":0,"b2":1,"a2":1,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"t1 = .5*aspectx;","frame_eqs_eel":"trig = trig + q24;\\ntrig = below(trig,18)*trig;\\n\\nradius = radius + .01*30/fps;\\n\\nradius = radius * (1-bnot(trig));\\na2 = 1/(6*radius);\\nang = 1/radius*1;\\nrad = radius;\\n\\nx = radius;\\n"},{"baseVals":{"thickoutline":1,"x":0.4,"rad":2.366958,"tex_ang":3.455753,"tex_zoom":0.993053,"r":0.5,"b":1,"a":0.2,"r2":0.7,"g2":0.4,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"a2 =0;a = 0;\\na = q24/2;"},{"baseVals":{"x":0.503,"rad":0.038857,"tex_zoom":0.609857,"g":0.1,"a":0.9,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = rand(10)/10;\\ny = rand(10)/10;\\n\\nr = rand(4)/3;\\ng = rand(4)/3;\\nb = rand(4)/3;\\n\\na = min(q21/2 ,.9);\\nrad = a *a/3 ;\\n"},{"baseVals":{"sides":63,"textured":1,"rad":0.301766,"tex_ang":0.879646,"tex_zoom":0.954309,"g":1,"b":1,"a":0.5,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"sep":120,"thick":1,"additive":1,"scaling":0.891519,"smoothing":0.82,"a":0.6,"enabled":0},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"t2 = t2 + bass_att;","point_eqs_eel":"x = .5 +.001*q22*int(sample*10); y = sample*10 - int(sample*10);\\n\\nr = 1; b = 1; g = 1;\\na = 1;\\n\\n\\n\\n"},{"baseVals":{"usedots":1,"thick":1,"scaling":0.891519,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"tm = time*.1;\\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\\n\\ntic = min(time - tin,1);\\ntin = time;\\n\\ntva = (tic*q1*.5);\\ntvb = (tic*q2*.5);\\ntvc = (tic*q3*.5);\\n\\nq1 = tva;\\nq2 = tvb;\\nq3 = tvc;\\n\\nsz = .5;\\nlen = q4;\\nt4 = len;","point_eqs_eel":"xi = rand(100)/100;\\nyi = rand(100)/100;\\n\\nx = xi; y = yi;\\n\\na = q21/15;"},{"baseVals":{"thick":1,"scaling":0.891519,"smoothing":0.82,"r":0,"g":0.2,"b":0,"enabled":0},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"tm = time*.1;\\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\\n\\ntic = min(time - tin,1);\\ntin = time;\\n\\ntva = (tic*q1*.5);\\ntvb = (tic*q2*.5);\\ntvc = (tic*q3*.5);\\n\\nq1 = tva;\\nq2 = tvb;\\nq3 = tvc;\\n\\nsz = .5;\\nlen = 1;\\nt4 = len;","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"dec_med = pow (0.9, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %8;\\nindex2 = (index2 + is_beat*bnot(index))%4;\\nindex3 = (index3 + is_beat*bnot(index)*bnot(index2))%3;\\n\\nmonitor = index4;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass + mid + treb;\\n\\n//k1 =  is_beat*bnot(index)*bnot(index2);\\n\\nk1 =  is_beat*equal(index,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.14159265359/4;\\n\\nq27 = 8-index;\\nq28 = index2;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\nq5 = q1 * bnot(index2);","pixel_eqs_eel":"rot = .04*q5*(sin(q22*4*(rad)));\\nzoom = 1+.008 ;","warp":" shader_body { \\n  vec3 tmpvar_1;\\n  tmpvar_1 = ((texture (sampler_blur1, uv).xyz * scale1) + bias1);\\n  vec3 theta_2;\\n  theta_2 = ((0.474 * tmpvar_1) * (q21 * q21));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ((dot (\\n    (texture (sampler_main, uv).xyz + 0.015)\\n  , vec3(0.32, 0.49, 0.29)) * (1.0 - \\n    (0.1 * abs((sin(theta_2) / cos(theta_2))))\\n  )) - ((0.02 / \\n    (rad + 0.02)\\n  ) * tmpvar_1));\\n  ret = tmpvar_3.xyz;\\n }","comp":" shader_body { \\n  vec2 uv1_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = (texture (sampler_main, (uv - vec2(0.001, 0.0))).xyz - texture (sampler_main, (uv + vec2(0.001, 0.0))).xyz).x;\\n  tmpvar_2.y = (texture (sampler_main, (uv - vec2(0.0, 0.001))).xyz - texture (sampler_main, (uv + vec2(0.0, 0.001))).xyz).x;\\n  uv1_1 = ((0.3 * cos(\\n    (((uv - 0.5) * aspect.xy) * 9.0)\\n  )) - tmpvar_2);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = (((\\n    (-0.5 * (texture (sampler_main, uv).xyz + ((texture (sampler_blur1, uv).xyz * scale1) + bias1)))\\n   + \\n    clamp (((0.04 * bass_att) / sqrt(dot (uv1_1, uv1_1))), 0.0, 1.0)\\n  ) + 0.2) * 2.0);\\n  ret = tmpvar_3.xyz;\\n }"}')},2571:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.980001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"wave_mode":1,"additivewave":1,"wave_dots":1,"darken":1,"wave_a":0.005428,"wave_scale":3.782626,"wave_smoothing":0.81,"wave_mystery":-1,"modwavealphastart":0.47,"modwavealphaend":1.32,"warpanimspeed":1.4595,"warpscale":2.0067,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.45,"wave_g":0.4,"wave_b":0.5,"ob_size":0.06,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":47.999996,"mv_l":0.15,"mv_r":0.6,"mv_g":0.2,"mv_b":0.6999,"mv_a":0.3,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"textured":1,"x":0.53,"rad":0.0882,"tex_zoom":0.4928,"g":1,"b":0.7,"a":0.7,"r2":0.4,"g2":0,"b2":0.8,"a2":0.6,"border_b":0.2,"border_a":0.2},"init_eqs_eel":"","frame_eqs_eel":"trig = equal(q28%2,1)*q24;\\n\\nseed = sqr(time - int(time));\\nrr1 = rr1 * (1-trig) + seed*trig;\\n\\ntextured = bnot(q24);\\nang = 3.1416 /4 * q28;\\n\\nx = .5 + .01*rr1*(q28%3); y = x + .002;\\nborder_a = .4;\\n\\na = .8; a2 = .5;\\nrad = 0.14*rr1+.0;//MUSS HIER STEHEN - MIST\\ntex_zoom = .7/rad;"},{"baseVals":{"x":0.46,"rad":0.159625,"tex_zoom":0.028461,"g":1,"b":1,"a":0.03,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = rand(10)/10;\\ny = rand(10)/10;\\n\\nr = rand(4)/3;\\ng = rand(4)/3;\\nb = rand(4)/3;\\n\\n\\nis_beat = above(time, t0+.03);\\nt0 = is_beat*time + (1-is_beat)*t0;\\n\\n\\na = min(q21/2 ,.9) * is_beat;\\nrad = a*a/3 ;"},{"baseVals":{"enabled":1,"x":0.553,"y":0.6,"rad":0.049138,"tex_zoom":0.499805,"g":1,"b":1,"r2":1,"g2":0,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"textured = bnot(q24);"},{"baseVals":{"textured":1,"x":0.45,"rad":0.202682,"tex_ang":0.628319,"tex_zoom":4.461715,"g":1,"b":1,"a":0.5,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0.4,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"samples":102,"sep":10,"scaling":0.891519,"smoothing":0,"g":0.5,"b":0.5,"a":0.6},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"k0 = int(100.0*sample);\\nk2 = int(100.0*sample+1);\\nk1 = equal(k0%2,0);\\nk2 = equal(k0%2,1);\\n\\n\\nix = (100*value1)%7-3;\\niy = (100*value2)%7-3;\\n\\nsp = bass_att + treb_att;\\nsp = sp /1000;\\n\\n\\ndx = (dx+sp*ix) * .99;\\ndy = (dy+sp*iy) * .99 ;\\n\\n\\nox = k1*dx + (1-k1)*ox;\\noy = k2*dy + (1-k2)*oy;\\n\\n\\n\\n//ox = 0; oy = 0;\\n\\nx = ox+.5;\\ny = oy+.5;\\n\\nr = .6;\\ng = .8;\\nb = .9;\\na = .1 + q26/8;\\na = max(a,1) / 4;"},{"baseVals":{"thick":1,"scaling":0.891519,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.891519,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ra = .8;\\nrb = .5;\\npib = 6.28318530718;\\n\\n\\ntic = min(time-tin,.1);\\ntin = if(equal(sample,0),time,tin);\\n\\nmod = 1.5 + .5*sin(time*.15);\\nmed = 1.5 + .5*sin(time*.134);\\nmed = 5;\\namod = 3;\\n\\nvr = rand(10001)*.0001;\\nrb = rb + rand(10001)*.0001*.1;\\n\\na = vr;\\n\\nsa = vr*pib*.5;\\nsp = sa*mod + q1*1.3;\\nsam = sa*med - q1*.219;\\n\\nox = ra*sin(sam*pib);\\noy = ra*cos(sam*pib);\\nox = ox + rb*-cos(sp)*sin(sam*pib);\\noz = rb*-sin(sp);\\noy = oy + rb*-cos(sp)*cos(sam*pib);\\n\\n\\nxang = time*.132;\\nxang = q2;\\nyang = time*.153;\\nyang = q3;\\nzang = time*.110;\\nzang = q4;\\nfov = 0.6 + 0.2*sin(time);\\nfov = .5;\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = -ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\noz = oz - 2;\\nx = ox*fov/oz + 0.5;\\nx = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;\\n"}],"init_eqs_eel":"index4 = rand(2);\\nindex3 = rand(4);","frame_eqs_eel":"dec_med = pow (0.9, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb);\\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %4;\\nindex2 = (index2 + is_beat*bnot(index))%4;\\nindex3 = (index3 + is_beat*bnot(index)*bnot(index2))%4;\\nindex4 = (index4 + is_beat*bnot(index)*bnot(index2)*bnot(index3))%2;\\n\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass + mid + treb;\\n\\nready = is_beat * bnot(ready) + bnot(is_beat2)*ready;\\nis_beat2 = ready * above (time, t0+.2);\\nq19 = is_beat2;\\n\\n//k1 =  is_beat*bnot(index)*bnot(index2);\\n\\nk1 =  is_beat*equal(index,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.14159265359/2;\\n\\nq27 = index+1;\\nq28 = index2;\\nq29 = index3*4+1;\\nq30 = index4;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\nsp0 = dec_slow*sp0 + (q24+.05)*(1-dec_slow);\\ngo = go * dec_med + (1-dec_med)*(1-bnot(index2+index3));\\nmovez = movez + .015*30/fps * go ;\\nq31 = movez;\\nq32 = .5 + .02*sin(time/5);\\n\\nq5 = index4%2;\\n\\nzoom = 1.0; rot = 0;\\ncx = .5 + .1*sin(time/2);\\ndx = .05*max(sin(time/9.7)-.95,0);\\ndy = .002*(1-go);\\nrot = 50*(dx-dy);\\n\\nmonitor = q5;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 zz_1;\\n  vec2 uv1_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = ((uv - vec2(0.5, 0.5)) * aspect.xy);\\n  mat2 tmpvar_4;\\n  tmpvar_4[uint(0)] = _qa.xy;\\n  tmpvar_4[1u] = _qa.zw;\\n  zz_1 = (((tmpvar_3 * texsize.xy) * (0.006 * q28)) * tmpvar_4);\\n  zz_1 = ((zz_1.yx * q5) + ((1.0 - q5) * zz_1));\\n  uv1_2 = (0.3 * cos((\\n    (tmpvar_3 * 16.0)\\n   + \\n    (time / 8.0)\\n  )));\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = ((0.995 * (texture (sampler_main, \\n    (uv + (((\\n      clamp ((sin(zz_1.yx) / cos(zz_1.yx)), vec2(-8.0, -8.0), vec2(8.0, 8.0))\\n     * \\n      cos(((rand_preset * 8.0).xy * zz_1))\\n    ) * texsize.zw) * q29))\\n  ).xyz + \\n    (((0.004 / sqrt(\\n      dot (uv1_2, uv1_2)\\n    )) * q19) * vec3(0.5, 0.0, 1.0))\\n  )) - 0.005);\\n  ret = tmpvar_5.xyz;\\n }","comp":"vec3 xlat_mutableret1;\\n shader_body { \\n  vec2 uv_1;\\n  float inten_2;\\n  float dist_3;\\n  vec2 uv2_4;\\n  uv_1 = (uv - 0.5);\\n  uv_1 = (uv_1 * aspect.xy);\\n  uv2_4.x = ((uv_1.x * 0.5) - (uv_1.y * -0.5));\\n  uv2_4.y = ((uv_1.x * -0.5) + (uv_1.y * 0.5));\\n  uv2_4 = (uv2_4 * aspect.yx);\\n  dist_3 = (1.0 - fract((0.25 + q31)));\\n  inten_2 = ((2.0 * sqrt(dist_3)) * (1.0 - (dist_3 * dist_3)));\\n  xlat_mutableret1 = max (vec3(0.0, 0.0, 0.0), (texture (sampler_main, (\\n    ((2.0 * uv2_4) * dist_3)\\n   + q32)).xyz * inten_2));\\n  uv2_4.x = ((uv_1.x * -0.5) - (uv_1.y * 0.5));\\n  uv2_4.y = ((uv_1.x * 0.5) + (uv_1.y * -0.5));\\n  uv2_4 = (uv2_4 * aspect.yx);\\n  dist_3 = (1.0 - fract((0.5 + q31)));\\n  inten_2 = ((2.0 * sqrt(dist_3)) * (1.0 - (dist_3 * dist_3)));\\n  xlat_mutableret1 = max (xlat_mutableret1, (texture (sampler_main, (\\n    ((2.0 * uv2_4) * dist_3)\\n   + q32)).xyz * inten_2));\\n  uv2_4.x = ((uv_1.x * 0.5) - (uv_1.y * -0.5));\\n  uv2_4.y = ((uv_1.x * -0.5) + (uv_1.y * 0.5));\\n  uv2_4 = (uv2_4 * aspect.yx);\\n  dist_3 = (1.0 - fract((0.75 + q31)));\\n  inten_2 = ((2.0 * sqrt(dist_3)) * (1.0 - (dist_3 * dist_3)));\\n  xlat_mutableret1 = max (xlat_mutableret1, (texture (sampler_main, (\\n    ((2.0 * uv2_4) * dist_3)\\n   + q32)).xyz * inten_2));\\n  uv2_4.x = ((uv_1.x * -0.5) - (uv_1.y * 0.5));\\n  uv2_4.y = ((uv_1.x * 0.5) + (uv_1.y * -0.5));\\n  uv2_4 = (uv2_4 * aspect.yx);\\n  dist_3 = (1.0 - fract((1.0 + q31)));\\n  inten_2 = ((2.0 * sqrt(dist_3)) * (1.0 - (dist_3 * dist_3)));\\n  xlat_mutableret1 = max (xlat_mutableret1, (texture (sampler_main, (\\n    ((2.0 * uv2_4) * dist_3)\\n   + q32)).xyz * inten_2));\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = (xlat_mutableret1 * 1.6);\\n  ret = tmpvar_5.xyz;\\n }"}')},5595:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":3,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":6,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.527,"wave_smoothing":0.09,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.8,"wave_g":0.49,"ob_a":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b2x":0.7,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":12,"num_inst":1024,"rad":0.03632,"tex_ang":1.00531,"tex_zoom":1.53117,"b":1,"a":0,"g2":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"fov = reg03;\\nn = instance*reg00;\\n\\n\\nx0 = gmegabuf(n);\\ny0 = gmegabuf(n+1);\\nz0 = gmegabuf(n+2)+reg02;\\n\\nx = x0/z0*fov + 0.5;\\ny = y0/z0*q32*fov + 0.5;\\n\\n\\n//k1 = reg01+t1;\\nr = gmegabuf(n+3);\\ng = gmegabuf(n+4);\\nb = gmegabuf(n+5);\\nr2 = r/2; g2 = g/2; b2 = b2/2;\\n\\na = instance/1024; a2 = a*.5;\\nrad = min(0.02/z0,.5) * (z0 > 0)*2.5*sqrt(a);\\nrad *= gmegabuf(n+6);\\n\\nt1 -= 1;\\n"},{"baseVals":{"num_inst":128,"x":0.26,"y":0.2,"rad":0.39317,"tex_zoom":0.9355,"g":1,"b":0.6,"g2":0,"border_r":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":13,"additive":1,"num_inst":5,"x":0.65,"y":0.38,"rad":0.57049,"tex_zoom":0.73678,"a":0.7,"g2":0,"border_r":0.5,"border_g":0.5,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":14,"additive":1,"thickoutline":1,"textured":1,"x":0.6,"y":0.55,"rad":0.97237,"ang":1.25664,"tex_zoom":0.34933,"g":0.6,"g2":0,"b2":1,"border_r":0.2,"border_g":0.7,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"scaling":2.15542,"smoothing":0.2,"r":0,"a":0.7},"init_eqs_eel":"","frame_eqs_eel":"t1 = 1023;\\nt2 = 0;","point_eqs_eel":"fov = reg03;\\nn = t1 * reg00;\\n\\n\\nx0 = gmegabuf(n);\\ny0 = gmegabuf(n+1);\\nz0 = gmegabuf(n+2)+reg02;\\n\\nx = x0/z0*fov + 0.5;\\ny = y0/z0*fov + 0.5;\\n\\n\\na= max(0,t1/1024);\\n\\nk1 = reg01+t1;\\nr = gmegabuf(n+3);\\ng = gmegabuf(n+4);\\nb = gmegabuf(n+5);\\n\\n\\na = t1/1024 * (z0 >= 0.5)/2;\\n\\nt1 -= 1;\\ngmegabuf (10000 +t2) = abs(value1+value2);\\nt2 += 1;"},{"baseVals":{"enabled":1,"scaling":0.89152,"smoothing":0.82,"r":0,"a":0.1},"init_eqs_eel":"","frame_eqs_eel":"t1 = 512;","point_eqs_eel":"fov = reg03;\\nn = t1 * reg00;\\n\\n\\nx0 = gmegabuf(n);\\ny0 = gmegabuf(n+1);\\nz0 = gmegabuf(n+2)+reg02;\\n\\nx = x0/z0*fov + 0.5;\\ny = y0/z0*fov + 0.5;\\n\\nr = gmegabuf(n+3);\\ng = gmegabuf(n+4);\\nb = gmegabuf(n+5);\\n\\na= t1/1024* (z0 >= 0.5)/2;\\nt1 -= 1;\\n"},{"baseVals":{"samples":32,"scaling":0.89152,"smoothing":0.82,"r":0,"g":0.2,"b":0.6,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"index = 0;\\nloop (100000,\\n  megabuf(index) = 0;\\n  gmegabuf(index) = 0;\\n  index = index + 1;\\n);\\n\\nrecsize = 8;\\nreg00 = recsize;\\n\\npoints = 512*2;\\n\\nreg01 = 0; //benoetigt fuer \\"new\\"\\nzofs = 1 + rand(100)/100*2; reg02 = zofs;\\n\\nfov = .3; reg03 = fov;","frame_eqs_eel":"dec_f = pow (0.3, 30/fps);\\ndec_m = pow (0.85, 30/fps);\\ndec_s = pow (0.95, 30/fps);\\nbeat = (bass + mid+ treb)-(bass_att + mid_att+ treb_att) + (bass+mid+treb);\\nbeat /= 3;\\n\\npeak = peak*dec_m + (1-dec_m)*pow(beat-1,1)*(beat>1)*4;\\nis_beat = above(beat, 1) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\nindex = (index + is_beat) %8;\\nindex2 = (index2 + is_beat*bnot(index)) %8;\\n\\nif (is_beat,\\n  ran1 = rand(100)/50-1;\\n  ran2 = rand(100)/50-1;\\n  ran3 = rand(100)/50-1;\\n,0);\\nran1_ = dec_m * ran1_ + (1-dec_m) * ran1;\\nran2_ = dec_m * ran2_ + (1-dec_m) * ran2;\\nran3_ = dec_m * ran3_ + (1-dec_m) * ran3;\\nrsum = sqrt(ran1_*ran1_ + ran2_*ran2_ + ran3_*ran3_);\\n\\nif (is_beat * (index==2),\\n  ran4 = (rand(100)/50-1);\\n  ran5 = (rand(100)/50-1);\\n  ran6 = (rand(100)/50-1);\\n,0;);\\nran4_ = dec_m * ran4_ + (1-dec_m) * ran4;\\nran5_ = dec_m * ran5_ + (1-dec_m) * ran5;\\nran6_ = dec_m * ran6_ + (1-dec_m) * ran6;\\n\\nif (is_beat * (index==6),\\n  ran7 = (rand(100)/50-1) ;\\n  ran8 = (rand(100)/50-1) ;\\n  ran9 = (rand(100)/50-1) ;\\n,0;);\\nran7_ = dec_m * ran7_ + (1-dec_m) * ran7;\\nran8_ = dec_m * ran8_ + (1-dec_m) * ran8;\\nran9_ = dec_m * ran9_ + (1-dec_m) * ran9;\\n\\n\\n//Neue Punkte #####################\\npk = sqrt(peak+.1);\\nNew = int(12*(ran4-ran5)*pk-12*(ran3-ran1)/pk); //##spielen\\nnew = max(min (new,20),2);\\nreg01 += new;\\n\\ndec = dec_m;\\n\\n//Neue Punkte oberhalb des Arrays\\nn = recsize*points; m = 0;\\ndt1 = (if (ran1>0,4*pk,4/pk))/fps*new/6;\\nvol = max(ran1+ran2,.2)*pk*2;\\nloop (new,\\n  trel1 = trel1 + dt1;\\n  x0 = x0 * dec + (1-dec)* (sin(trel1+ran3*6)*vol    +ran1);\\n  y0 = y0 * dec + (1-dec)* (sin(trel1+ran2*6)*vol    +ran2);\\n  z0 = z0 * dec + (1-dec)* (sin(trel1+ran1*6)*vol +ran3);\\n\\n  gmegabuf(n)   = x0;\\n  gmegabuf(n+1) = y0;\\n  gmegabuf(n+2) = z0;\\n//Farben\\n  gmegabuf(n+3) = ran1_/rsum/3+.5;\\n  gmegabuf(n+4) = ran2_/rsum/3+.5;\\n  gmegabuf(n+5) = ran3_/rsum/3+.5;\\n//Groesse\\n  gmegabuf(n+6) = gmegabuf(10000+m)*0+1;;\\n  n += recsize; m+=1;);\\n\\n//Nach unten um \\"new\\" points umkopieren\\nn = 0;\\nloop (recsize*points,\\n  gmegabuf (n) = gmegabuf(n+new*recsize) ;\\n  n += 1;);\\n\\nxang = ran4_/fps;\\nyang = ran5_/fps;\\nzang = ran6_/fps;\\nddx = min(max(ddx+yang/fps,-1),1);\\nddy = min(max(ddy+xang/fps,-1),1);\\nq1 = ddx*2;\\nq2 = ddy*2;\\n//Rotieren\\nn = 0;\\nloop (points,\\n  ox = gmegabuf (n);\\n  oy = gmegabuf (n+1);\\n  oz = gmegabuf (n+2);\\n  mx = ox*cos(zang) - oy*sin(zang);\\n  my = ox*sin(zang) + oy*cos(zang);\\n  ox = mx;  oy = my;\\n  mx = ox*cos(yang) + oz*sin(yang);\\n  mz = -ox*sin(yang) + oz*cos(yang);\\n  ox = mx;  oz = mz;\\n  my = oy*cos(xang) - oz*sin(xang);\\n  mz = oy*sin(xang) + oz*cos(xang);\\n  oy = my;  oz = mz;\\n  gmegabuf (n) = ox;\\n  gmegabuf (n+1) = oy;\\n  gmegabuf (n+2) = oz;\\nn += recsize;);\\n\\n\\n//SPIEL\\nk1 = ran7_/fps/2;\\nk2 = ran8_/fps/2;\\nk3 = abs(ran9_)/fps;\\n\\ndec = .4 + .6*ran5_; dec2 = (1-dec);\\nr1 = .5+.3*ran4_;\\nn = 0;\\nloop (points-1,\\n  m = n*recsize;\\n  left  =  ((n-1+points)%points) * recsize;\\n  right =  ((n+1+points)%points) * recsize;\\n  gmegabuf (m) =   dec*gmegabuf(m)   + dec2*(gmegabuf(left)*r1   +gmegabuf(right)*(1-r1) + k1) ;\\n  gmegabuf (m+1) = dec*gmegabuf(m+1) + dec2*(gmegabuf(left+1)*r1 +gmegabuf(right+1)*(1-r1) + k2) ;\\n//  gmegabuf (m+2) = dec*gmegabuf(m+2) + dec2*(gmegabuf(left+2)*r1 +gmegabuf(right+2)*(1-r1) + k3) ;\\n  n += 1;\\n);\\n\\n\\nm = (frame%points);\\nm = max(0,int(1024 + (t0-time)*200));\\nn = m * recsize;\\nq5 = gmegabuf(n)/(gmegabuf(n+2)+zofs)*fov;\\nq6 = -gmegabuf(n+1)/(gmegabuf(n+2)+zofs)*fov;\\n\\nq10=  sqrt(gmegabuf (n+3));\\nq11=  sqrt(gmegabuf(n+4));\\nq12=  sqrt(gmegabuf (n+5));\\n\\n\\nmonitor =   m;\\n\\nq32 = aspecty;","pixel_eqs_eel":"rot = 0; zoom = 1; warp = 0; dy = .00; dx = -.00;","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = vec3(0.0, 0.0, 0.0);\\n  ret = tmpvar_1.xyz;\\n }","comp":"float xlat_mutablesmask;\\nvec2 xlat_mutableuv1;\\nvec2 xlat_mutableuv2;\\nvec2 xlat_mutableuv3;\\nvec2 xlat_mutableuv4;\\n shader_body { \\n  float flash_1;\\n  float dist_2;\\n  float stars_3;\\n  vec3 ret_4;\\n  xlat_mutableuv1 = ((uv - 0.5) * aspect.xy);\\n  float tmpvar_5;\\n  tmpvar_5 = (0.1 * time);\\n  float tmpvar_6;\\n  tmpvar_6 = (0.2 * rad);\\n  dist_2 = ((1.0 - fract(\\n    (0.3333333 + tmpvar_5)\\n  )) * (1.0 - tmpvar_6));\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = q1;\\n  tmpvar_7.y = q2;\\n  xlat_mutableuv3 = (xlat_mutableuv1 + tmpvar_7);\\n  xlat_mutableuv4 = ((32.0 * dist_2) * xlat_mutableuv3);\\n  xlat_mutablesmask = (texture (sampler_pw_noise_lq, (xlat_mutableuv4 / 256.0)).y - 0.9);\\n  vec2 tmpvar_8;\\n  tmpvar_8 = abs((fract(xlat_mutableuv4) - 0.5));\\n  stars_3 = max (0.0, clamp ((\\n    (1.0 - dist_2)\\n   * \\n    ((0.1 / sqrt(dot (tmpvar_8, tmpvar_8))) * xlat_mutablesmask)\\n  ), 0.0, 1.0));\\n  dist_2 = ((1.0 - fract(\\n    (0.6666667 + tmpvar_5)\\n  )) * (1.0 - tmpvar_6));\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = q1;\\n  tmpvar_9.y = q2;\\n  xlat_mutableuv3 = (xlat_mutableuv1 + tmpvar_9);\\n  xlat_mutableuv4 = ((32.0 * dist_2) * xlat_mutableuv3);\\n  xlat_mutablesmask = (texture (sampler_pw_noise_lq, (xlat_mutableuv4 / 256.0)).y - 0.9);\\n  vec2 tmpvar_10;\\n  tmpvar_10 = abs((fract(xlat_mutableuv4) - 0.5));\\n  stars_3 = (stars_3 + max (stars_3, clamp (\\n    ((1.0 - dist_2) * ((0.1 / sqrt(\\n      dot (tmpvar_10, tmpvar_10)\\n    )) * xlat_mutablesmask))\\n  , 0.0, 1.0)));\\n  dist_2 = ((1.0 - fract(\\n    (1.0 + tmpvar_5)\\n  )) * (1.0 - tmpvar_6));\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = q1;\\n  tmpvar_11.y = q2;\\n  xlat_mutableuv3 = (xlat_mutableuv1 + tmpvar_11);\\n  xlat_mutableuv4 = ((32.0 * dist_2) * xlat_mutableuv3);\\n  xlat_mutablesmask = (texture (sampler_pw_noise_lq, (xlat_mutableuv4 / 256.0)).y - 0.9);\\n  vec2 tmpvar_12;\\n  tmpvar_12 = abs((fract(xlat_mutableuv4) - 0.5));\\n  stars_3 = (stars_3 + max (stars_3, clamp (\\n    ((1.0 - dist_2) * ((0.1 / sqrt(\\n      dot (tmpvar_12, tmpvar_12)\\n    )) * xlat_mutablesmask))\\n  , 0.0, 1.0)));\\n  vec2 tmpvar_13;\\n  tmpvar_13.x = q5;\\n  tmpvar_13.y = q6;\\n  xlat_mutableuv2 = (xlat_mutableuv1 - tmpvar_13);\\n  float tmpvar_14;\\n  tmpvar_14 = ((0.01 / sqrt(\\n    dot (xlat_mutableuv2, xlat_mutableuv2)\\n  )) * min (3.0, (\\n    ((mid - 0.5) * float((mid > 0.5)))\\n   * 2.0)));\\n  flash_1 = tmpvar_14;\\n  float angle_15;\\n  float tmpvar_16;\\n  tmpvar_16 = abs(xlat_mutableuv2.x);\\n  if ((xlat_mutableuv2.y >= 0.0)) {\\n    angle_15 = (1.0 - ((xlat_mutableuv2.y - tmpvar_16) / (xlat_mutableuv2.y + tmpvar_16)));\\n  } else {\\n    angle_15 = (3.0 - ((xlat_mutableuv2.y + tmpvar_16) / (tmpvar_16 - xlat_mutableuv2.y)));\\n  };\\n  angle_15 = (angle_15 * 0.25);\\n  float tmpvar_17;\\n  if ((xlat_mutableuv2.x < 0.0)) {\\n    tmpvar_17 = -(angle_15);\\n  } else {\\n    tmpvar_17 = angle_15;\\n  };\\n  flash_1 = (tmpvar_14 * (tmpvar_14 / (\\n    abs((fract((\\n      (3.0 * tmpvar_17)\\n     + \\n      (time * 2.0)\\n    )) - 0.5))\\n   + 0.18)));\\n  vec3 tmpvar_18;\\n  tmpvar_18 = max ((texture (sampler_main, uv).xyz * 2.0), ((\\n    (texture (sampler_blur2, uv).xyz * scale2)\\n   + bias2) * 2.0));\\n  vec2 tmpvar_19;\\n  tmpvar_19 = sin(xlat_mutableuv3);\\n  ret_4 = (clamp ((0.025 / \\n    sqrt(dot (tmpvar_19, tmpvar_19))\\n  ), 0.0, 1.0) * vec3(0.4, 0.1, 1.0));\\n  ret_4 = (ret_4 + clamp ((stars_3 * stars_3), 0.0, 1.0));\\n  ret_4 = (ret_4 * clamp ((1.0 - \\n    (2.0 * dot (tmpvar_18, vec3(0.32, 0.49, 0.29)))\\n  ), 0.0, 1.0));\\n  ret_4 = (ret_4 + tmpvar_18);\\n  vec3 tmpvar_20;\\n  tmpvar_20.x = q10;\\n  tmpvar_20.y = q11;\\n  tmpvar_20.z = q12;\\n  ret_4 = (ret_4 + ((2.0 * \\n    clamp (flash_1, 0.0, 1.0)\\n  ) * tmpvar_20));\\n  vec4 tmpvar_21;\\n  tmpvar_21.w = 1.0;\\n  tmpvar_21.xyz = ret_4;\\n  ret = tmpvar_21.xyz;\\n }"}')},1075:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":4,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"darken":1,"wave_a":0.001,"wave_scale":0.133,"wave_smoothing":0,"wave_mystery":-1,"modwavealphastart":1,"modwavealphaend":1.3,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.015,"ob_b":1,"ib_size":0.26,"mv_a":0,"b2x":0.3,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":40,"thickoutline":1,"rad":0.06623,"tex_zoom":1.79845,"r":0,"a":0.1,"g2":0,"border_b":0,"border_a":0},"init_eqs_eel":"bob = 1.5;\\nro = 0;\\nred = rand(20);","frame_eqs_eel":"vol = 1 + 0.2*((bass_att+treb_att+mid_att)/3);\\nbob = bob*above(bob,0.01) - 0.01 + 1*(1 - above(bob,0.01));\\nbob = 0.4 + 0.4*sin(time*0.8);\\nbob = bob*vol;\\n//rad = bob;\\nborder_1 = 0.4;\\nsides = 30;\\nro = ro + 0.02;\\nang = ro;\\n//rad = 0.6;\\n\\nsp = red*0.025;\\nspi = 0.5 - sp;\\ntm = time*0.1;\\nborder_r = 0.5 + sp*sin(tm*0.6) + spi*cos(tm*1.46);\\nborder_g = 0.5 + sp*sin(tm*1.294) + spi*cos(tm*0.87);\\nborder_b = 0.5 + sp*sin(tm*1.418) + spi*cos(tm*0.76);\\n"},{"baseVals":{"enabled":1,"sides":40,"additive":1,"num_inst":4,"g":1,"b":1,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.5 + 0.225*sin(time /instance*0.7);\\ny = 0.5 + 0.3*cos(time /instance*0.7);\\nx = x- 0.4*x*sin(time);\\ny = y- 0.4*y*cos(time);\\n\\n\\n\\nrad = rad*mid_att;\\nr = 0.5 + 0.5*sin(frame*0.5);\\nb = 0.5 + 0.5*sin(frame*0.5 + 2.094);\\ng = 0.5 + 0.5*sin(frame*0.5 + 4.188);\\n"},{"baseVals":{"enabled":1,"sides":40,"additive":1,"g":1,"b":1,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.5 + 0.5*(sin(time*1.1)*0.3 + 0.7*sin(time*0.5));\\nx = 0.5 + 0.225*sin(time + 2.09);\\ny = 0.5 + 0.3*cos(time + 2.09);\\n\\nrad = rad*bass_att;\\nr = 0.5 + 0.5*sin(frame*0.5);\\nb = 0.5 + 0.5*sin(frame*0.5 + 2.094);\\ng = 0.5 + 0.5*sin(frame*0.5 + 4.188);\\n"},{"baseVals":{"enabled":1,"sides":40,"additive":1,"num_inst":5,"rad":0.07419,"g":1,"b":1,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"//x = 0.5 + 0.5*(sin(time*1.1)*0.3 + 0.7*sin(time*0.5));\\nx = 0.5 + 0.225*sin(time /instance);\\ny = 0.5 + 0.3*cos(time /instance);\\nx = x+ 0.4*x*sin(time);\\ny = y+ 0.4*y*cos(time);\\n\\n\\n//x = x+(0.1*q3)*sin((instance*2.4));\\n//y = y+(0.1*q4)*cos((instance*2.4));\\n\\n\\nrad = rad*treb_att;\\nr = 0.5 + 0.5*sin(frame*0.5);\\nb = 0.5 + 0.5*sin(frame*0.5 + 2.094);\\ng = 0.5 + 0.5*sin(frame*0.5 + 4.188);\\n"}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"dec_med = pow (0.7, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .2+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %8;\\nindex2 = (index2 + is_beat*bnot(index))%2;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\n\\nps = .9*ps + .1*q22;\\nq23 = ps;\\nq24 = is_beat;\\nq26 = bass_att + mid_att + treb_att;\\nq27 = index +1;\\nq28 = index2;\\n\\n\\nk1 =  is_\\nbeat*equal(index%2,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.1416/4;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;","pixel_eqs_eel":"zoom = 1.05;","warp":" shader_body { \\n  vec2 uv_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (uv - vec2(0.5, 0.5));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 0.0;\\n  vec4 tmpvar_4;\\n  tmpvar_4 = texture (sampler_blur1, uv);\\n  tmpvar_3.xyz = ((tmpvar_4.xyz * scale1) + bias1);\\n  float tmpvar_5;\\n  tmpvar_5 = (dot (tmpvar_3, roam_sin) * 16.0);\\n  mat2 tmpvar_6;\\n  tmpvar_6[uint(0)].x = cos(tmpvar_5);\\n  tmpvar_6[uint(0)].y = -(sin(tmpvar_5));\\n  tmpvar_6[1u].x = sin(tmpvar_5);\\n  tmpvar_6[1u].y = cos(tmpvar_5);\\n  uv_1 = ((tmpvar_2 + (\\n    (0.2 * dot (((tmpvar_4.xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29)))\\n   * \\n    (tmpvar_2 * tmpvar_6)\\n  )) - 0.5);\\n  vec2 tmpvar_7;\\n  tmpvar_7 = ((uv_1 * texsize.xy) * 0.02);\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = (cos((tmpvar_7.y * q1)) * sin(-(tmpvar_7.y)));\\n  tmpvar_8.y = (sin(tmpvar_7.x) * cos((tmpvar_7.y * q2)));\\n  uv_1 = (uv_1 - ((tmpvar_8 * texsize.zw) * 12.0));\\n  vec4 tmpvar_9;\\n  tmpvar_9.w = 1.0;\\n  tmpvar_9.xyz = ((texture (sampler_main, uv_1).xyz * 0.98) - 0.02);\\n  ret = tmpvar_9.xyz;\\n }","comp":"vec3 xlat_mutableret1;\\nvec2 xlat_mutablers;\\nvec2 xlat_mutableuv1;\\nfloat xlat_mutablez;\\n shader_body { \\n  xlat_mutableuv1 = (uv - 0.5);\\n  xlat_mutablez = (0.2 / abs(xlat_mutableuv1.y));\\n  xlat_mutablers.x = (xlat_mutableuv1.x * xlat_mutablez);\\n  xlat_mutablers.y = ((xlat_mutablez / 2.0) + (time * 4.0));\\n  vec4 tmpvar_1;\\n  tmpvar_1 = texture (sampler_noise_hq, xlat_mutablers);\\n  xlat_mutableret1 = ((tmpvar_1.xyz * vec3(\\n    greaterThanEqual (tmpvar_1.xyz, vec3(0.0, 0.0, 0.0))\\n  )) - 0.6);\\n  float tmpvar_2;\\n  tmpvar_2 = clamp ((128.0 * xlat_mutableuv1.y), 0.0, 1.0);\\n  vec2 tmpvar_3;\\n  tmpvar_3 = fract(((\\n    (xlat_mutableuv1 * (1.0 - abs(xlat_mutableuv1.x)))\\n   - 0.5) - (\\n    (xlat_mutableret1 * 0.05)\\n   * tmpvar_2).xy));\\n  float x_4;\\n  x_4 = (tmpvar_3.y - 0.52);\\n  vec3 tmpvar_5;\\n  tmpvar_5 = (texture (sampler_main, tmpvar_3) + ((0.02 / \\n    (0.02 + sqrt((x_4 * x_4)))\\n  ) * slow_roam_sin)).xyz;\\n  xlat_mutableret1 = tmpvar_5;\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (32.0 * ((\\n    (uv * mat2(0.6, -0.8, 0.8, 0.6))\\n   + \\n    (tmpvar_5 * 0.1)\\n  .xy) + (time / 64.0)));\\n  vec2 tmpvar_7;\\n  tmpvar_7 = abs((fract(tmpvar_6) - 0.5));\\n  vec3 tmpvar_8;\\n  tmpvar_8 = clamp (((0.25 / \\n    sqrt(dot (tmpvar_7, tmpvar_7))\\n  ) * vec3((texture (sampler_pw_noise_lq, \\n    (tmpvar_6 / 256.0)\\n  ).y - 0.9))), 0.0, 1.0);\\n  vec4 tmpvar_9;\\n  tmpvar_9.w = 1.0;\\n  tmpvar_9.xyz = (tmpvar_5 + ((\\n    (tmpvar_8.x * tmpvar_8.x)\\n   + \\n    ((rand_preset * (0.5 - uv.y)).xyz * vec3(0.0, 0.0, 1.0))\\n  ) * (1.0 - tmpvar_2)));\\n  ret = tmpvar_9.xyz;\\n }"}')},7830:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":4,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":6,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":0.55,"wave_scale":0.273,"wave_smoothing":0.63,"wave_mystery":1,"modwavealphastart":1.6,"modwavealphaend":2,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.5,"wave_g":0,"wave_b":0,"wave_y":0,"ob_size":0,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"textured":1,"rad":1.79142,"tex_ang":0.62832,"g":1,"b":1,"a":0,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx*1.25-0.1;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));"},{"baseVals":{"enabled":1,"thick":1,"r":0,"g":0,"b":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx*1.25-0.125;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));"},{"baseVals":{"enabled":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx*1.25-0.125;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));"},{"baseVals":{"enabled":1,"thick":1,"additive":1,"scaling":2.0231,"smoothing":0,"r":0.72,"g":0,"b":0.25},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"vol = bass*8 + mid*5 + treb*3;\\nm = m*0.97 + vol*0.08;\\nmonitor = vol;\\nbeat = above(vol,res)*above(vol,m)*above(vol,16);\\ndiff = (1-beat)*diff + beat*(vol-res);\\nres = beat*(vol + m*0.04) + (1-beat)*(res -  (0.1+diff*0.02)*60/fps);\\nres = max(0,res);\\n\\n//a = beat;","point_eqs_eel":"tt3 = tt3*0.6 + (value1)*1;\\ntt2 = tt2*0.7 + tt3*0.2;\\ntt1 = tt1*0.8 + tt2*0.1;\\nd = d*0.9 + tt1*0.2;\\n\\ny = 0.5 + d*sample*(1-sample)*2;\\nx =  -0.05 + sample*1.1;"}],"init_eqs_eel":"//******** INITIALIZATION *********\\nn = 0; loop (10000, gmegabuf(n)=0; n=n+1; ); \\nn = 0; loop (10000,  megabuf(n)=0; n=n+1; ); \\ntrelx = 0;  trely = 0; trelz = 0;\\nreg20 = 1; reg21 = 0; reg22 = 0; reg23 = 0; reg24 = 1; reg25 = 0; reg26 = 0; reg27 = 0; reg28 = 1;\\n\\n//Find random starting point\\nwhile (exec2(\\n  ran1 = rand(800)/100;  ran2 = rand(800)/100;  ran3 = rand(800)/100;\\n  PosX = rand(10)-5;   PosY = rand(10)-5;   PosZ = rand(10)-5; \\n  c1 = cos(ran1); c2 = cos(ran2); c3 = cos(ran3); \\n  s1 = sin(ran1); s2 = sin(ran2); s3 = sin(ran3);\\n\\n  reg20 = c2*c1; reg21 = c2*s1; reg22 = -s2;\\n  reg23 = s3*s2*c1 - c3*s1; reg24 = s3*s2*s1 + c3*c1; reg25 = s3*c2;\\n  reg26 = c3*s2*c1 + s3*s1; reg27 = c3*s2*s1 - s3*c1; reg28 = c3*c2;\\n\\n  //***********BOT*************\\n  //Coord. Trans. must exactly match def in warp S. !!!!\\n  dist = 0.001;\\n  while (exec2(\\n    uvx = reg26*dist/q7; uvy = reg27*dist/q7; uvz = reg28*dist/q7;\\n    uvx += PosX; uvy += PosY; uvz += PosZ;\\n    uvx = 8.0*((uvx/8+30.5 - int(uvx/8+30.5))-.5);\\n    uvy = 8.0*((uvy/8+30.5 - int(uvy/8+30.5))-.5);\\n    uvz = 8.0*((uvz/8+30.5 - int(uvz/8+30.5))-.5);\\n    uvx0 = uvx; uvy0 = uvy; uvz0 = uvz;\\n    loop (7+1,\\n      uvx = if (uvx > 1, 2-uvx, if(uvx < -1, -2-uvx, uvx));\\n      uvy = if (uvy > 1, 2-uvy, if(uvy < -1, -2-uvy, uvy));\\n      uvz = if (uvz > 1, 2-uvz, if(uvz < -1, -2-uvz, uvz));\\n      slen = uvx*uvx + uvy*uvy + uvz*uvz;\\n      uvx = if (slen < 0.25, uvx*4, if (slen < 1, uvx/slen, uvx)) *2.6 + uvx0; \\n      uvy = if (slen < 0.25, uvy*4, if (slen < 1, uvy/slen, uvy)) *2.6 + uvy0; \\n      uvz = if (slen < 0.25, uvz*4, if (slen < 1, uvz/slen, uvz)) *2.6 + uvz0; \\n    );\\n    len = sqrt(uvx*uvx + uvy*uvy + uvz*uvz);\\n    dist *= 1.05;\\n  ,(dist < 0.6)*(len > 30)));\\n,(dist < .2))); //end while\\n\\n\\n//---------- some global vars, do not change -------------\\nq7 = .1; //MyZoom\\nq30 = 1; //logarithmic Z-Dist storage; unused\\nq3 = 1.0/q30; //store inverse so shaders don\'t need to do inverse for division\\nq31 = 128;\\nq29 = 1.0/q31;//store the inverse of q31 so the shaders don\'t need to do inverse for division\\nstart = 1; travel = 0; RotZ = 0; look = 0; slow = 0;\\ncran0 = rand(1);\\ncran1 = rand(1);","frame_eqs_eel":"wave_a = 0;\\nfps_ = .9 * fps_ + .1*if(fps<=25,fps,25+.5*(fps-25)); \\ndec_s = 1-.03*30/fps_;\\n\\nbeat = (time >  t0+2);\\nt0 = if(beat, time, t0);\\n\\nspeed = min(0.2,dist_-.0) * (1+avg) *(1-slow*.7);\\nds = ds * dec_s + (1-dec_s)*speed*.2/fps_ ; \\n\\nRotZ = if (RotZ==0,beat*(rand(100)<10)*(rand(10)/10-.5),\\n                   bnot(beat*(rand(100)<30))*RotZ);\\n\\nslow = if (bnot(slow), beat*(rand(1000*avg)<6), bnot(beat*(rand(100)<50)));\\nlook = if (bnot(look), beat*(rand(1000*speed)<5), bnot(beat));\\n\\n//Lamp View\\nlx = if (beat,rand(150)/200+.15,lx);\\nly = if (beat,rand(150)/200+.15,ly);\\nlampx = lampx * dec_s + (1-dec_s)*if (look,lx,0.5);\\nlampy = lampy * dec_s + (1-dec_s)*if (look,ly,0.5);\\nq1 = lampx; q2 = lampy;\\n\\n//Position \\nDirX= reg26; DirY= reg27; DirZ = reg28;\\nPosX = PosX + ds*DirX ; PosY = PosY + ds*DirY; PosZ = PosZ + ds*DirZ; \\nq4 = PosX; q5 = PosY; q6 = PosZ;\\n\\nangchg = (.15-dist_)*(dist_ < .15)/2;\\ntravel = if (angchg > 0,0,travel+ds);\\nv1 = v1 * dec_s + (1-dec_s)* RotZ * .05/fps_;\\nv2 = v2 *dec_s + (1-dec_s)*angchg *xslope/fps_;\\nv3 = v3 *dec_s + (1-dec_s)*(angchg *yslope/fps_ + v1/2 * (travel>1));\\n\\n//push old RotMat\\nreg30 =reg20; reg31 =reg21; reg32 =reg22; \\nreg33 =reg23; reg34 =reg24; reg35 =reg25; \\nreg36 =reg26; reg37 =reg27; reg38 =reg28; \\n\\nn = 0; avg = 0;\\nloop (5,\\n  n = n+1;\\n  //new Rot. Mat for infinitesimal angles\\n  ran1 = rand(100)/100;\\n  ran2 = rand(100)/200-.25;\\n  tx = cos(n*1.57+ran2) * (n <= 4)*ran1; ty = sin(n*1.57+ran2) * (n <= 4)*ran1;\\n  c1 = cos(v1); c2 = cos(v2+ty); c3 = cos(v3+tx); \\n  s1 = sin(v1); s2 = sin(v2+ty); s3 = sin(v3+tx);\\n  reg10 = c2*c1; reg11 = c2*s1; reg12 = -s2;\\n  reg13 = s3*s2*c1 - c3*s1; reg14 = s3*s2*s1 + c3*c1; reg15 = s3*c2;\\n  reg16 = c3*s2*c1 + s3*s1; reg17 = c3*s2*s1 - s3*c1; reg18 = c3*c2;\\n\\n  //pop old RotMat\\n  reg20 =reg30; reg21 =reg31; reg22 =reg32; \\n  reg23 =reg33; reg24 =reg34; reg25 =reg35; \\n  reg26 =reg36; reg27 =reg37; reg28 =reg38; \\n\\n  //Multiply new RotMat by old one\\n  q20 = reg10*reg20 + reg11*reg23 + reg12*reg26;\\n  q21 = reg10*reg21 + reg11*reg24 + reg12*reg27;\\n  q22 = reg10*reg22 + reg11*reg25 + reg12*reg28;\\n  q23 = reg13*reg20 + reg14*reg23 + reg15*reg26;\\n  q24 = reg13*reg21 + reg14*reg24 + reg15*reg27;\\n  q25 = reg13*reg22 + reg14*reg25 + reg15*reg28;\\n  q26 = reg16*reg20 + reg17*reg23 + reg18*reg26;\\n  q27 = reg16*reg21 + reg17*reg24 + reg18*reg27;\\n  q28 = reg16*reg22 + reg17*reg25 + reg18*reg28;\\n\\n  reg20 =q20; reg21 =q21; reg22 =q22;\\n  reg23 =q23; reg24 =q24; reg25 =q25;\\n  reg26 =q26; reg27 =q27; reg28 =q28;\\n\\n  //***********BOT*************\\n  //Coord. Trans. must exactly match def in warp S. !!!!\\n  dist = 0.002;\\n  while (exec2(\\n    uvx = reg26*dist/q7; uvy = reg27*dist/q7; uvz = reg28*dist/q7;\\n    uvx += PosX; uvy += PosY; uvz += PosZ;\\n    uvx = 8.0*((uvx/8+30.5 - int(uvx/8+30.5))-.5);\\n    uvy = 8.0*((uvy/8+30.5 - int(uvy/8+30.5))-.5);\\n    uvz = 8.0*((uvz/8+30.5 - int(uvz/8+30.5))-.5);\\n    uvx0 = uvx; uvy0 = uvy; uvz0 = uvz;\\n    loop (7+1,\\n      uvx = if (uvx > 1, 2-uvx, if(uvx < -1, -2-uvx, uvx));\\n      uvy = if (uvy > 1, 2-uvy, if(uvy < -1, -2-uvy, uvy));\\n      uvz = if (uvz > 1, 2-uvz, if(uvz < -1, -2-uvz, uvz));\\n      slen = uvx*uvx + uvy*uvy + uvz*uvz;\\n      uvx = if (slen < 0.25, uvx*4, if (slen < 1, uvx/slen, uvx)) *2.6 + uvx0; \\n      uvy = if (slen < 0.25, uvy*4, if (slen < 1, uvy/slen, uvy)) *2.6 + uvy0; \\n      uvz = if (slen < 0.25, uvz*4, if (slen < 1, uvz/slen, uvz)) *2.6 + uvz0; \\n    );\\n    len = sqrt(uvx*uvx + uvy*uvy + uvz*uvz);\\n    dist *= 1.1;\\n  ,(dist < 0.6)*(len > 30)));\\n  megabuf(n) = megabuf(n)*dec_s + (1-dec_s)*dist; //stores the 4 trial points\\n  avg = avg+abs(megabuf(n)/5);\\n); //end loop 5\\n\\nn = 0; avg = 0; loop (5, n=n+1; avg = avg+abs(megabuf(n)/5));\\n\\nxslope = 1/avg*(megabuf(1)-megabuf(3));\\nyslope =  1/avg*(megabuf(4)-megabuf(2));\\nmonitor = avg;\\ndist_ = dist_*dec_s + (1-dec_s)*dist;\\n\\n//sustain\\nq13 = 1-ds; //warp zoom uv \\nq14 = 4*abs(ds) + 6*(abs(v1) + 2*abs(v2) + 2*abs(v3)) + 1.0/255 + start*.1; \\nq18 = cran1; //brightness balance back/front\\nq19 = .5 + .5*sin(time*.02+cran0*6); //brightness backgd\\nstart = start * .9;\\n\\nbb = bb*0.99 + bass*0.02;\\nmm = mm*0.99 + mid*0.02;\\ntt = tt*0.99 + treb*0.02;\\n\\nmx = max(max(bb,mm),tt);\\nmn = min(min(bb,mm),tt);\\n\\nh1 = (bb-mn)/(mx-mn);\\nh2 = (mm-mn)/(mx-mn);\\nh3 = (tt-mn)/(mx-mn);\\n\\nv = 0.1333/fps;\\nbm = bm + (h1-h2)*v;\\nmt = mt + (h2-h3)*v;\\nbt = bt + (h1-h3)*v;\\n\\nw = bm*2;\\nq3 = sin(w);\\nq9 = cos(w);\\n\\n\\nq17 = bm;\\nq18 = mt;\\nq19 = bt;","pixel_eqs_eel":"warp = 0; dx = .00; zoom = 1; dy = 0;","warp":"float sustain;\\nfloat xlat_mutabledist;\\nfloat xlat_mutablestruc;\\nvec2 xlat_mutableuv1;\\n shader_body { \\n  mat3 tmpvar_1;\\n  tmpvar_1[uint(0)].x = q20;\\n  tmpvar_1[uint(0)].y = q23;\\n  tmpvar_1[uint(0)].z = q26;\\n  tmpvar_1[1u].x = q21;\\n  tmpvar_1[1u].y = q24;\\n  tmpvar_1[1u].z = q27;\\n  tmpvar_1[2u].x = q22;\\n  tmpvar_1[2u].y = q25;\\n  tmpvar_1[2u].z = q28;\\n  vec3 tmpvar_2;\\n  tmpvar_2.x = q4;\\n  tmpvar_2.y = q5;\\n  tmpvar_2.z = q6;\\n  sustain = (0.98 - (q14 * 2.0));\\n  vec2 uv_3;\\n  vec3 uv2_4;\\n  vec3 ret_5;\\n  uv_3 = (((uv - 0.5) * q13) + 0.5);\\n  xlat_mutableuv1 = ((uv_3 - 0.5) * aspect.xy);\\n  vec4 tmpvar_6;\\n  tmpvar_6 = fract((8.0 * texture (sampler_noise_lq, (uv_3 + rand_frame.yz))));\\n  xlat_mutabledist = tmpvar_6.x;\\n  if ((tmpvar_6.y > 0.2)) {\\n    vec3 tmpvar_7;\\n    tmpvar_7 = (tmpvar_6.xyz - vec3(0.4, 0.5, 0.5));\\n    vec2 uvi_8;\\n    uvi_8 = ((tmpvar_7.zy * 0.003) + uv_3);\\n    vec2 pix_9;\\n    vec4 nb2_10;\\n    vec4 nb_11;\\n    vec2 x_12;\\n    x_12 = (uvi_8 - 0.5);\\n    pix_9 = (texsize.zw * (1.0 + (\\n      sqrt(dot (x_12, x_12))\\n     * 3.0)));\\n    vec2 tmpvar_13;\\n    tmpvar_13 = (q29 * floor((\\n      (q31 * texture (sampler_pw_main, (uvi_8 - pix_9)).yz)\\n     + vec2(0.5, 0.5))));\\n    nb_11.x = (1.0 - ((0.015625 * \\n      (tmpvar_13.x - 0.505)\\n    ) + tmpvar_13.y));\\n    vec2 tmpvar_14;\\n    tmpvar_14 = (q29 * floor((\\n      (q31 * texture (sampler_pw_main, (uvi_8 + (pix_9 * vec2(1.0, -1.0)))).yz)\\n     + vec2(0.5, 0.5))));\\n    nb_11.y = (1.0 - ((0.015625 * \\n      (tmpvar_14.x - 0.505)\\n    ) + tmpvar_14.y));\\n    vec2 tmpvar_15;\\n    tmpvar_15 = (q29 * floor((\\n      (q31 * texture (sampler_pw_main, (uvi_8 + pix_9)).yz)\\n     + vec2(0.5, 0.5))));\\n    nb_11.z = (1.0 - ((0.015625 * \\n      (tmpvar_15.x - 0.505)\\n    ) + tmpvar_15.y));\\n    vec2 tmpvar_16;\\n    tmpvar_16 = (q29 * floor((\\n      (q31 * texture (sampler_pw_main, (uvi_8 + (pix_9 * vec2(-1.0, 1.0)))).yz)\\n     + vec2(0.5, 0.5))));\\n    nb_11.w = (1.0 - ((0.015625 * \\n      (tmpvar_16.x - 0.505)\\n    ) + tmpvar_16.y));\\n    vec2 tmpvar_17;\\n    tmpvar_17 = (q29 * floor((\\n      (q31 * texture (sampler_pw_main, (uvi_8 + (pix_9 * vec2(0.0, -1.0)))).yz)\\n     + vec2(0.5, 0.5))));\\n    nb2_10.x = (1.0 - ((0.015625 * \\n      (tmpvar_17.x - 0.505)\\n    ) + tmpvar_17.y));\\n    vec2 tmpvar_18;\\n    tmpvar_18 = (q29 * floor((\\n      (q31 * texture (sampler_pw_main, (uvi_8 + (pix_9 * vec2(1.0, 0.0)))).yz)\\n     + vec2(0.5, 0.5))));\\n    nb2_10.y = (1.0 - ((0.015625 * \\n      (tmpvar_18.x - 0.505)\\n    ) + tmpvar_18.y));\\n    vec2 tmpvar_19;\\n    tmpvar_19 = (q29 * floor((\\n      (q31 * texture (sampler_pw_main, (uvi_8 + (pix_9 * vec2(0.0, 1.0)))).yz)\\n     + vec2(0.5, 0.5))));\\n    nb2_10.z = (1.0 - ((0.015625 * \\n      (tmpvar_19.x - 0.505)\\n    ) + tmpvar_19.y));\\n    vec2 tmpvar_20;\\n    tmpvar_20 = (q29 * floor((\\n      (q31 * texture (sampler_pw_main, (uvi_8 + (pix_9 * vec2(-1.0, 0.0)))).yz)\\n     + vec2(0.5, 0.5))));\\n    nb2_10.w = (1.0 - ((0.015625 * \\n      (tmpvar_20.x - 0.505)\\n    ) + tmpvar_20.y));\\n    vec4 tmpvar_21;\\n    tmpvar_21 = min (nb_11, nb2_10);\\n    nb_11.zw = tmpvar_21.zw;\\n    nb_11.xy = min (tmpvar_21.xy, tmpvar_21.zw);\\n    xlat_mutabledist = (min (nb_11.x, nb_11.y) + ((0.005 * tmpvar_7.x) * abs(tmpvar_7.y)));\\n  };\\n  vec2 tmpvar_22;\\n  tmpvar_22 = (q29 * floor((\\n    (q31 * texture (sampler_pw_main, uv_3).yz)\\n   + vec2(0.5, 0.5))));\\n  float tmpvar_23;\\n  tmpvar_23 = min (xlat_mutabledist, (1.0 - (\\n    (0.015625 * (tmpvar_22.x - 0.505))\\n   + tmpvar_22.y)));\\n  xlat_mutabledist = tmpvar_23;\\n  vec3 tmpvar_24;\\n  tmpvar_24.xy = (xlat_mutableuv1 * tmpvar_23);\\n  tmpvar_24.z = (tmpvar_23 - 0.02);\\n  uv2_4 = ((fract(\\n    ((((\\n      (tmpvar_24 / q7)\\n     * tmpvar_1) + tmpvar_2) / 8.0) + 0.5)\\n  ) - 0.5) * 8.0);\\n  vec3 zz_25;\\n  zz_25 = ((2.0 * clamp (uv2_4, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - uv2_4);\\n  float tmpvar_26;\\n  tmpvar_26 = dot (zz_25, zz_25);\\n  if ((tmpvar_26 <= 0.25)) {\\n    zz_25 = (zz_25 * 4.0);\\n  } else {\\n    if ((tmpvar_26 <= 1.0)) {\\n      zz_25 = (zz_25 / tmpvar_26);\\n    };\\n  };\\n  zz_25 = ((2.6 * zz_25) + uv2_4);\\n  zz_25 = ((2.0 * clamp (zz_25, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_25);\\n  float tmpvar_27;\\n  tmpvar_27 = dot (zz_25, zz_25);\\n  if ((tmpvar_27 <= 0.25)) {\\n    zz_25 = (zz_25 * 4.0);\\n  } else {\\n    if ((tmpvar_27 <= 1.0)) {\\n      zz_25 = (zz_25 / tmpvar_27);\\n    };\\n  };\\n  zz_25 = ((2.6 * zz_25) + uv2_4);\\n  zz_25 = ((2.0 * clamp (zz_25, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_25);\\n  float tmpvar_28;\\n  tmpvar_28 = dot (zz_25, zz_25);\\n  if ((tmpvar_28 <= 0.25)) {\\n    zz_25 = (zz_25 * 4.0);\\n  } else {\\n    if ((tmpvar_28 <= 1.0)) {\\n      zz_25 = (zz_25 / tmpvar_28);\\n    };\\n  };\\n  zz_25 = ((2.6 * zz_25) + uv2_4);\\n  zz_25 = ((2.0 * clamp (zz_25, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_25);\\n  float tmpvar_29;\\n  tmpvar_29 = dot (zz_25, zz_25);\\n  if ((tmpvar_29 <= 0.25)) {\\n    zz_25 = (zz_25 * 4.0);\\n  } else {\\n    if ((tmpvar_29 <= 1.0)) {\\n      zz_25 = (zz_25 / tmpvar_29);\\n    };\\n  };\\n  zz_25 = ((2.6 * zz_25) + uv2_4);\\n  zz_25 = ((2.0 * clamp (zz_25, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_25);\\n  float tmpvar_30;\\n  tmpvar_30 = dot (zz_25, zz_25);\\n  if ((tmpvar_30 <= 0.25)) {\\n    zz_25 = (zz_25 * 4.0);\\n  } else {\\n    if ((tmpvar_30 <= 1.0)) {\\n      zz_25 = (zz_25 / tmpvar_30);\\n    };\\n  };\\n  zz_25 = ((2.6 * zz_25) + uv2_4);\\n  zz_25 = ((2.0 * clamp (zz_25, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_25);\\n  float tmpvar_31;\\n  tmpvar_31 = dot (zz_25, zz_25);\\n  if ((tmpvar_31 <= 0.25)) {\\n    zz_25 = (zz_25 * 4.0);\\n  } else {\\n    if ((tmpvar_31 <= 1.0)) {\\n      zz_25 = (zz_25 / tmpvar_31);\\n    };\\n  };\\n  zz_25 = ((2.6 * zz_25) + uv2_4);\\n  zz_25 = ((2.0 * clamp (zz_25, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_25);\\n  float tmpvar_32;\\n  tmpvar_32 = dot (zz_25, zz_25);\\n  if ((tmpvar_32 <= 0.25)) {\\n    zz_25 = (zz_25 * 4.0);\\n  } else {\\n    if ((tmpvar_32 <= 1.0)) {\\n      zz_25 = (zz_25 / tmpvar_32);\\n    };\\n  };\\n  zz_25 = ((2.6 * zz_25) + uv2_4);\\n  zz_25 = ((2.0 * clamp (zz_25, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_25);\\n  float tmpvar_33;\\n  tmpvar_33 = dot (zz_25, zz_25);\\n  if ((tmpvar_33 <= 0.25)) {\\n    zz_25 = (zz_25 * 4.0);\\n  } else {\\n    if ((tmpvar_33 <= 1.0)) {\\n      zz_25 = (zz_25 / tmpvar_33);\\n    };\\n  };\\n  zz_25 = ((2.6 * zz_25) + uv2_4);\\n  float tmpvar_34;\\n  tmpvar_34 = sqrt(dot (zz_25, zz_25));\\n  xlat_mutablestruc = (sqrt(dot (zz_25.zy, zz_25.zy)) / 20.0);\\n  float tmpvar_35;\\n  vec2 tmpvar_36;\\n  tmpvar_36 = (q29 * floor((\\n    (q31 * texture (sampler_pw_main, uv_3).yz)\\n   + vec2(0.5, 0.5))));\\n  tmpvar_35 = (1.0 - ((0.015625 * \\n    (tmpvar_36.x - 0.505)\\n  ) + tmpvar_36.y));\\n  if ((((tmpvar_23 <= tmpvar_35) && (tmpvar_34 < 20.0)) && (tmpvar_23 > 0.005))) {\\n    ret_5.x = (((1.0 - sustain) * xlat_mutablestruc) + (sustain * mix (texture (sampler_main, uv_3).xyz, \\n      ((((texture (sampler_blur1, uv_3).xyz * scale1) + bias1) * 3.0) / 3.0)\\n    , vec3(\\n      (q14 * 4.0)\\n    )).x));\\n    float tmpvar_37;\\n    tmpvar_37 = pow (tmpvar_23, q30);\\n    vec2 tmpvar_38;\\n    tmpvar_38 = (q29 * floor((\\n      (q31 * vec2((1.0 - tmpvar_37)))\\n     + vec2(0.5, 0.5))));\\n    vec2 tmpvar_39;\\n    tmpvar_39.x = ((64.0 * (\\n      (1.0 - tmpvar_37)\\n     - tmpvar_38.x)) + 0.495);\\n    tmpvar_39.y = tmpvar_38.x;\\n    ret_5.yz = tmpvar_39;\\n  } else {\\n    vec3 tmpvar_40;\\n    tmpvar_40.yz = vec2(1.0, 1.0);\\n    tmpvar_40.x = sustain;\\n    vec3 tmpvar_41;\\n    tmpvar_41.xy = vec2(0.0, 0.0);\\n    tmpvar_41.z = q14;\\n    ret_5 = ((texture (sampler_pc_main, uv_orig).xyz * tmpvar_40) - tmpvar_41);\\n  };\\n  vec4 tmpvar_42;\\n  tmpvar_42.w = 1.0;\\n  tmpvar_42.xyz = ret_5;\\n  ret = tmpvar_42.xyz;\\n }","comp":" shader_body { \\n  vec3 tmpvar_1;\\n  tmpvar_1.x = q4;\\n  tmpvar_1.y = q5;\\n  tmpvar_1.z = q6;\\n  mat3 tmpvar_2;\\n  tmpvar_2[uint(0)].x = q20;\\n  tmpvar_2[uint(0)].y = q23;\\n  tmpvar_2[uint(0)].z = q26;\\n  tmpvar_2[1u].x = q21;\\n  tmpvar_2[1u].y = q24;\\n  tmpvar_2[1u].z = q27;\\n  tmpvar_2[2u].x = q22;\\n  tmpvar_2[2u].y = q25;\\n  tmpvar_2[2u].z = q28;\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = q1;\\n  tmpvar_3.y = q2;\\n  vec2 uv_4;\\n  uv_4 = uv;\\n  vec3 ret_5;\\n  vec2 tmpvar_6;\\n  tmpvar_6 = ((uv - 0.5) * aspect.xy);\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = ((q9 * tmpvar_6.x) - (q3 * tmpvar_6.y));\\n  tmpvar_7.y = ((q3 * tmpvar_6.x) + (q9 * tmpvar_6.y));\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (0.5 - (tmpvar_7 * 2.0));\\n  vec2 numerator_9;\\n  numerator_9 = (tmpvar_8 - vec2(0.0, 0.5));\\n  vec2 denominator_10;\\n  denominator_10 = (tmpvar_8 - vec2(1.0, 0.5));\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = ((numerator_9.x * denominator_10.x) + (numerator_9.y * denominator_10.y));\\n  tmpvar_11.y = ((numerator_9.y * denominator_10.x) - (numerator_9.x * denominator_10.y));\\n  vec2 tmpvar_12;\\n  tmpvar_12 = (((tmpvar_11 / \\n    ((denominator_10.x * denominator_10.x) + (denominator_10.y * denominator_10.y))\\n  ) + 0.5) - vec2(0.5, 0.5));\\n  float tmpvar_13;\\n  tmpvar_13 = sqrt(dot (tmpvar_12, tmpvar_12));\\n  float tmpvar_14;\\n  float tmpvar_15;\\n  tmpvar_15 = (min (abs(\\n    (tmpvar_12.x / tmpvar_12.y)\\n  ), 1.0) / max (abs(\\n    (tmpvar_12.x / tmpvar_12.y)\\n  ), 1.0));\\n  float tmpvar_16;\\n  tmpvar_16 = (tmpvar_15 * tmpvar_15);\\n  tmpvar_16 = (((\\n    ((((\\n      ((((-0.01213232 * tmpvar_16) + 0.05368138) * tmpvar_16) - 0.1173503)\\n     * tmpvar_16) + 0.1938925) * tmpvar_16) - 0.3326756)\\n   * tmpvar_16) + 0.9999793) * tmpvar_15);\\n  tmpvar_16 = (tmpvar_16 + (float(\\n    (abs((tmpvar_12.x / tmpvar_12.y)) > 1.0)\\n  ) * (\\n    (tmpvar_16 * -2.0)\\n   + 1.570796)));\\n  tmpvar_14 = (tmpvar_16 * sign((tmpvar_12.x / tmpvar_12.y)));\\n  if ((abs(tmpvar_12.y) > (1e-08 * abs(tmpvar_12.x)))) {\\n    if ((tmpvar_12.y < 0.0)) {\\n      if ((tmpvar_12.x >= 0.0)) {\\n        tmpvar_14 += 3.141593;\\n      } else {\\n        tmpvar_14 = (tmpvar_14 - 3.141593);\\n      };\\n    };\\n  } else {\\n    tmpvar_14 = (sign(tmpvar_12.x) * 1.570796);\\n  };\\n  vec2 tmpvar_17;\\n  tmpvar_17.x = (tmpvar_14 * 0.1591549);\\n  tmpvar_17.y = tmpvar_13;\\n  vec2 tmpvar_18;\\n  tmpvar_18.x = ((tmpvar_17.x * 2.0) + q18);\\n  tmpvar_18.y = ((0.5 * log(tmpvar_13)) + q19);\\n  uv_4 = (0.5 + (0.5 - abs(\\n    ((fract((tmpvar_18 * 0.5)) * 2.0) - 1.0)\\n  )));\\n  vec3 tmpvar_19;\\n  tmpvar_19.xy = ((uv_4 - 0.5) * min ((1.0 - texture (sampler_main, uv_4).z), (1.0 - \\n    ((texture (sampler_blur2, uv_4).xyz * scale2) + bias2)\\n  .z)));\\n  tmpvar_19.z = min ((1.0 - texture (sampler_main, uv_4).z), (1.0 - (\\n    (texture (sampler_blur2, uv_4).xyz * scale2)\\n   + bias2).z));\\n  float tmpvar_20;\\n  tmpvar_20 = clamp ((abs(\\n    ((1.0 - ((texture (sampler_blur2, uv_4).xyz * scale2) + bias2).z) - clamp ((1.0 - (\\n      (texture (sampler_blur2, tmpvar_3).xyz * scale2)\\n     + bias2).z), 0.1, 0.4))\\n  ) + 0.2), 0.0, 1.0);\\n  float tmpvar_21;\\n  tmpvar_21 = clamp (((1.0 - \\n    exp(-(((texture (sampler_blur1, uv_4).xyz * scale1) + bias1).x))\\n  ) - 0.2), 0.0, 1.0);\\n  ret_5 = ((mix (texture (sampler_main, uv_4).xyz, \\n    ((texture (sampler_blur1, uv_4).xyz * scale1) + bias1)\\n  , vec3(tmpvar_20)).x * (0.2 + \\n    ((1.0 - tmpvar_20) * (1.0 - min ((1.0 - texture (sampler_main, uv_4).z), (1.0 - \\n      ((texture (sampler_blur2, uv_4).xyz * scale2) + bias2)\\n    .z))))\\n  )) * (1.0 + (0.5 * \\n    sin((((tmpvar_19 / q7) * tmpvar_2) + tmpvar_1))\\n  )));\\n  vec3 tmpvar_22;\\n  tmpvar_22.xy = vec2(0.0, 1.0);\\n  tmpvar_22.z = (tmpvar_21 * 3.0);\\n  ret_5 = (mix (ret_5, tmpvar_22, vec3(tmpvar_21)) + ((\\n    pow ((1.0 - mix (texture (sampler_main, uv_4).xyz, (\\n      (texture (sampler_blur1, uv_4).xyz * scale1)\\n     + bias1), vec3(0.8, 0.8, 0.8)).z), 3.0)\\n   * \\n    (0.5 + (0.5 * slow_roam_cos))\\n  ) * q19).xyz);\\n  ret_5 = (1.0 - exp((-2.0 * ret_5)));\\n  vec4 tmpvar_23;\\n  tmpvar_23.w = 1.0;\\n  tmpvar_23.xyz = ret_5;\\n  ret = tmpvar_23.xyz;\\n }"}')},2867:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":2,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":3,"wave_thick":1,"wrap":0,"darken":1,"wave_a":100,"wave_scale":0.282,"wave_smoothing":0.9,"wave_mystery":1,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.05,"ob_g":0.1,"ob_b":1,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"sides":100,"rad":0.16446,"g":1,"b":1,"a":0,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"a = if(above(bass,2.5),1,0);"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"spectrum":1,"thick":1,"scaling":0.2248},"init_eqs_eel":"","frame_eqs_eel":"r = bass;\\ng = treb;\\nb = .5;","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));"},{"baseVals":{"enabled":1,"spectrum":1,"thick":1,"scaling":0.2743},"init_eqs_eel":"","frame_eqs_eel":"r = bass;\\ng = treb;\\nb = .5;","point_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));\\n"},{"baseVals":{"enabled":1,"thick":1,"scaling":2.0231,"smoothing":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"vol = bass*8 + mid*5 + treb*3;\\nm = m*0.97 + vol*0.08;\\nmonitor = vol;\\nbeat = above(vol,res)*above(vol,m)*above(vol,16);\\ndiff = (1-beat)*diff + beat*(vol-res);\\nres = beat*(vol + m*0.04) + (1-beat)*(res -  (0.1+diff*0.02)*60/fps);\\nres = max(0,res);\\n\\n//a = beat;","point_eqs_eel":"tt3 = tt3*0.6 + (value1)*1;\\ntt2 = tt2*0.7 + tt3*0.2;\\ntt1 = tt1*0.8 + tt2*0.1;\\nd = d*0.9 + tt1*0.2;\\n\\ny = 0.5 + d*sample*(1-sample)*2;\\nx =  -0.05 + sample*1.1;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"//******** INITIALIZATION *********\\n//---------- some global vars, do not change -------------\\navg = 0.01;\\nq7 = .25; //MyZoom\\nq8 =  rand(2.0)-1.0; //fractal modifier\\n//q8 = 1; //#\\nq16 = 1 + rand(2); //Tele ; rather fish eye\\n//q16 = 1; //#\\nq18 = rand(0.8)+.1; //brightness balance back/front\\nq30 = 1; //logarithmic Z-Dist storage; unused\\nq31 =128;\\nstart = 1; travel = 0; RotZ = 0; look = 0; slow = 0; t0 = time+3; lampx = .5; lampy = .5;\\ncran0 = rand(1);\\nn = 0; loop (10000, gmegabuf(n)=0; n=n+1; ); \\nn = 0; loop (10000,  megabuf(n)=0; n=n+1; ); \\ntrelx = 0;  trely = 0; trelz = 0;\\nreg20 = 1; reg21 = 0; reg22 = 0; reg23 = 0; reg24 = 1; reg25 = 0; reg26 = 0; reg27 = 0; reg28 = 1;\\n\\n//Find random starting point\\nwhile (exec2(\\n  ran1 = rand(800)/100;  ran2 = rand(800)/100;  ran3 = rand(800)/100;\\n  PosX = rand(5)-2;   PosY = rand(5)-2;   PosZ = rand(5)-2; \\n\\n//  PosX = 3.3; PosY = 2; PosZ = -2; ran1 = 0; ran2 = 0; ran3 = 0; //#\\n\\n  c1 = cos(ran1); c2 = cos(ran2); c3 = cos(ran3); \\n  s1 = sin(ran1); s2 = sin(ran2); s3 = sin(ran3);\\n\\n  reg20 = c2*c1; reg21 = c2*s1; reg22 = -s2;\\n  reg23 = s3*s2*c1 - c3*s1; reg24 = s3*s2*s1 + c3*c1; reg25 = s3*c2;\\n  reg26 = c3*s2*c1 + s3*s1; reg27 = c3*s2*s1 - s3*c1; reg28 = c3*c2;\\n\\n  //***********BOT*************\\n  //Coord. Trans. must exactly match def in warp S. !!!!\\n  dist = 0.001;\\n  while (exec2(\\n    uvx = reg26*dist/q7; uvy = reg27*dist/q7; uvz = reg28*dist/q7;\\n    uvx += PosX; uvy += PosY; uvz += PosZ;\\n    uvx = 8.0*((uvx/8+30.5 - int(uvx/8+30.5))-.5);\\n    uvy = 8.0*((uvy/8+30.5 - int(uvy/8+30.5))-.5);\\n    uvz = 8.0*((uvz/8+30.5 - int(uvz/8+30.5))-.5);\\n    uvx0 = uvx+q8; uvy0 = uvy+q8; uvz0 = uvz+q8;\\n    loop (7+1,\\n      uvx = if (uvx > 1, 2-uvx, if(uvx < -1, -2-uvx, uvx));\\n      uvy = if (uvy > 1, 2-uvy, if(uvy < -1, -2-uvy, uvy));\\n      uvz = if (uvz > 1, 2-uvz, if(uvz < -1, -2-uvz, uvz));\\n      slen = uvx*uvx + uvy*uvy + uvz*uvz;\\n      uvx = if (slen < 0.25, uvx*4, if (slen < 1, uvx/slen, uvx)) *2.6 + uvx0; \\n      uvy = if (slen < 0.25, uvy*4, if (slen < 1, uvy/slen, uvy)) *2.6 + uvy0; \\n      uvz = if (slen < 0.25, uvz*4, if (slen < 1, uvz/slen, uvz)) *2.6 + uvz0; \\n    );\\n    len = sqrt(uvx*uvx + uvy*uvy + uvz*uvz);\\n    dist *= 1.05;\\n  ,(dist < 0.6)*(len > 30)));\\n,(dist < .06))); //end while","frame_eqs_eel":"wave_a = 0;\\nfps_ = .0 * fps_ + 1*if(fps<=25,fps,25+.5*(fps-25)); \\ndec_s = 1-.06*30/fps_;\\nbeat = (time >  t0+3); t0 = if(beat, time, t0);\\n\\nspeed = min(0.2,dist_-.02) * (1+2*avg) *(1-slow*.0)*.7/q7; //#\\nds = ds * dec_s + (1-dec_s)*speed*.25/fps_; \\nRotZ = if (RotZ==0,beat*(rand(100)<20*travel)*(rand(10)/10-.3),\\n                   bnot(beat*(rand(100)<30))*RotZ);\\nslow = if (bnot(slow), beat*(rand(1000*avg)<6), bnot(beat*(rand(100)<50)));\\nlook = if (bnot(look), beat*(rand(1000*speed)<12), bnot(beat*(rand(100)<50)));\\n\\n//Lamp View\\nlx = if (beat,rand(150)/200+.15,lx);\\nly = if (beat,rand(150)/200+.15,ly);\\nlampx = lampx * dec_s + (1-dec_s)*if (look,lx,0.5);\\nlampy = lampy * dec_s + (1-dec_s)*if (look,ly,0.5);\\nq1 = lampx; q2 = lampy;\\n\\n//Position \\nDirX= reg26; DirY= reg27; DirZ = reg28;\\nPosX = PosX + ds*DirX ; PosY = PosY + ds*DirY; PosZ = PosZ + ds*DirZ; \\nq4 = PosX; q5 = PosY; q6 = PosZ;\\n\\nangchg = (.2-dist_)*(dist_ < .2)*2;\\ntravel = if (angchg > 0,0,travel+ds);\\nv1 = v1 * dec_s + (1-dec_s)* RotZ * ds;\\nv2 = v2 *dec_s + (1-dec_s)*angchg *xslope/fps_;\\nv3 = v3 *dec_s + (1-dec_s)*(angchg *yslope/fps_ + 2*v1*sin(time*.1));\\n//v2 = .008;\\n//push old RotMat\\nreg30 =reg20; reg31 =reg21; reg32 =reg22; \\nreg33 =reg23; reg34 =reg24; reg35 =reg25; \\nreg36 =reg26; reg37 =reg27; reg38 =reg28; \\n\\nn = 0; avg = 0;\\nloop (5,\\n  n = n+1;\\n  //new Rot. Mat for infinitesimal angles\\n  ran1 = rand(100)/100;\\n  ran2 = rand(100)/200-.25;\\n  tx = cos(n*1.57+ran2) * (n <= 4)*ran1; ty = sin(n*1.57+ran2) * (n <= 4)*ran1;\\n  c1 = cos(v1); c2 = cos(v2+ty); c3 = cos(v3+tx); \\n  s1 = sin(v1); s2 = sin(v2+ty); s3 = sin(v3+tx);\\n  reg10 = c2*c1; reg11 = c2*s1; reg12 = -s2;\\n  reg13 = s3*s2*c1 - c3*s1; reg14 = s3*s2*s1 + c3*c1; reg15 = s3*c2;\\n  reg16 = c3*s2*c1 + s3*s1; reg17 = c3*s2*s1 - s3*c1; reg18 = c3*c2;\\n\\n  //pop old RotMat\\n  reg20 =reg30; reg21 =reg31; reg22 =reg32; \\n  reg23 =reg33; reg24 =reg34; reg25 =reg35; \\n  reg26 =reg36; reg27 =reg37; reg28 =reg38; \\n\\n  //Multiply new RotMat by old one\\n  q20 = reg10*reg20 + reg11*reg23 + reg12*reg26;\\n  q21 = reg10*reg21 + reg11*reg24 + reg12*reg27;\\n  q22 = reg10*reg22 + reg11*reg25 + reg12*reg28;\\n  q23 = reg13*reg20 + reg14*reg23 + reg15*reg26;\\n  q24 = reg13*reg21 + reg14*reg24 + reg15*reg27;\\n  q25 = reg13*reg22 + reg14*reg25 + reg15*reg28;\\n  q26 = reg16*reg20 + reg17*reg23 + reg18*reg26;\\n  q27 = reg16*reg21 + reg17*reg24 + reg18*reg27;\\n  q28 = reg16*reg22 + reg17*reg25 + reg18*reg28;\\n\\n  reg20 =q20; reg21 =q21; reg22 =q22;\\n  reg23 =q23; reg24 =q24; reg25 =q25;\\n  reg26 =q26; reg27 =q27; reg28 =q28;\\n\\n  //***********BOT*************\\n  //Coord. Trans. must exactly match def in warp S. !!!!\\n  dist = 0.002;\\n  while (exec2(\\n    uvx = reg26*dist/q7; uvy = reg27*dist/q7; uvz = reg28*dist/q7;\\n    uvx += PosX; uvy += PosY; uvz += PosZ;\\n    uvx = 8.0*((uvx/8+30.5 - int(uvx/8+30.5))-.5);\\n    uvy = 8.0*((uvy/8+30.5 - int(uvy/8+30.5))-.5);\\n    uvz = 8.0*((uvz/8+30.5 - int(uvz/8+30.5))-.5);\\n    uvx0 = uvx+q8; uvy0 = uvy+q8; uvz0 = uvz+q8;\\n    loop (7+1,\\n      uvx = if (uvx > 1, 2-uvx, if(uvx < -1, -2-uvx, uvx));\\n      uvy = if (uvy > 1, 2-uvy, if(uvy < -1, -2-uvy, uvy));\\n      uvz = if (uvz > 1, 2-uvz, if(uvz < -1, -2-uvz, uvz));\\n      slen = uvx*uvx + uvy*uvy + uvz*uvz;\\n      uvx = if (slen < 0.25, uvx*4, if (slen < 1, uvx/slen, uvx)) *2.6 + uvx0; \\n      uvy = if (slen < 0.25, uvy*4, if (slen < 1, uvy/slen, uvy)) *2.6 + uvy0; \\n      uvz = if (slen < 0.25, uvz*4, if (slen < 1, uvz/slen, uvz)) *2.6 + uvz0; \\n    );\\n    len = sqrt(uvx*uvx + uvy*uvy + uvz*uvz);\\n    dist *= 1.1;\\n  ,(dist < 0.6)*(len > 30)));\\n  megabuf(n) = megabuf(n)*dec_s + (1-dec_s)*dist; //stores the 4 trial points\\n  avg = avg+abs(megabuf(n)/5);\\n); //end loop 5\\n\\nn = 0; avg = 0; loop (5, n=n+1; avg = avg+abs(megabuf(n)/5));\\n\\nxslope = min(max(2/avg*(megabuf(1)-megabuf(3)),-3),3);\\nyslope = min(max(2/avg*(megabuf(4)-megabuf(2)),-3),3);\\nmonitor = avg;\\ndist_ = dist_*dec_s + (1-dec_s)*dist;\\n\\nq10 = ds*q7; //compensation of lin. movement in GetDist and zoom uv\\nq14 = 1*abs(ds) + 2*(abs(v1) + abs(v2) + abs(v3)) + 1.0/255 + start*.05; \\nq19 = .6 + .4*sin(time*.02+cran0*6); //brightness backgd\\nstart = start * .9;\\nq11 = v1; q12 = v2; q13 = v3;\\n//forward comp. of Rotation\\nmonitor = q16;","pixel_eqs_eel":"warp = 0.0; zoom = 1; dx = -q12/q16*(1+0*pow(x-.5,2)); dy = q13/q16*(1+0*pow(y-.5,2)); rot =q11;","warp":" shader_body { \\n  float dy_1;\\n  float dx_2;\\n  vec3 ret_3;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = ((uv * texsize.xy) * texsize_noise_lq.zw);\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (texsize.zw * 4.0);\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = (((2.0 * \\n    ((texture (sampler_blur1, (uv + (vec2(1.0, 0.0) * tmpvar_5))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv - (vec2(1.0, 0.0) * tmpvar_5))).xyz * scale1) + bias1)\\n  )).y * 0.5);\\n  tmpvar_6.y = (((2.0 * \\n    ((texture (sampler_blur1, (uv + (vec2(0.0, 1.0) * tmpvar_5))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv - (vec2(0.0, 1.0) * tmpvar_5))).xyz * scale1) + bias1)\\n  )).y * 0.5);\\n  ret_3.y = texture (sampler_fw_main, clamp ((uv + (\\n    (tmpvar_6 * texsize.zw)\\n   * 4.0)), 0.0, 1.0)).y;\\n  ret_3.y = (ret_3.y + ((\\n    (ret_3 - ((texture (sampler_blur1, uv).xyz * scale1) + bias1))\\n  .y * 0.025) + -0.01));\\n  ret_3.y = (ret_3.y + ((texture (sampler_noise_lq, tmpvar_4).y - 0.5) * 0.02));\\n  dx_2 = (((2.0 * \\n    ((texture (sampler_blur1, (uv + (vec2(1.0, 0.0) * tmpvar_5))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv - (vec2(1.0, 0.0) * tmpvar_5))).xyz * scale1) + bias1)\\n  )).z * 0.5);\\n  dy_1 = (((2.0 * \\n    ((texture (sampler_blur1, (uv + (vec2(0.0, 1.0) * tmpvar_5))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv - (vec2(0.0, 1.0) * tmpvar_5))).xyz * scale1) + bias1)\\n  )).z * 0.5);\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = dx_2;\\n  tmpvar_7.y = dy_1;\\n  ret_3.z = ((texture (sampler_main, (uv - \\n    ((tmpvar_7 * texsize.zw) * 4.0)\\n  )).z - (ret_3.y * 0.01)) + 0.004);\\n  ret_3.z = (ret_3.z + ((texture (sampler_noise_lq, tmpvar_4).y - 0.5) * 0.01));\\n  dx_2 = (((2.0 * \\n    ((texture (sampler_blur1, (uv + (tmpvar_5 * vec2(1.0, 0.0)))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv + (tmpvar_5 * vec2(-1.0, 0.0)))).xyz * scale1) + bias1)\\n  )).x * 0.5);\\n  dy_1 = (((2.0 * \\n    ((texture (sampler_blur1, (uv + (tmpvar_5 * vec2(0.0, 1.0)))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv + (tmpvar_5 * vec2(0.0, -1.0)))).xyz * scale1) + bias1)\\n  )).x * 0.5);\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = dx_2;\\n  tmpvar_8.y = dy_1;\\n  vec2 tmpvar_9;\\n  tmpvar_9 = (tmpvar_8 * texsize.zw);\\n  vec2 domain_10;\\n  domain_10 = (uv - (tmpvar_9 * 2.5));\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 0.0;\\n  tmpvar_11.xyz = max (vec4(0.0, 0.0, 0.0, 0.0), texture (sampler_fc_main, (domain_10 + (texsize.zw * vec2(-1.0, 0.0))))).xyz;\\n  vec4 tmpvar_12;\\n  tmpvar_12.w = 0.0;\\n  tmpvar_12.xyz = max (tmpvar_11, texture (sampler_fc_main, (domain_10 + (texsize.zw * vec2(0.0, -1.0))))).xyz;\\n  vec4 tmpvar_13;\\n  tmpvar_13.w = 0.0;\\n  tmpvar_13.xyz = max (tmpvar_12, texture (sampler_fc_main, domain_10)).xyz;\\n  vec4 tmpvar_14;\\n  tmpvar_14.w = 0.0;\\n  tmpvar_14.xyz = max (tmpvar_13, texture (sampler_fc_main, (domain_10 + (texsize.zw * vec2(0.0, 1.0))))).xyz;\\n  ret_3.x = ((max (tmpvar_14, texture (sampler_fc_main, \\n    (domain_10 + (texsize.zw * vec2(1.0, 0.0)))\\n  )).x + (\\n    (texture (sampler_main, (uv + (tmpvar_9 * 4.0))).x - ((texture (sampler_blur1, (uv + \\n      (tmpvar_9 * 4.0)\\n    )).xyz * scale1) + bias1).x)\\n   * 0.206)) - 0.09);\\n  vec4 tmpvar_15;\\n  tmpvar_15.w = 1.0;\\n  tmpvar_15.xyz = ret_3;\\n  ret = tmpvar_15.xyz;\\n }","comp":"float xlat_mutablelamp;\\nvec2 xlat_mutablers0;\\nvec2 xlat_mutablerss;\\nvec2 xlat_mutableuv1;\\n shader_body { \\n  vec3 tmpvar_1;\\n  tmpvar_1.x = q4;\\n  tmpvar_1.y = q5;\\n  tmpvar_1.z = q6;\\n  mat3 tmpvar_2;\\n  tmpvar_2[uint(0)].x = q20;\\n  tmpvar_2[uint(0)].y = q23;\\n  tmpvar_2[uint(0)].z = q26;\\n  tmpvar_2[1u].x = q21;\\n  tmpvar_2[1u].y = q24;\\n  tmpvar_2[1u].z = q27;\\n  tmpvar_2[2u].x = q22;\\n  tmpvar_2[2u].y = q25;\\n  tmpvar_2[2u].z = q28;\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = q1;\\n  tmpvar_3.y = q2;\\n  vec2 uv_4;\\n  vec3 dots_5;\\n  vec3 ret_6;\\n  vec2 tmpvar_7;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (uv - 0.5);\\n  tmpvar_7 = (0.5 + (tmpvar_8 * vec2(1.1, 0.81)));\\n  vec2 tmpvar_9;\\n  tmpvar_9 = (uv - vec2(0.5, 0.5));\\n  uv_4 = (tmpvar_8 * aspect.xy);\\n  float tmpvar_10;\\n  float tmpvar_11;\\n  tmpvar_11 = (min (abs(\\n    (uv_4.y / uv_4.x)\\n  ), 1.0) / max (abs(\\n    (uv_4.y / uv_4.x)\\n  ), 1.0));\\n  float tmpvar_12;\\n  tmpvar_12 = (tmpvar_11 * tmpvar_11);\\n  tmpvar_12 = (((\\n    ((((\\n      ((((-0.01213232 * tmpvar_12) + 0.05368138) * tmpvar_12) - 0.1173503)\\n     * tmpvar_12) + 0.1938925) * tmpvar_12) - 0.3326756)\\n   * tmpvar_12) + 0.9999793) * tmpvar_11);\\n  tmpvar_12 = (tmpvar_12 + (float(\\n    (abs((uv_4.y / uv_4.x)) > 1.0)\\n  ) * (\\n    (tmpvar_12 * -2.0)\\n   + 1.570796)));\\n  tmpvar_10 = (tmpvar_12 * sign((uv_4.y / uv_4.x)));\\n  if ((abs(uv_4.x) > (1e-08 * abs(uv_4.y)))) {\\n    if ((uv_4.x < 0.0)) {\\n      if ((uv_4.y >= 0.0)) {\\n        tmpvar_10 += 3.141593;\\n      } else {\\n        tmpvar_10 = (tmpvar_10 - 3.141593);\\n      };\\n    };\\n  } else {\\n    tmpvar_10 = (sign(uv_4.y) * 1.570796);\\n  };\\n  xlat_mutablers0.x = ((tmpvar_10 / 3.1416) * 2.0);\\n  xlat_mutablers0.y = (0.02 / sqrt(dot (uv_4, uv_4)));\\n  vec2 tmpvar_13;\\n  tmpvar_13.x = xlat_mutablers0.x;\\n  tmpvar_13.y = (xlat_mutablers0.y + time);\\n  xlat_mutablerss = (tmpvar_13 * mat2(0.7, -0.7, 0.7, 0.7));\\n  vec4 tmpvar_14;\\n  tmpvar_14 = vec4(greaterThanEqual ((texture (sampler_pw_noise_lq, \\n    (xlat_mutablerss / 32.0)\\n  ) - 0.7), vec4(0.0, 0.0, 0.0, 0.0)));\\n  vec2 tmpvar_15;\\n  tmpvar_15 = abs((fract(\\n    (xlat_mutablerss * 8.0)\\n  ) - 0.5));\\n  vec2 tmpvar_16;\\n  tmpvar_16.x = (xlat_mutablers0.x * 2.0);\\n  tmpvar_16.y = (xlat_mutablers0.y + (time / 2.0));\\n  xlat_mutablerss = (tmpvar_16 * mat2(0.7, -0.7, 0.7, 0.7));\\n  vec4 tmpvar_17;\\n  tmpvar_17 = vec4(greaterThanEqual ((texture (sampler_pw_noise_lq, \\n    (xlat_mutablerss / 32.0)\\n  ) - 0.7), vec4(0.0, 0.0, 0.0, 0.0)));\\n  vec2 tmpvar_18;\\n  tmpvar_18 = abs((fract(\\n    (xlat_mutablerss * 8.0)\\n  ) - 0.5));\\n  xlat_mutablerss = tmpvar_18;\\n  dots_5 = (vec3((clamp (\\n    (0.04 / sqrt(dot (tmpvar_15, tmpvar_15)))\\n  , 0.0, 1.0) * tmpvar_14.x)) + (clamp (\\n    (0.04 / sqrt(dot (tmpvar_18, tmpvar_18)))\\n  , 0.0, 1.0) * tmpvar_17.x));\\n  dots_5 = (dots_5 * clamp ((0.04 / \\n    abs((0.01 / xlat_mutablers0.y))\\n  ), 0.0, 1.0));\\n  dots_5 = (dots_5 * (dots_5 * 2.0));\\n  vec2 tmpvar_19;\\n  tmpvar_19.x = -((tmpvar_9.y * -1024.0));\\n  tmpvar_19.y = (tmpvar_9.x * -1024.0);\\n  vec2 tmpvar_20;\\n  tmpvar_20.x = tmpvar_19.x;\\n  tmpvar_20.y = -(tmpvar_19.y);\\n  uv_4 = (vec2(-100.0, 100.0) * (tmpvar_20 / (\\n    (tmpvar_19.x * tmpvar_19.x)\\n   + \\n    (tmpvar_19.y * tmpvar_19.y)\\n  )).yx);\\n  uv_4 = (0.5 + ((\\n    (1.0 - abs(((\\n      fract((mix ((0.5 + \\n        ((tmpvar_7 - 0.5) * 2.0)\\n      ), (uv_4 + 0.5), vec2(0.5, 0.5)) * 0.5))\\n     * 2.0) - 1.0)))\\n   - 0.5) * 0.98));\\n  uv_4 = (((uv_4 - 0.5) * 0.9) + 0.5);\\n  xlat_mutableuv1 = ((uv_4 - tmpvar_3) * aspect.xy);\\n  float tmpvar_21;\\n  tmpvar_21 = min ((1.0 - texture (sampler_main, uv_4).z), (1.0 - (\\n    (texture (sampler_blur2, uv_4).xyz * scale2)\\n   + bias2).z));\\n  vec3 tmpvar_22;\\n  tmpvar_22.xy = ((uv_4 - 0.5) * min ((1.0 - texture (sampler_main, uv_4).z), (1.0 - \\n    ((texture (sampler_blur2, uv_4).xyz * scale2) + bias2)\\n  .z)));\\n  tmpvar_22.z = min ((1.0 - texture (sampler_main, uv_4).z), (1.0 - (\\n    (texture (sampler_blur2, uv_4).xyz * scale2)\\n   + bias2).z));\\n  float tmpvar_23;\\n  tmpvar_23 = clamp ((abs(\\n    ((1.0 - ((texture (sampler_blur2, uv_4).xyz * scale2) + bias2).z) - clamp ((1.0 - (\\n      (texture (sampler_blur2, tmpvar_3).xyz * scale2)\\n     + bias2).z), 0.1, 0.4))\\n  ) + 0.2), 0.0, 1.0);\\n  vec3 tmpvar_24;\\n  tmpvar_24 = mix (texture (sampler_main, uv_4).xyz, ((texture (sampler_blur1, uv_4).xyz * scale1) + bias1), vec3(tmpvar_23));\\n  float tmpvar_25;\\n  tmpvar_25 = clamp (((1.0 - \\n    exp(-(((texture (sampler_blur1, uv_4).xyz * scale1) + bias1).x))\\n  ) - 0.2), 0.0, 1.0);\\n  ret_6 = ((tmpvar_24.x * (0.2 + \\n    ((1.0 - tmpvar_23) * (1.0 - tmpvar_21))\\n  )) * (1.0 + (0.5 * \\n    sin((((tmpvar_22 / q7) * tmpvar_2) + tmpvar_1))\\n  )));\\n  vec3 tmpvar_26;\\n  tmpvar_26.xy = vec2(0.0, 1.0);\\n  tmpvar_26.z = (tmpvar_25 * 3.0);\\n  vec3 tmpvar_27;\\n  tmpvar_27 = mix (ret_6, tmpvar_26, vec3(tmpvar_25));\\n  xlat_mutablelamp = (((\\n    clamp ((1.0 - (4.0 * sqrt(\\n      dot (xlat_mutableuv1, xlat_mutableuv1)\\n    ))), 0.0, 1.0)\\n   * tmpvar_24.x) * clamp (\\n    (1.0 - (2.0 * mix (tmpvar_21, (1.0 - \\n      ((texture (sampler_blur1, uv_4).xyz * scale1) + bias1)\\n    .z), 0.2)))\\n  , 0.0, 1.0)) * 1.8);\\n  ret_6 = (tmpvar_27 + ((1.0 - \\n    dot (tmpvar_27, vec3(0.32, 0.49, 0.29))\\n  ) * xlat_mutablelamp));\\n  ret_6 = (1.0 - exp((-2.0 * ret_6)));\\n  ret_6 = (ret_6 + (dots_5 * (1.0 + ret_6)));\\n  vec4 tmpvar_28;\\n  tmpvar_28.w = 1.0;\\n  tmpvar_28.xyz = ret_6;\\n  ret = tmpvar_28.xyz;\\n }"}')},1148:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1.399,"decay":1,"echo_zoom":1.488,"echo_alpha":0.3,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"darken_center":1,"darken":1,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"zoomexp":1.3106,"fshader":1,"zoom":0.9803,"cx":0.65,"cy":0.35,"warp":0.01,"sx":0.99999,"sy":0.99999,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0,"ob_a":1,"ib_size":0.075,"ib_r":0.2,"ib_g":0.2,"ib_b":0.2,"ib_a":0.05,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":14,"num_inst":366,"rad":0.0303,"tex_ang":0.62832,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));"},{"baseVals":{"enabled":1,"sides":14,"num_inst":408,"rad":0.03,"tex_ang":0.62832,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));"},{"baseVals":{"enabled":1,"sides":14,"num_inst":262,"rad":0.0297,"tex_ang":0.62832,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));"},{"baseVals":{"enabled":1,"sides":14,"num_inst":276,"rad":0.0303,"tex_ang":0.62832,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));"}],"waves":[{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));"}],"init_eqs_eel":"","frame_eqs_eel":"ib_r = 0.3 + 0.3*sin((time+treb)*1.133);\\nib_g = 0.3 + 0.3*sin((time+treb)*1.333);\\nib_b = 0.3 + 0.3*sin((time+treb)*1.533);","pixel_eqs_eel":"","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (texture (sampler_main, (uv + (\\n    (texture (sampler_main, (uv + texsize.zw)).xy - 0.37)\\n   * 0.03))).xyz - 0.004);\\n  ret = tmpvar_1.xyz;\\n }","comp":" shader_body { \\n  vec2 uv_1;\\n  vec3 ret_2;\\n  uv_1 = (0.05 + (0.9 * uv));\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (((uv_1 - 0.5) * vec2(-1.0, 1.0)) + 0.5);\\n  ret_2 = (abs((\\n    ((texture (sampler_blur1, uv_1).xyz * scale1) + bias1)\\n   - \\n    mix (texture (sampler_main, uv_1).xyz, texture (sampler_main, tmpvar_3).xyz, vec3(0.5, 0.5, 0.5))\\n  )) * 6.0);\\n  ret_2 = (ret_2 * (0.1 + abs(\\n    max (sin(bass_att), sin(treb_att))\\n  )));\\n  ret_2 = (ret_2 * max ((\\n    (texture (sampler_blur3, uv_1).xyz * scale3)\\n   + bias3), (\\n    (texture (sampler_blur3, tmpvar_3).xyz * scale3)\\n   + bias3)));\\n  ret_2 = (ret_2 * 1.5);\\n  ret_2 = (ret_2 - (roam_sin.xyz * roam_cos.zxy));\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = ret_2;\\n  ret = tmpvar_4.xyz;\\n }"}')},3656:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1,"decay":0.975,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":1,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"brighten":1,"solarize":1,"invert":1,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_r":0.4,"ob_a":0.2,"ib_size":0,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":3,"additive":1,"thickoutline":1,"textured":1,"num_inst":311,"rad":0.0334,"tex_ang":0.62832,"g":1,"b":1,"r2":1,"g2":0,"b2":1,"border_g":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*tan(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=1-mx;\\ny=1-my;\\n\\nang=(sin(time*.35)+1)*3;\\na=(above(bass+mid+treb,.8));\\npi23=4*asin(1)*.333333333;\\nt1=bass+mid+treb;\\nr=(sin(time*.3+t1-0*pi23)+1)*.5;\\ng=(sin(time*.3+t1-1*pi23)+1)*.5;\\nb=(sin(time*.3+t1-2*pi23)+1)*.5;\\nr2=(sin(time*.3+t1-0*pi23)+1)*.5;\\ng2=(sin(time*.3+t1-1*pi23)+1)*.5;\\nb2=(sin(time*.3+t1-2*pi23)+1)*.5;"},{"baseVals":{"enabled":1,"sides":3,"thickoutline":1,"num_inst":281,"rad":0.03347,"g":1,"b":1,"r2":1,"g2":0,"b2":1,"border_g":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*tan(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=1-mx;\\ny=1-my;\\n\\nang=(sin(time*.30)+1)*3.3;\\na=(above(bass+mid+treb,.8));\\npi23=4*asin(1)*.333333333;\\nt2=0;//bass+mid+treb;\\nr=(sin(time*.3+t2-0*pi23)+1)*.5;\\ng=(sin(time*.3+t2-1*pi23)+1)*.5;\\nb=(sin(time*.3+t2-2*pi23)+1)*.5;\\nr2=(sin(time*.3+t2-0*pi23)+1)*.5;\\ng2=(sin(time*.3+t2-1*pi23)+1)*.5;\\nb2=(sin(time*.3+t2-2*pi23)+1)*.5;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*tan(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=1-mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));\\npi23=4*asin(1)*.333333333;\\nt1=bass+mid+treb;\\nr=(sin(time*.3+t1-0*pi23)+1)*.5;\\ng=(sin(time*.3+t1-1*pi23)+1)*.5;\\nb=(sin(time*.3+t1-2*pi23)+1)*.5;"},{"baseVals":{"enabled":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*tan(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=1-mx;\\ny=1-my;\\n\\na=(above(bass+mid+treb,.1));\\npi23=4*asin(1)*.333333333;\\nt1=bass+mid+treb;\\nr=(sin(time*.3+t1-0*pi23)+1)*.5;\\ng=(sin(time*.3+t1-1*pi23)+1)*.5;\\nb=(sin(time*.3+t1-2*pi23)+1)*.5;"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));"}],"init_eqs_eel":"","frame_eqs_eel":"dec_med = pow (0.9, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .2+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %8;\\nindex2 = (index2 + is_beat*bnot(index))%2;\\nindex3 = (index3 + is_beat*bnot(index)*bnot(index2))%3;\\n\\nmonitor = index4;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass + mid + treb;\\nq11 = min(q22,3);\\n\\n//k1 =  is_beat*bnot(index)*bnot(index2);\\n\\nk1 =  is_beat*equal(index,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.14159265359/2;\\n\\nq27 = 8-index;\\nq28 = index2;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\nzoom = 1.0 + .02*q1;\\nrot = .01*q2;\\ndx = .0*index;\\n\\nwave_a = 0;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 1.5)) + rand_frame.xy);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ((texture (sampler_main, (\\n    mix (uv_orig, uv, vec2(((dot (texture (sampler_main, \\n      mix (uv_orig, uv, vec2(4.0, 4.0))\\n    ).xyz, vec3(0.32, 0.49, 0.29)) - dot (\\n      ((texture (sampler_blur2, mix (uv_orig, uv, vec2(-12.0, -12.0))).xyz * scale2) + bias2)\\n    , vec3(0.32, 0.49, 0.29))) * 12.0)))\\n   + \\n    (((texture (sampler_noise_lq, tmpvar_1) - 0.5).xy * texsize.zw) * 0.5)\\n  )).xyz + (\\n    (texture (sampler_noise_lq, tmpvar_1) - 0.5)\\n   * 0.006).xyz) + -0.0006);\\n  ret = tmpvar_2.xyz;\\n }","comp":" shader_body { \\n  vec2 uv_1;\\n  vec3 ret2_2;\\n  vec2 uv2_3;\\n  vec3 ret_4;\\n  uv2_3.y = uv.y;\\n  uv2_3.x = (1.0 - uv.x);\\n  uv2_3 = (0.5 + ((uv2_3 - 0.5) * 0.98));\\n  uv_1 = (0.5 + ((uv - 0.5) * 0.98));\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (texsize.zw * 4.0);\\n  vec3 tmpvar_6;\\n  tmpvar_6 = (((texture (sampler_blur1, \\n    (uv_1 + (vec2(1.0, 0.0) * tmpvar_5))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv_1 - (vec2(1.0, 0.0) * tmpvar_5))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_7;\\n  tmpvar_7 = (((texture (sampler_blur1, \\n    (uv_1 + (vec2(0.0, 1.0) * tmpvar_5))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv_1 - (vec2(0.0, 1.0) * tmpvar_5))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_8;\\n  tmpvar_8.z = 0.0;\\n  tmpvar_8.x = dot (tmpvar_6, vec3(0.32, 0.49, 0.29));\\n  tmpvar_8.y = dot (tmpvar_7, vec3(0.32, 0.49, 0.29));\\n  vec4 tmpvar_9;\\n  tmpvar_9 = texture (sampler_noisevol_hq, ((vec3(0.05, 0.05, 0.0) * (\\n    ((uv_1.xyy + (tmpvar_8 * 0.5)) * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + (vec3(0.0, 0.0, 0.2) * time)));\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = dot (tmpvar_6, vec3(0.32, 0.49, 0.29));\\n  tmpvar_10.y = dot (tmpvar_7, vec3(0.32, 0.49, 0.29));\\n  uv_1 = (uv_1 - (tmpvar_10 * 0.04));\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = dot (((\\n    (texture (sampler_blur1, (uv2_3 + (vec2(1.0, 0.0) * tmpvar_5))).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (uv2_3 - (vec2(1.0, 0.0) * tmpvar_5))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  tmpvar_11.y = dot (((\\n    (texture (sampler_blur1, (uv2_3 + (vec2(0.0, 1.0) * tmpvar_5))).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (uv2_3 - (vec2(0.0, 1.0) * tmpvar_5))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  uv2_3 = (uv2_3 - (tmpvar_11 * 0.04));\\n  ret_4 = (abs((\\n    ((texture (sampler_main, uv_1).xyz + ((texture (sampler_blur1, uv_1).xyz * scale1) + bias1)) - ((texture (sampler_blur2, uv_1).xyz * scale2) + bias2))\\n   - \\n    ((texture (sampler_blur3, uv_1).xyz * scale3) + bias3)\\n  )) * (dot (tmpvar_9, vec4(0.32, 0.49, 0.29, 0.0)) * 3.0));\\n  ret2_2 = (abs((\\n    ((texture (sampler_main, uv2_3).xyz + ((texture (sampler_blur1, uv2_3).xyz * scale1) + bias1)) - ((texture (sampler_blur2, uv2_3).xyz * scale2) + bias2))\\n   - \\n    ((texture (sampler_blur3, uv2_3).xyz * scale3) + bias3)\\n  )) * (dot (tmpvar_9, vec4(0.32, 0.49, 0.29, 0.0)) * 3.0));\\n  ret2_2 = (0.5 - pow (ret2_2, vec3(0.5, 0.5, 0.5)));\\n  ret_4 = (pow (ret_4, vec3(0.5, 0.5, 0.5)) - (0.3 - ret2_2));\\n  vec4 tmpvar_12;\\n  tmpvar_12.w = 1.0;\\n  tmpvar_12.xyz = ret_4;\\n  ret = tmpvar_12.xyz;\\n }"}')},1128:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"invert":1,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":0.267,"zoom":1.16,"rot":-0.04,"warp":0.00052,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_r":1,"ob_g":1,"ob_b":1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":25,"additive":1,"num_inst":4,"rad":0.02339,"tex_ang":0.62832,"g":1,"b":1,"a":0.5,"g2":0,"a2":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.002*cos(ma));\\nmy=my+(.002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx+instance*.005;\\ny=my+instance*.005;\\n\\na=(above(bass+mid+treb,.2));\\npi23=4*asin(1)*.333333333;\\nvol=bass+mid+treb;\\nr=(sin(1/instance*time*.2+vol-0*pi23)+1)*.5;\\ng=(sin(1/instance*time*.2+vol-1*pi23)+1)*.5;\\nb=(sin(1/instance*time*.2+vol-2*pi23)+1)*.5;"},{"baseVals":{"enabled":1,"sides":25,"additive":1,"num_inst":6,"rad":0.02248,"a":0.7,"g2":0,"a2":0.1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,.7)*3.1415*.03*bass);\\nma=ma-(above(treb,.7)*3.1415*.03*treb);\\n\\nmx=mx+(.0015*cos(ma));\\nmy=my+(.0015*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx+instance*.003;\\ny=my+instance*.003;\\n\\na=(above(bass+mid+treb,.2));\\npi23=4*asin(1)*.333333333;\\nvol=bass+mid+treb;\\nr=(sin(1/instance*time*.3+vol-0*pi23)+1)*.5;\\ng=(sin(1/instance*time*.4+vol-1*pi23)+1)*.5;\\nb=(sin(1/instance*time*.35+vol-2*pi23)+1)*.5;"},{"baseVals":{"enabled":1,"sides":25,"additive":1,"num_inst":4,"rad":0.0303,"a":0.7,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,.3)*3.1415*.05*bass);\\nma=ma-(above(treb,.3)*3.1415*.05*treb);\\n\\nmx=mx+(.0055*cos(ma));\\nmy=my+(.0055*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx+instance*.003;\\ny=my+instance*.003;\\n\\na=(above(bass+mid+treb,.2));\\npi23=4*asin(1)*.333333333;\\nvol=bass+mid+treb;\\nr=(sin(1/instance*time*.5+vol-0*pi23)+1)*.5;\\ng=(sin(1/instance*time*.8+vol-1*pi23)+1)*.5;\\nb=(sin(1/instance*time*.25+vol-2*pi23)+1)*.5;"},{"baseVals":{"enabled":1,"sides":25,"additive":1,"num_inst":4,"rad":0.02248,"r":0,"a":0.7,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,.11)*3.1415*.07*bass);\\nma=ma-(above(treb,.11)*3.1415*.07*treb);\\n\\nmx=mx+(.0085*cos(ma));\\nmy=my+(.0085*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx+instance*.003;\\ny=my+instance*.003;\\n\\na=(above(bass+mid+treb,.2));\\npi23=4*asin(1)*.333333333;\\nvol=bass+mid+treb;\\nr=(sin(1/instance*time*.3+vol-0*pi23)+1)*.5;\\ng=(sin(1/instance*time*.4+vol-1*pi23)+1)*.5;\\nb=(sin(1/instance*time*.35+vol-2*pi23)+1)*.5;"}],"waves":[{"baseVals":{"enabled":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));\\npi23=4*asin(1)*.333333333;\\nvol=bass+mid+treb;\\nr=(sin(time*.3+vol-0*pi23)+1)*.5;\\ng=(sin(time*.3+vol-1*pi23)+1)*.5;\\nb=(sin(time*.3+vol-2*pi23)+1)*.5;"},{"baseVals":{"enabled":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));\\npi23=4*asin(1)*.333333333;\\nvol=bass+mid+treb;\\nr=(sin(time*.3+vol-0*pi23)+1)*.5;\\ng=(sin(time*.3+vol-1*pi23)+1)*.5;\\nb=(sin(time*.3+vol-2*pi23)+1)*.5;"},{"baseVals":{"enabled":1,"usedots":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));\\npi23=4*asin(1)*.333333333;\\nvol=bass+mid+treb;\\nr=(sin(time*.3+vol-0*pi23)+1)*.5;\\ng=(sin(time*.3+vol-1*pi23)+1)*.5;\\nb=(sin(time*.3+vol-2*pi23)+1)*.5;"},{"baseVals":{"enabled":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));\\npi23=4*asin(1)*.333333333;\\nvol=bass+mid+treb;\\nr=(sin(time*.3+vol-0*pi23)+1)*.5;\\ng=(sin(time*.3+vol-1*pi23)+1)*.5;\\nb=(sin(time*.3+vol-2*pi23)+1)*.5;"}],"init_eqs_eel":"spintime = 0;","frame_eqs_eel":"basstime = basstime + bass_att*0.03;\\nq1 = basstime;\\nvol = pow(bass+mid+treb,2);\\nbasssum = vol;\\n\\nbasstime = if(below(basstime,465),465,basstime);\\n\\nstickybit = time%2;\\n\\n//avg vol\\n//buffer 1\\nvolAvg = volAvg + vol*equal(stickybit,1);\\n//number of samples 1 or framerate\\nsample1 = sample1 + equal(stickybit,1);\\n//buffer 2\\nvolAvg2 = volAvg2 + vol*equal(stickybit,0);\\n//number of samples 2\\nsample2 = sample2 + equal(stickybit,0);\\n\\n//transision\\nedge = bnot(equal(bit2,stickybit));\\n\\nvolAvg = volAvg - volAvg*edge*stickybit;\\nvolAvg2 = volAvg2 - volAvg2*edge*equal(stickybit,0);\\n\\nsample1 = sample1  - sample1*edge*stickybit;\\nsample2 = sample2  - sample2*edge*equal(stickybit,0);\\n\\n//test vol against avg buffer lvl\\ndiff = if(equal(stickybit,1), (basssum/(volAvg2/sample2)) , 0);\\ndiff = if(equal(stickybit,0), (basssum/(volAvg/sample1)), diff);\\n\\nq3 = diff;\\n\\nbit2 = time%2;\\n\\ndifftime = difftime + diff*0.03;\\nq2 = difftime;\\n\\n//fix a strange error\\ndifftime = if(above(difftime,2000),0, difftime);\\n\\nspintime = spintime + bass*0.03*if(equal(state%2,1),1,-1); \\nq8 = spintime;\\n\\nstate = state + above(diff,10);\\n\\nmonitor = spintime;","pixel_eqs_eel":"zoom = 1.05 - sin(q3)*0.04;\\nrot =0;// 4.72;","warp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 8.0);\\n  ret_1.xz = vec2(0.0, 0.0);\\n  vec2 tmpvar_3;\\n  tmpvar_3 = fract(uv);\\n  ret_1.y = texture (sampler_fc_main, tmpvar_3).y;\\n  ret_1.y = (ret_1.y + ((\\n    ((ret_1.y - ((texture (sampler_blur3, tmpvar_3).xyz * scale3) + bias3).y) - 0.03)\\n   * 0.6) - 0.06));\\n  ret_1.y = (ret_1.y + ((\\n    (texture (sampler_blur3, uv_orig).xyz * scale3)\\n   + bias3).x * 0.3));\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = (((texture (sampler_blur1, \\n    (uv_orig + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv_orig - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1)).z;\\n  tmpvar_4.y = (((texture (sampler_blur1, \\n    (uv_orig + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv_orig - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1)).z;\\n  ret_1.z = (texture (sampler_fc_main, (mix (uv_orig, uv, vec2(0.3, 0.3)) + (\\n    (tmpvar_4 * texsize.zw)\\n   * 8.0))).z - 0.03);\\n  ret_1.z = (ret_1.z + ((\\n    clamp ((0.2 - ((texture (sampler_blur2, uv).xyz * scale2) + bias2).y), 0.0, 1.0)\\n   * 0.1) + (\\n    ((texture (sampler_blur2, uv_orig).xyz * scale2) + bias2)\\n  .x * 0.2)));\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = ret_1;\\n  ret = tmpvar_5.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 2.0);\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = tmpvar_3.y;\\n  tmpvar_5.y = tmpvar_4.y;\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = tmpvar_3.x;\\n  tmpvar_6.y = tmpvar_4.x;\\n  vec2 tmpvar_7;\\n  tmpvar_7 = ((uv - (\\n    (tmpvar_5 * texsize.zw)\\n   * 16.0)) + (tmpvar_6 * 0.2));\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = tmpvar_3.x;\\n  tmpvar_8.y = tmpvar_4.x;\\n  vec2 tmpvar_9;\\n  tmpvar_9 = (uv - ((tmpvar_8 * texsize.zw) * 8.0));\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = tmpvar_3.y;\\n  tmpvar_10.y = tmpvar_4.y;\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = tmpvar_3.y;\\n  tmpvar_11.y = tmpvar_4.y;\\n  vec2 tmpvar_12;\\n  tmpvar_12.x = tmpvar_3.y;\\n  tmpvar_12.y = tmpvar_4.y;\\n  vec3 tmpvar_13;\\n  tmpvar_13 = mix (clamp ((\\n    clamp (mix (mix (mix (\\n      mix (mix (ret_1, vec3(0.4, 0.8, 0.9), ((texture (sampler_blur1, uv).xyz * scale1) + bias1).zzz), vec3(1.0, 1.0, 1.0), (vec3(1.04, 0.832, 0.32) * ((\\n        (((texture (sampler_blur2, tmpvar_7).xyz * scale2) + bias2) - ((texture (sampler_blur1, tmpvar_7).xyz * scale1) + bias1))\\n       + \\n        (texture (sampler_main, tmpvar_7).xyz * 0.9)\\n      ) + (\\n        (-(tmpvar_3.y) + tmpvar_4.y)\\n       * 0.4)).y))\\n    , vec3(0.0, 1.0, 2.0), vec3(\\n      (((texture (sampler_blur3, (tmpvar_9 - \\n        (tmpvar_10 * 0.4)\\n      )).xyz * scale3) + bias3).x * 0.4)\\n    )), vec3(1.0, 2.0, 2.0), vec3((\\n      ((texture (sampler_blur2, (tmpvar_9 - (tmpvar_11 * 0.2))).xyz * scale2) + bias2)\\n    .x * 0.4))), vec3(2.0, 2.0, 1.6), vec3(((\\n      (texture (sampler_blur1, (tmpvar_9 - (tmpvar_12 * 0.1))).xyz * scale1)\\n     + bias1).x * 0.2))), 0.0, 1.0)\\n   * \\n    (vec3(1.0, 1.0, 1.0) - vec3((((texture (sampler_blur1, \\n      (tmpvar_9 + vec2(0.02, -0.02))\\n    ).xyz * scale1) + bias1).x * 0.4)))\\n  ), 0.0, 1.0), vec3(1.0, -0.2, -0.2), vec3((texture (sampler_main, uv).x * 0.6)));\\n  ret_1 = tmpvar_13;\\n  vec4 tmpvar_14;\\n  tmpvar_14.w = 1.0;\\n  tmpvar_14.xyz = tmpvar_13;\\n  ret = tmpvar_14.xyz;\\n }"}')},2756:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"decay":0.9,"echo_zoom":1.007,"echo_alpha":0.5,"echo_orient":1,"wave_mode":1,"wrap":0,"brighten":1,"wave_a":0.001,"zoom":0.96,"rot":-18.84024,"warp":0.01,"wave_r":0,"wave_g":0,"wave_b":0,"ob_r":1,"ob_g":1,"ob_b":1,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":0.3,"mv_x":64,"mv_y":48,"mv_l":4.95,"mv_r":0.5,"mv_g":0.4,"mv_b":0.3,"mv_a":0},"shapes":[{"baseVals":{"textured":1,"rad":2.66718,"tex_zoom":0.45112,"g":1,"a":0.15,"g2":0,"a2":0.05,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"r = 0.1 + 0.5*sin(q1);\\ng = 0.1 + 0.5*sin(q1*0.9878);\\nb = 0.1 + 0.5*sin(q1*0.897);"},{"baseVals":{"sides":100,"x":0.35,"y":0,"rad":0.09959,"tex_zoom":0.42497,"r":0,"b":1,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"r = 0.1 + 0.5*sin(q1*0.01);\\ng = 0.1 + 0.5*sin(q1*0.09878);\\nb = 0.1 + 0.5*sin(q1*0.0897);\\n\\nr2 = 0.1 + 0.5*sin(q1*0.035);\\ng2 = 0.1 + 0.5*sin(q1*0.09878);\\nb2 = 0.1 + 0.5*sin(q1*0.0897);"},{"baseVals":{"sides":100,"y":0,"rad":0.10201,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"r = 0.1 + 0.5*sin(q1*0.01);\\ng = 0.1 + 0.5*sin(q1*0.03878);\\nb = 0.1 + 0.5*sin(q1*0.0497);\\n\\nr2 = 0.1 + 0.5*sin(q1*0.065);\\ng2 = 0.1 + 0.5*sin(q1*0.07878);\\nb2 = 0.1 + 0.5*sin(q1*0.0597);"},{"baseVals":{"sides":100,"x":0.65,"y":0,"g":1,"b":1,"r2":1,"g2":0,"b2":1,"a2":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"//x = 0.5 + 0.02*sin(time*0.5 + 1.68);\\n//y = 0.5 + 0.02*cos(time*0.5 + 1.68);\\n\\n\\nr = 0.1 + 0.5*sin(q1*0.0144);\\ng = 0.1 + 0.5*sin(q1*0.05878);\\nb = 0.1 + 0.5*sin(q1*0.0797);\\n\\nr2 = 0.1 + 0.5*sin(q1*0.065);\\ng2 = 0.1 + 0.5*sin(q1*0.07878);\\nb2 = 0.1 + 0.5*sin(q1*0.0897);"}],"waves":[{"baseVals":{"spectrum":1,"usedots":1,"thick":1,"additive":1,"r":0,"g":0,"b":0,"a":0.03,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//q1 = state;\\n//q2 = basstime;\\n\\nq1 = 0;\\nspeed = bass_att*0.03;\\nv = sample*10000 + value2*bass*0.1;\\n\\n//state 0 elipse\\nxs = xs + sin(v*0.1 + sin(v)*0.1)*speed*atan(v*1.51);\\nys = ys + sin(v*0.1 + cos(v)*0.1)*speed*atan(v);\\n\\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*1 + ys);\\ny = 0.5 + 0.5*sin(ys*0.1)*cos(time*1.1 + xs);\\n\\n\\nr = 1 + 0.5*sin(time*0.22) + 0.1;\\ng = 1 + 0.4*sin(time*0.307) + x;\\nb = 1 + 0.4*sin(time*0.959);\\n\\n\\nxs = if(above(xs,1000),0 ,xs);\\nys = if(above(ys,1000),0 ,ys);"},{"baseVals":{"spectrum":1,"usedots":1,"thick":1,"additive":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"thick":1,"additive":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"thick":1,"additive":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//apply zoom burst on beat\\nflag = above(q3,2);\\n//state zero is ready state\\nstate = state + flag*equal(state,0);\\n\\n//upwards flight\\nyval = if(equal(state,0),0, yval);\\nyval = yval + 0.00004*equal(state,1);\\nymax = if(equal(state,0),rand(100)*0.004,ymax);\\n\\n//hit apogee\\nstate = if(above(yval,0.5+ymax),2,state);\\n\\n//reset variable\\nyval = if(equal(state,0),0, yval);\\nburst = if(equal(state,0),0.001,burst);\\nalphax = if(equal(state,0),1,alphax);\\nxdriftinc = if(equal(state,0),0,xdriftinc);\\n\\nburstspeed = if(equal(state,0),rand(10),burstspeed);\\nxdrift = if(equal(state,0),rand(20),xdrift);\\n//to get the numbers small enough have to use constants\\nxdriftinc = xdriftinc\\n+ equal(xdrift,0)*equal(state,1)*0.00002\\n+ equal(xdrift,1)*equal(state,1)*0.000018\\n+ equal(xdrift,2)*equal(state,1)*0.000016\\n+ equal(xdrift,3)*equal(state,1)*0.000014\\n+ equal(xdrift,4)*equal(state,1)*0.000012\\n+ equal(xdrift,5)*equal(state,1)*0.00001\\n+ equal(xdrift,6)*equal(state,1)*0.000008\\n+ equal(xdrift,7)*equal(state,1)*0.000006\\n+ equal(xdrift,8)*equal(state,1)*0.000004\\n+ equal(xdrift,9)*equal(state,1)*0.000002\\n+ equal(xdrift,11)*equal(state,1)*-0.000002\\n+ equal(xdrift,12)*equal(state,1)*-0.000004\\n+ equal(xdrift,13)*equal(state,1)*-0.000006\\n+ equal(xdrift,14)*equal(state,1)*-0.000008\\n+ equal(xdrift,15)*equal(state,1)*-0.00001\\n+ equal(xdrift,16)*equal(state,1)*-0.000012\\n+ equal(xdrift,17)*equal(state,1)*-0.000014\\n+ equal(xdrift,18)*equal(state,1)*-0.000016\\n+ equal(xdrift,19)*equal(state,1)*-0.000018;\\n\\nburst = burst\\n+ equal(burstspeed,0)*equal(state,2)*0.000024\\n+ equal(burstspeed,1)*equal(state,2)*0.000022\\n+ equal(burstspeed,2)*equal(state,2)*0.00002\\n+ equal(burstspeed,3)*equal(state,2)*0.000018\\n+ equal(burstspeed,4)*equal(state,2)*0.000016\\n+ equal(burstspeed,5)*equal(state,2)*0.000014\\n+ equal(burstspeed,6)*equal(state,2)*0.000012\\n+ equal(burstspeed,7)*equal(state,2)*0.00001\\n+ equal(burstspeed,8)*equal(state,2)*0.000008\\n+ equal(burstspeed,9)*equal(state,2)*0.000008;\\n\\nalphax = alphax - 0.00004*equal(state,2);\\nstate = if(below(alphax,0),0,state);\\n\\n\\ns = sample*3.14*100;\\nss = sample*6.28*1000;\\n\\n//draw torus\\nxs = (burst + 0.0001*cos(s))*cos(ss);\\nys = (burst + 0.0001*cos(s))*sin(ss);\\nzs = 0.1*burst*sin(s);\\n\\n\\n//rotate x axis\\nangle = sin(-q1*0.035)*6.28;\\nyx = ys*cos(angle) - zs*sin(angle);\\nzx = ys*sin(angle) + zs*cos(angle);\\nxx = xs;\\n\\n//rotate y axis\\nangle2 = sin(-q1*0.03)*6.28;\\nxd = xx*cos(angle2) - zx*sin(angle2);\\nzd = xx*sin(angle2) + zx*cos(angle2);\\nyd = yx;\\n\\n//rotaye z axis\\nangle3 = sin(-q1*0.022)*6.28;\\nxn = xd*cos(angle3) - yd*sin(angle3);\\nyn = xd*sin(angle3) + yd*cos(angle3);\\n\\nzd = zd + 2;\\n\\nx = xn*zd*0.3 + 0.5;\\ny = yn*zd*0.3*1.2;\\n\\n\\nx = x + xdriftinc;\\ny = y + sin(yval*1.5) - 0.18;\\n\\n\\nr = 0.5 + 0.5*sin(q1*1.3 + x + x);\\ng = 0.5 + 0.5*sin(q1*1.1 + x + y);\\nb = 0.5 + 0.5*sin(q1*1.66 + y + y);"}],"init_eqs_eel":"state = 0;","frame_eqs_eel":"basstime = basstime + bass*0.06;\\nq1 = basstime;\\n\\nq9 = basstime * 0.000005;\\n\\nbasstime = if(below(basstime,1000),1000,basstime);\\n\\nvol = pow(bass+mid+treb,2);\\nbasssum = vol;\\n\\nstickybit = time%2;\\n\\n//avg vol\\n//buffer 1\\nvolAvg = volAvg + vol*equal(stickybit,1);\\n//number of samples 1 or framerate\\nsample1 = sample1 + equal(stickybit,1);\\n//buffer 2\\nvolAvg2 = volAvg2 + vol*equal(stickybit,0);\\n//number of samples 2\\nsample2 = sample2 + equal(stickybit,0);\\n\\n//transision\\nedge = bnot(equal(bit2,stickybit));\\n\\nvolAvg = volAvg - volAvg*edge*stickybit;\\nvolAvg2 = volAvg2 - volAvg2*edge*equal(stickybit,0);\\n\\nsample1 = sample1  - sample1*edge*stickybit;\\nsample2 = sample2  - sample2*edge*equal(stickybit,0);\\n\\n//test vol against avg buffer lvl\\ndiff = if(equal(stickybit,1), (basssum/(volAvg2/sample2)) , 0);\\ndiff = if(equal(stickybit,0), (basssum/(volAvg/sample1)), diff);\\n\\nq3 = diff;\\n\\nbit2 = time%2;\\n\\ndifftime = difftime + diff*0.03;\\nq2 = difftime;\\n\\n//fix a strange error\\ndifftime = if(above(difftime,2000),0, difftime);\\n\\n\\n\\nmonitor = q1;\\n\\nmv_a = diff - 2;\\n\\nmv_r = 0.5 + 0.5*sin(basstime*0.389);\\nmv_g = 0.5 + 0.5*sin(basstime*0.478);\\nmv_b = 0.5 + 0.5*sin(basstime*0.535);","pixel_eqs_eel":"zoom = 0.99;\\nrot = 0;","warp":" shader_body { \\n  vec3 color_1;\\n  vec2 uv2_2;\\n  uv2_2 = (uv + (q3 * (bass * 100.0)));\\n  vec4 tmpvar_3;\\n  tmpvar_3 = texture (sampler_noise_mq, uv2_2);\\n  vec4 tmpvar_4;\\n  tmpvar_4 = (min (abs(tmpvar_3), 1.0) / max (abs(tmpvar_3), 1.0));\\n  vec4 tmpvar_5;\\n  tmpvar_5 = (tmpvar_4 * tmpvar_4);\\n  tmpvar_5 = (((\\n    ((((\\n      ((((-0.01213232 * tmpvar_5) + 0.05368138) * tmpvar_5) - 0.1173503)\\n     * tmpvar_5) + 0.1938925) * tmpvar_5) - 0.3326756)\\n   * tmpvar_5) + 0.9999793) * tmpvar_4);\\n  tmpvar_5 = (tmpvar_5 + (vec4(\\n    greaterThan (abs(tmpvar_3), vec4(1.0, 1.0, 1.0, 1.0))\\n  ) * (\\n    (tmpvar_5 * -2.0)\\n   + 1.570796)));\\n  color_1 = ((texture (sampler_noise_lq, uv2_2) - 0.5).xyz + ((tmpvar_5 * \\n    sign(tmpvar_3)\\n  ) - 0.5).xyz);\\n  color_1 = (color_1 + (texture (sampler_noise_hq, uv2_2) - 0.5).xyz);\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv - 0.5);\\n  vec4 tmpvar_7;\\n  tmpvar_7.w = 1.0;\\n  tmpvar_7.xyz = (texture (sampler_main, ((\\n    ((tmpvar_6 * (0.98 + (rad * 0.02))) + 0.5)\\n   + \\n    (((texture (sampler_blur3, (\\n      (tmpvar_6 * 0.9)\\n     + 0.5)).xyz * scale3) + bias3) * 0.1)\\n  .xy) - 0.01)).xyz + (color_1 * 0.01));\\n  ret = tmpvar_7.xyz;\\n }","comp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1.y = 0.0;\\n  tmpvar_1.x = q10;\\n  vec2 tmpvar_2;\\n  tmpvar_2.y = 0.0;\\n  float tmpvar_3;\\n  tmpvar_3 = -(q10);\\n  tmpvar_2.x = tmpvar_3;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = 0.0;\\n  tmpvar_4.y = q10;\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = 0.0;\\n  tmpvar_5.y = tmpvar_3;\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = (((texture (sampler_main, uv) * 4.0).xyz * (\\n    (texture (sampler_blur1, mix (((texture (sampler_main, \\n      (uv + (tmpvar_1 * texsize.z))\\n    ).xyz + texture (sampler_main, \\n      (uv + (tmpvar_2 * texsize.z))\\n    ).xyz) * 0.5), ((texture (sampler_main, \\n      (uv + (tmpvar_4 * texsize.z))\\n    ).xyz + texture (sampler_main, \\n      (uv + (tmpvar_5 * texsize.z))\\n    ).xyz) * 0.5), vec3(0.5, 0.5, 0.5)).xy).xyz * scale1)\\n   + bias1)) * 5.0);\\n  ret = tmpvar_6.xyz;\\n }"}')},863:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":0,"gammaadj":1.7,"decay":1,"echo_zoom":2.220753,"wave_mode":3,"additivewave":1,"wave_thick":1,"wrap":0,"darken":1,"wave_a":0.001,"wave_scale":0.625316,"wave_smoothing":0.9,"modwavealphastart":0.88,"modwavealphaend":1.98,"warpanimspeed":0.010284,"warpscale":0.01,"fshader":1,"dx":0.005,"warp":0.01,"sx":0.9999,"sy":1.0018,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0,"ob_g":0.8,"ob_b":0.7,"ib_size":0.005,"ib_r":0,"ib_g":0,"ib_b":0.3,"mv_x":64,"mv_y":48,"mv_l":1,"mv_b":0.9,"mv_a":0},"shapes":[{"baseVals":{"sides":16,"thickoutline":1,"textured":1,"rad":0.972354,"ang":0.1884,"tex_ang":0.628319,"tex_zoom":0.778288,"g":1,"b":1,"a":0.9,"r2":1,"b2":1,"a2":0.5,"border_r":0.59,"border_g":0.81,"border_b":0.69,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"//DMT=1-below((bass_att+mid_att+treb_att)/3,0.7);\\n//a=DMT;\\n//a2=.5*DMT;\\n//border_a=0.4*DMT;\\n//atime=atime+(above( sin(time),0 )*0.02 );\\n//ang=0.188+((sin(atime/5)*0.5+0.5)*2.39);\\n//x=(sin(atime*0.3)*0.07)+0.5;\\n//y=(cos(atime*0.1)*0.07)+0.5;\\n//rad=((bass+mid+treb)/6)*1.4+0.2;\\n//sides=bass*16"},{"baseVals":{"enabled":1,"sides":5,"thickoutline":1,"rad":0.414899,"tex_ang":0.251327,"tex_zoom":1.136001,"r":0.36,"g2":0,"b2":0.2,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"\\nadv=adv+(bass*bass)/15;\\n\\nr=rand(10)*0.1*0.5+0.5;\\ng=r;\\nb=r;\\n\\nx=rand(100)*0.01*0.5 + 0.25;\\ny=rand(100)*0.01*0.5 + 0.25;\\nrad=rand(100)*0.01*0.4+0.1;\\nang=rad"},{"baseVals":{"sides":24,"textured":1,"x":0.2,"y":0.8,"rad":0.599577,"tex_ang":1.256637,"tex_zoom":0.498314,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"textured":1,"x":0.86,"y":0.2,"rad":0.80814,"tex_zoom":0.451118,"g":1,"b":1,"r2":1,"b2":0.9,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"sep":256,"usedots":1,"additive":1,"scaling":100,"smoothing":0.9,"r":0,"g":0.7},"init_eqs_eel":"","frame_eqs_eel":"advance=advance+ 0.012;\\nadvance=if( above(advance,2) , 0, advance);\\n\\nt1=advance\\n","point_eqs_eel":"\\ns=sample*6.28;\\n\\n//plot random x position via function of sample pos;\\nxp=sin(s)+sin(s*0.34)+sin(s*24.3)+sin(s*13.8);\\nxp=xp*0.20;\\n\\n//plot random y position via function of sample pos;\\nyp=cos(s)+sin(s*0.24)+cos(s*17.4)+sin(s*37.7);\\nyp=yp*0.20;\\n\\n//plot random z position via function of sample pos;\\nzp=cos(s)+cos(s*5.24)+cos(s*47.4)+cos(s*27.7);\\nzp=zp*0.25;\\n\\n//pull stars toward screen\\nzp=zp + 1 - t1;\\n\\n//correct when below 0\\nzp=if( below(zp,0) , zp+2 , zp );\\n\\n//darken far stars\\na=(1 - zp*0.5);\\n\\nzp=zp*0.7;\\n\\nx_screen=xp/zp + 0.5;\\ny_screen=yp/zp + 0.5;\\n\\nx=x_screen;\\ny=y_screen;\\n\\nr=1;g=0.9;b=1.0"},{"baseVals":{"enabled":1,"samples":42,"usedots":1,"additive":1,"scaling":81.954445,"smoothing":1},"init_eqs_eel":"","frame_eqs_eel":"advance=advance+ 0.012;\\nadvance=if( above(advance,2) , 0, advance);\\n\\nt1=advance","point_eqs_eel":"\\ns=sample*6.28;\\n\\n//plot random x position via function of sample pos;\\nxp=sin(s)+sin(s*0.34)+cos(s*24.3)+sin(s*13.8);\\nxp=xp*0.20;\\n\\n//plot random y position via function of sample pos;\\nyp=cos(s)+sin(s*1.24)+cos(s*17.4)+sin(s*37.7);\\nyp=yp*0.20;\\n\\n//plot random z position via function of sample pos;\\nzp=cos(s)+cos(s*3.24)+cos(s*47.4)+cos(s*27.7);\\nzp=zp*0.25;\\n\\n//pull stars toward screen\\nzp=zp + 1 - t1;\\n\\n//correct when below 0\\nzp=if( below(zp,0) , zp+2 , zp );\\n\\n//darken far stars\\na=(1 - zp*0.5);\\n\\nzp=zp*0.7;\\n\\nx_screen=xp/zp + 0.5;\\ny_screen=yp/zp + 0.5;\\n\\nx=x_screen;\\ny=y_screen;\\n\\nr=1;g=0.9;b=1.0"},{"baseVals":{"enabled":1,"samples":42,"usedots":1,"thick":1,"additive":1,"a":0.360001},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x=rand(1000)*0.001;\\ny=rand(1000)*0.001;\\nr=0.9;g=1;b=1"},{"baseVals":{"enabled":1,"samples":192,"usedots":1,"additive":1,"a":0.320001},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x=rand(1000)*0.001;\\ny=rand(1000)*0.001;\\nr=1.0;g=1;b=0.9"}],"init_eqs_eel":"mv_x=64;mv_y=48;\\nnut=0;\\nstp=0;stq=0;\\nrtp=0;rtq=0;\\nwvr=0;\\ndecay=0;\\ndcsp=0","frame_eqs_eel":"decay=1.0;\\nzoom=1.009;\\ndx=0;dy=0;sx=1.000001;sy=0.999999;\\n\\nmv_r=.360+(((cos(time/5)*0.3)+0.5*0.5)*0.1);\\nmv_g=.390+(((sin(time/7)*0.3)+0.5*0.5)*0.1);\\nmv_b=.500+((sin((time/7)+0.9)+0.5*0.5)*0.1);\\n\\n\\ncx=-1;cy=2;rot=-treb*0.002;\\n\\ncx=sin(time*0.1)*1.5 + 0.5;\\ncy=cos(time*0.2)*1.5 + 0.5","pixel_eqs_eel":"//adv=min( (bass*bass*bass), 1);\\n//warp=1*((( atan(time/3) *0.5+0.5)*3)* (x*rad)*2 )+( (y*ang)*2 )*rad;\\n//warp=warp*adv;\\n\\n//dx=cos(y)*0.005*(rad+2)*treb ;\\n//dy=sin(x)*0.005*(rad+2)*treb\\n\\n//Do people that don\'t do drugs make shit like this??","warp":"","comp":""}')},5771:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"echo_zoom":1.007,"echo_orient":3,"wave_dots":1,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.99951,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_a":0},"shapes":[{"baseVals":{"textured":1,"x":0.18,"rad":0.63016,"tex_zoom":2.00676,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0.8,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"spectrum":1,"usedots":1,"thick":1,"scaling":0.3442},"init_eqs_eel":"","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;","point_eqs_eel":"width = 32;height = 16;\\n\\ngruff = sample * 512;\\nxp = gruff%width;\\nyp = int(gruff/width);\\nyp = if(equal(sample,1),yp-1,yp);\\n\\n\\ndist1 = 0.3 * sqrt(sqr(xp-t3)+sqr(yp-t4));\\ndist2 = 0.3 * sqrt(sqr(xp-t5)+sqr(yp-t6));\\nval1 = 0.5 + bass * sin(dist1-time - bass);\\nval2 = 0.5 + bass * sin(dist2-time - bass);\\nval = (val1 + val2) * 0.5;\\n\\n\\nr = val1;\\ng = val;\\nb = val2;\\n\\n\\n\\n\\nx = t1 + xp / 256;\\ny = t2 + yp / 256;"},{"baseVals":{"enabled":1,"spectrum":1,"usedots":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"t1 = q1;\\nt2 = q2 + 1 / 16;\\nt3 = q3;\\nt4 = q4 - 16;\\nt5 = q5;\\nt6 = q6 - 16;","point_eqs_eel":"width = 32;height = 16;\\n\\ngruff = sample * 512;\\nxp = gruff%width;\\nyp = int(gruff/width);\\nyp = if(equal(sample,1),yp-1,yp);\\n\\n\\ndist1 = 0.3 * sqrt(sqr(xp-t3)+sqr(yp-t4));\\ndist2 = 0.3 * sqrt(sqr(xp-t5)+sqr(yp-t6));\\nval1 = 0.5 + bass * sin(dist1-time - bass);\\nval2 = 0.5 + bass * sin(dist2-time - bass);\\nval = (val1 + val2) * 0.5;\\n\\n\\nr = val1;\\ng = val;\\nb = val2;\\n\\n\\n\\nx = t1 + xp / 256;\\ny = t2 + yp / 256;"},{"baseVals":{"enabled":1,"spectrum":1,"usedots":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"t1 = q1 + 2 / 16;\\nt2 = q2;\\nt3 = q3 - 32;\\nt4 = q4;\\nt5 = q5 - 32;\\nt6 = q6;","point_eqs_eel":"width = 32;height = 16;\\n\\ngruff = sample * 512;\\nxp = gruff%width;\\nyp = int(gruff/width);\\nyp = if(equal(sample,1),yp-1,yp);\\n\\n\\ndist1 = 0.3 * sqrt(sqr(xp-t3)+sqr(yp-t4));\\ndist2 = 0.3 * sqrt(sqr(xp-t5)+sqr(yp-t6));\\nval1 = 0.5 + bass * sin(dist1-time - bass);\\nval2 = 0.5 + bass * sin(dist2-time - bass);\\nval = (val1 + val2) * 0.5;\\n\\n\\nr = val1;\\ng = val;\\nb = val2;\\n\\n\\n\\n\\n\\nx = t1 + xp / 256;\\ny = t2 + yp / 256;\\n"},{"baseVals":{"enabled":1,"spectrum":1,"usedots":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"t1 = q1 + 2 / 16;\\nt2 = q2 + 1 / 16;\\nt3 = q3 - 32;\\nt4 = q4 - 16;\\nt5 = q5 - 32;\\nt6 = q6 - 16;","point_eqs_eel":"width = 32;height = 16;\\n\\ngruff = sample * 512;\\nxp = gruff%width;\\nyp = int(gruff/width);\\nyp = if(equal(sample,1),yp-1,yp);\\n\\n\\ndist1 = 0.3 * sqrt(sqr(xp-t3)+sqr(yp-t4));\\ndist2 = 0.3 * sqrt(sqr(xp-t5)+sqr(yp-t6));\\nval1 = 0.5 + bass * sin(dist1-time - bass);\\nval2 = 0.5 + bass * sin(dist2-time - bass);\\nval = (val1 + val2) * 0.5;\\n\\n\\nr = val1;\\ng = val;\\nb = val2;\\n\\n\\n\\n\\n\\nx = t1 + xp / 256;\\ny = t2 + yp / 256;\\n"}],"init_eqs_eel":"// A grayish blob\\n// 2007.02.01 - raron\\n\\nq1 = 0.4;\\nq2 = 0.4;","frame_eqs_eel":"q3 = 32 + 32 * cos(time * 4);\\nq4 = 2 + 24 * sin(time* 1.4);\\nq5 = 32 - 32 * sin(time * 2.1);\\nq6 = 24 + 24 * cos(time * 1.3);\\n\\nzoom = 0.96 + bass * 0.05;\\nrot = 0.2 - 0.2 * bass;","pixel_eqs_eel":"zoom = zoom + rad * 0.1;","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (texture (sampler_main, (uv + (\\n    (texture (sampler_main, (mix (uv, uv_orig, vec2(-1.0, -1.0)) + texsize.zw)).xy - 0.37)\\n   * \\n    (0.005 + (0.025 * clamp ((treb - 1.0), 0.0, 1.0)))\\n  ))).xyz - 0.004);\\n  ret = tmpvar_1.xyz;\\n }","comp":""}')},6134:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":3,"gammaadj":1.9,"echo_zoom":1.169,"echo_orient":1,"wave_mode":5,"additivewave":1,"wave_a":0,"wave_scale":0.9,"wave_smoothing":0.63,"wave_mystery":1,"modwavealphastart":2,"modwavealphaend":2,"warpscale":2.853,"rot":0.006,"warp":0,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.005,"mv_x":0,"mv_y":48,"mv_dx":-0.941,"mv_dy":0.426,"mv_l":5,"mv_r":0.316,"mv_g":0.078,"mv_b":0.942,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"c_x = 0.5;\\nc_y = 0.5;\\nv=0.05","frame_eqs_eel":"q1 = aspectx;\\nq2 = aspecty;\\nrot = 0;\\nzoom = 1;\\nwarp = 0;\\n\\nnum0=beat*(abs(num-num_att)+pump)+bnot(beat)*num0;\\npump=beat*(sin(t)*.1+.1)+bnot(beat)*pump;\\npump=pump*.98;\\n\\nnum_b0=num_b;\\nnum=abs((bass-bass_att)+(mid-mid_att)+(treb-treb_att));\\nnum_att=num_att*.95+num*.05;\\nnum_b=above(num,1-pump)*above(abs(num-num_att),num0);\\nbeat=bnot(equal(num_b0,num_b));\\n\\nt=t+num*.1;\\n\\nr = if(beat, 0.02*(int(rand(200))-100)*0.01,r);\\nrot = r;\\n\\nc_x = if(beat,0.5 + 0.5*(int(rand(200))-100)*0.01, c_x);\\nc_y = if(beat,0.5 + 0.5*(int(rand(200))-100)*0.01, c_y);\\nv = if(beat,0.035 + 0.025*(int(rand(200))-100)*0.01, v);\\n\\n\\nq3 = c_x;\\nq4 = c_y;\\nq5 = v;\\nq6 = beat;\\n\\nbb = bb*0.98 + bass*0.5;\\nmm = mm*0.98 + mid*0.5;\\ntt = tt*0.98 + treb*0.5;\\n\\nmx = max(max(bb,mm),tt);\\nmn = min(min(bb,mm),tt);\\n\\nh1 = (bb-mn)/(mx-mn);\\nh2 = (mm-mn)/(mx-mn);\\nh3 = (tt-mn)/(mx-mn);\\n\\nv = 0.2/fps;\\nbm = bm + (h1-h2)*v;\\nmt = mt + (h2-h3)*v;\\nbt = bt + (h1-h3)*v;\\n\\nw = bm;\\nq3 = sin(w);\\nq4 = cos(w);\\n\\n\\nq10 = bm;\\nq11 = mt;\\nq12 = bt;","pixel_eqs_eel":"d = (pow(sqrt(sqr(x-q3)+sqr(y-q4)),0.5)-0);\\nv = q5;\\ndx = v*(x-q3)*d;\\ndy = v*(y-q4)*d;","warp":" shader_body { \\n  vec3 ret_1;\\n  vec3 tmpvar_2;\\n  tmpvar_2 = (texture (sampler_noise_lq, ((\\n    (uv_orig * texsize.xy)\\n   * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5);\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (texsize.zw * 4.0);\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_6;\\n  tmpvar_6 = mix (uv_orig, uv, vec2(0.35, 0.35));\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = tmpvar_4.y;\\n  tmpvar_7.y = tmpvar_5.y;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (tmpvar_6 - ((tmpvar_7 * texsize.zw) * 4.0));\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = tmpvar_4.z;\\n  tmpvar_9.y = tmpvar_5.z;\\n  vec2 tmpvar_10;\\n  tmpvar_10 = (tmpvar_6 - ((tmpvar_9 * texsize.zw) * 4.0));\\n  vec4 tmpvar_11;\\n  tmpvar_11 = texture (sampler_blur1, uv);\\n  vec4 tmpvar_12;\\n  tmpvar_12 = texture (sampler_main, uv_orig);\\n  ret_1.y = (((\\n    (texture (sampler_main, tmpvar_8).y - (((\\n      (tmpvar_11.xyz * scale1)\\n     + bias1).y - texture (sampler_main, tmpvar_8).y) * 0.024))\\n   - 0.009) + (\\n    (1.0 - tmpvar_12.x)\\n   * 0.014)) + (tmpvar_2 * 0.02)).x;\\n  ret_1.z = (((\\n    (texture (sampler_main, tmpvar_10).z - (((\\n      (tmpvar_11.xyz * scale1)\\n     + bias1).z - texture (sampler_main, tmpvar_10).z) * 0.024))\\n   - 0.009) + (tmpvar_12.x * 0.014)) + (tmpvar_2 * 0.02)).x;\\n  ret_1.x = texture (sampler_fc_main, (uv + ((tmpvar_2.xy * texsize.zw) * 0.5))).x;\\n  ret_1.x = (ret_1.x + ((\\n    (ret_1.x - ((texture (sampler_blur3, uv).xyz * scale3) + bias3).x)\\n   * 0.4) + (tmpvar_2 * 0.0052)).x);\\n  vec4 tmpvar_13;\\n  tmpvar_13.w = 1.0;\\n  tmpvar_13.xyz = ret_1;\\n  ret = tmpvar_13.xyz;\\n }","comp":" shader_body { \\n  vec2 uv_1;\\n  vec3 ret_2;\\n  uv_1 = (0.5 + ((uv - 0.5) * 1.5));\\n  vec2 tmpvar_3;\\n  tmpvar_3 = ((uv_1 - 0.5) * aspect.xy);\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = ((q4 * tmpvar_3.x) - (q3 * tmpvar_3.y));\\n  tmpvar_4.y = ((q3 * tmpvar_3.x) + (q4 * tmpvar_3.y));\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (0.5 + (tmpvar_4 * 2.0));\\n  vec2 numerator_6;\\n  numerator_6 = (tmpvar_5 - vec2(0.0, 0.5));\\n  vec2 denominator_7;\\n  denominator_7 = (tmpvar_5 - vec2(1.0, 0.5));\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = ((numerator_6.x * denominator_7.x) + (numerator_6.y * denominator_7.y));\\n  tmpvar_8.y = ((numerator_6.y * denominator_7.x) - (numerator_6.x * denominator_7.y));\\n  vec2 tmpvar_9;\\n  tmpvar_9 = (((tmpvar_8 / \\n    ((denominator_7.x * denominator_7.x) + (denominator_7.y * denominator_7.y))\\n  ) + 0.5) - vec2(0.5, 0.5));\\n  float tmpvar_10;\\n  tmpvar_10 = sqrt(dot (tmpvar_9, tmpvar_9));\\n  float tmpvar_11;\\n  float tmpvar_12;\\n  tmpvar_12 = (min (abs(\\n    (tmpvar_9.x / tmpvar_9.y)\\n  ), 1.0) / max (abs(\\n    (tmpvar_9.x / tmpvar_9.y)\\n  ), 1.0));\\n  float tmpvar_13;\\n  tmpvar_13 = (tmpvar_12 * tmpvar_12);\\n  tmpvar_13 = (((\\n    ((((\\n      ((((-0.01213232 * tmpvar_13) + 0.05368138) * tmpvar_13) - 0.1173503)\\n     * tmpvar_13) + 0.1938925) * tmpvar_13) - 0.3326756)\\n   * tmpvar_13) + 0.9999793) * tmpvar_12);\\n  tmpvar_13 = (tmpvar_13 + (float(\\n    (abs((tmpvar_9.x / tmpvar_9.y)) > 1.0)\\n  ) * (\\n    (tmpvar_13 * -2.0)\\n   + 1.570796)));\\n  tmpvar_11 = (tmpvar_13 * sign((tmpvar_9.x / tmpvar_9.y)));\\n  if ((abs(tmpvar_9.y) > (1e-08 * abs(tmpvar_9.x)))) {\\n    if ((tmpvar_9.y < 0.0)) {\\n      if ((tmpvar_9.x >= 0.0)) {\\n        tmpvar_11 += 3.141593;\\n      } else {\\n        tmpvar_11 = (tmpvar_11 - 3.141593);\\n      };\\n    };\\n  } else {\\n    tmpvar_11 = (sign(tmpvar_9.x) * 1.570796);\\n  };\\n  vec2 tmpvar_14;\\n  tmpvar_14.x = (tmpvar_11 * 0.1591549);\\n  tmpvar_14.y = tmpvar_10;\\n  vec2 tmpvar_15;\\n  tmpvar_15.x = ((tmpvar_14.x * 2.0) + q11);\\n  tmpvar_15.y = ((0.35 * log(tmpvar_10)) + q12);\\n  vec2 tmpvar_16;\\n  tmpvar_16 = (0.5 + (0.5 - abs(\\n    ((fract((tmpvar_15 * 0.5)) * 2.0) - 1.0)\\n  )));\\n  uv_1 = tmpvar_16;\\n  vec2 tmpvar_17;\\n  tmpvar_17.x = sin(((tmpvar_16.y * 31.0) + (0.59 * time)));\\n  tmpvar_17.y = sin(((tmpvar_16.x * 26.0) + (0.37 * time)));\\n  vec2 tmpvar_18;\\n  tmpvar_18 = (tmpvar_16 + (0.03 * tmpvar_17));\\n  ret_2 = (max (texture (sampler_main, tmpvar_16).xyz, texture (sampler_main, tmpvar_18).xyz) * 1.33);\\n  ret_2 = (pow (vec3(dot (ret_2, vec3(0.32, 0.49, 0.29))), vec3(2.5, 2.5, 2.5)) + ((texture (sampler_blur1, \\n    ((tmpvar_16 + tmpvar_18) / 2.0)\\n  ).xyz * scale1) + bias1));\\n  vec4 tmpvar_19;\\n  tmpvar_19.w = 1.0;\\n  tmpvar_19.xyz = ret_2;\\n  ret = tmpvar_19.xyz;\\n }"}')},4931:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.5,"echo_zoom":1,"echo_orient":3,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0,"ob_b":0.2,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":14,"num_inst":366,"rad":0.0303,"tex_ang":0.62832,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));"},{"baseVals":{"enabled":1,"sides":14,"num_inst":408,"rad":0.03,"tex_ang":0.62832,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));"},{"baseVals":{"enabled":1,"sides":14,"num_inst":262,"rad":0.0297,"tex_ang":0.62832,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));"},{"baseVals":{"enabled":1,"sides":14,"num_inst":276,"rad":0.0303,"tex_ang":0.62832,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));"}],"waves":[{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));"}],"init_eqs_eel":"p1 = 2000; p2 = 200; p3=50;","frame_eqs_eel":"chng=sin(time*.5);\\ncthr=.9999;\\nmq21=if(above(chng,cthr),rand(3),mq21);\\nmq22=if(above(chng,cthr),rand(3),mq22);\\nmq23=if(above(chng,cthr),rand(3),mq23);\\nmq24=if(above(chng,cthr),rand(2),mq24);\\nmq25=if(above(chng,cthr),rand(2),mq25);\\nmq26=if(above(chng,cthr),rand(2),mq26);\\nmq27=if(above(chng,cthr),rand(1),mq27);\\nmq28=if(above(chng,cthr),rand(1),mq28);\\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\\nmq31=if(above(chng,cthr),rand(1)*.3,mq31);\\nmonitor=chng;\\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\\nq27=mq27;q28=mq28;q29=mq29;q31=mq31;\\n\\nmonitor=mq1;\\nvol=bass+treb+mid;\\natime=atime+vol;\\nq11=.4+sin(atime*.006        )*.4;\\nq12=.4+cos(atime*.00613828348)*.4;\\nq13=.4+sin(atime*.00598593455)*.4;\\nmonitor=q13;\\ndec_med = pow (0.9, 30/fps);\\ndec_slow = pow (0.9, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .1+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %16;\\nindex2 = (index2 + is_beat*bnot(index))%5;\\nmonitor = index2;\\nq1 = is_beat;\\nq3 = bass + mid + treb;\\nq4 = index2;\\nk1 =  is_beat*equal(index%2,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott_ = p2 * 3.1416/4;\\nrott =  rott +  .2*30/fps*q2;\\nq2 = sin(rott);\\nran = bnot(q1)*ran + q1 * (int(rand(50))-24);\\ntran = tan(ran);\\ntran = max(tran,-5);\\ntran = min(tran,5);\\ntrel = trel + .02*30/fps*tran+q1;\\nq5 = cos(trel);\\nq6 = sin(trel);\\nq7 = -q6;//it makes no sense, but commenting q7/8 fucks it up majorly\\nq8 = q5;\\nmovex = movex*dec_slow + .1*sin(rott)*30/fps;\\nspd = spd*bnot(q1) + q3*q1;\\nmovez = movez + .005*30/fps*spd;\\nq9 = movez;\\nmv_x = 20;\\nmv_y = 15;\\nmv_a = .1;\\nmv_l = 0;\\nq10 = sin(time/7);\\nq12 = sin(time/11);\\n\\n//flexi mobius spiral col frame\\nt = t + 2.5/fps;\\nt = if(above(t,2),t-2,t);\\ndb = db*0.98 + bass_att*0.2; // dampener\\nbb = bb + db*0.1; // accumulation, replace time expressions with this ;)\\ndt = dt*0.98 + treb_att*0.2;\\ntt = tt + dt*0.1;\\ndm = dm*0.98 + mid_att*0.2;\\nmm = mm + dm*0.1;\\nw = (bb-tt)*0.1;                   // angle\\nq32 = 0.8 - (db-dt)*0.04;         // size\\nq31 = sin(w);\\nq30 = cos(w);\\nq29 = sin(-w);\\nq28 = cos(-w);\\nq27 = 1/q32;\\nzoom =1;// 0.999;\\nwarp = 0;\\nscale = 8;\\nangle = -time*0.2;\\nscale = 0.8;\\nangle = time*0.2;\\nq31 = 1/asin(1);\\ndecay=.96;\\nvol= vol+(db+dm+dt)*0.002;\\nmv_r = 0.5 + 0.4*sin(time*1.324);\\nmv_g = 0.5 + 0.4*cos(time*1.371);\\nob_r = 0.5 + 0.4*sin(time*1.324);\\nob_g = 0.5 + 0.4*cos(time*1.371);\\nzoom=.97+(treb*0.02);\\nmusictime=vol;\\nq26=sin(musictime*0.2)*99.45;\\nq25=sin(musictime*0.1)*99.45;\\nq24=sin(musictime*0.21)*99.45;\\nq23=sin(musictime*0.21)*99.45;\\nq22=sin(musictime*0.12)*99.45;\\nq21=sin(musictime*0.22)*99.45;\\nq20=sin(musictime*0.13)*99.45;\\nq19=sin(musictime*0.23)*99.45;\\nq18=sin(musictime*0.24)*999.45;\\nq17=sin(musictime*0.14)*999.45;\\ndx=sin(musictime*0.2)*0.02;\\ndy=cos(musictime*0.69)*0.02;","pixel_eqs_eel":"zoom = 1;\\nwarp = .1;","warp":" shader_body { \\n  vec3 ret_1;\\n  vec3 tmpvar_2;\\n  tmpvar_2 = (texture (sampler_noise_lq, ((\\n    ((texsize.xy * texsize_noise_lq.zw).x * uv)\\n   / 2.0) + q23)) + 1.0).xyz;\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur1, uv).xyz * scale1) + bias1) - 0.3);\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = (0.3 * tmpvar_3.x);\\n  tmpvar_4.y = tmpvar_3.y;\\n  ret_1 = ((-0.4 * (\\n    ((texture (sampler_blur1, ((uv / 4.0) + (0.4 * tmpvar_4))).xyz * scale1) + bias1)\\n   - \\n    (tmpvar_2 * 0.1)\\n  )) + (texture (sampler_main, (uv + \\n    (tmpvar_3 * 0.01)\\n  .xy)).xyz + (tmpvar_2 * 0.1)));\\n  vec4 tmpvar_5;\\n  tmpvar_5 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv.xyy) * (\\n    (q27 * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\\n  if (((ret_1.x > (q21 * q13)) && (ret_1.x <= (q24 * q11)))) {\\n    ret_1.y = (ret_1.y + (tmpvar_5.x * 0.5));\\n  };\\n  if (((ret_1.y > (q22 * q11)) && (ret_1.y <= (q25 * q12)))) {\\n    ret_1.z = (ret_1.z + (tmpvar_5.y * 0.5));\\n  };\\n  if (((ret_1.z > (q23 * q12)) && (ret_1.z <= (q26 * q13)))) {\\n    ret_1.x = (ret_1.x + (tmpvar_5.z * 0.5));\\n  };\\n  float tmpvar_6;\\n  tmpvar_6 = (1.0 - ((0.01 * q28) * (q28 * rad)));\\n  ret_1 = (ret_1 * (0.98 * (tmpvar_6 * tmpvar_6)));\\n  ret_1 = (ret_1 - 0.04);\\n  vec4 tmpvar_7;\\n  tmpvar_7.w = 1.0;\\n  tmpvar_7.xyz = ret_1;\\n  ret = tmpvar_7.xyz;\\n }","comp":" shader_body { \\n  vec2 uv_1;\\n  vec3 dy_2;\\n  vec3 dx_3;\\n  vec2 d_4;\\n  vec3 ret_5;\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (texsize.zw * 3.0);\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_6))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_6))\\n  ).xyz * scale1) + bias1)).y;\\n  tmpvar_7.y = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_6))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_6))\\n  ).xyz * scale1) + bias1)).y;\\n  uv_1 = (uv + ((tmpvar_7 * rad) * 0.3));\\n  d_4 = (texsize.zw * 16.0);\\n  dx_3 = (((texture (sampler_blur2, \\n    (uv_1 + (vec2(1.0, 0.0) * d_4))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    (uv_1 - (vec2(1.0, 0.0) * d_4))\\n  ).xyz * scale2) + bias2));\\n  dy_2 = (((texture (sampler_blur2, \\n    (uv_1 + (vec2(0.0, 1.0) * d_4))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    (uv_1 - (vec2(0.0, 1.0) * d_4))\\n  ).xyz * scale2) + bias2));\\n  vec3 tmpvar_8;\\n  tmpvar_8 = mix (ret_5, ((1.0 - texture (sampler_main, uv_1).x) * vec3(1.5, 2.5, 3.0)), vec3((clamp (\\n    (((texture (sampler_blur1, uv_1).xyz * scale1) + bias1).x * 2.0)\\n  , 0.0, 1.0) * 0.5)));\\n  ret_5 = tmpvar_8;\\n  vec3 tmpvar_9;\\n  tmpvar_9.x = dx_3.y;\\n  tmpvar_9.y = dy_2.z;\\n  tmpvar_9.z = dx_3.x;\\n  vec4 tmpvar_10;\\n  tmpvar_10 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * tmpvar_9) * (\\n    (q28 * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q31)));\\n  if (((tmpvar_8.x > (q26 * q13)) && (tmpvar_8.x <= (q23 * q11)))) {\\n    ret_5.z = (tmpvar_8.z - (tmpvar_10.x * 0.5));\\n  };\\n  if (((tmpvar_8.y > (q25 * q11)) && (tmpvar_8.y <= (q22 * q12)))) {\\n    ret_5.x = (tmpvar_8.x - (tmpvar_10.y * 0.5));\\n  };\\n  if (((ret_5.z > (q24 * q12)) && (ret_5.z <= (q21 * q13)))) {\\n    ret_5.y = (tmpvar_8.y - (tmpvar_10.z * 0.5));\\n  };\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = dx_3.z;\\n  tmpvar_11.y = dy_2.z;\\n  vec3 tmpvar_12;\\n  tmpvar_12 = mix (mix ((ret_5 * rad), vec3(1.0, 0.75, 0.0), vec3((\\n    (((dy_2 + dx_3).z * 0.43) + 0.5)\\n   * \\n    ((texture (sampler_blur2, (uv_1 + (\\n      (tmpvar_11 * texsize.zw)\\n     * 32.0))).xyz * scale2) + bias2)\\n  .z))), vec3(1.5, 2.0, 3.0), vec3((texture (sampler_main, uv).y * (0.4 - \\n    (rad * 0.7)\\n  ))));\\n  ret_5 = tmpvar_12;\\n  vec4 tmpvar_13;\\n  tmpvar_13.w = 1.0;\\n  tmpvar_13.xyz = tmpvar_12;\\n  ret = tmpvar_13.xyz;\\n }"}')},6569:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1.49,"decay":0.5,"echo_zoom":1.002,"echo_alpha":0.5,"echo_orient":1,"wave_mode":1,"additivewave":1,"wave_brighten":0,"wave_a":1.028,"wave_scale":0.625,"wave_smoothing":0,"wave_mystery":0.2,"modwavealphastart":0.95,"modwavealphaend":0.75,"warpanimspeed":1.459,"warpscale":2.007,"fshader":1,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.06,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0.26,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"index4 = int(rand(2));\\nindex3 = int(rand(4));","frame_eqs_eel":"dec_med = pow (0.9, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %4;\\nindex2 = (index2 + is_beat*bnot(index))%4;\\nindex3 = (index3 + is_beat*bnot(index)*bnot(index2))%4;\\nindex4 = (index4 + is_beat*bnot(index)*bnot(index2)*bnot(index3))%2;\\n\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass + mid + treb;\\n\\nready = is_beat * bnot(ready) + bnot(is_beat2)*ready;\\nis_beat2 = ready * above (time, t0+.2);\\nq19 = is_beat2;\\n\\n//k1 =  is_beat*bnot(index)*bnot(index2);\\n\\nk1 =  is_beat*equal(index,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.14159265359/2;\\n\\nq27 = index+1;\\nq28 = index2+1;\\nq29 = index3*4+1;\\nq30 = index4;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\nsp0 = dec_slow*sp0 + (q24+.05)*(1-dec_slow);\\ngo = go * dec_med + (1-dec_med)*(1-bnot(index2+index3));\\nmovez = movez + .015*30/fps * go ;\\nq31 = movez;\\nq32 = .5 + .02*sin(time/5);\\n\\nq5 = index4%2;\\n\\nzoom = 1.0; rot = 0;\\n\\ndx = .05*max(sin(time/9.7)-.95,0);\\ndy = .002*(1-go);\\nrot = 50*(dx-dy);\\n\\nchng=sin(time*.5);\\ncthr=.9999;\\nmq21=if(above(chng,cthr),rand(3),mq21);\\nmq22=if(above(chng,cthr),rand(3),mq22);\\nmq23=if(above(chng,cthr),rand(3),mq23);\\nmq24=if(above(chng,cthr),rand(2),mq24);\\nmq25=if(above(chng,cthr),rand(2),mq25);\\nmq26=if(above(chng,cthr),rand(2),mq26);\\nmq27=if(above(chng,cthr),rand(1),mq27);\\nmq28=if(above(chng,cthr),rand(1),mq28);\\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\\nmq30=if(above(chng,cthr),rand(1)*.3,mq30);\\nmonitor=chng;\\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\\nq27=mq27;q28=mq28;q29=mq29;q30=mq30;\\n\\nmonitor=mq1;\\nvol=bass+treb+mid;\\natime=atime+vol;\\nq1=.4+sin(atime*.006        )*.4;\\nq2=.4+cos(atime*.00613828348)*.4;\\nq3=.4+sin(atime*.00598593455)*.4;\\nmonitor=q3;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 uv_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = mix (uv_orig, uv, vec2(0.3, 0.3));\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (texsize.zw * 3.0);\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = dot (((\\n    (texture (sampler_blur1, (tmpvar_3 + (vec2(1.0, 0.0) * tmpvar_4))).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (tmpvar_3 - (vec2(1.0, 0.0) * tmpvar_4))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  tmpvar_5.y = dot (((\\n    (texture (sampler_blur1, (tmpvar_3 + (vec2(0.0, 1.0) * tmpvar_4))).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (tmpvar_3 - (vec2(0.0, 1.0) * tmpvar_4))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  uv_1 = (tmpvar_3 + ((tmpvar_5 * texsize.zw) * 9.0));\\n  vec3 tmpvar_6;\\n  tmpvar_6 = (texture (sampler_fc_main, uv_1) - 0.01).xyz;\\n  ret_2 = tmpvar_6;\\n  vec4 tmpvar_7;\\n  tmpvar_7 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv_1.xyy) * (\\n    (q27 * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\\n  if (((tmpvar_6.x > (q21 * q3)) && (tmpvar_6.x <= (q24 * q1)))) {\\n    ret_2.y = (tmpvar_6.y + (tmpvar_7.x * 0.2));\\n  };\\n  if (((ret_2.y > (q22 * q1)) && (ret_2.y <= (q25 * q2)))) {\\n    ret_2.z = (tmpvar_6.z + (tmpvar_7.y * 0.2));\\n  };\\n  if (((ret_2.z > (q23 * q2)) && (ret_2.z <= (q26 * q3)))) {\\n    ret_2.x = (tmpvar_6.x + (tmpvar_7.z * 0.2));\\n  };\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = ret_2;\\n  ret = tmpvar_8.xyz;\\n }","comp":" shader_body { \\n  vec2 uv_1;\\n  vec3 ret3_2;\\n  vec3 ret_3;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (((uv - 0.5) * vec2(-1.0, 1.0)) + 0.5);\\n  vec3 tmpvar_5;\\n  tmpvar_5 = abs(((texture (sampler_main, uv).xyz * \\n    clamp ((((\\n      (texture (sampler_blur2, uv).xyz * scale2)\\n     + bias2) * 2.8) - 0.13), 0.0, 1.0)\\n  ) - (texture (sampler_main, tmpvar_4).xyz * \\n    clamp ((((\\n      (texture (sampler_blur2, tmpvar_4).xyz * scale2)\\n     + bias2) * 2.8) - 0.13), 0.0, 1.0)\\n  )));\\n  ret3_2 = (tmpvar_5 * sqrt(tmpvar_5));\\n  ret3_2 = (ret3_2 * vec3(0.9, 1.6, 2.3));\\n  ret3_2 = (ret3_2 * 3.0);\\n  vec3 tmpvar_6;\\n  tmpvar_6 = pow (ret3_2, (1.0 - ret3_2));\\n  ret3_2 = tmpvar_6;\\n  uv_1 = (uv * 2.0);\\n  vec2 tmpvar_7;\\n  tmpvar_7 = floor((fract(\\n    (uv_1 * 0.5)\\n  ) * 2.0));\\n  uv_1 = ((fract(uv_1) * (1.0 - tmpvar_7)) + (tmpvar_7 * fract(\\n    (1.0 - uv_1)\\n  )));\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = rad;\\n  tmpvar_8.y = uv_1.y;\\n  uv_1 = tmpvar_8;\\n  vec2 tmpvar_9;\\n  tmpvar_9 = ((0.5 - tmpvar_8.yx) + 0.5);\\n  ret_3 = (texture (sampler_main, tmpvar_8.yx).xyz * clamp ((\\n    (((texture (sampler_blur2, tmpvar_8.yx).xyz * scale2) + bias2) * 2.8)\\n   - 0.13), 0.0, 1.0));\\n  vec3 tmpvar_10;\\n  tmpvar_10 = mix (ret_3, (texture (sampler_main, tmpvar_9).xyz * clamp (\\n    ((((texture (sampler_blur2, tmpvar_9).xyz * scale2) + bias2) * 2.8) - 0.13)\\n  , 0.0, 1.0)), vec3(0.5, 0.5, 0.5));\\n  ret_3 = (tmpvar_10 * tmpvar_10);\\n  ret_3 = (ret_3 * vec3(0.9, 1.6, 2.3));\\n  ret_3 = (ret_3 * 3.0);\\n  vec3 tmpvar_11;\\n  tmpvar_11 = vec3((0.5 * dot (ret_3, vec3(0.32, 0.49, 0.29))));\\n  ret_3 = tmpvar_11;\\n  vec4 tmpvar_12;\\n  tmpvar_12 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * tmpvar_8.xyy) * (\\n    (q28 * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q30)));\\n  if (((tmpvar_11.x > (q26 * q3)) && (tmpvar_11.x <= (q23 * q1)))) {\\n    ret_3.z = (tmpvar_11.z - (tmpvar_12.x * 0.5));\\n  };\\n  if (((tmpvar_11.y > (q25 * q1)) && (tmpvar_11.y <= (q22 * q2)))) {\\n    ret_3.x = (tmpvar_11.x - (tmpvar_12.y * 0.5));\\n  };\\n  if (((ret_3.z > (q24 * q2)) && (ret_3.z <= (q21 * q3)))) {\\n    ret_3.y = (tmpvar_11.y - (tmpvar_12.z * 0.5));\\n  };\\n  vec3 tmpvar_13;\\n  tmpvar_13 = max (tmpvar_6, (0.8 * ret_3.zxy));\\n  ret_3 = tmpvar_13;\\n  vec4 tmpvar_14;\\n  tmpvar_14.w = 1.0;\\n  tmpvar_14.xyz = tmpvar_13;\\n  ret = tmpvar_14.xyz;\\n }"}')},4006:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":4,"gammaadj":1.49,"decay":0.5,"echo_zoom":1.002,"echo_alpha":0.5,"echo_orient":1,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":0.001,"wave_scale":1.157,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":16.016,"zoomexp":11.56276,"fshader":1,"zoom":1.05971,"warp":0.13126,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0,"ob_a":1,"ib_size":0,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":14,"num_inst":512,"rad":0.1026,"tex_ang":0.62832,"r2":1,"g2":0,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\nrad=(bass+treb)/30;\\na=(above(bass+mid+treb,.8));\\nr=int(rand(100))/100;\\ng=int(rand(100))/100;\\nb=int(rand(100))/100;\\nr2=int(rand(100))/100;\\ng2=int(rand(100))/100;\\nb2=int(rand(100))/100;\\nr_border=int(rand(100))/100;\\ng_border=int(rand(100))/100;\\nb_border=int(rand(100))/100;"},{"baseVals":{"enabled":1,"sides":23,"num_inst":1024,"rad":0.10262,"ang":0.43982,"tex_ang":0.62832,"a":0.5,"r2":1,"g2":0,"a2":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\nrad=(bass+treb)/25;\\na=(above(bass+mid+treb,.1));\\nr=int(rand(100))/100;\\ng=int(rand(100))/100;\\nb=int(rand(100))/100;\\nr2=int(rand(100))/100;\\ng2=int(rand(100))/100;\\nb2=int(rand(100))/100;\\nr_border=int(rand(100))/100;\\ng_border=int(rand(100))/100;\\nb_border=int(rand(100))/100;"},{"baseVals":{"sides":14,"additive":1,"num_inst":256,"rad":0.20269,"tex_ang":0.62832,"r2":1,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));"},{"baseVals":{"sides":14,"additive":1,"num_inst":256,"rad":0.22389,"tex_ang":0.62832,"r2":1,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));"}],"waves":[{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));"}],"init_eqs_eel":"","frame_eqs_eel":"xx1 = xx1*0.9 + (bass)*0.01;\\nxx2 = xx2*0.9 + (treb)*0.01;\\nyy1 = yy1*0.94 + (treb+bass)*0.0075;\\n\\nx1 = 0.5 + (xx1-xx2)*2;\\ny1 = 0.4 + yy1;\\n\\nx1 = max(0,min(1,x1)); y1 = max(0,min(1,y1));\\n\\nspring = 10;\\ngrav = .5;\\nresist = 1;\\nbounce = 0.75;\\ndt = 0.0005*(60/fps);\\n\\nvx2 = vx2*(1-resist*dt) + dt*((x1+x3-2*x2)*spring);\\nvy2 = vy2*(1-resist*dt) + dt*((y1+y3-2*y2)*spring-grav);\\nvx3 = vx3*(1-resist*dt) + dt*((x2+x4-2*x3)*spring);\\nvy3 = vy3*(1-resist*dt) + dt*((y2+y4-2*y3)*spring-grav);\\nvx4 = vx4*(1-resist*dt) + dt*((x3-x4)*spring);\\nvy4 = vy4*(1-resist*dt) + dt*((y3-y4)*spring-grav);\\n\\nx2 = x2 + vx2;\\ny2 = y2 + vy2;\\nx3 = x3 + vx3;\\ny3 = y3 + vy3;\\nx4 = x4 + vx4;\\ny4 = y4 + vy4;\\n\\nvx2 = if(above(x2,0),vx2,abs(vx2)*bounce);\\nvx2 = if(below(x2,1),vx2,-abs(vx2)*bounce);\\nvx3 = if(above(x3,0),vx3,abs(vx3)*bounce);\\nvx3 = if(below(x3,1),vx3,-abs(vx3)*bounce);\\nvx4 = if(above(x4,0),vx4,abs(vx4)*bounce);\\nvx4 = if(below(x4,1),vx4,-abs(vx4)*bounce);\\nvy2 = if(above(y2,0),vy2,abs(vy2)*bounce);\\nvy2 = if(below(y2,1),vy2,-abs(vy2)*bounce);\\nvy3 = if(above(y3,0),vy3,abs(vy3)*bounce);\\nvy3 = if(below(y3,1),vy3,-abs(vy3)*bounce);\\nvy4 = if(above(y4,0),vy4,abs(vy4)*bounce);\\nvy4 = if(below(y4,1),vy4,-abs(vy4)*bounce);\\n\\n\\nq1 = x1; q2 = x2; q3 = x3; q4 = x4;\\nq5 = y1; q6 = y2; q7 = y3; q8 = y4;\\nq9 =1/ aspectX;\\nq10 = 1/aspectY;\\n\\nzoom = 1;\\nr = r*0.96 +(x1-0.5);\\nrot = (r*0.1);\\n\\nq12 = atan2(vx4,vy4);\\nq11 = sqrt(vx4*vx4 + vy4*vy4);\\n\\nzoom = 1.001;\\nrot = 0.00;\\nwarp = 0.2;\\nwave_a = 0;","pixel_eqs_eel":"dir = -q12 + asin(1);\\n\\nb1 = 0.1;\\nm1 = q11*25;\\n\\nxx = q4;\\nyy = 1-q8;\\n\\n\\nx1 = xx  -sin(dir)*b1;\\ny1 = yy  -cos(dir)*b1;\\nx2 = xx  +sin(dir)*b1;\\ny2 = yy  +cos(dir)*b1;\\n\\nd1 = sqrt((x1-x)*(x1-x)+(y1-y)*(y1-y))-b1*2;\\nd2 = sqrt((x2-x)*(x2-x)+(y2-y)*(y2-y))-b1*2;\\n\\nsi1 = sigmoid(-d1,1000);\\nsi2 = sigmoid(-d2,1000);\\n\\ndx = (si1*sin(y1-y)*m1*d1  - si2*sin(y2-y)*m1*d2)*2;\\ndy = (-si1*sin(x1-x)*m1*d1 + si2*sin(x2-x)*m1*d2)*2;","warp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = mix (uv_orig, uv, vec2(0.3, 0.3));\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 3.0);\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = dot (((\\n    (texture (sampler_blur1, (tmpvar_1 + (vec2(1.0, 0.0) * tmpvar_2))).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (tmpvar_1 - (vec2(1.0, 0.0) * tmpvar_2))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  tmpvar_3.y = dot (((\\n    (texture (sampler_blur1, (tmpvar_1 + (vec2(0.0, 1.0) * tmpvar_2))).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (tmpvar_1 - (vec2(0.0, 1.0) * tmpvar_2))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = (texture (sampler_fc_main, (tmpvar_1 + (\\n    (tmpvar_3 * texsize.zw)\\n   * 9.0))) - 0.01).xyz;\\n  ret = tmpvar_4.xyz;\\n }","comp":" shader_body { \\n  vec2 uv_1;\\n  vec3 ret3_2;\\n  vec3 ret_3;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (((uv - 0.5) * vec2(-1.0, 1.0)) + 0.5);\\n  vec3 tmpvar_5;\\n  tmpvar_5 = abs(((texture (sampler_main, uv).xyz * \\n    clamp ((((\\n      (texture (sampler_blur2, uv).xyz * scale2)\\n     + bias2) * 2.8) - 0.13), 0.0, 1.0)\\n  ) - (texture (sampler_main, tmpvar_4).xyz * \\n    clamp ((((\\n      (texture (sampler_blur2, tmpvar_4).xyz * scale2)\\n     + bias2) * 2.8) - 0.13), 0.0, 1.0)\\n  )));\\n  ret3_2 = (tmpvar_5 * sqrt(tmpvar_5));\\n  ret3_2 = (ret3_2 * vec3(0.9, 1.6, 2.3));\\n  ret3_2 = (ret3_2 * 3.0);\\n  vec3 tmpvar_6;\\n  tmpvar_6 = pow (ret3_2, (1.0 - ret3_2));\\n  ret3_2 = tmpvar_6;\\n  uv_1 = (uv * 2.0);\\n  vec2 tmpvar_7;\\n  tmpvar_7 = floor((fract(\\n    (uv_1 * 0.5)\\n  ) * 2.0));\\n  uv_1 = ((fract(uv_1) * (1.0 - tmpvar_7)) + (tmpvar_7 * fract(\\n    (1.0 - uv_1)\\n  )));\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = rad;\\n  tmpvar_8.y = uv_1.y;\\n  uv_1 = tmpvar_8;\\n  vec2 tmpvar_9;\\n  tmpvar_9 = ((0.5 - tmpvar_8.yx) + 0.5);\\n  ret_3 = (texture (sampler_main, tmpvar_8.yx).xyz * clamp ((\\n    (((texture (sampler_blur2, tmpvar_8.yx).xyz * scale2) + bias2) * 2.8)\\n   - 0.13), 0.0, 1.0));\\n  vec3 tmpvar_10;\\n  tmpvar_10 = mix (ret_3, (texture (sampler_main, tmpvar_9).xyz * clamp (\\n    ((((texture (sampler_blur2, tmpvar_9).xyz * scale2) + bias2) * 2.8) - 0.13)\\n  , 0.0, 1.0)), vec3(0.5, 0.5, 0.5));\\n  ret_3 = (tmpvar_10 * tmpvar_10);\\n  ret_3 = (ret_3 * vec3(0.9, 1.6, 2.3));\\n  ret_3 = (ret_3 * 3.0);\\n  ret_3 = (max (tmpvar_6, (0.8 * vec3(\\n    (0.5 * dot (ret_3, vec3(0.32, 0.49, 0.29)))\\n  ))) - (roam_sin.xyz * roam_cos.zxy));\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 1.0;\\n  tmpvar_11.xyz = ret_3;\\n  ret = tmpvar_11.xyz;\\n }"}')},752:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":2,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"wave_mode":6,"wave_brighten":0,"wrap":0,"wave_a":0.005,"wave_scale":0.167,"wave_smoothing":0,"modwavealphastart":1,"modwavealphaend":1,"warpanimspeed":0.304,"warpscale":6.988,"zoomexp":1.3724,"warp":1.02198,"wave_x":0.95,"wave_y":1,"ob_size":0,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0,"ib_r":1,"ib_g":1,"ib_b":1,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_b":0,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"thickoutline":1,"x":1,"rad":0.03772,"tex_zoom":0.5033,"r2":1,"g2":0,"a2":1,"border_a":0},"init_eqs_eel":"vx = 0;\\nvy = 0;","frame_eqs_eel":"mx = rand(1001)*.001;\\nmy = rand(1001)*.001;\\n\\nmx = mx*6.283;\\nmy = pow(my,4);\\n\\nx = .5 + my*sin(mx);\\ny = .5 + my*cos(mx);\\n\\n\\nr = x;\\ng = 1-y;\\nb = 1;\\nr2=r;\\ng2=g;\\nb2=b;\\n\\n\\na = above(bass*mid*treb,rand(1001)*.001*2);\\n\\na2 = a;"},{"baseVals":{"sides":100,"additive":1,"thickoutline":1,"rad":0.05615,"tex_zoom":0.5033,"r":0,"b":1,"g2":0,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"vx = 0;\\nvy = 0;","frame_eqs_eel":""},{"baseVals":{"thickoutline":1,"x":1,"rad":1.00591,"tex_zoom":0.5033,"r":0,"b":1,"g2":0,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"vx = 0;\\nvy = 0;","frame_eqs_eel":"x = 1.2;\\ny = q3- 0.4;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"samples":52,"usedots":1,"thick":1,"scaling":0.01,"smoothing":0,"g":0,"b":0,"enabled":0},"init_eqs_eel":"t8 = 1;\\nt1 = q5;","frame_eqs_eel":"","point_eqs_eel":"x = rand(1001)/1000;\\ny = rand(1001)/1000;\\nr = x;\\ng = 1-y;\\nb = 1;\\n\\na = below(rand(100),2);"},{"baseVals":{"samples":12,"usedots":1,"thick":1,"scaling":0.0124,"smoothing":0,"r":0.5,"g":0.6,"enabled":0},"init_eqs_eel":"t8 = 1;\\nt1 = q5;","frame_eqs_eel":"","point_eqs_eel":"ti = q2*.9 - sample*5;\\n\\nx = (sin(ti*.95) + sin(ti*1.35));\\ny = (sin(ti*1.12) + sin(ti*.45));\\n\\nx = max(x,-x);\\ny = max(y,-y);\\n\\nx = x-int(x);\\ny = y-int(y);\\n\\nr = x;\\ng = 1-y;\\n\\ny = (y-.5)/q20+.5;\\n\\nx = x + .005*(rand(1001)*.001*1 -.5);\\ny = y + .005*(rand(1001)*.001*1 -.5);\\n\\na = below(rand(5),2);"},{"baseVals":{"samples":12,"usedots":1,"scaling":0.01303,"smoothing":0,"enabled":0},"init_eqs_eel":"t8 = 1;\\nt1 = q5;","frame_eqs_eel":"t1=sin(time)*0.5+0.5;\\nt2=sin(time+2.1)*0.5+0.5;\\nt3=sin(time+4.2)*0.5+0.5;\\n\\nt4=sin(time+1.1)*0.5+0.5;\\nt5=sin(time+3.1)*0.5+0.5;\\nt6=sin(time+5.2)*0.5+0.5;","point_eqs_eel":"ti = q3*.9 - sample*0;\\n\\nx = .5 + (sin(ti*1.05) + sin(ti*.785))*.25;\\ny = .5 + (sin(ti*.882) + sin(ti*1.45))*.25;\\n\\nr = x;\\ng = 1-y;\\n\\ny = (y-.5)/q20+.5;\\n\\nx = x + .005*(rand(1001)*.001*1 -.5);\\ny = y + .005*(rand(1001)*.001*1 -.5);\\n\\na = below(rand(50),2);"},{"baseVals":{"samples":511,"sep":4,"usedots":1,"scaling":0.02345,"smoothing":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\nab = 1;","frame_eqs_eel":"t1 = q4*0.75;\\nt2 = q5*0.75;\\nt3 = q6*0.75;\\nt4 = q4*0.75;\\nt5 = q5*0.75;\\nt6 = q6*0.75;\\nt8 = 1;","point_eqs_eel":"ti = q4*.9 - sample*0;\\n\\nx = .5 + (sin(ti*.545) + sin(ti*1.156))*.25;\\ny = .5 + (sin(ti*.4782) + sin(ti*1.068))*.25;\\n\\nr = x;\\ng = 1-y;\\n\\ny = (y-.5)/q20+.5;\\n\\nx = x + .005*(rand(1001)*.001*1 -.5);\\ny = y + .005*(rand(1001)*.001*1 -.5);\\n"}],"init_eqs_eel":"","frame_eqs_eel":"//wave_a = 0;\\n\\n//decay = 0.1;\\n\\n\\ntic = min(time-tin,.1);\\ntin = time;\\n\\nti = ti + tic*24;\\nq1 = above(ti,1);\\nti = ti*below(ti,1);\\n\\n\\n\\nt2 = t2 + tic*bass*bass;\\nt2 = t2*below(t2,.01);\\nq5 = equal(t2,0);\\nq5 = 1-tic*(.5 + .1*bass*bass);\\n\\n//t2 = 1-t2;\\n//q5 = t2;\\n\\n\\nvt = vt + bass*mid*treb*tic*.2;\\n\\nbt = bt + bass*tic*.4;\\nmt = mt + mid*tic*.4;\\ntt = tt + treb*tic*.4;\\nq2=bt;\\nq3=mt;\\nq4=tt;\\n\\nq10 = vt;\\n\\nq11 = .5 + .25*sin(bt*1.12);\\nq12 = .5 + .25*sin(bt*0.98);\\n\\nmonitor = above(bass*mid*treb,rand(1001)*.001*2);\\n\\nq20=aspecty;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 1.5)) + rand_frame.xy);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ((texture (sampler_pw_main, (\\n    mix (uv_orig, uv, vec2(((dot (texture (sampler_main, \\n      mix (uv_orig, uv, vec2(4.0, 4.0))\\n    ).xyz, vec3(0.32, 0.49, 0.29)) - dot (\\n      ((texture (sampler_blur3, uv_orig).xyz * scale3) + bias3)\\n    , vec3(0.32, 0.49, 0.29))) * 12.0)))\\n   + \\n    (((texture (sampler_noise_lq, tmpvar_1) - 0.5).xy * texsize.zw) * 2.0)\\n  )) + (\\n    (texture (sampler_noise_lq, tmpvar_1) - 0.5)\\n   * 0.005)) + -0.002).xyz;\\n  ret = tmpvar_2.xyz;\\n }","comp":" shader_body { \\n  vec2 dz_1;\\n  vec3 dy_2;\\n  vec3 dx_3;\\n  vec2 d_4;\\n  vec3 ret_5;\\n  vec2 tmpvar_6;\\n  vec2 tmpvar_7;\\n  tmpvar_7 = (vec2(1.0, 0.0) * texsize.zw);\\n  tmpvar_6.x = (texture (sampler_main, (uv + tmpvar_7)).xyz - texture (sampler_main, (uv - tmpvar_7)).xyz).y;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (vec2(0.0, 1.0) * texsize.zw);\\n  tmpvar_6.y = (texture (sampler_main, (uv + tmpvar_8)).xyz - texture (sampler_main, (uv - tmpvar_8)).xyz).y;\\n  d_4 = (texsize.zw * 2.0);\\n  dx_3 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * d_4))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * d_4))\\n  ).xyz * scale1) + bias1));\\n  dy_2 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * d_4))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * d_4))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = dx_3.y;\\n  tmpvar_9.y = dy_2.y;\\n  dz_1 = ((tmpvar_6 * 3.0) + tmpvar_9);\\n  ret_5 = (vec3(((\\n    pow ((sqrt(dot (dz_1, dz_1)) * 0.8), 0.7)\\n   * 2.0) + (\\n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\\n  .y * 2.0))) * vec3(0.2, 0.3, 0.6));\\n  vec2 tmpvar_10;\\n  tmpvar_10 = fract((0.5 + (uv - 0.5)));\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = dx_3.y;\\n  tmpvar_11.y = dy_2.y;\\n  vec3 tmpvar_12;\\n  tmpvar_12 = ((mix (ret_5, vec3(3.0, 2.0, 1.0), \\n    ((texture (sampler_blur3, (tmpvar_10 - tmpvar_11)).xyz * scale3) + bias3)\\n  .xxx) * (vec3(1.0, 1.0, 1.0) - \\n    ((texture (sampler_blur2, (tmpvar_10 - dz_1)).xyz * scale2) + bias2)\\n  .xxx)) * (vec3(1.0, 1.0, 1.0) - vec3((1.5 * texture (sampler_main, tmpvar_10).x))));\\n  ret_5 = tmpvar_12;\\n  vec4 tmpvar_13;\\n  tmpvar_13.w = 1.0;\\n  tmpvar_13.xyz = tmpvar_12;\\n  ret = tmpvar_13.xyz;\\n }"}')},7855:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.35,"decay":1,"echo_zoom":2.144269,"echo_alpha":0.31,"echo_orient":3,"wave_mode":7,"wave_brighten":0,"wrap":0,"wave_a":4.1,"wave_scale":5.552,"wave_smoothing":0.504,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.999514,"cx":-1,"warp":0.72142,"sy":0.980296,"wave_g":0,"wave_b":0,"ob_size":0.5,"ob_r":1,"ib_size":0.5,"ib_r":1,"ib_g":0,"ib_b":0,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"sides":100,"textured":1,"y":0.9,"rad":0.15493,"tex_zoom":0.77977,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":5,"textured":1,"rad":0.98608,"tex_ang":3.14159,"tex_zoom":0.999794,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ang =sin(time/65) ;// ang + (bass*.2) + (time*.4);"},{"baseVals":{"sides":100,"textured":1,"x":0.9,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = sin(time) * .4 + .5;\\n\\n"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"spectrum":1,"usedots":1,"additive":1,"scaling":0.5033,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"bl = 3.8;\\nul = 7.9;\\nrate = 11.9;\\ncha = .01;\\n\\ngv = if(above(gv,bl),  if(below(gv,ul),  if(above(fps,rate),gv + cha,gv - cha),  ul-.1),bl+.1);\\n\\n\\n\\nmonitor = gv;\\n\\nwave_a = 0;\\n\\ntic = min(time - tin,1);\\ntin = time;\\n\\nra = 10;\\n\\n\\ntreb_avg = tic*(treb_avg*(1/tic - ra) + ra*treb);\\nmid_avg = tic*(mid_avg*(1/tic - ra) + ra*mid);\\nbass_avg = tic*(bass_avg*(1/tic - ra) + ra*bass);\\n\\nrb = 1;\\nvav = tic*(vav*(1/tic - rb) + rb*(bass+treb+mid)*.33333);\\nq1 = treb_avg;\\nq2 = mid_avg;\\nq3 = bass_avg;\\n\\ndb = bass - bass_avg;\\n\\nit = (it + tic)*below(it,1);\\n\\nrb = .5*(1/tic);\\nbvb = tic*(bass*rb + (1/tic-rb)*bvb);\\nbd = bass - bvb;\\n\\nvm = vm - tic + swi;\\nswi = above(bd - vm,0);\\n\\nq4 = 1-swi;\\n\\ncm = if(above(iter,30) + equal(time,0),rand(3) + 1,cm);\\niter = (iter + tic)*(1-above(iter,30));\\nq5 = if(equal(cm,0),3,cm);\\n\\ncma = if(above(itar,5) + equal(time,0),int(vav*5),cma);\\nitar = (itar + tic)*(1-above(itar,5));\\n\\nq6 = int(vav*5);\\n\\n\\ndecay=0.97;\\nzoom=1.01;\\nsx=1;sy=1;","pixel_eqs_eel":"warp = bass;","warp":" shader_body { \\n  vec3 ret_1;\\n  ret_1 = ((texture (sampler_main, uv_orig).xyz * vec3(0.97, 1.0, 0.97)) - vec3(0.03, 0.0, 0.03));\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_blur1, uv_orig);\\n  ret_1.z = (ret_1.z + ((\\n    (tmpvar_2.xyz * scale1)\\n   + bias1).z * 0.45));\\n  ret_1.x = (ret_1.x + ((\\n    ((tmpvar_2.xyz * scale1) + bias1)\\n  .z * 0.05) + (\\n    ((texture (sampler_blur3, uv_orig).xyz * scale3) + bias3)\\n  .z * 0.05)));\\n  ret_1.z = (ret_1.z - ret_1.x);\\n  ret_1.y = clamp (texture (sampler_pw_main, uv_orig).y, 0.0, 1.0);\\n  ret_1 = (ret_1 * 0.98);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_1;\\n  ret = tmpvar_3.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  vec3 tmpvar_2;\\n  tmpvar_2.z = 0.0;\\n  tmpvar_2.xy = texsize.zw;\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (tmpvar_2 * 2.5);\\n  ret_1 = (texture (sampler_main, uv).xyz * 0.5);\\n  ret_1 = (ret_1 + (vec3(3.4, 2.38, 1.02) * (\\n    dot (((texture (sampler_blur1, (uv + tmpvar_3.xz)).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29))\\n   - \\n    dot (((texture (sampler_blur1, (uv - tmpvar_3.xz)).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29))\\n  )));\\n  ret_1 = (ret_1 + (vec3(0.68, 1.7, 2.38) * (\\n    dot (((texture (sampler_blur1, (uv + tmpvar_3.zy)).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29))\\n   - \\n    dot (((texture (sampler_blur1, (uv - tmpvar_3.zy)).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29))\\n  )));\\n  ret_1 = (ret_1 * 1.5);\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = ret_1;\\n  ret = tmpvar_4.xyz;\\n }"}')},3693:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.35,"decay":1,"echo_zoom":2.144269,"echo_alpha":0.31,"echo_orient":3,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":1.285751,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.999514,"cx":-1,"warp":0.72142,"sy":0.980296,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.5,"ob_r":1,"ib_size":0.5,"ib_r":1,"ib_g":0,"ib_b":0,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"textured":1,"rad":1.791418,"tex_ang":0.628319,"g":1,"b":1,"a":0,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"spectrum":1,"usedots":1,"thick":1,"additive":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x = sample;\\ny = 0.01;\\na = value1*2;"},{"baseVals":{"spectrum":1,"usedots":1,"thick":1,"additive":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x = sample;\\ny = 0.99;\\na = value2*2;"},{"baseVals":{"samples":62,"usedots":1,"thick":1,"additive":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x = 1 - sample;\\ny = .5 + value1;"},{"baseVals":{"enabled":1,"thick":1,"additive":1,"scaling":0.891519,"smoothing":0.82,"r":0.380001,"g":0.72,"a":0.1},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"tm = time*.1;\\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\\n\\ntic = min(time - tin,1);\\ntin = time;\\n\\ntva = (tic*q1*.5);\\ntvb = (tic*q2*.5);\\ntvc = (tic*q3*.5);\\n\\nq1 = tva;\\nq2 = tvb;\\nq3 = tvc;\\n\\nsz = .3;\\nra = .1;\\nlen = if(above(q6,0),if(below(len,sz),len + ra*sz*tic,min(sz,len)),if(above(len,0),len - ra*sz*tic,max(0,len)));\\nt4 = len;","point_eqs_eel":"ang = 0;\\nlen = t4;\\nmad = .6;\\n\\nit = if(above(sample,0),(it+equal(lev,7)),1);\\nita = (ita + 1)*above(sample,0);\\n\\nmod = if(equal(it%2,0),1,  if(equal((it+1)%4,0),2,  if(equal((it+3)%8,0),3,  if(equal((it+7)%16,0),4,  if(equal((it+15)%32,0),5,  if(equal((it+31)%64,0),6,  if(equal((it+63)%128,0),7,7)  ))))));\\n\\nsw = sw - 1;\\nsw = if(equal(lev,7),mod,sw)*above(sample,0);\\n\\nlev = if(above(sample,0),if(above(sw,0),lev-1,lev+1),7);\\n\\na = equal(lev,7);\\n\\nar = if(above(sample,0),ar,1);\\nar = if(equal(lev,0),ar*-1,ar);\\nbr = if(above(sample,0),br,1);\\nbr = if(equal(lev,1),br*-1,br);\\ncr = if(above(sample,0),cr,1);\\ncr = if(equal(lev,2),cr*-1,cr);\\ndr = if(above(sample,0),dr,1);\\ndr = if(equal(lev,3),dr*-1,dr);\\ner = if(above(sample,0),er,1);\\ner = if(equal(lev,4),er*-1,er);\\nfr = if(above(sample,0),fr,1);\\nfr = if(equal(lev,5),fr*-1,fr);\\ngr = if(above(sample,0),gr,1);\\ngr = if(equal(lev,6),gr*-1,gr);\\n\\nmlev = lev*above(sample,0);\\n\\nswi = equal(q4,0)*equal(sample,0);\\n\\nha = if(swi,1-2*rand(2),ha);\\nhb = if(swi,1-2*rand(2),hb);\\nhc = if(swi,1-2*rand(2),hc);\\nhd = if(swi,1-2*rand(2),hd);\\nhe = if(swi,1-2*rand(2),he);\\nhf = if(swi,1-2*rand(2),hf);\\nhg = if(swi,1-2*rand(2),hg);\\n\\naang = if(above(sample,0),aang,aang + (q1*.8 + q2*.1 + q3*.1)*ha*1);\\nbang = if(above(sample,0),bang,bang + (q1*.57 + q2*.33 + q3*.1)*hb*1.33);\\ncang = if(above(sample,0),cang,cang + (q1*.33 + q2*.57 + q3*.1)*hc*1.67);\\ndang = if(above(sample,0),dang,dang + (q1*.1 + q2*.8 + q3*.1)*hd*2);\\neang = if(above(sample,0),eang,eang + (q1*.1 + q2*.57 + q3*.33)*he*2.33);\\nfang = if(above(sample,0),fang,fang + (q1*.1 + q2*.33 + q3*.57)*hf*2.67);\\ngang = if(above(sample,0),gang,gang + (q1*.1 + q2*.1 + q3*.8)*hg*3);\\n\\naang = 1.57;\\n\\nlen = len*mad;\\nx = .5 + above(lev,0)*sin(aang)*len*ar;\\ny = .5 + above(lev,0)*cos(aang)*len;\\n\\nan = (ar*aang + br*bang)*br;\\nlen = len*mad;\\nx = x + above(lev,1)*sin(an)*len*br;\\ny = y + above(lev,1)*cos(an)*len;\\n\\nan = (ar*aang + br*bang + cr*cang)*cr;\\nlen = len*mad;\\nx = x + above(lev,2)*sin(an)*len*cr;\\ny = y + above(lev,2)*cos(an)*len;\\n\\nan = (ar*aang + br*bang + cr*cang + dr*dang)*dr;\\nlen = len*mad;\\nx = x + above(lev,3)*sin(an)*len*dr;\\ny = y + above(lev,3)*cos(an)*len;\\n\\nan = (ar*aang + br*bang + cr*cang + dr*dang + er*eang)*er;\\nlen = len*mad;\\nx = x + above(lev,4)*sin(an)*len*er;\\ny = y + above(lev,4)*cos(an)*len;\\n\\nan = (ar*aang + br*bang + cr*cang + dr*dang + er*eang + fr*fang)*fr;\\nlen = len*mad;\\nx = x + above(lev,5)*sin(an)*len*fr;\\ny = y + above(lev,5)*cos(an)*len;\\n\\nan = (ar*aang + br*bang + cr*cang + dr*dang + er*eang + fr*fang + gr*gang)*gr;\\nlen = len*mad;\\nx = x + above(lev,6)*sin(an)*len*gr;\\ny = y + above(lev,6)*cos(an)*len;\\n\\nx = (x-.5)*.75 + .5;\\n\\na=0.1"}],"init_eqs_eel":"","frame_eqs_eel":"bl = 3.8;\\nul = 7.9;\\nrate = 11.9;\\ncha = .01;\\n\\ngv = if(above(gv,bl),  if(below(gv,ul),  if(above(fps,rate),gv + cha,gv - cha),  ul-.1),bl+.1);\\n\\n\\n\\nmonitor = gv;\\n\\nwave_a = 0;\\n\\ntic = min(time - tin,1);\\ntin = time;\\n\\nra = 10;\\n\\n\\ntreb_avg = tic*(treb_avg*(1/tic - ra) + ra*treb);\\nmid_avg = tic*(mid_avg*(1/tic - ra) + ra*mid);\\nbass_avg = tic*(bass_avg*(1/tic - ra) + ra*bass);\\n\\nrb = 1;\\nvav = tic*(vav*(1/tic - rb) + rb*(bass+treb+mid)*.33333);\\nq1 = treb_avg;\\nq2 = mid_avg;\\nq3 = bass_avg;\\n\\ndb = bass - bass_avg;\\n\\nit = (it + tic)*below(it,1);\\n\\nrb = .5*(1/tic);\\nbvb = tic*(bass*rb + (1/tic-rb)*bvb);\\nbd = bass - bvb;\\n\\nvm = vm - tic + swi;\\nswi = above(bd - vm,0);\\n\\nq4 = 1-swi;\\n\\ncm = if(above(iter,30) + equal(time,0),rand(3) + 1,cm);\\niter = (iter + tic)*(1-above(iter,30));\\nq5 = if(equal(cm,0),3,cm);\\n\\ncma = if(above(itar,5) + equal(time,0),int(vav*5),cma);\\nitar = (itar + tic)*(1-above(itar,5));\\n\\nq6 = int(vav*5);\\n\\n\\ndecay=0.97;\\nzoom=1.01;\\nsx=1;sy=1;","pixel_eqs_eel":"warp = bass;","warp":" shader_body { \\n  vec3 ret_1;\\n  ret_1 = ((texture (sampler_main, uv_orig).xyz * vec3(0.97, 1.0, 0.97)) - vec3(0.03, 0.0, 0.03));\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_blur1, uv_orig);\\n  ret_1.z = (ret_1.z + ((\\n    (tmpvar_2.xyz * scale1)\\n   + bias1).z * 0.45));\\n  ret_1.x = (ret_1.x + ((\\n    ((tmpvar_2.xyz * scale1) + bias1)\\n  .z * 0.05) + (\\n    ((texture (sampler_blur3, uv_orig).xyz * scale3) + bias3)\\n  .z * 0.05)));\\n  ret_1.z = (ret_1.z - ret_1.x);\\n  ret_1.y = clamp (texture (sampler_pw_main, uv_orig).y, 0.0, 1.0);\\n  ret_1 = (ret_1 * 0.98);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_1;\\n  ret = tmpvar_3.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  vec3 tmpvar_2;\\n  tmpvar_2.z = 0.0;\\n  tmpvar_2.xy = texsize.zw;\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (tmpvar_2 * 1.3);\\n  ret_1 = (texture (sampler_main, uv).xyz * 0.75);\\n  ret_1 = (ret_1 + (vec3(3.0, 2.1, 0.9) * (\\n    dot (((texture (sampler_blur1, (uv + tmpvar_3.xz)).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29))\\n   - \\n    dot (((texture (sampler_blur1, (uv - tmpvar_3.xz)).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29))\\n  )));\\n  ret_1 = (ret_1 + (vec3(0.6, 1.5, 2.1) * (\\n    dot (((texture (sampler_blur1, (uv + tmpvar_3.zy)).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29))\\n   - \\n    dot (((texture (sampler_blur1, (uv - tmpvar_3.zy)).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29))\\n  )));\\n  ret_1 = (pow (ret_1, vec3(1.2, 1.2, 1.2)) * 1.5);\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = ret_1;\\n  ret = tmpvar_4.xyz;\\n }"}')},187:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"wave_mode":7,"wave_brighten":0,"wave_a":0.005,"wave_scale":0.167,"wave_smoothing":0,"modwavealphastart":1,"modwavealphaend":1,"warpscale":0.107,"zoomexp":4.10046,"warp":0.01,"wave_x":0.95,"wave_y":1,"ob_size":0.005,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0,"ib_r":1,"ib_g":1,"ib_b":1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_b":0,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"sides":34,"thickoutline":1,"textured":1,"x":0.75,"rad":0.30478,"tex_ang":1.5708,"tex_zoom":0.82773,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"vx = 0;\\nvy = 0;","frame_eqs_eel":"rad = .3;\\ntex_zoom = .28;\\ntex_zoom = 1/rad*tex_zoom;\\n\\nx = .5 + sin(time*.957)*.1;"},{"baseVals":{"sides":74,"thickoutline":1,"textured":1,"x":0.25,"rad":0.45378,"tex_zoom":0.5033,"g":1,"b":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"rad = .3;\\ntex_zoom = .3;\\ntex_zoom = 1/rad*tex_zoom;\\n\\nx = .5 + sin(time)*.15;"},{"baseVals":{"enabled":1,"sides":84,"additive":1,"thickoutline":1,"num_inst":3,"rad":0.01,"tex_zoom":0.5033,"r":0,"b":0.2,"a":0.6,"g2":0,"border_a":0},"init_eqs_eel":"vx = 0;\\nvy = 0;","frame_eqs_eel":"ti = q2 + instance*2.45;\\n\\nx = .5 + (.26*sin(ti*.95) + .14*sin(ti*2.80))*1.3;\\n//y = .5 + (.26*cos(ti*1.05) + .14*cos(ti*2.13))*.5;\\ny = .5;\\n\\nym = (q3 + instance*1.33)*.5;\\nym = ym-int(ym);\\n\\ny = y + (ym-.5)*2;\\n\\nrad = bass*bass*.25;\\nrad = q1*(.3+max(0,y)*.5);"},{"baseVals":{"sides":74,"additive":1,"rad":0.16777,"r2":1,"g2":0,"a2":1,"border_b":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ti = -time*.3;\\nx = .5 + .3*sin(ti);\\ny = .5 + .3*cos(ti);\\n\\nti = -time*2.3;\\nx = x + .2*sin(ti);\\ny = y + .2*cos(ti);"}],"waves":[{"baseVals":{"enabled":1,"samples":41,"usedots":1,"additive":1,"scaling":0.01,"smoothing":0,"g":0},"init_eqs_eel":"t8 = 1;\\nt1 = q5;","frame_eqs_eel":"","point_eqs_eel":"x = rand(1001)*.001;\\ny = rand(1001)*.001;\\n\\n//r = rand(1001)*.001;\\ng=above(rand(1001)*.001,.9)*.5;\\nb = 0;\\nr = 0;\\n"},{"baseVals":{"samples":61,"additive":1,"scaling":0.0124,"smoothing":0,"b":0,"enabled":0},"init_eqs_eel":"t8 = 1;\\nt1 = q5;","frame_eqs_eel":"","point_eqs_eel":"x = (sample-.5)*.02 + .2;\\ny = .5;\\nr = 1;\\ng = 1;\\nb = 1;"},{"baseVals":{"samples":31,"usedots":1,"thick":1,"scaling":0.01303,"smoothing":0,"enabled":0},"init_eqs_eel":"t8 = 1;\\nt1 = q5;","frame_eqs_eel":"t1 = q5;\\nt2 = q4;\\nt3 = q6;","point_eqs_eel":"t8 = -t8;\\nd1 = 0.15 + t8*0.01 - value1*0.1*(t8+1);\\ndir1 = t2;\\ndir2 = t2*0.5 + t1*3/2 - t3*3;\\ndir3 = sample*asin(1)*4 + t3 - t2*5/6 + t1*3/2;\\n\\nx = 0.5 + sin(dir1)*0.1 + sin(dir2)*0.05 + sin(dir3)*d1;\\ny = 0.5 + cos(dir1)*0.1 + cos(dir2)*0.05 + cos(dir3)*d1;\\ny = (y-0.5)*1.2 + 0.5;"},{"baseVals":{"samples":511,"sep":4,"thick":1,"additive":1,"scaling":0.02345,"smoothing":0,"a":0.99,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\nab = 1;","frame_eqs_eel":"t1 = q4*0.75;\\nt2 = q5*0.75;\\nt3 = q6*0.75;\\nt4 = q4*0.75;\\nt5 = q5*0.75;\\nt6 = q6*0.75;\\nt8 = 1;","point_eqs_eel":"\\npi = asin(1);\\nn = 80;\\nt8 = -t8;\\nrd = 0.075+0.02*(t8+1)/2;\\nxx = sin(sample*pi*4)*0.5 + cos(sample*pi*n)*rd*sin(sample*pi*4);\\nyy = cos(sample*pi*4)*0.5 + cos(sample*pi*n)*rd*cos(sample*pi*4);\\nzz = sin(sample*pi*n)*rd;\\n\\nd = sqrt( xx*xx + yy*yy + zz*zz)*0.004;\\nd1 = 1;\\nxx = xx*d1;\\nyy = yy*d1;\\nzz = zz*d1;\\n\\n\\n\\n\\nw1 = d*t4;\\nw2 = d*t5;\\nw3 = d*t6;\\n\\ns1 = sin(t1*1+w1);\\ns2 = sin(t2*1+w2);\\ns3 = sin(t3*1+w3);\\nc1 = cos(t1*1+w1);\\nc2 = cos(t2*1+w2);\\nc3 = cos(t3*1+w3);\\n\\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\\n\\na = 0.5;\\nzoom = 0.5*atan2(a,a+z);//0.5*(1/(z+a));\\nx = 0.5 + zoom*x1;\\ny = 0.5 + zoom*y1;\\n\\npi3 = 3.1415*2*0.3333;\\nt = -z*2 - time*0.8;//sample*pi*4-0*time +t4*3;\\nc=2;\\nr = sin(t)*c;\\n\\ng = sin(t+pi3)*c;\\n\\nb = sin(t-pi3)*c;\\n\\nj = 0.71;\\n//r = 0.5+xx*j;\\n//g = 0.5+yy*j;\\n//b = 0.5+zz*j;\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\n\\na = sigmoid(-z,7)+0.;\\n"}],"init_eqs_eel":"","frame_eqs_eel":"zoom = 1;\\ndecay = 1;\\nwarp = 0;\\nwave_a = 0;\\n\\ntic = min(time-tin,.1);\\ntin = time;\\n\\ntb = tb + tic*bass*bass*.1 + tic*.2;\\nq2 = tb;\\n\\nt2 = t2 + tic*bass*bass*.2 + tic*.1;\\nq3 = t2;\\n\\nbav = bav + (bass-bav)*tic*.01;\\n\\nq1 = bass-bav;\\nq1 = pow(q1,2);\\nq1 = bass*bass;\\nq1 = q1*.5;\\n\\nmonitor = bass - bav;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  ret_1 = clamp (((texture (sampler_pw_main, uv_orig).xyz * vec3(1.0, 1.0, 0.97)) - vec3(0.0, 0.0, 0.001)), 0.0, 1.0);\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_pw_main, (uv_orig + ((\\n    (texture (sampler_noise_hq, fract(((\\n      ((uv_orig * texsize.xy) * texsize_noise_lq.zw)\\n     + rand_frame.xy) * 8.0))).xy - 0.5)\\n   * 6.0) * texsize.zw)));\\n  vec3 tmpvar_3;\\n  tmpvar_3 = tmpvar_2.xyz;\\n  float tmpvar_4;\\n  vec2 x_5;\\n  x_5 = (ret_1.xy - uv_orig);\\n  tmpvar_4 = sqrt(dot (x_5, x_5));\\n  float tmpvar_6;\\n  vec2 x_7;\\n  x_7 = (tmpvar_2.xy - uv_orig);\\n  tmpvar_6 = sqrt(dot (x_7, x_7));\\n  if ((tmpvar_4 > tmpvar_6)) {\\n    ret_1.xy = tmpvar_3.xy;\\n    ret_1.z = tmpvar_3.z;\\n  };\\n  ret_1.xy = (ret_1.xy * pow (ret_1.z, 0.01));\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = ret_1;\\n  ret = tmpvar_8.xyz;\\n }","comp":" shader_body { \\n  vec3 tmpvar_1;\\n  tmpvar_1 = texture (sampler_main, uv).zzz;\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ((pow (\\n    mix (vec3((((texture (sampler_blur1, uv).xyz * scale1) + bias1).z + ((texture (sampler_blur3, uv).xyz * scale3) + bias3).z)), tmpvar_1, tmpvar_1)\\n  , vec3(8.0, 2.0, 0.8)) * 1.25) - 0.25);\\n  ret = tmpvar_2.xyz;\\n }"}')},8861:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":0,"gammaadj":1,"decay":1,"echo_zoom":1.999894,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"brighten":1,"darken":1,"wave_a":0.001,"wave_scale":1.285751,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoomexp":0.9999,"zoom":0.999514,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.005,"ob_a":0.3,"ib_size":0.26,"mv_x":6.399996,"mv_y":4.800006,"mv_l":1,"mv_g":0.91,"mv_b":0.71,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":20,"rad":0.275918,"r":0,"a":0.08,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = q1;\\ny = 1-q2;\\n//a2=.05+(below(q1,.5)*.1);\\n//sides=10-(below(tan(time),.9)*6);"},{"baseVals":{"enabled":1,"sides":3,"textured":1,"rad":0.59958,"tex_ang":1.256637,"tex_zoom":0.01,"g":1,"a":0,"r2":1,"b2":1,"a2":0.85,"border_g":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = q1;\\ny = 1-q2;\\nang = .785398 - q6*50 - time*8;\\nrad = max(0.2 - q7*.1,0)*2*rad;\\n\\n\\nflux = sin(time*2.1);\\nflux = flux*above(flux,0.95);\\nflux = (flux-0.95) * 20; //normalize to 0-1;\\nflux = max(flux,0);\\nflux=pow(flux,1.3);\\n\\nrad = rad + flux*0.2"},{"baseVals":{"enabled":1,"sides":3,"additive":1,"textured":1,"rad":0.542619,"tex_zoom":0.01,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":1},"init_eqs_eel":"","frame_eqs_eel":"x = q1;\\ny = 1-q2;\\nang = -.261799 - q6*50 - time*8;\\nrad = max(0.2 - q7*.1,0)*2*rad;\\n\\nflux = sin(time*2.1);\\nflux = flux*above(flux,0.95);\\nflux = (flux-0.95) * 20; //normalize to 0-1;\\nflux = max(flux,0);\\nflux=pow(flux,1.3);\\n\\nrad = rad + flux*0.2\\n\\n\\n"},{"baseVals":{"enabled":1,"sides":6,"thickoutline":1,"textured":1,"rad":0.090529,"tex_zoom":0.819542,"g":1,"b":1,"r2":1,"b2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = q1;\\ny = 1-q2;\\nang = .261799 - q6*50;\\nrad = max(0.2 - q7*.1,0)*.7;\\n\\ntex_ang = time*8;\\n\\n\\nflux = sin(time*2.1);\\nflux = flux*above(flux,0.95);\\nflux = (flux-0.95) * 20; //normalize to 0-1;\\nflux = max(flux,0);\\nflux=pow(flux,1.3);\\n\\nrad = rad + flux*0.2"}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"sp = sample*6.283185;\\nx = .5 + sin(sp)*.45;\\ny = .5 + cos(sp)*.45;\\n\\ntm = time*.5 + sp;\\n\\nr = .75 + .25*sin(tm*1.178);\\ng = .75 + .25*sin(tm*1.152);\\nb = .75 + .25*sin(tm*1.102);\\n"},{"baseVals":{"sep":51,"usedots":1,"thick":1,"scaling":1.32735,"smoothing":0.82,"b":3,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1=sin(time*0.236)*0.5 + 0.5","point_eqs_eel":"it = (it+1)*below(it,5);\\nsw = if(equal(it,0),rand(2),sw);\\nrx = if(sw,rand(1001)*.001,rand(2));\\nry = if(sw,rand(2),rand(1001)*.001);\\n\\ntm = time*.5 + sample*2;\\n\\nvx = if(equal(it,0),rx,vx + sw*.002);\\nvy = if(equal(it,0),ry,vy +(1-sw)*.002);\\n\\nx = vx;\\ny = vy;\\n\\ntm= 1.11 + sample + t1*2;\\n\\nflux=sin(time)*0.5;\\nfluy=cos(time)*0.5;\\n\\nxfade = max(-abs(x-0.5 + flux) + 1 , 0);\\nxfade2= max(-abs(y-0.5 + fluy) + 1 , 0);\\nxfade = (xfade2+xfade)*0.5;\\n\\n\\nr1 = .5 + .5*sin(tm + 0.0);\\ng1 = .5 + .5*sin(tm + 2.1);\\nb1 = .5 + .5*sin(tm + 4.2);\\n\\nr=r1*xfade + g1*(1-xfade);\\ng=g1*xfade + b1*(1-xfade);\\nb=b1*xfade + r1*(1-xfade);\\n\\n\\n//r=xfade;g=xfade;b=xfade;\\n\\n"},{"baseVals":{"enabled":1,"sep":51,"usedots":1,"thick":1,"scaling":1.32735,"smoothing":0.82,"b":3},"init_eqs_eel":"","frame_eqs_eel":"t1=sin(time*0.236)*0.5 + 0.5","point_eqs_eel":"it = (it+1)*below(it,25);\\nsw = if(equal(it,0),rand(2),sw);\\nrx = if(sw,rand(1001)*.001,rand(2));\\nry = if(sw,rand(2),rand(1001)*.001);\\n\\ntm = time*.5 + sample*2;\\n\\nvx = if(equal(it,0),rx,vx + sw*.002);\\nvy = if(equal(it,0),ry,vy +(1-sw)*.002);\\n\\nx = vx;\\ny = vy;\\n\\ntm= 1.11 + sample + t1*2.0;\\n\\nflux=sin(time)*0.5;\\nfluy=cos(time)*0.5;\\n\\nxfade = max(-abs(x-0.5 + flux) + 1 , 0);\\nxfade2= max(-abs(y-0.5 + fluy) + 1 , 0);\\nxfade = (xfade2+xfade)*0.5;\\n\\n\\nr1 = .5 + .5*sin(tm + 0.0);\\ng1 = .5 + .5*sin(tm + 2.1);\\nb1 = .5 + .5*sin(tm + 4.2);\\n\\nr=r1*xfade + g1*(1-xfade);\\ng=g1*xfade + b1*(1-xfade);\\nb=b1*xfade + r1*(1-xfade);"},{"baseVals":{"spectrum":1,"usedots":1,"thick":1,"additive":1,"smoothing":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"tic = min(time-tir,.1);\\ntir = time;\\nt2 = tic;","point_eqs_eel":"sam = rand(1001)*.001;\\nsam = sample;\\nit = (it+1)*above(sam,0);\\nset = int(sam*6);\\nsp = sam*6 - int(sam*6) + equal(it,511);\\noff = .866025403;\\n\\nmx = equal(set,0)*(-.5 + sp) + equal(set,1)*(.5 + .5*sp) + equal(set,2)*(1-.5*sp) + equal(set,3)*(.5-sp) + equal(set,4)*(-.5 - sp*.5) + above(set,4)*(-1 + sp*.5);\\nmy = equal(set,0)*off + equal(set,1)*(1-sp)*off + equal(set,2)*-sp*off + equal(set,3)*-off + equal(set,4)*(-off + sp*off) + above(set,4)*(sp*off);\\n\\nzang = q6*50;\\nox = mx*cos(zang) - my*sin(zang);\\noy = mx*sin(zang) + my*cos(zang);\\nmx = ox;\\nmy = oy;\\n\\nrad = max(0.2 - q7*.1,0)*.5;\\nvol = max(1-(value1+value2)*.2,0.5);\\nrad = if(equal(it%2,0),rad*vol,rad);\\na = max(-.9 + vol,0);\\n\\nx = mx*rad;\\ny = my*rad;\\n\\nx = x*.75 + q1;\\ny = y + (1-q2);"}],"init_eqs_eel":"","frame_eqs_eel":"warp = 0;\\ndecay=.999;\\n//q1 = .1*tan(time);\\n//q1 = min(0.5,max(0.0,q1));\\n//q1 = q1+0.5;\\n\\nq1=sin(time);\\nq1sgn = sign(q1);\\nq1=abs(q1);\\nq1=pow(q1,6);\\nq1=q1*q1sgn;\\nq1=q1*0.4 + 0.5;\\n\\n\\n\\nq2 = .5 + .1*sin(time*.548);\\n\\ntic = min(time - tin,.1);\\ntin = time;\\n\\nra = 1;\\ntreb_avg = tic*(treb_avg*(1/tic - ra) + ra*treb);\\nmid_avg = tic*(mid_avg*(1/tic - ra) + ra*mid);\\nbass_avg = tic*(bass_avg*(1/tic - ra) + ra*bass);\\n\\nrb = 1;\\nvav = tic*(vav*(1/tic - rb) + rb*(bass+treb+mid)*.33333);\\n\\ntt = tt + tic*treb_avg;\\nmt = mt + tic*mid_avg;\\nbt = bt + tic*bass_avg;\\nvt = vt + tic*(treb_avg+mid_avg+bass_avg)*.33333;\\n\\nsp = abs(vav - slide)*.1;\\nslide = if(above(slide,vav),slide-tic*sp,slide+tic*sp) + (1-toc)*vav;\\ntoc = 1;\\n\\nq3 = (treb + bass + mid)*.3333;\\nq3 = q3*q3*0.5 + 0.1;\\nq3 = min(q3,1.0);\\n//q3=1.25;\\nmonitor = int(q3*4)/4;\\n\\nq4 = mt;\\nq5 = bt;\\n\\ncx = q1;\\ncy = q2;\\n\\nrmod = ((treb_avg + mid_avg)*.5 - bass_avg*0.5)*.01;\\nrmod = 0.02 * pow(rmod/0.02 , 2)*7;\\nrmod = min(0.001 , max(rmod, -0.001));\\nrmod=rmod*pow(sin(time)*1.1,2);\\nrot = 0.02 * pow(rmod/0.02 , 2) *40;\\n\\nq6 = rmod;\\n\\nq7 = slide - below(q3,.5)*(6 + 2*sin(time*24))*pow(min(1,(.5 - q3)*2),5);\\n\\nq8=if( above(sin(time*0.5),0) , -1 , 1);\\n\\n//echo_zoom=1+(above(treb,.8)+treb);","pixel_eqs_eel":"tm=time/rad;\\na = q1;\\nb = q2;\\n\\n//testcode\\n//a=0.0;b=0.5;\\n\\nmx = x-a;\\nmy = y-b;\\nzm = -.45;\\nzm= if( above(sin(time*2.1),0.95) , 0.45 * max(1-q3*.5,0) , zm);\\n\\n//test code\\n//zm= -0.5;\\n\\ndis = pow(mx*mx + my*my,.5)*.70710678;\\n\\nrot = rot*(1-dis);\\nrot=rot*20*q8 ;\\n\\n//testcode\\n//q3=3.1;\\n\\nlimit=0.05;\\n\\ndx = zm*mx*dis*cos(my*3.14)*q3;\\ndsign=sign(dx);\\ndx = dx -  ( max(abs(dx)-limit,0) )*dsign;\\n\\ndy = zm*my*dis*cos(mx*3.14)*q3;\\ndsign=sign(dy);\\ndy = dy -  ( max(abs(dy)-limit,0) )*dsign;","warp":"","comp":""}')},1668:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":5,"gammaadj":1.7,"decay":0.95,"echo_zoom":0.999608,"echo_alpha":0.5,"echo_orient":1,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"brighten":1,"darken":1,"invert":1,"wave_a":4.099998,"wave_scale":1.285751,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.999514,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"spectrum":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"sp = sample*6.28*8*8*4;\\nvol = (bass_att + mid_att + treb_att)*0.33;\\nvol = 0.2 + 0.5*(value1 + value2);\\nvol = .2;\\n\\nmod = if(below(mid_att,1.8),mid_att+.2,2);\\n\\nox = 0.5*sin(sp)*sin(sample*3.14)*vol;\\noy = (sample - 0)*mod;\\noz = 0.5*cos(sp)*sin(sample*3.14)*vol;\\n\\nxang = time*0.672;\\naxang = 0;\\nyang = time*-1.351;\\nayang = 0;\\nzang = time*-0.401;\\nazang = 0;\\nfov = 0.6 + 0.2*sin(time);\\nfov = .5;\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = -ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\noz = abs(oz) - 2;\\nx = ox*fov/oz + 0.5;\\nx = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;\\n\\nr = 1 + sin(sp);\\nb = 0.5 + 0.5*sin(sample*1.57);\\ng = 0.5 + 0.5*cos(sample*1.57);\\na = 0.5 + (oz + 2)*0.25;"},{"baseVals":{"enabled":1,"spectrum":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"sp = sample*6.28*8*8*4;\\nvol = (bass_att + mid_att + treb_att)*0.33;\\nvol = 0.2 + 0.5*(value1 + value2);\\nvol = .2;\\n\\nmod = if(below(bass_att,1.8),bass_att+.2,2);\\n\\nox = 0.5*sin(sp)*sin(sample*3.14)*vol;\\noy = (sample - 0)*mod;\\noz = 0.5*cos(sp)*sin(sample*3.14)*vol;\\n\\nxang = time*-0.321;\\naxang = 0;\\nyang = time*1.531;\\nayang = 0;\\nzang = time*-0.101;\\nazang = 0;\\nfov = 0.6 + 0.2*sin(time);\\nfov = .5;\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = -ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\noz = abs(oz) - 2;\\nx = ox*fov/oz + 0.5;\\nx = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;\\n\\ng = 1 + sin(sp);\\nr = 0.5 + 0.5*sin(sample*1.57);\\nb = 0.5 + 0.5*cos(sample*1.57);\\na = 0.5 + (oz + 2)*0.25;"},{"baseVals":{"enabled":1,"spectrum":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"sp = sample*6.28*8*8*4;\\nvol = (bass_att + mid_att + treb_att)*0.33;\\nvol = 0.2 + 0.5*(value1 + value2);\\nvol = .2;\\n\\nmod = if(below(treb_att,1.8),treb_att+.2,2);\\n\\nox = 0.5*sin(sp)*sin(sample*3.14)*vol;\\noy = (sample - 0)*mod;\\noz = 0.5*cos(sp)*sin(sample*3.14)*vol;\\n\\nxang = time*0.221;\\naxang = 0;\\nyang = time*-0.411;\\nayang = 0;\\nzang = time*1.201;\\nazang = 0;\\nfov = 0.6 + 0.2*sin(time);\\nfov = .5;\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = -ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\noz = abs(oz) - 2;\\nx = ox*fov/oz + 0.5;\\nx = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;\\n\\nb = 1+sin(sp);\\ng = 0.5 + 0.5*sin(sample*1.57);\\nr = 0.5 + 0.5*cos(sample*1.57);\\na = 0.5 + (oz + 2)*0.25;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_a = 0;","pixel_eqs_eel":"it = 0.3*sin(time*0.2);\\nradm = rad*0.5;\\nrot = 0.02*sin((radm+it)*20);\\nmod = sin(ang*5);\\nmod = mod*mod*mod*mod*mod;\\nzoom = 1 + abs(0.01*mod);","warp":"","comp":""}')},1979:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.35,"decay":0.95,"echo_zoom":0.999608,"echo_alpha":0.5,"echo_orient":1,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"invert":1,"wave_a":4.099998,"wave_scale":1.285751,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.999514,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"x":0.9,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"spectrum":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"sp = sample*6.28*8*8*4;\\nvol = (bass_att + mid_att + treb_att)*0.33;\\nvol = 0.2 + 0.5*(value1 + value2);\\nvol = .2;\\n\\nmod = if(below(mid_att,1.8),mid_att+.2,2);\\n\\nox = 0.5*sin(sp)*sin(sample*3.14)*vol;\\noy = (sample - 0)*mod;\\noz = 0.5*cos(sp)*sin(sample*3.14)*vol;\\n\\nxang = time*0.672;\\naxang = 0;\\nyang = time*-1.351;\\nayang = 0;\\nzang = time*-0.401;\\nazang = 0;\\nfov = 0.6 + 0.2*sin(time);\\nfov = .5;\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = -ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\noz = abs(oz) - 2;\\nx = ox*fov/oz + 0.5;\\nx = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;\\n\\nr = 1 - sin(sp);\\nb = 0.5 - 0.5*sin(sample*1.57);\\ng = 0.5 - 0.5*cos(sample*1.57);\\na = 0.5 + (oz + 2)*0.25;"},{"baseVals":{"enabled":1,"spectrum":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"sp = sample*6.28*8*8*4;\\nvol = (bass_att + mid_att + treb_att)*0.33;\\nvol = 0.2 + 0.5*(value1 + value2);\\nvol = .2;\\n\\nmod = if(below(bass_att,1.8),bass_att+.2,2);\\n\\nox = 0.5*sin(sp)*sin(sample*3.14)*vol;\\noy = (sample - 0)*mod;\\noz = 0.5*cos(sp)*sin(sample*3.14)*vol;\\n\\nxang = time*-0.321;\\naxang = 0;\\nyang = time*1.531;\\nayang = 0;\\nzang = time*-0.101;\\nazang = 0;\\nfov = 0.6 + 0.2*sin(time);\\nfov = .5;\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = -ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\noz = abs(oz) - 2;\\nx = ox*fov/oz + 0.5;\\nx = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;\\n\\ng = 1 - sin(sp);\\nr = 0.5 - 0.5*sin(sample*1.57);\\nb = 0.5 - 0.5*cos(sample*1.57);\\na = 0.5 + (oz + 2)*0.25;"},{"baseVals":{"enabled":1,"spectrum":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"sp = sample*6.28*8*8*4;\\nvol = (bass_att + mid_att + treb_att)*0.33;\\nvol = 0.2 + 0.5*(value1 + value2);\\nvol = .2;\\n\\nmod = if(below(treb_att,1.8),treb_att+.2,2);\\n\\nox = 0.5*sin(sp)*sin(sample*3.14)*vol;\\noy = (sample - 0)*mod;\\noz = 0.5*cos(sp)*sin(sample*3.14)*vol;\\n\\nxang = time*0.221;\\naxang = 0;\\nyang = time*-0.411;\\nayang = 0;\\nzang = time*1.201;\\nazang = 0;\\nfov = 0.6 + 0.2*sin(time);\\nfov = .5;\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = -ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\noz = abs(oz) - 2;\\nx = ox*fov/oz + 0.5;\\nx = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;\\n\\nb = 1-sin(sp);\\ng = 0.5 - 0.5*sin(sample*1.57);\\nr = 0.5 - 0.5*cos(sample*1.57);\\na = 0.5 + (oz + 2)*0.25;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_a = 0;\\ndecay=.995;","pixel_eqs_eel":"it = 0.3*sin(time*0.2);\\nradm = rad*0.5;\\nrot = 0.02*sin((radm+it)*30)*rad;\\nmod = sin(ang*5);\\nmod = mod*mod*mod*mod*mod;\\nzoom = 1 + abs(0.01*mod);","warp":" shader_body { \\n  vec3 ret_1;\\n  ret_1 = (texture (sampler_main, uv).xyz * 0.97);\\n  ret_1 = (ret_1 - 0.004);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ret_1;\\n  ret = tmpvar_2.xyz;\\n }","comp":" shader_body { \\n  vec3 d_1;\\n  vec3 ret_2;\\n  ret_2 = (texture (sampler_main, uv).xyz + 0.15);\\n  vec3 tmpvar_3;\\n  tmpvar_3.z = 0.0;\\n  tmpvar_3.xy = texsize.zw;\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (tmpvar_3 * 1.3);\\n  ret_2 = (ret_2 * 0.5);\\n  ret_2 = (ret_2 + (vec3(3.0, 2.1, 0.9) * (\\n    dot (((texture (sampler_blur1, (uv + tmpvar_4.xz)).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29))\\n   - \\n    dot (((texture (sampler_blur1, (uv - tmpvar_4.xz)).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29))\\n  )));\\n  ret_2 = (ret_2 + (vec3(0.6, 1.5, 2.1) * (\\n    dot (((texture (sampler_blur1, (uv + tmpvar_4.zy)).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29))\\n   - \\n    dot (((texture (sampler_blur1, (uv - tmpvar_4.zy)).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29))\\n  )));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = (1.0 - uv.x);\\n  tmpvar_5.y = uv.y;\\n  ret_2 = (ret_2 + texture (sampler_main, tmpvar_5).xyz);\\n  vec3 tmpvar_6;\\n  tmpvar_6.z = 0.0;\\n  tmpvar_6.xy = texsize.zw;\\n  d_1 = (tmpvar_6 * 1.3);\\n  ret_2 = (ret_2 * 0.5);\\n  ret_2 = (ret_2 + (vec3(3.0, 2.1, 0.9) * (\\n    dot (((texture (sampler_blur1, (tmpvar_5 - d_1.xz)).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29))\\n   - \\n    dot (((texture (sampler_blur1, (tmpvar_5 + d_1.xz)).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29))\\n  )));\\n  ret_2 = (ret_2 + (vec3(0.6, 1.5, 2.1) * (\\n    dot (((texture (sampler_blur1, (tmpvar_5 + d_1.zy)).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29))\\n   - \\n    dot (((texture (sampler_blur1, (tmpvar_5 - d_1.zy)).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29))\\n  )));\\n  ret_2 = (ret_2 * 1.5);\\n  vec4 tmpvar_7;\\n  tmpvar_7.w = 1.0;\\n  tmpvar_7.xyz = ret_2;\\n  ret = tmpvar_7.xyz;\\n }"}')},5630:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"wave_mode":7,"wave_brighten":0,"wave_a":0.005,"wave_scale":0.167,"wave_smoothing":0,"modwavealphastart":1,"modwavealphaend":1,"warpscale":0.107,"zoomexp":4.10046,"warp":0.01,"wave_x":0.95,"wave_y":1,"ob_size":0.005,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0,"ib_r":1,"ib_g":1,"ib_b":1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_b":0,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":34,"thickoutline":1,"x":0.75,"rad":0.30478,"tex_ang":1.5708,"tex_zoom":0.82773,"a":0.03,"r2":1,"g2":0,"border_a":0},"init_eqs_eel":"vx = 0;\\nvy = 0;","frame_eqs_eel":"x = rand(1001)/1000;\\n//x = \\ny = -.5;\\n\\nrad = rand(1001)/1000;\\nrad = .5 + rad*2;"},{"baseVals":{"sides":74,"thickoutline":1,"textured":1,"x":0.25,"rad":0.45378,"tex_zoom":0.5033,"g":1,"b":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"rad = .3;\\ntex_zoom = .3;\\ntex_zoom = 1/rad*tex_zoom;\\n\\nx = .5 + sin(time)*.15;"},{"baseVals":{"enabled":1,"sides":84,"additive":1,"thickoutline":1,"num_inst":3,"rad":0.01,"tex_zoom":0.5033,"r":0,"b":0.2,"a":0.6,"g2":0,"border_a":0},"init_eqs_eel":"vx = 0;\\nvy = 0;","frame_eqs_eel":"ti = q2 + instance*2.45;\\n\\nx = .5 + (.26*sin(ti*.95) + .14*sin(ti*2.80))*1.3;\\n//y = .5 + (.26*cos(ti*1.05) + .14*cos(ti*2.13))*.5;\\ny = .5;\\n\\nym = (q3 + instance*1.33)*.5;\\nym = ym-int(ym);\\n\\ny = y - (ym-.5)*2;\\n\\nrad = bass*bass*.25;\\nrad = q1*(.5+max(0,1-y)*.3);"},{"baseVals":{"sides":74,"additive":1,"rad":0.16777,"r2":1,"g2":0,"a2":1,"border_b":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ti = -time*.3;\\nx = .5 + .3*sin(ti);\\ny = .5 + .3*cos(ti);\\n\\nti = -time*2.3;\\nx = x + .2*sin(ti);\\ny = y + .2*cos(ti);"}],"waves":[{"baseVals":{"enabled":1,"samples":41,"usedots":1,"additive":1,"scaling":0.01,"smoothing":0,"g":0},"init_eqs_eel":"t8 = 1;\\nt1 = q5;","frame_eqs_eel":"","point_eqs_eel":"x = rand(1001)*.001;\\ny = rand(1001)*.001;\\n\\n//r = rand(1001)*.001;\\ng=above(rand(1001)*.001,.9)*.5;\\nb = 0;\\nr = 0;\\n"},{"baseVals":{"samples":61,"additive":1,"scaling":0.0124,"smoothing":0,"b":0,"enabled":0},"init_eqs_eel":"t8 = 1;\\nt1 = q5;","frame_eqs_eel":"","point_eqs_eel":"x = (sample-.5)*.02 + .2;\\ny = .5;\\nr = 1;\\ng = 1;\\nb = 1;"},{"baseVals":{"samples":31,"usedots":1,"thick":1,"scaling":0.01303,"smoothing":0,"enabled":0},"init_eqs_eel":"t8 = 1;\\nt1 = q5;","frame_eqs_eel":"t1 = q5;\\nt2 = q4;\\nt3 = q6;","point_eqs_eel":"t8 = -t8;\\nd1 = 0.15 + t8*0.01 - value1*0.1*(t8+1);\\ndir1 = t2;\\ndir2 = t2*0.5 + t1*3/2 - t3*3;\\ndir3 = sample*asin(1)*4 + t3 - t2*5/6 + t1*3/2;\\n\\nx = 0.5 + sin(dir1)*0.1 + sin(dir2)*0.05 + sin(dir3)*d1;\\ny = 0.5 + cos(dir1)*0.1 + cos(dir2)*0.05 + cos(dir3)*d1;\\ny = (y-0.5)*1.2 + 0.5;"},{"baseVals":{"samples":511,"sep":4,"thick":1,"additive":1,"scaling":0.02345,"smoothing":0,"a":0.99,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\nab = 1;","frame_eqs_eel":"t1 = q4*0.75;\\nt2 = q5*0.75;\\nt3 = q6*0.75;\\nt4 = q4*0.75;\\nt5 = q5*0.75;\\nt6 = q6*0.75;\\nt8 = 1;","point_eqs_eel":"\\npi = asin(1);\\nn = 80;\\nt8 = -t8;\\nrd = 0.075+0.02*(t8+1)/2;\\nxx = sin(sample*pi*4)*0.5 + cos(sample*pi*n)*rd*sin(sample*pi*4);\\nyy = cos(sample*pi*4)*0.5 + cos(sample*pi*n)*rd*cos(sample*pi*4);\\nzz = sin(sample*pi*n)*rd;\\n\\nd = sqrt( xx*xx + yy*yy + zz*zz)*0.004;\\nd1 = 1;\\nxx = xx*d1;\\nyy = yy*d1;\\nzz = zz*d1;\\n\\n\\n\\n\\nw1 = d*t4;\\nw2 = d*t5;\\nw3 = d*t6;\\n\\ns1 = sin(t1*1+w1);\\ns2 = sin(t2*1+w2);\\ns3 = sin(t3*1+w3);\\nc1 = cos(t1*1+w1);\\nc2 = cos(t2*1+w2);\\nc3 = cos(t3*1+w3);\\n\\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\\n\\na = 0.5;\\nzoom = 0.5*atan2(a,a+z);//0.5*(1/(z+a));\\nx = 0.5 + zoom*x1;\\ny = 0.5 + zoom*y1;\\n\\npi3 = 3.1415*2*0.3333;\\nt = -z*2 - time*0.8;//sample*pi*4-0*time +t4*3;\\nc=2;\\nr = sin(t)*c;\\n\\ng = sin(t+pi3)*c;\\n\\nb = sin(t-pi3)*c;\\n\\nj = 0.71;\\n//r = 0.5+xx*j;\\n//g = 0.5+yy*j;\\n//b = 0.5+zz*j;\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\n\\na = sigmoid(-z,7)+0.;\\n"}],"init_eqs_eel":"","frame_eqs_eel":"zoom = 1;\\ndecay = 1;\\nwarp = 0;\\nwave_a = 0;\\n\\ntic = min(time-tin,.1);\\ntin = time;\\n\\ntb = tb + tic*bass*bass*.1 + tic*.2;\\nq2 = tb;\\n\\nt2 = t2 + tic*bass*bass*.2 + tic*.1;\\nq3 = t2;\\n\\nbav = bav + (bass-bav)*tic*.01;\\n\\nq1 = bass-bav;\\nq1 = pow(q1,2);\\nq1 = bass*bass;\\nq1 = min(q1*.5,2);\\n\\nmonitor = bass - bav;","pixel_eqs_eel":"//zoom = pow(rad,2)+.01;","warp":" shader_body { \\n  vec3 ret_1;\\n  ret_1 = clamp (((texture (sampler_pw_main, uv_orig).xyz * vec3(1.0, 1.0, 0.97)) - vec3(0.0, 0.0, 0.001)), 0.0, 1.0);\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_pw_main, (uv_orig + ((\\n    (texture (sampler_noise_hq, (((\\n      (uv_orig * texsize.xy)\\n     * texsize_noise_hq.zw) + rand_frame.xy) * 8.0)).xy - 0.5)\\n   * 6.0) * texsize.zw)));\\n  vec3 tmpvar_3;\\n  tmpvar_3 = tmpvar_2.xyz;\\n  float tmpvar_4;\\n  vec2 x_5;\\n  x_5 = (ret_1.xy - uv_orig);\\n  tmpvar_4 = sqrt(dot (x_5, x_5));\\n  float tmpvar_6;\\n  vec2 x_7;\\n  x_7 = (tmpvar_2.xy - uv_orig);\\n  tmpvar_6 = sqrt(dot (x_7, x_7));\\n  if ((tmpvar_4 > tmpvar_6)) {\\n    ret_1.xy = tmpvar_3.xy;\\n    ret_1.z = tmpvar_3.z;\\n  };\\n  ret_1.xy = (ret_1.xy * pow (ret_1.z, 0.01));\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = ret_1;\\n  ret = tmpvar_8.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  vec3 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv).zzz;\\n  ret_1 = ((pow (\\n    mix (vec3((((texture (sampler_blur1, uv).xyz * scale1) + bias1).z + ((texture (sampler_blur3, uv).xyz * scale3) + bias3).z)), tmpvar_2, tmpvar_2)\\n  , vec3(0.8, 2.0, 8.0)) * 1.25) - 0.25);\\n  ret_1 = (ret_1 * ((\\n    (texture (sampler_blur2, (uv + vec2(0.0, 0.01))).xyz * scale2)\\n   + bias2).y * 1.2));\\n  ret_1 = (ret_1 * 2.0);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_1;\\n  ret = tmpvar_3.xyz;\\n }"}')},9693:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":0,"gammaadj":1.98,"decay":0.95,"echo_zoom":0.741631,"echo_alpha":0.5,"echo_orient":1,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"invert":1,"wave_a":4.099998,"wave_scale":1.157176,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoomexp":0.842831,"fshader":1,"zoom":0.970113,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.05,"ob_r":0.01,"ob_a":0.004,"ib_size":0.26,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":74,"thickoutline":1,"textured":1,"x":0.8,"y":0.2,"rad":0.608571,"tex_ang":3.141593,"tex_zoom":0.756813,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_b":0,"border_a":0},"init_eqs_eel":"t1 = rand(100)*0.01;\\nt2 = rand(100)*0.01;\\nte = 1;\\npoly = 5;","frame_eqs_eel":"ang = -q1;"},{"baseVals":{"enabled":1,"sides":74,"thickoutline":1,"textured":1,"x":0.2,"y":0.8,"rad":0.608571,"tex_ang":3.141593,"tex_zoom":0.756813,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_b":0,"border_a":0},"init_eqs_eel":"t1 = rand(100)*0.01;\\nt2 = rand(100)*0.01;\\nte = 1;\\npoly = 5;","frame_eqs_eel":"ang = -q1;"},{"baseVals":{"enabled":1,"sides":74,"thickoutline":1,"textured":1,"x":0.2,"y":0.2,"rad":0.608571,"tex_ang":3.141593,"tex_zoom":0.756813,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_b":0,"border_a":0},"init_eqs_eel":"t1 = rand(100)*0.01;\\nt2 = rand(100)*0.01;\\nte = 1;\\npoly = 5;","frame_eqs_eel":"ang = q1;"},{"baseVals":{"enabled":1,"sides":74,"thickoutline":1,"textured":1,"x":0.8,"y":0.8,"rad":0.608571,"tex_ang":3.141593,"tex_zoom":0.756813,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_b":0,"border_a":0},"init_eqs_eel":"t1 = rand(100)*0.01;\\nt2 = rand(100)*0.01;\\nte = 1;\\npoly = 5;","frame_eqs_eel":"ang = q1;"}],"waves":[{"baseVals":{"spectrum":1,"usedots":1,"smoothing":0,"r":0,"g":0,"b":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"tic = min(time-tir,.1);\\ntir = time;\\nti = ti + tic*.5 + below(vr+vg+vb,.4)*tic*8;\\n\\n\\nvr = .75 + .25*sin(ti*1.132 + 1);\\nvg = .75 + .25*sin(ti*1.121 + 1);\\nvb = .75 + .25*sin(ti*1.187 + 1);\\nar=vr;\\nag=vg;\\nab=vb;","point_eqs_eel":"sp = sample*10;\\nti = time;\\n\\n\\nox = (rand(1001)*.001 + rand(1001)*.001 - rand(1001)*.001 - rand(1001)*.001);\\noy = (rand(1001)*.001 + rand(1001)*.001 - rand(1001)*.001 - rand(1001)*.001);\\noz = (rand(1001)*.001 + rand(1001)*.001 - rand(1001)*.001 - rand(1001)*.001);\\n\\ndis = pow(ox*ox + oy*oy + oz*oz,.5);\\n\\nox = sign(ox)*pow(ox,4)*2;\\noy = sign(oy)*pow(oy,4)*2;\\noz = sign(oz)*pow(oz,4)*2;\\n\\na = (1.732 - dis)*.57735;\\n\\nxang = q2;\\nyang = q3;\\nzang = q4;\\n\\nfov = .5;\\n\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = -ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\nox = mx;\\noy = my;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\noz = (oz - int(oz*.2)*5 - 5)*2;\\nx = ox*fov/oz + 0.5;\\nx = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;\\n\\n"},{"baseVals":{"spectrum":1,"usedots":1,"smoothing":0,"r":0,"g":0,"b":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"tic = min(time-tir,.1);\\ntir = time;\\nti = ti + tic*.5 + below(vr+vg+vb,.4)*tic*8;\\n\\n\\nvr = .75 + .25*sin(ti*1.132 + 1);\\nvg = .75 + .25*sin(ti*1.121 + 1);\\nvb = .75 + .25*sin(ti*1.187 + 1);\\nar=vr;\\nag=vg;\\nab=vb;","point_eqs_eel":"sp = sample*10;\\nti = time;\\n\\n\\nox = (rand(1001)*.001 + rand(1001)*.001 - rand(1001)*.001 - rand(1001)*.001);\\noy = (rand(1001)*.001 + rand(1001)*.001 - rand(1001)*.001 - rand(1001)*.001);\\noz = (rand(1001)*.001 + rand(1001)*.001 - rand(1001)*.001 - rand(1001)*.001);\\n\\ndis = pow(ox*ox + oy*oy + oz*oz,.5);\\n\\nox = sign(ox)*pow(ox,4)*2;\\noy = sign(oy)*pow(oy,4)*2;\\noz = sign(oz)*pow(oz,4)*2;\\n\\na = (1.732 - dis)*.57735;\\n\\nxang = q2;\\nyang = q3;\\nzang = q4;\\n\\nfov = .5;\\n\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = -ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\nox = mx;\\noy = my;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\noz = (oz - int(oz*.2)*5 - 5)*2;\\nx = ox*fov/oz + 0.5;\\nx = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;\\n\\n"},{"baseVals":{"spectrum":1,"usedots":1,"smoothing":0,"r":0,"g":0,"b":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"tic = min(time-tir,.1);\\ntir = time;\\nti = ti + tic*.5 + below(vr+vg+vb,.4)*tic*8;\\n\\n\\nvr = .75 + .25*sin(ti*1.132 + 1);\\nvg = .75 + .25*sin(ti*1.121 + 1);\\nvb = .75 + .25*sin(ti*1.187 + 1);\\nar=vr;\\nag=vg;\\nab=vb;","point_eqs_eel":"sp = sample*10;\\nti = time;\\n\\n\\nox = (rand(1001)*.001 + rand(1001)*.001 - rand(1001)*.001 - rand(1001)*.001);\\noy = (rand(1001)*.001 + rand(1001)*.001 - rand(1001)*.001 - rand(1001)*.001);\\noz = (rand(1001)*.001 + rand(1001)*.001 - rand(1001)*.001 - rand(1001)*.001);\\n\\ndis = pow(ox*ox + oy*oy + oz*oz,.5);\\n\\nox = sign(ox)*pow(ox,3)*8;\\noy = sign(oy)*pow(oy,3)*8;\\noz = sign(oz)*pow(oz,3)*8;\\n\\na = (1.732 - dis)*.57735;\\n\\nxang = q2;\\nyang = q3;\\nzang = q4;\\n\\nfov = .5;\\n\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = -ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\nox = mx;\\noy = my;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\noz = (oz - int(oz*.2)*5 - 5)*2;\\nx = ox*fov/oz + 0.5;\\nx = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;\\n\\n"},{"baseVals":{"enabled":1,"spectrum":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ra = .7;\\nrb = .1;\\npib = 6.28318530718;\\n\\ntic = min(time-tin,.1);\\ntin = if(equal(sample,0),time,tin);\\n\\nmod = pow(pib,21);\\nmed = 1;\\n\\nsp = sample*pib*mod + time*1;\\nsam = sample*med - q7;\\n\\nox = ra*sin(sam*pib);\\noy = ra*cos(sam*pib);\\nox = ox + rb*-cos(sp)*sin(sam*pib);\\noz = rb*-sin(sp);\\noy = oy + rb*-cos(sp)*cos(sam*pib);\\n\\n\\na = .5 + .5*cos(sample*pib*3 + pib*.5);\\n\\nxang = q2;\\nyang = q3;\\nzang = q4;\\nfov = .5;\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = -ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\noz = oz - 2;\\nx = ox*fov/oz + 0.5;\\nx = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;\\n"}],"init_eqs_eel":"","frame_eqs_eel":"wave_a = 0;\\n\\ntic = min(time-tin,.1);\\ntin = time;\\n\\nra = 10;\\ntreb_avg = tic*(treb_avg*(1/tic - ra) + ra*treb);\\nmid_avg = tic*(mid_avg*(1/tic - ra) + ra*mid);\\nbass_avg = tic*(bass_avg*(1/tic - ra) + ra*bass);\\nvav = tic*(vav*(1/tic - ra) + ra*(bass+treb+mid)*.33333);\\n\\ntt = tt + tic*treb_avg;\\nmt = mt + tic*mid_avg;\\nbt = bt + tic*bass_avg;\\nvt = vt + tic*vav;\\n\\nsp = abs(vav - slide)*.1;\\n\\nslide = if(above(slide,vav),slide-tic*sp,slide+tic*sp);\\nslide = 1.4;\\n\\nq1 = vt*.5;\\nq2 = tt*.1;\\nq3 = mt*.1;\\nq4 = bt*.1;\\nq5 = .5*slide;\\nq7 = vt*.1;\\nq8 = time*.1;\\ndecay = 1;","pixel_eqs_eel":"","warp":"","comp":""}')},9111:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1,"decay":0.5,"echo_zoom":1,"echo_orient":3,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"red_blue":1,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.99951,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"ib_r":1,"ib_g":1,"ib_b":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":20,"num_inst":1024,"rad":0.01,"tex_zoom":0.26465,"r":0.2,"b":0.7,"a":0.24,"r2":1,"g2":0,"b2":1,"a2":0.1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_eel":"//samples = 256 + 50*sin(time*.939493949);\\n//num_inst = 256 + 50*sin(time*.939493949);\\n//samples = .5 + sin(time*.939493949);\\nnum_inst = .5 + sin(time*.939493949);","frame_eqs_eel":"\\nsample = instance/1024;\\n//num_inst = .5 + sin(time*.939493949);\\ntm = q1;\\nsp = sample*6.28*8*6*sin(time)*100;\\n\\nvol = (value1+value2)*.5;\\nit = it*above(sample,0);\\nit = it + 1;\\n//rad = .5 + vol + .01;\\nrad2=1.3;\\nra = rad2*sin(sample*3.14);\\nox = ra*sin(sp);\\noy = sin(sample*3.14-1.57)*rad2;\\noz = ra*cos(sp);\\n\\nxang = q4;\\nyang = q5;\\nzang = q6;\\nfov = .5;\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = - ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\nyang = q8;\\noz = oz + 5;\\nrad=rad*instance*.0041;//3d\\n\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = - ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\n\\noz = oz - 5;\\n\\noz = oz - 2;\\nx = ox*fov/oz + 0.5;\\nx = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;\\n"},{"baseVals":{"enabled":1,"sides":32,"additive":1,"thickoutline":1,"num_inst":33,"r":0,"g":0.5,"g2":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"trans = rand(int(q30))/15+instance-instance;\\ntrans2 = rand(int(q30))/15+instance-instance;\\ntrans3 = rand(int(q30))/15+instance-instance;\\na = trans;\\n\\nx = .5 + int(rand(15))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\\ny = .5 + int(rand(15))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\\nrad = .09 + rand(int(q30))/15+instance-instance;\\nr=rand(q30)*.1+instance-instance;\\ng=rand(q30)*.1+instance-instance;\\nb=rand(q30)*.1+instance-instance;\\nr2=rand(q30)*.1+instance-instance;\\ng2=rand(q30)*.1+instance-instance;\\nb2=rand(q30)*.1+instance-instance;\\nborder_r=rand(q30)*.1+instance-instance;\\nborder_g=rand(q30)*.1+instance-instance;\\nborder_b=rand(q30)*.1+instance-instance;"},{"baseVals":{"enabled":1,"sides":100,"textured":1,"num_inst":7,"rad":0.03333,"r":0,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = int(rand(100))*.01+instance-instance;\\ny = int(rand(100))*.01+instance-instance;\\n\\na =1;\\nvol=bass+mid+treb;\\nrad = int(rand(int(vol)))/7+instance-instance;"},{"baseVals":{"enabled":1,"sides":3,"thickoutline":1,"textured":1,"num_inst":311,"rad":0.01,"tex_ang":0.62832,"r":0,"g2":0,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*tan(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=1-mx;\\ny=1-my;\\n\\nang=(sin(time*.35)+1)*3;\\n//a=(above(bass+mid+treb,.8));\\npi23=4*asin(1)*.333333333;\\nt1=bass+mid+treb;"}],"waves":[{"baseVals":{"spectrum":1,"usedots":1,"smoothing":0,"g":0.1,"b":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"vol = (bass_att + mid_att + treb_att)*.333333;\\nvol_avg = .1*(vol_avg*9 + vol);\\nvg = vol_avg*.1;\\nt1 = if(above(vg,1.8),1.8,vg);","point_eqs_eel":"tm = q1;\\nsp = sample*6.28*8*6;\\n\\nvol = (value1+value2)*.5;\\nit = it*above(sample,0);\\nit = it + 1;\\nrad = .5 + vol;\\nra = rad*sin(sample*3.14);\\nox = ra*sin(sp);\\noy = sin(sample*3.14-1.57)*rad;\\noz = ra*cos(sp);\\n\\nxang = q4;\\nyang = q5;\\nzang = q6;\\nfov = .5;\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = - ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\nyang = q8;\\noz = oz + 5;\\n\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = - ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\n\\noz = oz - 5;\\n\\noz = oz - 2;\\nx = ox*fov/oz + 0.5;\\nx = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;\\n"},{"baseVals":{"spectrum":1,"usedots":1,"smoothing":0,"r":0,"g":0.5,"b":0.5,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"vol = (bass_att + mid_att + treb_att)*.333333;\\nvol_avg = .1*(vol_avg*9 + vol);\\nvg = vol_avg*.1;\\nt1 = if(above(vg,1.8),1.8,vg);","point_eqs_eel":"tm = q1;\\nsp = sample*6.28*8*6;\\n\\nvol = (value1+value2)*.5;\\nit = it*above(sample,0);\\nit = it + 1;\\nrad = .5 + vol;\\nra = rad*sin(sample*3.14);\\nox = ra*sin(sp);\\noy = sin(sample*3.14-1.57)*rad;\\noz = ra*cos(sp);\\n\\nxang = q4;\\nyang = q5;\\nzang = q6;\\nfov = .5;\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = - ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\nyang = -q8;\\noz = oz + 5;\\n\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = - ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\n\\noz = oz - 5;\\n\\noz = oz - 2;\\nx = ox*fov/oz + 0.5;\\nx = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;\\n"},{"baseVals":{"enabled":1,"samples":102,"spectrum":1,"thick":1,"additive":1,"smoothing":0,"g":0.1,"b":0.1},"init_eqs_eel":"","frame_eqs_eel":"samples = 256 + 50*sin(time*.939493949);\\nvol = (bass_att + mid_att + treb_att)*.333333;\\nvol_avg = .1*(vol_avg*9 + vol);\\nvg = vol_avg*.1;\\nt1 = if(above(vg,1.8),1.8,vg);","point_eqs_eel":"tm = q1;\\nsp = sample*6.28*8*6*sin(time)*100;\\n\\nvol = (value1+value2)*.5;\\nit = it*above(sample,0);\\nit = it + 1;\\n//rad = .5 + vol + .01;\\nrad=1;\\nra = rad*sin(sample*3.14);\\nox = ra*sin(sp);\\noy = sin(sample*3.14-1.57)*rad;\\noz = ra*cos(sp);\\n\\nxang = q4;\\nyang = q5;\\nzang = q6;\\nfov = .5;\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = - ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\nyang = q8;\\noz = oz + 5;\\n\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = - ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\n\\noz = oz - 5;\\n\\noz = oz - 2;\\nx = ox*fov/oz + 0.5;\\nx = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;\\n"},{"baseVals":{"spectrum":1,"usedots":1,"smoothing":0,"r":0,"g":0.5,"b":0.5,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"vol = (bass_att + mid_att + treb_att)*.333333;\\nvol_avg = .1*(vol_avg*9 + vol);\\nvg = vol_avg*.1;\\nt1 = if(above(vg,1.8),1.8,vg);","point_eqs_eel":"tm = q1;\\nsp = sample*6.28*8*6;\\n\\nvol = (value1+value2)*.5;\\nit = it*above(sample,0);\\nit = it + 1;\\nrad = .5 + vol + .01;\\nra = rad*sin(sample*3.14);\\nox = ra*sin(sp);\\noy = sin(sample*3.14-1.57)*rad;\\noz = ra*cos(sp);\\n\\nxang = q4;\\nyang = q5;\\nzang = q6;\\nfov = .5;\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = - ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\nyang = -q8;\\noz = oz + 5;\\n\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = - ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\n\\noz = oz - 5;\\n\\noz = oz - 2;\\nx = ox*fov/oz + 0.5;\\nx = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;\\n"}],"init_eqs_eel":"","frame_eqs_eel":"chng=sin(time*.5);\\ncthr=.9999;\\nmq21=if(above(chng,cthr),rand(3),mq21);\\nmq22=if(above(chng,cthr),rand(3),mq22);\\nmq23=if(above(chng,cthr),rand(3),mq23);\\nmq24=if(above(chng,cthr),rand(2),mq24);\\nmq25=if(above(chng,cthr),rand(2),mq25);\\nmq26=if(above(chng,cthr),rand(2),mq26);\\nmq27=if(above(chng,cthr),rand(1),mq27);\\nmq28=if(above(chng,cthr),rand(1),mq28);\\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\\nmq31=if(above(chng,cthr),rand(1)*.3,mq31);\\nmonitor=chng;\\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\\nq27=mq27;q28=mq28;q29=mq29;q31=mq31;\\n\\nmonitor=mq1;\\nvol=bass+treb+mid;\\natime=atime+vol;\\nq11=.4+sin(atime*.006        )*.4;\\nq12=.4+cos(atime*.00613828348)*.4;\\nq13=.4+sin(atime*.00598593455)*.4;\\nmonitor=q13;\\n\\n\\nwave_a = 0;\\ndecay = 0.5;\\n\\ntic = min(time-tin,.1);\\ntin = time;\\n\\nra = 10;\\ntreb_avg = tic*(treb_avg*(1/tic - ra) + ra*treb);\\nmid_avg = tic*(mid_avg*(1/tic - ra) + ra*mid);\\nbass_avg = tic*(bass_avg*(1/tic - ra) + ra*bass);\\nvav = tic*(vav*(1/tic - ra) + ra*(bass+treb+mid)*.33333);\\n\\ntt = tt + tic*treb_avg;\\nmt = mt + tic*mid_avg;\\nbt = bt + tic*bass_avg;\\nvt = vt + tic*vav;\\n\\nq1 = vt + 15;\\nq2 = (tt + mt)*.3 + 15;\\nq3 = time*.2;\\n\\nq4 = tt;\\nq5 = mt;\\nq6 = bt;\\n\\n\\nq8 = -.01;\\n\\nwarp = 0;\\ndecay = .92;\\nq30=bass+treb+mid;","pixel_eqs_eel":"zoom = zoom + (.03*(bass_att*bass_att))*rad;\\nrot = rot + rad*(-2.5&(cos(time)*5))*.01;","warp":" shader_body { \\n  vec2 tmp_1;\\n  vec3 ret_2;\\n  tmp_1.x = (ang * 3.0);\\n  tmp_1.y = rad;\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (texture (sampler_noise_lq, ((\\n    ((texsize.xy * texsize_noise_lq.zw).x * uv)\\n   / 2.0) + q23)) + 1.0).xyz;\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, uv).xyz * scale1) + bias1) - 0.3);\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = (0.3 * tmpvar_4.x);\\n  tmpvar_5.y = tmpvar_4.y;\\n  ret_2 = ((-0.4 * (\\n    ((texture (sampler_blur1, ((uv / 4.0) + (0.4 * tmpvar_5))).xyz * scale1) + bias1)\\n   - \\n    (tmpvar_3 * 0.1)\\n  )) + (texture (sampler_main, (uv + \\n    (tmpvar_4 * 0.01)\\n  .xy)).xyz + (tmpvar_3 * 0.1)));\\n  vec4 tmpvar_6;\\n  tmpvar_6 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * tmp_1.xyy) * (\\n    (q27 * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\\n  if (((ret_2.x > (q21 * q13)) && (ret_2.x <= (q24 * q11)))) {\\n    ret_2.y = (ret_2.y + (tmpvar_6.x * 0.5));\\n  };\\n  if (((ret_2.y > (q22 * q11)) && (ret_2.y <= (q25 * q12)))) {\\n    ret_2.z = (ret_2.z + (tmpvar_6.y * 0.5));\\n  };\\n  if (((ret_2.z > (q23 * q12)) && (ret_2.z <= (q26 * q13)))) {\\n    ret_2.x = (ret_2.x + (tmpvar_6.z * 0.5));\\n  };\\n  float tmpvar_7;\\n  tmpvar_7 = (1.0 - ((0.01 * q28) * (q28 * rad)));\\n  ret_2 = (ret_2 * (0.98 * (tmpvar_7 * tmpvar_7)));\\n  ret_2 = (ret_2 - 0.04);\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = ret_2;\\n  ret = tmpvar_8.xyz;\\n }","comp":" shader_body { \\n  vec2 uv_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = cos(((uv.y * texsize.y) / 2.0));\\n  tmpvar_3.y = sin(((uv.x * texsize.x) / 2.0));\\n  uv_1 = (uv + ((2.0 * texsize.zw) * tmpvar_3));\\n  vec4 tmpvar_4;\\n  tmpvar_4 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv_1.xyy) * (\\n    (q28 * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q31)));\\n  if (((ret_2.x > (q26 * q13)) && (ret_2.x <= (q23 * q11)))) {\\n    ret_2.z = (ret_2.z - (tmpvar_4.x * 0.5));\\n  };\\n  if (((ret_2.y > (q25 * q11)) && (ret_2.y <= (q22 * q12)))) {\\n    ret_2.x = (ret_2.x - (tmpvar_4.y * 0.5));\\n  };\\n  if (((ret_2.z > (q24 * q12)) && (ret_2.z <= (q21 * q13)))) {\\n    ret_2.y = (ret_2.y - (tmpvar_4.z * 0.5));\\n  };\\n  ret_2 = (1.4 * pow ((\\n    clamp (((texture (sampler_blur1, uv_1).xyz * scale1) + bias1), 0.0, 1.0)\\n   * \\n    (texture (sampler_pc_main, uv_1).xyz - ((texture (sampler_blur3, uv_1).xyz * scale3) + bias3))\\n  ), vec3(0.5, 0.5, 0.5)));\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = ret_2;\\n  ret = tmpvar_5.xyz;\\n }"}')},7022:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":2,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"wave_mode":2,"wave_brighten":0,"wave_a":1,"wave_scale":0,"wave_smoothing":0.9,"wave_mystery":0.173,"warpscale":0.107,"zoomexp":4.10046,"warp":0.01,"wave_g":0,"wave_b":0,"wave_x":0.448,"wave_y":0.122,"ob_size":0.005,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0,"ib_r":1,"ib_g":1,"ib_b":1,"mv_x":1,"mv_y":1,"mv_dx":0.087,"mv_dy":0.343,"mv_l":1.663,"mv_r":0.89,"mv_g":0.03,"mv_b":0.881,"mv_a":0.199,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"thickoutline":1,"textured":1,"rad":1.32775,"tex_zoom":0.57959,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"border_r = border_r + 1.5*sin(q2*1.13);\\nborder_b = border_b + 0.5*sin(q2*1.23);\\nborder_g = border_g + 0.5*sin(q2*1.33);\\n//ang = 0.503 + (bass_att * 0.04);\\nmy_ang = my_ang + (0.005 + (0.001 * bass));\\nang = my_ang;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"//begin beat code\\nvolume = 0.3*(bass+mid);\\nbeatrate = equal(beatrate,0) + (1-equal(beatrate,0))*(below(volume,0.01) + (1-below(volume,0.01))*beatrate);\\nlastbeat = lastbeat + equal(lastbeat,0)*time;\\nmeanbass_att = 0.05*(meanbass_att*19 + bass_att);\\npeakbass_att = max(bass_att,peakbass_att);\\nbeat = above(volume,0.8)*below(peakbass_att - bass_att, 0.05*peakbass_att)*above(time - lastbeat, 0.1 + 0.5*(beatrate - 0.1));\\nbeatrate = max(if(beat,if(below(time-lastbeat,2*beatrate),0.1*(beatrate*9 + time - lastbeat),beatrate),beatrate),0.1);\\n//Adjust responsiveness: To increase responsiveness, set the \\"0.96 and \\"0.996\\" on the next line to slightly lower values. Higher values decrease responsiveness.\\npeakbass_att = beat*bass_att + (1-beat)*peakbass_att*(above(time - lastbeat, 2*beatrate)*0.96 + (1-above(time - lastbeat, 2*beatrate))*0.996);\\nlastbeat = beat*time + (1-beat)*lastbeat;\\npeakbass_att = max(peakbass_att,1.1*meanbass_att);\\n//end beat code\\n\\nzoom = 1;\\ndecay = 1;\\nwarp = 0;\\nwave_a = 0;\\n\\ntic = min(time-tin,.1);\\ntin = time;\\n\\nq2 = 1;\\n\\nq1=1;\\nvol = vol + ((alt + bass + mid)/3-vol)*tic*1;\\nq5 = vol*vol*vol*2;\\n\\n\\nq8 = sin(time)*.5;\\nq9 = sin(time*.75)*.5;\\n\\nsw = abs(sw - beat);\\nan = an + tic*.5*(1-2*sw);\\n\\n\\nq7 = 1+(pow(q8,2) + pow(q9,2))*1;\\nq10 = sin(an);\\nq11 = cos(an);\\n\\nsp = sp + tic*vol*vol*.5;\\n\\nq12 = sp;\\n\\nmonitor = q12;\\nvol2=bass+treb+mid;\\nmtime=mtime+vol2;\\nq1=3-sin(mtime*.01)*.1;","pixel_eqs_eel":"//zoom = pow(rad,2)+.01;","warp":" shader_body { \\n  vec3 ret_1;\\n  vec3 tmpvar_2;\\n  tmpvar_2 = (texture (sampler_noise_lq, ((\\n    ((texsize.xy * texsize_noise_lq.zw).x * uv)\\n   / 2.0) + q23)) + 1.0).xyz;\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur1, uv).xyz * scale1) + bias1) - 0.3);\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = (0.3 * tmpvar_3.x);\\n  tmpvar_4.y = tmpvar_3.y;\\n  ret_1 = ((-0.4 * (\\n    ((texture (sampler_blur1, ((uv / 4.0) + (0.4 * tmpvar_4))).xyz * scale1) + bias1)\\n   - \\n    (tmpvar_2 * 0.1)\\n  )) + (texture (sampler_main, (uv + \\n    (tmpvar_3 * 0.01)\\n  .xy)).xyz + (tmpvar_2 * 0.1)));\\n  float tmpvar_5;\\n  tmpvar_5 = (1.0 - ((0.01 * q28) * (q28 * rad)));\\n  ret_1 = (ret_1 * (0.98 * (tmpvar_5 * tmpvar_5)));\\n  ret_1 = (ret_1 - 0.04);\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = ret_1;\\n  ret = tmpvar_6.xyz;\\n }","comp":" shader_body { \\n  vec2 uv3_1;\\n  vec2 uvm_2;\\n  vec3 ret_3;\\n  uvm_2 = (((\\n    ((uv - 0.5) * q7)\\n   * \\n    (1.0/((((1.0 - \\n      (rad * 0.1)\\n    ) + (q9 * \\n      (uv.x - 0.5)\\n    )) + (q8 * (uv.y - 0.5)))))\\n  ) + 0.5) - 0.5);\\n  uvm_2 = (((\\n    (q10 * uvm_2)\\n   + \\n    ((vec2(1.0, -1.0) * q11) * uvm_2.yx)\\n  ) * aspect.yw) + 0.5);\\n  uvm_2 = (abs((\\n    fract(((uvm_2 + q12) * 0.5))\\n   - 0.5)) * 2.0);\\n  uv3_1 = (((texture (sampler_main, uvm_2).zx - 0.37) * 0.13) + uvm_2);\\n  vec3 tmpvar_4;\\n  tmpvar_4.x = (roam_cos.x * 0.3);\\n  tmpvar_4.y = (roam_cos.z * 0.2);\\n  tmpvar_4.z = (roam_sin.y * 0.4);\\n  ret_3 = (texture (sampler_pw_main, uvm_2).yzx + tmpvar_4);\\n  ret_3 = (pow (mix (vec3(\\n    ((((texture (sampler_blur1, uv3_1).xyz * scale1) + bias1).x + ((texture (sampler_blur3, uv3_1).xyz * scale3) + bias3).z) + (0.1 * roam_cos.y))\\n  ), ret_3, ret_3), vec3(0.3, 2.0, 1.0)) - 0.25);\\n  ret_3 = (ret_3 * ((texture (sampler_blur3, uv3_1).xyz * scale3) + bias3).y);\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = ret_3;\\n  ret = tmpvar_5.xyz;\\n }"}')},2090:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":2,"gammaadj":1.7,"decay":1,"echo_zoom":1.104,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"wave_brighten":0,"brighten":1,"darken":1,"invert":1,"wave_a":0.005,"wave_scale":0.167,"wave_smoothing":0,"modwavealphastart":1,"modwavealphaend":1,"warpanimspeed":0.01,"warpscale":0.01,"dx":0.005,"warp":0.01,"sx":0.9999,"sy":1.0018,"wave_x":0.95,"wave_y":1,"ob_size":0,"ob_g":0.8,"ob_b":0.7,"ib_size":0.005,"ib_r":0,"ib_g":0,"ib_b":0.3,"mv_x":64,"mv_y":48,"mv_l":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"sides":34,"thickoutline":1,"textured":1,"x":0.75,"rad":0.30478,"tex_ang":1.5708,"tex_zoom":0.82773,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"vx = 0;\\nvy = 0;","frame_eqs_eel":"rad = .3;\\ntex_zoom = .28;\\ntex_zoom = 1/rad*tex_zoom;\\n\\nx = .5 + sin(time*.957)*.1;"},{"baseVals":{"sides":74,"thickoutline":1,"textured":1,"x":0.25,"rad":0.45378,"tex_zoom":0.5033,"g":1,"b":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"rad = .3;\\ntex_zoom = .3;\\ntex_zoom = 1/rad*tex_zoom;\\n\\nx = .5 + sin(time)*.15;"},{"baseVals":{"enabled":1,"sides":84,"additive":1,"thickoutline":1,"rad":0.16777,"tex_zoom":0.5033,"r":0,"b":0.2,"a":0.6,"g2":0,"border_a":0},"init_eqs_eel":"vx = 0;\\nvy = 0;","frame_eqs_eel":"ti = time*.3;\\nx = .5 + .34*sin(ti);\\ny = .5 + .34*cos(ti);\\n\\nrad = rad + bass;\\n\\nti = time*2.3;\\nx = x + .1*sin(ti);\\ny = y + .1*cos(ti);"},{"baseVals":{"sides":74,"additive":1,"rad":0.16777,"r2":1,"g2":0,"a2":1,"border_b":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ti = -time*.3;\\nx = .5 + .3*sin(ti);\\ny = .5 + .3*cos(ti);\\n\\nti = -time*2.3;\\nx = x + .2*sin(ti);\\ny = y + .2*cos(ti);"}],"waves":[{"baseVals":{"enabled":1,"samples":41,"usedots":1,"additive":1,"scaling":0.01,"smoothing":0,"g":0},"init_eqs_eel":"t8 = 1;\\nt1 = q5;","frame_eqs_eel":"","point_eqs_eel":"x = int(rand(1001))*.001;\\ny = int(rand(1001))*.001;\\n\\n//r = int(rand(1001))*.001;\\ng=above(int(rand(1001))*.001,.9)*.5;\\nb = 0;\\nr = 0;\\n"},{"baseVals":{"samples":61,"additive":1,"scaling":0.0124,"smoothing":0,"b":0,"enabled":0},"init_eqs_eel":"t8 = 1;\\nt1 = q5;","frame_eqs_eel":"","point_eqs_eel":"x = (sample-.5)*.02 + .2;\\ny = .5;\\nr = 1;\\ng = 1;\\nb = 1;"},{"baseVals":{"samples":31,"usedots":1,"thick":1,"scaling":0.01303,"smoothing":0,"enabled":0},"init_eqs_eel":"t8 = 1;\\nt1 = q5;","frame_eqs_eel":"t1 = q5;\\nt2 = q4;\\nt3 = q6;","point_eqs_eel":"t8 = -t8;\\nd1 = 0.15 + t8*0.01 - value1*0.1*(t8+1);\\ndir1 = t2;\\ndir2 = t2*0.5 + t1*3/2 - t3*3;\\ndir3 = sample*asin(1)*4 + t3 - t2*5/6 + t1*3/2;\\n\\nx = 0.5 + sin(dir1)*0.1 + sin(dir2)*0.05 + sin(dir3)*d1;\\ny = 0.5 + cos(dir1)*0.1 + cos(dir2)*0.05 + cos(dir3)*d1;\\ny = (y-0.5)*1.2 + 0.5;"},{"baseVals":{"samples":511,"sep":4,"thick":1,"additive":1,"scaling":0.02345,"smoothing":0,"a":0.99,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\nab = 1;","frame_eqs_eel":"t1 = q4*0.75;\\nt2 = q5*0.75;\\nt3 = q6*0.75;\\nt4 = q4*0.75;\\nt5 = q5*0.75;\\nt6 = q6*0.75;\\nt8 = 1;","point_eqs_eel":"\\npi = asin(1);\\nn = 80;\\nt8 = -t8;\\nrd = 0.075+0.02*(t8+1)/2;\\nxx = sin(sample*pi*4)*0.5 + cos(sample*pi*n)*rd*sin(sample*pi*4);\\nyy = cos(sample*pi*4)*0.5 + cos(sample*pi*n)*rd*cos(sample*pi*4);\\nzz = sin(sample*pi*n)*rd;\\n\\nd = sqrt( xx*xx + yy*yy + zz*zz)*0.004;\\nd1 = 1;\\nxx = xx*d1;\\nyy = yy*d1;\\nzz = zz*d1;\\n\\n\\n\\n\\nw1 = d*t4;\\nw2 = d*t5;\\nw3 = d*t6;\\n\\ns1 = sin(t1*1+w1);\\ns2 = sin(t2*1+w2);\\ns3 = sin(t3*1+w3);\\nc1 = cos(t1*1+w1);\\nc2 = cos(t2*1+w2);\\nc3 = cos(t3*1+w3);\\n\\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\\n\\na = 0.5;\\nzoom = 0.5*atan2(a,a+z);//0.5*(1/(z+a));\\nx = 0.5 + zoom*x1;\\ny = 0.5 + zoom*y1;\\n\\npi3 = 3.1415*2*0.3333;\\nt = -z*2 - time*0.8;//sample*pi*4-0*time +t4*3;\\nc=2;\\nr = sin(t)*c;\\n\\ng = sin(t+pi3)*c;\\n\\nb = sin(t-pi3)*c;\\n\\nj = 0.71;\\n//r = 0.5+xx*j;\\n//g = 0.5+yy*j;\\n//b = 0.5+zz*j;\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\n\\na = sigmoid(-z,7)+0.;\\n"}],"init_eqs_eel":"mv_x=64;mv_y=48;\\nnut=0;\\nstp=0;stq=0;\\nrtp=0;rtq=0;\\nwvr=0;\\ndecay=0;\\ndcsp=0","frame_eqs_eel":"decay=1.0;\\nzoom=1.00;\\ndx=0;dy=0;sx=1.000001;sy=0.999999;\\n\\nmv_r=.360+(((cos(time/5)*0.3)+0.5*0.5)*0.1);\\nmv_g=.390+(((sin(time/7)*0.3)+0.5*0.5)*0.1);\\nmv_b=.500+((sin((time/7)+0.9)+0.5*0.5)*0.1);\\n\\n\\ncx=-1;cy=2;rot=-treb*0.002;\\n\\ncx=cos(time*0.1)*1.5 + 0.5;\\ncy=cos(time*0.2)*1.5 + 0.5","pixel_eqs_eel":"thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\\ndx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;\\ndy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;\\n\\nsx = sx + 0.25*(1.2*sin(6*time)*0.25*cos(3*ang)*(0.5+0.25*cos(time)-rad));\\nsy = sy + 0.25*(1.2*cos(6*time)*0.25*sin(3*ang)*(0.5+0.25*sin(time)-rad));\\nzoom=1+((1-rad)*bass*2-1)*.01*q4*(ang*ang);","warp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = dot ((texture (sampler_main, (uv + vec2(0.005, 0.007))) - texture (sampler_main, (uv - vec2(0.005, 0.007)))), vec4(0.32, 0.49, 0.29, 0.0));\\n  tmpvar_2.y = dot ((texture (sampler_main, (uv + vec2(-0.007, 0.005))) - texture (sampler_main, (uv - vec2(-0.007, 0.005)))), vec4(0.32, 0.49, 0.29, 0.0));\\n  vec3 tmpvar_3;\\n  tmpvar_3 = ((texture (sampler_blur1, uv).xyz * scale1) + bias1);\\n  ret_1 = (((\\n    -(tmpvar_3)\\n   * 0.1) + (\\n    (texture (sampler_main, (uv - ((tmpvar_2 * \\n      (1.0 - tmpvar_3)\\n    .xy) * 0.02))).xyz + ((vec3(dot (texture (sampler_noise_lq, \\n      ((((texsize.xy * texsize_noise_lq.zw).x * uv) * 0.5) + (0.1 * rand_frame).xy)\\n    ), vec4(0.32, 0.49, 0.29, 0.0))) * 0.12) - (0.01 * pow (\\n      (1.0 - rad)\\n    , 4.0))))\\n   * 1.1)) * 0.97);\\n  ret_1 = (ret_1 - 0.05);\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = ret_1;\\n  ret = tmpvar_4.xyz;\\n }","comp":""}')},576:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.9,"echo_zoom":1.169,"wave_brighten":0,"wave_a":4.1,"wave_scale":0.443,"wave_smoothing":0.63,"wave_mystery":-0.4,"modwavealphastart":0.71,"modwavealphaend":1.3,"zoom":1.135,"warp":0.01605,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.02,"ob_a":1,"mv_x":64,"mv_y":48,"mv_l":0.5,"mv_r":0.35,"mv_g":0.35,"mv_b":0.35,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"samples":42,"usedots":1,"thick":1,"additive":1,"scaling":81.95444,"smoothing":1,"g":0.4,"b":0},"init_eqs_eel":"","frame_eqs_eel":"wave_x=1;\\nr = q2;\\ng = q3;\\nb = q1;","point_eqs_eel":"x=rand(1000)*0.001;\\ny=rand(1000)*0.001;\\n//r=0.9;\\n//g=1;\\n//b=1"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"//wave_g = wave_g + 0.100*( 0.90*sin(0.583*time) + 0.10*sin(1.006*time) );\\n//wave_b = wave_b + 0.100*( 0.90*sin(0.993*time) + 0.10*sin(0.933*time) );\\nzoom = 0.935*zoom + 0.04*( 0.60*sin(0.339*bass_att) + 0.10*sin(0.276*bass_att) );\\nrot = rot + 0.040*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );\\ncx = cx + 0.003*( 0.60*sin(0.471*treb_att) + 0.40*sin(0.297*treb_att) );\\ncy = cy + 0.003*( 0.60*sin(0.379*mid_att) + 0.40*sin(0.351*mid_att) );\\ndx = dx + 0.003*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );\\nrot=rot+0.02*(sin(time*2.134)+sin(time*1.7134)+sin(time*2.834));\\ndx=dx+0.01*(sin(time*1.134)+sin(time*0.7134)+sin(time*2.334));\\ndy=dy+0.01*(sin(time*1.8834)+sin(time*1.0144)+sin(time*1.334));\\n\\nq1 = q1 + 0.650*( 0.60*sin(1.437*time) + 0.40*sin(0.970*time) );\\nq2 = q2 + 0.650*( 0.60*sin(1.344*time) + 0.40*sin(0.841*time) );\\nq3 = q3 + 0.650*( 0.60*sin(1.251*time) + 0.40*sin(1.055*time) );\\nwave_r = q1;\\nwave_g = q2;\\nwave_b = q3;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 8.0);\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 1.2)) + rand_frame.xy);\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1)).x;\\n  tmpvar_4.y = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1)).x;\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (mix (uv_orig, uv, vec2(0.4, 0.4)) + ((tmpvar_4 * texsize.zw) * 2.0));\\n  ret_1.x = (((texture (sampler_main, tmpvar_5).x - \\n    ((texture (sampler_main, tmpvar_5).x - ((texture (sampler_blur3, tmpvar_5).xyz * scale3) + bias3).x) * 0.02)\\n  ) - 0.004) + ((texture (sampler_noise_lq, tmpvar_3).xyz - 0.5) * 0.12)).x;\\n  ret_1.y = (texture (sampler_main, (mix (uv_orig, uv, vec2(0.3, 0.3)) + (\\n    ((texture (sampler_noise_lq, tmpvar_3).xyz - 0.5).xy * texsize.zw)\\n   * 3.0))).y - 0.004);\\n  ret_1.z = texture (sampler_main, uv).z;\\n  ret_1.z = (ret_1.z + ((\\n    (ret_1.z - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).z)\\n   * 0.1) - 0.015));\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = ret_1;\\n  ret = tmpvar_6.xyz;\\n }","comp":" shader_body { \\n  vec2 uv_1;\\n  vec3 ret_2;\\n  uv_1 = (0.05 + (0.9 * uv));\\n  ret_2 = (texture (sampler_main, uv_1).xyz * 4.0);\\n  ret_2 = (ret_2 - ((\\n    (texture (sampler_blur1, uv_1).xyz * scale1)\\n   + bias1) * 3.0));\\n  ret_2 = (ret_2 * (1.0 + (0.12 * \\n    ((texture (sampler_noise_lq, (rand_frame.xy + (\\n      (uv_1 * texsize.xy)\\n     * texsize_noise_lq.zw))).xxx * 2.0) - 1.0)\\n  )));\\n  ret_2 = ((pow (ret_2, vec3(0.5, 0.5, 0.7)) - 0.1) * 1.1);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_2;\\n  ret = tmpvar_3.xyz;\\n }"}')},1049:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken_center":1,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":0.905,"warpscale":0.01,"zoom":0.96098,"rot":0.08,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.005,"ob_a":0.25,"ib_size":0.18,"ib_r":0.3,"ib_g":0.3,"ib_b":0.3,"ib_a":0.09,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"thickoutline":1,"textured":1,"rad":3.99866,"tex_zoom":0.25005,"r":0.9,"g":0.94,"b":0.89,"r2":0.84,"g2":0.93,"b2":1,"a2":1,"border_b":0,"border_a":0},"init_eqs_eel":"t1 = rand(100)*0.01;\\nt2 = rand(100)*0.01;\\nte = 1;\\npoly = 5;","frame_eqs_eel":"tm = time*.05;\\n\\nr = .95 + .05*sin(tm*1.654);\\ng = .95 + .05*sin(tm*1.564);\\nb = .95 + .05*sin(tm*1.465);\\nr2 = 1.9 - r;\\ng2 = 1.9 - g;\\nb2 = 1.9 - b;\\n\\nx = .4996;\\ny = .5003;\\n\\n\\n\\nang = (rand(1001)*.001 - rand(1001)*.001)*q1*.5;\\nrad = rad - (rand(1001)*.001 + rand(1001)*.001)*1.5*q1;\\n\\na=above(treb,.8);\\na2=above(treb,.8);"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"it = (it + 1)*above(sample,0)*below(it,53);\\nita = (ita + equal(it,0))*above(sample,0);\\n\\nsw = if(equal(it,0),rand(4),1);\\nxv = if(sw,xv,rand(1001)*.001*.8);\\nmx = xv + ita*.025;\\nmy = if(sw,my,rand(1001)*.001*.975);\\n\\nsz = .01;\\nvx = above(it,1)*below(it,39) + above(it,12)*below(it,28) - equal(it,20) + equal(it,46) + equal(it,51) + equal(it,41) - equal(it,15) - equal(it,25) + equal(it,10) + equal(it,30) - equal(it,4) - equal(it,36);\\nvy = above(it,17)*below(it,49) + above(it,22)*below(it,44) - equal(it,33) + equal(it,7) + equal(it,51) + equal(it,15) - equal(it,41) - equal(it,25) + equal(it,4) + equal(it,10) - equal(it,36) - equal(it,30);\\n\\ncvc = if(equal(it,0),cvb,cvc);\\ncvb = if(equal(it,0),cva,cvb);\\ncva = if(equal(it,0),cv,cva);\\ncv = if(equal(it,0),if(equal(cva,cvb),1-cva,if(cva,above(rand(1001)*.001,.69),above(rand(1001)*.001,.14))),cv);\\n\\nlr = if(equal(it,0),if(cv,rand(10001)*.0001*316.02,rand(10001)*.0001*193.66),lr);\\n\\nlet = (1-cv)*(1 + above(lr,43.31)*4 + above(lr,100.19)*4 + above(lr,138.64)*6 + above(lr,175.51)*6) + cv*(2 + above(lr,10.56) + above(lr,33.69) + above(lr,50.94)*2 + above(lr,60.18) + above(lr,72.77) + above(lr,88.08)*2 + above(lr,89.08) + above(lr,94.69) + above(lr,122.67) + above(lr,138.03) + above(lr,171.95)*2 + above(lr,188.09) + above(lr,189.09) + above(lr,227.73) + above(lr,256.96) + above(lr,292.39)*2 + above(lr,297.52) + above(lr,304.09) + above(lr,305.57) + above(lr,314.63));\\n\\nva = equal(let,23) + equal(let,24) + equal(let,26);\\nvb = below(let,9) + above(let,10)*below(let,19) + equal(let,21) + equal(let,23);\\nvc = equal(let,1) + equal(let,2) + equal(let,5) + equal(let,6) + equal(let,8) + equal(let,11) + equal(let,16) + equal(let,18) + equal(let,19);\\nvd = above(let,1)*below(let,9) + above(let,10)*below(let,24) - equal(let,20);\\nve = equal(let,13) + equal(let,14) + equal(let,24) + equal(let,25);\\nvf = above(let,1)*below(let,8) + equal(let,9) + above(let,14)*below(let,21) + equal(let,26);\\nvg = equal(let,1);\\nvh = equal(let,9) + equal(let,20);\\nvi = below(let,5) - equal(let,3) + equal(let,18);\\nvj = above(let,2)*below(let,8) - equal(let,4) + equal(let,9) + above(let,14)*below(let,21) - equal(let,18) + equal(let,26);\\nvk = equal(let,11) + equal(let,13) + above(let,23)*below(let,27);\\nvl = equal(let,8) + equal(let,10) + above(let,12)*below(let,18) + above(let,20)*below(let,24);\\nvm = equal(let,1) + equal(let,2) + equal(let,8) + equal(let,16) + equal(let,18) + equal(let,19);\\nvn = equal(let,1) + equal(let,7) + equal(let,8) + equal(let,10) + above(let,12)*below(let,24) - equal(let,16) - equal(let,18) - equal(let,20) - equal(let,22);\\nvo = equal(let,11) + equal(let,14) + equal(let,17) + equal(let,18) + equal(let,23) + equal(let,24);\\nvp = equal(let,3) + equal(let,5) + equal(let,7) + equal(let,9) + equal(let,10) + equal(let,12) + equal(let,15) + equal(let,17) + equal(let,19) + equal(let,21) + equal(let,26);\\nvq = equal(let,2) + equal(let,4) + equal(let,22);\\nvr = equal(let,9) + equal(let,20) + equal(let,25);\\nvs = equal(let,22);\\nvt = above(let,1)*below(let,13) - equal(let,6) - equal(let,8) - equal(let,11) + equal(let,15) + equal(let,17) + equal(let,19) + equal(let,21) + equal(let,26);\\n\\na = if(above(it,51),0,if(above(it,49),va,if(above(it,47),vb,if(above(it,44),vc,if(above(it,42),vd,if(above(it,39),ve, if(above(it,37),vf,if(above(it,34),vg,if(above(it,31),vh,if(above(it,28),vi,if(above(it,26),vj,if(above(it,23),vk, if(above(it,21),vl,if(above(it,18),vm,if(above(it,16),vn,if(above(it,13),vo,if(above(it,11),vp,if(above(it,8),vq, if(above(it,5),vr,if(above(it,2),vs,if(it,vt,0)))))))))))))))))))));\\n\\na = a*below(ita,8);\\n\\nx = mx + vx*sz*.75;\\ny = my + vy*sz*1.5;"},{"baseVals":{"enabled":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"it = (it + 1)*above(sample,0)*below(it,53);\\nita = (ita + equal(it,0))*above(sample,0);\\n\\nsw = if(equal(it,0),rand(4),1);\\nxv = if(sw,xv,rand(1001)*.001*.8);\\nmx = xv + ita*.025;\\nmy = if(sw,my,rand(1001)*.001*.975);\\n\\nsz = .01;\\nvx = above(it,1)*below(it,39) + above(it,12)*below(it,28) - equal(it,20) + equal(it,46) + equal(it,51) + equal(it,41) - equal(it,15) - equal(it,25) + equal(it,10) + equal(it,30) - equal(it,4) - equal(it,36);\\nvy = above(it,17)*below(it,49) + above(it,22)*below(it,44) - equal(it,33) + equal(it,7) + equal(it,51) + equal(it,15) - equal(it,41) - equal(it,25) + equal(it,4) + equal(it,10) - equal(it,36) - equal(it,30);\\n\\ncvc = if(equal(it,0),cvb,cvc);\\ncvb = if(equal(it,0),cva,cvb);\\ncva = if(equal(it,0),cv,cva);\\ncv = if(equal(it,0),if(equal(cva,cvb),1-cva,if(cva,above(rand(1001)*.001,.69),above(rand(1001)*.001,.14))),cv);\\n\\nlr = if(equal(it,0),if(cv,rand(10001)*.0001*316.02,rand(10001)*.0001*193.66),lr);\\n\\nlet = (1-cv)*(1 + above(lr,43.31)*4 + above(lr,100.19)*4 + above(lr,138.64)*6 + above(lr,175.51)*6) + cv*(2 + above(lr,10.56) + above(lr,33.69) + above(lr,50.94)*2 + above(lr,60.18) + above(lr,72.77) + above(lr,88.08)*2 + above(lr,89.08) + above(lr,94.69) + above(lr,122.67) + above(lr,138.03) + above(lr,171.95)*2 + above(lr,188.09) + above(lr,189.09) + above(lr,227.73) + above(lr,256.96) + above(lr,292.39)*2 + above(lr,297.52) + above(lr,304.09) + above(lr,305.57) + above(lr,314.63));\\n\\nva = equal(let,23) + equal(let,24) + equal(let,26);\\nvb = below(let,9) + above(let,10)*below(let,19) + equal(let,21) + equal(let,23);\\nvc = equal(let,1) + equal(let,2) + equal(let,5) + equal(let,6) + equal(let,8) + equal(let,11) + equal(let,16) + equal(let,18) + equal(let,19);\\nvd = above(let,1)*below(let,9) + above(let,10)*below(let,24) - equal(let,20);\\nve = equal(let,13) + equal(let,14) + equal(let,24) + equal(let,25);\\nvf = above(let,1)*below(let,8) + equal(let,9) + above(let,14)*below(let,21) + equal(let,26);\\nvg = equal(let,1);\\nvh = equal(let,9) + equal(let,20);\\nvi = below(let,5) - equal(let,3) + equal(let,18);\\nvj = above(let,2)*below(let,8) - equal(let,4) + equal(let,9) + above(let,14)*below(let,21) - equal(let,18) + equal(let,26);\\nvk = equal(let,11) + equal(let,13) + above(let,23)*below(let,27);\\nvl = equal(let,8) + equal(let,10) + above(let,12)*below(let,18) + above(let,20)*below(let,24);\\nvm = equal(let,1) + equal(let,2) + equal(let,8) + equal(let,16) + equal(let,18) + equal(let,19);\\nvn = equal(let,1) + equal(let,7) + equal(let,8) + equal(let,10) + above(let,12)*below(let,24) - equal(let,16) - equal(let,18) - equal(let,20) - equal(let,22);\\nvo = equal(let,11) + equal(let,14) + equal(let,17) + equal(let,18) + equal(let,23) + equal(let,24);\\nvp = equal(let,3) + equal(let,5) + equal(let,7) + equal(let,9) + equal(let,10) + equal(let,12) + equal(let,15) + equal(let,17) + equal(let,19) + equal(let,21) + equal(let,26);\\nvq = equal(let,2) + equal(let,4) + equal(let,22);\\nvr = equal(let,9) + equal(let,20) + equal(let,25);\\nvs = equal(let,22);\\nvt = above(let,1)*below(let,13) - equal(let,6) - equal(let,8) - equal(let,11) + equal(let,15) + equal(let,17) + equal(let,19) + equal(let,21) + equal(let,26);\\n\\na = if(above(it,51),0,if(above(it,49),va,if(above(it,47),vb,if(above(it,44),vc,if(above(it,42),vd,if(above(it,39),ve, if(above(it,37),vf,if(above(it,34),vg,if(above(it,31),vh,if(above(it,28),vi,if(above(it,26),vj,if(above(it,23),vk, if(above(it,21),vl,if(above(it,18),vm,if(above(it,16),vn,if(above(it,13),vo,if(above(it,11),vp,if(above(it,8),vq, if(above(it,5),vr,if(above(it,2),vs,if(it,vt,0)))))))))))))))))))));\\n\\na = a*below(ita,8);\\n\\nx = mx + vx*sz*.75;\\ny = my + vy*sz*1.5;"},{"baseVals":{"enabled":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"it = (it + 1)*above(sample,0)*below(it,53);\\nita = (ita + equal(it,0))*above(sample,0);\\n\\nsw = if(equal(it,0),rand(4),1);\\nxv = if(sw,xv,rand(1001)*.001*.8);\\nmx = xv + ita*.025;\\nmy = if(sw,my,rand(1001)*.001*.975);\\n\\nsz = .01;\\nvx = above(it,1)*below(it,39) + above(it,12)*below(it,28) - equal(it,20) + equal(it,46) + equal(it,51) + equal(it,41) - equal(it,15) - equal(it,25) + equal(it,10) + equal(it,30) - equal(it,4) - equal(it,36);\\nvy = above(it,17)*below(it,49) + above(it,22)*below(it,44) - equal(it,33) + equal(it,7) + equal(it,51) + equal(it,15) - equal(it,41) - equal(it,25) + equal(it,4) + equal(it,10) - equal(it,36) - equal(it,30);\\n\\ncvc = if(equal(it,0),cvb,cvc);\\ncvb = if(equal(it,0),cva,cvb);\\ncva = if(equal(it,0),cv,cva);\\ncv = if(equal(it,0),if(equal(cva,cvb),1-cva,if(cva,above(rand(1001)*.001,.69),above(rand(1001)*.001,.14))),cv);\\n\\nlr = if(equal(it,0),if(cv,rand(10001)*.0001*316.02,rand(10001)*.0001*193.66),lr);\\n\\nlet = (1-cv)*(1 + above(lr,43.31)*4 + above(lr,100.19)*4 + above(lr,138.64)*6 + above(lr,175.51)*6) + cv*(2 + above(lr,10.56) + above(lr,33.69) + above(lr,50.94)*2 + above(lr,60.18) + above(lr,72.77) + above(lr,88.08)*2 + above(lr,89.08) + above(lr,94.69) + above(lr,122.67) + above(lr,138.03) + above(lr,171.95)*2 + above(lr,188.09) + above(lr,189.09) + above(lr,227.73) + above(lr,256.96) + above(lr,292.39)*2 + above(lr,297.52) + above(lr,304.09) + above(lr,305.57) + above(lr,314.63));\\n\\nva = equal(let,23) + equal(let,24) + equal(let,26);\\nvb = below(let,9) + above(let,10)*below(let,19) + equal(let,21) + equal(let,23);\\nvc = equal(let,1) + equal(let,2) + equal(let,5) + equal(let,6) + equal(let,8) + equal(let,11) + equal(let,16) + equal(let,18) + equal(let,19);\\nvd = above(let,1)*below(let,9) + above(let,10)*below(let,24) - equal(let,20);\\nve = equal(let,13) + equal(let,14) + equal(let,24) + equal(let,25);\\nvf = above(let,1)*below(let,8) + equal(let,9) + above(let,14)*below(let,21) + equal(let,26);\\nvg = equal(let,1);\\nvh = equal(let,9) + equal(let,20);\\nvi = below(let,5) - equal(let,3) + equal(let,18);\\nvj = above(let,2)*below(let,8) - equal(let,4) + equal(let,9) + above(let,14)*below(let,21) - equal(let,18) + equal(let,26);\\nvk = equal(let,11) + equal(let,13) + above(let,23)*below(let,27);\\nvl = equal(let,8) + equal(let,10) + above(let,12)*below(let,18) + above(let,20)*below(let,24);\\nvm = equal(let,1) + equal(let,2) + equal(let,8) + equal(let,16) + equal(let,18) + equal(let,19);\\nvn = equal(let,1) + equal(let,7) + equal(let,8) + equal(let,10) + above(let,12)*below(let,24) - equal(let,16) - equal(let,18) - equal(let,20) - equal(let,22);\\nvo = equal(let,11) + equal(let,14) + equal(let,17) + equal(let,18) + equal(let,23) + equal(let,24);\\nvp = equal(let,3) + equal(let,5) + equal(let,7) + equal(let,9) + equal(let,10) + equal(let,12) + equal(let,15) + equal(let,17) + equal(let,19) + equal(let,21) + equal(let,26);\\nvq = equal(let,2) + equal(let,4) + equal(let,22);\\nvr = equal(let,9) + equal(let,20) + equal(let,25);\\nvs = equal(let,22);\\nvt = above(let,1)*below(let,13) - equal(let,6) - equal(let,8) - equal(let,11) + equal(let,15) + equal(let,17) + equal(let,19) + equal(let,21) + equal(let,26);\\n\\na = if(above(it,51),0,if(above(it,49),va,if(above(it,47),vb,if(above(it,44),vc,if(above(it,42),vd,if(above(it,39),ve, if(above(it,37),vf,if(above(it,34),vg,if(above(it,31),vh,if(above(it,28),vi,if(above(it,26),vj,if(above(it,23),vk, if(above(it,21),vl,if(above(it,18),vm,if(above(it,16),vn,if(above(it,13),vo,if(above(it,11),vp,if(above(it,8),vq, if(above(it,5),vr,if(above(it,2),vs,if(it,vt,0)))))))))))))))))))));\\n\\na = a*below(ita,8);\\n\\nx = mx + vx*sz*.75;\\ny = my + vy*sz*1.5;"},{"baseVals":{"enabled":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"it = (it + 1)*above(sample,0)*below(it,53);\\nita = (ita + equal(it,0))*above(sample,0);\\n\\nsw = 1-equal(it,0)*equal(ita,0);\\nswi = (equal(lr,9) + equal(lr,5))*equal(it,0)*equal(ita,4);\\nxv = if(sw - swi,xv,rand(1001)*.001*.8);\\nmx = xv + ita*.025;\\nmy = if(sw - swi,my,rand(1001)*.001*.975);\\n\\nsz = .01;\\nvx = above(it,1)*below(it,39) + above(it,12)*below(it,28) - equal(it,20) + equal(it,46) + equal(it,51) + equal(it,41) - equal(it,15) - equal(it,25) + equal(it,10) + equal(it,30) - equal(it,4) - equal(it,36);\\nvy = above(it,17)*below(it,49) + above(it,22)*below(it,44) - equal(it,33) + equal(it,7) + equal(it,51) + equal(it,15) - equal(it,41) - equal(it,25) + equal(it,4) + equal(it,10) - equal(it,36) - equal(it,30);\\n\\nsa = equal(ita,0)*13 + equal(ita,1)*9 + equal(ita,2)*12 + equal(ita,3)*11 + equal(ita,4)*4 + equal(ita,5)*18 + equal(ita,6)*15 + equal(ita,7)*16;\\nsb = equal(ita,0)*11 + equal(ita,1)*9 + equal(ita,2)*12 + equal(ita,3)*12;\\nsc = equal(ita,0)*4 + equal(ita,1)*15 + equal(ita,3)*4 + equal(ita,4)*18 + equal(ita,5)*21 + equal(ita,6)*7 + equal(ita,7)*19;\\nsd = equal(ita,0)*12 + equal(ita,1)*15 + equal(ita,2)*22 + equal(ita,3)*5;\\nse = equal(ita,0)*8 + equal(ita,1)*1 + equal(ita,2)*20 + equal(ita,3)*5;\\nsf = equal(ita,0)*6 + equal(ita,1)*5 + equal(ita,2)*1 + equal(ita,3)*18 + equal(ita,5)*10 + equal(ita,6)*15 + equal(ita,7)*25;\\nsg = equal(ita,0)*1 + equal(ita,1)*14 + equal(ita,2)*7 + equal(ita,3)*5 + equal(ita,4)*18;\\nsh = equal(ita,0)*19 + equal(ita,1)*21 + equal(ita,2)*18 + equal(ita,3)*16 + equal(ita,4)*18 + equal(ita,5)*9 + equal(ita,6)*19 + equal(ita,7)*5;\\nsi = equal(ita,0)*8 + equal(ita,1)*1 + equal(ita,2)*16 + equal(ita,3)*16 + equal(ita,4)*25;\\nsj = equal(ita,0)*25 + equal(ita,1)*5 + equal(ita,2)*19 + equal(ita,6)*14 + equal(ita,7)*15;\\n\\nlr = if(sw,lr,rand(10));\\nlet = equal(lr,0)*sa + equal(lr,1)*sb + equal(lr,2)*sc + equal(lr,3)*sd + equal(lr,4)*se + equal(lr,5)*sf + equal(lr,6)*sg + equal(lr,7)*sh + equal(lr,8)*si + equal(lr,9)*sj;\\n\\nva = equal(let,23) + equal(let,24) + equal(let,26);\\nvb = above(let,0)*below(let,9) + above(let,10)*below(let,19) + equal(let,21) + equal(let,23);\\nvc = equal(let,1) + equal(let,2) + equal(let,5) + equal(let,6) + equal(let,8) + equal(let,11) + equal(let,16) + equal(let,18) + equal(let,19);\\nvd = above(let,1)*below(let,9) + above(let,10)*below(let,24) - equal(let,20);\\nve = equal(let,13) + equal(let,14) + equal(let,24) + equal(let,25);\\nvf = above(let,1)*below(let,8) + equal(let,9) + above(let,14)*below(let,21) + equal(let,26);\\nvg = equal(let,1);\\nvh = equal(let,9) + equal(let,20);\\nvi = above(let,0)*below(let,5) - equal(let,3) + equal(let,18);\\nvj = above(let,2)*below(let,8) - equal(let,4) + equal(let,9) + above(let,14)*below(let,21) - equal(let,18) + equal(let,26);\\nvk = equal(let,11) + equal(let,13) + above(let,23)*below(let,27);\\nvl = equal(let,8) + equal(let,10) + above(let,12)*below(let,18) + above(let,20)*below(let,24);\\nvm = equal(let,1) + equal(let,2) + equal(let,8) + equal(let,16) + equal(let,18) + equal(let,19);\\nvn = equal(let,1) + equal(let,7) + equal(let,8) + equal(let,10) + above(let,12)*below(let,24) - equal(let,16) - equal(let,18) - equal(let,20) - equal(let,22);\\nvo = equal(let,11) + equal(let,14) + equal(let,17) + equal(let,18) + equal(let,23) + equal(let,24);\\nvp = equal(let,3) + equal(let,5) + equal(let,7) + equal(let,9) + equal(let,10) + equal(let,12) + equal(let,15) + equal(let,17) + equal(let,19) + equal(let,21) + equal(let,26);\\nvq = equal(let,2) + equal(let,4) + equal(let,22);\\nvr = equal(let,9) + equal(let,20) + equal(let,25);\\nvs = equal(let,22);\\nvt = above(let,1)*below(let,13) - equal(let,6) - equal(let,8) - equal(let,11) + equal(let,15) + equal(let,17) + equal(let,19) + equal(let,21) + equal(let,26);\\n\\na = if(above(it,51),0,if(above(it,49),va,if(above(it,47),vb,if(above(it,44),vc,if(above(it,42),vd,if(above(it,39),ve, if(above(it,37),vf,if(above(it,34),vg,if(above(it,31),vh,if(above(it,28),vi,if(above(it,26),vj,if(above(it,23),vk, if(above(it,21),vl,if(above(it,18),vm,if(above(it,16),vn,if(above(it,13),vo,if(above(it,11),vp,if(above(it,8),vq, if(above(it,5),vr,if(above(it,2),vs,if(it,vt,0)))))))))))))))))))));\\n\\na = a*below(ita,8);\\n\\nx = mx + vx*sz*.75;\\ny = my + vy*sz*1.5;"}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = 0.5+0.5*sin(time*1.12);\\nwave_g = 0.5+0.5*sin(time*1.22);\\nwave_b = 0.5*0.5*sin(time*1.32);\\nib_r = wave_b;\\nib_g = wave_r;\\nib_b = wave_g;\\n\\n// Thanks a bunch to flexi (once again) for beat detection!\\n\\nvol = bass*8 + mid*4 + treb*2;\\nvol = vol*above(vol,17);\\nmonitor = vol;\\nbeat = above(vol,res);\\ndiff = (1-beat)*diff + beat*(vol-res);\\nres = beat*(vol+2*diff) + (1-beat)*(res - (diff*0.04 + 0.12)*60/fps);\\nres = max(0,res);\\nmonitor = res;\\n\\nx = if(beat,rand(60)*0.01 + 0.2,x);\\ny = if(beat,rand(60)*0.01 + 0.2,y);\\nrot = (rot+0.05*(sin(bass)*sin(bass)))*if(above(x,y),1,-1)","pixel_eqs_eel":"","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (texture (sampler_main, uv).xyz * 0.875);\\n  ret = tmpvar_1.xyz;\\n }","comp":" shader_body { \\n  vec2 uv_1;\\n  vec3 ret_2;\\n  vec4 tmpvar_3;\\n  tmpvar_3 = max (vec4(0.2, 0.2, 0.2, 0.2), min (vec4(0.85, 0.85, 0.85, 0.85), rand_preset));\\n  uv_1 = (uv + texture (sampler_pw_noise_lq, ((\\n    (floor((uv * vec2(10.0, 10.0))) * 0.1)\\n   + tmpvar_3.xy) * aspect.xy)).xy);\\n  ret_2 = -(((tmpvar_3.xyz * vec3(0.0, 1.5, 0.5)) * (\\n    (texture (sampler_blur1, fract(uv_1)).xyz * scale1)\\n   + bias1).yyy));\\n  ret_2 = (ret_2 - mix (ret_2, (tmpvar_3.xyz * vec3(1.8, 0.5, 2.0)), (\\n    (texture (sampler_blur2, fract(uv_1)).xyz * scale2)\\n   + bias2).zzz));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = mix (mix (ret_2, (tmpvar_3.yyy * vec3(-0.45, 0.25, 0.5)), texture (sampler_main, fract(uv_1)).yyy), (tmpvar_3.zzz * vec3(1.15, 0.75, -0.2)), texture (sampler_main, fract(uv_1)).zzz);\\n  ret_2 = (tmpvar_4 - mix (-(tmpvar_4), vec3(0.75, 0.75, 0.75), (texture (sampler_main, uv).xzy - 0.125)));\\n  vec3 tmpvar_5;\\n  tmpvar_5 = pow (ret_2, (tmpvar_3.xyz - ret_2));\\n  ret_2 = (tmpvar_5 * tmpvar_5);\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = ret_2;\\n  ret = tmpvar_6.xyz;\\n }"}')},6984:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"wrap":0,"wave_a":0.001,"warpanimspeed":5.278,"warpscale":0.01,"zoomexp":1.47412,"fshader":10,"zoom":1.0303,"warp":0.01,"ob_size":0.005,"ob_a":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":32,"additive":1,"thickoutline":1,"num_inst":33,"r":0,"g":0.5,"g2":0.5,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"trans = int(rand(int(q30)))/15+instance-instance;\\ntrans2 = int(rand(int(q30)))/15+instance-instance;\\ntrans3 = int(rand(int(q30)))/15+instance-instance;\\na = trans;\\na2 = trans2;\\nborder_a = trans3;\\n\\nx = q1 + int(rand(15))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\\ny = q2 + int(rand(15))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\\nrad = .09 + int(rand(int(q30)))/15+instance-instance;\\nr=int(rand(q3))*.1+instance-instance;\\ng=int(rand(q3))*.1+instance-instance;\\nb=int(rand(q3))*.1+instance-instance;\\nr2=int(rand(q3))*.1+instance-instance;\\ng2=int(rand(q3))*.1+instance-instance;\\nb2=int(rand(q3))*.1+instance-instance;\\nborder_r=int(rand(q3))*.1+instance-instance;\\nborder_g=int(rand(q3))*.1+instance-instance;\\nborder_b=int(rand(q3))*.1+instance-instance;"},{"baseVals":{"enabled":1,"sides":32,"thickoutline":1,"textured":1,"num_inst":7,"r":0,"b":0.5,"g2":0,"b2":0.5,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"trans = int(rand(int(q30)))/15+instance-instance;\\ntrans2 = int(rand(int(q30)))/15+instance-instance;\\ntrans3 = int(rand(int(q30)))/15+instance-instance;\\na = trans;\\na2 = trans2;\\nborder_a = trans3;\\n\\nx = q1 + int(rand(15))*0.01*mid_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\\ny = q2 + int(rand(15))*0.01*mid_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\\nrad = .09 + int(rand(int(q30)))/15+instance-instance;\\nr=int(rand(q3))*.1+instance-instance;\\ng=int(rand(q3))*.1+instance-instance;\\nb=int(rand(q3))*.1+instance-instance;\\nr2=int(rand(q3))*.1+instance-instance;\\ng2=int(rand(q3))*.1+instance-instance;\\nb2=int(rand(q3))*.1+instance-instance;\\nborder_r=int(rand(q3))*.1+instance-instance;\\nborder_g=int(rand(q3))*.1+instance-instance;\\nborder_b=int(rand(q3))*.1+instance-instance;\\n"},{"baseVals":{"enabled":1,"sides":32,"thickoutline":1,"num_inst":33,"r":0.5,"r2":0.5,"g2":0,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"trans = int(rand(int(q30)))/15+instance-instance;\\ntrans2 = int(rand(int(q30)))/15+instance-instance;\\ntrans3 = int(rand(int(q30)))/15+instance-instance;\\na = trans;\\na2 = trans2;\\nborder_a = trans3;\\n\\nx = q1 + int(rand(15))*0.01*treb_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\\ny = q2 + int(rand(15))*0.01*treb_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\\nrad = .09 + int(rand(int(q30)))/15+instance-instance;\\nr=int(rand(q3))*.1+instance-instance;\\ng=int(rand(q3))*.1+instance-instance;\\nb=int(rand(q3))*.1+instance-instance;\\nr2=int(rand(q3))*.1+instance-instance;\\ng2=int(rand(q3))*.1+instance-instance;\\nb2=int(rand(q3))*.1+instance-instance;\\nborder_r=int(rand(q3))*.1+instance-instance;\\nborder_g=int(rand(q3))*.1+instance-instance;\\nborder_b=int(rand(q3))*.1+instance-instance;\\n"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"count = if(below(count,9),count+1,0);\\n\\nq1 = 0.5;\\nq2 = 0.5;\\nq3 = count;\\n\\nzoom = 1 + 0.065*bass_att+0.05*bass;\\nmonitor=q3;\\nq30=bass+mid+treb;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  ret_1.x = texture (sampler_main, uv).x;\\n  ret_1.y = texture (sampler_main, mix (uv_orig, uv, vec2(0.1, 0.1))).y;\\n  ret_1.z = texture (sampler_main, mix (uv_orig, uv, vec2(0.2, 0.2))).z;\\n  ret_1 = (ret_1 * 0.98);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ret_1;\\n  ret = tmpvar_2.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  vec3 tmpvar_2;\\n  tmpvar_2 = ((hue_shader * 8.0) - 6.65);\\n  vec4 tmpvar_3;\\n  tmpvar_3 = texture (sampler_main, uv);\\n  ret_1 = (tmpvar_2 * tmpvar_3.y);\\n  ret_1 = (mix (mix (ret_1, tmpvar_2.yzx, tmpvar_3.xxx), tmpvar_2.zxy, tmpvar_3.zzz) * 1.5);\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = ret_1;\\n  ret = tmpvar_4.xyz;\\n }"}')},8954:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":3,"gammaadj":1.56,"decay":0.985,"echo_zoom":1.193,"echo_alpha":1,"echo_orient":1,"wave_mode":7,"wrap":0,"brighten":1,"darken":1,"wave_a":1.006,"wave_scale":0.081,"wave_smoothing":0,"warpanimspeed":0.905,"warpscale":0.01,"zoom":1.05101,"warp":0.01,"wave_y":1,"ob_size":0.025,"ob_a":0.25,"ib_size":0.18,"ib_r":0.3,"ib_g":0.3,"ib_b":0.3,"ib_a":0.03,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":6,"textured":1,"rad":0.01,"ang":3.95841,"tex_ang":2.38751,"tex_zoom":0.74185,"r":0.95,"g":0.98,"b":0.98,"a":0.98,"r2":0.98,"g2":0.98,"b2":0.98,"a2":0.98,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ang = ang + 0.5*time;\\nrad = 0.8 + 0.1*bass_att;"},{"baseVals":{"enabled":1,"sides":100,"rad":0.12824,"r":0,"a":0.3,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"num_inst":2,"y":1,"rad":0.19285,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = 0.5+0.5*sin(time*1.12);\\nwave_g = 0.5+0.5*sin(time*1.22);\\nwave_b = 0.5*0.5*sin(time*1.32);\\nib_r = wave_b;\\nib_g = wave_r;\\nib_b = wave_g;\\n//rot = 0.1*(sin(treb)*sin(treb));\\n\\n// Thanks a bunch to flexi (once again) for beat detection!\\n\\nvol = bass*8 + mid*4 + treb*2;\\nvol = vol*above(vol,17);\\nmonitor = vol;\\nbeat = above(vol,res);\\ndiff = (1-beat)*diff + beat*(vol-res);\\nres = beat*(vol+2*diff) + (1-beat)*(res - (diff*0.04 + 0.12)*60/fps);\\nres = max(0,res);\\nmonitor = res;\\n\\nx = if(beat,rand(60)*0.01 + 0.2,x);\\ny = if(beat,rand(60)*0.01 + 0.2,y);\\nwave_mystery = if(above(x,y),0,-1);","pixel_eqs_eel":"","warp":"","comp":""}')},231:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1,"decay":0.5,"echo_zoom":1.007,"echo_orient":3,"wave_mode":7,"wave_a":0.001,"wave_scale":0.64,"wave_smoothing":0.27,"warpanimspeed":0.01,"warpscale":0.01,"zoom":9.86086,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"wave_y":0.96,"ob_size":0.015,"ob_r":0.84,"ob_g":0.7,"ob_b":1,"ob_a":0.18,"ib_size":0.5,"ib_r":0.98,"ib_g":0.27,"ib_b":0.24,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":32,"rad":0.2,"b":0.4,"a":0.5,"a2":0.2,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ang = time*0.4;;\\nx = 0.5 + 0.3*cos(time*1.23) + 0.03*cos(time*0.7);\\ny = 0.5 + 0.3*sin(time*1.43) + 0.03*sin(time*0.7);\\nr =0.5 + 0.5*sin(q8*0.613 + 1);\\ng = 0.5 + 0.5*sin(q8*0.763 + 2);\\nb = 0.5 + 0.5*sin(q8*0.771 + 5);\\nr2 = 0.5 + 0.5*sin(q8*0.635 + 4);\\ng2 = 0.5 + 0.5*sin(q8*0.616+ 1);\\nb2 = 0.5 + 0.5*sin(q8*0.538 + 3);"},{"baseVals":{"enabled":1,"sides":32,"rad":0.2,"a":0.5,"a2":0.2},"init_eqs_eel":"","frame_eqs_eel":"ang = time*0.4;;\\nx = 0.5 + 0.3*cos(time*1.104) + 0.03*cos(time*0.7);\\ny = 0.5 + 0.3*sin(time*1.27) + 0.03*sin(time*0.7);\\nr =0.5 + 0.5*sin(q8*0.613 + 1);\\ng = 0.5 + 0.5*sin(q8*0.763 + 2);\\nb = 0.5 + 0.5*sin(q8*0.771 + 5);\\nr2 = 0.5 + 0.5*sin(q8*0.635 + 4);\\ng2 = 0.5 + 0.5*sin(q8*0.616+ 1);\\nb2 = 0.5 + 0.5*sin(q8*0.538 + 3);"},{"baseVals":{"enabled":1,"rad":0.2,"a":0.5,"a2":0.2},"init_eqs_eel":"","frame_eqs_eel":"ang = time*0.4;;\\nx = 0.5 + 0.3*cos(time*1.23) + 0.03*cos(time*0.9);\\ny = 0.5 + 0.3*sin(time*1.18) + 0.03*sin(time*0.9);\\nr =0.5 + 0.5*sin(q8*0.413 + 1);\\ng = 0.5 + 0.5*sin(q8*0.363 + 2);\\nb = 0.5 + 0.5*sin(q8*0.871 + 5);\\nr2 = 0.5 + 0.5*sin(q8*0.835 + 4);\\ng2 = 0.5 + 0.5*sin(q8*0.686+ 1);\\nb2 = 0.5 + 0.5*sin(q8*0.938 + 3);\\nsides = 360;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"mv_x=64;mv_y=48;\\nnut=0;\\nstp=0;stq=0;\\nrtp=0;rtq=0;\\nwvr=0;\\ndecay=0;\\ndcsp=0","frame_eqs_eel":"//per frame less reactive volume for all unused q vars, put before other q vars are set for cop out mashing\\nvb = vb*0.95 + (1-vb)*pow(bass_att*treb_att*mid_att,2)*0.02;\\nvvb = vvb*0.95 + (1-vvb)*vb*0.01;\\nvm = vm*0.95 + (1-vm)*pow(mid_att,2)*0.02;\\nvvm = vvm*0.95 + (1-vvm)*vm*0.01;\\nvt = vt*0.95 + (1-vt)*pow(treb_att,2)*0.02;\\nvvt = vvt*0.95 + (1-vvt)*vt*0.01;\\nvvb = min(1,max(0,vvb));\\nvvm = min(1,max(0,vvm));\\nvvt = min(1,max(0,vvt));\\nq1 = vvb*2;//0.5 + vb - vvb;\\nq2 = vvm*2;//0.5 + vm - vvm;\\nq3 = vvt*2;//0.5 + vt - vvt;\\nv=2;\\nbb = bb - vvb*v;\\nmm = mm - vvm*v;\\ntt = tt - vvt*v;\\nq4 = -bb;\\nq5 = -mm;\\nq6 = -tt;\\nq4=(q1+q2+q3)*5;\\nq5=(q1+q2+q3)*5;\\nq6=(q1+q2+q3)*5;\\nq7=(q1+q2+q3)*1;\\nq8=(q1+q2+q3)*5;\\nq9=(q1+q2+q3)*5;\\nq10=(q1+q2+q3)*5;\\nq11=(q1+q2+q3)*5;\\nq12=(q1+q2+q3)*5;\\nq13=(q1+q2+q3)*5;\\nq14=(q1+q2+q3)*5;\\nq15=(q1+q2+q3)*5;\\nq16=(q1+q2+q3)*5;\\nq17=(q1+q2+q3)*5;\\nq18=(q1+q2+q3)*5;\\nq19=(q1+q2+q3)*5;\\nq20=(q1+q2+q3)*5;\\nq21=(q1+q2+q3)*5;\\nq22=(q1+q2+q3)*5;\\nq23=(q1+q2+q3)*5;\\nq24=(q1+q2+q3)*5;\\nq25=(q1+q2+q3)*5;\\nq26=(q1+q2+q3)*5;\\nq27=(q1+q2+q3)*5;\\nq28=(q1+q2+q3)*5;\\nq29=(q1+q2+q3)*5;\\nq30=(q1+q2+q3)*5;\\nq31=(q1+q2+q3)*5;\\nq32=(q1+q2+q3)*5;\\n\\necho_orient=1 + above(sin(time/2), 0 );\\nwrap=above(sin(time/1), 0 );\\nwarp=0.0;\\nzoom=1.00 + sin(time/1)/30;\\nmv_x=sin(time/10)*12 + 52;\\nmv_y=cos(time/10)*8 + 40;\\nsparkadv=sparkadv-0.03 + below(sparkadv, 1);\\ngamma=1 + bass*bass_att","pixel_eqs_eel":"","warp":" shader_body { \\n  float conway_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = (((\\n    ((texture (sampler_blur2, (uv + vec2(0.02, 0.0))).xyz * scale2) + bias2)\\n   - \\n    ((texture (sampler_blur2, (uv - vec2(0.02, 0.0))).xyz * scale2) + bias2)\\n  ).y * 1280.0) * texsize.z);\\n  tmpvar_3.y = (((\\n    ((texture (sampler_blur2, (uv + vec2(0.0, 0.02))).xyz * scale2) + bias2)\\n   - \\n    ((texture (sampler_blur2, (uv - vec2(0.0, 0.02))).xyz * scale2) + bias2)\\n  ).y * 1024.0) * texsize.w);\\n  ret_2.y = texture (sampler_pc_main, (uv - (tmpvar_3 * 0.004))).y;\\n  ret_2.y = (ret_2.y + ((\\n    ((ret_2.y - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).y) - 0.1)\\n   * 0.1) + 0.02));\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (vec2(0.0, 1.0) * texsize.zw);\\n  ret_2.z = (texture (sampler_fc_main, (uv - tmpvar_4)).z - 0.004);\\n  conway_1 = (texture (sampler_pw_main, (uv_orig - texsize.zw)).x + texture (sampler_pw_main, (uv_orig + (vec2(0.0, -1.0) * texsize.zw))).x);\\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(1.0, -1.0) * texsize.zw))).x);\\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(-1.0, 0.0) * texsize.zw))).x);\\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(1.0, 0.0) * texsize.zw))).x);\\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(-1.0, 1.0) * texsize.zw))).x);\\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + tmpvar_4)).x);\\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + texsize.zw)).x);\\n  conway_1 = (conway_1 - fract(conway_1));\\n  float tmpvar_5;\\n  tmpvar_5 = clamp (texture (sampler_pc_main, uv_orig).x, 0.0, 1.0);\\n  ret_2.x = (clamp ((1.0 - \\n    abs((conway_1 - 3.0))\\n  ), 0.0, 1.0) * (1.0 - tmpvar_5));\\n  ret_2.x = (ret_2.x + (clamp (\\n    max ((1.0 - abs((conway_1 - 2.0))), (1.0 - abs((conway_1 - 3.0))))\\n  , 0.0, 1.0) * tmpvar_5));\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = ret_2;\\n  ret = tmpvar_6.xyz;\\n }","comp":" shader_body { \\n  vec2 moebius_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = q11;\\n  tmpvar_3.y = q12;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = q17;\\n  tmpvar_4.y = q18;\\n  vec2 tmpvar_5;\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv - 0.5);\\n  tmpvar_5 = (tmpvar_6 * aspect.xy);\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = ((tmpvar_5.x * q15) - (tmpvar_5.y * q16));\\n  tmpvar_7.y = ((tmpvar_5.x * q16) - (tmpvar_5.y * q15));\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (tmpvar_7 + tmpvar_4);\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = ((q13 * tmpvar_8.x) + (q14 * tmpvar_8.y));\\n  tmpvar_9.y = ((q14 * tmpvar_8.x) - (q13 * tmpvar_8.y));\\n  moebius_1 = (((tmpvar_9 / \\n    ((tmpvar_8.x * tmpvar_8.x) + (tmpvar_8.y * tmpvar_8.y))\\n  ) + tmpvar_3) * 0.5);\\n  float tmpvar_10;\\n  tmpvar_10 = sqrt(dot (moebius_1, moebius_1));\\n  moebius_1 = (0.5 + ((\\n    (1.0 - abs(((\\n      fract((moebius_1 * 0.5))\\n     * 2.0) - 1.0)))\\n   - 0.5) * 0.95));\\n  vec2 tmpvar_11;\\n  tmpvar_11 = (0.5 + (tmpvar_6 * 0.2));\\n  ret_2 = (texture (sampler_main, tmpvar_11).z * vec3(0.4, 0.0, 0.7));\\n  ret_2 = (mix (ret_2, vec3(0.0, 1.0, 1.0), vec3(clamp (texture (sampler_fc_main, moebius_1).y, 0.0, 1.0))) * (1.4 - pow (\\n    (tmpvar_10 * 0.8)\\n  , 0.3)));\\n  ret_2 = (mix (mix (\\n    mix (ret_2, vec3(4.0, 1.0, 0.0), vec3(((clamp (\\n      (texture (sampler_fc_main, tmpvar_11).y - texture (sampler_pc_main, tmpvar_11).y)\\n    , 0.0, 1.0) * 4.0) * (tmpvar_10 * tmpvar_10))))\\n  , vec3(-4.0, -4.0, -4.0), texture (sampler_main, tmpvar_11).xxx), vec3(2.0, 2.0, 2.0), vec3((texture (sampler_pc_main, tmpvar_11).x * 0.75))) - (roam_sin.zyx * roam_cos.ywx));\\n  vec4 tmpvar_12;\\n  tmpvar_12.w = 1.0;\\n  tmpvar_12.xyz = ret_2;\\n  ret = tmpvar_12.xyz;\\n }"}')},5977:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":4,"gammaadj":1.98,"echo_zoom":2.448,"echo_alpha":0.5,"wave_thick":1,"wrap":0,"wave_a":3.645,"wave_scale":1.951,"wave_smoothing":0.5,"wave_mystery":-0.5,"warpscale":2.853,"zoomexp":2.1,"zoom":1.025,"warp":1.29077,"wave_g":0,"wave_b":0,"ob_size":0,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":64,"mv_y":48,"mv_l":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"rad":0.13518,"g2":0,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":1},"init_eqs_eel":"","frame_eqs_eel":"x = 0.3 + 0.05*sin(0.89*q8);\\ny = 0.4 - 0.05*cos(0.77*q8);\\n\\nr = 0.25+0.25*sin(time*0.7679);\\ng = 0.25+0.25*sin(time*0.8079);\\nb = 0.25+0.25*sin(time*0.7339);\\nr2 = 0.25+0.25*sin(time*0.6979);\\ng2 = 0.25+0.25*sin(time*0.849);\\nb2 = 0.25+0.25*sin(time*0.8079);"},{"baseVals":{"enabled":1,"sides":100,"rad":0.06623,"g2":0,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":1},"init_eqs_eel":"","frame_eqs_eel":"x = 0.3 - 0.05*sin(0.7089*q8);\\ny = 0.4 + 0.05*cos(0.5077*q8);\\n\\nr = 0.25+0.25*sin(time*0.6479);\\ng = 0.25+0.25*sin(time*0.5079);\\nb = 0.25+0.25*sin(time*0.9339);\\nr2 = 0.25+0.25*sin(time*0.779);\\ng2 = 0.25+0.25*sin(time*0.707);\\nb2 = 0.25+0.25*sin(time*0.747);"},{"baseVals":{"enabled":1,"sides":100,"rad":0.03646,"g2":0,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":1},"init_eqs_eel":"","frame_eqs_eel":"x = 0.3 + 0.05*sin(0.679*q8);\\ny = 0.4 - 0.05*cos(0.877*q8);\\n\\nr = 0.25+0.25*sin(time*0.5679);\\ng = 0.25+0.25*sin(time*0.4079);\\nb = 0.25+0.25*sin(time*1.1339);\\nr2 = 0.25+0.25*sin(time*0.9979);\\ng2 = 0.25+0.25*sin(time*0.891);\\nb2 = 0.25+0.25*sin(time*0.713);"},{"baseVals":{"enabled":1,"sides":100,"rad":0.0122,"g2":0,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":1},"init_eqs_eel":"","frame_eqs_eel":"x = 0.3 + 0.05*sin(0.916*q8);\\ny = 0.4 - 0.05*cos(0.977*q8);\\n\\nr = 0.25+0.25*sin(time*1.1679);\\ng = 0.25+0.25*sin(time*1.18079);\\nb = 0.25+0.25*sin(time*1.17339);\\nr2 = 0.25+0.25*sin(time*1.16979);\\ng2 = 0.25+0.25*sin(time*1.1849);\\nb2 = 0.25+0.25*sin(time*1.81079);"}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"//per frame less reactive volume for all unused q vars, put before other q vars are set for cop out mashing\\nvb = vb*0.95 + (1-vb)*pow(bass_att,2)*0.02;\\nvvb = vvb*0.95 + (1-vvb)*vb*0.01;\\nvm = vm*0.95 + (1-vm)*pow(mid_att,2)*0.02;\\nvvm = vvm*0.95 + (1-vvm)*vm*0.01;\\nvt = vt*0.95 + (1-vt)*pow(treb_att,2)*0.02;\\nvvt = vvt*0.95 + (1-vvt)*vt*0.01;\\nvvb = min(1,max(0,vvb));\\nvvm = min(1,max(0,vvm));\\nvvt = min(1,max(0,vvt));\\nq1 = vvb*2;//0.5 + vb - vvb;\\nq2 = vvm*2;//0.5 + vm - vvm;\\nq3 = vvt*2;//0.5 + vt - vvt;\\nq4=(q1+q2+q3)*5;\\nq5=(q1+q2+q3)*5;\\nq6=(q1+q2+q3)*5;\\nq7=(q1+q2+q3)*5;\\nq8=(q1+q2+q3)*5;\\nq9=(q1+q2+q3)*5;\\nq10=(q1+q2+q3)*5;\\nq11=(q1+q2+q3)*5;\\nq12=(q1+q2+q3)*5;\\nq13=(q1+q2+q3)*5;\\nq14=(q1+q2+q3)*5;\\nq15=(q1+q2+q3)*5;\\nq16=(q1+q2+q3)*5;\\nq17=(q1+q2+q3)*5;\\nq18=(q1+q2+q3)*5;\\nq19=(q1+q2+q3)*5;\\nq20=(q1+q2+q3)*5;\\nq21=(q1+q2+q3)*5;\\nq22=(q1+q2+q3)*5;\\nq23=(q1+q2+q3)*5;\\nq24=(q1+q2+q3)*5;\\nq25=(q1+q2+q3)*5;\\nq26=(q1+q2+q3)*5;\\nq27=(q1+q2+q3)*5;\\nq28=(q1+q2+q3)*5;\\nq29=(q1+q2+q3)*5;\\nq30=(q1+q2+q3)*5;\\nq31=(q1+q2+q3)*5;\\nq32=(q1+q2+q3)*5;\\n\\n//wave_r = 0.0 + 0.000*( 0.60*sin(0.933*time) + 0.40*sin(1.045*time) );\\n//wave_g = 0.0 + 0.000*( 0.60*sin(0.900*time) + 0.40*sin(0.956*time) );\\n//wave_b = 0.0 + 0.000*( 0.60*sin(0.910*time) + 0.40*sin(0.920*time) );\\n//zoom = zoom + 0.01*( 0.60*sin(0.339*time) + 0.40*sin(0.276*time) );\\n//rot = rot + 0.010*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );\\n//decay = decay - 0.01*equal(frame%6,0);\\nwarp=0;\\n//zoom =1;\\nrot =0;\\ncx=0.5;\\ncy=0.5;\\nq1 = 0.5 + 0.1*sin(time);\\nq2 = 0.5 - 0.1*cos(time);\\nwave_a =0;\\ndecay=.95;\\nq1=0.5 +0.1*sin(q8);\\nq2=0.5;\\n\\n\\nq8 = oldq8+ 0.003*(pow(1+1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6)/fps);\\noldq8 =q8;\\nmybass  = mybass + 0.01*(bass + bass_att);\\n\\n//rot =1 + 0.15*sin(mybass*0.1789);\\n//zoom = 1.6 + 0.1*sin(mybass*0.786);\\nzoom = 1.09;\\n//rot =0.12;\\n//cx = 0.4;\\n//cy = 0.4;\\nq1=0.5 +0.00*sin(0.12*q8);\\nq2=0.5 -0.00*cos(0.177*q8);","pixel_eqs_eel":"myx = (x-q1)*1.1;\\nmyy= (y-q2)*1.1;\\nmyrad = (myx*myx) + (myy*myy);\\ndx = (0.5+0.02*sin(q8))*(myy/(myrad+1));\\ndy = -(0.5+0.02*sin(q8*0.897))*(myx/(myrad+1));\\nrd=bass*rad;\\nrot=rd/10;\\n\\nsy=1.02+(rad/10);\\nsx=sy-myrad;","warp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = ((uv_orig - 0.5) * vec2(1.81, 1.81));\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = ((tmpvar_1.x * tmpvar_1.x) - (tmpvar_1.y * tmpvar_1.y));\\n  tmpvar_2.y = ((2.0 * tmpvar_1.x) * tmpvar_1.y);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = (texture (sampler_fc_main, (tmpvar_2 + vec2(0.448, 0.701))) - 0.004).xyz;\\n  ret = tmpvar_3.xyz;\\n }","comp":"vec3 xlat_mutableneu;\\nvec3 xlat_mutableret1;\\n shader_body { \\n  vec2 uv_1;\\n  float inten_2;\\n  float dist_3;\\n  vec2 uv2_4;\\n  uv_1 = (uv - 0.5);\\n  uv_1 = (uv_1 * aspect.xy);\\n  float tmpvar_5;\\n  tmpvar_5 = (time / 2.0);\\n  dist_3 = (1.0 - fract(tmpvar_5));\\n  inten_2 = ((sqrt(dist_3) * (1.0 - dist_3)) * 8.0);\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = q1;\\n  tmpvar_6.y = q2;\\n  vec2 tmpvar_7;\\n  tmpvar_7 = fract(((\\n    ((3.0 * uv_1) * dist_3)\\n   + 0.5) + (tmpvar_6 * 0.05)));\\n  xlat_mutableneu = (texture (sampler_main, tmpvar_7).xyz - ((texture (sampler_blur1, \\n    (tmpvar_7 + 0.003)\\n  ).xyz * scale1) + bias1));\\n  xlat_mutableret1 = max (vec3(0.0, 0.0, 0.0), (xlat_mutableneu * inten_2));\\n  uv2_4.x = ((uv_1.x * -0.4990803) - (uv_1.y * 0.8665558));\\n  uv2_4.y = ((uv_1.x * 0.8665558) + (uv_1.y * -0.4990803));\\n  dist_3 = (1.0 - fract((0.3333333 + tmpvar_5)));\\n  inten_2 = ((sqrt(dist_3) * (1.0 - dist_3)) * 8.0);\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = q1;\\n  tmpvar_8.y = q2;\\n  vec2 tmpvar_9;\\n  tmpvar_9 = fract(((\\n    ((3.0 * uv2_4) * dist_3)\\n   + 0.5) + (tmpvar_8 * 0.05)));\\n  xlat_mutableneu = (texture (sampler_main, tmpvar_9).xyz - ((texture (sampler_blur1, \\n    (tmpvar_9 + 0.003)\\n  ).xyz * scale1) + bias1));\\n  xlat_mutableret1 = max (xlat_mutableret1, (xlat_mutableneu * inten_2));\\n  uv2_4.x = ((uv_1.x * -0.5018377) - (uv_1.y * -0.8649619));\\n  uv2_4.y = ((uv_1.x * -0.8649619) + (uv_1.y * -0.5018377));\\n  dist_3 = (1.0 - fract((0.6666667 + tmpvar_5)));\\n  inten_2 = ((sqrt(dist_3) * (1.0 - dist_3)) * 8.0);\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = q1;\\n  tmpvar_10.y = q2;\\n  vec2 tmpvar_11;\\n  tmpvar_11 = fract(((\\n    ((3.0 * uv2_4) * dist_3)\\n   + 0.5) + (tmpvar_10 * 0.05)));\\n  xlat_mutableneu = (texture (sampler_main, tmpvar_11).xyz - ((texture (sampler_blur1, \\n    (tmpvar_11 + 0.003)\\n  ).xyz * scale1) + bias1));\\n  xlat_mutableret1 = max (xlat_mutableret1, (xlat_mutableneu * inten_2));\\n  uv2_4.x = ((uv_1.x * 0.9999949) - (uv_1.y * -0.003185092));\\n  uv2_4.y = ((uv_1.x * -0.003185092) + (uv_1.y * 0.9999949));\\n  dist_3 = (1.0 - fract((1.0 + tmpvar_5)));\\n  inten_2 = ((sqrt(dist_3) * (1.0 - dist_3)) * 8.0);\\n  vec2 tmpvar_12;\\n  tmpvar_12.x = q1;\\n  tmpvar_12.y = q2;\\n  vec2 tmpvar_13;\\n  tmpvar_13 = fract(((\\n    ((3.0 * uv2_4) * dist_3)\\n   + 0.5) + (tmpvar_12 * 0.05)));\\n  xlat_mutableneu = (texture (sampler_main, tmpvar_13).xyz - ((texture (sampler_blur1, \\n    (tmpvar_13 + 0.003)\\n  ).xyz * scale1) + bias1));\\n  xlat_mutableret1 = max (xlat_mutableret1, (xlat_mutableneu * inten_2));\\n  vec4 tmpvar_14;\\n  tmpvar_14.w = 1.0;\\n  tmpvar_14.xyz = (xlat_mutableret1 * 4.0);\\n  ret = tmpvar_14.xyz;\\n }"}')},9119:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1.7,"decay":0.968,"echo_zoom":1,"echo_orient":3,"wave_mode":5,"additivewave":1,"wave_dots":1,"wave_thick":1,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":0.498,"warpscale":1.331,"zoom":0.99951,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"wave_y":0.95,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_x":31.2,"mv_y":2.28,"mv_l":2.5,"mv_b":0.8,"mv_a":0.1},"shapes":[{"baseVals":{"sides":7,"textured":1,"rad":0.51645,"g":1,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":7,"textured":1,"y":0.74,"rad":0.61775,"g":1,"b":1,"r2":1,"b2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"y = sin(q2/17)*0.4 + 0.5;\\n\\n//ang = q2/9"},{"baseVals":{"enabled":1,"sides":7,"additive":1,"textured":1,"y":0.74,"rad":0.29289,"g":1,"b":1,"a":0.1,"r2":1,"b2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x= sin(q2/8)*0.1 + 0.5;\\ny= cos(q2/8)*0.1*1.333 + 0.5;\\n\\ny = y + sin(q2/4)*0.4;\\n"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1},"init_eqs_eel":"","frame_eqs_eel":"advance=advance+ 0.005;\\nadvance=if( above(advance,2) , 0, advance);\\nt1=advance","point_eqs_eel":"s=sample*6.28;\\n\\n//plot random x position via function of sample pos;\\nxp=sin(s)+sin(s*0.34)+sin(s*24.3)+sin(s*13.8);\\nxp=xp*0.20;\\n\\n//plot random y position via function of sample pos;\\nyp=cos(s)+sin(s*0.24)+cos(s*17.4)+sin(s*37.7);\\nyp=yp*0.20;\\n\\n//plot random z position via function of sample pos;\\nzp=cos(s)+cos(s*5.24)+cos(s*47.4)+cos(s*27.7);\\nzp=zp*0.25;\\n\\n//pull stars toward screen\\nzp=zp + 1 - t1;\\n\\n//correct when below 0\\nzp=if( below(zp,0) , zp+2 , zp );\\n\\n//darken far stars\\na=(1 - zp*0.5);\\n\\nyq=zp;\\nzq=yp;\\nyp=yq;\\nzp=zq;\\n\\nzp=zp;\\n\\nzp=zp+1.1;\\n\\nx_screen=xp/zp + 0.5;\\ny_screen=yp/zp ;\\n\\nx=x_screen;\\ny=y_screen;\\n\\nr=1;\\ng=1;\\nb=1;\\n\\n\\n\\nn2=abs((sample*1.283)-3.1415);\\n\\ntm =time / 7;\\nr=sin(n2+tm)*0.5+0.5;\\ng=sin(n2+2.1+tm)*0.5+0.5;\\nb=sin(n2+4.2+tm)*0.5+0.5;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"a":0.47,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"xs=sin(sample*6.28);\\nys=cos(sample*6.28);\\nxs=xs*0.7 + 0.5;\\nys=ys*0.7 + 0.5;\\nxs=min(xs,0.958);\\nxs=max(xs,0.042);\\nys=min(ys,0.988);\\nys=max(ys,0.012);\\nx=xs;y=ys;\\n\\nn2=abs((sample*6.283)-3.1415);\\n\\nr=sin(n2+time)*0.5+0.5;\\ng=sin(n2+2.1+time)*0.5+0.5;\\nb=sin(n2+4.2+time)*0.5+0.5;\\n\\na = above( y , 0.98 )"}],"init_eqs_eel":"","frame_eqs_eel":"warp = 0;\\nzoom = 1.001;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = ((texture (sampler_noise_lq, (rand_frame.xy + \\n    ((uv * texsize_noise_lq.zw) * texsize.xy)\\n  )) * 2.0) - 1.0);\\n  ret_1 = (texture (sampler_pw_main, (uv + (\\n    (tmpvar_2.zw * texsize.zw)\\n   * 0.5))).xyz + ((0.59 - \\n    (0.2 * rad)\\n  ) * tmpvar_2.xyz));\\n  vec3 tmpvar_3;\\n  tmpvar_3 = clamp (((\\n    (ret_1 - 0.5)\\n   * 3.0) + 0.25), 0.0, 1.0);\\n  ret_1.x = tmpvar_3.x;\\n  ret_1.yz = tmpvar_3.xx;\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = ret_1;\\n  ret = tmpvar_4.xyz;\\n }","comp":" shader_body { \\n  vec2 uv3_2;\\n  vec3 col_3;\\n  col_3 = vec3(0.0, 0.0, 0.0);\\n  uv3_2 = (uv * 0.25);\\n  for (int i_1 = 0; i_1 < 16; i_1++) {\\n    uv3_2 = (uv3_2 + ((\\n      float(i_1)\\n     * vec2(0.25, 0.0)) - (\\n      float((0.0 == (float(mod (float(i_1), 4.0)))))\\n     * vec2(0.0, 0.25))));\\n    col_3 = mix (col_3, vec3((float(i_1) / 16.0)), vec3(clamp ((\\n      -(texture (sampler_main, uv3_2).y)\\n     + texture (sampler_pw_main, \\n      fract(uv3_2)\\n    ).y), 0.0, 1.0)));\\n  };\\n  vec3 tmpvar_4;\\n  tmpvar_4.z = 0.04;\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (vec2(1.0, 0.0) * texsize.zw);\\n  tmpvar_4.x = (texture (sampler_main, (uv + tmpvar_5)).xyz - texture (sampler_main, (uv - tmpvar_5)).xyz).x;\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (vec2(0.0, 1.0) * texsize.zw);\\n  tmpvar_4.y = (texture (sampler_main, (uv + tmpvar_6)).xyz - texture (sampler_main, (uv - tmpvar_6)).xyz).x;\\n  vec3 tmpvar_7;\\n  tmpvar_7.z = 0.6;\\n  tmpvar_7.xy = (uv - 0.5);\\n  vec4 tmpvar_8;\\n  tmpvar_8 = texture (sampler_main, uv);\\n  vec4 tmpvar_9;\\n  tmpvar_9.w = 1.0;\\n  tmpvar_9.xyz = mix (mix ((tmpvar_8.z * vec3(0.6, 0.2, 1.0)), vec3(1.0, 1.0, 1.0), (col_3 * \\n    clamp ((1.0 - ((\\n      (texture (sampler_blur1, uv).xyz * scale1)\\n     + bias1).x * 2.0)), 0.0, 1.0)\\n  )), vec3(1.1, 0.8, 0.5), vec3(((\\n    (dot (normalize(tmpvar_4), tmpvar_7) * 0.5)\\n   + 0.5) * tmpvar_8.x)));\\n  ret = tmpvar_9.xyz;\\n }"}')},8051:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.93,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"brighten":1,"wave_a":0.001,"wave_scale":1.157,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":0.01,"warpscale":0.01,"dx":0.005,"warp":0.01,"sx":0.9999,"sy":1.0018,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0,"ob_g":0.8,"ob_b":0.7,"ib_size":0.005,"ib_r":0,"ib_g":0,"ib_b":0.3,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":14,"num_inst":512,"rad":0.1026,"tex_ang":0.62832,"r2":1,"g2":0,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\nrad=(bass+treb)/100;\\na=(above(bass+mid+treb,.8));\\nr=int(rand(100))/100;\\ng=int(rand(100))/100;\\nb=int(rand(100))/100;\\nr2=int(rand(100))/100;\\ng2=int(rand(100))/100;\\nb2=int(rand(100))/100;\\nr_border=int(rand(100))/100;\\ng_border=int(rand(100))/100;\\nb_border=int(rand(100))/100;"},{"baseVals":{"enabled":1,"sides":23,"num_inst":1024,"rad":0.10262,"ang":0.43982,"tex_ang":0.62832,"a":0.5,"r2":1,"g2":0,"a2":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\nrad=(bass+treb)/75;\\na=(above(bass+mid+treb,.1));\\nr=int(rand(100))/100;\\ng=int(rand(100))/100;\\nb=int(rand(100))/100;\\nr2=int(rand(100))/100;\\ng2=int(rand(100))/100;\\nb2=int(rand(100))/100;\\nr_border=int(rand(100))/100;\\ng_border=int(rand(100))/100;\\nb_border=int(rand(100))/100;"},{"baseVals":{"sides":14,"additive":1,"num_inst":256,"rad":0.20269,"tex_ang":0.62832,"r2":1,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));"},{"baseVals":{"sides":14,"additive":1,"num_inst":256,"rad":0.22389,"tex_ang":0.62832,"r2":1,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));"}],"waves":[{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));"}],"init_eqs_eel":"mv_x=64;mv_y=48;\\nnut=0;\\nstp=0;stq=0;\\nrtp=0;rtq=0;\\nwvr=0;\\ndecay=0;\\ndcsp=0","frame_eqs_eel":"//per frame less reactive volume for all unused q vars, put before other q vars are set for cop out mashing\\nvb = vb*0.95 + (1-vb)*pow(bass_att*treb_att*mid_att,2)*0.02;\\nvvb = vvb*0.95 + (1-vvb)*vb*0.01;\\nvm = vm*0.95 + (1-vm)*pow(mid_att,2)*0.02;\\nvvm = vvm*0.95 + (1-vvm)*vm*0.01;\\nvt = vt*0.95 + (1-vt)*pow(treb_att,2)*0.02;\\nvvt = vvt*0.95 + (1-vvt)*vt*0.01;\\nvvb = min(1,max(0,vvb));\\nvvm = min(1,max(0,vvm));\\nvvt = min(1,max(0,vvt));\\nq1 = vvb*2;//0.5 + vb - vvb;\\nq2 = vvm*2;//0.5 + vm - vvm;\\nq3 = vvt*2;//0.5 + vt - vvt;\\nv=2;\\nbb = bb - vvb*v;\\nmm = mm - vvm*v;\\ntt = tt - vvt*v;\\nq4 = -bb;\\nq5 = -mm;\\nq6 = -tt;\\nq4=(q1+q2+q3)*5;\\nq5=(q1+q2+q3)*5;\\nq6=(q1+q2+q3)*5;\\nq7=(q1+q2+q3)*5;\\nq8=(q1+q2+q3)*5;\\nq9=(q1+q2+q3)*5;\\nq10=(q1+q2+q3)*5;\\nq11=(q1+q2+q3)*5;\\nq12=(q1+q2+q3)*5;\\nq13=(q1+q2+q3)*5;\\nq14=(q1+q2+q3)*5;\\nq15=(q1+q2+q3)*5;\\nq16=(q1+q2+q3)*5;\\nq17=(q1+q2+q3)*5;\\nq18=(q1+q2+q3)*5;\\nq19=(q1+q2+q3)*5;\\nq20=(q1+q2+q3)*5;\\nq21=(q1+q2+q3)*5;\\nq22=(q1+q2+q3)*5;\\nq23=(q1+q2+q3)*5;\\nq24=(q1+q2+q3)*5;\\nq25=(q1+q2+q3)*5;\\nq26=(q1+q2+q3)*5;\\nq27=(q1+q2+q3)*5;\\nq28=(q1+q2+q3)*5;\\nq29=(q1+q2+q3)*45;\\nq30=(q1+q2+q3)*5;\\nq31=(q1+q2+q3)*5;\\nq32=(q1+q2+q3)*5;\\n\\ndecay=1;\\nzoom=1.003;\\ndx=0;dy=0;sx=1.000001;sy=0.999999;\\n\\nmv_r=.360+(((cos(time/5)*0.3)+0.5*0.5)*0.1);\\nmv_g=.390+(((sin(time/7)*0.3)+0.5*0.5)*0.1);\\nmv_b=.500+((sin((time/7)+0.9)+0.5*0.5)*0.1);\\n\\n\\n\\nchng=sin(time*.5);\\ncthr=.9999;\\nmq21=if(above(chng,cthr),rand(3),mq21);\\nmq22=if(above(chng,cthr),rand(3),mq22);\\nmq23=if(above(chng,cthr),rand(3),mq23);\\nmq24=if(above(chng,cthr),rand(2),mq24);\\nmq25=if(above(chng,cthr),rand(2),mq25);\\nmq26=if(above(chng,cthr),rand(2),mq26);\\nmq27=if(above(chng,cthr),rand(1),mq27);\\nmq28=if(above(chng,cthr),rand(1),mq28);\\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\\nmq31=if(above(chng,cthr),rand(1)*.3,mq31);\\nmonitor=chng;\\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\\nq27=mq27;q28=mq28;q29=mq29;q31=mq31;\\n\\nmonitor=mq1;\\nvol=bass+treb+mid;\\natime=atime+vol;\\nq11=.4+sin(atime*.006        )*.4;\\nq12=.4+cos(atime*.00613828348)*.4;\\nq13=.4+sin(atime*.00598593455)*.4;\\nmonitor=q13;\\nq4=sin(atime*.03);\\nq5=cos(atime*.030383824);\\nq6=tan(atime*.029384834);","pixel_eqs_eel":"//adv=min( (bass*bass*bass), 1);\\n//warp=1*((( atan(time/3) *0.5+0.5)*3)* (x*rad)*2 )+( (y*ang)*2 )*rad;\\n//warp=warp*adv;\\ndx=sin(y+(treb*5))*0.005*rad*bass;\\ndy=cos(x+(treb*5))*0.005*rad*bass;\\n//Do people that don\'t do drugs make shit like this??","warp":" shader_body { \\n  vec2 my_uv_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (0.02 * aspect.zw);\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur2, \\n    ((uv + (vec2(1.0, 0.0) * tmpvar_3)) - floor((uv + (vec2(1.0, 0.0) * tmpvar_3))))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    ((uv - (vec2(1.0, 0.0) * tmpvar_3)) - floor((uv - (vec2(1.0, 0.0) * tmpvar_3))))\\n  ).xyz * scale2) + bias2));\\n  vec3 tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_blur2, \\n    ((uv + (vec2(0.0, 1.0) * tmpvar_3)) - floor((uv + (vec2(0.0, 1.0) * tmpvar_3))))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    ((uv - (vec2(0.0, 1.0) * tmpvar_3)) - floor((uv - (vec2(0.0, 1.0) * tmpvar_3))))\\n  ).xyz * scale2) + bias2));\\n  vec3 tmpvar_6;\\n  tmpvar_6 = ((texture (sampler_blur1, uv).xyz * scale1) + bias1);\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = tmpvar_4.y;\\n  tmpvar_7.y = tmpvar_5.y;\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = tmpvar_5.x;\\n  tmpvar_8.y = -(tmpvar_4.x);\\n  vec2 tmpvar_9;\\n  tmpvar_9 = ((uv - (tmpvar_7 * vec2(0.01, 0.01))) - (tmpvar_8 * -0.02));\\n  ret_2.z = texture (sampler_fc_main, (tmpvar_9 - floor(tmpvar_9))).z;\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = tmpvar_4.x;\\n  tmpvar_10.y = tmpvar_5.x;\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = tmpvar_5.z;\\n  tmpvar_11.y = -(tmpvar_4.z);\\n  my_uv_1 = ((uv - (tmpvar_10 * vec2(0.01, 0.01))) - (tmpvar_11 * -0.02));\\n  ret_2.y = texture (sampler_fc_main, (my_uv_1 - floor(my_uv_1))).y;\\n  vec2 tmpvar_12;\\n  tmpvar_12.x = tmpvar_4.z;\\n  tmpvar_12.y = tmpvar_5.z;\\n  vec2 tmpvar_13;\\n  tmpvar_13.x = tmpvar_5.y;\\n  tmpvar_13.y = -(tmpvar_4.y);\\n  my_uv_1 = ((uv - (tmpvar_12 * vec2(0.01, 0.01))) - (tmpvar_13 * -0.02));\\n  ret_2.x = texture (sampler_fc_main, (my_uv_1 - floor(my_uv_1))).x;\\n  vec4 tmpvar_14;\\n  tmpvar_14 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * my_uv_1.xyy) * (\\n    (q27 * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\\n  if (((ret_2.x > (q21 * q13)) && (ret_2.x <= (q24 * q11)))) {\\n    ret_2.y = (ret_2.y + (tmpvar_14.x * 0.5));\\n  };\\n  if (((ret_2.y > (q22 * q11)) && (ret_2.y <= (q25 * q12)))) {\\n    ret_2.z = (ret_2.z + (tmpvar_14.y * 0.5));\\n  };\\n  if (((ret_2.z > (q23 * q12)) && (ret_2.z <= (q26 * q13)))) {\\n    ret_2.x = (ret_2.x + (tmpvar_14.z * 0.5));\\n  };\\n  ret_2 = (ret_2 + ((\\n    (ret_2 - tmpvar_6)\\n   * vec3(0.02, 0.02, 0.02)) + vec3(0.005, 0.005, 0.005)));\\n  vec4 tmpvar_15;\\n  tmpvar_15.w = 1.0;\\n  tmpvar_15.xyz = ret_2;\\n  ret = tmpvar_15.xyz;\\n }","comp":"vec2 xlat_mutabledz;\\nvec3 xlat_mutablemus;\\nvec3 xlat_mutableneu;\\nvec3 xlat_mutableret1;\\nvec2 xlat_mutableuv3;\\n shader_body { \\n  vec2 uv2_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3.y = 0.0;\\n  tmpvar_3.x = texsize.z;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = 0.0;\\n  tmpvar_4.y = texsize.w;\\n  xlat_mutableret1 = vec3(0.0, 0.0, 0.0);\\n  xlat_mutabledz.x = dot ((texture (sampler_main, (uv + tmpvar_3)).xyz - texture (sampler_main, (uv - tmpvar_3)).xyz), vec3(0.32, 0.49, 0.29));\\n  xlat_mutabledz.y = dot ((texture (sampler_main, (uv + tmpvar_4)).xyz - texture (sampler_main, (uv - tmpvar_4)).xyz), vec3(0.32, 0.49, 0.29));\\n  xlat_mutablemus = (0.5 * texture (sampler_main, uv).xyz);\\n  uv2_1 = (uv - 0.5);\\n  vec2 tmpvar_5;\\n  tmpvar_5.y = 0.0;\\n  tmpvar_5.x = (time / 8.0);\\n  xlat_mutableuv3 = (((0.2 * uv2_1) * q27) + tmpvar_5);\\n  xlat_mutableuv3 = (fract(xlat_mutableuv3) * aspect.yx);\\n  xlat_mutableuv3 = ((0.1 * cos(\\n    (22.0 * xlat_mutableuv3)\\n  )) + (18.0 * xlat_mutabledz));\\n  float tmpvar_6;\\n  tmpvar_6 = clamp ((0.02 / sqrt(\\n    dot (xlat_mutableuv3, xlat_mutableuv3)\\n  )), 0.0, 1.0);\\n  xlat_mutableneu = vec3(tmpvar_6);\\n  vec4 tmpvar_7;\\n  tmpvar_7 = texture (sampler_noisevol_hq, (((vec3((-1.0/0.0), 0.0, 0.0) * xlat_mutableuv3.xyy) * (\\n    (q28 * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q31)));\\n  if (((tmpvar_6 > (q26 * q13)) && (tmpvar_6 <= (q23 * q11)))) {\\n    xlat_mutableneu.z = (tmpvar_6 - (tmpvar_7.x * 0.5));\\n  };\\n  if (((tmpvar_6 > (q25 * q11)) && (tmpvar_6 <= (q22 * q12)))) {\\n    xlat_mutableneu.x = (tmpvar_6 - (tmpvar_7.y * 0.5));\\n  };\\n  if (((xlat_mutableneu.z > (q24 * q12)) && (xlat_mutableneu.z <= (q21 * q13)))) {\\n    xlat_mutableneu.y = (tmpvar_6 - (tmpvar_7.z * 0.5));\\n  };\\n  xlat_mutableneu = ((0.1 * xlat_mutableneu) + ((0.45 * \\n    dot (xlat_mutableneu, vec3(0.32, 0.49, 0.29))\\n  ) * (1.0 + roam_cos)).xyz);\\n  xlat_mutableret1 = max (vec3(0.0, 0.0, 0.0), (xlat_mutableneu * 1.252262));\\n  vec2 tmpvar_8;\\n  tmpvar_8.y = 0.0;\\n  tmpvar_8.x = (time / 8.0);\\n  xlat_mutableuv3 = (((0.2 * uv2_1) * q27) + tmpvar_8);\\n  xlat_mutableuv3 = (fract(xlat_mutableuv3) * aspect.yx);\\n  xlat_mutableuv3 = ((0.1 * cos(\\n    (22.0 * xlat_mutableuv3)\\n  )) + (18.0 * xlat_mutabledz));\\n  float tmpvar_9;\\n  tmpvar_9 = clamp ((0.02 / sqrt(\\n    dot (xlat_mutableuv3, xlat_mutableuv3)\\n  )), 0.0, 1.0);\\n  xlat_mutableneu = vec3(tmpvar_9);\\n  vec4 tmpvar_10;\\n  tmpvar_10 = texture (sampler_noisevol_hq, (((vec3(0.0, 0.05, 0.0) * xlat_mutableuv3.xyy) * (\\n    (q28 * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q31)));\\n  if (((tmpvar_9 > (q26 * q13)) && (tmpvar_9 <= (q23 * q11)))) {\\n    xlat_mutableneu.z = (tmpvar_9 - (tmpvar_10.x * 0.5));\\n  };\\n  if (((tmpvar_9 > (q25 * q11)) && (tmpvar_9 <= (q22 * q12)))) {\\n    xlat_mutableneu.x = (tmpvar_9 - (tmpvar_10.y * 0.5));\\n  };\\n  if (((xlat_mutableneu.z > (q24 * q12)) && (xlat_mutableneu.z <= (q21 * q13)))) {\\n    xlat_mutableneu.y = (tmpvar_9 - (tmpvar_10.z * 0.5));\\n  };\\n  xlat_mutableneu = ((0.1 * xlat_mutableneu) + ((0.45 * \\n    dot (xlat_mutableneu, vec3(0.32, 0.49, 0.29))\\n  ) * (1.0 + roam_cos)).xyz);\\n  xlat_mutableret1 = max (xlat_mutableret1, (xlat_mutableneu * 1.252262));\\n  ret_2 = (xlat_mutableret1 + clamp ((\\n    (8.0 * xlat_mutablemus)\\n   * \\n    (0.2 + xlat_mutableret1)\\n  ), 0.0, 1.0));\\n  ret_2 = (1.0 - ret_2);\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 1.0;\\n  tmpvar_11.xyz = ret_2;\\n  ret = tmpvar_11.xyz;\\n }"}')},7614:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1,"decay":0.96,"echo_zoom":0.997,"echo_orient":1,"wave_mode":2,"wave_dots":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":0.001,"wave_scale":0.012,"wave_smoothing":0.9,"warpanimspeed":0.01,"warpscale":0.01,"warp":0.01,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"ob_size":0,"ob_r":0.11,"ob_b":0.1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":64,"mv_y":48,"mv_l":5,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"sides":32,"additive":1,"rad":0.19477,"r":0,"b":1,"a":0,"r2":0.63,"g2":0.7,"b2":1,"a2":0.07,"border_a":0,"enabled":0},"init_eqs_eel":"flip=1","frame_eqs_eel":"\\nflip=-flip;\\nlens_scale = flip*0.5+0.5;\\nlens_scale = 1 + lens_scale*2.4;\\npos_scale = if( equal(flip,-1) , 0.5 , lens_scale );\\n\\nt1=q1*0.25;\\n\\nsample = 1;\\nn= sample*6.283;\\ncubesize=q2;\\nfix=1/cubesize *0.5;\\ntm=q1*4+sample*4;\\n\\nxp= sin(tm)*cos(tm*3)*0.5+0.5;\\nyp= sin(tm*1.1)*sin(tm*4.1)*0.5+0.5;\\nzp= sin(tm*2.9)*cos(tm*1.77)*0.5+0.5;\\n\\nxp= int(xp*cubesize)/cubesize -0.5+fix;\\nyp= int(yp*cubesize)/cubesize -0.5+fix;\\nzp= int(zp*cubesize)/cubesize -0.5+fix;\\n\\n\\n//rotate\\nang=t1;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp*sang + zp*cang;\\nyq=yp;\\nzq=xp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n//rotate\\nang=t1*0.75;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp;\\nyq=yp*sang + zp*cang;\\nzq=yp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n\\nzp= zp+2;\\nx= -xp/zp*pos_scale + 0.5;\\ny= -yp/zp*pos_scale * 1.333 + 0.5;\\n\\nrad = rad*(1+q8/3)*lens_scale"},{"baseVals":{"sides":6,"rad":0.04378,"r":0.3,"g":0.6,"b":1,"g2":0,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"\\nt1=q1*0.25;\\n\\nsample = 1;\\nn= sample*6.283;\\ncubesize=q2;\\nfix=1/cubesize *0.5;\\ntm=q1*4+sample*4;\\n\\nxp= sin(tm)*cos(tm*3)*0.5+0.5;\\nyp= sin(tm*1.1)*sin(tm*4.1)*0.5+0.5;\\nzp= sin(tm*2.9)*cos(tm*1.77)*0.5+0.5;\\n\\nxp= int(xp*cubesize)/cubesize -0.5+fix;\\nyp= int(yp*cubesize)/cubesize -0.5+fix;\\nzp= int(zp*cubesize)/cubesize -0.5+fix;\\n\\n\\n//rotate\\nang=t1;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp*sang + zp*cang;\\nyq=yp;\\nzq=xp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n//rotate\\nang=t1*0.75;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp;\\nyq=yp*sang + zp*cang;\\nzq=yp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n\\nzp= zp+2;\\nx= xp/zp + 0.5;\\ny= yp/zp * 1.333 + 0.5;\\n\\n\\na= min(a+q8/2,1);\\nr= min(r*(1+q8) , 1 );\\ng= min(g*(1+q8) , 1 );\\n\\nr2= min(q8/2,1);\\ng2= min(q8/4,1);\\n\\nrad= rad*(1+q8/7)"},{"baseVals":{"sides":36,"rad":0.28428,"r":0,"a":0,"r2":0.23,"g2":0.54,"b2":1,"a2":0.05,"border_g":0.8,"border_b":0.4,"border_a":0.45,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"\\nt1=q1*0.25;\\n\\nsample = 1;\\nn= sample*6.283;\\ncubesize=q2;\\nfix=1/cubesize *0.5;\\ntm=q1*4+sample*4;\\n\\nxp= sin(tm)*cos(tm*3)*0.5+0.5;\\nyp= sin(tm*1.1)*sin(tm*4.1)*0.5+0.5;\\nzp= sin(tm*2.9)*cos(tm*1.77)*0.5+0.5;\\n\\nxp= int(xp*cubesize)/cubesize -0.5+fix;\\nyp= int(yp*cubesize)/cubesize -0.5+fix;\\nzp= int(zp*cubesize)/cubesize -0.5+fix;\\n\\n\\n//rotate\\nang=t1;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp*sang + zp*cang;\\nyq=yp;\\nzq=xp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n//rotate\\nang=t1*0.75;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp;\\nyq=yp*sang + zp*cang;\\nzq=yp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n\\nzp= zp+2;\\nx= xp/zp + 0.5;\\ny= yp/zp * 1.333 + 0.5;\\n\\na2= min( a2*(1+q8/2) , 1 );\\nr2= min( r2*(1+q8/4) , 1 );\\ng2= min( g2*(1+q8/3) , 1 );\\n\\nborder_a = min( border_a * (1+q8) , 1 );"},{"baseVals":{"sides":6,"additive":1,"rad":0.15804,"r":0.3,"g":0.6,"b":1,"a":0.14,"r2":0.4,"g2":0.5,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"\\nt1=q1*0.25;\\n\\nsample = 1;\\nn= sample*6.283;\\ncubesize=q2;\\nfix=1/cubesize *0.5;\\ntm=q1*4+sample*4;\\n\\nxp= sin(tm)*cos(tm*3)*0.5+0.5;\\nyp= sin(tm*1.1)*sin(tm*4.1)*0.5+0.5;\\nzp= sin(tm*2.9)*cos(tm*1.77)*0.5+0.5;\\n\\nxp= int(xp*cubesize)/cubesize -0.5+fix;\\nyp= int(yp*cubesize)/cubesize -0.5+fix;\\nzp= int(zp*cubesize)/cubesize -0.5+fix;\\n\\n\\n//rotate\\nang=t1;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp*sang + zp*cang;\\nyq=yp;\\nzq=xp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n//rotate\\nang=t1*0.75;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp;\\nyq=yp*sang + zp*cang;\\nzq=yp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n\\nzp= zp+2;\\nx= xp/zp + 0.5;\\ny= yp/zp * 1.333 + 0.5;\\n\\n\\na= min(a*q8,1);\\n\\nrad= rad*(1+q8)"}],"waves":[{"baseVals":{"enabled":1,"thick":1,"additive":1,"scaling":0.55045,"smoothing":1,"r":0.19,"g":0.15,"b":0.11},"init_eqs_eel":"","frame_eqs_eel":"t1=q1*0.25;\\na=if(above((treb+mid)*.3,1),1,treb*.5);","point_eqs_eel":"n= sample*6.283;\\ncubesize=q2;\\nfix=1/cubesize *0.5;\\ntm=q1*4+sample*4;\\n\\ntaille=bass*.25+0.3;\\nxp= sin(tm)*cos(tm*3)*taille+0.5;\\nyp= sin(tm*1.1)*sin(tm*4.1)*taille+0.5;\\nzp= sin(tm*2.9)*cos(tm*1.77)*taille+0.5;\\n\\nxp= int(xp*cubesize)/cubesize -0.5+fix;\\nyp= int(yp*cubesize)/cubesize -0.5+fix;\\nzp= int(zp*cubesize)/cubesize -0.5+fix;\\n\\n\\n//rotate\\nang=t1;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp*sang + zp*cang;\\nyq=yp;\\nzq=xp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n//rotate\\nang=t1*.75;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp;\\nyq=yp*sang + zp*cang;\\nzq=yp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n\\nzp= zp+2;\\nx= xp/zp + 0.5;\\ny= yp/zp * 1.333 + 0.5;\\nr=bass*.05;\\ng=mid*.05;\\nb=treb*.05;"},{"baseVals":{"thick":1,"r":0.5,"g":0.5,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1=q1*0.25;","point_eqs_eel":"n= sample*6.283;\\ncubesize=q2;\\nfix=1/cubesize *0.5;\\ntm=q1*4+sample*4;\\n\\nxp= sin(tm)*cos(tm*3)*0.5+0.5;\\nyp= sin(tm*1.1)*sin(tm*4.1)*0.5+0.5;\\nzp= sin(tm*2.9)*cos(tm*1.77)*0.5+0.5;\\n\\nxp= int(xp*cubesize)/cubesize -0.5+fix;\\nyp= int(yp*cubesize)/cubesize -0.5+fix;\\nzp= int(zp*cubesize)/cubesize -0.5+fix;\\n\\n\\n//rotate\\nang=t1;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp*sang + zp*cang;\\nyq=yp;\\nzq=xp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n//rotate\\nang=t1*0.75;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp;\\nyq=yp*sang + zp*cang;\\nzq=yp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n\\nzp= zp+3;\\nx= xp/zp + 0.5;\\ny= yp/zp * 1.333 + 0.5;"},{"baseVals":{"usedots":1,"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1=q1*0.25;","point_eqs_eel":"n= sample*6.283;\\ncubesize=q2;\\nfix=1/cubesize *0.5;\\n\\nxp= int(rand(cubesize))/cubesize-0.5+fix;\\nyp= int(rand(cubesize))/cubesize-0.5+fix;\\nzp= int(rand(cubesize))/cubesize-0.5+fix;\\n\\n\\n//rotate\\nang=t1;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp*sang + zp*cang;\\nyq=yp;\\nzq=xp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n//rotate\\nang=t1*0.75;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp;\\nyq=yp*sang + zp*cang;\\nzq=yp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n\\nzp= zp+2;\\nx= xp/zp + 0.5;\\ny= yp/zp * 1.333 + 0.5;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"mv_x=64;mv_y=48;\\nnut=0;\\nstp=0;stq=0;\\nrtp=0;rtq=0;\\nwvr=0;\\n\\ndcsp=0;\\n\\nsize =6;\\nbc=0;","frame_eqs_eel":"decay=0.985;\\nvol= (bass+mid+treb)*0.25;\\nvol = vol*vol;\\n\\nq8=vol;\\nmtime=mtime+vol*0.01*(75/fps);\\n\\nq7 = mtime;\\n\\nmonitor=512/8;\\n\\nwarp=0;\\nq1=mtime*0.9;\\n\\nbeat = above(vol,1.5);\\nbc = max(bc,0);\\nbc = if( equal(bc,0) , bc+beat , bc-(1/fps)/4 );\\n\\ntrigger = equal(bc,1);\\n\\nmonitor=bc;\\n\\nsize = size + trigger;\\nsize = if( above(size,9) ,6 , size );\\nmainangle=q1*0.255*0.75;\\nkick= if(equal(trigger,1),2,1);\\ndx=cos(mainangle)*.003*kick;\\ndy=sin(mainangle)*.003*kick;\\nzoom=1-(vol*.005)*abs(cos(mainangle));\\nq2=int(size); //cubesize","pixel_eqs_eel":"","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  float tmpvar_2;\\n  tmpvar_2 = dot (texsize.zw, texsize.zw);\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (uv - 0.5);\\n  tmpvar_1.xyz = (max (max (texture (sampler_main, uv).xyz, texture (sampler_main, \\n    ((tmpvar_3 * (1.0 - (8.0 * \\n      sqrt(tmpvar_2)\\n    ))) + 0.5)\\n  ).xyz), texture (sampler_main, (\\n    (tmpvar_3 * (1.0 + (8.0 * sqrt(tmpvar_2))))\\n   + 0.5)).xyz) - 0.03);\\n  ret = tmpvar_1.xyz;\\n }","comp":" shader_body { \\n  vec2 uv_1;\\n  vec3 ret_2;\\n  uv_1 = (0.05 + (0.9 * uv));\\n  ret_2 = (texture (sampler_main, uv_1).xyz * 4.0);\\n  ret_2 = (ret_2 - ((\\n    (texture (sampler_blur1, uv_1).xyz * scale1)\\n   + bias1) * 4.0));\\n  ret_2 = -(ret_2);\\n  ret_2 = ((pow (ret_2, vec3(0.5, 0.5, 0.7)) - 0.1) * 1.1);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_2;\\n  ret = tmpvar_3.xyz;\\n }"}')},5732:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":2,"gammaadj":1.7,"decay":1,"echo_zoom":2.221,"echo_alpha":0.6,"wave_mode":1,"wave_thick":1,"wave_brighten":0,"darken":1,"wave_a":0,"wave_scale":1.616,"wave_smoothing":0,"wave_mystery":0.2,"modwavealphastart":1,"modwavealphaend":1,"warpscale":1.331,"fshader":1,"zoom":0.99951,"warp":0.01,"wave_g":0,"wave_b":0.65,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_x":1,"mv_y":1,"mv_a":0},"shapes":[{"baseVals":{"sides":23,"additive":1,"thickoutline":1,"textured":1,"num_inst":64,"rad":0.1661,"tex_zoom":0.9997,"a":0.15,"r2":0.2,"g2":0,"b2":0.7,"a2":0.2,"border_g":0.5,"border_b":0.15,"border_a":0.5,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":100,"textured":1,"num_inst":7,"rad":0.03333,"r":0,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = int(rand(100))*.01+instance-instance;\\ny = int(rand(100))*.01+instance-instance;\\n\\na =1;\\nvol=bass+mid+treb;\\nrad = int(rand(int(vol)))/7+instance-instance;"},{"baseVals":{"enabled":1,"sides":100,"textured":1,"rad":0.03333,"r":0,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = int(rand(100))*.01;\\ny = int(rand(100))*.01;\\n\\na = if(above(frame%7,0),0,1);\\n\\nvol=bass+mid+treb;\\nrad = vol*.1;"},{"baseVals":{"enabled":1,"sides":100,"textured":1,"rad":0.03333,"r":0,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = int(rand(100))*.01;\\ny = int(rand(100))*.01;\\n\\na = if(above(frame%7,0),0,1);\\n\\nvol=bass+mid+treb;\\nrad = vol*.1;"}],"waves":[{"baseVals":{"enabled":1,"sep":256,"spectrum":1,"smoothing":0.8,"a":0.3},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"sw = (1-sw)*above(sample,0);\\n\\nosa = sample*above(sample,0);\\n\\nmod = pow(value1*2,2)*sign(value1)*.5;\\n\\nmod = value1;\\nmod = mod*sw;\\n\\ny = if(sw,osa,sample*.5+.25);\\ny = sample*.5+.25;\\ny = (y-0.5)/(q32) + 0.5;\\nx = .5 - mod*.5;\\n\\nosa = sample;\\n\\nmo = 3.7 + mod*6 + q1;\\n\\nr = .5 + sin(q8*.9 +mo)*.5;\\ng = .5 + sin(q8*.89+mo + 1.5472)*.5;\\nb = .5 + sin(q8*.88+mo + 2.8944)*.5;\\n\\n//a = 3 - abs(mod)*12;\\n//a = 3-sw;\\n//a = max(0,min(a,1));"},{"baseVals":{"enabled":1,"sep":256,"spectrum":1,"smoothing":0.8,"a":0.3},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"sw = (1-sw)*below(sample,1);\\n\\nosa = sample*above(sample,0);\\n\\nmod = pow(value2*2,2)*sign(value2)*.5;\\n\\nmod = value2;\\nmod = mod*sw;\\n\\ny = if(sw,osa,sample*.5+.25);\\ny = sample*.5+.25;\\ny = (y-0.5)/(q32) + 0.5;\\nx = .5 + mod*.5;\\n\\nosa = sample;\\n\\nmo = 3.7 + mod*6 + q1;\\n\\nr = .5 + sin(q8*.95+mo)*.5;\\ng = .5 + sin(q8*.96+mo + 1.5472)*.5;\\nb = .5 + sin(q8*.97+mo + 2.8944)*.5;\\n\\n//a = 3 - abs(mod)*12;\\n//a = 3-sw;\\n//a = max(0,min(a,1));"},{"baseVals":{"sep":256,"spectrum":1,"smoothing":0.8,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"sw = (1-sw)*below(sample,1);\\n\\nosa = sample*above(sample,0);\\n\\n//mod = pow((value1-value2)*2,2)*sign(value1-value2)*.5;\\n\\nmod = value2-value1;\\nmod = mod*sw;\\n\\ny = if(sw,osa,sample);\\ny = (1-sample*1.6)*.4+.42;\\nx = 0 + mod*4+.5;\\n\\n//osa = sample;\\n\\nmo = 3.7 + mod*6 + q1;\\n\\npi23 = 4*asin(-1)*.3333333;\\nrunbass = bass*.01+runbass;\\nruntreb = treb*.01+runtreb;\\nrunmid  = mid *.01+runmid ;\\nvol = (runbass+runtreb+runmid)*.01;\\n\\nr = (sin(mo*.01 + vol - 0*pi23)+1)*.5;\\ng = (sin(mo*.01 + vol - 1*pi23)+1)*.5;\\nb = (sin(mo*.01 + vol - 2*pi23)+1)*.5;\\n\\na = 1 - abs(mod)*12;\\na = 1-sw;\\na = max(0,min(a,1));"},{"baseVals":{"sep":144,"spectrum":1,"thick":1,"additive":1,"scaling":100,"smoothing":1,"r":0.2,"g":0.11,"a":0.51,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\nab = 1;","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"beatb=above(bass,bass_att);\\nbeatbhard=if(beatb,bass-bass_att*.9,beatbhard);\\n\\nbeatm=above(mid,mid_att);\\nbeatmhard=if(beatm,mid-mid_att*.9,beatmhard);\\n\\nbeatt=above(treb,treb_att);\\nbeatthard=if(beatt,treb-treb_att*.9,beatthard);\\n\\nvol=bass+mid+treb;\\nvol_att=bass_att+mid_att+treb_att;\\n\\n\\nq1=beatb;\\nq2=beatbhard;\\nq3=beatm;\\nq4=beatmhard;\\nq5=beatt;\\nq6=beatthard;\\n\\ndecay=.999;\\nwrap=1;\\natime=atime+vol;\\nq8=atime*.01;\\nq32=aspecty;","pixel_eqs_eel":"cx=(x*20*q2)%(20*q6);\\ncy=(y*20*q4)%(20*q6);\\n\\nrot=.02*q1+.002*q3-.02*q6;\\nzoom=1-(.1*q2*q1)+.2*q6*q5-.1*q4*q3;","warp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 1.5)) + rand_frame.xy);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ((texture (sampler_main, (\\n    mix (uv_orig, uv, vec2(((dot (texture (sampler_main, \\n      mix (uv_orig, uv, vec2(4.0, 4.0))\\n    ).xyz, vec3(0.32, 0.49, 0.29)) - dot (\\n      ((texture (sampler_blur1, mix (uv_orig, uv, vec2(-8.0, -8.0))).xyz * scale1) + bias1)\\n    , vec3(0.32, 0.49, 0.29))) * 8.0)))\\n   + \\n    (((texture (sampler_noise_lq, tmpvar_1) - 0.5).xy * texsize.zw) * 0.3)\\n  )).xyz + (\\n    (texture (sampler_noise_lq, tmpvar_1) - 0.5)\\n   * 0.004).xyz) + -0.001);\\n  ret = tmpvar_2.xyz;\\n }","comp":"vec2 xlat_mutabledz;\\nvec3 xlat_mutableneu;\\nvec3 xlat_mutableret1;\\nvec2 xlat_mutableuv3;\\n shader_body { \\n  vec2 uv2_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2.y = 0.0;\\n  tmpvar_2.x = texsize.z;\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = 0.0;\\n  tmpvar_3.y = texsize.w;\\n  xlat_mutabledz.x = dot ((texture (sampler_main, (uv + tmpvar_2)).xyz - texture (sampler_main, (uv - tmpvar_2)).xyz), vec3(0.32, 0.49, 0.29));\\n  xlat_mutabledz.y = dot ((texture (sampler_main, (uv + tmpvar_3)).xyz - texture (sampler_main, (uv - tmpvar_3)).xyz), vec3(0.32, 0.49, 0.29));\\n  uv2_1 = (uv - 0.5);\\n  vec2 tmpvar_4;\\n  tmpvar_4.y = 0.0;\\n  float tmpvar_5;\\n  tmpvar_5 = (time / 8.0);\\n  tmpvar_4.x = tmpvar_5;\\n  float tmpvar_6;\\n  tmpvar_6 = (q27 * 2.0);\\n  xlat_mutableuv3 = (((tmpvar_6 * uv2_1) * 0.1) + tmpvar_4);\\n  xlat_mutableuv3 = (fract(xlat_mutableuv3) * aspect.yx);\\n  xlat_mutableuv3 = ((0.1 * cos(\\n    (22.0 * xlat_mutableuv3)\\n  )) + (18.0 * xlat_mutabledz));\\n  float tmpvar_7;\\n  tmpvar_7 = clamp ((0.02 / sqrt(\\n    dot (xlat_mutableuv3, xlat_mutableuv3)\\n  )), 0.0, 1.0);\\n  vec4 tmpvar_8;\\n  tmpvar_8 = (1.0 + roam_cos);\\n  xlat_mutableneu = ((0.1 * vec3(tmpvar_7)) + ((0.45 * \\n    dot (vec3(tmpvar_7), vec3(0.32, 0.49, 0.29))\\n  ) * tmpvar_8).xyz);\\n  xlat_mutableret1 = max (vec3(0.0, 0.0, 0.0), (xlat_mutableneu * 1.252262));\\n  vec2 tmpvar_9;\\n  tmpvar_9.y = 0.0;\\n  tmpvar_9.x = tmpvar_5;\\n  xlat_mutableuv3 = (((tmpvar_6 * uv2_1) * 0.1) + tmpvar_9);\\n  xlat_mutableuv3 = (fract(xlat_mutableuv3) * aspect.yx);\\n  xlat_mutableuv3 = ((0.1 * cos(\\n    (22.0 * xlat_mutableuv3)\\n  )) + (18.0 * xlat_mutabledz));\\n  float tmpvar_10;\\n  tmpvar_10 = clamp ((0.02 / sqrt(\\n    dot (xlat_mutableuv3, xlat_mutableuv3)\\n  )), 0.0, 1.0);\\n  xlat_mutableneu = ((0.1 * vec3(tmpvar_10)) + ((0.45 * \\n    dot (vec3(tmpvar_10), vec3(0.32, 0.49, 0.29))\\n  ) * tmpvar_8).xyz);\\n  xlat_mutableret1 = max (xlat_mutableret1, (xlat_mutableneu * 1.252262));\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 1.0;\\n  tmpvar_11.xyz = (xlat_mutableret1 + clamp ((\\n    (texture (sampler_main, uv).xyz * 4.0)\\n   * \\n    (0.2 + xlat_mutableret1)\\n  ), 0.0, 1.0));\\n  ret = tmpvar_11.xyz;\\n }"}')},4069:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1.7,"decay":1,"echo_zoom":2.221,"echo_alpha":0.6,"wave_mode":3,"additivewave":1,"wave_thick":1,"darken":1,"wave_a":0.001,"wave_scale":0.625,"wave_smoothing":0.9,"modwavealphastart":0.88,"modwavealphaend":1.98,"warpanimspeed":0.01,"warpscale":0.01,"fshader":1,"dx":0.005,"warp":0.01,"sx":0.9999,"sy":1.0018,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0,"ob_g":0.8,"ob_b":0.7,"ib_size":0.005,"ib_r":0,"ib_g":0,"ib_b":0.3,"mv_x":0,"mv_y":0,"mv_l":1,"mv_r":0.39,"mv_g":0.44,"mv_b":0.9},"shapes":[{"baseVals":{"sides":16,"thickoutline":1,"textured":1,"rad":0.97235,"ang":0.1884,"tex_ang":0.62832,"tex_zoom":0.77829,"g":1,"b":1,"a":0.9,"r2":1,"b2":1,"a2":0.5,"border_r":0.59,"border_g":0.81,"border_b":0.69,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"//DMT=1-below((bass_att+mid_att+treb_att)/3,0.7);\\n//a=DMT;\\n//a2=.5*DMT;\\n//border_a=0.4*DMT;\\n//atime=atime+(above( sin(time),0 )*0.02 );\\n//ang=0.188+((sin(atime/5)*0.5+0.5)*2.39);\\n//x=(sin(atime*0.3)*0.07)+0.5;\\n//y=(cos(atime*0.1)*0.07)+0.5;\\n//rad=((bass+mid+treb)/6)*1.4+0.2;\\n//sides=bass*16"},{"baseVals":{"enabled":1,"sides":5,"thickoutline":1,"rad":0.4149,"tex_ang":0.25133,"tex_zoom":1.136,"r":0.36,"g2":0,"b2":0.2,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"\\nadv=adv+(bass*bass)/15;\\n\\nr=int(rand(10))*0.1*0.5+0.5;\\ng=r;\\nb=r;\\n\\nx=int(rand(100))*0.01*0.5 + 0.25;\\ny=int(rand(100))*0.01*0.5 + 0.25;\\nrad=int(rand(100))*0.01*0.4+0.1;\\nang=rad"},{"baseVals":{"sides":24,"textured":1,"x":0.2,"y":0.8,"rad":0.59958,"tex_ang":1.25664,"tex_zoom":0.49831,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"textured":1,"x":0.86,"y":0.2,"rad":0.80814,"tex_zoom":0.45112,"g":1,"b":1,"r2":1,"b2":0.9,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"sep":256,"thick":1,"additive":1,"scaling":100,"smoothing":0.9,"r":0,"g":0.7,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x=cos(time)*0.1;\\ny=sin(time)*0.1"},{"baseVals":{"scaling":81.95444,"smoothing":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"wave_x=1;","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"mv_x=64;mv_y=48;\\nnut=0;\\nstp=0;stq=0;\\nrtp=0;rtq=0;\\nwvr=0;\\ndecay=0;\\ndcsp=0","frame_eqs_eel":"chng=sin(time*.5);\\ncthr=.9999;\\nmq21=if(above(chng,cthr),rand(3),mq21);\\nmq22=if(above(chng,cthr),rand(3),mq22);\\nmq23=if(above(chng,cthr),rand(3),mq23);\\nmq24=if(above(chng,cthr),rand(2),mq24);\\nmq25=if(above(chng,cthr),rand(2),mq25);\\nmq26=if(above(chng,cthr),rand(2),mq26);\\nmq27=if(above(chng,cthr),rand(1),mq27);\\nmq28=if(above(chng,cthr),rand(1),mq28);\\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\\nmq31=if(above(chng,cthr),rand(1)*.3,mq31);\\nmonitor=chng;\\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\\nq27=mq27;q28=mq28;q29=mq29;q31=mq31;\\n\\nmonitor=mq1;\\nvol=bass+treb+mid;\\natime=atime+vol;\\nq11=.4+sin(atime*.006        )*.4;\\nq12=.4+cos(atime*.00613828348)*.4;\\nq13=.4+sin(atime*.00598593455)*.4;\\nmonitor=q13;\\n\\ndecay=1.0;\\nzoom=1.009;\\ndx=0;dy=0;sx=1.000001;sy=0.999999;\\n\\nmv_r=.360+(((cos(time/5)*0.3)+0.5*0.5)*0.1);\\nmv_g=.390+(((sin(time/7)*0.3)+0.5*0.5)*0.1);\\nmv_b=.500+((sin((time/7)+0.9)+0.5*0.5)*0.1);\\n\\n\\ncx=-1;cy=2;rot=-treb*0.002;\\n\\ncx=sin(time*0.1)*1.5 + 0.5;\\ncy=cos(time*0.2)*1.5 + 0.5","pixel_eqs_eel":"//adv=min( (bass*bass*bass), 1);\\n//warp=1*((( atan(time/3) *0.5+0.5)*3)* (x*rad)*2 )+( (y*ang)*2 )*rad;\\n//warp=warp*adv;\\n\\n//dx=cos(y)*0.005*(rad+2)*treb ;\\n//dy=sin(x)*0.005*(rad+2)*treb\\n\\n//Do people that don\'t do drugs make shit like this??\\n//flexi per vertex\\ncx1 = 0.5+sin(time*0.618)*0.2;\\ncy1 = 0.5+cos(time*1.618)*0.2;\\ndir = bass;\\nd = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));\\nx1 = if( above(d,0.3),0,  sin(y-cy1)*0.05*dir);\\ny1 = if( above(d,0.3),0, -sin(x-cx1)*0.05*dir);\\ncx1 = 0.5+sin(time*2.618)*0.3;\\ncy1 = 0.5+cos(time*3.14)*0.3;\\ndir = -mid*2;\\nd = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));\\nx2 = if( above(d,0.2),0,  sin(y-cy1)*0.05*dir);\\ny2 = if( above(d,0.2),0, -sin(x-cx1)*0.05*dir);\\ncx1 = 0.5+sin(-time*2.618)*0.4;\\ncy1 = 0.5+cos(-time*1.14)*0.4;\\ndir = treb*3;\\nd = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));\\nx3 = if( above(d,0.1),0,  sin(y-cy1)*0.05*dir);\\ny3 = if( above(d,0.1),0, -sin(x-cx1)*0.05*dir);\\ndx = dx+x1+x2+x3;\\ndy = dy+y1+y2+y3;","warp":" shader_body { \\n  vec2 uv_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 1.5)) + rand_frame.xy);\\n  uv_1 = (mix (uv_orig, uv, vec2((\\n    (dot (texture (sampler_main, mix (uv_orig, uv, vec2(4.0, 4.0))).xyz, vec3(0.32, 0.49, 0.29)) - dot (((texture (sampler_blur1, \\n      mix (uv_orig, uv, vec2(-8.0, -8.0))\\n    ).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29)))\\n   * 8.0))) + ((\\n    (texture (sampler_noise_lq, tmpvar_3) - 0.5)\\n  .xy * texsize.zw) * 0.3));\\n  ret_2 = ((texture (sampler_main, uv_1).xyz + (\\n    (texture (sampler_noise_lq, tmpvar_3) - 0.5)\\n   * 0.004).xyz) + -0.001);\\n  vec4 tmpvar_4;\\n  tmpvar_4 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv_1.xyy) * (\\n    (q27 * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\\n  if (((ret_2.x > (q21 * q13)) && (ret_2.x <= (q24 * q11)))) {\\n    ret_2.y = (ret_2.y + (tmpvar_4.x * 0.5));\\n  };\\n  if (((ret_2.y > (q22 * q11)) && (ret_2.y <= (q25 * q12)))) {\\n    ret_2.z = (ret_2.z + (tmpvar_4.y * 0.5));\\n  };\\n  if (((ret_2.z > (q23 * q12)) && (ret_2.z <= (q26 * q13)))) {\\n    ret_2.x = (ret_2.x + (tmpvar_4.z * 0.5));\\n  };\\n  ret_2 = (ret_2 - ((roam_sin.xyz * slow_roam_cos.wzy) * 0.5));\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = ret_2;\\n  ret = tmpvar_5.xyz;\\n }","comp":" shader_body { \\n  vec2 dz_1;\\n  vec3 dy_2;\\n  vec3 dx_3;\\n  vec2 d_4;\\n  vec3 ret_5;\\n  vec2 tmpvar_6;\\n  vec2 tmpvar_7;\\n  tmpvar_7 = (vec2(1.0, 0.0) * texsize.zw);\\n  tmpvar_6.x = (texture (sampler_main, (uv + tmpvar_7)).xyz - texture (sampler_main, (uv - tmpvar_7)).xyz).y;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (vec2(0.0, 1.0) * texsize.zw);\\n  tmpvar_6.y = (texture (sampler_main, (uv + tmpvar_8)).xyz - texture (sampler_main, (uv - tmpvar_8)).xyz).y;\\n  d_4 = (texsize.zw * 2.0);\\n  dx_3 = (((2.0 * \\n    ((texture (sampler_blur1, (uv + (vec2(1.0, 0.0) * d_4))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv - (vec2(1.0, 0.0) * d_4))).xyz * scale1) + bias1)\\n  )) * 0.5);\\n  dy_2 = (((2.0 * \\n    ((texture (sampler_blur1, (uv + (vec2(0.0, 1.0) * d_4))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv - (vec2(0.0, 1.0) * d_4))).xyz * scale1) + bias1)\\n  )) * 0.5);\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = dx_3.y;\\n  tmpvar_9.y = dy_2.y;\\n  dz_1 = ((tmpvar_6 * 3.0) + tmpvar_9);\\n  ret_5 = (vec3(((\\n    pow ((sqrt(dot (dz_1, dz_1)) * 0.8), 0.7)\\n   * 2.0) + (\\n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\\n  .y * 2.0))) * vec3(0.2, 0.3, 0.6));\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = q19;\\n  tmpvar_10.y = q20;\\n  vec2 tmpvar_11;\\n  tmpvar_11 = fract(((0.5 + \\n    (uv - 0.5)\\n  ) + (tmpvar_10 * vec2(-1.0, 1.0))));\\n  vec2 tmpvar_12;\\n  tmpvar_12.x = dx_3.y;\\n  tmpvar_12.y = dy_2.y;\\n  vec3 tmpvar_13;\\n  tmpvar_13 = ((mix (ret_5, vec3(3.0, 2.0, 1.0), \\n    ((texture (sampler_blur3, (tmpvar_11 - tmpvar_12)).xyz * scale3) + bias3)\\n  .xxx) * (vec3(1.0, 1.0, 1.0) - \\n    ((texture (sampler_blur2, (tmpvar_11 - dz_1)).xyz * scale2) + bias2)\\n  .xxx)) * (vec3(1.0, 1.0, 1.0) - vec3((0.75 * texture (sampler_main, tmpvar_11).x))));\\n  ret_5 = tmpvar_13;\\n  vec4 tmpvar_14;\\n  tmpvar_14 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * dz_1.xyy) * (\\n    (q28 * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q31)));\\n  if (((tmpvar_13.x > (q26 * q13)) && (tmpvar_13.x <= (q23 * q11)))) {\\n    ret_5.z = (tmpvar_13.z - (tmpvar_14.x * 0.5));\\n  };\\n  if (((tmpvar_13.y > (q25 * q11)) && (tmpvar_13.y <= (q22 * q12)))) {\\n    ret_5.x = (tmpvar_13.x - (tmpvar_14.y * 0.5));\\n  };\\n  if (((ret_5.z > (q24 * q12)) && (ret_5.z <= (q21 * q13)))) {\\n    ret_5.y = (tmpvar_13.y - (tmpvar_14.z * 0.5));\\n  };\\n  vec3 tmpvar_15;\\n  tmpvar_15 = mix ((ret_5 * (vec3(1.0, 1.0, 1.0) - vec3(\\n    (((texture (sampler_blur1, uv).xyz * scale1) + bias1).z * 4.0)\\n  ))), vec3(2.0, 2.0, 2.0), texture (sampler_main, uv).zzz);\\n  ret_5 = tmpvar_15;\\n  vec4 tmpvar_16;\\n  tmpvar_16.w = 1.0;\\n  tmpvar_16.xyz = tmpvar_15;\\n  ret = tmpvar_16.xyz;\\n }"}')},9160:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":4,"gammaadj":1,"decay":0,"echo_zoom":1,"echo_orient":3,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoomexp":0.69972,"zoom":0.99455,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0,"ob_r":0.01,"ob_a":1,"ib_size":0,"ib_r":0.4,"ib_g":0.4,"ib_b":0.6,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"textured":1,"rad":1.79142,"tex_ang":0.62832,"g":1,"b":1,"a":0,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));\\npi23=4*asin(1)*.333333333;\\nvol=bass+mid+treb;\\nr=(sin(time*.3+vol-0*pi23)+1)*.5;\\ng=(sin(time*.3+vol-1*pi23)+1)*.5;\\nb=(sin(time*.3+vol-2*pi23)+1)*.5;"},{"baseVals":{"enabled":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));\\npi23=4*asin(1)*.333333333;\\nvol=bass+mid+treb;\\nr=(sin(time*.3+vol-0*pi23)+1)*.5;\\ng=(sin(time*.3+vol-1*pi23)+1)*.5;\\nb=(sin(time*.3+vol-2*pi23)+1)*.5;"},{"baseVals":{"enabled":1,"usedots":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));\\npi23=4*asin(1)*.333333333;\\nvol=bass+mid+treb;\\nr=(sin(time*.3+vol-0*pi23)+1)*.5;\\ng=(sin(time*.3+vol-1*pi23)+1)*.5;\\nb=(sin(time*.3+vol-2*pi23)+1)*.5;"},{"baseVals":{"enabled":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));\\npi23=4*asin(1)*.333333333;\\nvol=bass+mid+treb;\\nr=(sin(time*.3+vol-0*pi23)+1)*.5;\\ng=(sin(time*.3+vol-1*pi23)+1)*.5;\\nb=(sin(time*.3+vol-2*pi23)+1)*.5;"}],"init_eqs_eel":"","frame_eqs_eel":"wave_y = wave_y + 0.150*(0.60*sin(1.742*bass) + 0.35*sin(1.921*time));\\nwave_x = wave_x + 0.150*(0.60*sin(2.111*time) + 0.35*sin(1.111*time));\\nwave_mystery = wave_mystery +0.05*sin(5.1*time) + 0.04*sin(4.5*time);\\nwave_r = wave_r + 0.5*sin(1.11*time);\\nwave_b = wave_b + 0.5*sin(1.3*time);\\nwave_g = wave_g + 0.5*sin(1.2*time);\\ndx = dx + 0.01*sin(5*time);\\ndy = dy + 0.01*sin(10*time);\\nzoom = zoom - 0.05*sin(0.2*mid);\\nrot = rot + 0.005*sin(bass);\\ncx = cx + 0.25*sin(0.5*bass);\\ncy = cy + 0.25*cos(0.5*treb);\\ndx = dx + 0.01*sin(0.25*time);\\ndy = dy + 0.01*sin(0.25*time);\\nwave_mystery = wave_mystery + above(sin(frame%3),0)*1;","pixel_eqs_eel":"sim = 1.5*sin(1.5*bass);\\nzoom = zoom - if(above(sim,0.75), (1-rad)*0.2, 0);","warp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 1.5)) + rand_frame.xy);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ((texture (sampler_main, (\\n    mix (uv_orig, uv, vec2(((dot (texture (sampler_main, \\n      mix (uv_orig, uv, vec2(4.0, 4.0))\\n    ).xyz, vec3(0.32, 0.49, 0.29)) - dot (\\n      ((texture (sampler_blur2, mix (uv_orig, uv, vec2(-12.0, -12.0))).xyz * scale2) + bias2)\\n    , vec3(0.32, 0.49, 0.29))) * 12.0)))\\n   + \\n    (((texture (sampler_noise_lq, tmpvar_1) - 0.5).xy * texsize.zw) * 0.5)\\n  )).xyz + (\\n    (texture (sampler_noise_lq, tmpvar_1) - 0.5)\\n   * 0.006).xyz) + -0.0006);\\n  ret = tmpvar_2.xyz;\\n }","comp":" shader_body { \\n  vec2 uv_1;\\n  vec3 ret_2;\\n  uv_1 = (0.05 + (0.9 * uv));\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (((uv_1 - 0.5) * vec2(-1.0, 1.0)) + 0.5);\\n  ret_2 = (abs((\\n    ((texture (sampler_blur1, uv_1).xyz * scale1) + bias1)\\n   - \\n    mix (texture (sampler_main, uv_1).xyz, texture (sampler_main, tmpvar_3).xyz, vec3(0.5, 0.5, 0.5))\\n  )) * 6.0);\\n  ret_2 = (ret_2 * (0.1 + abs(\\n    max (sin(bass_att), sin(treb_att))\\n  )));\\n  ret_2 = (ret_2 * max ((\\n    (texture (sampler_blur3, uv_1).xyz * scale3)\\n   + bias3), (\\n    (texture (sampler_blur3, tmpvar_3).xyz * scale3)\\n   + bias3)));\\n  ret_2 = (ret_2 * 1.5);\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = ret_2;\\n  ret = tmpvar_4.xyz;\\n }"}')},6149:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":3,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_thick":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":0.401,"wave_scale":3.177,"wave_smoothing":0,"wave_mystery":-0.4,"modwavealphastart":1,"modwavealphaend":1,"warpanimspeed":2.289,"warpscale":5.472,"zoomexp":0.01,"zoom":0.9901,"warp":1.8566,"ob_size":0.005,"ob_a":1,"ib_size":0,"ib_r":1,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"additive":1,"num_inst":512,"y":0.55,"rad":0.06689,"tex_zoom":0.78748,"g":1,"b":1,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"\\n\\nd = 1.4; // makes the perspective impact\\nzoom = 0.7;\\n\\n\\n// Kardan angles\\n\\nw1 = q3; // first rotation: clockwise in the desktop pane\\nw2 = q4; // rotation around vertical axis\\nw3 = q5; // rotation around horizontal axis\\n\\n\\n// definition of the 3D shape\\n\\ni = instance;\\n\\nmy_x = (i % 8)/8 - 0.5;\\nmy_y = (i % 64 - (i % 8))/64 - 0.5;\\nmy_z = (i - (i % 64 - (i % 8))/64)/512 - 0.5;\\n\\n\\n// 3D rotations\\n\\nx1 = cos(w1)*my_x + sin(w1)*my_y;\\ny1 = -sin(w1)*my_x + cos(w1)*my_y;\\nz1 = my_z;\\n\\nx2 = cos(w2)*x1 + sin(w2)*z1;\\nz2 = -sin(w2)*x1 + cos(w2)*z1;\\ny2 = y1;\\n\\ny3 = cos(w3)*y2 + sin(w3)*z2;\\nz3 = -sin(w3)*y2 + cos(w3)*z2;\\nx3 = x2;\\n\\n// perspective calculation\\n\\nl = sqrt(x3*x3 + y3*y3);\\nw = atan2(x3,y3);\\np = tan(asin(1) + atan2(d+z3,l));\\nd = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));\\n\\nrad = rad/d;\\nmy_x = zoom*sin(w)*p;\\nmy_y = zoom*cos(w)*p;\\n\\nx = 0.5 + my_x;\\ny = 0.5 + my_y;\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;"},{"baseVals":{"sides":100,"additive":1,"thickoutline":1,"textured":1,"x":0.52,"y":0.41,"rad":0.5216,"ang":0.1885,"tex_zoom":0.73458,"g":1,"b":1,"r2":1,"b2":1,"a2":0.75,"border_a":0,"enabled":0},"init_eqs_eel":"vx = 0","frame_eqs_eel":""},{"baseVals":{"sides":100,"additive":1,"thickoutline":1,"textured":1,"x":0.48,"y":0.41,"rad":0.61162,"ang":5.96903,"tex_zoom":0.73458,"g":1,"b":1,"r2":1,"b2":1,"a2":0.75,"border_a":0,"enabled":0},"init_eqs_eel":"vx = 0","frame_eqs_eel":""},{"baseVals":{"sides":100,"additive":1,"thickoutline":1,"y":0.75,"rad":0.07059,"tex_zoom":0.73458,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"vx = 0","frame_eqs_eel":"x = q1;\\ny = q5;"}],"waves":[{"baseVals":{"additive":1,"r":0.2,"g":0,"b":0,"a":0.3,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=time*0.4 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2)*0.5 +0.5;\\n\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8;\\nxp=xq*sin(ang) + yq*cos(ang);\\nyp=xq*cos(ang) - yq*sin(ang);\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3 + 0.5);\\nxp=xq*sin(ang) + yq*cos(ang);\\nyp=xq*cos(ang) - yq*sin(ang);\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2)*0.75 - 1.05;\\nxq=xp*sin(ang) + zp*cos(ang);\\nyq=yp;\\nzq=xp*cos(ang) - zp*sin(ang);\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nxp=xq;\\nyp=yq*cos(ang) - zq*sin(ang);\\nzp=yq*sin(ang) + zq*cos(ang);\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\n//a=(1-sample)*flip;\\n\\n//b=b+pow(1-sample,2)*0.3;\\n\\nx = 0.5 + (x-0.5)/q1;\\ny = 0.5 + (y-0.5)/q2 + 0.1;"},{"baseVals":{"additive":1,"r":0.2,"g":0,"b":0,"a":0.3,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=time*0.4 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2;\\nyp=-yp;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2)*0.5 +0.5;\\n\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8;\\nxp=xq*sin(ang) + yq*cos(ang);\\nyp=xq*cos(ang) - yq*sin(ang);\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3 + 0.5);\\nxp=xq*sin(ang) + yq*cos(ang);\\nyp=xq*cos(ang) - yq*sin(ang);\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2)*0.75 - 1.05;\\nxq=xp*sin(ang) + zp*cos(ang);\\nyq=yp;\\nzq=xp*cos(ang) - zp*sin(ang);\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nxp=xq;\\nyp=yq*cos(ang) - zq*sin(ang);\\nzp=yq*sin(ang) + zq*cos(ang);\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\n//a=(1-sample)*flip;\\n\\n\\n//b=b+pow(1-sample,2)*0.3;\\n\\n\\nx = 0.5 + (x-0.5)/q1;\\ny = 0.5 + (y-0.5)/q2 + 0.1;\\n"},{"baseVals":{"samples":61,"thick":1,"scaling":2.44415,"smoothing":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt7 = q7;\\nt8 = q8;","point_eqs_eel":"x = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2\\n+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;\\n\\ny = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6\\n+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;"},{"baseVals":{"samples":61,"scaling":2.44415,"smoothing":0,"enabled":0},"init_eqs_eel":"t2 = 0","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt7 = q7;\\nt8 = q8;","point_eqs_eel":"x = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2\\n+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;\\n\\ny = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6\\n+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;"}],"init_eqs_eel":"","frame_eqs_eel":"//per frame less reactive volume for all unused q vars, put before other q vars are set for cop out mashing\\nvb = vb*0.95 + (1-vb)*pow(bass_att*treb_att*mid_att,2)*0.02;\\nvvb = vvb*0.95 + (1-vvb)*vb*0.01;\\nvm = vm*0.95 + (1-vm)*pow(mid_att,2)*0.02;\\nvvm = vvm*0.95 + (1-vvm)*vm*0.01;\\nvt = vt*0.95 + (1-vt)*pow(treb_att,2)*0.02;\\nvvt = vvt*0.95 + (1-vvt)*vt*0.01;\\nvvb = min(1,max(0,vvb));\\nvvm = min(1,max(0,vvm));\\nvvt = min(1,max(0,vvt));\\nq1 = vvb*10;//0.5 + vb - vvb;\\nq2 = vvm*10;//0.5 + vm - vvm;\\nq3 = vvt*10;//0.5 + vt - vvt;\\nv=2;\\nbb = bb - vvb*v;\\nmm = mm - vvm*v;\\ntt = tt - vvt*v;\\nq4 = -bb;\\nq5 = -mm;\\nq6 = -tt;\\nq4=(q1+q2+q3)*5;\\nq5=(q1+q2+q3)*5;\\nq6=(q1+q2+q3)*5;\\nq7=(q1+q2+q3)*5;\\nq8=(q1+q2+q3)*5;\\nq9=(q1+q2+q3)*5;\\nq10=(q1+q2+q3)*5;\\nq11=(q1+q2+q3)*5;\\nq12=(q1+q2+q3)*5;\\nq13=(q1+q2+q3)*5;\\nq14=(q1+q2+q3)*5;\\nq15=(q1+q2+q3)*5;\\nq16=(q1+q2+q3)*5;\\nq17=(q1+q2+q3)*5;\\nq18=(q1+q2+q3)*5;\\nq19=(q1+q2+q3)*5;\\nq20=(q1+q2+q3)*5;\\nq21=(q1+q2+q3)*5;\\nq22=(q1+q2+q3)*5;\\nq23=(q1+q2+q3)*5;\\nq24=(q1+q2+q3)*5;\\nq25=(q1+q2+q3)*5;\\nq26=(q1+q2+q3)*5;\\nq27=(q1+q2+q3)*5;\\nq28=(q1+q2+q3)*5;\\nq29=(q1+q2+q3)*5;\\nq30=(q1+q2+q3)*5;\\nq31=(q1+q2+q3)*5;\\nq32=(q1+q2+q3)*5;\\n\\n\\nwave_a = 0;\\n//q1 =aspectx;\\n//q2 = aspecty;\\n\\n\\nb = b + bass*bass*0.5;\\nm = m + mid*mid*0.5;\\nt = t + treb*treb*0.5;\\n\\nq3 = b*0.012;\\nq4 = m*0.012;\\nq5 = t*0.012;\\nq20=bass+treb+mid;","pixel_eqs_eel":"","warp":"vec3 xlat_mutablemus;\\n shader_body { \\n  vec3 crisp_1;\\n  vec2 uv6_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (uv - 0.5);\\n  float tmpvar_4;\\n  tmpvar_4 = (dot (texture (sampler_noise_hq, (uv / 4.0)), vec4(0.32, 0.49, 0.29, 0.0)) * q31);\\n  mat2 tmpvar_5;\\n  tmpvar_5[uint(0)].x = cos(tmpvar_4);\\n  tmpvar_5[uint(0)].y = sin(tmpvar_4);\\n  tmpvar_5[1u].x = -(sin(tmpvar_4));\\n  tmpvar_5[1u].y = cos(tmpvar_4);\\n  uv6_2 = (tmpvar_3 * tmpvar_5);\\n  uv6_2 = (uv6_2 + sin((q32 * tmpvar_3)));\\n  xlat_mutablemus = (vec3((0.2 / (\\n    sqrt(uv6_2.x)\\n   + 0.2))) * vec3(1.1, 1.0, 0.95));\\n  xlat_mutablemus = (xlat_mutablemus * (0.9 + (0.1 * texture (sampler_noise_hq, uv))).xyz);\\n  vec3 tmpvar_6;\\n  tmpvar_6 = ((texture (sampler_blur1, fract(uv)).xyz * scale1) + bias1);\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = dot ((texture (sampler_main, (uv + vec2(0.005, 0.0))) - texture (sampler_main, (uv - vec2(0.005, 0.0)))), vec4(0.32, 0.49, 0.29, 0.0));\\n  tmpvar_7.y = dot ((texture (sampler_main, (uv + vec2(0.0, 0.005))) - texture (sampler_main, (uv - vec2(0.0, 0.005)))), vec4(0.32, 0.49, 0.29, 0.0));\\n  crisp_1 = (texture (sampler_main, (uv + (tmpvar_7 * 0.02))).xyz + (texture (sampler_main, uv).xyz / 2.0));\\n  crisp_1 = (crisp_1 * 0.67);\\n  crisp_1 = (crisp_1 + ((0.08 * xlat_mutablemus) - (\\n    sqrt(dot (tmpvar_7, tmpvar_7))\\n   * tmpvar_6)));\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = (((crisp_1 - \\n    (dot (tmpvar_6, vec3(0.32, 0.49, 0.29)) * 0.04)\\n  ) * 0.99) - 0.04);\\n  ret = tmpvar_8.xyz;\\n }","comp":" shader_body { \\n  vec3 ret2_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (texsize.zw * 6.0);\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = dot (((\\n    (texture (sampler_blur1, (uv + (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (uv - (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  tmpvar_4.y = dot (((\\n    (texture (sampler_blur1, (uv + (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (uv - (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (uv - (0.25 * tmpvar_4));\\n  vec4 tmpvar_6;\\n  tmpvar_6 = texture (sampler_blur3, uv);\\n  ret_2 = (vec3((0.25 * dot (\\n    clamp ((2.0 * ((tmpvar_6.xyz * scale3) + bias3)), 0.0, 1.0)\\n  , vec3(0.32, 0.49, 0.29)))) - (0.8 * dot (\\n    clamp (((20.0 * (\\n      (0.6 * ((texture (sampler_blur2, uv).xyz * scale2) + bias2))\\n     - 0.01)) - 2.0), 0.0, 1.0)\\n  , vec3(0.32, 0.49, 0.29))));\\n  vec4 tmpvar_7;\\n  tmpvar_7 = texture (sampler_blur1, uv);\\n  ret_2 = ((ret_2 + dot (\\n    clamp (((30.0 * (\\n      (texture (sampler_main, uv).xyz + (((tmpvar_7.xyz * scale1) + bias1) * 0.15))\\n     - 0.01)) - 2.0), 0.0, 1.0)\\n  , vec3(0.32, 0.49, 0.29))) - 0.1);\\n  ret_2 = (ret_2 + 0.55);\\n  vec3 tmpvar_8;\\n  tmpvar_8 = mix (ret_2, (ret_2 * (\\n    ((texture (sampler_blur3, tmpvar_5).xyz * scale3) + bias3)\\n   - \\n    ((texture (sampler_blur1, tmpvar_5).xyz * scale1) + bias1)\\n  )), pow (hue_shader, (ret_2 + q20)));\\n  ret2_1 = ((tmpvar_8 - (0.9 * texture (sampler_main, tmpvar_5).xyz)) - 0.1);\\n  ret2_1 = (ret2_1 - 0.75);\\n  vec3 tmpvar_9;\\n  tmpvar_9 = mix (ret2_1, ((1.2 * ret2_1) * (\\n    ((tmpvar_6.xyz * scale3) + bias3)\\n   - \\n    ((tmpvar_7.xyz * scale1) + bias1)\\n  )), pow (hue_shader.zxy, tmpvar_8));\\n  ret2_1 = tmpvar_9;\\n  vec3 tmpvar_10;\\n  tmpvar_10 = abs((tmpvar_8 - (1.2 * tmpvar_9)));\\n  ret_2 = (tmpvar_10 * tmpvar_10);\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 1.0;\\n  tmpvar_11.xyz = ret_2;\\n  ret = tmpvar_11.xyz;\\n }"}')},1232:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1.45,"decay":0.99,"echo_zoom":1.008,"echo_alpha":0.5,"echo_orient":1,"wave_thick":1,"wave_brighten":0,"darken":1,"wave_a":0.625,"wave_scale":1.187,"wave_smoothing":0,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1.459,"warpscale":2.007,"fshader":0.19,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0.5},"shapes":[{"baseVals":{"enabled":1,"sides":9,"thickoutline":1,"textured":1,"rad":0.12566,"ang":3.39292,"tex_ang":0.3768,"tex_zoom":0.32473,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_r":0.03,"border_g":0.67,"border_b":0.79,"border_a":1},"init_eqs_eel":"","frame_eqs_eel":"x=x+sin(time*0.9)*.13;\\ny=y+sin(time*0.5)*.16;\\nborder_r = q1;\\nborder_b = q2;\\nborder_g = q3;"},{"baseVals":{"enabled":1,"sides":3,"thickoutline":1,"rad":0.12572,"a2":1,"border_g":0,"border_b":0,"border_a":1},"init_eqs_eel":"","frame_eqs_eel":"//: Aderrasi was here too\\nrad = rad -0.2 + 0.2*bass_att;;\\nr = r + 0.25*sin(1.1*time) + 0.2*sin(0.25*time);\\ng = g + 0.25*cos(1.5*time) + 0.22*cos(0.24*time);\\nb = b + 0.25*sin(0.6*time) + 0.27*cos(0.7*time);\\nr2 = 1-abs(r);\\ng2 = 1-abs(g);\\nb2 = 1-abs(b);\\nang = ang + 3*abs(tan(1*time));\\nx = x + 0.14*cos(time) + 0.2*sin(0.42*time);\\ny = y + 0.16*sin(1.2*time) + 0.15*sin(0.8*time) + 0.21*cos(0.45*time);\\nborder_r = q1;\\nborder_b = q2;\\nborder_g = q3;"},{"baseVals":{"enabled":1,"ang":0.03,"r":0.21,"g":0.44,"b":0.23,"r2":0.18,"b2":0.11,"a2":1,"border_r":0.15,"border_g":0.4,"border_b":0.48,"border_a":1},"init_eqs_eel":"","frame_eqs_eel":"ang = time*2.4;\\nx = 0.5 + 0.22*cos(time*3.3) + 0.14*cos(time*1.2);\\ny = 0.5 + 0.26*sin(time*3.1) + 0.13*sin(time*1.7);\\nr = 0.5 + 0.5*sin(time*1.013 + 5);\\ng = 0.5 + 0.5*sin(time*1.063 + 2);\\nb = 0.5 + 0.5*sin(time*1.054 + 1);\\nr2 = 0.5 + 0.5*sin(time*1.085 + 3);\\ng2 = 0.5 + 0.5*sin(time*1.056+ 1);\\nb2 = 0.5 + 0.5*sin(time*1.038 + 4);\\nborder_r = q1;\\nborder_b = q2;\\nborder_g = q3;"},{"baseVals":{"enabled":1,"sides":5,"x":0.51,"y":0.49,"rad":0.09986,"ang":0.06283,"a2":1,"border_r":0.46,"border_g":0.28,"border_b":0.54,"border_a":1},"init_eqs_eel":"","frame_eqs_eel":"x = 0.5 + 0.07*cos(q4*0.5) + 0.31*sin(time*3.5);\\ny = 0.5 + 0.07*sin(q4*0.5) + 0.31*cos(time*3.5);\\nr = 0.5 + 0.5*sin(time*1.013 + 2);\\ng = 0.5 + 0.5*sin(time*0.863 + 3);\\nb = 0.5 + 0.5*sin(time*1.054 + 1);\\nr2 = 0.5 + 0.5*sin(time*1.185 + 3);\\ng2 = 0.5 + 0.5*sin(time*1.356+ 2);\\nb2 = 0.5 + 0.5*sin(time*0.738 + 4);\\nborder_r = q1;\\nborder_b = q2;\\nborder_g = q3;"}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"vol = 0; p1 = 0;\\nvx = .2; vy = -0.1;\\nkx = 0; ky = 0;","frame_eqs_eel":"dec_med = pow (0.96, 30/fps);\\ndec_slow = pow (0.999, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %8;\\nindex2 = (index2 + is_beat*bnot(index))%2;\\nindex3 = (index3 + is_beat*bnot(index) * bnot(index2))%2;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\n\\nvol = bass_att + treb_att;\\nv2 = v2 * dec_med + vol * (1-dec_med) ;\\nq26 = max(atan (vol - v2),0);\\nq27 = index + 1;\\n\\nsw = sw*dec_med + (1-dec_med)*(index2%2);\\nq28 = sw;\\nkiss = kiss*dec_med \\n      +(1-dec_med)*bnot(index2)*below(index,4);\\nq29 = kiss;\\n\\nk1 =  is_beat*bnot(index);\\nk2 =  is_beat*bnot(index);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.1416/2;\\nmonitor = k1;\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\n\\nq5 = cos(time/4);\\nq6 = -sin(time/4);\\nq7 = -q6;\\nq8 = q5;\\n\\nzoom = 1;\\nrot = -0;\\n\\n\\n//KUGEL-POS\\ndt = .1*30/fps;\\nm = 1; //Masse\\n//Gravitationszentrum\\nx0 = .0; y0 = 0;\\n\\nax = -(xk-x0)/m + sign(vx+.001)*dt*bass/40; \\nay = -(yk-y0)/m + sign(vy+.001)*dt*treb/40;\\nmonitor = index3;\\nvx = vx*dec_slow + ax * dt; \\nvy = vy*dec_slow + ay * dt;\\n\\nxk = xk + vx*dt; \\nyk = yk + vy*dt;\\n\\nq9 = xk; q10 = yk;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = ((uv * texsize.xy) * 0.08);\\n  vec3 tmpvar_2;\\n  tmpvar_2 = (texture (sampler_main, (uv - (\\n    ((sin(tmpvar_1) / cos(tmpvar_1)) * texsize.zw)\\n   * 3.0))).xyz + (vec3(dot (texture (sampler_noise_lq, \\n    ((((texsize.xy * texsize_noise_lq.zw).x * uv) * 0.02) + (0.1 * rand_frame).xy)\\n  ), vec4(0.32, 0.49, 0.29, 0.0))) / 30.0));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ((mix (tmpvar_2, \\n    (1.0 - tmpvar_2.zyx)\\n  , vec3(0.01, 0.01, 0.01)) - 0.03) - (0.2 * pow (\\n    (1.0 - rad)\\n  , 18.0)));\\n  ret = tmpvar_3.xyz;\\n }","comp":"vec3 xlat_mutableblur;\\nvec3 xlat_mutableneu;\\nvec3 xlat_mutableret1;\\n shader_body { \\n  vec2 uv_1;\\n  float inten_2;\\n  float dist_3;\\n  vec2 uv2_4;\\n  uv_1 = (uv - 0.5);\\n  uv_1 = (uv_1 * aspect.xy);\\n  uv2_4.x = ((uv_1.x * 0.0007962743) - (uv_1.y * 0.9999997));\\n  uv2_4.y = ((uv_1.x * 0.9999997) + (uv_1.y * 0.0007962743));\\n  dist_3 = (1.0 - fract((0.25 + time)));\\n  inten_2 = ((pow (dist_3, 0.3) * (1.0 - dist_3)) * 2.0);\\n  xlat_mutableblur = ((texture (sampler_blur1, (\\n    ((2.0 * uv2_4) * dist_3)\\n   + 0.54)).xyz * scale1) + bias1);\\n  xlat_mutableneu = (texture (sampler_main, ((\\n    (2.0 * uv2_4)\\n   * dist_3) + 0.5)).xyz + xlat_mutableblur);\\n  xlat_mutableret1 = (xlat_mutableneu * inten_2);\\n  uv2_4.x = ((uv_1.x * -0.9999987) - (uv_1.y * 0.001592548));\\n  uv2_4.y = ((uv_1.x * 0.001592548) + (uv_1.y * -0.9999987));\\n  dist_3 = (1.0 - fract((0.5 + time)));\\n  inten_2 = ((pow (dist_3, 0.3) * (1.0 - dist_3)) * 2.0);\\n  xlat_mutableblur = ((texture (sampler_blur1, (\\n    ((2.0 * uv2_4) * dist_3)\\n   + 0.54)).xyz * scale1) + bias1);\\n  xlat_mutableneu = (texture (sampler_main, ((\\n    (2.0 * uv2_4)\\n   * dist_3) + 0.5)).xyz + xlat_mutableblur);\\n  xlat_mutableret1 = ((xlat_mutableret1 * 0.9) + (xlat_mutableneu * inten_2));\\n  uv2_4.x = ((uv_1.x * -0.00238894) - (uv_1.y * -0.9999971));\\n  uv2_4.y = ((uv_1.x * -0.9999971) + (uv_1.y * -0.00238894));\\n  dist_3 = (1.0 - fract((0.75 + time)));\\n  inten_2 = ((pow (dist_3, 0.3) * (1.0 - dist_3)) * 2.0);\\n  xlat_mutableblur = ((texture (sampler_blur1, (\\n    ((2.0 * uv2_4) * dist_3)\\n   + 0.54)).xyz * scale1) + bias1);\\n  xlat_mutableneu = (texture (sampler_main, ((\\n    (2.0 * uv2_4)\\n   * dist_3) + 0.5)).xyz + xlat_mutableblur);\\n  xlat_mutableret1 = ((xlat_mutableret1 * 0.9) + (xlat_mutableneu * inten_2));\\n  uv2_4.x = ((uv_1.x * 0.9999949) - (uv_1.y * -0.003185092));\\n  uv2_4.y = ((uv_1.x * -0.003185092) + (uv_1.y * 0.9999949));\\n  dist_3 = (1.0 - fract((1.0 + time)));\\n  inten_2 = ((pow (dist_3, 0.3) * (1.0 - dist_3)) * 2.0);\\n  xlat_mutableblur = ((texture (sampler_blur1, (\\n    ((2.0 * uv2_4) * dist_3)\\n   + 0.54)).xyz * scale1) + bias1);\\n  xlat_mutableneu = (texture (sampler_main, ((\\n    (2.0 * uv2_4)\\n   * dist_3) + 0.5)).xyz + xlat_mutableblur);\\n  xlat_mutableret1 = ((xlat_mutableret1 * 0.9) + (xlat_mutableneu * inten_2));\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = xlat_mutableret1;\\n  ret = tmpvar_5.xyz;\\n }"}')},1067:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":2.05,"decay":0.99,"echo_zoom":1.008,"echo_alpha":0.5,"echo_orient":1,"wave_thick":1,"wave_brighten":0,"darken":1,"wave_a":0.625,"wave_scale":1.187,"wave_smoothing":0,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1.459,"warpscale":2.007,"fshader":0.19,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0.5},"shapes":[{"baseVals":{"enabled":1,"sides":9,"thickoutline":1,"textured":1,"rad":0.12566,"ang":3.39292,"tex_ang":0.3768,"tex_zoom":0.32473,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_r":0.03,"border_g":0.67,"border_b":0.79,"border_a":1},"init_eqs_eel":"","frame_eqs_eel":"x=x+sin(time*0.9)*.13;\\ny=y+sin(time*0.5)*.16;\\nborder_r = q1;\\nborder_b = q2;\\nborder_g = q3;"},{"baseVals":{"enabled":1,"sides":3,"thickoutline":1,"rad":0.12572,"a2":1,"border_g":0,"border_b":0,"border_a":1},"init_eqs_eel":"","frame_eqs_eel":"//: Aderrasi was here too\\nrad = rad -0.2 + 0.2*bass_att;;\\nr = r + 0.25*sin(1.1*time) + 0.2*sin(0.25*time);\\ng = g + 0.25*cos(1.5*time) + 0.22*cos(0.24*time);\\nb = b + 0.25*sin(0.6*time) + 0.27*cos(0.7*time);\\nr2 = 1-abs(r);\\ng2 = 1-abs(g);\\nb2 = 1-abs(b);\\nang = ang + 3*abs(tan(1*time));\\nx = x + 0.14*cos(time) + 0.2*sin(0.42*time);\\ny = y + 0.16*sin(1.2*time) + 0.15*sin(0.8*time) + 0.21*cos(0.45*time);\\nborder_r = q1;\\nborder_b = q2;\\nborder_g = q3;"},{"baseVals":{"enabled":1,"ang":0.03,"r":0.21,"g":0.44,"b":0.23,"r2":0.18,"b2":0.11,"a2":1,"border_r":0.15,"border_g":0.4,"border_b":0.48,"border_a":1},"init_eqs_eel":"","frame_eqs_eel":"ang = time*2.4;\\nx = 0.5 + 0.22*cos(time*3.3) + 0.14*cos(time*1.2);\\ny = 0.5 + 0.26*sin(time*3.1) + 0.13*sin(time*1.7);\\nr = 0.5 + 0.5*sin(time*1.013 + 5);\\ng = 0.5 + 0.5*sin(time*1.063 + 2);\\nb = 0.5 + 0.5*sin(time*1.054 + 1);\\nr2 = 0.5 + 0.5*sin(time*1.085 + 3);\\ng2 = 0.5 + 0.5*sin(time*1.056+ 1);\\nb2 = 0.5 + 0.5*sin(time*1.038 + 4);\\nborder_r = q1;\\nborder_b = q2;\\nborder_g = q3;"},{"baseVals":{"enabled":1,"sides":5,"x":0.51,"y":0.49,"rad":0.09986,"ang":0.06283,"a2":1,"border_r":0.46,"border_g":0.28,"border_b":0.54,"border_a":1},"init_eqs_eel":"","frame_eqs_eel":"x = 0.5 + 0.07*cos(q4*0.5) + 0.31*sin(time*3.5);\\ny = 0.5 + 0.07*sin(q4*0.5) + 0.31*cos(time*3.5);\\nr = 0.5 + 0.5*sin(time*1.013 + 2);\\ng = 0.5 + 0.5*sin(time*0.863 + 3);\\nb = 0.5 + 0.5*sin(time*1.054 + 1);\\nr2 = 0.5 + 0.5*sin(time*1.185 + 3);\\ng2 = 0.5 + 0.5*sin(time*1.356+ 2);\\nb2 = 0.5 + 0.5*sin(time*0.738 + 4);\\nborder_r = q1;\\nborder_b = q2;\\nborder_g = q3;"}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"vol = 0; p1 = 0;\\nvx = .2; vy = -0.1;\\nkx = 0; ky = 0;","frame_eqs_eel":"dec_med = pow (0.96, 30/fps);\\ndec_slow = pow (0.999, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %8;\\nindex2 = (index2 + is_beat*bnot(index))%2;\\nindex3 = (index3 + is_beat*bnot(index) * bnot(index2))%2;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\n\\nvol = bass_att + treb_att;\\nv2 = v2 * dec_med + vol * (1-dec_med) ;\\nq26 = max(atan (vol - v2),0);\\nq27 = index + 1;\\n\\nsw = sw*dec_med + (1-dec_med)*(index2%2);\\nq28 = sw;\\nkiss = kiss*dec_med \\n      +(1-dec_med)*bnot(index2)*below(index,4);\\nq29 = kiss;\\n\\nk1 =  is_beat*bnot(index);\\nk2 =  is_beat*bnot(index);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.1416/2;\\nmonitor = k1;\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\n\\nq5 = cos(time/4);\\nq6 = -sin(time/4);\\nq7 = -q6;\\nq8 = q5;\\n\\nzoom = 1;\\nrot = -0;\\n\\n\\n//KUGEL-POS\\ndt = .1*30/fps;\\nm = 1; //Masse\\n//Gravitationszentrum\\nx0 = .0; y0 = 0;\\n\\nax = -(xk-x0)/m + sign(vx+.001)*dt*bass/40; \\nay = -(yk-y0)/m + sign(vy+.001)*dt*treb/40;\\nmonitor = index3;\\nvx = vx*dec_slow + ax * dt; \\nvy = vy*dec_slow + ay * dt;\\n\\nxk = xk + vx*dt; \\nyk = yk + vy*dt;\\n\\nq9 = xk; q10 = yk;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = ((uv * texsize.xy) * 0.08);\\n  vec3 tmpvar_2;\\n  tmpvar_2 = (texture (sampler_main, (uv - (\\n    ((sin(tmpvar_1) / cos(tmpvar_1)) * texsize.zw)\\n   * 3.0))).xyz + (vec3(dot (texture (sampler_noise_lq, \\n    ((((texsize.xy * texsize_noise_lq.zw).x * uv) * 0.02) + (0.1 * rand_frame).xy)\\n  ), vec4(0.32, 0.49, 0.29, 0.0))) / 30.0));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ((mix (tmpvar_2, \\n    (1.0 - tmpvar_2.zyx)\\n  , vec3(0.01, 0.01, 0.01)) - 0.03) - (0.2 * pow (\\n    (1.0 - rad)\\n  , 18.0)));\\n  ret = tmpvar_3.xyz;\\n }","comp":" shader_body { \\n  vec2 uv_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = cos(((uv.y * texsize.y) / 2.0));\\n  tmpvar_2.y = sin(((uv.x * texsize.x) / 2.0));\\n  uv_1 = (uv + ((2.0 * texsize.zw) * tmpvar_2));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = (1.4 * pow ((\\n    clamp (((texture (sampler_blur1, uv_1).xyz * scale1) + bias1), 0.0, 1.0)\\n   * \\n    (texture (sampler_pc_main, uv_1).xyz - ((texture (sampler_blur3, uv_1).xyz * scale3) + bias3))\\n  ), vec3(0.5, 0.5, 0.5)));\\n  ret = tmpvar_3.xyz;\\n }"}')},1391:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":4,"gammaadj":1.63,"decay":0.96,"echo_zoom":0.997,"echo_alpha":0.5,"echo_orient":1,"wave_mode":2,"wave_dots":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":0.001,"wave_scale":0.012,"wave_smoothing":0.9,"warpanimspeed":0.01,"warpscale":0.01,"warp":0.01,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"ob_r":0.11,"ob_g":0.4,"ob_b":0.6,"ob_a":0.4,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":3,"mv_y":2,"mv_dx":0.02,"mv_dy":-0.02,"mv_l":0.15,"mv_r":0.49,"mv_g":0.48,"mv_b":0.3,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":13,"textured":1,"rad":0.46753,"tex_zoom":1.17258,"g":1,"b":1,"r2":0.99,"g2":0.99,"b2":0.99,"border_r":0.82,"border_g":0.72,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"tm=q6;\\n\\nx=0.5 + sin(tm)*0.3;\\ny=0.5 + cos(tm*0.5)*0.4;\\n\\nang=sin(tm*0.36)*3\\n"},{"baseVals":{"enabled":1,"sides":8,"additive":1,"textured":1,"rad":0.35738,"tex_zoom":0.55045,"g":1,"b":1,"r2":1,"b2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"tm=q6;\\n\\nx=0.5 + sin(tm + 0.5)*0.3;\\ny=0.5 + cos(tm*0.5)*0.4;\\n\\nang=sin(tm*0.36)*3"},{"baseVals":{"enabled":1,"sides":8,"additive":1,"rad":0.4629,"g":0.5,"a":0.04,"r2":1,"g2":0.3,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"tm=q6;\\n\\nx=0.5 + sin(tm + 1.4)*0.3;\\ny=0.5 + cos(tm*0.5 + 0.3)*0.4;\\n\\nang=sin(tm*0.36)*3"},{"baseVals":{"enabled":1,"sides":29,"textured":1,"rad":0.46753,"tex_zoom":2.13022,"g":1,"b":1,"r2":0.99,"g2":0.99,"b2":0.99,"a2":0.65,"border_r":0.8,"border_g":0.5,"border_a":1},"init_eqs_eel":"","frame_eqs_eel":"tm=q6;\\n\\nx=0.5 + sin(tm)*0.001;\\ny=0.5 + cos(tm*0.5)*0.001;\\n\\na=0.5 + min(q8,1)*0.5"}],"waves":[{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1,"r":0.6,"g":0.3},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283 + q7*0.0015;\\ntm=time*0.1;\\n\\nphs=sin(n*50);\\n\\nxp=sin(n+phs);\\nyp=cos(n+phs);\\n\\nz=sin(n*3 + tm) * sin(n*7-tm);\\n\\nxp=xp*z;\\nyp=yp*z;\\n\\nx=xp*0.3 + 0.5;\\ny=yp*0.3*1.3 + 0.5;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"mv_x=64;mv_y=48;\\nnut=0;\\nstp=0;stq=0;\\nrtp=0;rtq=0;\\nwvr=0;\\ndecay=0;\\ndcsp=0","frame_eqs_eel":"decay=0.98;\\nzoom=1.003;\\n\\nvol=(bass_att+mid_att+treb_att)*0.25;\\nvol=vol*vol;\\nq7=vol;\\n\\nvol=(bass+mid+treb)*0.25;\\nvol=vol*vol;\\nq8=vol;\\n\\nmtime=mtime+vol*0.02;\\nq6=mtime;\\n\\n\\nob_a = min(vol,1);","pixel_eqs_eel":"zoom=1.001 + sin(ang*3 + time*0.5)*0.005","warp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = ((uv * texsize.xy) * 0.08);\\n  vec3 tmpvar_2;\\n  tmpvar_2 = (texture (sampler_main, (uv - (\\n    ((sin(tmpvar_1) / cos(tmpvar_1)) * texsize.zw)\\n   * 3.0))).xyz + (vec3(dot (texture (sampler_noise_lq, \\n    ((((texsize.xy * texsize_noise_lq.zw).x * uv) * 0.02) + (0.1 * rand_frame).xy)\\n  ), vec4(0.32, 0.49, 0.29, 0.0))) / 30.0));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ((mix (tmpvar_2, \\n    (1.0 - tmpvar_2.zyx)\\n  , vec3(0.01, 0.01, 0.01)) - 0.03) - (0.2 * pow (\\n    (1.0 - rad)\\n  , 18.0)));\\n  ret = tmpvar_3.xyz;\\n }","comp":" shader_body { \\n  vec3 uvw_1;\\n  vec3 ret_2;\\n  vec3 tmpvar_3;\\n  tmpvar_3.z = 0.3;\\n  tmpvar_3.xy = (uv * 3.3);\\n  uvw_1.xy = tmpvar_3.xy;\\n  uvw_1.z = (0.3 + (time * 0.3));\\n  ret_2 = (texture (sampler_main, (uv + (\\n    (((texture (sampler_noisevol_hq, uvw_1).xy * 2.0) - 1.0) * texsize.zw)\\n   * 13.0))).xyz + ((\\n    (texture (sampler_blur1, uv).xyz * scale1)\\n   + bias1) * 0.4));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = pow (ret_2, vec3(0.5, 0.8, 1.7));\\n  ret_2 = tmpvar_4;\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = tmpvar_4;\\n  ret = tmpvar_5.xyz;\\n }"}')},8083:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":2,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_orient":1,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"wave_a":4.1,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.99951,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0,"ob_r":0.01,"ib_size":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"textured":1,"x":0.83,"rad":0.54278,"tex_ang":1.5708,"tex_zoom":1.8566,"g":1,"b":1,"r2":1,"b2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":100,"textured":1,"x":0.17,"rad":0.54278,"tex_ang":4.71239,"tex_zoom":1.8566,"g":1,"b":1,"r2":1,"b2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"textured":1,"rad":0.98609,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"r=if(above(treb,.4),1,.8);\\ng=if(above(mid,.4),1,.8);\\nb=if(above(bass,.4),1,.8);\\nr2=r;\\ng2=g;\\nb2=b;\\nz=if(above(bass,1.2),z*.95,3.14);\\nz=if(above(mid,1.2),-z,z);\\ntex_ang=z;\\nzz=above(treb,1.3)+zz*.95;\\na=zz*.07+.2;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"usedots":1,"thick":1,"smoothing":0},"init_eqs_eel":"","frame_eqs_eel":"vol = (bass_att + mid_att + treb_att)*.333333;\\nvol_avg = .1*(vol_avg*9 + vol);\\nvg = vol_avg*.1;\\n//t1 = if(above(vg,1.8),1.8,vg);\\nt1=time*.3;\\nt5=time*.2;\\n//t2=sin(time)*1.5+2;\\n//t3=.25;\\n//t2=2;\\nt4=0;\\na=1;\\nt2=2.9;","point_eqs_eel":"tm=if(above(yp,0.98),t1,tm);\\ntm2=if(above(yp,0.98),t5,tm2);\\nex=if(above(yp,0.98),t2,ex);\\n//ex=2;\\nsp=.01;\\nyp=if(above(xp,0.9998),yp+sp,yp);\\nxp=if(above(xp,0.9998),0,xp+sp);\\nyp=if(above(yp,0.9998),0,yp);\\nx=((xp*ex)*.1+.5)-(.05*ex)-t3;\\ny=((yp*ex)*.1+.5)-(.05*ex)-t4;\\n\\n//g=sin(xp*yp*1.506+tm);\\n//b=sin(xp*yp*3.142+tm);\\n//r=cos(xp*yp*1.506+tm);\\n\\ng=sin(xp*3.14+tm)*sin(yp*3.14+tm2);\\nb=sin(xp*3.14+tm2)*sin(yp*6.28+tm);\\nr=1-b;\\n\\n\\n\\n\\n\\n\\n"},{"baseVals":{"spectrum":1,"usedots":1,"thick":1,"smoothing":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"vol = (bass_att + mid_att + treb_att)*.333333;\\nvol_avg = .1*(vol_avg*9 + vol);\\nvg = vol_avg*.1;\\n//t1 = if(above(vg,1.8),1.8,vg);\\nt1=time*.3;\\n//t2=sin(time)*1.5+2;\\n//t3=.25;\\n//t2=sin(time*.071)*1.2+4.1;\\nt2=2;\\nt3=0;\\nt4=0;","point_eqs_eel":"tm=if(above(yp,0.98),t1,tm);\\nex=if(above(yp,0.98),t2,ex);\\n//ex=2;\\nsp=.01;\\nyp=if(above(xp,0.9998),yp+sp,yp);\\nxp=if(above(xp,0.9998),0,xp+sp);\\nyp=if(above(yp,0.9998),0,yp);\\nx=((xp*ex)*.1+.5)-(.05*ex)-t3+.001;\\ny=((yp*ex)*.1+.5)-(.05*ex)-t4+.001;\\n\\n//g=sin(xp*yp*1.506+tm);\\n//b=sin(xp*yp*3.142+tm);\\n//r=cos(xp*yp*1.506+tm);\\n\\nr=sin(xp*3.14+tm)*sin(yp*3.14+tm);\\ng=sin(xp*6.28+tm)*sin(yp*6.28+tm);\\nb=.4;\\n\\n\\n\\n\\n"},{"baseVals":{"spectrum":1,"usedots":1,"thick":1,"smoothing":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"vol = (bass_att + mid_att + treb_att)*.333333;\\nvol_avg = .1*(vol_avg*9 + vol);\\nvg = vol_avg*.1;\\n//t1 = if(above(vg,1.8),1.8,vg);\\nt1=time*.3;\\n//t2=sin(time)*1.5+2;\\n//t3=.25;\\n//t2=sin(time*.071)*1.2+4.1;\\nt2=2;\\nt3=0;\\nt4=0;","point_eqs_eel":"tm=if(above(yp,0.98),t1,tm);\\nex=if(above(yp,0.98),t2,ex);\\n//ex=2;\\nsp=.01;\\nyp=if(above(xp,0.9998),yp+sp,yp);\\nxp=if(above(xp,0.9998),0,xp+sp);\\nyp=if(above(yp,0.9998),0,yp);\\nx=((xp*ex)*.1+.5)-(.05*ex)-t3;\\ny=((yp*ex)*.1+.5)-(.05*ex)-t4;\\n\\n//g=sin(xp*yp*1.506+tm);\\n//b=sin(xp*yp*3.142+tm);\\n//r=cos(xp*yp*1.506+tm);\\n\\nr=sin(xp*3.14+tm)*sin(yp*3.14+tm);\\ng=sin(xp*6.28+tm)*sin(yp*6.28+tm);\\nb=.4;\\n\\n\\n\\n\\n"},{"baseVals":{"spectrum":1,"usedots":1,"thick":1,"smoothing":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"vol = (bass_att + mid_att + treb_att)*.333333;\\nvol_avg = .1*(vol_avg*9 + vol);\\nvg = vol_avg*.1;\\nt1 = if(above(vg,1.8),1.8,vg);","point_eqs_eel":"tm = q1;\\nsp = sample*6.28*8*6;\\n\\nvol = (value1+value2)*.5;\\nit = it*above(sample,0);\\nit = it + 1;\\nrad = .5 + vol;\\nra = rad*sin(sample*3.14);\\nox = ra*sin(sp);\\noy = sin(sample*3.14-1.57)*rad;\\noz = ra*cos(sp);\\n\\nxang = tm*.132;\\nsxang = 0;\\nyang = tm*.153;\\nayang = 0;\\nzang = tm*.110;\\nazang = 0;\\nfov = 0.6 + 0.2*sin(tm);\\nfov = .5;\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = - ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\noz = oz - 2;\\nx = ox*fov/oz + 0.5;\\nx = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;\\n\\nr = 1;\\ng = .25+.25*sin(sp);\\nb = 0;\\na = .5 + (oz+2)*.5;\\na = a*below(z,2);\\nminrgb = min(r,min(g,b));\\nmaxrgb = max(r,max(g,b));\\nl = (maxrgb-minrgb)*.5;\\ndiff = maxrgb-minrgb;\\nsum = maxrgb+minrgb;\\ns = if(above(l,0.5),diff/(2-sum),diff/sum)*(1-equal(l,0));\\nh = if(equal(r,maxrgb),(g-b)/diff,if(equal(g,maxrgb),2+(b-r)/diff,4+(r-g)/diff));\\nh = h*0.1666666;\\nh = if(below(h,0),0,if(above(h,1),1,h));\\n\\nh = h + time*0.05*1.324;\\nh = h - int(h);\\n\\ntmpb = if(below(l,0.5),l*(1+s),(l+s)-(s*l));\\ntmpa = 2*l - tmpb;\\nhvr = h + .333333;\\nhvr = if(below(hvr,0),hvr+1,if(above(hvr,1),hvr-1,hvr));\\nhvg = h;\\nhvg = if(below(hvg,0),hvg+1,if(above(hvg,1),hvg-1,hvg));\\nhvb = h - .333333;\\nhvb = if(below(hvb,0),hvb+1,if(above(hvb,1),hvb-1,hvb));\\n\\nr = if(below(6*hvr,1),tmpa+(tmpb-tmpa)*6*hvr, if(below(2*hvr,1),tmpb, if(below(hvr*3,2),tmpa+(tmpb-tmpa)*(.666666-hvr)*6,tmpa)));\\ng = if(below(6*hvg,1),tmpa+(tmpb-tmpa)*6*hvg, if(below(2*hvg,1),tmpb, if(below(hvg*3,2),tmpa+(tmpb-tmpa)*(.666666-hvg)*6,tmpa)));\\nb = if(below(6*hvb,1),tmpa+(tmpb-tmpa)*6*hvb, if(below(2*hvb,1),tmpb, if(below(hvb*3,2),tmpa+(tmpb-tmpa)*(.666666-hvb)*6,tmpa)));"}],"init_eqs_eel":"batr=bass_att+treb_att;\\nnatr=batr;","frame_eqs_eel":"//per frame less reactive volume for all unused q vars, put before other q vars are set for cop out mashing\\nvb = vb*0.95 + (1-vb)*pow(bass_att*treb_att*mid_att,2)*0.02;\\nvvb = vvb*0.95 + (1-vvb)*vb*0.01;\\nvm = vm*0.95 + (1-vm)*pow(mid_att,2)*0.02;\\nvvm = vvm*0.95 + (1-vvm)*vm*0.01;\\nvt = vt*0.95 + (1-vt)*pow(treb_att,2)*0.02;\\nvvt = vvt*0.95 + (1-vvt)*vt*0.01;\\nvvb = min(1,max(0,vvb));\\nvvm = min(1,max(0,vvm));\\nvvt = min(1,max(0,vvt));\\nq1 = vvb*2;//0.5 + vb - vvb;\\nq2 = vvm*2;//0.5 + vm - vvm;\\nq3 = vvt*2;//0.5 + vt - vvt;\\nv=2;\\nbb = bb - vvb*v;\\nmm = mm - vvm*v;\\ntt = tt - vvt*v;\\nq4 = -bb;\\nq5 = -mm;\\nq6 = -tt;\\nq4=(q1+q2+q3)*5;\\nq5=(q1+q2+q3)*5;\\nq6=(q1+q2+q3)*5;\\nq7=(q1+q2+q3)*5;\\nq8=(q1+q2+q3)*5;\\nq9=(q1+q2+q3)*5;\\nq10=(q1+q2+q3)*5;\\nq11=(q1+q2+q3)*5;\\nq12=(q1+q2+q3)*5;\\nq13=(q1+q2+q3)*5;\\nq14=(q1+q2+q3)*5;\\nq15=(q1+q2+q3)*5;\\nq16=(q1+q2+q3)*5;\\nq17=(q1+q2+q3)*5;\\nq18=(q1+q2+q3)*5;\\nq19=(q1+q2+q3)*5;\\nq20=(q1+q2+q3)*5;\\nq21=(q1+q2+q3)*5;\\nq22=(q1+q2+q3)*5;\\nq23=(q1+q2+q3)*5;\\nq24=(q1+q2+q3)*5;\\nq25=(q1+q2+q3)*5;\\nq26=(q1+q2+q3)*5;\\nq27=(q1+q2+q3)*5;\\nq28=(q1+q2+q3)*5;\\nq29=(q1+q2+q3)*5;\\nq30=(q1+q2+q3)*5;\\nq31=(q1+q2+q3)*5;\\nq32=(q1+q2+q3)*5;\\n\\n\\nthresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\\ndx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;\\ndy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;\\nnatr=bass_att+thresh*treb_att;\\ncha=abs(batr-natr);\\nspik=above(abs(cha-addict),addict);\\naddict=(addict+cha)/2;\\n\\n//effects here\\nzoom=zoom+if((above(bass*2,treb)-1),-1,1)*above(cha*thresh,2)*0.1;\\n\\n\\n//added the rotation effect with the same code just to offer some possibilities, activate it if you dare - goody\\n//rot=rot+if((above(bass*2,treb)-1),-1,1)*above(cha*thresh,2)*0.1;\\n\\n//zoomexp=2/zoom;\\nmv_r=log(thresh)*spik;\\nmv_b=abs(spik*cha-1);\\nmv_g=sin(time+thresh);\\nmv_a=spik*.75;\\n\\n//end.\\nbatr=natr;\\nmonitor=log(thresh);\\n\\n\\nwave_r = wave_r + 0.35*sin(3*time) + 0.15*sin(2.5*time);\\nwave_g = wave_g + 0.35*sin(2.7*time) + 0.15*sin(2.11*time);\\nwave_b = wave_b + 0.35*sin(2.84*time) + 0.15*sin(2.3*time);\\n\\nwave_mystery=wave_mystery*(addict);\\n\\n\\ncog = ocog+0.005*(bass+bass_att+(bass*bass_att)-2);\\nocog = below(cog,30000)*cog;\\n\\n\\nq1=batr;\\nq2=spik;\\n\\n\\n\\n\\n\\n\\n//Hai guiz, you found the secret message. What are you gonna do now?","pixel_eqs_eel":"//Tiles- \\n//movement first:\\ndxm=.01*sin(time*.41);\\ndym=.01*sin(time*.36);\\n\\n//Now the tiles themselves:\\ndx=dxm+.01*sin(x*80+sin(time))+.005*sin(q1*(y*sin(time*.94)));\\ndy=dym+.01*sin(y*80+sin(time))+.005*sin(q1*(x*sin(time*.97)));\\n//end tiles","warp":" shader_body { \\n  vec3 ret_1;\\n  ret_1 = texture (sampler_main, uv).xyz;\\n  ret_1 = (ret_1 + ((ret_1 - \\n    ((texture (sampler_blur3, uv).xyz * scale3) + bias3)\\n  ) * 0.35));\\n  ret_1 = (ret_1 - 0.004);\\n  ret_1 = (ret_1 + ((texture (sampler_noise_lq, \\n    (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 0.4)) + rand_frame.xy)\\n  ).xyz - 0.5) * 0.18));\\n  ret_1 = mix (ret_1, vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))), vec3(0.2, 0.2, 0.2));\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ret_1;\\n  ret = tmpvar_2.xyz;\\n }","comp":" shader_body { \\n  vec3 ret2_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (texsize.zw * 6.0);\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = dot (((\\n    (texture (sampler_blur1, (uv + (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (uv - (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  tmpvar_4.y = dot (((\\n    (texture (sampler_blur1, (uv + (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (uv - (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (uv - (0.25 * tmpvar_4));\\n  vec4 tmpvar_6;\\n  tmpvar_6 = texture (sampler_blur3, uv);\\n  ret_2 = (0.5 * ((tmpvar_6.xyz * scale3) + bias3));\\n  ret_2 = (ret_2 - ((\\n    (texture (sampler_blur2, uv).xyz * scale2)\\n   + bias2) - 0.01));\\n  vec4 tmpvar_7;\\n  tmpvar_7 = texture (sampler_blur1, uv);\\n  ret_2 = (ret_2 + ((texture (sampler_main, uv).xyz + \\n    (((tmpvar_7.xyz * scale1) + bias1) * 0.15)\\n  ) - 0.01));\\n  ret_2 = (ret_2 + 0.75);\\n  float tmpvar_8;\\n  tmpvar_8 = dot (ret_2, vec3(0.32, 0.49, 0.29));\\n  vec3 tmpvar_9;\\n  tmpvar_9 = mix (vec3(tmpvar_8), (vec3(tmpvar_8) * (\\n    ((texture (sampler_blur3, tmpvar_5).xyz * scale3) + bias3)\\n   - \\n    ((texture (sampler_blur1, tmpvar_5).xyz * scale1) + bias1)\\n  )), pow (hue_shader, vec3(tmpvar_8)));\\n  ret2_1 = ((-0.5 * (\\n    (texture (sampler_blur3, tmpvar_5).xyz * scale3)\\n   + bias3)) + ((texture (sampler_blur1, tmpvar_5).xyz * scale1) + bias1));\\n  ret2_1 = (ret2_1 - texture (sampler_main, tmpvar_5).xyz);\\n  ret2_1 = (ret2_1 - 0.75);\\n  vec3 tmpvar_10;\\n  tmpvar_10 = mix (ret2_1, (ret2_1 * (\\n    ((tmpvar_6.xyz * scale3) + bias3)\\n   - \\n    ((tmpvar_7.xyz * scale1) + bias1)\\n  )), pow (hue_shader, tmpvar_9));\\n  ret2_1 = tmpvar_10;\\n  vec3 tmpvar_11;\\n  tmpvar_11 = abs((tmpvar_9 - (2.0 * tmpvar_10)));\\n  ret_2 = (tmpvar_11 - (0.25 * sqrt(tmpvar_11)));\\n  ret_2 = (ret_2 * (ret_2 + (\\n    ((bass + mid) + treb)\\n   * 0.4)));\\n  vec4 tmpvar_12;\\n  tmpvar_12.w = 1.0;\\n  tmpvar_12.xyz = ret_2;\\n  ret = tmpvar_12.xyz;\\n }"}')},2897:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_orient":1,"wave_thick":1,"wave_brighten":0,"wrap":0,"brighten":1,"wave_a":0.401,"wave_scale":3.177,"wave_smoothing":0,"wave_mystery":-0.4,"modwavealphastart":1,"modwavealphaend":1,"warpanimspeed":2.289,"warpscale":5.472,"zoomexp":0.01,"zoom":0.9901,"warp":1.8566,"ob_size":0.005,"ob_a":1,"ib_size":0,"ib_r":1,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":12,"additive":1,"num_inst":512,"y":0.55,"rad":0.034,"tex_zoom":0.7874,"g":0.45,"g2":0,"border_a":0},"init_eqs_eel":"started = 0;\\nt1 = 0.412; //seeds for pseudo random generator\\nt2 = 0.4563;\\nt3 = 0.6452;\\nt4 = 0.2565;","frame_eqs_eel":"\\nrnd1 = if(equal(instance,0),t1,rnd1);\\nrnd2 = if(equal(instance,0),t2,rnd2);\\nrnd3 = if(equal(instance,0),t3,rnd3);\\nrnd4 = if(equal(instance,0),t4,rnd4);\\nrnd1 = 4*rnd1*(1-rnd1);\\nrnd2 = 4*rnd2*(1-rnd2);\\nrnd3 = 4*rnd3*(1-rnd3);\\nrnd4 = 4*rnd4*(1-rnd4);\\nt = .6;\\nt =  (rnd1+time*t) - int(rnd1+time*t);\\nt = t + rnd2*0.1;\\nwh = rnd4*asin(1)*4;\\nwv = 0.25 + rnd3*0.1;\\n\\nd = 1.4; // makes the perspective impact\\nzoom = 1;\\nl = 1;\\n\\n// Kardan angles\\n\\nw1 = q3; // first rotation: clockwise in the desktop pane\\nw2 = q4; // rotation around vertical axis\\nw3 = q5; // rotation around horizontal axis\\n\\n\\n// definition of the 3D shape\\n\\ni = instance;\\n\\nmy_x = t *(cos(wh)*sin(wv)*l);\\nmy_y = (-0.5 +(t-0.75)*(t-0.75))*cos(wv)*l;\\nmy_z = t*(sin(wh)*sin(wv)*l);\\n\\n\\n// 3D rotations\\n\\nx1 = cos(w1)*my_x + sin(w1)*my_y;\\ny1 = -sin(w1)*my_x + cos(w1)*my_y;\\nz1 = my_z;\\n\\nx2 = cos(w2)*x1 + sin(w2)*z1;\\nz2 = -sin(w2)*x1 + cos(w2)*z1;\\ny2 = y1;\\n\\ny3 = cos(w3)*y2 + sin(w3)*z2;\\nz3 = -sin(w3)*y2 + cos(w3)*z2;\\nx3 = x2;\\n\\n// perspective calculation\\n\\nl = sqrt(x3*x3 + y3*y3);\\nw = atan2(x3,y3);\\np = tan(asin(1) + atan2(d+z3,l));\\nd = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));\\n\\nrad = rad/d;\\nmy_x = zoom*sin(w)*p;\\nmy_y = zoom*cos(w)*p;\\n\\nx = 0.5 + my_x;\\ny = 0.5 + my_y;\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;"},{"baseVals":{"sides":100,"additive":1,"thickoutline":1,"textured":1,"x":0.52,"y":0.41,"rad":0.5216,"ang":0.1885,"tex_zoom":0.73458,"g":1,"b":1,"r2":1,"b2":1,"a2":0.75,"border_a":0,"enabled":0},"init_eqs_eel":"vx = 0","frame_eqs_eel":""},{"baseVals":{"sides":100,"additive":1,"thickoutline":1,"textured":1,"x":0.48,"y":0.41,"rad":0.61162,"ang":5.96903,"tex_zoom":0.73458,"g":1,"b":1,"r2":1,"b2":1,"a2":0.75,"border_a":0,"enabled":0},"init_eqs_eel":"vx = 0","frame_eqs_eel":""},{"baseVals":{"sides":100,"additive":1,"thickoutline":1,"y":0.75,"rad":0.07059,"tex_zoom":0.73458,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"vx = 0","frame_eqs_eel":"x = q1;\\ny = q5;"}],"waves":[{"baseVals":{"additive":1,"r":0.2,"g":0,"b":0,"a":0.3,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=time*0.4 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2)*0.5 +0.5;\\n\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8;\\nxp=xq*sin(ang) + yq*cos(ang);\\nyp=xq*cos(ang) - yq*sin(ang);\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3 + 0.5);\\nxp=xq*sin(ang) + yq*cos(ang);\\nyp=xq*cos(ang) - yq*sin(ang);\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2)*0.75 - 1.05;\\nxq=xp*sin(ang) + zp*cos(ang);\\nyq=yp;\\nzq=xp*cos(ang) - zp*sin(ang);\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nxp=xq;\\nyp=yq*cos(ang) - zq*sin(ang);\\nzp=yq*sin(ang) + zq*cos(ang);\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\n//a=(1-sample)*flip;\\n\\n//b=b+pow(1-sample,2)*0.3;\\n\\nx = 0.5 + (x-0.5)/q1;\\ny = 0.5 + (y-0.5)/q2 + 0.1;"},{"baseVals":{"additive":1,"r":0.2,"g":0,"b":0,"a":0.3,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=time*0.4 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2;\\nyp=-yp;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2)*0.5 +0.5;\\n\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8;\\nxp=xq*sin(ang) + yq*cos(ang);\\nyp=xq*cos(ang) - yq*sin(ang);\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3 + 0.5);\\nxp=xq*sin(ang) + yq*cos(ang);\\nyp=xq*cos(ang) - yq*sin(ang);\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2)*0.75 - 1.05;\\nxq=xp*sin(ang) + zp*cos(ang);\\nyq=yp;\\nzq=xp*cos(ang) - zp*sin(ang);\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nxp=xq;\\nyp=yq*cos(ang) - zq*sin(ang);\\nzp=yq*sin(ang) + zq*cos(ang);\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\n//a=(1-sample)*flip;\\n\\n\\n//b=b+pow(1-sample,2)*0.3;\\n\\n\\nx = 0.5 + (x-0.5)/q1;\\ny = 0.5 + (y-0.5)/q2 + 0.1;\\n"},{"baseVals":{"samples":61,"thick":1,"scaling":2.44415,"smoothing":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt7 = q7;\\nt8 = q8;","point_eqs_eel":"x = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2\\n+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;\\n\\ny = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6\\n+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;"},{"baseVals":{"samples":61,"scaling":2.44415,"smoothing":0,"enabled":0},"init_eqs_eel":"t2 = 0","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt7 = q7;\\nt8 = q8;","point_eqs_eel":"x = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2\\n+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;\\n\\ny = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6\\n+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;"}],"init_eqs_eel":"","frame_eqs_eel":"wave_a = 0;\\nq1 =aspectx;\\nq2 = aspecty;\\n\\n\\nb = b + bass*bass*0.85;\\nm = m + mid*mid*0.85;\\nt = t + treb*treb*0.85;\\n\\nq3 = b*0.012;\\nq4 = m*0.012;\\nq5 = t*0.012;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 my_uv_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (vec2(1280.0, 1024.0) * texsize.zw);\\n  float tmpvar_4;\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (uv + vec2(0.005, 0.0));\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv - vec2(0.005, 0.0));\\n  tmpvar_4 = (((\\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_6).xyz * scale2)\\n   + bias2)).x * tmpvar_3.x);\\n  float tmpvar_7;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (uv + vec2(0.0, 0.005));\\n  vec2 tmpvar_9;\\n  tmpvar_9 = (uv - vec2(0.0, 0.005));\\n  tmpvar_7 = (((\\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_9).xyz * scale2)\\n   + bias2)).x * tmpvar_3.y);\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = tmpvar_4;\\n  tmpvar_10.y = tmpvar_7;\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = (((\\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_6).xyz * scale2)\\n   + bias2)).x * tmpvar_3.x);\\n  tmpvar_11.y = (((\\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_9).xyz * scale2)\\n   + bias2)).x * tmpvar_3.y);\\n  ret_2.x = texture (sampler_fw_main, ((uv - (tmpvar_10 * 0.01)) + (tmpvar_11 * 0.003))).x;\\n  vec4 tmpvar_12;\\n  tmpvar_12 = texture (sampler_blur3, uv);\\n  ret_2.x = (ret_2.x + ((ret_2.x - \\n    ((tmpvar_12.xyz * scale3) + bias3)\\n  .x) * 0.1));\\n  ret_2.x = (ret_2.x + 0.004);\\n  vec2 tmpvar_13;\\n  tmpvar_13.x = tmpvar_7;\\n  tmpvar_13.y = -(tmpvar_4);\\n  my_uv_1 = (uv + ((tmpvar_13 * 0.05) * (1.2 - \\n    ((tmpvar_12.xyz * scale3) + bias3)\\n  .y)));\\n  ret_2.z = texture (sampler_fw_main, my_uv_1).z;\\n  vec2 x_14;\\n  x_14 = (my_uv_1 - uv);\\n  ret_2.z = (ret_2.z + ((\\n    ((ret_2.z - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).z) * sqrt(dot (x_14, x_14)))\\n   * 180.0) / sqrt(\\n    dot (tmpvar_3, tmpvar_3)\\n  )));\\n  ret_2.z = (ret_2.z * 0.8);\\n  ret_2.z = (ret_2.z + 0.004);\\n  vec2 tmpvar_15;\\n  tmpvar_15.x = -(tmpvar_7);\\n  tmpvar_15.y = tmpvar_4;\\n  my_uv_1 = (tmpvar_15 * 0.045);\\n  vec2 tmpvar_16;\\n  tmpvar_16.x = (((\\n    (texture (sampler_blur2, (uv + vec2(0.01, 0.0))).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, (uv - vec2(0.01, 0.0))).xyz * scale2)\\n   + bias2)).y * tmpvar_3.x);\\n  tmpvar_16.y = (((\\n    (texture (sampler_blur2, (uv + vec2(0.0, 0.01))).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, (uv - vec2(0.0, 0.01))).xyz * scale2)\\n   + bias2)).y * tmpvar_3.y);\\n  my_uv_1 = (my_uv_1 + (uv - (tmpvar_16 * 0.03)));\\n  ret_2.y = texture (sampler_fw_main, my_uv_1).y;\\n  ret_2.y = (ret_2.y + ((\\n    (ret_2.y - ((texture (sampler_blur3, my_uv_1).xyz * scale3) + bias3).y)\\n   * 0.1) + 0.01));\\n  vec4 tmpvar_17;\\n  tmpvar_17.w = 1.0;\\n  tmpvar_17.xyz = ret_2;\\n  ret = tmpvar_17.xyz;\\n }","comp":" shader_body { \\n  vec2 uv1_1;\\n  vec3 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv).xyz;\\n  vec2 tmpvar_3;\\n  tmpvar_3.y = 0.0;\\n  tmpvar_3.x = texsize.z;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = 0.0;\\n  tmpvar_4.y = texsize.w;\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = (texture (sampler_main, (uv - tmpvar_3)).xyz - texture (sampler_main, (uv + tmpvar_3)).xyz).x;\\n  tmpvar_5.y = (texture (sampler_main, (uv - tmpvar_4)).xyz - texture (sampler_main, (uv + tmpvar_4)).xyz).x;\\n  uv1_1 = ((0.3 * cos(\\n    (((uv - 0.5) * 2.0) + 1.7)\\n  )) - (2.0 * tmpvar_5));\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = ((-(tmpvar_2) / 4.0) + ((6.0 * vec3(\\n    clamp ((0.03 / sqrt(dot (uv1_1, uv1_1))), 0.0, 1.0)\\n  )) * (-0.08 + tmpvar_2)));\\n  ret = tmpvar_6.xyz;\\n }"}')},1958:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":2,"decay":0.99,"wave_brighten":0,"wave_a":1,"wave_scale":0.01,"wave_mystery":-0.2,"warpanimspeed":3.434,"warpscale":1.295,"zoom":1.025,"warp":0.11284,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0.005,"ob_b":1,"ob_a":1,"mv_x":64,"mv_y":48,"mv_l":5,"mv_g":0,"mv_b":0},"shapes":[{"baseVals":{"sides":100,"textured":1,"rad":0.53742,"tex_zoom":1.72509,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"//per frame less reactive volume for all unused q vars, put before other q vars are set for cop out mashing\\nvb = vb*0.95 + (1-vb)*pow(bass_att,2)*0.02;\\nvvb = vvb*0.95 + (1-vvb)*vb*0.01;\\nvm = vm*0.95 + (1-vm)*pow(mid_att,2)*0.02;\\nvvm = vvm*0.95 + (1-vvm)*vm*0.01;\\nvt = vt*0.95 + (1-vt)*pow(treb_att,2)*0.02;\\nvvt = vvt*0.95 + (1-vvt)*vt*0.01;\\nvvb = min(1,max(0,vvb));\\nvvm = min(1,max(0,vvm));\\nvvt = min(1,max(0,vvt));\\nq1   = (vvb+vvm+vvt)*10;\\nq2   = (vvb+vvm+vvt)*10;\\nq3   = (vvb+vvm+vvt)*10;\\nq4   = (vvb+vvm+vvt)*10;\\nq5   = (vvb+vvm+vvt)*10;\\nq6   = (vvb+vvm+vvt)*10;\\nq7   = (vvb+vvm+vvt)*10;\\nq8   = (vvb+vvm+vvt)*10;\\nq9   = (vvb+vvm+vvt)*10;\\nq10  = (vvb+vvm+vvt)*10;\\nq11  = (vvb+vvm+vvt)*10;\\nq12  = (vvb+vvm+vvt)*10;\\nq13  = (vvb+vvm+vvt)*10;\\nq14  = (vvb+vvm+vvt)*10;\\nq15  = (vvb+vvm+vvt)*10;\\nq16  = (vvb+vvm+vvt)*10;\\nq17  = (vvb+vvm+vvt)*10;\\nq18  = (vvb+vvm+vvt)*10;\\nq19  = (vvb+vvm+vvt)*10;\\nq20  = (vvb+vvm+vvt)*10;\\nq21  = (vvb+vvm+vvt)*10;\\nq22  = (vvb+vvm+vvt)*10;\\nq23  = (vvb+vvm+vvt)*10;\\nq24  = (vvb+vvm+vvt)*10;\\nq25  = (vvb+vvm+vvt)*10;\\nq26  = (vvb+vvm+vvt)*10;\\nq27  = (vvb+vvm+vvt)*10;\\nq28  = (vvb+vvm+vvt)*10;\\nq29  = (vvb+vvm+vvt)*10;\\nq30  = (vvb+vvm+vvt)*10;\\nq31  = (vvb+vvm+vvt)*10;\\nq32  = (vvb+vvm+vvt)*10;\\n\\nzoom = .995;\\nwave_a = 0;\\nmv_g = 0.45 + 0.3*sin(time*1.33)+0.25*sin(treb);\\nmv_r = 0.45 + 0.3*sin(time*1.13)+0.25*(0.33*(bass+treb+mid));\\nmv_b = 0.45 + 0.3*sin(time*1.23)+0.25*sin(bass);\\nmv_dx=.1*sin(time*.1);\\nmv_dy=.13*cos(time*.084);\\nmv_x=64-int((sin(time*1.5)+1)*32);\\nmv_y=48-int((cos(time*1.5)+1)*22);\\nmonitor=mv_y;","pixel_eqs_eel":"//flexi per vertex\\ncx1 = 0.5+sin(time*0.618)*0.2;\\ncy1 = 0.5+cos(time*1.618)*0.2;\\ndir = bass;\\nd = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));\\nx1 = if( above(d,0.3),0,  sin(y-cy1)*0.05*dir);\\ny1 = if( above(d,0.3),0, -sin(x-cx1)*0.05*dir);\\ncx1 = 0.5+sin(time*2.618)*0.3;\\ncy1 = 0.5+cos(time*3.14)*0.3;\\ndir = -mid*2;\\nd = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));\\nx2 = if( above(d,0.2),0,  sin(y-cy1)*0.05*dir);\\ny2 = if( above(d,0.2),0, -sin(x-cx1)*0.05*dir);\\ncx1 = 0.5+sin(-time*2.618)*0.4;\\ncy1 = 0.5+cos(-time*1.14)*0.4;\\ndir = treb*3;\\nd = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));\\nx3 = if( above(d,0.1),0,  sin(y-cy1)*0.05*dir);\\ny3 = if( above(d,0.1),0, -sin(x-cx1)*0.05*dir);\\ndx = dx+x1+x2+x3;\\ndy = dy+y1+y2+y3;","warp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = mix (uv_orig, uv, vec2(0.3, 0.3));\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 3.0);\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = dot (((\\n    (texture (sampler_blur1, (tmpvar_1 + (vec2(1.0, 0.0) * tmpvar_2))).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (tmpvar_1 - (vec2(1.0, 0.0) * tmpvar_2))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  tmpvar_3.y = dot (((\\n    (texture (sampler_blur1, (tmpvar_1 + (vec2(0.0, 1.0) * tmpvar_2))).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (tmpvar_1 - (vec2(0.0, 1.0) * tmpvar_2))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = (texture (sampler_fc_main, (tmpvar_1 + (\\n    (tmpvar_3 * texsize.zw)\\n   * 9.0))) - 0.01).xyz;\\n  ret = tmpvar_4.xyz;\\n }","comp":" shader_body { \\n  vec2 uv_1;\\n  vec3 ret_2;\\n  uv_1 = (0.5 + ((uv - 0.5) * 0.98));\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (texsize.zw * 4.0);\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv_1 + (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv_1 - (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_blur1, \\n    (uv_1 + (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv_1 - (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_6;\\n  tmpvar_6.z = 0.0;\\n  tmpvar_6.x = dot (tmpvar_4, vec3(0.32, 0.49, 0.29));\\n  tmpvar_6.y = dot (tmpvar_5, vec3(0.32, 0.49, 0.29));\\n  vec4 tmpvar_7;\\n  tmpvar_7 = texture (sampler_noisevol_hq, ((vec3(0.05, 0.05, 0.0) * (\\n    ((uv_1.xyy + (tmpvar_6 * 0.5)) * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + (vec3(0.0, 0.0, 0.2) * time)));\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = dot (tmpvar_4, vec3(0.32, 0.49, 0.29));\\n  tmpvar_8.y = dot (tmpvar_5, vec3(0.32, 0.49, 0.29));\\n  uv_1 = (uv_1 - (tmpvar_8 * 0.04));\\n  ret_2 = (abs((\\n    ((texture (sampler_main, uv_1).xyz + ((texture (sampler_blur1, uv_1).xyz * scale1) + bias1)) - ((texture (sampler_blur2, uv_1).xyz * scale2) + bias2))\\n   - \\n    ((texture (sampler_blur3, uv_1).xyz * scale3) + bias3)\\n  )) * (dot (tmpvar_7, vec4(0.32, 0.49, 0.29, 0.0)) * 3.0));\\n  vec3 tmpvar_9;\\n  tmpvar_9 = pow (ret_2, vec3(0.5, 0.5, 0.5));\\n  ret_2 = tmpvar_9;\\n  vec4 tmpvar_10;\\n  tmpvar_10.w = 1.0;\\n  tmpvar_10.xyz = tmpvar_9;\\n  ret = tmpvar_10.xyz;\\n }"}')},4481:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"decay":0.96,"echo_zoom":1.905,"wave_brighten":0,"wrap":0,"darken_center":1,"wave_a":0.009,"wave_scale":0.01,"wave_smoothing":0.63,"wave_mystery":-0.8,"fshader":10,"sx":0.9803,"wave_r":0,"wave_g":0,"ib_size":0,"ib_r":1,"ib_g":0,"ib_b":0,"ib_a":0.47,"mv_x":64,"mv_y":48,"mv_dx":-0.28,"mv_l":0,"mv_g":0,"mv_b":0,"mv_a":0.8},"shapes":[{"baseVals":{"enabled":1,"sides":20,"num_inst":1024,"rad":0.01,"r":0,"b":1,"g2":0,"a2":0.1,"border_a":0.006},"init_eqs_eel":"","frame_eqs_eel":"pigtemp=int(pow(4,bass+treb+mid));\\nnum_inst=if(above(pigtemp,1024),1024,pigtemp);\\n\\nt1 = time/5;\\nt2 = time/6;\\nrad = 0.005+bass/100;\\nt3 = bass_att/70;\\nb2 = treb*0.7-bass/2;\\nr = instance/num_inst;\\ng = abs(treb_att/5-bass);\\n//b = abs(treb_att/5-bass);\\nsize = 0.3+bass_att/300;\\n\\nnc = sqrt(num_inst);\\nxs=sin(6.28*(instance%nc)/nc)*sin(3.14*int(instance/nc)/nc);\\nys=cos(6.28*(instance%nc)/nc)*sin(3.14*int(instance/nc)/nc);\\nzs=cos(3.14*int(instance/nc)/nc);\\n\\n//modulate to allow rotation\\ny1 = ys*cos(t1)-zs*sin(t1);\\nz1 = ys*sin(t1)+zs*cos(t1);\\nx1 = z1*sin(t2)+xs*cos(t2);\\nz2 = z1*cos(t2)-xs*sin(t2);\\nx2 = x1*cos(t3)-y1*sin(t3);\\ny2 = y1*cos(t3)+x1*sin(t3);\\n\\n//translate shape\\nx3 = x2;\\ny3 = y2;\\nz3 = z2;\\n\\nx = 0.5 + size*(x3/(1+z3*size));\\ny = 0.5 + size*(y3/(1+z3*size));\\na=below(z3,0);"},{"baseVals":{"enabled":1,"sides":32,"additive":1,"thickoutline":1,"num_inst":33,"r":0,"g":0.5,"g2":0.5,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"trans = int(rand(int(q30)))/5+instance-instance;\\ntrans2 = int(rand(int(q30)))/5+instance-instance;\\ntrans3 = int(rand(int(q30)))/5+instance-instance;\\na = trans;\\na2 = trans2;\\nborder_a = trans3;\\n\\nx = q1 + int(rand(15))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\\ny = q2 + int(rand(15))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\\nrad = .09 + int(rand(int(q30)))/15+instance-instance;\\nr=int(rand(q3))*.1+instance-instance;\\ng=int(rand(q3))*.1+instance-instance;\\nb=int(rand(q3))*.1+instance-instance;\\nr2=int(rand(q3))*.1+instance-instance;\\ng2=int(rand(q3))*.1+instance-instance;\\nb2=int(rand(q3))*.1+instance-instance;\\nborder_r=int(rand(q3))*.1+instance-instance;\\nborder_g=int(rand(q3))*.1+instance-instance;\\nborder_b=int(rand(q3))*.1+instance-instance;"},{"baseVals":{"enabled":1,"sides":32,"thickoutline":1,"textured":1,"num_inst":7,"r":0,"b":0.5,"g2":0,"b2":0.5,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"trans = int(rand(int(q30)))/5+instance-instance;\\ntrans2 = int(rand(int(q30)))/5+instance-instance;\\ntrans3 = int(rand(int(q30)))/5+instance-instance;\\na = trans;\\na2 = trans2;\\nborder_a = trans3;\\n\\nx = q1 + int(rand(15))*0.01*mid_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\\ny = q2 + int(rand(15))*0.01*mid_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\\nrad = .09 + int(rand(int(q30)))/15+instance-instance;\\nr=int(rand(q3))*.1+instance-instance;\\ng=int(rand(q3))*.1+instance-instance;\\nb=int(rand(q3))*.1+instance-instance;\\nr2=int(rand(q3))*.1+instance-instance;\\ng2=int(rand(q3))*.1+instance-instance;\\nb2=int(rand(q3))*.1+instance-instance;\\nborder_r=int(rand(q3))*.1+instance-instance;\\nborder_g=int(rand(q3))*.1+instance-instance;\\nborder_b=int(rand(q3))*.1+instance-instance;\\n"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"//wave_mystery = 1;\\nbassrun=bass+bassrun;\\ntrebrun=treb+trebrun;\\nmidrun=mid+midrun;\\nvol=(bassrun+midrun+trebrun)*.03;\\nvol2=vol*.001;\\nwarp = 0;\\nzoom = 1.4 +0.15*cos(vol*0.42);\\nrot = 0.01*sin(1.34*vol);\\ndx = 0.005*sin(vol*0.646);\\ndy=0.005*sin(vol*0.314);\\ncx = 0.5 + 0.05*sin(0.497*vol);\\ncy = 0.5 +0.05*sin(0.413*vol);\\n\\npi23=4*asin(-1)*.33333333333333;\\nq6= (sin(vol-0*pi23)+1)*.5;\\nq7= (sin(vol-1*pi23)+1)*.5;\\nq8=(sin(vol-2*pi23)+1)*.5;\\nmv_r=q6;\\nmv_g=q7;\\nmv_b=q8;\\nq9=q6+1;\\nvol3=(bass+mid+treb)*.3;\\nq26=vol3;\\nq20=vol3;\\nq1=.5;//q6*.3;\\nq2=.5;//q7*.3;\\nq3=q8*.3;\\nq4=q8/q6*2;\\nq30=vol3*2.5;\\nq3=q30*1.33;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 4.0);\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = tmpvar_3.x;\\n  tmpvar_5.y = tmpvar_4.x;\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv + ((tmpvar_5 * texsize.zw) * 8.0));\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = tmpvar_3.y;\\n  tmpvar_7.y = tmpvar_4.y;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (uv + ((tmpvar_7 * texsize.zw) * 8.0));\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = tmpvar_3.z;\\n  tmpvar_9.y = tmpvar_4.z;\\n  vec2 tmpvar_10;\\n  tmpvar_10 = (uv + ((tmpvar_9 * texsize.zw) * 8.0));\\n  ret_1.x = (texture (sampler_main, tmpvar_6).x - ((texture (sampler_main, tmpvar_6).xyz - \\n    ((texture (sampler_blur3, tmpvar_6).xyz * scale3) + bias3)\\n  ).x * 0.02));\\n  ret_1.y = (texture (sampler_main, tmpvar_8).y - ((texture (sampler_main, tmpvar_8).xyz - \\n    ((texture (sampler_blur3, tmpvar_8).xyz * scale3) + bias3)\\n  ).y * 0.02));\\n  ret_1.z = (texture (sampler_main, tmpvar_10).z - ((texture (sampler_main, tmpvar_10).xyz - \\n    ((texture (sampler_blur3, tmpvar_10).xyz * scale3) + bias3)\\n  ).z * 0.02));\\n  ret_1 = (ret_1 - ((ret_1.yzx * 0.2) - 0.06));\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 1.0;\\n  tmpvar_11.xyz = ret_1;\\n  ret = tmpvar_11.xyz;\\n }","comp":" shader_body { \\n  vec2 uv1_1;\\n  vec3 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv).xyz;\\n  vec2 tmpvar_3;\\n  tmpvar_3.y = 0.0;\\n  tmpvar_3.x = texsize.z;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = 0.0;\\n  tmpvar_4.y = texsize.w;\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = (texture (sampler_main, (uv - tmpvar_3)).xyz - texture (sampler_main, (uv + tmpvar_3)).xyz).x;\\n  tmpvar_5.y = (texture (sampler_main, (uv - tmpvar_4)).xyz - texture (sampler_main, (uv + tmpvar_4)).xyz).x;\\n  uv1_1 = ((0.3 * cos(\\n    (((uv - 0.5) * 2.0) + 1.7)\\n  )) - (2.0 * tmpvar_5));\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = ((-(tmpvar_2) / 4.0) + ((6.0 * vec3(\\n    clamp ((0.03 / sqrt(dot (uv1_1, uv1_1))), 0.0, 1.0)\\n  )) * (-0.08 + tmpvar_2)));\\n  ret = tmpvar_6.xyz;\\n }"}')},6323:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1.28,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":2.599,"warpscale":0.01,"zoomexp":0.9999,"fshader":1,"zoom":0.9996,"warp":0.01,"sy":1.0017,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0.075,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"textured":1,"rad":1.79142,"tex_ang":0.62832,"g":1,"b":1,"a":0,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));\\npi23=4*asin(1)*.333333333;\\nvol=bass+mid+treb;\\nr=(sin(time*.3+vol-0*pi23)+1)*.5;\\ng=(sin(time*.3+vol-1*pi23)+1)*.5;\\nb=(sin(time*.3+vol-2*pi23)+1)*.5;"},{"baseVals":{"enabled":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));\\npi23=4*asin(1)*.333333333;\\nvol=bass+mid+treb;\\nr=(sin(time*.3+vol-0*pi23)+1)*.5;\\ng=(sin(time*.3+vol-1*pi23)+1)*.5;\\nb=(sin(time*.3+vol-2*pi23)+1)*.5;"},{"baseVals":{"enabled":1,"usedots":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));\\npi23=4*asin(1)*.333333333;\\nvol=bass+mid+treb;\\nr=(sin(time*.3+vol-0*pi23)+1)*.5;\\ng=(sin(time*.3+vol-1*pi23)+1)*.5;\\nb=(sin(time*.3+vol-2*pi23)+1)*.5;"},{"baseVals":{"enabled":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));\\npi23=4*asin(1)*.333333333;\\nvol=bass+mid+treb;\\nr=(sin(time*.3+vol-0*pi23)+1)*.5;\\ng=(sin(time*.3+vol-1*pi23)+1)*.5;\\nb=(sin(time*.3+vol-2*pi23)+1)*.5;"}],"init_eqs_eel":"decay=0.1;","frame_eqs_eel":"//per frame less reactive volume for all unused q vars, put before other q vars are set for cop out mashing\\nvb = vb*0.95 + (1-vb)*pow(bass_att,2)*0.02;\\nvvb = vvb*0.95 + (1-vvb)*vb*0.01;\\nvm = vm*0.95 + (1-vm)*pow(mid_att,2)*0.02;\\nvvm = vvm*0.95 + (1-vvm)*vm*0.01;\\nvt = vt*0.95 + (1-vt)*pow(treb_att,2)*0.02;\\nvvt = vvt*0.95 + (1-vvt)*vt*0.01;\\nvvb = min(1,max(0,vvb));\\nvvm = min(1,max(0,vvm));\\nvvt = min(1,max(0,vvt));\\nq1   = (vvb+vvm+vvt)*10;\\nq2   = (vvb+vvm+vvt)*10;\\nq3   = (vvb+vvm+vvt)*10;\\nq4   = (vvb+vvm+vvt)*10;\\nq5   = (vvb+vvm+vvt)*10;\\nq6   = (vvb+vvm+vvt)*10;\\nq7   = (vvb+vvm+vvt)*10;\\nq8   = (vvb+vvm+vvt)*10;\\nq9   = (vvb+vvm+vvt)*10;\\nq10  = (vvb+vvm+vvt)*10;\\nq11  = (vvb+vvm+vvt)*10;\\nq12  = (vvb+vvm+vvt)*10;\\nq13  = (vvb+vvm+vvt)*10;\\nq14  = (vvb+vvm+vvt)*10;\\nq15  = (vvb+vvm+vvt)*10;\\nq16  = (vvb+vvm+vvt)*10;\\nq17  = (vvb+vvm+vvt)*10;\\nq18  = (vvb+vvm+vvt)*10;\\nq19  = (vvb+vvm+vvt)*10;\\nq20  = (vvb+vvm+vvt)*10;\\nq21  = (vvb+vvm+vvt)*10;\\nq22  = (vvb+vvm+vvt)*10;\\nq23  = (vvb+vvm+vvt)*10;\\nq24  = (vvb+vvm+vvt)*10;\\nq25  = (vvb+vvm+vvt)*10;\\nq26  = (vvb+vvm+vvt)*10;\\nq27  = (vvb+vvm+vvt)*10;\\nq28  = (vvb+vvm+vvt)*10;\\nq29  = (vvb+vvm+vvt)*10;\\nq30  = (vvb+vvm+vvt)*10;\\nq31  = (vvb+vvm+vvt)*10;\\nq32  = (vvb+vvm+vvt)*10;\\n\\n\\n\\nvol=(bass+mid+treb_att)*.3333;\\n\\nredsine=.5+.15*bass*sin(time*3);\\ngreensine=.5+.15*mid*sin(time*2);\\nbluesine=.5+.15*treb*sin(time);\\n\\nredif=if(above(bass,1.2),redsine,if(above(redif,.95),0,redif*.85));\\ngreenif=if(above(mid,1.2),greensine,if(above(greenif,.95),0,greenif*.85));\\nblueif=if(above(treb,1.2),bluesine,if(above(blueif,.95),0,blueif*.85));\\n\\nwave_r=redif;\\nwave_g=greenif;\\nwave_b=blueif;\\n\\nq11=sin(time)-1;\\nq12=sin(time)-1;","pixel_eqs_eel":"dx=dx+.08*sin(x*32+sin(time*.51)*20*cos(time*.41));\\ndy=dy+.08*sin(y*32+sin(time*.58)*20*cos(time*.33));","warp":" shader_body { \\n  float n_1;\\n  vec3 ret_2;\\n  vec4 tmpvar_3;\\n  tmpvar_3 = texture (sampler_pw_main, uv);\\n  ret_2 = tmpvar_3.xyz;\\n  n_1 = (clamp ((texture (sampler_pw_main, \\n    (uv + texsize.zw)\\n  ).x * 999.0), 0.0, 1.0) + clamp ((texture (sampler_pw_main, \\n    (uv + (texsize.zw * vec2(1.0, 0.0)))\\n  ).x * 999.0), 0.0, 1.0));\\n  n_1 = (n_1 + clamp ((texture (sampler_pw_main, \\n    (uv + (texsize.zw * vec2(1.0, -1.0)))\\n  ).x * 999.0), 0.0, 1.0));\\n  n_1 = (n_1 + clamp ((texture (sampler_pw_main, \\n    (uv + (texsize.zw * vec2(0.0, 1.0)))\\n  ).x * 999.0), 0.0, 1.0));\\n  n_1 = (n_1 + clamp ((texture (sampler_pw_main, \\n    (uv + (texsize.zw * vec2(0.0, -1.0)))\\n  ).x * 999.0), 0.0, 1.0));\\n  n_1 = (n_1 + clamp ((texture (sampler_pw_main, \\n    (uv + (texsize.zw * vec2(-1.0, 1.0)))\\n  ).x * 999.0), 0.0, 1.0));\\n  n_1 = (n_1 + clamp ((texture (sampler_pw_main, \\n    (uv + (texsize.zw * vec2(-1.0, 0.0)))\\n  ).x * 999.0), 0.0, 1.0));\\n  n_1 = (n_1 + clamp ((texture (sampler_pw_main, \\n    (uv - texsize.zw)\\n  ).x * 999.0), 0.0, 1.0));\\n  if ((n_1 < 1.9)) {\\n    ret_2 = (tmpvar_3.xyz - 0.4);\\n  };\\n  if ((n_1 > 3.1)) {\\n    ret_2 = (ret_2 - 0.4);\\n  };\\n  bool tmpvar_4;\\n  if ((ret_2.x < 0.1)) {\\n    tmpvar_4 = (abs((n_1 - 3.0)) < 0.5);\\n  } else {\\n    tmpvar_4 = bool(0);\\n  };\\n  if (tmpvar_4) {\\n    ret_2 = (ret_2 + 0.4);\\n  };\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = ret_2;\\n  ret = tmpvar_5.xyz;\\n }","comp":" shader_body { \\n  vec2 uv_1;\\n  vec3 ret_2;\\n  uv_1 = (0.05 + (0.9 * uv));\\n  ret_2 = (abs((\\n    ((texture (sampler_blur3, (uv_1 + (0.01 * \\n      ((bass + mid) + treb)\\n    ))).xyz * scale3) + bias3)\\n   - texture (sampler_main, uv_1).xyz)) * 6.0);\\n  ret_2 = (ret_2 * 1.333);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_2;\\n  ret = tmpvar_3.xyz;\\n }"}')},8313:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":2.63,"decay":0.91,"echo_zoom":1.007,"echo_orient":3,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"brighten":1,"invert":1,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"fshader":0.18,"zoom":0.99951,"warp":0.00909,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_a":0},"shapes":[{"baseVals":{"textured":1,"rad":5.3898,"tex_ang":1.19381,"tex_zoom":0.18923,"g":0.97,"b":1,"a":0.94,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"textured":1,"rad":3.99882,"tex_zoom":0.25005,"g":1,"b":1,"a":0.6,"r2":1,"b2":1,"a2":0.6,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":18,"textured":1,"num_inst":10,"x":0.463,"rad":1.60089,"tex_zoom":0.67634,"g":1,"b":1,"r2":0.7,"g2":0.8,"b2":0.8,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":16,"num_inst":353,"x":0.503,"rad":0.0376,"tex_zoom":1.11234,"g":1,"b":1,"g2":0,"border_a":0.06},"init_eqs_eel":"","frame_eqs_eel":"sample=instance/num_inst;\\nrad=.05+.04*sin(sample);\\n\\n/////  Knot\\n\\nq10=250*sample;\\nmy_x = -.22*cos(q10)-1.28*sin(q10)-.44*cos(3*q10)-.78*sin(3*q10);\\nmy_y= -.1*cos(2*q10)-.27*sin(2*q10)+.38*cos(4*q10)+.46*sin(4*q10);\\nmy_z=.7*cos(3*q10)-.4*sin(3*q10);\\n\\n\\n/////// rotations... by flexi\\n\\nd = .2; \\nzoom = 1;\\n\\nw3 = q1;\\nw2 = q2;\\nw1 = q3;\\n\\nx1 = cos(w1)*my_x + sin(w1)*my_y;\\ny1 = -sin(w1)*my_x + cos(w1)*my_y;\\nz1 = my_z;\\n\\nx2 = cos(w2)*x1 + sin(w2)*z1;\\nz2 = -sin(w2)*x1 + cos(w2)*z1;\\ny2 = y1;\\n\\ny3 = cos(w3)*y2 + sin(w3)*z2;\\nz3 = -sin(w3)*y2 + cos(w3)*z2;\\nx3 = x2;\\n\\n// perspective calculation\\n\\nl = sqrt(x3*x3 + y3*y3);\\nw = atan2(x3,y3);\\np = tan(asin(1) + atan2(d+z3,l));\\nd = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));\\n\\nmy_x = zoom*sin(w)*p;\\nmy_y = zoom*cos(w)*p;\\n\\np1 = .2*sin(sample*50);\\np2 = .2*sin(sample*80);\\n\\nx = .5+my_x*p1;\\ny = .5+my_y*p2;\\n\\nr = .4*sin(sample*80);\\nb = .8*sin(sample*66);\\ng = .6*sin(sample*120);"}],"waves":[{"baseVals":{"spectrum":1,"additive":1,"smoothing":0,"r":0.4,"g":0.4,"b":0.4,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"smoothing":0,"r":0,"g":0,"b":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"r":0,"g":0,"b":0,"a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"x1 = 2;\\ny1= 2;\\nz1 = 2;","frame_eqs_eel":"//per frame less reactive volume for all unused q vars, put before other q vars are set for cop out mashing\\nvb = vb*0.95 + (1-vb)*pow(bass_att,2)*0.02;\\nvvb = vvb*0.95 + (1-vvb)*vb*0.01;\\nvm = vm*0.95 + (1-vm)*pow(mid_att,2)*0.02;\\nvvm = vvm*0.95 + (1-vvm)*vm*0.01;\\nvt = vt*0.95 + (1-vt)*pow(treb_att,2)*0.02;\\nvvt = vvt*0.95 + (1-vvt)*vt*0.01;\\nvvb = min(1,max(0,vvb));\\nvvm = min(1,max(0,vvm));\\nvvt = min(1,max(0,vvt));\\nq1   = (vvb+vvm+vvt)*10;\\nq2   = (vvb+vvm+vvt)*10;\\nq3   = (vvb+vvm+vvt)*10;\\nq4   = (vvb+vvm+vvt)*10;\\nq5   = (vvb+vvm+vvt)*10;\\nq6   = (vvb+vvm+vvt)*10;\\nq7   = (vvb+vvm+vvt)*10;\\nq8   = (vvb+vvm+vvt)*10;\\nq9   = (vvb+vvm+vvt)*10;\\nq10  = (vvb+vvm+vvt)*10;\\nq11  = (vvb+vvm+vvt)*10;\\nq12  = (vvb+vvm+vvt)*10;\\nq13  = (vvb+vvm+vvt)*10;\\nq14  = (vvb+vvm+vvt)*10;\\nq15  = (vvb+vvm+vvt)*10;\\nq16  = (vvb+vvm+vvt)*10;\\nq17  = (vvb+vvm+vvt)*10;\\nq18  = (vvb+vvm+vvt)*10;\\nq19  = (vvb+vvm+vvt)*10;\\nq20  = (vvb+vvm+vvt)*10;\\nq21  = (vvb+vvm+vvt)*10;\\nq22  = (vvb+vvm+vvt)*10;\\nq23  = (vvb+vvm+vvt)*10;\\nq24  = (vvb+vvm+vvt)*10;\\nq25  = (vvb+vvm+vvt)*10;\\nq26  = (vvb+vvm+vvt)*10;\\nq27  = (vvb+vvm+vvt)*10;\\nq28  = (vvb+vvm+vvt)*10;\\nq29  = (vvb+vvm+vvt)*10;\\nq30  = (vvb+vvm+vvt)*10;\\nq31  = (vvb+vvm+vvt)*10;\\nq32  = (vvb+vvm+vvt)*10;\\n\\nq1 = aspectx;\\nq2 = aspecty;\\nwave_a = 0;\\nv = 0.5;\\nj1 = j1*0.95 + sqr(bass*4)*v;\\nj2 = j2*0.95 + sqr(mid*4)*v;\\nj3 = j3*0.95 + sqr(treb*4)*v;\\n\\nn = n + j1*0.0052;\\nn1 = n1 + j2*0.0052;\\nn2 = n2 + j3*0.0052;\\n\\n\\nq3 = n*0.01; // passing the 3 room angles\\nq4 = n1*0.01;\\nq5 = n2*0.01;\\n\\n\\n// lorenz-attractor calc\\na = 10;\\nb = 28;\\nc = 8/3;\\ndx1 = a*(y1-x1);\\ndy1 = x1*(b-z1)-y1;\\ndz1 = x1*y1-c*z1;\\nd = 1;\\ndd = sqrt(dx1*dx1 + dy1*dy1 + dz1*dz1);\\nx1 = x1 + d*dx1/dd;\\ny1 = y1 + d*dy1/dd;\\nz1 = z1 + d*dz1/dd;\\n\\nq11 = x1;\\nq12 = y1;\\nq13 = z1;\\nq14 = a;\\nq15 = b;\\nq16 = c;\\nq17 = d;","pixel_eqs_eel":"cx1 = 0.5+sin(time*0.618)*0.2;\\ncy1 = 0.5+cos(time*1.618)*0.2;\\n\\ndir = bass;\\n\\nd = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));\\n\\nx1 = if( above(d,0.3),0,  sin(y-cy1)*0.05*dir);\\ny1 = if( above(d,0.3),0, -sin(x-cx1)*0.05*dir);\\n\\n\\ncx1 = 0.5+sin(time*2.618)*0.3;\\ncy1 = 0.5+cos(time*3.14)*0.3;\\n\\ndir = -mid*2;\\n\\nd = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));\\n\\nx2 = if( above(d,0.2),0,  sin(y-cy1)*0.05*dir);\\ny2 = if( above(d,0.2),0, -sin(x-cx1)*0.05*dir);\\n\\ncx1 = 0.5+sin(-time*2.618)*0.4;\\ncy1 = 0.5+cos(-time*1.14)*0.4;\\n\\ndir = treb*3;\\n\\nd = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));\\n\\nx3 = if( above(d,0.1),0,  sin(y-cy1)*0.05*dir);\\ny3 = if( above(d,0.1),0, -sin(x-cx1)*0.05*dir);\\n\\n\\ndx = dx+x1+x2+x3;\\ndy = dy+y1+y2+y3;","warp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 1.5)) + rand_frame.xy);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ((texture (sampler_main, (\\n    mix (uv_orig, uv, vec2(((dot (texture (sampler_main, \\n      mix (uv_orig, uv, vec2(4.0, 4.0))\\n    ).xyz, vec3(0.32, 0.49, 0.29)) - dot (\\n      ((texture (sampler_blur2, mix (uv_orig, uv, vec2(-12.0, -12.0))).xyz * scale2) + bias2)\\n    , vec3(0.32, 0.49, 0.29))) * 12.0)))\\n   + \\n    (((texture (sampler_noise_lq, tmpvar_1) - 0.5).xy * texsize.zw) * 0.5)\\n  )).xyz + (\\n    (texture (sampler_noise_lq, tmpvar_1) - 0.5)\\n   * 0.006).xyz) + -0.0006);\\n  ret = tmpvar_2.xyz;\\n }","comp":"vec2 xlat_mutabledz;\\nvec3 xlat_mutableret1;\\nvec2 xlat_mutableuv3;\\nvec2 xlat_mutableuv4;\\n shader_body { \\n  vec2 uv_1;\\n  float inten_2;\\n  float dist_3;\\n  vec3 ret_4;\\n  uv_1 = (uv - 0.5);\\n  float tmpvar_5;\\n  tmpvar_5 = (time / 4.0);\\n  dist_3 = (1.0 - fract(tmpvar_5));\\n  inten_2 = ((sqrt(dist_3) * (1.0 - dist_3)) * 2.0);\\n  vec2 tmpvar_6;\\n  tmpvar_6.y = 0.0;\\n  float tmpvar_7;\\n  tmpvar_7 = (time / 8.0);\\n  tmpvar_6.x = tmpvar_7;\\n  xlat_mutableuv3 = (((\\n    (2.0 * uv_1)\\n   * dist_3) + 0.4) + tmpvar_6);\\n  vec2 tmpvar_8;\\n  tmpvar_8.y = 0.0;\\n  tmpvar_8.x = texsize.z;\\n  vec2 tmpvar_9;\\n  tmpvar_9.y = 0.0;\\n  tmpvar_9.x = texsize.z;\\n  xlat_mutabledz.x = (inten_2 * dot ((texture (sampler_main, \\n    (xlat_mutableuv3 + tmpvar_8)\\n  ).xyz - texture (sampler_main, \\n    (xlat_mutableuv3 - tmpvar_9)\\n  ).xyz), vec3(0.32, 0.49, 0.29)));\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = 0.0;\\n  tmpvar_10.y = texsize.w;\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = 0.0;\\n  tmpvar_11.y = texsize.w;\\n  xlat_mutabledz.y = (inten_2 * dot ((texture (sampler_main, \\n    (xlat_mutableuv3 + tmpvar_10)\\n  ).xyz - texture (sampler_main, \\n    (xlat_mutableuv3 - tmpvar_11)\\n  ).xyz), vec3(0.32, 0.49, 0.29)));\\n  xlat_mutableret1 = max (vec3(0.0, 0.0, 0.0), (texture (sampler_main, xlat_mutableuv3).xyz * inten_2));\\n  dist_3 = (1.0 - fract((0.2 + tmpvar_5)));\\n  inten_2 = ((sqrt(dist_3) * (1.0 - dist_3)) * 2.0);\\n  vec2 tmpvar_12;\\n  tmpvar_12.y = 0.0;\\n  tmpvar_12.x = tmpvar_7;\\n  xlat_mutableuv3 = (((\\n    (2.0 * uv_1)\\n   * dist_3) + 0.4) + tmpvar_12);\\n  vec2 tmpvar_13;\\n  tmpvar_13.y = 0.0;\\n  tmpvar_13.x = texsize.z;\\n  vec2 tmpvar_14;\\n  tmpvar_14.y = 0.0;\\n  tmpvar_14.x = texsize.z;\\n  xlat_mutabledz.x = (xlat_mutabledz.x + (inten_2 * dot (\\n    (texture (sampler_main, (xlat_mutableuv3 + tmpvar_13)).xyz - texture (sampler_main, (xlat_mutableuv3 - tmpvar_14)).xyz)\\n  , vec3(0.32, 0.49, 0.29))));\\n  vec2 tmpvar_15;\\n  tmpvar_15.x = 0.0;\\n  tmpvar_15.y = texsize.w;\\n  vec2 tmpvar_16;\\n  tmpvar_16.x = 0.0;\\n  tmpvar_16.y = texsize.w;\\n  xlat_mutabledz.y = (xlat_mutabledz.y + (inten_2 * dot (\\n    (texture (sampler_main, (xlat_mutableuv3 + tmpvar_15)).xyz - texture (sampler_main, (xlat_mutableuv3 - tmpvar_16)).xyz)\\n  , vec3(0.32, 0.49, 0.29))));\\n  xlat_mutableret1 = max (xlat_mutableret1, (texture (sampler_main, xlat_mutableuv3).xyz * inten_2));\\n  dist_3 = (1.0 - fract((0.4 + tmpvar_5)));\\n  inten_2 = ((sqrt(dist_3) * (1.0 - dist_3)) * 2.0);\\n  vec2 tmpvar_17;\\n  tmpvar_17.y = 0.0;\\n  tmpvar_17.x = tmpvar_7;\\n  xlat_mutableuv3 = (((\\n    (2.0 * uv_1)\\n   * dist_3) + 0.4) + tmpvar_17);\\n  vec2 tmpvar_18;\\n  tmpvar_18.y = 0.0;\\n  tmpvar_18.x = texsize.z;\\n  vec2 tmpvar_19;\\n  tmpvar_19.y = 0.0;\\n  tmpvar_19.x = texsize.z;\\n  xlat_mutabledz.x = (xlat_mutabledz.x + (inten_2 * dot (\\n    (texture (sampler_main, (xlat_mutableuv3 + tmpvar_18)).xyz - texture (sampler_main, (xlat_mutableuv3 - tmpvar_19)).xyz)\\n  , vec3(0.32, 0.49, 0.29))));\\n  vec2 tmpvar_20;\\n  tmpvar_20.x = 0.0;\\n  tmpvar_20.y = texsize.w;\\n  vec2 tmpvar_21;\\n  tmpvar_21.x = 0.0;\\n  tmpvar_21.y = texsize.w;\\n  xlat_mutabledz.y = (xlat_mutabledz.y + (inten_2 * dot (\\n    (texture (sampler_main, (xlat_mutableuv3 + tmpvar_20)).xyz - texture (sampler_main, (xlat_mutableuv3 - tmpvar_21)).xyz)\\n  , vec3(0.32, 0.49, 0.29))));\\n  xlat_mutableret1 = max (xlat_mutableret1, (texture (sampler_main, xlat_mutableuv3).xyz * inten_2));\\n  dist_3 = (1.0 - fract((0.6 + tmpvar_5)));\\n  inten_2 = ((sqrt(dist_3) * (1.0 - dist_3)) * 2.0);\\n  vec2 tmpvar_22;\\n  tmpvar_22.y = 0.0;\\n  tmpvar_22.x = tmpvar_7;\\n  xlat_mutableuv3 = (((\\n    (2.0 * uv_1)\\n   * dist_3) + 0.4) + tmpvar_22);\\n  vec2 tmpvar_23;\\n  tmpvar_23.y = 0.0;\\n  tmpvar_23.x = texsize.z;\\n  vec2 tmpvar_24;\\n  tmpvar_24.y = 0.0;\\n  tmpvar_24.x = texsize.z;\\n  xlat_mutabledz.x = (xlat_mutabledz.x + (inten_2 * dot (\\n    (texture (sampler_main, (xlat_mutableuv3 + tmpvar_23)).xyz - texture (sampler_main, (xlat_mutableuv3 - tmpvar_24)).xyz)\\n  , vec3(0.32, 0.49, 0.29))));\\n  vec2 tmpvar_25;\\n  tmpvar_25.x = 0.0;\\n  tmpvar_25.y = texsize.w;\\n  vec2 tmpvar_26;\\n  tmpvar_26.x = 0.0;\\n  tmpvar_26.y = texsize.w;\\n  xlat_mutabledz.y = (xlat_mutabledz.y + (inten_2 * dot (\\n    (texture (sampler_main, (xlat_mutableuv3 + tmpvar_25)).xyz - texture (sampler_main, (xlat_mutableuv3 - tmpvar_26)).xyz)\\n  , vec3(0.32, 0.49, 0.29))));\\n  xlat_mutableret1 = max (xlat_mutableret1, (texture (sampler_main, xlat_mutableuv3).xyz * inten_2));\\n  uv_1 = (uv_1 + (xlat_mutabledz * 14.0));\\n  xlat_mutableuv4 = (uv_1 - vec2(0.2, -0.1));\\n  float tmpvar_27;\\n  tmpvar_27 = (0.5 * clamp ((1.0/(\\n    (abs(uv_1.y) + 0.1)\\n  )), 0.0, 12.0));\\n  vec2 tmpvar_28;\\n  tmpvar_28.x = (uv_1.x * tmpvar_27);\\n  tmpvar_28.y = tmpvar_27;\\n  vec3 tmpvar_29;\\n  tmpvar_29.xy = vec2(0.0, 0.0);\\n  tmpvar_29.z = clamp ((1.0 - (3.0 * uv_1.y)), 0.0, 1.0);\\n  ret_4 = (vec3(0.0, 0.1, 0.1) + (0.1 * tmpvar_29));\\n  ret_4 = (ret_4 + (vec3(dot (texture (sampler_noise_hq, \\n    (tmpvar_28 + (0.04 * time))\\n  ), vec4(0.32, 0.49, 0.29, 0.0))) * (\\n    (clamp ((1.0 - (12.0 * uv_1.y)), 0.0, 1.0) * 0.1)\\n   / \\n    (0.03 + sqrt(dot (xlat_mutableuv4, xlat_mutableuv4)))\\n  )));\\n  ret_4 = (ret_4 + ((0.4 * xlat_mutableret1) + (xlat_mutableret1 * q22)));\\n  vec4 tmpvar_30;\\n  tmpvar_30.w = 1.0;\\n  tmpvar_30.xyz = ret_4;\\n  ret = tmpvar_30.xyz;\\n }"}')},3186:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":2,"gammaadj":1,"decay":1,"echo_zoom":1,"wave_mode":7,"wave_thick":1,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":0.01,"wave_smoothing":0.9,"wave_mystery":1,"modwavealphastart":0.5,"modwavealphaend":1,"warpanimspeed":0.01,"warpscale":1.766,"zoomexp":1.00016,"dx":0.00001,"dy":0.00001,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"wave_y":0.6,"ob_size":0,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":0.1,"mv_x":64,"mv_y":48,"mv_l":1.5,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"textured":1,"y":1.8},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"textured":1,"y":1.8},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"textured":1,"y":1.8},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.35*sin(1.14*time) + 0.16*sin(1.5*time);\\nwave_g = wave_g + 0.36*sin(1.27*time) + 0.15*sin(1.11*time);\\nwave_b = wave_b + 0.37*sin(1.284*time) + 0.15*sin(1.3*time);\\nwarp = 0;\\n\\nob_r = wave_g;\\nob_b = wave_r;\\nob_g = wave_b;\\nib_r = wave_r;\\nib_b = wave_g;\\nib_g = wave_r;","pixel_eqs_eel":"sx=1- .01;\\nrot=.02;\\nkdx=dx;\\nkdy=dy;\\nksx=sx;\\nksy=sy;\\nkrt=rot;\\nkzm=zoom;\\nkcx=cx;\\nkcy=cy;\\nkwp=warp;\\n\\ndx=0;\\ndy=0;\\nsx=1;\\nsy=1;\\nrot=0;\\nzoom=1;\\ncx=.5;\\ncy=.5;\\nwarp=0;\\n\\ndx = 0.01*sin(100*y+q8/y);\\ndy = 0.01*sin(100*x+q8/x);\\ncr1=0*.01;\\ncr2=99*.01;;\\ncrx=cr2-cr1;\\nci=rad;\\nci=x*4-1+sin(time/3)*6  ;\\ncrs=2;\\ncr=pow(sin(ci*6.3-(cb*6.3))/2+.5,crs)*crx+cr1;\\ncqr=if( above (ci,.25+cb),cr,crx+cr1);crr=if( below(ci,1.5),cqr,crx+cr1);\\nkx1=crr;\\njx1=1-crr;\\n\\njdx=dx;\\njdy=dy;\\njsx=sx;\\njsy=sy;\\njrt=rot;\\njzm=zoom;\\njcx=cx;\\njcy=cy;\\njwp=warp;\\n\\ndx=(jx1*jdx+kx1*kdx);\\ndy=(jx1*jdy+kx1*kdy);\\nsx=(jx1*jsx+kx1*ksx);\\nsy=(jx1*jsy+kx1*ksy);\\nrot=(jx1*jrt+kx1*krt);\\nzoom=(jx1*jzm+kx1*kzm);\\ncx=(jx1*jcx+kx1*kcx);\\ncy=(jx1*jcy+kx1*kcy);\\nwarp=(jx1*jwp+kx1*kwp);\\n\\ngkdx=dx;//////////////////////////////////////////\\ngkdy=dy;\\ngksx=sx;\\ngksy=sy;\\ngkrt=rot;\\ngkzm=zoom;\\ngkcx=cx;\\ngkcy=cy;\\ngkwp=warp;\\n\\ndx=0;\\ndy=0;\\nsx=1;\\nsy=1;\\nrot=0;\\nzoom=1;\\ncx=.5;\\ncy=.5;\\nwarp=0;/////////////////////////////////////////////////////\\n\\nw=sin(ang*22+sin(time/8) )/2+.5;\\ncc=w*w*w*w*w*w*w*w*w*w*w*w;\\nzoom=cc/22+1;\\n///////////////////////////////////////\\ncr1=(int(sin(time*2)/2+.5+.2));\\ncr2=cr1;\\ncrx=cr2-cr1;\\nci=rad;\\ncb=.25  ;\\ncrs=2;\\ncr=pow(sin(ci*6.3-(cb*6.3))/2+.5,crs)*crx+cr1;\\ncqr=if( above (ci,.25+cb),cr,crx+cr1);crr=if( below(ci,1.5),cqr,crx+cr1);\\njx1=crr;\\nkx1=1-crr;\\n\\ngjdx=dx;\\ngjdy=dy;\\ngjsx=sx;\\ngjsy=sy;\\ngjrt=rot;\\ngjzm=zoom;\\ngjcx=cx;\\ngjcy=cy;\\ngjwp=warp;\\n\\ndx=(jx1*gjdx+kx1*gkdx);\\ndy=(jx1*gjdy+kx1*gkdy);\\nsx=(jx1*gjsx+kx1*gksx);\\nsy=(jx1*gjsy+kx1*gksy);\\nrot=(jx1*gjrt+kx1*gkrt);\\nzoom=(jx1*gjzm+kx1*gkzm);\\ncx=(jx1*gjcx+kx1*gkcx);\\ncy=(jx1*gjcy+kx1*gkcy);\\nwarp=(jx1*gjwp+kx1*gkwp);////////////////////////////////////////////////////","warp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 12.0);\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = (((texture (sampler_blur3, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale3) + bias3) - ((texture (sampler_blur3, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale3) + bias3)).y;\\n  tmpvar_3.y = (((texture (sampler_blur3, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale3) + bias3) - ((texture (sampler_blur3, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale3) + bias3)).y;\\n  ret_1.y = texture (sampler_fw_main, fract((uv + (\\n    (tmpvar_3 * texsize.zw)\\n   * 48.0)))).y;\\n  ret_1.y = (ret_1.y + ((\\n    (ret_1 - ((texture (sampler_blur3, (uv - \\n      floor(uv)\\n    )).xyz * scale3) + bias3))\\n  .y * 0.01) - 0.004));\\n  ret_1.y = (ret_1.y + ((texture (sampler_noise_lq, \\n    (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 0.25)) + rand_frame.xy)\\n  ).y - 0.5) * 0.06));\\n  ret_1.x = texture (sampler_main, uv).x;\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = ret_1;\\n  ret = tmpvar_4.xyz;\\n }","comp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = texture (sampler_main, uv).yyy;\\n  ret = tmpvar_1.xyz;\\n }"}')},4745:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1,"decay":0.959,"echo_zoom":1,"echo_alpha":0.047,"wave_mode":6,"wave_brighten":0,"darken_center":1,"wave_a":0.005,"wave_scale":0.113,"wave_smoothing":0,"wave_mystery":-0.214,"modwavealphastart":1,"modwavealphaend":1,"warpanimspeed":0.778,"warpscale":51.512,"zoomexp":1.73596,"fshader":0.054,"zoom":1.00059,"rot":0.00438,"warp":0.01,"wave_x":0.597,"wave_y":0.819,"ob_size":0.005,"ob_r":0.301,"ob_g":0.111,"ob_b":0.266,"ob_a":1,"ib_size":0,"ib_r":0.622,"ib_g":0.698,"ib_b":0.831,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0.486,"mv_g":0.675,"mv_b":0.347,"mv_a":0,"b1ed":0.107},"shapes":[{"baseVals":{"sides":100,"thickoutline":1,"y":0.661,"rad":0.0907,"tex_zoom":0.59662,"r":0.643,"g":0.044,"r2":0.398,"g2":0.722,"b2":0.172,"a2":0.68,"border_r":0.624,"border_b":0.503,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t = -(q4+q5)*0.2;\\nx = 0.5 + sin(t)*0.2;\\nrad = 0.4 - cos(t)*0.3;"},{"baseVals":{"sides":100,"thickoutline":1,"x":0.582,"y":0.451,"rad":0.43922,"ang":0.30557,"tex_zoom":0.70681,"r":0.79,"g":0.002,"b":0.105,"r2":0.52,"g2":0.186,"b2":0.2,"a2":0.27,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t = -(q4+q5)*0.2;\\npi = asin(1)*2;\\nx = 0.5 + sin(t+pi)*0.2;\\nyy = if(below(d,0.15),0.3+rand(400)/1000,yy);\\naang = if(below(d,0.12),rand(1000)/1000,aang);\\nang = aang*4*asin(1);\\ny = yy;"},{"baseVals":{"sides":100,"thickoutline":1,"x":0.651,"y":0.552,"rad":1.07507,"ang":0.52229,"tex_zoom":0.67074,"r":0.295,"b":0.118,"r2":0.427,"g2":0,"b2":0.546,"a2":0.68,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"d = sqrt( sqr(xx-q4)+sqr(yy-q8));\\nxx = if(below(d,0.15),0.4+rand(200)/1000,xx);\\nyy = if(below(d,0.15),0.3+rand(400)/1000,yy);\\naang = if(below(d,0.12),rand(1000)/1000,aang);\\nang = aang*4*asin(1);\\ny = yy;"},{"baseVals":{"sides":100,"thickoutline":1,"y":0.688,"rad":0.62269,"tex_zoom":0.96404,"r":0.891,"g":0.416,"b":0.243,"a":0.964,"r2":0.192,"g2":0.692,"b2":0.17,"a2":0.243,"border_a":0.051,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = q1;\\ny = q5;\\npi3 = 3.1415*2*0.3333;\\nt = (q4-2*q5+q6)*0.2;\\nc = 3;\\nr = if(below(if(above(sin(t)*c,1),1,r),0),0,r);\\ng = if(below(if(above(sin(t+pi3)*c,1),1,g),0),0,g);\\nb = if(below(if(above(sin(t-pi3)*c,1),1,b),0),0,b);\\nr2 = 1-r;\\ng2 = 1-g;\\nb2 = 1-b;"}],"waves":[{"baseVals":{"sep":20,"spectrum":1,"thick":1,"scaling":3.4621,"smoothing":0.5112,"r":0.569,"g":0.808,"b":0.557,"a":0.288,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1 = 0;\\nj = j + (bass)*0.01;\\nj2 = j2 + (mid_att)*0.01;\\nj3 = j3 + (treb_att)*0.01;\\nt2 = j;\\npi3 = 3.1415*2*0.3333;\\nt = (q4+q5+q6)*0.005;\\nc = 5;\\nr = if(below(if(above(1-sin(t)*c,1),1,r),0),0,r);\\ncl1 = if(below(if(above(cl1 + 0.002,1),0,cl1),0),1,cl1);\\ng = if(below(if(above(1-sin(t+pi3)*c,1),1,g),0),0,g);\\nb = if(below(if(above(1-sin(t-pi3)*c,1),1,b),0),0,b);\\ncl2 = if(below(if(above(cl2 -1*q1,1),0,cl2),0),1,cl2);\\ncl3 = if(below(if(above(cl3 +0.001,1),0,cl3),0),1,cl3);\\nt6 = cl3;","point_eqs_eel":"t8 = -t8;\\nyy = ((xx*1896575575)%10000000+100)/10000000 + t6 - if(above(yy+t6,1),1,0) - 0.5;\\nzz = ((yy*58652340875)%10000000+100)/10000000 + t8 - if(above(zz+t8,1),1,0) - 0.5;\\nd = sqrt(sqr(xx)+sqr(yy)+sqr(zz));\\nw = 1;\\nbb = d*d*0.5;\\nn = 0.3;\\ns1 = sin(sin(t2*w+bb)*n);\\ns2 = sin(sin(t3*w+bb)*n);\\nc1 = cos(sin(t2*w+bb)*n);\\nc2 = cos(sin(t3*w+bb)*n);\\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\\nc3 = cos(sin(t4*w+bb)*n);\\nx = 0.5 + zoom*x1 + sin(time*0.1)*0;\\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\\nr = if(below(if(above(r,1),1,r),0),0,r);\\ng = if(below(if(above(g,1),1,g),0),0,g);"},{"baseVals":{"sep":20,"spectrum":1,"thick":1,"scaling":4.75054,"smoothing":0.192,"r":0.978,"b":0.93,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\npi3 = 3.1415*2*0.3333;\\nt = (q4+q5+q6)*0.005 + 2;\\nc = 5;\\nr = if(below(if(above(1-sin(t)*c,1),1,r),0),0,r);\\ng = if(below(if(above(1-sin(t+pi3)*c,1),1,g),0),0,g);\\nb = if(below(if(above(1-sin(t-pi3)*c,1),1,b),0),0,b);","point_eqs_eel":"t8 = -t8;\\nnd = sqrt(1-sqr((sample-0.5)*2));\\nnz = sample*0.4 - 0.2*(1+t8*p);\\nnx = sin(sample*100)*nd*0.2*(1+t8*p);\\ng = 0;\\nt = (q4-q6)*10;\\nc = 2;\\nr = if(below(if(above(sin(t)*c,1),1,r),0),0,r);\\nb = if(below(if(above(sin(t-pi3)*c,1),1,b),0),0,b);\\ndir = (t4-t6)*0.4 + (t1-t3)*(t8+1)*0.2;\\nw = t5*0.4 + (t8+1)*t2*0.2;\\nzz = nz;\\nnyy = ny;\\nny = cos(w)*nyy - sin(w)*zz;\\nz = sin(w)*nyy + cos(w)*zz;\\nyy = sin(dir)*nx + cos(dir)*ny;\\nd = 0.5;\\nzoom = 2 - sqrt(t2)*1.1;\\nzm = sqrt(nx*nx+ny*ny+sqr(z+d))/d;\\ny = 0.5 + zoom*yy*0.55/zm;"},{"baseVals":{"sep":20,"spectrum":1,"thick":1,"scaling":23.38429,"smoothing":0,"g":0.531,"b":0.67,"a":0.823,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1 = q9;\\nt2 = q2;\\nt3 = q3*0.5;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt7 = q7;\\nt8 = q7;","point_eqs_eel":"sample = 1-sample;\\nxx = (-0.5+sample)*2*d1*(1+value1);\\nzz = cos(sample*n)*0.02*d1;\\nyy = sin(sample*n)*0.02*d1*(1+value2);\\nd = sqrt( xx*xx + yy*yy + zz*zz);\\nb = rand(1001)*.001*.6;\\nm = d*d*2;\\ndd = dd*0.95 + (value1);\\nddd = dd*sample*(1-sample)*d;\\ny = yy - (xx-xxx)*ddd;\\nc1 = cos(t4*w + m*t1);\\nc2 = cos(t5*w + m*t2);\\nc3 = cos(t6*w + m*t3);\\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\\nna = 2;\\nzoom = 0.3*atan2(na-z,na);\\nx = 0.5 + zoom*x1;\\npi3 = 3.1415*2*0.3333;\\nt = -xx+t5*.2;\\nc = 10;\\nr = if(below(if(above(sin(t)*c,1),1,r),0),0,r);\\ng = if(below(if(above(sin(t+pi3)*c,1),1,g),0),0,g);\\na = 2;"},{"baseVals":{"sep":20,"spectrum":1,"thick":1,"scaling":2.24641,"smoothing":0.0648,"r":0.907,"g":0.728,"b":0.563,"a":0.999,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1 = q4*0.75;\\nt2 = q2;\\nt3 = q6*0.75;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6*0.75;\\nt7 = q7;\\nt8 = q8;","point_eqs_eel":"t8 = -t8;\\nn = 300;\\nzz = (-0.5+sample)*2*d1;\\nb = rand(1001)*.001*.6;\\nyy = sin(sample*n)*0.02*d1*(1+value2);\\nd = sqrt( xx*xx + yy*yy + zz*zz);\\nw = .3;\\nm = d*d*2;\\ns1 = sin(t4*w + m*t1);\\ns2 = sin(t5*w + m*t2);\\ns3 = sin(t6*w + m*t3);\\nc1 = cos(t4*w + m*t1);\\nc2 = cos(t5*w + m*t2);\\nc3 = cos(t6*w + m*t3);\\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\\nna = 2;\\nzoom = 0.3*atan2(na-z,na);\\nx = 0.5 + zoom*x1;\\ny = 0.5 + zoom*y1;\\npi3 = 3.1415*2*0.3333;\\nt = -zz+t6*.2;\\nc = 10;\\nr = if(below(if(above(sin(t)*c,1),1,r),0),0,r);\\ng = if(below(if(above(sin(t+pi3)*c,1),1,g),0),0,g);\\na = 2;"}],"init_eqs_eel":"x1 = 0;\\ny1 = 0;\\nx2 = 0.5;\\nx3 = 0.5;\\nx4 = 0.5;","frame_eqs_eel":"decay = 0.25;\\nxx1 = xx1*0.9 + (bass)*0.01;\\nxx2 = xx2*0.9 + (treb)*0.01;\\nlastbeat = nbeat*time + (1-nbeat)*lastbeat + equal(lastbeat,0)*time;\\nx1 = 0.5 - (xx1-xx2)*2;\\nbeat = above(volume,0.8)*below(peakbass_att - bass_att, 0.05*peakbass_att)*above(time - lastbeat, 0.1 + 0.5*(beatrate - 0.1));\\nspring = 50;\\ngrav = 2;\\nq10 = beat;\\ndt = 0.0005;\\nvx2 = if(below(x2,1),if(above(x2,0),vx2*(1-resist*dt) + dt*((x1+x3-2*x2)*spring),abs(vx2)*bounce),-abs(vx2)*bounce);\\nvy2 = if(below(y2,1),if(above(y2,0),vy2*(1-resist*dt) + dt*((y1+y3-2*y2)*spring-grav),abs(vy2)*bounce),-abs(vy2)*bounce);\\nvx3 = if(below(x3,1),if(above(x3,0),vx3*(1-resist*dt) + dt*((x2+x4-2*x3)*spring),abs(vx3)*bounce),-abs(vx3)*bounce);\\nvy3 = if(below(y3,1),if(above(y3,0),vy3*(1-resist*dt) + dt*((y2+y4-2*y3)*spring-grav),abs(vy3)*bounce),-abs(vy3)*bounce);\\nspy4 = (y3-y4)*spring;\\nq6 = tt;\\nx2 = x2 + vx2;\\ny2 = y2 + vy2;\\nx3 = x3 + vx3;\\ny3 = y3 + vy3;\\nvy4 = if(below(y4,1),if(above(y4,0),vy4*(1-resist*dt) + dt*(spy4-grav),abs(vy4)*bounce),-abs(vy4)*bounce);\\ny4 = y4 + vy4;\\nq3 = x4;\\nq7 = y4;\\nq8 = y2;\\nq4 = x2;\\nq9 = x1;\\nq1 = x1;\\nq2 = x2;\\nq12 = y3;\\nzoom = 1;\\nmx = max(max(bb,mm),tt);\\nmn = min(min(bb,mm),tt);\\nob_r = (bb-mn)/(mx-mn);\\nob_b = (mm-mn)/(mx-mn);\\nob_g = (tt-mn)/(mx-mn);\\nq13 = atan2(vx3,vy3);\\nq14 = sqrt(vx3*vx3 + vy3*vy3);\\nq5 = sqrt(vx2*vx2 + vy2*vy2);","pixel_eqs_eel":"w1 = q9;\\nw2 = q10;\\nnx = nx-0.5;\\nny = ny- 0.5;\\nb1 = 0.075;\\nm1 = q5*50;\\nt1 = 0.1;\\nx1 = nxx   +cos(ndir+1.5708)*b1;\\ny1 = nyy -sin(ndir+1.5708)*b1;\\nx2 = nxx   -cos(ndir+1.5708)*b1;\\ny2 = nyy +sin(ndir+1.5708)*b1;\\nd1 = sqrt((x1-nx)*(x1-nx)+(y1-ny)*(y1-ny))-b1*2;\\nsi1 = 1- 1/(1+pow(2,-d1*100));\\nd2 = sqrt((x2-nx)*(x2-nx)+(y2-ny)*(y2-ny))-b1*2;\\nsi2 = 1- 1/(1+pow(2,-d2*100));\\nsi3 = -pow(q5,3)*10;\\ndx = (si1*sin(y1-ny)*m1*d1  - si2*sin(y2-ny)*m1*d2 + si3*cos(ndir)*t1)*2/aspectx + nv*sin(ndir)*(nr-nd)*(1-sigmoid(nd-nr,280))/aspectx + nv*(nx-nxx)*(nr-nd)*(1-sigmoid(nd-nr,70))/aspectx + (nv*(sin(ny-yy)*(nd-r)-(nx-xx)*(nd-r/2)) + cos(dir)*v2)*(1.00-sigmoid(nd-r,180))/aspectx;\\ndy = (-si1*sin(x1-nx)*m1*d1 + si2*sin(x2-nx)*m1*d2 - si3*sin(ndir)*t1)*2/aspecty + nv*cos(ndir)*(nr-nd)*(1-sigmoid(nd-nr,280))/aspecty + nv*(ny-nyy)*(nr-nd)*(1-sigmoid(nd-nr,70))/aspecty + (-nv*(sin(nx-xx)*(nd-r)+(ny-yy)*(nd-r/2)) -sin(dir)*v2)*(1.00-sigmoid(nd-r,180))/aspecty;\\nndir = -q2*1 + asin(1)*0;\\nnxx = w1;\\nnyy = 1-w2;","warp":" shader_body { \\n  vec2 my_uv_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (vec2(1280.0, 1024.0) * texsize.zw);\\n  float tmpvar_4;\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (uv + vec2(0.005, 0.0));\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv - vec2(0.005, 0.0));\\n  tmpvar_4 = (((\\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_6).xyz * scale2)\\n   + bias2)).x * tmpvar_3.x);\\n  float tmpvar_7;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (uv + vec2(0.0, 0.005));\\n  vec2 tmpvar_9;\\n  tmpvar_9 = (uv - vec2(0.0, 0.005));\\n  tmpvar_7 = (((\\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_9).xyz * scale2)\\n   + bias2)).x * tmpvar_3.y);\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = tmpvar_4;\\n  tmpvar_10.y = tmpvar_7;\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = (((\\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_6).xyz * scale2)\\n   + bias2)).x * tmpvar_3.x);\\n  tmpvar_11.y = (((\\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_9).xyz * scale2)\\n   + bias2)).x * tmpvar_3.y);\\n  ret_2.x = texture (sampler_fw_main, ((uv - (tmpvar_10 * 0.01)) + (tmpvar_11 * 0.003))).x;\\n  vec4 tmpvar_12;\\n  tmpvar_12 = texture (sampler_blur3, uv);\\n  ret_2.x = (ret_2.x + ((ret_2.x - \\n    ((tmpvar_12.xyz * scale3) + bias3)\\n  .x) * 0.1));\\n  ret_2.x = (ret_2.x + 0.004);\\n  vec2 tmpvar_13;\\n  tmpvar_13.x = tmpvar_7;\\n  tmpvar_13.y = -(tmpvar_4);\\n  my_uv_1 = (uv + ((tmpvar_13 * 0.05) * (1.2 - \\n    ((tmpvar_12.xyz * scale3) + bias3)\\n  .y)));\\n  ret_2.z = texture (sampler_fw_main, my_uv_1).z;\\n  vec2 x_14;\\n  x_14 = (my_uv_1 - uv);\\n  ret_2.z = (ret_2.z + ((\\n    ((ret_2.z - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).z) * sqrt(dot (x_14, x_14)))\\n   * 180.0) / sqrt(\\n    dot (tmpvar_3, tmpvar_3)\\n  )));\\n  ret_2.z = (ret_2.z * 0.8);\\n  ret_2.z = (ret_2.z + 0.004);\\n  vec2 tmpvar_15;\\n  tmpvar_15.x = -(tmpvar_7);\\n  tmpvar_15.y = tmpvar_4;\\n  my_uv_1 = (tmpvar_15 * 0.045);\\n  vec2 tmpvar_16;\\n  tmpvar_16.x = (((\\n    (texture (sampler_blur2, (uv + vec2(0.01, 0.0))).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, (uv - vec2(0.01, 0.0))).xyz * scale2)\\n   + bias2)).y * tmpvar_3.x);\\n  tmpvar_16.y = (((\\n    (texture (sampler_blur2, (uv + vec2(0.0, 0.01))).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, (uv - vec2(0.0, 0.01))).xyz * scale2)\\n   + bias2)).y * tmpvar_3.y);\\n  my_uv_1 = (my_uv_1 + (uv - (tmpvar_16 * 0.03)));\\n  ret_2.y = texture (sampler_fw_main, my_uv_1).y;\\n  ret_2.y = (ret_2.y + ((\\n    (ret_2.y - ((texture (sampler_blur3, my_uv_1).xyz * scale3) + bias3).y)\\n   * 0.1) + 0.01));\\n  vec4 tmpvar_17;\\n  tmpvar_17.w = 1.0;\\n  tmpvar_17.xyz = ret_2;\\n  ret = tmpvar_17.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_blur1, uv);\\n  vec4 tmpvar_3;\\n  tmpvar_3 = texture (sampler_main, uv);\\n  vec4 tmpvar_4;\\n  tmpvar_4 = texture (sampler_blur2, uv);\\n  ret_1 = ((vec3(1.0, 1.0, 0.0) * vec3((\\n    ((((tmpvar_4.xyz * scale2) + bias2).x * 2.5) - (((tmpvar_2.xyz * scale1) + bias1).x * 0.7))\\n   + \\n    (tmpvar_3.x * 0.75)\\n  ))) * (1.0 - (\\n    ((tmpvar_2.xyz * scale1) + bias1)\\n  .x * 1.85)));\\n  ret_1 = (ret_1 + ((vec3(1.0, 0.0, 0.0) * tmpvar_3.x) + (vec3(0.25, 0.25, 0.25) * tmpvar_3.x)));\\n  ret_1 = (ret_1 * max (tmpvar_3.y, (\\n    ((tmpvar_4.xyz * scale2) + bias2)\\n  .y * 0.5)));\\n  ret_1 = (ret_1 * (1.0 - clamp (\\n    (((tmpvar_2.xyz * scale1) + bias1).z * 10.0)\\n  , 0.0, 1.0)));\\n  ret_1 = (ret_1 + vec3(pow (tmpvar_3.z, 1.5)));\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = ret_1;\\n  ret = tmpvar_5.xyz;\\n }"}')},8805:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1.98,"decay":0.5,"echo_zoom":0.952,"echo_alpha":0.5,"echo_orient":3,"wave_mode":6,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":2.103,"wave_smoothing":0.54,"wave_mystery":0.38,"modwavealphastart":0.81,"modwavealphaend":1.4,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0.015,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":16,"thickoutline":1,"textured":1,"num_inst":3,"x":0.73,"rad":0.29466,"tex_zoom":1.87511,"r":0.7,"g":0.7,"b":1,"g2":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"trig = q25;\\na = trig*.8; a2 = 0;\\n\\nx0 = x0 *bnot(trig) + trig*rand(100)/100;\\ny0 = y0 *bnot(trig) + trig*rand(100)/100;\\ntex_ang = rand(20);\\nrad = .1+rand(10)/8;\\n\\nx = x0; y = y0;\\nr = .7+.3*sin(time/12);\\nb = .7+.3*sin(time/15);\\ng = .7+.3*sin(time/8);\\nr2 = r; b2 = b; g2 = g;"},{"baseVals":{"enabled":1,"sides":36,"thickoutline":1,"textured":1,"num_inst":4,"x":0.3,"rad":0.05429,"ang":1.25664,"tex_ang":0.37699,"tex_zoom":1.02841,"g":0.7,"b":0.5,"r2":1,"g2":0,"border_g":0.59,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = q31; y = q32;\\nrad = .06;\\ntex_ang = time;\\na = q30;"},{"baseVals":{"sides":63,"x":0.123,"y":0,"rad":0.27319,"tex_zoom":0.49981,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":24,"textured":1,"x":0.7,"y":0.51,"rad":0.19869,"tex_ang":1.00531,"tex_zoom":0.49981,"g":1,"b":0.99,"a":0,"g2":0,"a2":1,"border_r":0,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"thick":1,"additive":1,"scaling":0.04505,"smoothing":0,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"samples":100,"usedots":1,"thick":1,"scaling":0.89152,"smoothing":0,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"t0a = time; t0 = time+.5;\\nspb_ = .5; ;\\nvolb = .5; volx = .5;\\nvol_= 1; index = 0; mov1 = 0;\\nsdev = .1; wamp_ = .1;","frame_eqs_eel":"dec_med = pow (0.8, 30/fps); dec_slow = pow (0.95, 30/fps);\\nvol = (bass+med+treb)/1.5; vol_ = vol_*dec_slow + (1-dec_slow)*vol;\\n\\nis_beat = above(vol, vol_+2*peak) * above (time, t0+spb_*.45);\\nt0a  = if(is_beat,t0,t0a); t0 = if(is_beat,time,t0);\\npeak = if(is_beat,vol,peak*dec_med);\\nindex = (index + is_beat) %128;\\n\\nspb = min(t0-t0a + .01,2);\\nspb_ = if(is_beat,spb_ *.9 +.1*spb, spb_);\\n\\n\\nq20 = vol_;\\nq21 = above(vol,2.7*vol_);\\nq22 = max(0,peak-.0)+.01;\\nhpeak = hpeak*dec_med + (1-dec_med)*q21;\\nq23 = hpeak * (1+rand(8));\\nq24 = is_beat;\\nq25 = q22*(1+rand(8))/8;\\n\\nmindev = min(min(abs(spb-spb_),abs(spb*2-spb_)),abs(spb-spb_*2));\\nsdev = if(is_beat,sdev * .8 + .2*pow(mindev+.02,2),sdev);\\n\\nspeed = 1/fps/spb_;\\ntrel = trel + speed;\\nq10 = trel;\\n\\nwamp =  min(.001/sdev,.15);\\nwamp_ = wamp_*dec_slow + (1-dec_slow)*wamp;\\nq11 = sin(trel/2)*wamp_;\\nq12 = wamp_/2;\\n\\nrota = 2*wamp_*sin(trel/3);\\n//rota = .2*sin(wamp_*32);\\nq5 = cos(rota);\\nq6 = sin(rota);\\nq7 = -q6;\\nq8 = q5;\\n\\nq15 = -sin(trel*.5)*.05;\\nq16 = cos(trel)*wamp_/2;\\n\\nq19 = .1*sin(trel/12);\\n\\n//ODD PLANET MOVEMENT\\ntrig1 = bnot(vis)*bnot(rand(100*fps));\\nvis = if (trig1,1,vis*below(mov1,1));\\nq30 = vis;\\nmov1 = if (vis,mov1+2*speed/fps,-1);\\ndir = if(trig1,rand(100),dir); \\nq31 = .5+.5*cos(dir)*mov1;\\nq32 = .5+.5*sin(dir)*mov1;\\n\\nq29 = (2+sin(time/17)); //reflection water\\n\\nmonitor = wamp;","pixel_eqs_eel":"zoom = 1+.02*rad*q20;\\ndy = -.00;\\nwarp =.1; dx = .0;","warp":"mat2 ofs;\\nvec2 xlat_mutableuv2;\\nfloat xlat_mutablezv;\\n shader_body { \\n  mat2 tmpvar_1;\\n  tmpvar_1[uint(0)].x = texsize.z;\\n  tmpvar_1[uint(0)].y = 0.0;\\n  tmpvar_1[1u].x = 0.0;\\n  tmpvar_1[1u].y = texsize.w;\\n  ofs = (tmpvar_1 * 4.0);\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = ((uv.x - 0.5) + q19);\\n  tmpvar_2.y = (uv.y - 0.5);\\n  vec2 v_3;\\n  v_3.x = ofs[0].x;\\n  v_3.y = ofs[1].x;\\n  vec2 v_4;\\n  v_4.x = ofs[0].x;\\n  v_4.y = ofs[1].x;\\n  vec2 v_5;\\n  v_5.x = ofs[0].y;\\n  v_5.y = ofs[1].y;\\n  vec2 v_6;\\n  v_6.x = ofs[0].y;\\n  v_6.y = ofs[1].y;\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = (texture (sampler_main, (uv + v_3)) - texture (sampler_main, (uv - v_4))).z;\\n  tmpvar_7.y = (texture (sampler_main, (uv + v_5)) - texture (sampler_main, (uv - v_6))).z;\\n  xlat_mutablezv = (time * 0.08);\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = (0.02 * time);\\n  tmpvar_8.y = (-0.05 * time);\\n  xlat_mutableuv2 = ((3.0 * tmpvar_2) + tmpvar_8);\\n  vec3 tmpvar_9;\\n  tmpvar_9.xy = xlat_mutableuv2;\\n  tmpvar_9.z = xlat_mutablezv;\\n  vec3 tmpvar_10;\\n  tmpvar_10.xy = (xlat_mutableuv2 * vec2(2.0, 2.0));\\n  tmpvar_10.z = (xlat_mutablezv * 2.0);\\n  vec3 tmpvar_11;\\n  tmpvar_11.xy = (xlat_mutableuv2 * vec2(4.0, 4.0));\\n  tmpvar_11.z = (xlat_mutablezv * 3.0);\\n  vec3 tmpvar_12;\\n  tmpvar_12.xy = (xlat_mutableuv2 * vec2(8.0, 8.0));\\n  tmpvar_12.z = (xlat_mutablezv * 7.0);\\n  xlat_mutableuv2 = (tmpvar_2 + ((\\n    (((texture (sampler_noisevol_hq, tmpvar_9).z + (texture (sampler_noisevol_hq, tmpvar_10).z / 2.0)) + (texture (sampler_noisevol_hq, tmpvar_11).z / 4.0)) + (texture (sampler_noisevol_hq, tmpvar_12).z / 8.0))\\n   - 1.0) * 0.1));\\n  vec4 tmpvar_13;\\n  tmpvar_13.w = 1.0;\\n  tmpvar_13.xyz = (((\\n    (((0.2 + (\\n      (((1.0 + bass_att) * 0.01) / sqrt(dot (xlat_mutableuv2, xlat_mutableuv2)))\\n     * \\n      (1.0 + normalize(slow_roam_cos))\\n    .xyz)) + ((rand_preset.z - 0.5) * xlat_mutableuv2.y)) * 0.1)\\n   / 2.0) + (texture (sampler_main, \\n    (uv - (0.02 * tmpvar_7))\\n  ).xyz * 0.9)) - 0.01);\\n  ret = tmpvar_13.xyz;\\n }","comp":"float xlat_mutablerain;\\nvec3 xlat_mutableret1;\\nvec2 xlat_mutablers;\\nvec2 xlat_mutablers0;\\nvec2 xlat_mutableuv1;\\nvec2 xlat_mutableuv_wat;\\nfloat xlat_mutablewater;\\nfloat xlat_mutablez;\\n shader_body { \\n  vec2 uv_1;\\n  uv_1 = uv;\\n  float tmpvar_2;\\n  tmpvar_2 = (time * 0.25);\\n  vec2 tmpvar_3;\\n  tmpvar_3 = ((uv - 0.5) * aspect.wz);\\n  float tmpvar_4;\\n  float tmpvar_5;\\n  tmpvar_5 = (min (abs(\\n    (tmpvar_3.x / tmpvar_3.y)\\n  ), 1.0) / max (abs(\\n    (tmpvar_3.x / tmpvar_3.y)\\n  ), 1.0));\\n  float tmpvar_6;\\n  tmpvar_6 = (tmpvar_5 * tmpvar_5);\\n  tmpvar_6 = (((\\n    ((((\\n      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)\\n     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)\\n   * tmpvar_6) + 0.9999793) * tmpvar_5);\\n  tmpvar_6 = (tmpvar_6 + (float(\\n    (abs((tmpvar_3.x / tmpvar_3.y)) > 1.0)\\n  ) * (\\n    (tmpvar_6 * -2.0)\\n   + 1.570796)));\\n  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.x / tmpvar_3.y)));\\n  if ((abs(tmpvar_3.y) > (1e-08 * abs(tmpvar_3.x)))) {\\n    if ((tmpvar_3.y < 0.0)) {\\n      if ((tmpvar_3.x >= 0.0)) {\\n        tmpvar_4 += 3.141593;\\n      } else {\\n        tmpvar_4 = (tmpvar_4 - 3.141593);\\n      };\\n    };\\n  } else {\\n    tmpvar_4 = (sign(tmpvar_3.x) * 1.570796);\\n  };\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = ((0.3183098 * tmpvar_4) + tmpvar_2);\\n  tmpvar_7.y = (((\\n    (aspect.w * log(sqrt(dot (tmpvar_3, tmpvar_3))))\\n   * 0.7) + (0.3183098 * tmpvar_4)) - (tmpvar_2 * 4.0));\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (0.5 + (0.5 - abs(\\n    ((fract((tmpvar_7 * 0.5)) * 2.0) - 1.0)\\n  )));\\n  mat2 tmpvar_9;\\n  tmpvar_9[uint(0)] = _qb.xy;\\n  tmpvar_9[1u] = _qb.zw;\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = q15;\\n  tmpvar_10.y = q16;\\n  uv_1 = (((\\n    (((tmpvar_8 - 0.5) * tmpvar_9) * 0.7)\\n   * aspect.xy) + 0.5) + tmpvar_10);\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = 0.5;\\n  tmpvar_11.y = ((q11 + 0.6) + (q12 * (\\n    sin(((uv_1.x * 6.0) + q10))\\n   * \\n    cos(((uv_1.y * 8.0) + (time * 0.6)))\\n  )));\\n  vec2 tmpvar_12;\\n  tmpvar_12.x = (uv_1.x * 4.0);\\n  tmpvar_12.y = uv_1.y;\\n  vec2 tmpvar_13;\\n  tmpvar_13.x = (uv_1.x * 4.0);\\n  tmpvar_13.y = uv_1.y;\\n  xlat_mutablerain = (texture (sampler_noise_lq, ((tmpvar_12 * 0.2) - time)).x + texture (sampler_noise_lq, ((tmpvar_13 * 0.5) - time)).x);\\n  float tmpvar_14;\\n  tmpvar_14 = (time / 4.0);\\n  xlat_mutablerain = (xlat_mutablerain * clamp ((\\n    (q20 / 2.0)\\n   - \\n    abs(sin((tmpvar_8.x - tmpvar_14)))\\n  ), 0.0, 1.0));\\n  xlat_mutableuv1 = ((uv_1 - tmpvar_11) + (xlat_mutablerain * 0.01));\\n  float tmpvar_15;\\n  tmpvar_15 = clamp ((128.0 * xlat_mutableuv1.y), 0.0, 1.0);\\n  xlat_mutablez = (0.4 / xlat_mutableuv1.y);\\n  xlat_mutablers0.x = (xlat_mutableuv1.x * xlat_mutablez);\\n  xlat_mutablers0.y = xlat_mutablez;\\n  vec2 tmpvar_16;\\n  tmpvar_16.x = (xlat_mutablers0.x + tmpvar_14);\\n  tmpvar_16.y = (xlat_mutablez + (time * 4.0));\\n  xlat_mutablers = (tmpvar_16 * tmpvar_15);\\n  xlat_mutablewater = (texture (sampler_noise_hq, xlat_mutablers) + texture (sampler_noise_hq, ((xlat_mutablers / 4.0) - (time / 8.0)))).x;\\n  xlat_mutablewater = (xlat_mutablewater - 1.0);\\n  vec2 tmpvar_17;\\n  tmpvar_17.x = (xlat_mutableuv1.x + 0.5);\\n  tmpvar_17.y = abs((0.5 - xlat_mutableuv1.y));\\n  xlat_mutableuv_wat = (tmpvar_17 - ((0.2 * xlat_mutablewater) / pow (xlat_mutablez, 0.5)));\\n  xlat_mutableret1 = (((texture (sampler_main, uv_1).xyz * \\n    (1.0 - tmpvar_15)\\n  ) + (\\n    (((texture (sampler_main, xlat_mutableuv_wat).xyz * tmpvar_15) / pow (xlat_mutablez, 0.4)) * 2.0)\\n   * \\n    (1.0 - rand_preset.y)\\n  )) + ((\\n    ((rand_preset.y * (1.0 + (rand_preset.x * xlat_mutablewater))) * tmpvar_15)\\n   / xlat_mutablez) * vec3(0.0, 0.1, 0.1)));\\n  xlat_mutableret1 = (xlat_mutableret1 * (1.0 + (0.2 * xlat_mutablerain)));\\n  vec4 tmpvar_18;\\n  tmpvar_18.w = 1.0;\\n  tmpvar_18.xyz = (1.0 - exp((\\n    -(pow (xlat_mutableret1, vec3(1.5, 1.5, 1.5)))\\n   * 8.0)));\\n  ret = tmpvar_18.xyz;\\n }"}')},2628:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":5,"gammaadj":4.990001,"decay":1,"echo_zoom":0.999988,"wave_mode":7,"additivewave":1,"wave_dots":1,"wave_brighten":0,"wrap":0,"wave_a":0.997938,"wave_scale":1.990516,"wave_smoothing":0,"wave_mystery":1,"modwavealphastart":0.5,"modwavealphaend":1,"warpscale":0.999998,"zoomexp":0.999987,"fshader":1,"zoom":0.9999,"dy":0.00001,"warp":0.01,"wave_r":0.400001,"wave_g":0.4,"wave_y":1,"ob_size":0,"ob_r":0.300001,"ob_g":1,"ob_b":0.3,"ob_a":0.100001,"ib_size":0.005,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":0.5,"mv_x":8.960042,"mv_y":12.960033,"mv_dx":-0.26,"mv_dy":0.44,"mv_l":5,"mv_a":0},"shapes":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"warp=0;decay=1;wave_mystery=0;\\nvol = ((bass_att+mid_att+treb_att)/3+prevVol)/2;\\n\\n// -------------------------------- Beat Detective 007 ----------------------------------\\nsure=if(equal(sure,0),.6,sure);\\ninterval=if(equal(interval,0),40,interval);\\nlastbeat=if(equal(lastbeat,0),frame-FPS,lastbeat);\\ndbass=(bass-pbass)/FPS;\\nbeat=above(dbass,.6*maxdbass)*above(frame-lastbeat,FPS/3);\\nsure=if(beat*below(abs(frame-(interval+lastbeat)),FPS/5),\\nmin(.095+sure,1),beat*(sure-.095)+(1-beat)*sure*.9996);\\nsure=max(.5,sure);\\ncheat=if(above(frame,lastbeat+interval+ int(FPS/10))*above(sure,.91),1,cheat);\\nbeat=if(cheat,1,beat);\\nsure=if(cheat,.95*sure,sure);\\nmaxdbass=max(maxdbass*.999,dbass);\\nmaxdbass=max(.012,maxdbass);\\nmaxdbass=min(.02,maxdbass);\\ninterval=if(beat, frame-lastbeat,interval);\\nlastbeat=if(beat,frame-cheat*int(FPS/10),lastbeat);\\ncheat=0;\\npbass=bass;\\n// ----------------------------------------------------------------------------------------------\\nob_size = below(frame-lastBeat,FPS/8)*.08*(frame-lastBeat)/FPS;\\nf=abs(cos(time/8+.54+sin(time/3+1.075)));\\nob_r=1*f + 1*(1-f);\\nob_g=.3*f + 1*(1-f);\\nob_b=.3*f + .3*(1-f);\\n\\nq1= 3.1416*(wave_mystery+1)/2;\\nq2=.25*cos(time+abs(2*sin(time*2+2.311)*( vol-amt))*sin(time*7.45+.876));\\namt=amt+ .05*(vol-amt);\\nprevVol=vol;","pixel_eqs_eel":"x=x-.5;\\ny=-(y-.5);\\nttan1 = tan(q1+1.5708)*x-y+q2;\\nttan2 = tan(q1+1.5708);\\nIsLeftYtonosY = above(ttan1*(sign(3.1416-q1)),0);\\n\\ndist = abs(ttan1)/sqrt(ttan2*ttan2 + 1);\\ntotX=.5*cos(q1)*sign(IsLeftYtonosY-.5)*sqr(dist)/(.5-q2);\\ntotY=-.5*sin(q1)*sign(IsLeftYtonosY-.5)*sqr(dist)/(.5-q2);\\n\\ndx=dx+totX;\\ndy=dy+totY;\\nprevRot=q1;","warp":"","comp":""}')},5171:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":5,"gammaadj":4.990001,"decay":1,"echo_zoom":10.784553,"wave_mode":7,"additivewave":1,"wave_dots":1,"wave_brighten":0,"wrap":0,"wave_a":0.997938,"wave_scale":1.990516,"wave_smoothing":0,"wave_mystery":-1,"modwavealphastart":0.5,"modwavealphaend":1,"warpscale":0.999998,"zoomexp":0.999985,"fshader":1,"zoom":0.9999,"dy":0.00001,"warp":0.01,"wave_r":0.400001,"wave_g":0.4,"wave_y":1,"ob_size":0,"ob_r":0.300001,"ob_g":1,"ob_b":0.3,"ob_a":0.100001,"ib_size":0.005,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":0.5,"mv_x":8.960042,"mv_y":12.960033,"mv_dx":-0.26,"mv_dy":0.44,"mv_l":5,"mv_a":0},"shapes":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"flip=-1;","frame_eqs_eel":"warp=0;decay=1;\\nvol = (.75*(bass_att+mid_att+treb_att)/3+.25*prevVol);\\nprevAvgBass=avgBass;\\navgBass=avgBass + (bass-AvgBass)*0.01;\\nq4=max(avgBass*1.001-.999*prevAvgBass,0);\\nq4=min(q4,.006);\\n// -------------------------------- Beat Detective 007 ----------------------------------\\nsure=if(equal(sure,0),.6,sure);\\ninterval=if(equal(interval,0),40,interval);\\nlastbeat=if(equal(lastbeat,0),frame-FPS,lastbeat);\\ndbass=(bass-pbass)/FPS;\\nbeat=above(dbass,.6*maxdbass)*above(frame-lastbeat,FPS/3);\\nsure=if(beat*below(abs(frame-(interval+lastbeat)),FPS/5),\\nmin(.095+sure,1),beat*(sure-.095)+(1-beat)*sure*.9996);\\nsure=max(.5,sure);\\ncheat=if(above(frame,lastbeat+interval+ int(FPS/10))*above(sure,.91),1,cheat);\\nbeat=if(cheat,1,beat);\\nsure=if(cheat,.95*sure,sure);\\nmaxdbass=max(maxdbass*.999,dbass);\\nmaxdbass=max(.012,maxdbass);\\nmaxdbass=min(.02,maxdbass);\\ninterval=if(beat, frame-lastbeat,interval);\\nlastbeat=if(beat,frame-cheat*int(FPS/10),lastbeat);\\ncheat=0;\\npbass=bass;\\n// ----------------------------------------------------------------------------------------------\\nlastFlip=if( above(bass/avgBass,2)*above(frame-lastFlip,100)*beat, frame,lastFlip );\\nflip = if(equal(frame,lastFlip),abs(flip)-1, flip);\\nwave_mystery=flip;\\nob_size = below(frame-lastBeat,FPS/8)*.08*(frame-lastBeat)/FPS;\\nf=abs(cos(time/8+.54+sin(time/3+1.075)));\\nob_r=1*f + 1*(1-f);\\nob_g=.3*f + 1*(1-f);\\nob_b=.3*f + .3*(1-f);\\nf=(frame-lastbeat)/interval;\\nf=above(f,.8)*below(f,1)*f; f=max(0,f); f=min(f,1);\\n\\nwave_g=.4+.6*(f);\\nwave_b=.4+.6*(1-f);\\n\\nq1= 3.1416*(wave_mystery+1)/2;\\nq2=.25*cos(time+abs(2*sin(time*2+2.311)*( vol-amt))*sin(time*7.45+.876));\\nq3=-q2;\\n\\namt=amt+ .05*(vol-amt);\\nprevVol=vol;\\nBPM = BPM + .01*(60*FPS/interval - BPM);\\nmonitor = 0*pctg+1*BPM;","pixel_eqs_eel":"x=x-.5;\\ny=-(y-.5);\\nttan1 = tan(q1+1.5708)*(x-q3)-y+q2;\\nttan2 = tan(q1+1.5708);\\nIsLeftYtonosY = above(ttan1*(sign(3.1416-q1)),0);\\n\\ndist = abs(ttan1)/sqrt(ttan2*ttan2 + 1);\\ntotX=.5*cos(q1)*sign(IsLeftYtonosY-.5)*sqr(dist)/(.5-q2);\\ntotY=-.5*sin(q1)*sign(IsLeftYtonosY-.5)*sqr(dist)/(.5-q2);\\n\\ndx=dx+totX;\\ndy=dy+totY;\\nprevRot=q1;\\nzoom = 1-25*q4*sqrt(pow(.5-dist,3))/abs(.5-q2);","warp":"","comp":""}')},7748:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":0,"gammaadj":1.28,"decay":0.8,"echo_zoom":1,"echo_orient":3,"wave_brighten":0,"brighten":1,"wave_a":0.001,"wave_scale":1.001775,"wave_smoothing":0.9,"modwavealphastart":0.5,"modwavealphaend":1,"warpanimspeed":1.321288,"warpscale":1.986883,"zoomexp":0.8802,"zoom":0.9998,"warp":0.01,"sx":0.9999,"sy":0.9998,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0,"ob_r":1,"ob_g":1,"ob_b":0.5,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0.3,"ib_b":0,"mv_x":0,"mv_y":0.000001,"mv_l":1,"mv_g":0.91,"mv_b":0.71,"mv_a":0},"shapes":[{"baseVals":{"sides":60,"additive":1,"thickoutline":1,"rad":0.398722,"g":1,"b":0.7,"r2":1,"g2":0.8,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ax=0; ay=0; az=-30;\\n\\nbx = ax;\\nby = ay*cos(q1) - az*sin(q1);\\nbz = ay*sin(q1) + az*cos(q1);\\n\\nax = bx*cos(q2) - bz*sin(q2);\\nay = by;\\naz = bx*sin(q2) + bz*cos(q2);\\n\\nbx = ax*cos(q3) - ay*sin(q3);\\nby = ax*sin(q3) + ay*cos(q3);\\nbz = az;\\n\\nvx=bx; vy=by; vz=bz;\\n\\nx=vx/abs(vz-10)+.5;\\ny=vy/abs(vz-10)+.5;\\n\\na=below(vz,0);"},{"baseVals":{"enabled":1,"sides":60,"additive":1,"textured":1,"rad":0.559237,"ang":1.884956,"tex_ang":0.69115,"tex_zoom":2.348658,"g":0.1,"b":1,"a":0.2,"r2":1,"g2":0.05,"b2":0.4,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":60,"additive":1,"textured":1,"rad":1.54304,"ang":6.283185,"tex_ang":6.283185,"tex_zoom":0.305462,"r":0,"g":0.5,"b":0.6,"a":0.4,"g2":0,"a2":0.8,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"tex_ang=bass;"},{"baseVals":{"sides":6,"additive":1,"rad":0.1149,"g":1,"b":0.7,"r2":1,"g2":0.8,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"q8=-q8+1;\\nt=(frame%6+4);\\nsides=if(equal(t%2,0),6,60);\\n\\nr=equal(t,4)*.3+equal(t,6)*.1+equal(t,8)*.3;\\ng=equal(t,4)*.1+equal(t,6)*.5+equal(t,8)*.15;\\nb=equal(t,4)*.6+equal(t,6)*.3+equal(t,8)*.0;\\n\\nr2=equal(t,4)*.3+equal(t,6)*.1+equal(t,8)*.3;\\ng2=equal(t,4)*.1+equal(t,6)*.5+equal(t,8)*.15;\\nb2=equal(t,4)*.6+equal(t,6)*.3+equal(t,8)*.0;\\n\\nr=r+equal(t%2,1);\\ng=g+equal(t%2,1);\\nb=b+equal(t%2,1)*.7;\\n\\nr2=r2+equal(t%2,1);\\ng2=g2+equal(t%2,1)*.8;\\n\\nrad=equal(t,4)*.1+equal(t,5)*.14+equal(t,6)*.14+equal(t,7)*.18 +equal(t,8)*.12+equal(t,9)*.2;\\n\\nan=atan2(q8-.5,q7-.5);\\nang=0+equal(t%2,0)*2*an;\\nang=if(equal(t,6),-ang,ang);\\n\\nd=sqrt(sqr(q7-.5)+sqr(q8-.5));\\na=above(1-d,0)*sqrt(1-d);\\n\\nx=t*(.5-q7)*.1617+q7;\\ny=t*(.5-q8)*.1617+q8;"}],"waves":[{"baseVals":{"enabled":1,"usedots":1,"additive":1,"smoothing":0},"init_eqs_eel":"","frame_eqs_eel":"advance=advance+ 0.005;\\nadvance=if( above(advance,2) , 0, advance);\\nt1=advance","point_eqs_eel":"s=sample*6.28;\\n\\n//plot random x position via function of sample pos;\\nxp=sin(s)+sin(s*0.34)+sin(s*24.3)+sin(s*13.8);\\nxp=xp*0.20;\\n\\n//plot random y position via function of sample pos;\\nyp=cos(s)+sin(s*0.24)+cos(s*17.4)+sin(s*37.7);\\nyp=yp*0.20;\\n\\n//plot random z position via function of sample pos;\\nzp=cos(s)+cos(s*5.24)+cos(s*47.4)+cos(s*27.7);\\nzp=zp*0.25;\\n\\n//pull stars toward screen\\nzp=zp + 1 - t1;\\n\\n//correct when below 0\\nzp=if( below(zp,0) , zp+2 , zp );\\n\\n//darken far stars\\na=(1 - zp*0.5);\\n\\nzp=zp*0.7;\\n\\nx_screen=xp/zp + 0.5;\\ny_screen=yp/zp + 0.5;\\n\\nx=x_screen;\\ny=y_screen;\\n\\nr=1;\\ng=1;\\nb=1;\\n"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1,"smoothing":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ax = 10*.5*(sin(100*sample+1.865)+1)*sin(300*6.2831*sample+3.14*sample);\\nay = 10*.5*(sin(100*sample+5.23)+1)*cos(200*6.2831*sample+ 3.14*sample+.1454);\\naz = 5*(sin(100*sample+.234)+1)*sin(400*6.2831*sample+3.14*sample+1.84);\\n\\nbx = ax;\\nby = ay*cos(q1) - az*sin(q1);\\nbz = ay*sin(q1) + az*cos(q1);\\n\\nax = bx*cos(q2) - bz*sin(q2);\\nay = by;\\naz = bx*sin(q2) + bz*cos(q2);\\n\\nbx = ax*cos(q3) - ay*sin(q3);\\nby = ax*sin(q3) + ay*cos(q3);\\nbz = az;\\n\\nvx=bx; vy=by; vz=bz;\\n\\nx=vx/abs(vz-10)+.5;\\ny=vy/abs(vz-10)+.5;\\n\\na=above(vz,0)*(.05*(5-abs(az)))"},{"baseVals":{"enabled":1,"thick":1,"additive":1,"smoothing":0,"g":0.500001,"b":0.100001},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"t=above(sin(20*6.2831*sample+time*16),0);\\nax = (1.58+1.5*t*abs(value1))*cos(6.2831*sample);\\nay = 1.3*(1.58+1.5*t*abs(value2))*sin(6.2831*sample);\\naz = 0;\\n\\nbx = ax;\\nby = ay*cos(q1) - az*sin(q1);\\nbz = ay*sin(q1) + az*cos(q1);\\n\\nax = bx*cos(q2) - bz*sin(q2);\\nay = by;\\naz = bx*sin(q2) + bz*cos(q2);\\n\\nbx = ax*cos(q3) - ay*sin(q3);\\nby = ax*sin(q3) + ay*cos(q3);\\nbz = az;\\n\\nvx=bx; vy=by; vz=bz;\\n\\nx=vx/abs(vz-10)+.5;\\ny=vy/abs(vz-10)+.5;\\n\\nas=above(cos(q3+1.57)*cos(q2)*vx+sin(q3+1.57)*sin(q1)*vy+sin(q2)*vz,0);\\na=t*(.07*(1-as)+as);"},{"baseVals":{"enabled":1,"thick":1,"additive":1,"smoothing":0,"g":0.5,"b":0.1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"t=above(sin(20*6.2831*sample+time*16),0);\\nax = (1.58+1.5*t*abs(value1))*cos(6.2831*sample);\\nay = 0;\\naz = 1.2*(1.58+1.5*t*abs(value2))*sin(6.2831*sample);\\n\\nbx = ax;\\nby = ay*cos(q1) - az*sin(q1);\\nbz = ay*sin(q1) + az*cos(q1);\\n\\nax = bx*cos(q2) - bz*sin(q2);\\nay = by;\\naz = bx*sin(q2) + bz*cos(q2);\\n\\nbx = ax*cos(q3) - ay*sin(q3);\\nby = ax*sin(q3) + ay*cos(q3);\\nbz = az;\\n\\nvx=bx; vy=by; vz=bz;\\n\\nx=vx/abs(vz-10)+.5;\\ny=vy/abs(vz-10)+.5;\\n\\nas=above(cos(q3-1.57)*cos(q2)*vx+sin(q3-1.57)*sin(q1)*vy+sin(q2)*vz,0);\\na=t*(.07*(1-as)+as);"}],"init_eqs_eel":"","frame_eqs_eel":"st=if(equal(st,0),time-131,st);\\nmytime=time-st;\\n\\nphi=6.2831*(mytime+4.564)*.02;\\ntheta=6.2831*(mytime*.03+1.54);\\nrho=6.2831*abs(sin(mytime*0));\\n\\nq1=phi;\\nq2=theta;\\nq3=rho;\\n\\nax=0; ay=0; az=-30;\\nbx = ax;\\nby = ay*cos(q1) - az*sin(q1);\\nbz = ay*sin(q1) + az*cos(q1);\\n\\nax = bx*cos(q2) - bz*sin(q2);\\nay = by;\\naz = bx*sin(q2) + bz*cos(q2);\\n\\nbx = ax*cos(q3) - ay*sin(q3);\\nby = ax*sin(q3) + ay*cos(q3);\\nbz = az;\\nvx=bx; vy=by; vz=bz;\\n\\nq7=vx/abs(vz-10)+.5;\\nvy=-vy+1;\\nq8=vy/abs(vz-10)+.5;\\nq7=if(1-below(vz,0), -100,q7);\\nq8=if(1-below(vz,0), -100,q8);\\n//ob_size=1;\\n//ob_a=min(.005/(sqr(q7-.5)+sqr(q8-.5)),.8);\\nmonitor=mytime;","pixel_eqs_eel":"","warp":"","comp":""}')},7530:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":0,"gammaadj":1.63,"decay":0.85,"echo_zoom":0.999999,"echo_orient":3,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":1.001775,"wave_smoothing":0.9,"modwavealphastart":0.5,"modwavealphaend":1,"warpanimspeed":1.321288,"warpscale":1.986883,"zoomexp":0.8802,"fshader":1,"zoom":0.9998,"warp":0.01,"sx":0.9999,"sy":0.9998,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0,"ob_r":1,"ob_g":1,"ob_b":0.5,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0.3,"ib_b":0,"mv_x":4.586357,"mv_y":3.233833,"mv_dx":0.12204,"mv_dy":0.156041,"mv_l":0.211692,"mv_r":0.455835,"mv_g":0.481765,"mv_b":0.328534,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":60,"additive":1,"thickoutline":1,"rad":0.398722,"g":1,"b":0.7,"r2":1,"g2":0.8,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ax=0; ay=0; az=-30;\\n\\nbx = ax;\\nby = ay*cos(q1) - az*sin(q1);\\nbz = ay*sin(q1) + az*cos(q1);\\n\\nax = bx*cos(q2) - bz*sin(q2);\\nay = by;\\naz = bx*sin(q2) + bz*cos(q2);\\n\\nbx = ax*cos(q3) - ay*sin(q3);\\nby = ax*sin(q3) + ay*cos(q3);\\nbz = az;\\n\\nvx=bx; vy=by; vz=bz;\\n\\nx=vx/abs(vz-10)+.5;\\ny=vy/abs(vz-10)+.5;\\n\\n//a=below(vz,0);\\nx=.5;\\ny=.5;\\nrad=.1;"},{"baseVals":{"enabled":1,"sides":60,"additive":1,"textured":1,"rad":0.298682,"tex_ang":0.69115,"tex_zoom":1.500923,"r":0.2,"g":0.1,"b":1,"a":0,"r2":0.04,"g2":0.05,"b2":0.4,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":60,"additive":1,"textured":1,"rad":1.54304,"tex_ang":1.5707,"tex_zoom":1.50099,"r":0,"g":0.5,"b":0.6,"a":0,"g2":0,"a2":0.7,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"r=abs(cos(time*3.243+.434+sin(time*1.23+4.324)));\\ng=abs(cos(time*2.03+1.546+cos(time*3.01+1.98)));\\nb=.75*abs(sin(time*2.54+.65+sin(time*3.77+8)));"},{"baseVals":{"enabled":1,"sides":6,"additive":1,"rad":0.1149,"g":1,"b":0.7,"r2":1,"g2":0.8,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"q8=-q8+1;\\nt=(frame%6+4);\\nsides=if(equal(t%2,0),6,60);\\n\\nr=equal(t,4)*.3+equal(t,6)*.1+equal(t,8)*.3;\\ng=equal(t,4)*.1+equal(t,6)*.5+equal(t,8)*.15;\\nb=equal(t,4)*.6+equal(t,6)*.3+equal(t,8)*.0;\\n\\nr2=equal(t,4)*.3+equal(t,6)*.1+equal(t,8)*.3;\\ng2=equal(t,4)*.1+equal(t,6)*.5+equal(t,8)*.15;\\nb2=equal(t,4)*.6+equal(t,6)*.3+equal(t,8)*.0;\\n\\nr=r+equal(t%2,1);\\ng=g+equal(t%2,1);\\nb=b+equal(t%2,1)*.7;\\n\\nr2=r2+equal(t%2,1);\\ng2=g2+equal(t%2,1)*.8;\\n\\nrad=equal(t,4)*.1+equal(t,5)*.14+equal(t,6)*.14+equal(t,7)*.18 +equal(t,8)*.12+equal(t,9)*.2;\\n\\nan=atan2(q8-.5,q7-.5);\\nang=0+equal(t%2,0)*2*an;\\nang=if(equal(t,6),-ang,ang);\\n\\nd=sqrt(sqr(q7-.5)+sqr(q8-.5));\\na=above(1-d,0)*sqrt(1-d);\\n\\nx=t*(.5-q7)*.1617+q7;\\ny=t*(.5-q8)*.1617+q8;"}],"waves":[{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1,"scaling":0.999998,"smoothing":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ax=cos(100*sample+43.35+sin(231.54*sample+.543));\\nay=sin(431*sample+2.34+cos(443.54*sample+4.23));\\naz=sin(546*sample+74.24+sin(524.54*sample+23.987))+2*(q4+.2*time-int(q4+.2*time));\\naz=if(above(az,1),az-2,az);\\n\\nfx = .5+.5*ax/(1-az);\\nfy = .5+.5*ay/(1-az);\\n\\nx=fx;\\ny=fy;\\n\\n\\nr=1-.5*rand(100)/100;\\ng=1-.5*rand(100)/100;\\nb=1-.5*rand(100)/100;\\n\\na=pow((az+1)/2,3);"},{"baseVals":{"spectrum":1,"usedots":1,"thick":1,"additive":1,"scaling":0.999998,"smoothing":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"sw1=below(sample,.5);\\nsample=2*(sw1*sample+(1-sw1)*(sample-.5));\\n\\nax = 1-3.58*sample*sw1;\\nay = 0;//2*sin(sample*6.2831);\\naz = 0;\\n\\nbx = ax;\\nby = ay*cos(q1) - az*sin(q1);\\nbz = ay*sin(q1) + az*cos(q1);\\n\\nax = bx*cos(q2) - bz*sin(q2);\\nay = by;\\naz = bx*sin(q2) + bz*cos(q2);\\n\\nbx = ax*cos(q3) - ay*sin(q3);\\nby = ax*sin(q3) + ay*cos(q3);\\nbz = az;\\n\\nvx=bx; vy=by; vz=bz;\\n\\nx=vx/abs(vz-10)+.5;\\ny=vy/abs(vz-10)+.5;\\n\\nas=above(cos(q3+1.57)*cos(q2)*vx+sin(q3+1.57)*sin(q1)*vy+sin(q2)*vz,0);\\nas=1;\\na=1;"},{"baseVals":{"enabled":1,"thick":1,"additive":1,"smoothing":0,"g":0.500001,"b":0.100001},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"t=above(sin(20*6.2831*sample+time*16),0);\\nt=1;\\nax = (1.58+1.5*t*abs(value1))*cos(6.2831*sample);\\nay = 1.38*(1.58+1.5*t*abs(value2))*sin(6.2831*sample);\\naz = 0;\\n\\nbx = ax;\\nby = ay*cos(q1) - az*sin(q1);\\nbz = ay*sin(q1) + az*cos(q1);\\n\\nax = bx*cos(q2) - bz*sin(q2);\\nay = by;\\naz = bx*sin(q2) + bz*cos(q2);\\n\\nbx = ax*cos(q3) - ay*sin(q3);\\nby = ax*sin(q3) + ay*cos(q3);\\nbz = az;\\n\\nvx=bx; vy=by; vz=bz;\\n\\nx=vx/abs(vz-10)+.5;\\ny=vy/abs(vz-10)+.5;\\n\\nas=pow(sqrt(sqr(x-.5)+sqr(y-.5))*4,4);\\na=t*(.07*(1-as)+as);"},{"baseVals":{"enabled":1,"thick":1,"additive":1,"smoothing":0,"g":0.5,"b":0.1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"t=above(sin(20*6.2831*sample+time*16),0);\\nt=1;\\nax = (1.58+1.5*t*abs(value1))*cos(6.2831*sample);\\nay = 0;\\naz = 1.38*(1.58+1.5*t*abs(value2))*sin(6.2831*sample);\\n\\nbx = ax;\\nby = ay*cos(q1) - az*sin(q1);\\nbz = ay*sin(q1) + az*cos(q1);\\n\\nax = bx*cos(q2) - bz*sin(q2);\\nay = by;\\naz = bx*sin(q2) + bz*cos(q2);\\n\\nbx = ax*cos(q3) - ay*sin(q3);\\nby = ax*sin(q3) + ay*cos(q3);\\nbz = az;\\n\\nvx=bx; vy=by; vz=bz;\\n\\nx=vx/abs(vz-10)+.5;\\ny=vy/abs(vz-10)+.5;\\n\\nas=pow(sqrt(sqr(x-.5)+sqr(y-.5))*4,4);\\na=t*(.07*(1-as)+as);"}],"init_eqs_eel":"","frame_eqs_eel":"st=if(equal(st,0),time-131,st);\\nmytime=time-st;\\n\\nphi=6.2831*(mytime+4.564)*.02;\\ntheta=6.2831*(mytime*.03+1.54);\\nrho=6.2831*abs(sin(mytime*0));\\n\\nq1=phi;\\nq2=theta;\\nq3=rho;\\n\\nax=0; ay=0; az=-30;\\nbx = ax;\\nby = ay*cos(q1) - az*sin(q1);\\nbz = ay*sin(q1) + az*cos(q1);\\n\\nax = bx*cos(q2) - bz*sin(q2);\\nay = by;\\naz = bx*sin(q2) + bz*cos(q2);\\n\\nbx = ax*cos(q3) - ay*sin(q3);\\nby = ax*sin(q3) + ay*cos(q3);\\nbz = az;\\nvx=bx; vy=by; vz=bz;\\n\\nq7=vx/abs(vz-10)+.5;\\nvy=-vy+1;\\nq8=vy/abs(vz-10)+.5;\\nq7=if(1-below(vz,0), -100,q7);\\nq8=if(1-below(vz,0), -100,q8);\\nob_size=1;\\nob_a=min(.005/(sqr(q7-.5)+sqr(q8-.5)),.8);\\nmonitor=mytime;\\nzoom=1+.015*85/FPS;","pixel_eqs_eel":"","warp":"","comp":""}')},8310:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":3,"gammaadj":1.84,"decay":0.95,"echo_zoom":0.999993,"wave_thick":1,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":0.01,"wave_smoothing":0.9,"wave_mystery":0.3,"zoomexp":4.90483,"fshader":1,"zoom":0.999999,"warp":0.01,"ob_size":0,"ob_a":0.92,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_a":0},"shapes":[{"baseVals":{"sides":30,"additive":1,"rad":0.042497,"r":0.8,"g":0.1,"b":0.8,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":30,"rad":0.12202,"tex_zoom":0.999998,"g":0.3,"b":0.1,"a":0,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":30,"additive":1,"textured":1,"rad":0.244862,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ang=.45*cos(.6*time+.34+sin(2.54*time+1.02));\\nadditive=below(frame%5,4);\\n\\n\\n\\n\\nr2=.3*abs(cos(time*.543+7.34+sin(time*.123+1.75)));\\ng2=.3*abs(sin(time*.543+7.34+sin(time*.123+1.75)));\\nb2=.3*abs(cos(time*.543+7.34+cos(time*.123+1.75)));\\n\\n\\nhue=.1*time; // change this\\nh=6*(hue-int(hue));\\nsw1=below(h,1); sw2=(1-sw1)*below(h,2); sw3=(1-sw1)*(1-sw2)*below(h,3); sw4=(1-sw1)*(1-sw2)*(1-sw3)*below(h,4);\\nsw6=above(h,5); sw5=(1-sw1)*(1-sw2)*(1-sw3)*(1-sw4)*(1-sw6);\\nr=sw1+sw2*(2-h)+sw5*(h-4)+sw6;\\ng=sw1*h+sw2+sw3+sw4*(4-h);\\nb=sw3*(h-2)+sw4+sw5+sw6*(6-h);"},{"baseVals":{"textured":1,"rad":1.97879,"ang":3.1415,"tex_ang":4.209734,"tex_zoom":0.670417,"r":0,"a":0,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"additive=above(frame%10,0);\\nr2=1-.3*abs(cos(time*.543+7.34+sin(time*.123+1.75)));\\ng2=1-.3*abs(sin(time*.543+7.34+sin(time*.123+1.75)));\\nb2=1-.3*abs(sin(time*.543+7.34+cos(time*.123+1.75)));"}],"waves":[{"baseVals":{"enabled":1,"thick":1,"additive":1,"scaling":0.999998,"smoothing":0,"r":0.4,"g":0.4,"b":0.65},"init_eqs_eel":"","frame_eqs_eel":"t1=32;  // double num of rays\\nt2=.02*q4;  // size;\\n\\n\\nt5=6.2831*(.08*time-int(.08*time)); //speed\\nt8=0;\\n\\n\\nt3=-1+q7*.3333+.1667;\\nt4=-1+q8*.3333+.1667;\\n\\nt6=pow( q1,3);  // interpolation parameter","point_eqs_eel":"sample=.5*(0+sample);\\n\\nns=equal(t8%t1,0);\\n\\nccx = .85*sin(5.234+100*sample+t5)*cos(200*6.2831*sample+ 3.14*sample+2.45+t5);\\nccy = 1.5*sin(100*sample+0.456+t5)*sin(100*6.2831*sample+ 3.14*sample+1.12+t5);\\nccz = .85*sin(3.12+100*sample+t5)*cos(300*6.2831*sample +3.14*sample+.95+t5);\\n\\nrr=.075+.067*abs(sin(6.2831*ccy));\\nccx=ccx*(1-t6)+ (t3+rr*cos(sample*6.2831+6*time))*t6;\\nccz=ccz*(1-t6)+ (t4+rr*sin(sample*6.2831+6*time))*t6;\\n\\ncenx=(1-ns)*cenx+ns*(q4*ccx);\\nceny=(1-ns)*ceny+ns*(q2+q4*abs(ccy));\\ncenz=(1-ns)*cenz+ns*(q3+q4*ccz);\\ncentral=equal(t8%2,0);\\nangle=6.2831*(t8-1)/t1;\\n\\nax=cenx+(1-central)*q4*t2*cos(angle+.12*ceny);\\nay=ceny+(1-central)*q4*t2*sin(angle+.12*ceny);\\naz=cenz;\\na=central*above(t8,0)*.07*above(ceny,q2);\\n\\ninvz=1/(az+100);\\nx=.5+5*ax*invz;\\ny=.5+5*ay*invz;\\n\\nt8=(t8+1)%t1;"},{"baseVals":{"enabled":1,"thick":1,"additive":1,"scaling":0.999998,"smoothing":0,"r":0.4,"g":0.4,"b":0.65},"init_eqs_eel":"","frame_eqs_eel":"t1=32;  // double num of rays\\nt2=.02*q4;  // size;\\n\\n\\nt5=6.2831*(.08*time-int(.08*time)); //speed\\nt8=0;\\n\\n\\nt3=-1+q7*.3333+.1667;\\nt4=-1+q8*.3333+.1667;\\n\\nt6=pow( q1,3);  // interpolation parameter","point_eqs_eel":"sample=.5*(0+sample);\\n\\nns=equal(t8%t1,0);\\n\\nccx = .85*sin(5.234+100*sample+t5)*cos(200*6.2831*sample+ 3.14*sample+2.45+t5);\\nccy = 1.5*sin(100*sample+0.456+t5)*sin(100*6.2831*sample+ 3.14*sample+1.12+t5);\\nccz = .85*sin(3.12+100*sample+t5)*cos(300*6.2831*sample +3.14*sample+.95+t5);\\n\\nrr=.075+.067*abs(sin(6.2831*ccy));\\nccx=ccx*(1-t6)+ (t3+rr*cos(sample*6.2831+6*time))*t6;\\nccz=ccz*(1-t6)+ (t4+rr*sin(sample*6.2831+6*time))*t6;\\n\\ncenx=(1-ns)*cenx+ns*(q4*ccx);\\nceny=(1-ns)*ceny+ns*(q2+q4*abs(ccy));\\ncenz=(1-ns)*cenz+ns*(q3+q4*ccz);\\ncentral=equal(t8%2,0);\\nangle=6.2831*(t8-1)/t1;\\n\\nax=cenx+(1-central)*q4*t2*cos(angle+.12*ceny);\\nay=ceny+(1-central)*q4*t2*sin(angle+.12*ceny);\\naz=cenz;\\na=central*above(t8,0)*.07*above(ceny,q2);\\n\\ninvz=1/(az+100);\\nx=.5+5*ax*invz;\\ny=.5+5*ay*invz;\\n\\nt8=(t8+1)%t1;"},{"baseVals":{"enabled":1,"thick":1,"additive":1,"scaling":0.999998,"smoothing":0,"r":0.4,"g":0.4,"b":0.65},"init_eqs_eel":"","frame_eqs_eel":"t1=32;  // double num of rays\\nt2=.02*q4;  // size;\\n\\n\\nt5=6.2831*(.08*time-int(.08*time)); //speed\\nt8=0;\\n\\n\\nt3=-1+q7*.3333+.1667;\\nt4=-1+q8*.3333+.1667;\\n\\nt6=pow( q1,3);  // interpolation parameter","point_eqs_eel":"sample=.5*(1+sample);\\n\\nns=equal(t8%t1,0);\\n\\nccx = .85*sin(5.234+100*sample+t5)*cos(200*6.2831*sample+ 3.14*sample+2.45+t5);\\nccy = 1.5*sin(100*sample+0.456+t5)*sin(100*6.2831*sample+ 3.14*sample+1.12+t5);\\nccz = .85*sin(3.12+100*sample+t5)*cos(300*6.2831*sample +3.14*sample+.95+t5);\\n\\nrr=.075+.067*abs(sin(6.2831*ccy));\\nccx=ccx*(1-t6)+ (t3+rr*cos(sample*6.2831+6*time))*t6;\\nccz=ccz*(1-t6)+ (t4+rr*sin(sample*6.2831+6*time))*t6;\\n\\ncenx=(1-ns)*cenx+ns*(q4*ccx);\\nceny=(1-ns)*ceny+ns*(q2+q4*abs(ccy));\\ncenz=(1-ns)*cenz+ns*(q3+q4*ccz);\\ncentral=equal(t8%2,0);\\nangle=6.2831*(t8-1)/t1;\\n\\nax=cenx+(1-central)*q4*t2*cos(angle+.12*ceny);\\nay=ceny+(1-central)*q4*t2*sin(angle+.12*ceny);\\naz=cenz;\\na=central*above(t8,0)*.07*above(ceny,q2);\\n\\ninvz=1/(az+100);\\nx=.5+5*ax*invz;\\ny=.5+5*ay*invz;\\n\\nt8=(t8+1)%t1;"},{"baseVals":{"enabled":1,"thick":1,"additive":1,"scaling":0.999998,"smoothing":0,"r":0.4,"g":0.4,"b":0.65},"init_eqs_eel":"","frame_eqs_eel":"t1=32;  // double num of rays\\nt2=.02*q4;  // size;\\n\\n\\nt5=6.2831*(.08*time-int(.08*time)); //speed\\nt8=0;\\n\\n\\nt3=-1+q7*.3333+.1667;\\nt4=-1+q8*.3333+.1667;\\n\\nt6=pow( q1,3);  // interpolation parameter","point_eqs_eel":"sample=.5*(1+sample);\\n\\nns=equal(t8%t1,0);\\n\\nccx = .85*sin(5.234+100*sample+t5)*cos(200*6.2831*sample+ 3.14*sample+2.45+t5);\\nccy = 1.5*sin(100*sample+0.456+t5)*sin(100*6.2831*sample+ 3.14*sample+1.12+t5);\\nccz = .85*sin(3.12+100*sample+t5)*cos(300*6.2831*sample +3.14*sample+.95+t5);\\n\\nrr=.075+.067*abs(sin(6.2831*ccy));\\nccx=ccx*(1-t6)+ (t3+rr*cos(sample*6.2831+6*time))*t6;\\nccz=ccz*(1-t6)+ (t4+rr*sin(sample*6.2831+6*time))*t6;\\n\\ncenx=(1-ns)*cenx+ns*(q4*ccx);\\nceny=(1-ns)*ceny+ns*(q2+q4*abs(ccy));\\ncenz=(1-ns)*cenz+ns*(q3+q4*ccz);\\ncentral=equal(t8%2,0);\\nangle=6.2831*(t8-1)/t1;\\n\\nax=cenx+(1-central)*q4*t2*cos(angle+.12*ceny);\\nay=ceny+(1-central)*q4*t2*sin(angle+.12*ceny);\\naz=cenz;\\na=central*above(t8,0)*.07*above(ceny,q2);\\n\\ninvz=1/(az+100);\\nx=.5+5*ax*invz;\\ny=.5+5*ay*invz;\\n\\nt8=(t8+1)%t1;"}],"init_eqs_eel":"","frame_eqs_eel":"// -------------------------------- Beat Detective v0.07 ----------------------------------\\nsure=if(equal(sure,0),.6,sure);\\ninterval=if(equal(interval,0),40,interval);\\nlastbeat=if(equal(lastbeat,0),frame-FPS,lastbeat);\\ndbass=(bass-pbass)/FPS;\\nbeat=above(dbass,.6*maxdbass)*above(frame-lastbeat,FPS/3);\\nsure=if(beat*below(abs(frame-(interval+lastbeat)),FPS/5),\\nmin(.095+sure,1),beat*(sure-.095)+(1-beat)*sure*.9996);\\nsure=max(.5,sure);\\ncheat=if(above(frame,lastbeat+interval+ int(FPS/10))*above(sure,.91),1,cheat);\\nbeat=if(cheat,1,beat);\\nsure=if(cheat,.95*sure,sure);\\nmaxdbass=max(maxdbass*.999,dbass);\\nmaxdbass=max(.012,maxdbass);\\nmaxdbass=min(.02,maxdbass);\\ninterval=if(beat, frame-lastbeat,interval);\\nlastbeat=if(beat,frame-cheat*int(FPS/10),lastbeat);\\ncheat=0;\\npbass=bass;\\n// ----------------------------------------------------------------------------------------------\\n\\nwarp=0;\\nzoom=1.04;\\n\\nrnd=equal(frame%400,0);\\noffy=(1-rnd)*offy+rnd*(-3+rand(600)/100);\\noffz=(1-rnd)*offz+rnd*(-80-0*rand(1000)/1000);\\nsc=(1-rnd)*sc+rnd*(1+rand(500)/100);\\noffx=0;\\noffy=-3.1;\\noffz=-300+160*pow(contVol,.25);\\nsc=4;\\n\\nq2=offy; // y-offset\\nq3=offz; // z-offset\\nq4=sc; // scale\\n\\nq5=3.1415*cos(.05*time+.84+sin(time*.1+6.43)); // rot-y;\\nq6=.2;//.6-.45*abs(sin(time*.15+2.43+cos(time*.09+1.87))); // rot-x;\\n\\nq5=0;q6=0;\\n\\n\\nstime=if(equal(stime,0),time,stime );\\nmytime=time-stime;\\nphase = .1*mytime - int(.1*mytime);\\ntilex=if(below(phase,.025),1 + rand(4),tilex );\\ntilez=if(below(phase,.025),1 + rand(4),tilez );\\nq7=tilex;\\n\\ncontVol=((bass+mid+att)*.3333)*.02+contVol*.98;\\ncontVol=min(1,contVol);\\nzoom=1.01+.05*contVol;\\n\\ndarken=above(frame%3,0);\\n\\nc1=above(contvol,.7)*min(contvol-.7,.3);\\ndx=c1*.05*(-10+rand(20));\\ndy=c1*.05*(-10+rand(20));\\n\\nsolarize=0;\\ndarken=frame%2;\\nbrighten=1-darken;\\n//invert=beat;\\n//gamma=gamma+.5*sqrt(1-(frame-lastbeat)/interval);\\nmonitor=gamma;\\n\\nq8=min((frame-lastbeat)/interval,1);\\nq1=.05*cos(1.943*time+2.43+sin(1.83*time+2.01) );\\n\\nsx=1-2*beat*above(contVol,.8);\\nsy=1-2*beat*above(contVol,.8);\\ninvert=beat*above(contVol,.8);","pixel_eqs_eel":"//rot = q1*(2*rad-1);","warp":"","comp":""}')},7292:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":5,"gammaadj":1,"decay":0.898999,"echo_zoom":0.999993,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":0.370543,"wave_smoothing":0.9,"wave_mystery":-0.18,"warpanimspeed":0.842832,"warpscale":0.132664,"zoomexp":5.995782,"zoom":0.999999,"warp":0.01,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0.005,"ob_a":0.92,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"textured":1,"tex_ang":3.141593,"tex_zoom":1.0081,"r":0,"g2":0,"a2":1,"border_a":1},"init_eqs_eel":"","frame_eqs_eel":"rad=q2*2.6667;\\n\\nr=1;g=r;b=r;r2=r;g2=g;b2=b;\\n\\nx=.5+(q1-q2)*cos(q8);\\ny=.5+1.333*(q1-q2)*sin(q8);\\n\\nang=.6*q8;\\n\\n"},{"baseVals":{"enabled":1,"sides":100,"additive":1,"rad":0.496295,"tex_ang":1.570796,"tex_zoom":1.0081,"g":1,"b":1,"r2":0.3,"g2":0.3,"b2":0.6,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"t=frame%4;\\n\\nx=below(t,2)*.1+above(t,1)*.9;\\ny=(t%2)*.1+(1-t%2)*.9;\\n\\na=pow(q6,20);"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t=fram"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t=fram"}],"waves":[{"baseVals":{"enabled":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"\\nt8=1; // scale","point_eqs_eel":"x=q1*cos(6.2831*sample);\\ny=q1*sin(6.2831*sample);\\n\\nx=x*t8+.5;\\ny=y*t8*1.333+.5;\\n\\nhue=.1*q8+2*sample; // change this\\nh=6*(hue-int(hue));\\nsw1=below(h,1); sw2=(1-sw1)*below(h,2); sw3=(1-sw1)*(1-sw2)*below(h,3); sw4=(1-sw1)*(1-sw2)*(1-sw3)*below(h,4);\\nsw6=above(h,5); sw5=(1-sw1)*(1-sw2)*(1-sw3)*(1-sw4)*(1-sw6);\\nr=sw1+sw2*(2-h)+sw5*(h-4)+sw6;\\ng=sw1*h+sw2+sw3+sw4*(4-h);\\nb=sw3*(h-2)+sw4+sw5+sw6*(6-h);\\n\\nrr=.1;\\nd1=below(sample,.025)+above(sample,.975);\\nd1=d1+below(sample,.275)*above(sample,.225);\\nd1=d1+below(sample,.525)*above(sample,.475);\\nd1=d1+below(sample,.775)*above(sample,.725);\\nr=(1-d1)*r;\\ng=(1-d1)*g;\\nb=(1-d1)*b;"},{"baseVals":{"enabled":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"t1=(q1-q2)*cos(q8);\\nt2=(q1-q2)*sin(q8);\\n\\nt8=1; //  scale\\n\\nt7=min(.2+.8*abs(tan(q8/6.2831)),1);\\n\\n","point_eqs_eel":"x=q2*cos(6.2831*sample);\\ny=q2*sin(6.2831*sample);\\n\\nx=x+t1;\\ny=y+t2;\\n\\nx=x*t8+.5;\\ny=y*t8*1.333+.5;\\n\\nn=2;\\n\\nhue=.1*q8+n*sample+0*cos(2*q8); // change this\\nh=6*(hue-int(hue));\\nsw1=below(h,1); sw2=(1-sw1)*below(h,2); sw3=(1-sw1)*(1-sw2)*below(h,3); sw4=(1-sw1)*(1-sw2)*(1-sw3)*below(h,4);\\nsw6=above(h,5); sw5=(1-sw1)*(1-sw2)*(1-sw3)*(1-sw4)*(1-sw6);\\nr=sw1+sw2*(2-h)+sw5*(h-4)+sw6;\\ng=sw1*h+sw2+sw3+sw4*(4-h);\\nb=sw3*(h-2)+sw4+sw5+sw6*(6-h);\\nr=t7*r;\\ng=t7*g;\\nb=t7*b;"},{"baseVals":{"enabled":1,"thick":1,"additive":1,"smoothing":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"t1=below(sample,.5);\\na = below(sample,.47)+above(sample,.53);\\nsample=t1*2*sample+(1-t1)*2*(sample-.5);\\n\\nx=sample*.18;\\ny=.5+.2*(value1+value2);\\n\\nx=t1*(x+0)+(1-t1)*(x+.82);\\n\\nr=1;g=.2;b=0;"},{"baseVals":{"enabled":1,"thick":1,"additive":1,"smoothing":0},"init_eqs_eel":"","frame_eqs_eel":"t5=-q8","point_eqs_eel":"t1=below(sample,.5);\\na = below(sample,.47)+above(sample,.53);\\nsample=t1*2*sample+(1-t1)*2*(sample-.5);\\n\\nx=.5+.2*(value1+value2);\\ny=sample*.18;\\n\\ny=t1*(y-.11)+(1-t1)*(y+.93);\\n\\nr=1;g=.2;b=0;"}],"init_eqs_eel":"contbass=.7;","frame_eqs_eel":"decay=.99; zoom=1; warp=0;\\n\\ncoef=1/FPS;\\ncontbass=(1-.1*coef)*contbass+.1*coef*bass;\\naddtime=above(contbass-pcontbass,0);\\naddtime=min(10*addtime*(contbass-pcontbass)*FPS,1);\\nmytime=mytime+(1/FPS)*(1+addtime);\\n\\nq1=.34641-.015;\\n\\n\\nq6=min(contbass/1.2,1);\\nq2=.278182*.5+.18*q6;\\n\\nq8=mytime;\\n\\npcontbass=contbass;\\nmonitor=contbass;\\n\\nzoom=1.002;\\n\\nmonitor=q6;","pixel_eqs_eel":"t=(below(x,.2)+above(x,.8))*below( abs(y-.5),.1);\\nt=t+below( abs(x-.5),.1)*(above(y,.9)+below(y,.1));\\n\\nwarp=above(rad,.65)*below(rad,.75)*(1-t);","warp":"","comp":""}')},279:e=>{"use strict";e.exports=JSON.parse('{"version":1,"baseVals":{"rating":1,"gammaadj":1,"decay":0.898999,"echo_zoom":0.999993,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":0.411715,"wave_smoothing":0.9,"wave_mystery":-0.18,"fshader":0.3,"zoom":0.999999,"warp":0.01,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0.005,"ob_a":0.92,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":100,"additive":1,"textured":1,"rad":1.773681,"tex_ang":3.141593,"tex_zoom":1.244713,"r":0,"a":0,"r2":1,"b2":1,"a2":0.5},"init_eqs_eel":"","frame_eqs_eel":"/////////// new hue2rgb algorithm ////////////\\nt=time;\\nr2=max(min(-1+.955*acos(cos(t)),1),0);\\ng2=max(min(-1+.955*acos(cos(t+2.0942)),1),0);\\nb2=max(min(-1+.955*acos(cos(t+4.1883)),1),0);\\n//////////////////////////////////////////////\\n\\nr=r2;\\ng=g2;\\nb=b2;\\n\\na2=.25*(1-.5*above(q1,1)*min(q1-1,2));\\na=below(q1,1)*sqrt(q1)*.07*a2;"}],"waves":[{"baseVals":{"enabled":1,"additive":1,"g":0.25,"b":0.12},"init_eqs_eel":"","frame_eqs_eel":"bt=bt+(.5+2*above(bass-pbass,0)*(bass-pbass))/FPS;\\npbass=bass;\\n\\nt1=bt; //mytime\\nt2=q1;\\nt3=.3*q1;","point_eqs_eel":"t=t1+t2*(1-sample);\\n\\nox=.5+(.3+.05*sample)*cos(t+.65+3.1415*sin(1.7*t+.98))*sin(1.32*t+3.21);\\noy=.5+(.3+.05*sample)*1.25*sin(.78*t+1.71)*cos(.91*t+3.09+3.1415*sin(1.49*t+.43));\\n\\nang=atan2( (py-oy),(px-ox) );\\nl=tan(ang);\\nx2=.5+(.3-.05*sample)*cos(t+.65+3.1415*sin(1.7*t+.98))*sin(1.32*t+3.21);\\ny2=.5+(.3-.05*sample)*1.25*sin(.78*t+1.71)*cos(.91*t+3.09+3.1415*sin(1.49*t+.43));\\nsum = (l*x2-y2+oy-l*ox)*sign(ang)*sign(l);\\ndir=-1+2*above(sum,-.001);\\n\\nxtrudx=(1-counter%2)*t3*sample*cos(ang+dir*1.5707)*abs(value1+value2);\\nxtrudy=(1-counter%2)*t3*sample*sin(ang+dir*1.5707)*abs(value1+value2);\\n\\nx=ox+xtrudx;\\ny=oy+xtrudy;\\n\\npx=ox;\\npy=oy;\\n\\ncounter=1-counter;\\na=sqr(sample);"},{"baseVals":{"enabled":1,"additive":1,"g":0.25,"b":0.12},"init_eqs_eel":"","frame_eqs_eel":"bt=bt+(.5+2*above(bass-pbass,0)*(bass-pbass))/FPS;\\npbass=bass;\\n\\nt1=bt; //mytime\\nt2=q1;\\nt3=.3*q1;","point_eqs_eel":"t=t1+t2*(1-sample);\\n\\nox=.5+(.3-.05*sample)*cos(t+.65+3.1415*sin(1.7*t+.98))*sin(1.32*t+3.21);\\noy=.5+(.3-.05*sample)*1.25*sin(.78*t+1.71)*cos(.91*t+3.09+3.1415*sin(1.49*t+.43));\\n\\nang=atan2( (py-oy),(px-ox) );\\nl=tan(ang);\\nx2=.5+(.3+.05*sample)*cos(t+.65+3.1415*sin(1.7*t+.98))*sin(1.32*t+3.21);\\ny2=.5+(.3+.05*sample)*1.25*sin(.78*t+1.71)*cos(.91*t+3.09+3.1415*sin(1.49*t+.43));\\nsum = (l*x2-y2+oy-l*ox)*sign(ang)*sign(l);\\ndir=-1+2*above(sum,-.001);\\n\\nxtrudx=(counter%2)*t3*sample*cos(ang+dir*1.5707)*abs(value1+value2);\\nxtrudy=(counter%2)*t3*sample*sin(ang+dir*1.5707)*abs(value1+value2);\\n\\nx=ox+xtrudx;\\ny=oy+xtrudy;\\n\\npx=ox;\\npy=oy;\\n\\ncounter=1-counter;\\na=sqr(sample);"},{"baseVals":{"enabled":1,"additive":1,"r":0.12,"g":0.25},"init_eqs_eel":"","frame_eqs_eel":"tt=tt+(.5+2*above(treb-ptreb,0)*(treb-ptreb))/FPS;\\nptreb=treb;\\n\\nt1=tt;\\nt2=q1;\\nt3=.3*q1;","point_eqs_eel":"t=t1+t2*(1-sample);\\n\\nox=.5+(.3+.05*sample)*cos(.78*t+2.09+3.1415*sin(1.39*t+.91))*sin(1.72*t+1.43);\\noy=.5+(.3+.05*sample)*1.25*sin(1.41*t+.43)*cos(1.29*t+2.9+3.1415*sin(.93*t+2.6));\\n\\n\\nang=atan( (py-oy)/(px-ox) );\\n\\nl=tan(ang);\\nx2=.5+(.3-.05*sample)*cos(.78*t+2.09+3.1415*sin(1.39*t+.91))*sin(1.72*t+1.43);\\ny2=.5+(.3-.05*sample)*1.25*sin(1.41*t+.43)*cos(1.29*t+2.9+3.1415*sin(.93*t+2.6));\\nsum = (l*x2-y2+oy-l*ox)*sign(ang)*sign(l);\\ndir=-1+2*above(sum,-.001);\\n\\nxtrudx=(1-counter%2)*t3*sample*cos(ang+dir*1.5707)*abs(value1+value2);\\nxtrudy=(1-counter%2)*t3*sample*sin(ang+dir*1.5707)*abs(value1+value2);\\n\\nx=ox+xtrudx;\\ny=oy+xtrudy;\\n\\npx=ox;\\npy=oy;\\n\\ncounter=1-counter;\\na=sqr(sample);"},{"baseVals":{"enabled":1,"additive":1,"r":0.12,"g":0.25},"init_eqs_eel":"","frame_eqs_eel":"tt=tt+(.5+2*above(treb-ptreb,0)*(treb-ptreb))/FPS;\\nptreb=treb;\\n\\nt1=tt;\\nt2=q1;\\nt3=.3*q1;","point_eqs_eel":"t=t1+t2*(1-sample);\\n\\nox=.5+(.3-.05*sample)*cos(.78*t+2.09+3.1415*sin(1.39*t+.91))*sin(1.72*t+1.43);\\noy=.5+(.3-.05*sample)*1.25*sin(1.41*t+.43)*cos(1.29*t+2.9+3.1415*sin(.93*t+2.6));\\n\\n\\nang=atan( (py-oy)/(px-ox) );\\nl=tan(ang);\\nx2=.5+(.3+.05*sample)*cos(.78*t+2.09+3.1415*sin(1.39*t+.91))*sin(1.72*t+1.43);\\ny2=.5+(.3+.05*sample)*1.25*sin(1.41*t+.43)*cos(1.29*t+2.9+3.1415*sin(.93*t+2.6));\\nsum = (l*x2-y2+oy-l*ox)*sign(ang)*sign(l);\\ndir=-1+2*above(sum,-.001);\\n\\nxtrudx=(1-counter%2)*t3*sample*cos(ang+dir*1.5707)*abs(value1+value2);\\nxtrudy=(1-counter%2)*t3*sample*sin(ang+dir*1.5707)*abs(value1+value2);\\n\\nx=ox+xtrudx;\\ny=oy+xtrudy;\\n\\npx=ox;\\npy=oy;\\n\\ncounter=1-counter;\\na=sqr(sample);"}],"init_eqs_eel":"","frame_eqs_eel":"// -------------------------------- Beat Detective v0.07 ----------------------------------\\nsure=if(equal(sure,0),.6,sure);\\ninterval=if(equal(interval,0),40,interval);\\nlastbeat=if(equal(lastbeat,0),frame-FPS,lastbeat);\\ndbass=(bass-pbass)/FPS;\\nbeat=above(dbass,.6*maxdbass)*above(frame-lastbeat,FPS/3);\\nsure=if(beat*below(abs(frame-(interval+lastbeat)),FPS/5),\\nmin(.095+sure,1),beat*(sure-.095)+(1-beat)*sure*.9996);\\nsure=max(.5,sure);\\ncheat=if(above(frame,lastbeat+interval+ int(FPS/10))*above(sure,.91),1,cheat);\\nbeat=if(cheat,1,beat);\\nsure=if(cheat,.95*sure,sure);\\nmaxdbass=max(maxdbass*.999,dbass);\\nmaxdbass=max(.012,maxdbass);\\nmaxdbass=min(.02,maxdbass);\\ninterval=if(beat, frame-lastbeat,interval);\\nlastbeat=if(beat,frame-cheat*int(FPS/10),lastbeat);\\ncheat=0;\\npbass=bass;\\n// ----------------------------------------------------------------------------------------------\\n\\nwarp=0;\\ngamma=1.1;\\ndt=1/FPS;\\n\\nmytime=mytime+dt;\\ncontvol=min( max(.5, (1-.5*dt)*contvol+.5*dt*(bass+mid+treb)*.333 ) ,2 ) ;\\nq1=contvol;\\nq2=mytime;\\nq8=beat;\\n\\ndecay=.935-above(q1,1.5)*(q1-1.5)*.03;\\nmonitor=q1;","pixel_eqs_eel":"zoom=1+ .1*(rad-.5)*abs(rad-.5);","warp":"","comp":""}')}},n={};function a(t){if(n[t])return n[t].exports;var s=n[t]={exports:{}};return e[t](s,s.exports,a),s.exports}return a.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return a.d(n,{a:n}),n},a.d=(e,n)=>{for(var t in n)a.o(n,t)&&!a.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:n[t]})},a.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),a.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a(2744)})()}));